{"version":3,"sources":["webpack:///cc.en.bundle.js","webpack:///webpack/bootstrap 3738995508ff348004e5","webpack:///./src/helpers/dom/DomUtilities.ts","webpack:///./src/Constants.ts","webpack:///./src/helpers/Cookie.ts","webpack:///./src/SurveyManager.ts","webpack:///./src/helpers/Request.ts","webpack:///./src/helpers/filters/LanguageTextFilter.ts","webpack:///./src/Config.ts","webpack:///./src/helpers/templates.ts","webpack:///./src/helpers/filters/filter-utils.ts","webpack:///./src/helpers/dom/Select.ts","webpack:///./src/helpers/filters/ConditionalFlowFilter.ts","webpack:///./src/polyfills/ccsdk.polyfill.ts","webpack:///./src/CCSDKEntry.ts","webpack:///./src/Survey.ts","webpack:///./src/SurveyHandler.ts","webpack:///./src/css/main.scss","webpack:///./node_modules/rtl-css-loader/lib/css-base.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./src/helpers/filters/ConditionalTextFilter.ts","webpack:///./src/helpers/dom/DomSurvey.ts","webpack:///./src/helpers/dom/Theme.ts","webpack:///./src/helpers/dom/Slider.ts","webpack:///./src/TriggerManager.ts","webpack:///./src/Triggers.ts","webpack:///./src/helpers/TriggerUtils.ts","webpack:///./src/helpers/tracking.ts"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","value","templates_1","DomUtilities","selector","document","querySelectorAll","appendStyle","css","head","getElementsByTagName","style","createElement","type","styleSheet","cssText","appendChild","createTextNode","remove","el","parentNode","removeChild","removeAll","elements","Array","forEach","removeClassAll","className","_this","this","removeClass","addClassAll","addClass","classList","replace","RegExp","split","join","add","toggleClass","contains","hasClass","test","ready","fn","attachEvent","readyState","addEventListener","getParents","parentSelector","undefined","parents","push","listener","evt","sel","handler","selectorMatches","Element","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","indexOf","internalHandler","event","t","target","initListener","id","cb","checkIfListenerExists","ar","_i","ar_1","length","on","off","removeEventListener","removeListener","removeAllListeners","ar_2","trigger","eventName","data","CustomEvent","detail","createEvent","initCustomEvent","dispatchEvent","removeTrigger","shadeBlendConvert","from","to","sbcRip","RGB","slice","parseFloat","r","parseInt","Math","round","h","b","f","toString","hexToRGB","hex","alpha","substr","map","g","arrayContains","needle","findNaN","index","item","generateSelectOptions","arr","translatedArr","isArray","res","translatedOpt","generateLanguageSelectOptions","checkOptionContainsImage","opt","generateRadioImageOptions","optHtml","templates","option_radio_image","generateRadioIgnoreImageOptions","option_radio","generateRadioOptions","generateCheckboxImageOptions","option_checkbox_image","generateCheckboxIgnoreImageOptions","option_checkbox","generateCheckboxOptions","Constants","CCTriggerPageStartTime","CCTriggerPageElapsedTime","CCTriggerSiteStartTime","CCTriggerSiteElapsedTime","CCTriggerSitePageViewCount","CCTriggerIndividualPageViewCount","SURVEY_IMPRESSION_EVENT","SURVEY_START_EVENT","SURVEY_DATA_EVENT","SURVEY_END_EVENT","SURVEY_CLOSE_EVENT","SURVEY_QUESTION_EVENT","SURVEY_ANSWER_EVENT","SURVEY_CLICK_EVENT","GRANT_TYPE","AUTHORIZATION","AUTHORIZATION_BEARER","SURVEY_CLIENT","Cookie","set","days","path","date","Date","setTime","getTime","expires","toUTCString","dir","cookie","nameEQ","ca","charAt","substring","delete","getParameterByName","url","window","location","href","regex","results","exec","decodeURIComponent","SurveyManager","initializeSurvey","surveyId","surveyInstances","console","error","setupSurvey","addSurvey","ccsdkDebug","log","surveyQueue","processQueueInterval","setInterval","processQueueIntervalCB","removeSurvey","survey","splice","clearInterval","globalSurveyRunning","pop","setSurveyRunning","globalSurveyStartTime","unsetSurveyRunning","makeRequest","method","postParams","headers","successcb","errorcb","xhr","XMLHttpRequest","open","onload","status","response","match","JSON","parse","statusText","onerror","keys","key","setRequestHeader","send","RequestHelper","getWithHeaders","postWithHeaders","stringify","post","LanguageTextFilter","translateQuestionText","surveyHandler","question","ccsdk","config","language","translated","text","qText","translateMessages","surveyData","translateDisplayLegend","displayLegend","translateMultiSelect","multiSelect","translatedOptions_1","x","translateMultiSelectOption","option","effectiveMultiselect","Config","API_URL","SURVEY_BY_TOKEN","SURVEY_PARTIAL_RESPONSE","CDN_URL","CDN_ASSET_URL","POST_LOGIN_TOKEN","GET_SURVEY_THROTTLE_LOGIC","POST_THROTTLING","POST_THROTTLING_ADD_ENTRIES","POST_SURVEY_FINAL","GET_CAMPAIGN","QuestionSurvey","QuestionStart","QuestionSingleline","QuestionNumber","QuestionMultiline","QuestionCheckbox","QuestionRadio","QuestionRadioImage","QuestionScale","QuestionCSATAgreement5","QuestionCSATSatisfaction5","QuestionNPS","QuestionSelect","QuestionMultiSelect","QuestionSmile","QuestionSmileInverted","QuestionStar","QuestionSlider","OptionRadioImage","OptionRadio","OptionCheckbox","OptionCheckboxImage","ThankYou","LanguageSelector","question_survey","question_start","question_text","question_number","question_scale","question_csat_agreement_5","question_csat_satisfaction_5","question_nps","question_multi_line_text","question_multi_select","question_radio","question_radio_image","question_checkbox","question_select","question_smile_5","question_smile_5_inverted","question_star_5","question_slider","thankyou","language_selector","isAnd","filterQuestion","groupBy","toUpperCase","isOr","isNumberCheck","answerCheck","doesSatisfy","answer","getAnswerForQuestionId","questionId","toLowerCase","textInput","iFoundAll","getQuestionById","questionAnswerText","_a","aAnswer","displayType","numberInput","number","questionCompare","a","sequence","checkLanguage","fOption","DomUtilities_1","LanguageTextFilter_1","Select","qId","listeners","init","util","$body","$html","select","parent","getAttribute","self","classes","template","options","innerHTML","insertAdjacentHTML","setupListeners","ref2","e","selfOption","selectOptions","selectWrapper","selectionTrigger","selectedOptionText","textContent","selectedValueText","addOrRemoveFromList","setAttribute","ref","ccSelect","stopPropagation","destroyListeners","setValue","selectTrigger","selectedValueList","translatedSelection","selectOption","removeOption","csv","allOptions","allOptions_1","domOptions","listAsString","list","itemIndex","filter_utils_1","ConditionalFlowFilter","aAddedCount","aRemovedCount","getConditionalSurveyQuestions","aQuestion","conditionalFilter","iSatisfied","iFailed","_b","_c","filterquestions","aFilterByQuestion","surveyQuestions","getSurveyQuestions","removeAnswer","sort","toStr","isCallable","toInteger","Number","isNaN","isFinite","floor","abs","maxSafeInteger","pow","toLength","len","min","max","arrayLike","C","items","TypeError","T","mapFn","arguments","kValue","A","k","params","bubbles","cancelable","Event","includes","searchElement","fromIndex","y","surveyToken","trim","Cookie_1","isActive","SurveyManager_1","Survey_1","Survey","tracking","trackEvent","token","isMobile","action","destroy","dom","callback","prefill","restArgs","apply","concat","prefillByTag","questionTag","prefillByNote","questionNote","show","hide","localCCSDK","innerWidth","CCSDK","queue","q","args","functionName","queue_1","eventCCReady","initEvent","SurveyHandler_1","DomSurvey_1","Constants_1","TriggerManager_1","Triggers_1","Request_1","Config_1","tracking_1","requester","isThrottled","surveyDone","surveyStatus","surveyRunning","thorttlingLogic","MatomoTracker","textDirection","triggers","Triggers","TriggerManager","SurveyHandler","brandColor","setHtmlTextDirection","setDisplayOptions","username","password","cssSelector","setConditionalTriggers","getSurveyThrottlingLogic","getThrottleUrl","loginData","access_token","checkThrottling","inputIds","uniqueIDQuestionIdOrTag","logics","filter","postThrottleUrl","throttleResponse","addThrottlingEntries","isOpen","addThrottleUrl","debug","user","mobile","emailId","customId","surveySentDate","surveyOpenDate","channel","isOpened","initSurvey","ccSDKElement","querySelector","ccSDKDir","direction","surveyDisplay","position","welcomePopupAnimation","surveyPosition","search","getSurveyData","questions","preFill","skipWelcomePage","hideLoader","initSurveyQuestions","displayWelcomeQuestion","fetchQuestions","DomSurvey","setTheme","keepAlive","onImpressionEvent","startSurvey","setCoolDownPeriod","surveyStartTime","acceptAnswers","attachSurvey","initSurveyDom","onSurveyStartEvent","restOfArgs","prefillObject","fillPrefillDirect","fillPrefill","fillPrefillByNote","enableClickTrigger","count","enablePageCountTrigger","count2","enableSiteCountTrigger","enablePageTimeTrigger","enableSiteTimeTrigger","enablePopUpByURLPatternTrigger","enablePopUpByNotURLPatternTrigger","enablePopUpByUTMPatternTrigger","enableScrollPixelsTrigger","ConditionalTextFilter_1","Select_1","ConditionalFlowFilter_1","answers","surveyAnswers","_prefillsPartiallyPosted","surveyPopupAnimation","domListeners","questionsToDisplay","prefillQuestions","conditionalQuestions","prefillResponses","prefillWithTags","prefillWithNote","prefillDirect","displayThankYouCb","finalPost","thankyouHtml","thankyouText","startText","startButtonText","branding","replaceInQuestionsContainer","thankyouContainer","onSurveyEndEvent","setTimeout","destroySurveyCb","acceptAnswersCb","postPartialAnswer","domSelectElements","setQIndex","randomNumber","random","surveyUrl","setupPrefill","setupSurveyContainer","cleanSurvey","displayQuestions","displayThankYou","destroySurvey","fillPrefillQuestionObject","surveyHtml","appendInBody","displayQuestionSelector","warningWelcomeText","onSurveyImpressionEvent","welcomeHtml","welcomeText","getElementById","showWelcomeContainer","welcomeQuestionDisplayTime","welcomeInterval","checkWelcomeQuestionDisplay","campaign","coolDownPeriod","now","killWelcomeQuestion","cancelKillWelcomeQuestion","displayLanguageSelector","options1","cTemplate1","$questionContainer","firstChild","languageSelect","submitBtn","selectRes","removePrevListener","languageSelect2","isRTL","loadFirstQuestion","filterQuestions","ccSurvey","getElementsByClassName","checkConditionals","compiledTemplate","compileTemplate","isPrefillQuestion","getPrefillResponseById","updatePrefillResponseById","prefillObj","fillPrefillQuestion","valueType","responseStored","questionText","getAnswerTypeFromDisplayType","postPrefillPartialAnswer","fullSubmission","partialResponseId","surveyPartialUrl","resp","find","complete","onSurveyAnswerEvent","postSurveyFinalUrl","lastAnswer","answersAll","timeAtPost","finalData","locationId","responses","nps","surveyClient","responseDuration","_lastAnswer","questionTemplate","optMin","optMax","ConditionalTextFilter","filterText","isRequired","questionTags","tileColor","attributes","scaleColor","presentationMode","tileColorDark","startRange","endRange","startRangeLabel_1","endRangeLabel_1","midRangeLabel","anchorMetricName","metricName","customMetric","customMetrics","optionCategories","label","displayLegend_1","mobileImageUrl","imageVisibility010","imageVisibility110","scaleVisibility","scaleImageContainer","divider","optionStyle","legendDimension","parentContainer","dimension","leftWidth","initial_1","cmwidthstart","categoryRange","cmwidthend","iterator","startRange_1","endRange_1","initial_2","color","initial_3","optionLeftExtraClass","optionMidExtraClass","optionRightExtraClass","optionMaxWidth","validationHint","characterLimit","acTemplate","multiSelect1","reverse","displayStyle","options2_1","options2_2","options3","acTemplate1","acTemplate2","options2","invertedMultiSelect","invertedMultiSelect_1","startRangeLabel","endRangeLabel","displayLegend2","startRangeLabel1","endRangeLabel1","displayLegend3","isRetired","isPrefillTags","isPrefillNote","isPrefillDirect","fillPrefillWithTags","fillPrefillWithNote","supportedDisplayTypes","tag","innerHeight","note","apiFill","staffFill","isQuestionFilled","surveyContainer","getSurveyContainer","welcomeContainer","getWelcomeContainer","content","transform","locals","result","mediaQuery","alreadyImportedModules","addStylesToDom","styles","domStyle","stylesInDom","refs","j","parts","addStyle","listToStyles","newStyles","base","media","sourceMap","part","insertStyleElement","getElement","insertInto","Error","lastStyleElementInsertedAtTop","stylesInsertedAtTop","insertAt","nextSibling","insertBefore","removeStyleElement","idx","createStyleElement","attrs","addAttrs","createLinkElement","link","rel","obj","update","singleton","styleIndex","singletonCounter","applyToSingletonTag","bind","URL","createObjectURL","revokeObjectURL","Blob","btoa","updateLink","applyToTag","newObj","replaceText","cssNode","childNodes","autoFixUrls","convertToAbsoluteUrls","fixUrls","unescape","encodeURIComponent","blob","oldSrc","isOldIE","memo","all","atob","DEBUG","newList","mayRemove","textStore","replacement","Boolean","baseUrl","protocol","host","currentDir","pathname","fullMatch","origUrl","unquotedOrigUrl","$1","newUrl","conditionalText","conditionalText_1","setName","leadingDisplayTexts","filterByQuestion","groupTitle","Theme_1","Slider_1","trackSelects","trackRadios","currentQuestionListeners","qIndex","qResponse","time","theme","Theme","getQindex","$popupContainer","$popupContainer2","$startBtn","onSurveyClickEvent","showLoader","nextQue","nextQuestion","prevQue","prevQuestion","closeSurvey","onSurveyCloseEvent","bodyElement","minSurvey","minimizeSurvey","resumeText","resumeButtonText","updateProgress","currentQuestionId","width","loadQuestionSpecifics","leftIcon","onSurveyQuestionEvent","span","validationSpan","validationRegex","submitQuestion","nextQ","rightIcon","nextIcon","$loader","html","appendInQuestionsContainer","startContainer","showLanguageSelector","qType","allOptions1","setupListenersQuestionScale","setupListenersQuestionNPS","setupListenersQuestionMultiline","setupListenersQuestionSelect","setupListenersQuestionRadio","setupListenersQuestionRadioImage","setupListenersQuestionCheckbox","setupListenersQuestionStar","setupListenersQuestionSmile","setupListenersQuestionCsat","setupListenersQuestionSlider","setupListenersQuestionSingleline","setupListenersQuestionNumber","selectedRating","selectedRating1","previousValue","previousSelection","rating","previousValues","previousValues_1","checked","child","previousSibling","multilineRes","singlelineRes","numberRes","sliderRes","sliderInput","Slider","brandColorDark","brandColorWhite","inputRange","rangeTip","speed","clearTo","updateRangeTip","display","clearTimeout","timeout","animateHandler","currValue","maxValue","requestAnimationFrame","successHandler","sitePageViewCount","individualPageViewCount","click","onscroll","doc","documentElement","top","pageXOffset","scrollLeft","clientLeft","pageYOffset","scrollTop","clientTop","ccsdkTopOffset","processScrollTriggers","onclick","triggerInstances","triggerInterval","processIntervalTriggers","processConditionalTriggers","scrollNow","disableTriggers","TriggerUtils_1","pageCountTrigger","siteCountTrigger","pageTimeTrigger","siteTimeTrigger","urlParamTrigger","notUrlParamTrigger","utmParamTrigger","scrollPixelsTrigger","pageCountTriggerEnabled","siteCountTriggerEnabled","pageTimeTriggerEnabled","siteTimeTriggerEnabled","urlParamTriggerEnabled","notUrlParamTriggerEnabled","utmParamTriggerEnabled","scrollPixelsTriggerEnabled","conditionalTriggers","minPageCount","TriggerPopUpByPageCount","minSiteCount","minPageTime","TriggerPopUpByTimeSpentOnPage","minSiteTime","TriggerPopUpByTimeSpentOnSite","urlPattern","inUrl","TriggerPopUpByURLPattern","notinUrl","TriggerPopUpByNotURLPattern","utm","TriggerPopUpByUTMParameter","minScrollPixels","grepURL","onExitDetect","waitSeconds","scrollPercent","grepInvertURL","isEnabled","conditionalTrigger","pageStartTime","pageTime","TriggerUtils","checkTimeCondition","checkScroll","checkInUrl","processNonConditionalTriggers","TriggerPopUpByScrollPixels","pageCount","NaN","checkPageCount","siteStartTime","siteTime","TriggerPopUpByInactivity","utmP","utmVal","resetTriggers","payload","successCb","errorCb","searchParams","idsite","rec","action_name","action_url","uid","_cvar","1","new_visit","e_c","e_a","e_n","rand","ceil","param"],"mappings":"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","file":"cc.en.bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 11);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar templates_1 = __webpack_require__(7);\r\nvar DomUtilities = /** @class */ (function () {\r\n    function DomUtilities() {\r\n        // HTMLElement.prototype.matches = HTMLElement.prototype.matches ||\r\n        // HTMLElement.prototype.matchesSelector ||\r\n        // HTMLElement.prototype.webkitMatchesSelector ||\r\n        // HTMLElement.prototype.mozMatchesSelector ||\r\n        // HTMLElement.prototype.msMatchesSelector ||\r\n        // HTMLElement.prototype.oMatchesSelector;\r\n    }\r\n    DomUtilities.prototype.get = function (selector) {\r\n        return document.querySelectorAll(selector);\r\n    };\r\n    DomUtilities.prototype.appendStyle = function (css) {\r\n        var head = document.head || document.getElementsByTagName('head')[0];\r\n        var style = document.createElement('style');\r\n        style.type = 'text/css';\r\n        if (style.styleSheet) {\r\n            style.styleSheet.cssText = css;\r\n        }\r\n        else {\r\n            style.appendChild(document.createTextNode(css));\r\n        }\r\n        head.appendChild(style);\r\n    };\r\n    DomUtilities.prototype.remove = function (el) {\r\n        el.parentNode.removeChild(el);\r\n    };\r\n    DomUtilities.prototype.removeAll = function (elements) {\r\n        Array.prototype.forEach.call(elements, function (el, i) {\r\n            el.parentNode.removeChild(el);\r\n        });\r\n    };\r\n    DomUtilities.prototype.css = function (elements, property, value) {\r\n        Array.prototype.forEach.call(elements, function (el, i) {\r\n            el.style[property] = value;\r\n        });\r\n    };\r\n    DomUtilities.prototype.removeClassAll = function (elements, className) {\r\n        var _this = this;\r\n        Array.prototype.forEach.call(elements, function (el, i) {\r\n            _this.removeClass(el, className);\r\n        });\r\n    };\r\n    DomUtilities.prototype.addClassAll = function (elements, className) {\r\n        var _this = this;\r\n        Array.prototype.forEach.call(elements, function (el, i) {\r\n            _this.addClass(el, className);\r\n        });\r\n    };\r\n    DomUtilities.prototype.removeClass = function (el, className) {\r\n        // console.log(el);\r\n        if (!el) {\r\n            return;\r\n        }\r\n        if (el.classList)\r\n            el.classList.remove(className);\r\n        else\r\n            el.className = el.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\r\n    };\r\n    DomUtilities.prototype.addClass = function (el, className) {\r\n        if (!el) {\r\n            return;\r\n        }\r\n        if (el.classList)\r\n            el.classList.add(className);\r\n        else\r\n            el.className += ' ' + className;\r\n    };\r\n    DomUtilities.prototype.toggleClass = function (el, className) {\r\n        if (el.classList) {\r\n            if (el.classList.contains(className))\r\n                el.classList.remove(className);\r\n            else\r\n                el.classList.add(className);\r\n        }\r\n    };\r\n    DomUtilities.prototype.hasClass = function (el, className) {\r\n        if (el.classList)\r\n            return el.classList.contains(className);\r\n        else\r\n            return new RegExp('(^| )' + className + '( |$)', 'gi').test(el.className);\r\n    };\r\n    DomUtilities.prototype.ready = function (fn) {\r\n        if (document.attachEvent ? document.readyState === \"complete\" : document.readyState !== \"loading\") {\r\n            fn();\r\n        }\r\n        else {\r\n            document.addEventListener('DOMContentLoaded', fn);\r\n        }\r\n    };\r\n    DomUtilities.prototype.getParents = function (el, parentSelector) {\r\n        // If no parentSelector defined will bubble up all the way to *document*\r\n        if (parentSelector === undefined) {\r\n            parentSelector = document;\r\n        }\r\n        var parents = [];\r\n        var p = el.parentNode;\r\n        while (p !== parentSelector) {\r\n            var o = p;\r\n            parents.push(o);\r\n            p = o.parentNode;\r\n        }\r\n        parents.push(parentSelector); // Push that parentSelector you wanted to stop at\r\n        return parents;\r\n    };\r\n    DomUtilities.prototype.listener = function (el, evt, sel, handler) {\r\n        var selectorMatches = function (el, selector) {\r\n            var p = Element.prototype;\r\n            var f = p.matches || p.webkitMatchesSelector || p.mozMatchesSelector || p.msMatchesSelector || function (s) {\r\n                return [].indexOf.call(document.querySelectorAll(s), this) !== -1;\r\n            };\r\n            return f.call(el, selector);\r\n        };\r\n        var internalHandler = function (event) {\r\n            var t = event.target;\r\n            while (t && t !== this) {\r\n                if (selectorMatches(t, sel)) {\r\n                    handler.call(t, event);\r\n                }\r\n                t = t.parentNode;\r\n            }\r\n        };\r\n        el.addEventListener(evt, internalHandler);\r\n        return internalHandler;\r\n    };\r\n    DomUtilities.prototype.initListener = function (type, id, cb) {\r\n        var ref = {\r\n            id: id,\r\n            type: type,\r\n            cb: cb,\r\n            internalHandler: undefined,\r\n        };\r\n        return ref;\r\n    };\r\n    DomUtilities.prototype.checkIfListenerExists = function (id, ar) {\r\n        for (var _i = 0, ar_1 = ar; _i < ar_1.length; _i++) {\r\n            var listener = ar_1[_i];\r\n            if (listener.id == id) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    DomUtilities.prototype.on = function (evt, el, handler) {\r\n        el.addEventListener(evt, handler);\r\n    };\r\n    DomUtilities.prototype.off = function (evt, el, handler) {\r\n        el.removeEventListener(evt, handler);\r\n    };\r\n    DomUtilities.prototype.removeListener = function (el, evt, handler) {\r\n        el.removeEventListener(evt, handler);\r\n    };\r\n    DomUtilities.prototype.removeAllListeners = function (ar) {\r\n        for (var _i = 0, ar_2 = ar; _i < ar_2.length; _i++) {\r\n            var listener = ar_2[_i];\r\n            this.removeListener(document.querySelectorAll(\"body\")[0], listener.type, listener.internalHandler);\r\n        }\r\n        return true;\r\n    };\r\n    DomUtilities.prototype.trigger = function (el, eventName, data) {\r\n        if (typeof CustomEvent === 'function') {\r\n            var event = new CustomEvent(eventName, { detail: data });\r\n        }\r\n        else {\r\n            var event = document.createEvent('CustomEvent');\r\n            event.initCustomEvent(eventName, true, true, data);\r\n        }\r\n        el.dispatchEvent(event);\r\n    };\r\n    DomUtilities.prototype.removeTrigger = function (el, eventName) {\r\n        el.removeEventListener(eventName);\r\n    };\r\n    DomUtilities.prototype.shadeBlendConvert = function (p, from, to) {\r\n        if (typeof (p) != \"number\" || p < -1 || p > 1 || typeof (from) != \"string\" || (from[0] != 'r' && from[0] != '#') || (typeof (to) != \"string\" && typeof (to) != \"undefined\"))\r\n            return null; //ErrorCheck\r\n        if (!this.sbcRip)\r\n            this.sbcRip = function (d) {\r\n                var l = d.length, RGB = new Object();\r\n                if (l > 9) {\r\n                    d = d.split(\",\");\r\n                    if (d.length < 3 || d.length > 4)\r\n                        return null; //ErrorCheck\r\n                    RGB[0] = i(d[0].slice(4)), RGB[1] = i(d[1]), RGB[2] = i(d[2]), RGB[3] = d[3] ? parseFloat(d[3]) : -1;\r\n                }\r\n                else {\r\n                    if (l == 8 || l == 6 || l < 4)\r\n                        return null; //ErrorCheck\r\n                    if (l < 6)\r\n                        d = \"#\" + d[1] + d[1] + d[2] + d[2] + d[3] + d[3] + (l > 4 ? d[4] + \"\" + d[4] : \"\"); //3 digit\r\n                    d = i(d.slice(1), 16), RGB[0] = d >> 16 & 255, RGB[1] = d >> 8 & 255, RGB[2] = d & 255, RGB[3] = l == 9 || l == 5 ? r(((d >> 24 & 255) / 255) * 10000) / 10000 : -1;\r\n                }\r\n                return RGB;\r\n            };\r\n        var i = parseInt, r = Math.round, h = from.length > 9, h = typeof (to) == \"string\" ? to.length > 9 ? true : to == \"c\" ? !h : false : h, b = p < 0, p = b ? p * -1 : p, to = to && to != \"c\" ? to : b ? \"#000000\" : \"#FFFFFF\", f = this.sbcRip(from), t = this.sbcRip(to);\r\n        if (!f || !t)\r\n            return null; //ErrorCheck\r\n        if (h)\r\n            return \"rgb(\" + r((t[0] - f[0]) * p + f[0]) + \",\" + r((t[1] - f[1]) * p + f[1]) + \",\" + r((t[2] - f[2]) * p + f[2]) + (f[3] < 0 && t[3] < 0 ? \")\" : \",\" + (f[3] > -1 && t[3] > -1 ? r(((t[3] - f[3]) * p + f[3]) * 10000) / 10000 : t[3] < 0 ? f[3] : t[3]) + \")\");\r\n        else\r\n            return \"#\" + (0x100000000 + (f[3] > -1 && t[3] > -1 ? r(((t[3] - f[3]) * p + f[3]) * 255) : t[3] > -1 ? r(t[3] * 255) : f[3] > -1 ? r(f[3] * 255) : 255) * 0x1000000 + r((t[0] - f[0]) * p + f[0]) * 0x10000 + r((t[1] - f[1]) * p + f[1]) * 0x100 + r((t[2] - f[2]) * p + f[2])).toString(16).slice(f[3] > -1 || t[3] > -1 ? 1 : 3);\r\n    };\r\n    DomUtilities.prototype.hexToRGB = function (hex, alpha) {\r\n        if (!hex || [4, 7].indexOf(hex.length) === -1) {\r\n            return; // throw new Error('Bad Hex');\r\n        }\r\n        hex = hex.substr(1);\r\n        // if shortcuts (#F00) -> set to normal (#FF0000)\r\n        if (hex.length === 3) {\r\n            hex = hex.split('').map(function (el) {\r\n                return el + el + '';\r\n            }).join('');\r\n        }\r\n        var r = parseInt(hex.slice(0, 2), 16), g = parseInt(hex.slice(2, 4), 16), b = parseInt(hex.slice(4, 6), 16);\r\n        if (alpha) {\r\n            return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha + \")\";\r\n        }\r\n        else {\r\n            return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\r\n        }\r\n    };\r\n    DomUtilities.prototype.arrayContains = function (needle) {\r\n        // Per spec, the way to identify NaN is that it is not equal to itself\r\n        var findNaN = needle !== needle;\r\n        var indexOf;\r\n        if (!findNaN && typeof Array.prototype.indexOf === 'function') {\r\n            indexOf = Array.prototype.indexOf;\r\n        }\r\n        else {\r\n            indexOf = function (needle) {\r\n                var i = -1, index = -1;\r\n                for (i = 0; i < this.length; i++) {\r\n                    var item = this[i];\r\n                    if ((findNaN && item !== item) || item === needle) {\r\n                        index = i;\r\n                        break;\r\n                    }\r\n                }\r\n                return index;\r\n            };\r\n        }\r\n        return indexOf.call(this, needle) > -1;\r\n    };\r\n    DomUtilities.prototype.generateSelectOptions = function (arr, translatedArr) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var translatedOpt = (translatedArr[i] || arr[i]).split(';');\r\n                var arrOpt = arr[i].split(';');\r\n                res += '<option value=\"' + arrOpt[0] + '\">' + (translatedOpt[0]) + '</option>';\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateLanguageSelectOptions = function (arr) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                if (arr[i] == 'default') {\r\n                    res += '<option value=\"' + arr[i] + '\">English (Default)</option>';\r\n                }\r\n                else {\r\n                    res += '<option value=\"' + arr[i] + '\">' + arr[i] + '</option>';\r\n                }\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.checkOptionContainsImage = function (arr) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = true;\r\n            for (i = 0; i < arr.length; i++) {\r\n                var opt = arr[i];\r\n                res = res && (opt.indexOf(';') !== -1) && (opt.indexOf('.') !== -1);\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateRadioImageOptions = function (arr, translatedArr, id) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var optHtml = templates_1.templates.option_radio_image;\r\n                var opt = arr[i].split(';');\r\n                var translatedOpt = translatedArr[i].split(';');\r\n                //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n                //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n                optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[1]);\r\n                optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\r\n                optHtml = optHtml.replace(/{{label}}/g, translatedOpt[0]);\r\n                optHtml = optHtml.replace(/{{labelFor}}/g, translatedOpt[0].replace(/\\s+/g, '-'));\r\n                optHtml = optHtml.replace(/{{value}}/g, opt[0]);\r\n                res += optHtml;\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateRadioIgnoreImageOptions = function (arr, translatedArr, id) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var optHtml = templates_1.templates.option_radio;\r\n                var opt = arr[i].split(';');\r\n                var translatedOpt = translatedArr[i].split(';');\r\n                //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n                //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n                optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\r\n                optHtml = optHtml.replace(/{{label}}/g, translatedOpt[0]);\r\n                optHtml = optHtml.replace(/{{labelFor}}/g, translatedOpt[0].replace(/\\s+/g, '-'));\r\n                optHtml = optHtml.replace(/{{value}}/g, opt[0]);\r\n                res += optHtml;\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateRadioOptions = function (arr, translatedArr, id) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var optHtml = templates_1.templates.option_radio;\r\n                var opt = arr[i].split(';');\r\n                var translatedOpt = translatedArr[i].split(';');\r\n                optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\r\n                optHtml = optHtml.replace(/{{label}}/g, translatedOpt[0]);\r\n                optHtml = optHtml.replace(/{{labelFor}}/g, translatedOpt[0].replace(/\\s+/g, '-'));\r\n                optHtml = optHtml.replace(/{{value}}/g, opt[0]);\r\n                res += optHtml;\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateCheckboxImageOptions = function (arr, translatedArr, id) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var optHtml = templates_1.templates.option_checkbox_image;\r\n                var opt = arr[i].split(';');\r\n                var translatedOpt = translatedArr[i].split(';');\r\n                //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n                //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n                optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[1]);\r\n                optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\r\n                optHtml = optHtml.replace(/{{label}}/g, translatedOpt[0]);\r\n                optHtml = optHtml.replace(/{{labelFor}}/g, translatedOpt[0].replace(/\\s+/g, '-'));\r\n                optHtml = optHtml.replace(/{{value}}/g, opt[0]);\r\n                res += optHtml;\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateCheckboxIgnoreImageOptions = function (arr, translatedArr, id) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var optHtml = templates_1.templates.option_checkbox;\r\n                var opt = arr[i].split(';');\r\n                var translatedOpt = translatedArr[i].split(';');\r\n                //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n                //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n                optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\r\n                optHtml = optHtml.replace(/{{label}}/g, translatedOpt[0]);\r\n                optHtml = optHtml.replace(/{{labelFor}}/g, translatedOpt[0].replace(/\\s+/g, '-'));\r\n                optHtml = optHtml.replace(/{{value}}/g, opt[0]);\r\n                res += optHtml;\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateCheckboxOptions = function (arr, translatedArr, id) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var optHtml = templates_1.templates.option_checkbox;\r\n                var opt = arr[i].split(';');\r\n                var translatedOpt = translatedArr[i].split(';');\r\n                optHtml = optHtml.replace(/{{label}}/g, translatedOpt[0]);\r\n                optHtml = optHtml.replace(/{{labelFor}}/g, translatedOpt[0].replace(/\\s+/g, '-'));\r\n                optHtml = optHtml.replace(/{{value}}/g, opt[0]);\r\n                res += optHtml;\r\n            }\r\n            // console.log( res );\r\n            return res;\r\n        }\r\n    };\r\n    return DomUtilities;\r\n}());\r\nexports.DomUtilities = DomUtilities;\r\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Constants = /** @class */ (function () {\r\n    function Constants() {\r\n    }\r\n    Constants.CCTriggerPageStartTime = \"cc-trigger-page-start-time\";\r\n    Constants.CCTriggerPageElapsedTime = \"cc-trigger-page-elapsed-time\";\r\n    Constants.CCTriggerSiteStartTime = \"cc-trigger-site-start-time\";\r\n    Constants.CCTriggerSiteElapsedTime = \"cc-trigger-site-elapsed-time\";\r\n    Constants.CCTriggerSitePageViewCount = \"cc-trigger-site-page-count\";\r\n    Constants.CCTriggerIndividualPageViewCount = \"cc-trigger-individual-page-count\";\r\n    Constants.SURVEY_IMPRESSION_EVENT = \"onImpression\";\r\n    Constants.SURVEY_START_EVENT = \"onStart\";\r\n    Constants.SURVEY_DATA_EVENT = \"onData\";\r\n    Constants.SURVEY_END_EVENT = \"onEnd\";\r\n    Constants.SURVEY_CLOSE_EVENT = \"onClose\";\r\n    Constants.SURVEY_QUESTION_EVENT = \"onQuestion\";\r\n    Constants.SURVEY_ANSWER_EVENT = \"onAnswer\";\r\n    Constants.SURVEY_CLICK_EVENT = \"onClick\";\r\n    Constants.GRANT_TYPE = \"password\";\r\n    Constants.AUTHORIZATION = \"Authorization\";\r\n    Constants.AUTHORIZATION_BEARER = \"Bearer\";\r\n    Constants.SURVEY_CLIENT = \"JS-MicroWeb\";\r\n    return Constants;\r\n}());\r\nexports.Constants = Constants;\r\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Cookie = /** @class */ (function () {\r\n    function Cookie() {\r\n    }\r\n    /**\r\n     * Set/Overwrite a cookie value\r\n     *\r\n     * @param name\r\n     * @param value\r\n     * @param days      OPTIONAL Days till this cookie will stay valid. Default is current session\r\n     * @param path      OPTIONAL domain root will be used by default\r\n     */\r\n    Cookie.set = function (name, value, days, path) {\r\n        if (days) {\r\n            var date = new Date();\r\n            date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));\r\n            var expires = \"; expires=\" + date.toUTCString();\r\n        }\r\n        else\r\n            var expires = \"\";\r\n        var dir = path || '/';\r\n        document.cookie = name + \"=\" + value + expires + \"; path=\" + dir;\r\n    };\r\n    /**\r\n     * Retrieve a cookie value\r\n     *\r\n     * @param name\r\n     * @return String|null\r\n     */\r\n    Cookie.get = function (name) {\r\n        var nameEQ = name + \"=\";\r\n        var ca = document.cookie.split(';');\r\n        for (var i = 0; i < ca.length; i++) {\r\n            var c = ca[i];\r\n            while (c.charAt(0) == ' ')\r\n                c = c.substring(1, c.length);\r\n            if (c.indexOf(nameEQ) == 0)\r\n                return c.substring(nameEQ.length, c.length);\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Remove a cookie\r\n     *\r\n     * @param name\r\n     */\r\n    Cookie.delete = function (name) {\r\n        Cookie.set(name, \"\", -1, undefined);\r\n    };\r\n    Cookie.getParameterByName = function (name, url) {\r\n        if (!url)\r\n            url = window.location.href;\r\n        name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\r\n        var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"), results = regex.exec(url);\r\n        if (!results)\r\n            return null;\r\n        if (!results[2])\r\n            return '';\r\n        return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\r\n    };\r\n    return Cookie;\r\n}());\r\nexports.Cookie = Cookie;\r\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n//Survey Manager manages and queues survey.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar SurveyManager = /** @class */ (function () {\r\n    function SurveyManager() {\r\n    }\r\n    SurveyManager.initializeSurvey = function (surveyId) {\r\n        //check if survey ran?\r\n        //do survey initialization.\r\n        if (!SurveyManager.surveyInstances || !SurveyManager.surveyInstances[surveyId]) {\r\n            console.error('Microsurvey not properly set up. Contact Support.');\r\n            return;\r\n        }\r\n        SurveyManager.surveyInstances[surveyId].setupSurvey();\r\n    };\r\n    SurveyManager.addSurvey = function (surveyId) {\r\n        window.ccsdkDebug ? console.log(\"Adding survey ID : \" + surveyId) : '';\r\n        SurveyManager.surveyQueue.push(surveyId);\r\n        if (SurveyManager.processQueueInterval == null) {\r\n            SurveyManager.processQueueInterval = setInterval(SurveyManager.processQueueIntervalCB, 100);\r\n        }\r\n    };\r\n    SurveyManager.removeSurvey = function (surveyId) {\r\n        if (SurveyManager.surveyQueue.length > 0) {\r\n            for (var survey in SurveyManager.surveyQueue) {\r\n                if (SurveyManager.surveyQueue[survey].surveyId == surveyId) {\r\n                    SurveyManager.surveyQueue.splice(survey, 1);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (SurveyManager.surveyQueue.length == 0) {\r\n            clearInterval(SurveyManager.processQueueInterval);\r\n        }\r\n    };\r\n    SurveyManager.processQueueIntervalCB = function () {\r\n        if (window.globalSurveyRunning == true) {\r\n            return;\r\n        }\r\n        else {\r\n            var surveyId = SurveyManager.surveyQueue.pop();\r\n            window.ccsdkDebug ? console.log(\"Processing survey ID \" + surveyId) : '';\r\n            if (surveyId == undefined) {\r\n                clearInterval(SurveyManager.processQueueInterval);\r\n                SurveyManager.processQueueInterval = null;\r\n            }\r\n            else {\r\n                window.globalSurveyRunning = true;\r\n                SurveyManager.initializeSurvey(surveyId);\r\n            }\r\n        }\r\n    };\r\n    SurveyManager.setSurveyRunning = function () {\r\n        window.globalSurveyRunning = true;\r\n        window.globalSurveyStartTime = new Date();\r\n    };\r\n    SurveyManager.unsetSurveyRunning = function () {\r\n        window.globalSurveyRunning = false;\r\n    };\r\n    SurveyManager.surveyQueue = [];\r\n    SurveyManager.processQueueInterval = null;\r\n    SurveyManager.surveyInstances = {};\r\n    return SurveyManager;\r\n}());\r\nexports.SurveyManager = SurveyManager;\r\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n// import 'whatwg-fetch';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction makeRequest(method, url, postParams, headers, successcb, errorcb) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(method, url);\r\n    xhr.onload = function () {\r\n        if (this.status >= 200 && this.status < 300) {\r\n            if (xhr.response) {\r\n            }\r\n            var res = xhr.response && typeof xhr.response === 'string' && !xhr.response.match('GIF') ? JSON.parse(xhr.response) : '';\r\n            if (successcb)\r\n                successcb(res);\r\n        }\r\n        else {\r\n            if (errorcb) {\r\n                errorcb({\r\n                    status: this.status,\r\n                    statusText: xhr.statusText\r\n                });\r\n            }\r\n        }\r\n    };\r\n    xhr.onerror = function () {\r\n        if (errorcb) {\r\n            errorcb({\r\n                status: this.status,\r\n                statusText: xhr.statusText\r\n            });\r\n        }\r\n    };\r\n    if (headers) {\r\n        Object.keys(headers).forEach(function (key) {\r\n            xhr.setRequestHeader(key, headers[key]);\r\n        });\r\n    }\r\n    // var params : any = postParams;\r\n    // We'll need to stringify if we've been given an object\r\n    // If we have a string, this is skipped.\r\n    // if (params && typeof params === 'object') {\r\n    //   params = Object.keys(params).map(function (key) {\r\n    //     return encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\r\n    //   }).join('&');\r\n    // }\r\n    xhr.send(postParams);\r\n}\r\nvar RequestHelper = /** @class */ (function () {\r\n    function RequestHelper() {\r\n    }\r\n    RequestHelper.getWithHeaders = function (url, headers, successcb, errorcb) {\r\n        return makeRequest(\"GET\", url, null, headers, successcb, errorcb);\r\n    };\r\n    RequestHelper.postWithHeaders = function (url, data, headers, successcb, errorcb) {\r\n        headers[\"Content-Type\"] = \"application/json;charset=utf-8\";\r\n        return makeRequest(\"POST\", url, JSON.stringify(data), headers, successcb, errorcb);\r\n    };\r\n    RequestHelper.get = function (url, successcb, errorcb) {\r\n        return makeRequest(\"GET\", url, null, null, successcb, errorcb);\r\n        // let request : Request = new Request( (url as any) , new Object());\r\n        // return fetch(request).then( (response : Response) => {\r\n        //   if (response.status >= 200 && response.status < 300) {\r\n        //     return Promise.resolve(response);\r\n        //   } else {\r\n        //     var error = new Error(response.statusText);\r\n        //     // error.response = response;\r\n        //     throw error;\r\n        //   }\r\n        // }).then( (response : Response) => {\r\n        //   return response.json();\r\n        // }).catch( (error : Error) => {\r\n        //   (window as any).ccsdkDebug?console.log('Request failed ', error):'';\r\n        // });\r\n    };\r\n    /**\r\n     *\r\n     * var data = new FormData()\r\n     *  data.append('file', input.files[0])\r\n     *  data.append('user', 'hubot')\r\n     *\r\n     * @static\r\n     * @param {any} url\r\n     * @param {any} data\r\n     * @memberof Request\r\n     */\r\n    RequestHelper.post = function (url, data, successcb, errorcb) {\r\n        //consider, file upload?\r\n        // (window as any).ccsdkDebug?console.log(\"[\" + JSON.stringify(data) + \"]\"):'';\r\n        window.ccsdkDebug ? console.log(\"Sending : \" + data) : '';\r\n        return makeRequest(\"POST\", url, JSON.stringify(data), {}, successcb, errorcb);\r\n        // let request : Request = new Request( (url as any), {\r\n        //   method : \"POST\",\r\n        //   headers : {\r\n        //     \"Content-Type\" : \"application/json; charset=utf-8\"\r\n        //   },\r\n        //   body : JSON.stringify(data)\r\n        // });\r\n        // return fetch(request).then( (response : Response) => {\r\n        //   if (response.status >= 200 && response.status < 300) {\r\n        //     return Promise.resolve(response);\r\n        //   } else {\r\n        //     let error : Error = new Error(response.statusText);\r\n        //     // error.response = response;\r\n        //     throw error;\r\n        //   }\r\n        // }).then( (response : Response) => {\r\n        //   return response.json();\r\n        // }).catch( (error : Error) => {\r\n        //   (window as any).ccsdkDebug?console.log('Request failed ', error):'';\r\n        // });\r\n    };\r\n    return RequestHelper;\r\n}());\r\nexports.RequestHelper = RequestHelper;\r\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar LanguageTextFilter = /** @class */ (function () {\r\n    function LanguageTextFilter() {\r\n    }\r\n    LanguageTextFilter.translateQuestionText = function (surveyHandler, question) {\r\n        if (surveyHandler.ccsdk.config.language.indexOf('Default') === -1) {\r\n            if (question.translated != null &&\r\n                typeof question.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n                if (question.translated[surveyHandler.ccsdk.config.language].text) {\r\n                    var qText = question.translated[surveyHandler.ccsdk.config.language].text.split(':');\r\n                    if (question.translated[surveyHandler.ccsdk.config.language].text.indexOf(\":\") !== -1) {\r\n                        qText = qText[0] + ': <br><span class=\"text-normal\">' + qText[1] + '</span>';\r\n                    }\r\n                    return qText;\r\n                }\r\n                // else if ( question.translated[ surveyHandler.ccsdk.config.language ].text ) {\r\n                //     return question.translated[ surveyHandler.ccsdk.config.language ].text;\r\n                // }\r\n                // return question.translated[surveyHandler.ccsdk.config.language].text;\r\n            }\r\n        }\r\n        if (question.text) {\r\n            var qText = question.text.split(':');\r\n            if (question.text.indexOf(\":\") !== -1) {\r\n                qText = qText[0] + ': <br><span class=\"text-normal\">' + qText[1] + '</span>';\r\n            }\r\n            return qText;\r\n        }\r\n        else {\r\n            return question.text == null ? '' : question.text;\r\n        }\r\n    };\r\n    LanguageTextFilter.translateMessages = function (surveyHandler, type) {\r\n        if (surveyHandler.surveyData.translated != null && typeof surveyHandler.surveyData.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n            if (surveyHandler.ccsdk.config.language.indexOf('Default') === -1) {\r\n                if (surveyHandler.surveyData.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n                    if (surveyHandler.surveyData.translated[surveyHandler.ccsdk.config.language][type] != null) {\r\n                        return surveyHandler.surveyData.translated[surveyHandler.ccsdk.config.language][type];\r\n                    }\r\n                    else {\r\n                        return surveyHandler.surveyData[type];\r\n                    }\r\n                }\r\n                else {\r\n                    return surveyHandler.surveyData[type];\r\n                }\r\n            }\r\n            else {\r\n                return surveyHandler.surveyData[type];\r\n            }\r\n        }\r\n    };\r\n    LanguageTextFilter.translateDisplayLegend = function (surveyHandler, question) {\r\n        if (surveyHandler.ccsdk.config.language.indexOf('Default') === -1) {\r\n            if (question.translated != null &&\r\n                typeof question.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n                return question.translated[surveyHandler.ccsdk.config.language].displayLegend;\r\n            }\r\n            else {\r\n                return question.displayLegend;\r\n            }\r\n        }\r\n        else {\r\n            return question.displayLegend;\r\n        }\r\n    };\r\n    LanguageTextFilter.translateMultiSelect = function (surveyHandler, question) {\r\n        if (surveyHandler.ccsdk.config.language.indexOf('Default') === -1) {\r\n            if (question.translated != null &&\r\n                typeof question.translated[surveyHandler.ccsdk.config.language] !== 'undefined' &&\r\n                question.translated[surveyHandler.ccsdk.config.language].multiSelect) {\r\n                var translatedOptions_1 = question.translated[surveyHandler.ccsdk.config.language].multiSelect;\r\n                return question.multiSelect.map(function (x, i) {\r\n                    if (translatedOptions_1[i]) {\r\n                        return translatedOptions_1[i];\r\n                    }\r\n                    else {\r\n                        return x;\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                return question.multiSelect;\r\n            }\r\n        }\r\n        else {\r\n            return question.multiSelect;\r\n        }\r\n    };\r\n    LanguageTextFilter.translateMultiSelectOption = function (surveyHandler, question, option) {\r\n        var effectiveMultiselect = this.translateMultiSelect(surveyHandler, question);\r\n        if ((effectiveMultiselect instanceof Array) && effectiveMultiselect.length > 0) {\r\n            for (var i = 0; i < question.multiSelect.length; i++) {\r\n                var opt = question.multiSelect[i].split(';');\r\n                if (opt[0] == option) {\r\n                    return effectiveMultiselect[i].split(';')[0];\r\n                }\r\n                else {\r\n                }\r\n            }\r\n        }\r\n        return option;\r\n    };\r\n    return LanguageTextFilter;\r\n}());\r\nexports.LanguageTextFilter = LanguageTextFilter;\r\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Config = /** @class */ (function () {\r\n    function Config() {\r\n    }\r\n    Config.API_URL = \"https://api.getcloudcherry.com\";\r\n    Config.SURVEY_BY_TOKEN = \"/api/SurveyByToken/{token}/\";\r\n    // static SURVEY_BY_TOKEN : String  = \"/api/SurveyByToken/{token}/{tabletId}\";\r\n    Config.SURVEY_PARTIAL_RESPONSE = \"/api/PartialSurvey/{id}/{complete}/JS-MicroWeb\";\r\n    // static SURVEY_PARTIAL_RESPONSE : String =  \"/api/PartialSurvey/{id}/{complete}/JS-Web/{tabletId}\";\r\n    Config.CDN_URL = \"https://cx.getcloudcherry.com/\";\r\n    Config.CDN_ASSET_URL = \"https://cx.getcloudcherry.com/microsurvey-assets/\";\r\n    Config.POST_LOGIN_TOKEN = \"/api/LoginToken\";\r\n    Config.GET_SURVEY_THROTTLE_LOGIC = \"/api/SurveyThrottleLogic/{location}\";\r\n    Config.POST_THROTTLING = \"/api/Throttling\";\r\n    Config.POST_THROTTLING_ADD_ENTRIES = \"/api/Throttling/AddEntries\";\r\n    Config.POST_SURVEY_FINAL = \"/api/surveybytoken/{tokenId}\";\r\n    Config.GET_CAMPAIGN = \"/api/SurveyToken/Campaign/{token}/\";\r\n    return Config;\r\n}());\r\nexports.Config = Config;\r\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__webpack_require__(16);\r\nvar QuestionSurvey = __webpack_require__(21);\r\nvar QuestionStart = __webpack_require__(22);\r\nvar QuestionSingleline = __webpack_require__(23);\r\nvar QuestionNumber = __webpack_require__(24);\r\nvar QuestionMultiline = __webpack_require__(25);\r\nvar QuestionCheckbox = __webpack_require__(26);\r\nvar QuestionRadio = __webpack_require__(27);\r\nvar QuestionRadioImage = __webpack_require__(28);\r\nvar QuestionScale = __webpack_require__(29);\r\nvar QuestionCSATAgreement5 = __webpack_require__(30);\r\nvar QuestionCSATSatisfaction5 = __webpack_require__(31);\r\nvar QuestionNPS = __webpack_require__(32);\r\nvar QuestionSelect = __webpack_require__(33);\r\nvar QuestionMultiSelect = __webpack_require__(34);\r\nvar QuestionSmile = __webpack_require__(35);\r\nvar QuestionSmileInverted = __webpack_require__(36);\r\nvar QuestionStar = __webpack_require__(37);\r\nvar QuestionSlider = __webpack_require__(38);\r\nvar OptionRadioImage = __webpack_require__(39);\r\nvar OptionRadio = __webpack_require__(40);\r\nvar OptionCheckbox = __webpack_require__(41);\r\nvar OptionCheckboxImage = __webpack_require__(42);\r\nvar ThankYou = __webpack_require__(43);\r\nvar LanguageSelector = __webpack_require__(44);\r\nvar templates = {\r\n    question_survey: \"\",\r\n    question_start: \"\",\r\n    question_text: \"\",\r\n    question_number: \"\",\r\n    question_scale: \"\",\r\n    question_csat_agreement_5: \"\",\r\n    question_csat_satisfaction_5: \"\",\r\n    question_nps: \"\",\r\n    question_multi_line_text: \"\",\r\n    question_multi_select: \"\",\r\n    question_radio: \"\",\r\n    question_radio_image: \"\",\r\n    question_checkbox: \"\",\r\n    question_select: \"\",\r\n    question_smile_5: \"\",\r\n    question_smile_5_inverted: \"\",\r\n    question_star_5: \"\",\r\n    question_slider: \"\",\r\n    option_radio_image: \"\",\r\n    option_radio: \"\",\r\n    option_checkbox: \"\",\r\n    option_checkbox_image: \"\",\r\n    thankyou: \"\",\r\n    language_selector: \"\"\r\n};\r\nexports.templates = templates;\r\ntemplates.question_survey = QuestionSurvey;\r\ntemplates.question_start = QuestionStart;\r\ntemplates.question_text = QuestionSingleline;\r\ntemplates.question_number = QuestionNumber;\r\ntemplates.question_scale = QuestionScale;\r\ntemplates.question_csat_agreement_5 = QuestionCSATAgreement5;\r\ntemplates.question_csat_satisfaction_5 = QuestionCSATSatisfaction5;\r\ntemplates.question_nps = QuestionNPS;\r\ntemplates.question_slider = QuestionSlider;\r\ntemplates.question_multi_line_text = QuestionMultiline;\r\ntemplates.question_multi_select = QuestionMultiSelect;\r\ntemplates.question_select = QuestionSelect;\r\ntemplates.question_smile_5 = QuestionSmile;\r\ntemplates.question_smile_5_inverted = QuestionSmileInverted;\r\ntemplates.question_star_5 = QuestionStar;\r\ntemplates.question_checkbox = QuestionCheckbox;\r\ntemplates.question_radio = QuestionRadio;\r\ntemplates.question_radio_image = QuestionRadioImage;\r\ntemplates.option_radio_image = OptionRadioImage;\r\ntemplates.option_radio = OptionRadio;\r\ntemplates.option_checkbox = OptionCheckbox;\r\ntemplates.option_checkbox_image = OptionCheckboxImage;\r\ntemplates.thankyou = ThankYou;\r\ntemplates.language_selector = LanguageSelector;\r\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction isAnd(filterQuestion) {\r\n    if (!filterQuestion) {\r\n        return false;\r\n    }\r\n    if (filterQuestion.groupBy == null || filterQuestion.groupBy.toUpperCase() == \"AND\") {\r\n        return true;\r\n    }\r\n}\r\nexports.isAnd = isAnd;\r\nfunction isOr(filterQuestion) {\r\n    if (!filterQuestion) {\r\n        return false;\r\n    }\r\n    if (filterQuestion.groupBy != null && filterQuestion.groupBy.toUpperCase() == \"OR\") {\r\n        return true;\r\n    }\r\n}\r\nexports.isOr = isOr;\r\nfunction isNumberCheck(filterQuestion) {\r\n    if (!filterQuestion) {\r\n        return false;\r\n    }\r\n    if (filterQuestion.answerCheck[0] === \"lt\" || filterQuestion.answerCheck[0] === \"gt\" || filterQuestion.answerCheck[0] === \"eq\") {\r\n        return true;\r\n    }\r\n}\r\nexports.isNumberCheck = isNumberCheck;\r\n/**\r\n  * Contains logic to control conditional flow and whether to show or hide the questions based on the user input\r\n  *\r\n  * @param filterQuestion\r\n  * @return\r\n  */\r\nfunction doesSatisfy(surveyHandler, filterQuestion) {\r\n    var answer = surveyHandler.getAnswerForQuestionId(filterQuestion.questionId);\r\n    if (isNumberCheck(filterQuestion)) {\r\n        if (filterQuestion.answerCheck[0].toLowerCase() == \"lt\") {\r\n            if (answer != null)\r\n                if (answer.numberInput != null && answer.numberInput < filterQuestion.number) {\r\n                    return true;\r\n                }\r\n        }\r\n        else if (filterQuestion.answerCheck[0].toLowerCase() == (\"gt\")) {\r\n            if (answer != null)\r\n                if (answer.numberInput != null && answer.numberInput > filterQuestion.number) {\r\n                    return true;\r\n                }\r\n        }\r\n        else if (filterQuestion.answerCheck[0].toLowerCase() == (\"eq\")) {\r\n            if (answer != null)\r\n                if (answer.numberInput != null && answer.numberInput == filterQuestion.number) {\r\n                    return true;\r\n                }\r\n        }\r\n    }\r\n    else {\r\n        // any text match for text answers\r\n        if (filterQuestion.answerCheck[0] && filterQuestion.answerCheck[0].toLowerCase() === 'any text') {\r\n            if (answer.textInput && answer.textInput !== ' ') {\r\n                return true;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n        var iFoundAll = false;\r\n        var question = surveyHandler.getQuestionById(filterQuestion.questionId);\r\n        var questionAnswerText = answer != null && answer.textInput != null ? answer.textInput : '';\r\n        if (!answer) {\r\n            return false;\r\n        }\r\n        for (var _i = 0, _a = filterQuestion.answerCheck; _i < _a.length; _i++) {\r\n            var aAnswer = _a[_i];\r\n            if (question.displayType === 'MultiSelect') {\r\n                var selectedOptions = answer.textInput.split(',');\r\n                if (selectedOptions.indexOf(aAnswer) !== -1) {\r\n                    iFoundAll = true;\r\n                }\r\n            }\r\n            else if (questionAnswerText === aAnswer) {\r\n                iFoundAll = true;\r\n            }\r\n        }\r\n        return iFoundAll;\r\n    }\r\n    return false;\r\n}\r\nexports.doesSatisfy = doesSatisfy;\r\nfunction questionCompare(a, b) {\r\n    return a.sequence - b.sequence;\r\n}\r\nexports.questionCompare = questionCompare;\r\nfunction checkLanguage(surveyHandler, fOption) {\r\n    if (surveyHandler.ccsdk.config && surveyHandler.ccsdk.config.language) {\r\n        return fOption.language === surveyHandler.ccsdk.config.language;\r\n    }\r\n    return false;\r\n}\r\nexports.checkLanguage = checkLanguage;\r\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar DomUtilities_1 = __webpack_require__(0);\r\nvar LanguageTextFilter_1 = __webpack_require__(5);\r\nvar Select = /** @class */ (function () {\r\n    function Select(qId) {\r\n        this.listeners = [];\r\n        this.qId = qId;\r\n    }\r\n    Select.prototype.init = function (qId) {\r\n        this.util = new DomUtilities_1.DomUtilities();\r\n        this.$body = document.querySelectorAll(\"body\")[0];\r\n        this.$html = document.querySelectorAll(\"html\")[0];\r\n        var select = document.querySelectorAll(\"#\" + qId + \" .cc-select\");\r\n        // var divSelect = document.querySelectorAll(\"div.cc-select\");\r\n        // this.util.removeAll(divSelect);\r\n        var parent = this;\r\n        //Assumption: iterating over array but there will always be one select at a time\r\n        this.type = select[0].getAttribute('data-type');\r\n        Array.prototype.forEach.call(select, function (el, i) {\r\n            var self = el;\r\n            var $selectOptions = document.querySelectorAll(\"#\" + qId + \" .cc-select-options\");\r\n            var classes = self.getAttribute(\"class\"), id = self.getAttribute(\"id\"), name = self.getAttribute(\"name\");\r\n            var template = '<div class=\"' + classes + '\">';\r\n            template += '<span class=\"cc-select-trigger\">' + self.getAttribute(\"placeholder\") + '</span>';\r\n            template += '<div class=\"cc-select-options-container\" cc-scrollbar-container><div class=\"cc-select-options\">';\r\n            var options = self.querySelectorAll(\"option\");\r\n            Array.prototype.forEach.call(options, function (el, i) {\r\n                template += '<span class=\"cc-select-option ' + el.getAttribute(\"class\") + '\" data-value=\"' + el.getAttribute(\"value\") + '\">' + el.innerHTML + '</span>';\r\n            });\r\n            template += '</div></div></div>';\r\n            parent.util.addClass(self, 'hide');\r\n            self.insertAdjacentHTML('afterend', template);\r\n        });\r\n        this.setupListeners();\r\n    };\r\n    Select.prototype.setupListeners = function () {\r\n        var self = this;\r\n        var qId = self.qId;\r\n        var ref2 = this.util.initListener('click', \"#\" + qId + \" .cc-select-option\", function (e) {\r\n            // let ref2 = this.util.initListener(this.$body, \"click\", \"#\"+qId+\" .cc-select-option\", function(e) {\r\n            window.ccsdkDebug ? console.log('click cc-select-option', this) : '';\r\n            var selfOption = this;\r\n            var value = this.getAttribute('data-value');\r\n            //select cc-select-wrapper\r\n            //todo: write a function to directly select parent via selector\r\n            var selectOptions = this.parentNode;\r\n            var select = selectOptions.parentNode.parentNode;\r\n            this.select = select;\r\n            var selectWrapper = select.parentNode;\r\n            window.ccsdkDebug ? console.log(select) : '';\r\n            window.ccsdkDebug ? console.log(selectOptions) : '';\r\n            window.ccsdkDebug ? console.log(selectWrapper) : '';\r\n            var selectionTrigger = select.querySelectorAll('.cc-select-trigger')[0];\r\n            self.util.addClass(this, \"selection\");\r\n            var selectedOptionText = selectionTrigger.textContent;\r\n            var selectedValueText = selectionTrigger.getAttribute('data-selection-value') || '';\r\n            window.ccsdkDebug ? console.log('select type', self.type) : '';\r\n            if (self.type !== 'multiple') {\r\n                window.ccsdkDebug ? console.log('select type', self.type) : '';\r\n                selectedOptionText = selfOption.textContent;\r\n                window.ccsdkDebug ? console.log('selected option', selectedOptionText) : '';\r\n                self.util.removeClassAll(document.querySelectorAll(\".cc-select\"), \"opened\");\r\n                selectionTrigger.setAttribute('data-selection-value', value);\r\n                selectWrapper.querySelectorAll(\"select\")[0].value = value;\r\n                selectionTrigger.textContent = selectedOptionText;\r\n                self.util.removeClassAll(document.querySelectorAll(\"#\" + qId + \" .cc-select-option\"), 'selection');\r\n                self.util.addClass(self, 'selection');\r\n            }\r\n            else {\r\n                window.ccsdkDebug ? console.log(selectedOptionText) : '';\r\n                if (selectedOptionText != 'Select') {\r\n                    selectedOptionText = self.addOrRemoveFromList(selectedOptionText, selfOption.textContent);\r\n                    selectedValueText = self.addOrRemoveFromList(selectedValueText, value);\r\n                }\r\n                else {\r\n                    window.ccsdkDebug ? console.log(selfOption.textContent) : '';\r\n                    selectedOptionText = selfOption.textContent;\r\n                    selectedValueText = value;\r\n                }\r\n                selectWrapper.querySelectorAll(\"select\")[0].value = selectedValueText;\r\n                selectionTrigger.setAttribute('data-selection-value', selectedValueText);\r\n                self.util.removeClassAll(document.querySelectorAll(\"#\" + qId + \" .cc-select-option\"), 'selection');\r\n                self.selectOptions(selectedValueText);\r\n                selectedValueText;\r\n                if (selectedOptionText.length < 1) {\r\n                    selectionTrigger.textContent = 'Select';\r\n                }\r\n                else {\r\n                    selectionTrigger.textContent = selectedOptionText;\r\n                }\r\n                return false;\r\n            }\r\n        });\r\n        this.listeners.push(ref2);\r\n        ref2.internalHandler = this.util.listener(this.$body, ref2.type, ref2.id, ref2.cb);\r\n        var ref = this.util.initListener('click', \"#\" + qId + \" .cc-select-trigger\", function (e) {\r\n            self.$html.addEventListener('click', function (e) {\r\n                if (!self.util.hasClass(e.target, 'cc-select-option')) {\r\n                    self.util.removeClassAll(document.querySelectorAll(\".cc-select\"), \"opened\");\r\n                    self.$html.removeEventListener('click', function () {\r\n                    });\r\n                }\r\n            });\r\n            var ccSelect = this.parentNode;\r\n            window.ccsdkDebug ? console.log('click cc-select-trigger', ccSelect) : '';\r\n            self.util.toggleClass(ccSelect, \"opened\");\r\n            e.stopPropagation();\r\n        });\r\n        this.listeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    Select.prototype.destroyListeners = function () {\r\n        for (var _i = 0, _a = this.listeners; _i < _a.length; _i++) {\r\n            var listener = _a[_i];\r\n            this.util.removeListener(this.$body, listener.type, listener.internalHandler);\r\n        }\r\n        return true;\r\n    };\r\n    Select.prototype.setValue = function (value, question, surveyHandler) {\r\n        var self = this;\r\n        var qId = self.qId;\r\n        var select;\r\n        select = document.querySelectorAll(\"#\" + qId + \" select\")[0];\r\n        select.value = value;\r\n        var selectTrigger = document.querySelectorAll(\"#\" + qId + \" .cc-select-trigger\")[0];\r\n        var selectedValueList = value.split(',');\r\n        var translatedSelection = selectedValueList.map(function (x) { return LanguageTextFilter_1.LanguageTextFilter.translateMultiSelectOption(surveyHandler, question, x); });\r\n        selectTrigger.textContent = translatedSelection.join(',');\r\n        selectTrigger.setAttribute('data-selection-value', value);\r\n    };\r\n    Select.prototype.selectOption = function (el) {\r\n        this.util.addClass(el, 'selection');\r\n    };\r\n    Select.prototype.removeOption = function (el) {\r\n        this.util.removeClass(el, 'selection');\r\n    };\r\n    Select.prototype.selectOptions = function (csv) {\r\n        var self = this;\r\n        if (csv) {\r\n            var allOptions = csv.split(',');\r\n            var _loop_1 = function (option) {\r\n                var domOptions = document.querySelectorAll(\"#\" + self.qId + \" .cc-select-option\");\r\n                Array.prototype.forEach.call(domOptions, function (el, i) {\r\n                    if (el.getAttribute('data-value') == option) {\r\n                        self.selectOption(el);\r\n                    }\r\n                    else {\r\n                    }\r\n                });\r\n            };\r\n            for (var _i = 0, allOptions_1 = allOptions; _i < allOptions_1.length; _i++) {\r\n                var option = allOptions_1[_i];\r\n                _loop_1(option);\r\n            }\r\n        }\r\n    };\r\n    Select.prototype.addOrRemoveFromList = function (listAsString, item) {\r\n        var list = listAsString.split(',');\r\n        var itemIndex = list.indexOf(item);\r\n        if (itemIndex !== -1) {\r\n            list.splice(itemIndex, 1);\r\n        }\r\n        else {\r\n            list.push(item);\r\n        }\r\n        return list.join(',');\r\n    };\r\n    return Select;\r\n}());\r\nexports.Select = Select;\r\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar filter_utils_1 = __webpack_require__(8);\r\nvar ConditionalFlowFilter = /** @class */ (function () {\r\n    function ConditionalFlowFilter() {\r\n    }\r\n    ConditionalFlowFilter.filterQuestion = function (surveyHandler, question) {\r\n        var aAddedCount = 0;\r\n        var aRemovedCount = 0;\r\n        if (surveyHandler.getAnswerForQuestionId(question.id) != null) {\r\n            for (var _i = 0, _a = surveyHandler.getConditionalSurveyQuestions(); _i < _a.length; _i++) {\r\n                var aQuestion = _a[_i];\r\n                // console.log( aQuestion );\r\n                if (aQuestion.conditionalFilter != null) {\r\n                    var iSatisfied = false;\r\n                    var iFailed = false;\r\n                    for (var _b = 0, _c = aQuestion.conditionalFilter.filterquestions; _b < _c.length; _b++) {\r\n                        var aFilterByQuestion = _c[_b];\r\n                        if (filter_utils_1.isAnd(aFilterByQuestion)) {\r\n                            if (filter_utils_1.doesSatisfy(surveyHandler, aFilterByQuestion) && !iFailed) {\r\n                                iSatisfied = true;\r\n                            }\r\n                            else {\r\n                                iFailed = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                        else if (filter_utils_1.isOr(aFilterByQuestion)) {\r\n                            if (filter_utils_1.doesSatisfy(surveyHandler, aFilterByQuestion)) {\r\n                                iSatisfied = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    var surveyQuestions = surveyHandler.getSurveyQuestions();\r\n                    if (iSatisfied && !iFailed) {\r\n                        if (surveyQuestions.indexOf(aQuestion) === -1) {\r\n                            surveyQuestions.push(aQuestion);\r\n                            aAddedCount++;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (surveyQuestions.indexOf(aQuestion) !== -1) {\r\n                            aRemovedCount++;\r\n                            surveyQuestions.splice(surveyQuestions.indexOf(aQuestion), 1);\r\n                            // surveyHandler.removePartial(aQuestion.id);\r\n                            //removing from partial requires not posting partial after each question rather than posting them all at once.\r\n                            surveyHandler.removeAnswer(aQuestion.id);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (aAddedCount > 0 || aRemovedCount > 0) {\r\n            surveyHandler.getSurveyQuestions().sort(filter_utils_1.questionCompare);\r\n            // surveyHandler.sendConditionalFLowQuestionsData(surveyHandler.getSurveyQuestions().size());\r\n            return true;\r\n        }\r\n        else {\r\n            // return false;\r\n        }\r\n        // ( window as any ).ccsdkDebug ? console.log( surveyHandler.getSurveyQuestions() ) : '';\r\n    };\r\n    return ConditionalFlowFilter;\r\n}());\r\nexports.ConditionalFlowFilter = ConditionalFlowFilter;\r\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(12);\nmodule.exports = __webpack_require__(13);\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\n// Production steps of ECMA-262, Edition 6, 22.1.2.1\r\nif (!Array.from) {\r\n    Array.from = (function () {\r\n        var toStr = Object.prototype.toString;\r\n        var isCallable = function (fn) {\r\n            return typeof fn === 'function' || toStr.call(fn) === '[object Function]';\r\n        };\r\n        var toInteger = function (value) {\r\n            var number = Number(value);\r\n            if (isNaN(number)) {\r\n                return 0;\r\n            }\r\n            if (number === 0 || !isFinite(number)) {\r\n                return number;\r\n            }\r\n            return (number > 0 ? 1 : -1) * Math.floor(Math.abs(number));\r\n        };\r\n        var maxSafeInteger = Math.pow(2, 53) - 1;\r\n        var toLength = function (value) {\r\n            var len = toInteger(value);\r\n            return Math.min(Math.max(len, 0), maxSafeInteger);\r\n        };\r\n        // The length property of the from method is 1.\r\n        return function from(arrayLike /*, mapFn, thisArg */) {\r\n            // 1. Let C be the this value.\r\n            var C = this;\r\n            // 2. Let items be ToObject(arrayLike).\r\n            var items = Object(arrayLike);\r\n            // 3. ReturnIfAbrupt(items).\r\n            if (arrayLike == null) {\r\n                throw new TypeError('Array.from requires an array-like object - not null or undefined');\r\n            }\r\n            // 4. If mapfn is undefined, then let mapping be false.\r\n            var mapFn = arguments.length > 1 ? arguments[1] : void undefined;\r\n            var T;\r\n            if (typeof mapFn !== 'undefined') {\r\n                // 5. else\r\n                // 5. a If IsCallable(mapfn) is false, throw a TypeError exception.\r\n                if (!isCallable(mapFn)) {\r\n                    throw new TypeError('Array.from: when provided, the second argument must be a function');\r\n                }\r\n                // 5. b. If thisArg was supplied, let T be thisArg; else let T be undefined.\r\n                if (arguments.length > 2) {\r\n                    T = arguments[2];\r\n                }\r\n            }\r\n            // 10. Let lenValue be Get(items, \"length\").\r\n            // 11. Let len be ToLength(lenValue).\r\n            var len = toLength(items.length);\r\n            // 13. If IsConstructor(C) is true, then\r\n            // 13. a. Let A be the result of calling the [[Construct]] internal method \r\n            // of C with an argument list containing the single item len.\r\n            // 14. a. Else, Let A be ArrayCreate(len).\r\n            var A = isCallable(C) ? Object(new C(len)) : new Array(len);\r\n            // 16. Let k be 0.\r\n            var k = 0;\r\n            // 17. Repeat, while k < len… (also steps a - h)\r\n            var kValue;\r\n            while (k < len) {\r\n                kValue = items[k];\r\n                if (mapFn) {\r\n                    A[k] = typeof T === 'undefined' ? mapFn(kValue, k) : mapFn.call(T, kValue, k);\r\n                }\r\n                else {\r\n                    A[k] = kValue;\r\n                }\r\n                k += 1;\r\n            }\r\n            // 18. Let putStatus be Put(A, \"length\", len, true).\r\n            A.length = len;\r\n            // 20. Return A.\r\n            return A;\r\n        };\r\n    }());\r\n}\r\n// custom event polyfill\r\n(function () {\r\n    if (typeof window.CustomEvent === \"function\")\r\n        return false;\r\n    function CustomEvent(event, params) {\r\n        params = params || {\r\n            bubbles: false,\r\n            cancelable: false,\r\n            detail: undefined\r\n        };\r\n        var evt = document.createEvent('CustomEvent');\r\n        evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\r\n        return evt;\r\n    }\r\n    CustomEvent.prototype = window.Event.prototype;\r\n    window.CustomEvent = CustomEvent;\r\n})();\r\n// includes polyfill\r\nif (!Array.prototype.includes) {\r\n    Object.defineProperty(Array.prototype, 'includes', {\r\n        value: function (searchElement, fromIndex) {\r\n            if (this == null) {\r\n                throw new TypeError('\"this\" is null or not defined');\r\n            }\r\n            // 1. Let O be ? ToObject(this value).\r\n            var o = Object(this);\r\n            // 2. Let len be ? ToLength(? Get(O, \"length\")).\r\n            var len = o.length >>> 0;\r\n            // 3. If len is 0, return false.\r\n            if (len === 0) {\r\n                return false;\r\n            }\r\n            // 4. Let n be ? ToInteger(fromIndex).\r\n            //    (If fromIndex is undefined, this step produces the value 0.)\r\n            var n = fromIndex | 0;\r\n            // 5. If n ≥ 0, then\r\n            //  a. Let k be n.\r\n            // 6. Else n < 0,\r\n            //  a. Let k be len + n.\r\n            //  b. If k < 0, let k be 0.\r\n            var k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);\r\n            function sameValueZero(x, y) {\r\n                return x === y || (typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y));\r\n            }\r\n            // 7. Repeat, while k < len\r\n            while (k < len) {\r\n                // a. Let elementK be the result of ? Get(O, ! ToString(k)).\r\n                // b. If SameValueZero(searchElement, elementK) is true, return true.\r\n                if (sameValueZero(o[k], searchElement)) {\r\n                    return true;\r\n                }\r\n                // c. Increase k by 1. \r\n                k++;\r\n            }\r\n            // 8. Return false\r\n            return false;\r\n        }\r\n    });\r\n}\r\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Cookie_1 = __webpack_require__(2);\r\nvar SurveyManager_1 = __webpack_require__(3);\r\nvar Survey_1 = __webpack_require__(14);\r\n/**\r\n * functions that are exposed to SDK User are written here.\r\n * Entry point for CCSDK.\r\n */\r\n// declare var Sentry: any;\r\nvar localCCSDK = {\r\n    init: init,\r\n    destroy: destroy,\r\n    trigger: trigger,\r\n    hide: hide,\r\n    show: show,\r\n    on: on,\r\n    prefill: prefill,\r\n    prefillByTag: prefillByTag,\r\n    prefillByNote: prefillByNote\r\n};\r\n// let instances : any = {};\r\nwindow.globalSurveyRunning = false;\r\nwindow.ccsdkDebug = false;\r\nwindow.isMobile = window.innerWidth <= 768 ? true : false;\r\nif (typeof window.CCSDK !== 'undefined') {\r\n    var queue = window.CCSDK.q;\r\n    window.CCSDK = function () {\r\n        if (arguments && arguments.length == 0) {\r\n            var time = new Date();\r\n        }\r\n        else {\r\n            window.ccsdkDebug ? console.log(arguments) : '';\r\n            var args = Array.from(arguments);\r\n            //Call this functions as ccsdk('functionName', ['argument1', 'argument2']);\r\n            var functionName = args.splice(0, 1)[0];\r\n            window.ccsdkDebug ? console.log(functionName) : '';\r\n            return localCCSDK[functionName].apply(this, args);\r\n        }\r\n    };\r\n    if (queue) {\r\n        for (var _i = 0, queue_1 = queue; _i < queue_1.length; _i++) {\r\n            var q = queue_1[_i];\r\n            var args = Array.from(q);\r\n            var functionName = args.splice(0, 1)[0];\r\n            localCCSDK[functionName].apply(this, args);\r\n        }\r\n    }\r\n    var eventCCReady = document.createEvent('Event');\r\n    eventCCReady.initEvent('ccready', true, true);\r\n    document.dispatchEvent(eventCCReady);\r\n}\r\nfunction init(surveyToken) {\r\n    //config options can be set in arguments[1]\r\n    //available config options : themeColor\r\n    surveyToken = decodeURIComponent(surveyToken).trim();\r\n    var config = (typeof arguments[1] === 'object') ? arguments[1] : {};\r\n    //create survey instance\r\n    if (typeof Cookie_1.Cookie.get(surveyToken + '-finish') !== 'undefined' && Cookie_1.Cookie.get(surveyToken + '-finish')) {\r\n        return;\r\n    }\r\n    if (typeof Cookie_1.Cookie.get(surveyToken + '-coolDown') !== 'undefined' && Cookie_1.Cookie.get(surveyToken + '-coolDown')) {\r\n        return;\r\n    }\r\n    if (typeof config.isActive !== 'undefined' && config.isActive) {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken] = (SurveyManager_1.SurveyManager.surveyInstances[surveyToken]) ? SurveyManager_1.SurveyManager.surveyInstances[surveyToken] : new Survey_1.Survey(surveyToken, config);\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].tracking.trackEvent('Init MicroSurvey', {\r\n            token: surveyToken,\r\n            data: {\r\n                name: window.isMobile ? 'Mobile Mode' : 'Desktop Mode',\r\n                action: surveyToken\r\n            }\r\n        }, null, null);\r\n        return SurveyManager_1.SurveyManager.surveyInstances[surveyToken];\r\n    }\r\n    else {\r\n        //do nothing\r\n    }\r\n}\r\nexports.init = init;\r\nfunction destroy(surveyToken) {\r\n    //remove from trigger manager, delete instance.\r\n    if (!SurveyManager_1.SurveyManager ||\r\n        !SurveyManager_1.SurveyManager.surveyInstances ||\r\n        !SurveyManager_1.SurveyManager.surveyInstances[surveyToken] ||\r\n        !SurveyManager_1.SurveyManager.surveyInstances[surveyToken].dom) {\r\n        return;\r\n    }\r\n    SurveyManager_1.SurveyManager.surveyInstances[surveyToken].dom.destroyListeners();\r\n    SurveyManager_1.SurveyManager.surveyInstances[surveyToken].destroy();\r\n    delete SurveyManager_1.SurveyManager.surveyInstances[surveyToken];\r\n}\r\nexports.destroy = destroy;\r\n//\r\nfunction trigger(surveyToken, type, target) {\r\n    window.ccsdkDebug ? console.log(SurveyManager_1.SurveyManager.surveyInstances) : '';\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].tracking.trackEvent('Trigger Type', {\r\n            token: surveyToken,\r\n            data: {\r\n                name: type,\r\n                action: surveyToken\r\n            }\r\n        }, null, null);\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].trigger(type, target);\r\n    }\r\n    //tell trigger manager to register trigger.\r\n}\r\nexports.trigger = trigger;\r\nfunction on(surveyToken, type, callback) {\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].tracking.trackEvent('Event Listeners', {\r\n            token: surveyToken,\r\n            data: {\r\n                name: type,\r\n                action: surveyToken\r\n            }\r\n        }, null, null);\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].on(type, callback);\r\n    }\r\n}\r\nexports.on = on;\r\nfunction prefill(surveyToken) {\r\n    var restArgs = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        restArgs[_i - 1] = arguments[_i];\r\n    }\r\n    var _a;\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        var questionId = void 0;\r\n        if (typeof restArgs[0] === 'string') {\r\n            questionId = restArgs[0];\r\n        }\r\n        else {\r\n            questionId = Object.keys(restArgs[0]).length + ' Questions';\r\n        }\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].tracking.trackEvent('Prefill', {\r\n            token: surveyToken,\r\n            data: {\r\n                name: questionId,\r\n                action: surveyToken\r\n            }\r\n        }, null, null);\r\n        (_a = SurveyManager_1.SurveyManager.surveyInstances[surveyToken]).prefill.apply(_a, restArgs.concat(['DIRECT']));\r\n    }\r\n}\r\nexports.prefill = prefill;\r\nfunction prefillByTag(surveyToken) {\r\n    var restArgs = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        restArgs[_i - 1] = arguments[_i];\r\n    }\r\n    var _a;\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        var questionTag = void 0;\r\n        if (typeof restArgs[0] === 'string') {\r\n            questionTag = restArgs[0];\r\n        }\r\n        else {\r\n            questionTag = Object.keys(restArgs[0]).length + ' Questions';\r\n        }\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].tracking.trackEvent('Prefill by tag', {\r\n            token: surveyToken,\r\n            data: {\r\n                name: questionTag,\r\n                action: surveyToken\r\n            }\r\n        }, null, null);\r\n        (_a = SurveyManager_1.SurveyManager.surveyInstances[surveyToken]).prefill.apply(_a, restArgs.concat(['BY_TAG']));\r\n    }\r\n}\r\nexports.prefillByTag = prefillByTag;\r\nfunction prefillByNote(surveyToken) {\r\n    var restArgs = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        restArgs[_i - 1] = arguments[_i];\r\n    }\r\n    var _a;\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        var questionNote = void 0;\r\n        if (typeof restArgs[0] === 'string') {\r\n            questionNote = restArgs[0];\r\n        }\r\n        else {\r\n            questionNote = Object.keys(restArgs[0]).length + ' Questions';\r\n        }\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].tracking.trackEvent('Prefill by Note', {\r\n            token: surveyToken,\r\n            data: {\r\n                name: questionNote,\r\n                action: surveyToken\r\n            }\r\n        }, null, null);\r\n        (_a = SurveyManager_1.SurveyManager.surveyInstances[surveyToken]).prefill.apply(_a, restArgs.concat(['BY_NOTE']));\r\n    }\r\n}\r\nexports.prefillByNote = prefillByNote;\r\nfunction show(surveyToken) {\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].show();\r\n    }\r\n}\r\nexports.show = show;\r\nfunction hide(surveyToken) {\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].dom.destroyListeners();\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].destroy();\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].hide();\r\n    }\r\n}\r\nexports.hide = hide;\r\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar SurveyHandler_1 = __webpack_require__(15);\r\nvar DomSurvey_1 = __webpack_require__(46);\r\nvar DomUtilities_1 = __webpack_require__(0);\r\nvar Constants_1 = __webpack_require__(1);\r\nvar SurveyManager_1 = __webpack_require__(3);\r\nvar TriggerManager_1 = __webpack_require__(49);\r\nvar Triggers_1 = __webpack_require__(50);\r\nvar Request_1 = __webpack_require__(4);\r\nvar Config_1 = __webpack_require__(6);\r\nvar tracking_1 = __webpack_require__(52);\r\nvar Survey = /** @class */ (function () {\r\n    function Survey(surveyToken, config) {\r\n        this.requester = new Request_1.RequestHelper();\r\n        this.isThrottled = true;\r\n        this.surveyDone = false;\r\n        this.surveyStatus = '';\r\n        this.surveyToken = surveyToken;\r\n        this.config = config;\r\n        this.surveyRunning = false;\r\n        this.thorttlingLogic = null;\r\n        this.tracking = new tracking_1.MatomoTracker();\r\n        this.tracking.token = surveyToken;\r\n        if (typeof this.config.textDirection === 'undefined') {\r\n            this.config.textDirection = \"ltr\";\r\n        }\r\n        this.triggers = new Triggers_1.Triggers(this);\r\n        TriggerManager_1.TriggerManager.addSurvey(this.surveyToken, this.triggers);\r\n        this.survey = new SurveyHandler_1.SurveyHandler(this);\r\n        this.util = new DomUtilities_1.DomUtilities;\r\n        //set themeColor of survey\r\n        this.config.brandColor = (this.config && this.config.brandColor) ?\r\n            this.config.brandColor : \"#db3c39\";\r\n        //use config variable textDirection and set dir\r\n        this.setHtmlTextDirection();\r\n        this.setDisplayOptions();\r\n        this.util.trigger(document, this.surveyToken + '-ready', { 'survey': this });\r\n        //do login\r\n        this.config.username = \"test\";\r\n        this.config.password = \"test\";\r\n        this.config.location = \"location\";\r\n        this.config.language = \"English (Default)\";\r\n        //check trigger conditions and add itself to \r\n        //based on new config\r\n        //gotta and these.\r\n        this.trigger(\"click\", this.config.cssSelector);\r\n        // this.trigger(\"scroll-pixels\", this.config.scrollPercent);\r\n        // this.trigger(\"page-time\", this.config.waitSeconds);\r\n        // this.trigger(\"url-match\", this.config.grepURL);\r\n        // this.trigger(\"url-not-match\", this.config.grepInvertURL);\r\n        // this.config.scrollPercent = 10;\r\n        // this.config.waitSeconds = 5;\r\n        this.triggers.setConditionalTriggers(this.config);\r\n        // this.login(function() {\r\n        //on login\r\n        // });\r\n    }\r\n    Survey.prototype.getSurveyThrottlingLogic = function (cb) {\r\n        var getThrottleUrl = Config_1.Config.API_URL + Config_1.Config.GET_SURVEY_THROTTLE_LOGIC.replace('{location}', this.config.location);\r\n        var headers = {};\r\n        headers[Constants_1.Constants.AUTHORIZATION] = Constants_1.Constants.AUTHORIZATION_BEARER + \" \" + this.loginData.access_token;\r\n        var self = this;\r\n        var successcb = function (data) {\r\n            self.thorttlingLogic = data;\r\n            self.checkThrottling(cb);\r\n        };\r\n        Request_1.RequestHelper.getWithHeaders(getThrottleUrl, headers, successcb, null);\r\n    };\r\n    Survey.prototype.checkThrottling = function (cb) {\r\n        if (this.thorttlingLogic != null) {\r\n            if (this.thorttlingLogic.inputIds == null) {\r\n                this.thorttlingLogic.inputIds = [];\r\n            }\r\n            this.thorttlingLogic.inputIds.push(this.thorttlingLogic[this.thorttlingLogic.uniqueIDQuestionIdOrTag.toLowerCase()]);\r\n            if (this.thorttlingLogic.logics != null && this.thorttlingLogic.logics.length > 0 && this.config != null) {\r\n                this.thorttlingLogic.logics[0].filter.location = [];\r\n                this.thorttlingLogic.logics[0].filter.location.push(this.config.location);\r\n            }\r\n        }\r\n        var self = this;\r\n        var postThrottleUrl = Config_1.Config.API_URL + Config_1.Config.POST_THROTTLING;\r\n        var headers = {};\r\n        headers[Constants_1.Constants.AUTHORIZATION] = Constants_1.Constants.AUTHORIZATION + \" \" + this.loginData.access_token;\r\n        var successcb = function (throttleResponse) {\r\n            if (typeof throttleResponse[0][self.thorttlingLogic.uniqueIDQuestionIdOrTag.toLowerCase()] && throttleResponse[0].value) {\r\n                //get survey data?  \r\n                cb();\r\n            }\r\n        };\r\n        Request_1.RequestHelper.postWithHeaders(postThrottleUrl, this.thorttlingLogic, headers, successcb, null);\r\n    };\r\n    Survey.prototype.addThrottlingEntries = function (isOpen) {\r\n        var _this = this;\r\n        var addThrottleUrl = Config_1.Config.API_URL + Config_1.Config.POST_THROTTLING_ADD_ENTRIES;\r\n        var headers = {};\r\n        this.loginData = { access_token: \"help\" };\r\n        headers[Constants_1.Constants.AUTHORIZATION] = Constants_1.Constants.AUTHORIZATION + \" \" + this.loginData.access_token;\r\n        //fill this from config and data.\r\n        var successcb = function (throttleResponse) {\r\n            _this.debug ? console.log(throttleResponse) : '';\r\n        };\r\n        Request_1.RequestHelper.postWithHeaders(addThrottleUrl, {\r\n            user: \"\",\r\n            mobile: \"\",\r\n            emailId: \"\",\r\n            customId: \"\",\r\n            surveySentDate: \"\",\r\n            surveyOpenDate: \"\",\r\n            channel: \"\",\r\n            isOpened: isOpen\r\n        }, headers, successcb, null);\r\n    };\r\n    Survey.prototype.setupSurvey = function () {\r\n        // this.getSurveyData();\r\n        this.initSurvey();\r\n    };\r\n    Survey.prototype.setHtmlTextDirection = function () {\r\n        var ccSDKElement = document.querySelector('.cc-sdk');\r\n        if (!ccSDKElement) {\r\n            return;\r\n        }\r\n        var ccSDKDir = ccSDKElement.getAttribute('dir');\r\n        var direction = (this.config && this.config.textDirection) ?\r\n            this.config.textDirection : (ccSDKDir ? ccSDKDir : \"ltr\");\r\n        ccSDKElement.setAttribute('dir', direction);\r\n    };\r\n    Survey.prototype.setDisplayOptions = function () {\r\n        this.survey.surveyDisplay.position = this.config && this.config.position ?\r\n            this.config.position : \"bottom right\";\r\n        var welcomePopupAnimation = 'hide-right-left';\r\n        // this.survey.surveyDisplay.welcomePopupAnimation =  this.config && this.config.display && this.config.display.welcomePopupAnimation ?\r\n        // \"hide-\"+ this.config.display.welcomePopupAnimation : \"hide-right-left\";\r\n        // this.survey.surveyDisplay.surveyPopupAnimation =  this.config && this.config.display && this.config.display.surveyPopupAnimation ?\r\n        // \"hide-\"+ this.config.display.surveyPopupAnimation : \"hide-right-left\";\r\n        // this.survey.surveyDisplay.surveyPosition =  this.config && this.config.display && this.config.display.surveyPosition ?\r\n        // this.config.display.surveyPosition : ( this.config.display.position.search(/bottom/gi)==-1?\"top\":\"bottom\" ) ;\r\n        switch (this.survey.surveyDisplay.position) {\r\n            case 'bottom right':\r\n                welcomePopupAnimation = 'hide-right-left';\r\n                break;\r\n            case 'right bottom':\r\n                welcomePopupAnimation = 'hide-right-left';\r\n                break;\r\n            case 'top right':\r\n                welcomePopupAnimation = 'hide-right-left';\r\n                break;\r\n            case 'right top':\r\n                welcomePopupAnimation = 'hide-right-left';\r\n                break;\r\n            case 'bottom left':\r\n                welcomePopupAnimation = 'hide-left-right';\r\n                break;\r\n            case 'left bottom':\r\n                welcomePopupAnimation = 'hide-left-right';\r\n                break;\r\n            case 'top left':\r\n                welcomePopupAnimation = 'hide-left-right';\r\n                break;\r\n            case 'left top':\r\n                welcomePopupAnimation = 'hide-left-right';\r\n                break;\r\n            default:\r\n                welcomePopupAnimation = 'hide-right-left';\r\n                break;\r\n        }\r\n        this.survey.surveyDisplay.welcomePopupAnimation = welcomePopupAnimation;\r\n        this.tracking.trackEvent('Welcome Pop up Position', {\r\n            token: this.tracking.token,\r\n            data: {\r\n                name: this.survey.surveyDisplay.position,\r\n                action: null\r\n            }\r\n        }, null, null);\r\n        this.survey.surveyDisplay.surveyPosition = this.config.position.search(/bottom/gi) == -1 ? \"top\" : \"bottom\";\r\n    };\r\n    Survey.prototype.getSurveyData = function () {\r\n        var self = this;\r\n        var successcb = function (surveyData) {\r\n            self.debug ? console.log(surveyData) : '';\r\n            // console.log(surveyData);\r\n            self.surveyData = surveyData;\r\n            if (surveyData && surveyData.questions && surveyData.questions[0]) {\r\n                self.tracking.username = surveyData.questions[0].user;\r\n            }\r\n            self.tracking.token = self.surveyToken;\r\n            self.tracking.trackEvent('Login Success', {\r\n                token: self.tracking.token,\r\n                data: {\r\n                    name: 'Token',\r\n                    action: self.surveyToken\r\n                }\r\n            }, console.log, console.error);\r\n            self.tracking.trackEvent('Survey Length', {\r\n                token: self.tracking.token,\r\n                data: {\r\n                    name: surveyData.questions.length + \" Questions\",\r\n                    action: (surveyData.preFill ? surveyData.preFill.length : 0) + \" Prefills\"\r\n                }\r\n            }, null, null);\r\n            var event = new CustomEvent(Constants_1.Constants.SURVEY_DATA_EVENT + \"-\" + self.surveyToken, { detail: JSON.parse(JSON.stringify(surveyData)) });\r\n            document.dispatchEvent(event);\r\n            if (!self.config.skipWelcomePage) {\r\n                self.dom.hideLoader();\r\n            }\r\n            if (self.surveyData) {\r\n                self.initSurveyQuestions();\r\n            }\r\n            else {\r\n                this.tracking.trackEvent('Expired Survey', {\r\n                    token: this.tracking.token,\r\n                    data: {\r\n                        name: null,\r\n                        action: null\r\n                    }\r\n                }, null, null);\r\n                self.survey.displayWelcomeQuestion(\"The Survey has been expired\");\r\n            }\r\n        };\r\n        var errorcb = null;\r\n        this.survey.fetchQuestions(successcb, errorcb);\r\n    };\r\n    Survey.prototype.initSurvey = function () {\r\n        //if survey already run don't run?\r\n        //if default trigger initiated and survey already run then don't run.\r\n        var self = this;\r\n        // if(!self.surveyRunning) {\r\n        //   self.surveyRunning = true;\r\n        // }\r\n        self.surveyRunning = true;\r\n        self.dom = new DomSurvey_1.DomSurvey(this);\r\n        self.dom.setTheme(self.config.brandColor, this.config.keepAlive ? this.config.keepAlive : 0);\r\n        // self.survey.attachSurvey(this.surveyData);\r\n        // self.config.language = \"हिन्दी\";\r\n        self.config.language = \"default\";\r\n        if (self.surveyToken && decodeURIComponent(self.surveyToken).trim() !== '' && !self.config.skipWelcomePage) {\r\n            self.survey.displayWelcomeQuestion();\r\n        }\r\n        else if (self.config.skipWelcomePage) {\r\n            var onImpressionEvent = new CustomEvent(Constants_1.Constants.SURVEY_IMPRESSION_EVENT + \"-\" + this.surveyToken);\r\n            document.dispatchEvent(onImpressionEvent);\r\n            self.dom.startSurvey();\r\n            self.survey.setCoolDownPeriod(self.config, self.surveyToken);\r\n            this.surveyStartTime = new Date();\r\n            self.survey.acceptAnswers();\r\n        }\r\n        self.dom.setupListeners();\r\n        // self.survey.displayLanguageSelector();\r\n        //survey start event.\r\n        // let onSurveyStartEvent = new CustomEvent(Constants.SURVEY_START_EVENT + \"-\" + this.surveyToken);\r\n        // document.dispatchEvent(onSurveyStartEvent);\r\n    };\r\n    Survey.prototype.initSurveyQuestions = function () {\r\n        var self = this;\r\n        self.survey.attachSurvey(this.surveyData);\r\n        // self.dom.setupListeners();\r\n        // self.config.language = \"हिन्दी\";\r\n        self.config.language = \"default\";\r\n        // self.survey.displayLanguageSelector();\r\n        //survey start event.\r\n        this.dom.initSurveyDom();\r\n        var onSurveyStartEvent = new CustomEvent(Constants_1.Constants.SURVEY_START_EVENT + \"-\" + this.surveyToken);\r\n        document.dispatchEvent(onSurveyStartEvent);\r\n    };\r\n    Survey.prototype.on = function (type, callback) {\r\n        document.addEventListener(type + \"-\" + this.surveyToken, function (e) {\r\n            callback(e.detail);\r\n        });\r\n    };\r\n    Survey.prototype.show = function () {\r\n        //do show and hide things.\r\n        SurveyManager_1.SurveyManager.setSurveyRunning();\r\n        //show survey\r\n        this.setupSurvey();\r\n    };\r\n    Survey.prototype.hide = function () {\r\n        SurveyManager_1.SurveyManager.unsetSurveyRunning();\r\n        this.survey.destroy();\r\n        this.tracking.trackEvent('Survey Destroyed', {\r\n            token: this.tracking.token,\r\n            data: {\r\n                name: (new Date() - window.globalSurveyStartTime) + 's',\r\n                action: null\r\n            }\r\n        }, null, null);\r\n    };\r\n    Survey.prototype.destroy = function () {\r\n        //remove all listeners?\r\n        SurveyManager_1.SurveyManager.unsetSurveyRunning();\r\n        this.survey.destroy();\r\n    };\r\n    Survey.prototype.prefill = function (restOfArgs, type) {\r\n        var _a;\r\n        var prefillObject;\r\n        if (typeof restOfArgs[0] !== 'object') {\r\n            prefillObject = (_a = {},\r\n                _a[restOfArgs[0]] = restOfArgs[1],\r\n                _a);\r\n        }\r\n        else {\r\n            prefillObject = restOfArgs[0];\r\n        }\r\n        //save this in this.surveyHandler\r\n        if (type === 'DIRECT') {\r\n            this.survey.fillPrefillDirect(prefillObject);\r\n        }\r\n        else if (type === 'BY_TAG') {\r\n            this.survey.fillPrefill(prefillObject);\r\n        }\r\n        else if (type === 'BY_NOTE') {\r\n            this.survey.fillPrefillByNote(prefillObject);\r\n        }\r\n    };\r\n    Survey.prototype.trigger = function (type, target) {\r\n        var self = this;\r\n        switch (type) {\r\n            case 'click':\r\n                console.log('enable click trigger ##');\r\n                this.triggers.enableClickTrigger(target, function () {\r\n                    // self.initSurvey();\r\n                    // Scrollbar.initAll();\r\n                    // self.slider = new Slider();\r\n                    // self.setupSurvey();\r\n                    SurveyManager_1.SurveyManager.addSurvey(self.surveyToken);\r\n                });\r\n                break;\r\n            case 'page-count':\r\n                var count = parseInt(target);\r\n                this.triggers.enablePageCountTrigger(count);\r\n                break;\r\n            case 'site-count':\r\n                var count2 = parseInt(target);\r\n                this.triggers.enableSiteCountTrigger(count2);\r\n                break;\r\n            case 'page-time':\r\n                this.triggers.enablePageTimeTrigger(parseInt(target));\r\n                break;\r\n            case 'site-time':\r\n                this.triggers.enableSiteTimeTrigger(parseInt(target));\r\n                break;\r\n            case 'url-match':\r\n                this.triggers.enablePopUpByURLPatternTrigger(target);\r\n                break;\r\n            case 'url-not-match':\r\n                this.triggers.enablePopUpByNotURLPatternTrigger(target);\r\n                break;\r\n            case 'utm-match':\r\n                this.triggers.enablePopUpByUTMPatternTrigger(target);\r\n                break;\r\n            case 'scroll-pixels':\r\n                this.triggers.enableScrollPixelsTrigger(parseInt(target));\r\n                break;\r\n            case 'launch':\r\n                SurveyManager_1.SurveyManager.addSurvey(self.surveyToken);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n    return Survey;\r\n}());\r\nexports.Survey = Survey;\r\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// import 'whatwg-fetch';\r\nvar Config_1 = __webpack_require__(6);\r\nvar Request_1 = __webpack_require__(4);\r\nvar templates_1 = __webpack_require__(7);\r\nvar DomUtilities_1 = __webpack_require__(0);\r\nvar ConditionalTextFilter_1 = __webpack_require__(45);\r\nvar Constants_1 = __webpack_require__(1);\r\nvar LanguageTextFilter_1 = __webpack_require__(5);\r\nvar Select_1 = __webpack_require__(9);\r\nvar Cookie_1 = __webpack_require__(2);\r\nvar ConditionalFlowFilter_1 = __webpack_require__(10);\r\nvar SurveyHandler = /** @class */ (function () {\r\n    // isPartialAvailable : Boolean;\r\n    function SurveyHandler(ccsdk) {\r\n        var _this = this;\r\n        this.answers = {};\r\n        this.surveyAnswers = {};\r\n        this._prefillsPartiallyPosted = false;\r\n        this.surveyToken = ccsdk.surveyToken;\r\n        this.surveyData = {};\r\n        this.surveyDisplay = {\r\n            'position': '',\r\n            'surveyPosition': '',\r\n            'welcomePopupAnimation': '',\r\n            'surveyPopupAnimation': '',\r\n        };\r\n        this.ccsdk = ccsdk;\r\n        this.domListeners = [];\r\n        this.questions = [];\r\n        this.questionsToDisplay = [];\r\n        this.prefillQuestions = [];\r\n        this.conditionalQuestions = [];\r\n        this.prefillResponses = [];\r\n        this.prefillWithTags = {};\r\n        this.prefillWithNote = {};\r\n        this.prefillDirect = {};\r\n        this.answers = {};\r\n        this.util = new DomUtilities_1.DomUtilities();\r\n        this.dom = ccsdk.dom;\r\n        this.displayThankYouCb = function (e) {\r\n            //perform final post\r\n            _this.finalPost(null, null);\r\n            if (_this.ccsdk && _this.ccsdk.tracking) {\r\n                _this.ccsdk.tracking.trackEvent('Completed Survey', {\r\n                    token: _this.ccsdk.tracking.token,\r\n                    data: {\r\n                        name: null,\r\n                        action: null\r\n                    }\r\n                }, null, null);\r\n            }\r\n            var thankyouHtml = templates_1.templates.thankyou;\r\n            // thankyouHtml = thankyouHtml.replace(\"{{question}}\", this.surveyData.thankyouText);\r\n            // thankyouHtml = thankyouHtml.replace(\"{{question}}\", LanguageTextFilter.translateMessages(this, \"thankyouText\"));\r\n            var thankyouText = _this.ccsdk.config.thankyouText ? _this.ccsdk.config.thankyouText : (_this.surveyData.thankyouText ? _this.surveyData.thankyouText : 'Thank You');\r\n            var startText = _this.ccsdk.config.startButtonText ? _this.ccsdk.config.startButtonText : 'Start';\r\n            thankyouHtml = thankyouHtml.replace(\"{{question}}\", thankyouText);\r\n            thankyouHtml = thankyouHtml.replace(\"{{button}}\", startText);\r\n            thankyouHtml = thankyouHtml.replace(\"{{branding}}\", _this.surveyData.branding && _this.surveyData.branding.toUpperCase() === 'NONE' ? 'no-branding' : 'full-branding');\r\n            _this.ccsdk.dom.replaceInQuestionsContainer(thankyouHtml);\r\n            //TODO : Fix this Add class not working???\r\n            var thankyouContainer = _this.util.get(\"#cc-thankyou-container\");\r\n            window.ccsdkDebug ? console.log(thankyouContainer) : '';\r\n            _this.util.addClass(thankyouContainer[0], 'show-thankyou-slide');\r\n            var onSurveyEndEvent = new CustomEvent(Constants_1.Constants.SURVEY_END_EVENT + \"-\" + _this.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyEndEvent);\r\n            //set done cookie for 30 days.\r\n            Cookie_1.Cookie.set(_this.surveyToken + '-finish', 'true', 30, '/');\r\n            setTimeout(function () {\r\n                _this.ccsdk.dom.destroyListeners();\r\n                _this.destroy();\r\n            }, 2000);\r\n        };\r\n        this.destroySurveyCb = function (e) {\r\n            var self = _this;\r\n            //send end survey event.\r\n            var onSurveyEndEvent = new CustomEvent(Constants_1.Constants.SURVEY_END_EVENT + \"-\" + _this.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyEndEvent);\r\n            self.destroy();\r\n        };\r\n        this.acceptAnswersCb = function (e) {\r\n            var self = _this;\r\n            // (window as any).ccsdkDebug?console.log(self):'';\r\n            // (window as any).ccsdkDebug?console.log('question answered',e:'')\r\n            var data = e.detail;\r\n            var response = {};\r\n            response.questionId = data.questionId;\r\n            switch (data.type) {\r\n                case 'scale':\r\n                    response.text = null;\r\n                    response.number = Number(data.data.number);\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'nps':\r\n                    response.text = null;\r\n                    response.number = Number(data.data.number);\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'radio':\r\n                    response.text = data.data.text;\r\n                    response.number = null;\r\n                    // response.number = Number(data.data.number);\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'radioImage':\r\n                    response.text = data.data.text;\r\n                    response.number = null;\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'smile':\r\n                    response.text = null;\r\n                    response.number = Number(data.data.number);\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'star':\r\n                    response.text = null;\r\n                    response.number = Number(data.data.number);\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'multiline':\r\n                    response.text = data.data.text;\r\n                    response.number = null;\r\n                    // (window as any).ccsdkDebug?console.log(data):'';\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    self.ccsdk.dom.setQIndex(data.index);\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'singleline':\r\n                    response.text = data.data.text;\r\n                    response.number = null;\r\n                    // (window as any).ccsdkDebug?console.log(data):'';\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    self.ccsdk.dom.setQIndex(data.index);\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'number':\r\n                    response.text = null;\r\n                    response.number = Number(data.data.number);\r\n                    // (window as any).ccsdkDebug?console.log(data):'';\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    self.ccsdk.dom.setQIndex(data.index);\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'checkbox':\r\n                    response.text = data.data.text;\r\n                    response.number = null;\r\n                    // (window as any).ccsdkDebug?console.log(data):'';\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    self.ccsdk.dom.setQIndex(data.index);\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'select':\r\n                    response.text = data.data.text;\r\n                    response.number = null;\r\n                    // (window as any).ccsdkDebug?console.log(data):'';\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    self.ccsdk.dom.setQIndex(data.index);\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'slider':\r\n                    response.text = data.data.text;\r\n                    response.number = Number(data.data.number);\r\n                    // (window as any).ccsdkDebug?console.log(data):'';\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    self.ccsdk.dom.setQIndex(data.index);\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        };\r\n    }\r\n    SurveyHandler.prototype.fetchQuestions = function (successcb, errorcb) {\r\n        this.randomNumber = parseInt((String)(Math.random() * 1000));\r\n        var surveyUrl = Config_1.Config.SURVEY_BY_TOKEN.replace(\"{token}\", \"\" + this.surveyToken);\r\n        // surveyUrl = surveyUrl.replace(\"{tabletId}\", \"\" + this.randomNumber);\r\n        surveyUrl = Config_1.Config.API_URL + surveyUrl;\r\n        Request_1.RequestHelper.get(surveyUrl, successcb, errorcb);\r\n        // (window as any).ccsdkDebug?console.log(data):'';\r\n        // this.surveyData = data.then(function();\r\n        // (window as any).ccsdkDebug?console.log(this.surveyData):'';\r\n    };\r\n    SurveyHandler.prototype.removeAnswer = function (questionId) {\r\n        delete this.answers[questionId];\r\n        delete this.surveyAnswers[questionId];\r\n    };\r\n    SurveyHandler.prototype.attachSurvey = function (surveyData) {\r\n        this.surveyData = surveyData;\r\n        this.setupPrefill();\r\n        this.setupSurveyContainer();\r\n        //clean survey\r\n        this.cleanSurvey();\r\n        this.displayQuestions();\r\n        this.displayThankYou();\r\n        this.destroySurvey();\r\n    };\r\n    SurveyHandler.prototype.setupPrefill = function () {\r\n        var _this = this;\r\n        if (this.surveyData && this.surveyData.preFill && this.surveyData.preFill.length > 0) {\r\n            this.surveyData.preFill.map(function (response) {\r\n                _this.fillPrefillQuestionObject(response.questionId, response);\r\n            });\r\n        }\r\n    };\r\n    SurveyHandler.prototype.cleanSurvey = function () {\r\n        this.questionsToDisplay = [];\r\n        this.answers = {};\r\n        this.surveyAnswers = {};\r\n        this.conditionalQuestions = [];\r\n    };\r\n    SurveyHandler.prototype.setupSurveyContainer = function () {\r\n        var surveyHtml = templates_1.templates.question_survey;\r\n        surveyHtml = surveyHtml.replace(\"{{surveyToken}}\", this.surveyToken);\r\n        surveyHtml = surveyHtml.replace(\"{{animation}}\", this.surveyDisplay.surveyPopupAnimation);\r\n        surveyHtml = surveyHtml.replace(/{{location}}/g, this.surveyDisplay.surveyPosition);\r\n        this.ccsdk.dom.appendInBody(surveyHtml);\r\n    };\r\n    SurveyHandler.prototype.displayQuestionSelector = function () {\r\n    };\r\n    SurveyHandler.prototype.displayWelcomeQuestion = function (warningWelcomeText) {\r\n        //call this with true when welcome container is clicked.\r\n        // this.ccsdk.addThrottlingEntries(false);\r\n        var onSurveyImpressionEvent = new CustomEvent(Constants_1.Constants.SURVEY_IMPRESSION_EVENT + \"-\" + this.surveyToken);\r\n        document.dispatchEvent(onSurveyImpressionEvent);\r\n        this.ccsdk.surveyStartTime = new Date();\r\n        var self = this;\r\n        var welcomeHtml = templates_1.templates.question_start;\r\n        welcomeHtml = welcomeHtml.replace(\"{{surveyToken}}\", this.surveyToken);\r\n        // welcomeHtml = welcomeHtml.replace(\"{{question}}\", this.surveyData.welcomeText);\r\n        var welcomeText = this.ccsdk.config.welcomeText ? this.ccsdk.config.welcomeText : 'Welcome';\r\n        // welcomeHtml = welcomeHtml.replace(\"{{question}}\", LanguageTextFilter.translateMessages(this, \"welcomeText\"));\r\n        var startText = this.ccsdk.config.startButtonText ? this.ccsdk.config.startButtonText : 'Start';\r\n        if (warningWelcomeText) {\r\n            document.getElementById(this.surveyToken + \"-welcome\").remove();\r\n            welcomeHtml = welcomeHtml.replace(\"{{question}}\", warningWelcomeText);\r\n            welcomeHtml = welcomeHtml.replace(\"{{button}}\", \"Close\");\r\n            welcomeHtml = welcomeHtml.replace(\"{{action}}\", \"button-close\");\r\n        }\r\n        else {\r\n            welcomeHtml = welcomeHtml.replace(\"{{question}}\", welcomeText);\r\n            welcomeHtml = welcomeHtml.replace(\"{{button}}\", startText);\r\n            welcomeHtml = welcomeHtml.replace(\"{{action}}\", \"survey-start\");\r\n        }\r\n        welcomeHtml = welcomeHtml.replace(\"{{location}}\", this.surveyDisplay.position);\r\n        welcomeHtml = welcomeHtml.replace(\"{{animation}}\", this.surveyDisplay.welcomePopupAnimation);\r\n        // (window as any).ccsdkDebug?console.log(\"Appending in body\"):'';\r\n        this.ccsdk.dom.appendInBody(welcomeHtml);\r\n        this.ccsdk.dom.showWelcomeContainer();\r\n        this.setCoolDownPeriod(this.ccsdk.config, this.surveyToken);\r\n        if ((typeof this.ccsdk.config.keepAlive != undefined) && (this.ccsdk.config.keepAlive > 0)) {\r\n            this.welcomeQuestionDisplayTime = new Date();\r\n            this.welcomeInterval = setInterval(function () { self.checkWelcomeQuestionDisplay(self.ccsdk.config.keepAlive); }, 1000);\r\n        }\r\n        this.acceptAnswers();\r\n        // self.survey.displayLanguageSelector();\r\n    };\r\n    SurveyHandler.prototype.setCoolDownPeriod = function (campaign, surveyToken) {\r\n        if (campaign && campaign.coolDownPeriod && campaign.coolDownPeriod != 0) {\r\n            Cookie_1.Cookie.set(surveyToken + '-coolDown', 'true', campaign.coolDownPeriod / 86400, '/');\r\n        }\r\n        else {\r\n            Cookie_1.Cookie.set(surveyToken + '-coolDown', 'true', 1, '/');\r\n        }\r\n    };\r\n    SurveyHandler.prototype.checkWelcomeQuestionDisplay = function (keepAlive) {\r\n        var self = this;\r\n        var now = new Date();\r\n        if (keepAlive) {\r\n            // console.log((now.getTime() - this.welcomeQuestionDisplayTime.getTime()) / 1000);\r\n            if (keepAlive <= (now.getTime() - this.welcomeQuestionDisplayTime.getTime()) / 1000) {\r\n                self.killWelcomeQuestion();\r\n            }\r\n        }\r\n    };\r\n    SurveyHandler.prototype.killWelcomeQuestion = function () {\r\n        this.destroy();\r\n        clearInterval(this.welcomeInterval);\r\n    };\r\n    SurveyHandler.prototype.cancelKillWelcomeQuestion = function () {\r\n        clearInterval(this.welcomeInterval);\r\n    };\r\n    SurveyHandler.prototype.displayLanguageSelector = function () {\r\n        var self = this;\r\n        var options1;\r\n        var qId = 'languageSelector';\r\n        var cTemplate1 = templates_1.templates.language_selector;\r\n        options1 = this.util.generateLanguageSelectOptions([\"default\"]);\r\n        if (this.surveyData.translated) {\r\n            options1 = this.util.generateLanguageSelectOptions([\"default\"].concat(Object.keys(this.surveyData.translated)));\r\n        }\r\n        cTemplate1 = cTemplate1.replace(/{{questionId}}/g, qId);\r\n        cTemplate1 = cTemplate1.replace(\"{{options}}\", options1);\r\n        cTemplate1 = cTemplate1.replace(\"{{requiredLabel}}\", true ? \"*\" : \"\");\r\n        this.ccsdk.dom.replaceInQuestionsContainer(cTemplate1);\r\n        var $questionContainer = document.\r\n            querySelectorAll(\".cc-questions-container\");\r\n        var $body = document.getElementsByTagName(\"body\")[0];\r\n        this.util.addClass($questionContainer[0].firstChild, 'show-slide');\r\n        this.languageSelect = new Select_1.Select(qId);\r\n        var submitBtn = document.querySelectorAll('.submit-icon');\r\n        this.util.removeClassAll(submitBtn, 'act-cc-button-next');\r\n        this.util.addClassAll(submitBtn, 'act-cc-button-lang-next');\r\n        if (this.languageSelect) {\r\n            this.languageSelect.destroyListeners();\r\n        }\r\n        this.languageSelect.init(qId);\r\n        var selectRes = '';\r\n        if (this.util.checkIfListenerExists('#' + qId + \" .cc-select-options .cc-select-option\", this.domListeners)) {\r\n            // return;\r\n            window.ccsdkDebug ? console.log(\"display language select - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + \" .cc-select-options .cc-select-option\");\r\n        }\r\n        var ref = this.util.initListener('click', '#' + qId + \" .cc-select-options .cc-select-option\", function () {\r\n            self.ccsdk.debug ? console.log('languageSelectOption') : '';\r\n            selectRes = document.querySelectorAll('#' + qId + \" .cc-select-trigger\")[0].innerHTML;\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener($body, ref.type, ref.id, ref.cb);\r\n        var languageSelect2 = this.util.initListener(\"click\", \".act-cc-button-lang-next\", function () {\r\n            self.ccsdk.debug ? console.log('languageNext') : '';\r\n            self.ccsdk.config.language = \"default\";\r\n            self.ccsdk.config.language = selectRes; //language selection from menu then show first question\r\n            //set config rtl or ltr\r\n            var isRTL = /[\\u0600-\\u06FF]/.test(selectRes);\r\n            self.ccsdk.config.textDirection = isRTL ? 'rtl' : 'ltr';\r\n            self.ccsdk.setHtmlTextDirection();\r\n            self.util.removeClassAll(submitBtn, 'act-cc-button-lang-next');\r\n            self.util.addClassAll(submitBtn, 'act-cc-button-next');\r\n            self.ccsdk.dom.loadFirstQuestion(); // this.loadFirstQuestion();\r\n            // self.postPrefillPartialAnswer( false, null, null );\r\n        });\r\n        this.domListeners.push(languageSelect2);\r\n        languageSelect2.internalHandler = this.util.listener($body, languageSelect2.type, languageSelect2.id, languageSelect2.cb);\r\n        // this.util.addClass(thankyouContainer[0], 'show-thankyou-slide');\r\n        // this.ccsdk.dom.appendInBody(cTemplate1);\r\n        // this.ccsdk.dom.showLanguageSelector();\r\n        window.ccsdkDebug ? console.log(cTemplate1) : '';\r\n    };\r\n    SurveyHandler.prototype.displayThankYou = function () {\r\n        var self = this;\r\n        document.addEventListener('ccdone', this.displayThankYouCb);\r\n    };\r\n    SurveyHandler.prototype.displayQuestions = function () {\r\n        //check question is supported, based on question types.\r\n        //filter pre fill questions.\r\n        this.questions = this.surveyData.questions;\r\n        // this.questionsToDisplay = (this.surveyData.questions as any[]).filter(this.filterQuestions);\r\n        this.filterQuestions();\r\n        //sort questions and display them?\r\n        this.questionsToDisplay = this.questionsToDisplay.sort(this.questionCompare);\r\n        var ccSurvey;\r\n        ccSurvey = document.getElementsByClassName(\"cc-questions-container\");\r\n        // ccSurvey = ccSurvey[0];\r\n        var surveyObject = ccSurvey[0];\r\n        // (window as any).ccsdkDebug?console.log(this.questionsToDisplay):'';\r\n        //chec\r\n        //for now just do 1st question.\r\n        for (var _i = 0, _a = this.questionsToDisplay; _i < _a.length; _i++) {\r\n            var question = _a[_i];\r\n            if (this.checkConditionals(question)) {\r\n                var compiledTemplate = this.compileTemplate(question);\r\n                question.compiledTemplate = compiledTemplate;\r\n                // surveyObject.innerHTML += compiledTemplate;\r\n                //register handlers for onclick?\r\n            }\r\n            else {\r\n                if (this.isPrefillQuestion(question)) {\r\n                    this.prefillQuestions.push(question);\r\n                }\r\n            }\r\n            //else don't display it.\r\n        }\r\n        // (window as any).ccsdkDebug?console.log(surveyObject.innerHTML):'';\r\n        // this.postPartialAnswer(this.questionsToDisplay[0], \"test\");\r\n    };\r\n    SurveyHandler.prototype.getSurveyQuestions = function () {\r\n        return this.questionsToDisplay;\r\n    };\r\n    SurveyHandler.prototype.getAnswerForQuestionId = function (questionId) {\r\n        var answer = this.surveyAnswers[questionId];\r\n        if (typeof answer === 'undefined') {\r\n            for (var _i = 0, _a = this.prefillResponses; _i < _a.length; _i++) {\r\n                var response = _a[_i];\r\n                if (response.questionId == questionId) {\r\n                    return response;\r\n                }\r\n            }\r\n        }\r\n        return this.surveyAnswers[questionId];\r\n    };\r\n    SurveyHandler.prototype.acceptAnswers = function () {\r\n        var self = this;\r\n        // (window as any).ccsdkDebug?console.log('add question answered listener':'')\r\n        document.addEventListener('q-answered', this.acceptAnswersCb);\r\n    };\r\n    SurveyHandler.prototype.fillPrefillQuestionObject = function (id, response) {\r\n        var question = this.getQuestionById(id);\r\n        var responseStored = this.getPrefillResponseById(id);\r\n        if (responseStored != null) {\r\n            this.updatePrefillResponseById(id, response);\r\n        }\r\n        else {\r\n            this.prefillResponses.push(response);\r\n        }\r\n    };\r\n    SurveyHandler.prototype.fillPrefill = function (prefillObj) {\r\n        var _this = this;\r\n        Object.keys(prefillObj).map(function (x) {\r\n            _this.prefillWithTags[x.toLowerCase()] = prefillObj[x];\r\n        });\r\n        window.ccsdkDebug ? console.log('prefillByTag', this.prefillWithTags) : '';\r\n    };\r\n    SurveyHandler.prototype.fillPrefillByNote = function (prefillObj) {\r\n        var _this = this;\r\n        Object.keys(prefillObj).map(function (x) {\r\n            _this.prefillWithNote[x.toLowerCase()] = prefillObj[x];\r\n        });\r\n        window.ccsdkDebug ? console.log('prefillByNote', this.prefillWithNote) : '';\r\n    };\r\n    SurveyHandler.prototype.fillPrefillDirect = function (prefillObj) {\r\n        var _this = this;\r\n        Object.keys(prefillObj).forEach(function (x) {\r\n            _this.prefillDirect[x] = prefillObj[x];\r\n        });\r\n        window.ccsdkDebug ? console.log('prefillDirect', this.prefillDirect) : '';\r\n    };\r\n    SurveyHandler.prototype.fillPrefillQuestion = function (id, value, valueType) {\r\n        var question = this.getQuestionById(id);\r\n        var response;\r\n        var responseStored = this.getPrefillResponseById(id);\r\n        if (responseStored != null) {\r\n            response = responseStored;\r\n        }\r\n        else {\r\n            response = {\r\n                questionId: question.id,\r\n                questionText: question.text,\r\n                textInput: null,\r\n                numberInput: null\r\n            };\r\n        }\r\n        valueType = this.getAnswerTypeFromDisplayType(question.displayType);\r\n        if (valueType.toLowerCase() == \"number\") {\r\n            response.numberInput = value;\r\n        }\r\n        if (valueType.toLowerCase() == \"text\") {\r\n            response.textInput = value;\r\n        }\r\n        if (responseStored != null) {\r\n            this.updatePrefillResponseById(id, response);\r\n        }\r\n        else {\r\n            this.prefillResponses.push(response);\r\n        }\r\n    };\r\n    SurveyHandler.prototype.postPrefillPartialAnswer = function (fullSubmission, successcb, errorcb) {\r\n        if (fullSubmission === void 0) { fullSubmission = false; }\r\n        if (!fullSubmission && this._prefillsPartiallyPosted) {\r\n            return;\r\n        }\r\n        this._prefillsPartiallyPosted = true;\r\n        if (!this.surveyData.partialResponseId) {\r\n            return;\r\n        }\r\n        var surveyPartialUrl = Config_1.Config.SURVEY_PARTIAL_RESPONSE.replace(\"{id}\", this.surveyData.partialResponseId);\r\n        surveyPartialUrl = surveyPartialUrl.replace(\"{complete}\", \"false\");\r\n        surveyPartialUrl = Config_1.Config.API_URL + surveyPartialUrl;\r\n        window.ccsdkDebug ? console.log(\"Posting Prefill Responses to Server\") : '';\r\n        window.ccsdkDebug ? console.log(this.prefillResponses) : '';\r\n        if (!this.surveyData.partialResponseId) {\r\n            // run successCB if there is one.\r\n            if (successcb) {\r\n                successcb();\r\n            }\r\n            return;\r\n        }\r\n        if (typeof this.prefillResponses !== 'undefined' && this.prefillResponses.length > 0) {\r\n            Request_1.RequestHelper.postWithHeaders(surveyPartialUrl, this.prefillResponses, {}, successcb, errorcb);\r\n        }\r\n        else {\r\n            // console.log('No Prefill data');\r\n            return;\r\n        }\r\n    };\r\n    SurveyHandler.prototype.updatePrefillResponseById = function (id, resp) {\r\n        for (var _i = 0, _a = this.prefillResponses; _i < _a.length; _i++) {\r\n            var response = _a[_i];\r\n            if (response.questionId == id) {\r\n                response = resp;\r\n                break;\r\n            }\r\n        }\r\n    };\r\n    SurveyHandler.prototype.getPrefillResponseById = function (id) {\r\n        return this.prefillResponses.find(function (x) { return x.id === id; });\r\n    };\r\n    SurveyHandler.prototype.getQuestionById = function (id) {\r\n        return this.questions.find(function (x) { return x.id === id; });\r\n    };\r\n    SurveyHandler.prototype.postPartialAnswer = function (index, response, complete, successcb, errorcb) {\r\n        if (complete === void 0) { complete = false; }\r\n        this.postPrefillPartialAnswer(complete, null, null);\r\n        var question = this.questionsToDisplay[index];\r\n        var data = {\r\n            questionId: question.id,\r\n            questionText: question.text,\r\n            textInput: response.text,\r\n            numberInput: response.number\r\n        };\r\n        var surveyPartialUrl = Config_1.Config.SURVEY_PARTIAL_RESPONSE.replace(\"{id}\", this.surveyData.partialResponseId);\r\n        window.ccsdkDebug ? console.log(\"partial response\", question.id == this.questionsToDisplay[this.questionsToDisplay.length - 1].id) : '';\r\n        surveyPartialUrl = surveyPartialUrl.replace(\"{complete}\", \"\" + complete);\r\n        surveyPartialUrl = Config_1.Config.API_URL + surveyPartialUrl;\r\n        //add partial answer to main answer\r\n        this.surveyAnswers[question.id] = data;\r\n        data = [data];\r\n        var onSurveyAnswerEvent = new CustomEvent(Constants_1.Constants.SURVEY_ANSWER_EVENT + \"-\" + this.surveyToken);\r\n        document.dispatchEvent(onSurveyAnswerEvent);\r\n        if (!this.surveyData.partialResponseId) {\r\n            // run success callback and return\r\n            if (successcb) {\r\n                successcb();\r\n            }\r\n            return;\r\n        }\r\n        if (question.id == this.questionsToDisplay[this.questionsToDisplay.length - 1].id) {\r\n            //last question post moved to separate function\r\n            Request_1.RequestHelper.postWithHeaders(surveyPartialUrl, data, {}, successcb, errorcb);\r\n        }\r\n        else {\r\n            Request_1.RequestHelper.postWithHeaders(surveyPartialUrl, data, {}, successcb, errorcb);\r\n        }\r\n    };\r\n    SurveyHandler.prototype.finalPost = function (successcb, errorcb) {\r\n        //last question\r\n        var postSurveyFinalUrl = Config_1.Config.POST_SURVEY_FINAL.replace(\"{tokenId}\", this.ccsdk.surveyToken);\r\n        postSurveyFinalUrl = Config_1.Config.API_URL + postSurveyFinalUrl;\r\n        var answersAll = [];\r\n        // hack for partial flushing\r\n        var lastAnswer;\r\n        if (Object.keys(this.surveyAnswers).length == 0) {\r\n            return;\r\n        }\r\n        for (var answer in this.surveyAnswers) {\r\n            var response = this.surveyAnswers[answer];\r\n            if (response && (response.textInput !== null || response.numberInput !== null)) {\r\n                answersAll.push(response);\r\n                lastAnswer = response;\r\n            }\r\n        }\r\n        for (var answer in this.prefillResponses) {\r\n            answersAll.push(this.prefillResponses[answer]);\r\n        }\r\n        var timeAtPost = new Date().getTime();\r\n        var finalData = {\r\n            id: this.ccsdk.surveyToken,\r\n            user: this.ccsdk.config.username,\r\n            locationId: null,\r\n            responses: answersAll,\r\n            nps: 0,\r\n            surveyClient: Constants_1.Constants.SURVEY_CLIENT,\r\n            responseDuration: Math.floor((timeAtPost - this.ccsdk.surveyStartTime.getTime()) / 1000)\r\n        };\r\n        if (lastAnswer) {\r\n            var _lastAnswer = {\r\n                text: lastAnswer.textInput,\r\n                number: lastAnswer.numberInput\r\n            };\r\n            this.postPartialAnswer(this.questionsToDisplay.length - 1, _lastAnswer, true, null, null);\r\n        }\r\n        if (finalData.responses && finalData.responses.length > 0) {\r\n            Request_1.RequestHelper.postWithHeaders(postSurveyFinalUrl, finalData, {}, successcb, errorcb);\r\n        }\r\n        else {\r\n            successcb();\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * check if conditions are satsified which are required to display question?\r\n     *\r\n     * @param {any} question\r\n     * @memberof Survey\r\n     */\r\n    SurveyHandler.prototype.checkConditionals = function (question) {\r\n        return true;\r\n    };\r\n    SurveyHandler.prototype.compileTemplate = function (question) {\r\n        var self = this;\r\n        //get question type\r\n        var questionTemplate;\r\n        // (window as any).ccsdkDebug?console.log(question):'';\r\n        if (question != 'undefined') {\r\n            switch (question.displayType) {\r\n                case \"Slider\":\r\n                    var displayLegend = question.displayLegend;\r\n                    var opt = question.multiSelect[0].split(\"-\");\r\n                    var optMin = opt[0].split(\";\");\r\n                    var optMax = opt[1].split(\";\");\r\n                    //get text question template and compile it.\r\n                    questionTemplate = templates_1.templates.question_slider;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{min}}/g, optMin[0]);\r\n                    if (displayLegend[0]) {\r\n                        questionTemplate = questionTemplate.replace(/{{minLabel}}/g, displayLegend[0] + '-');\r\n                    }\r\n                    else {\r\n                        questionTemplate = questionTemplate.replace(/{{minLabel}}/g, \"\");\r\n                    }\r\n                    questionTemplate = questionTemplate.replace(/{{max}}/g, optMax[0]);\r\n                    if (displayLegend[1]) {\r\n                        questionTemplate = questionTemplate.replace(/{{maxLabel}}/g, displayLegend[1] + \"-\");\r\n                    }\r\n                    else {\r\n                        questionTemplate = questionTemplate.replace(/{{maxLabel}}/g, \"\");\r\n                    }\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    break;\r\n                case \"Scale\":\r\n                    //get text question template and compile it.\r\n                    window.ccsdkDebug ? console.log(question.questionTags) : '';\r\n                    if (question.questionTags.includes(\"NPS\")) {\r\n                        questionTemplate = templates_1.templates.question_nps;\r\n                        questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                        questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                        questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                        questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    }\r\n                    else if (question.questionTags.includes(\"CSAT\")) {\r\n                        if (question.questionTags.includes(\"csat_satisfaction_5\")) {\r\n                            questionTemplate = templates_1.templates.question_csat_satisfaction_5;\r\n                        }\r\n                        else if (question.questionTags.includes(\"csat_agreement_5\")) {\r\n                            questionTemplate = templates_1.templates.question_csat_agreement_5;\r\n                        }\r\n                        questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                        questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                        questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                        questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    }\r\n                    else {\r\n                        var tileColor = '';\r\n                        var style = '';\r\n                        if (question.attributes != null && question.attributes.scaleColor && question.attributes.scaleColor.length > 0) {\r\n                            if (question.attributes.scaleColor !== 'Gradient') {\r\n                                tileColor = question.attributes.scaleColor;\r\n                            }\r\n                            else {\r\n                                tileColor = \"#02BAEE\";\r\n                            }\r\n                        }\r\n                        else if (question.presentationMode != null && question.presentationMode.indexOf(\"Color\") !== -1) {\r\n                            tileColor = question.presentationMode.split(':')[1];\r\n                        }\r\n                        if (tileColor.length > 0) {\r\n                            var tileColorDark = this.util.shadeBlendConvert(-0.3, tileColor, undefined);\r\n                            style = '\\\r\n                <style>\\\r\n                #id' + question.id + ' .option-number-item.option-scale{\\\r\n                  background-color : ' + tileColor + ';\\\r\n                }\\\r\n                #id' + question.id + ' .option-number-item.option-scale:hover,\\\r\n                #id' + question.id + ' .option-number-item.option-scale.selected{\\\r\n                  background-color : ' + tileColorDark + ';\\\r\n                }\\\r\n                </style>\\\r\n              ';\r\n                        }\r\n                        questionTemplate = templates_1.templates.question_scale;\r\n                        questionTemplate = questionTemplate.replace(/{{style}}/g, style);\r\n                        questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                        questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                        questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                        questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                        //construct NPS scale here....\r\n                        var startRange = 0.0;\r\n                        var endRange = 10.0;\r\n                        var options = \"\";\r\n                        var startRangeLabel_1 = \"\";\r\n                        // let startRangeLabel = \"\";\r\n                        // let endRangeLabel = \"Very likely\";\r\n                        var endRangeLabel_1 = \"\";\r\n                        var midRangeLabel = \"\";\r\n                        if (question.questionTags.includes(\"ces_agree_5\") || question.questionTags.includes(\"ces_agree_7\")) {\r\n                            startRangeLabel_1 = \"Strongly Disagree\";\r\n                            endRangeLabel_1 = \"Strongly Agree\";\r\n                            if (question.questionTags.includes(\"ces_agree_7\")) {\r\n                                midRangeLabel = \"Somewhat Agree\";\r\n                            }\r\n                        }\r\n                        else if (question.questionTags.includes(\"ces_effort_5\") || question.questionTags.includes(\"ces_effort_7\")) {\r\n                            startRangeLabel_1 = \"High Effort\";\r\n                            endRangeLabel_1 = \"Low Effort\";\r\n                            if (question.questionTags.includes(\"ces_effort_7\")) {\r\n                                midRangeLabel = \"Moderate Effort\";\r\n                            }\r\n                        }\r\n                        else if (question.anchorMetricName != null) {\r\n                            var metricName = question.anchorMetricName;\r\n                            var customMetric = this.surveyData.customMetrics[metricName];\r\n                            startRangeLabel_1 = customMetric.optionCategories[0].label;\r\n                            midRangeLabel = customMetric.optionCategories[1].label;\r\n                            endRangeLabel_1 = customMetric.optionCategories[2].label;\r\n                        }\r\n                        var displayLegend_1 = LanguageTextFilter_1.LanguageTextFilter.translateDisplayLegend(this, question);\r\n                        if (displayLegend_1) {\r\n                            if (displayLegend_1.length > 0) {\r\n                                startRangeLabel_1 = displayLegend_1[0] ? displayLegend_1[0] : null;\r\n                                endRangeLabel_1 = displayLegend_1[1] ? displayLegend_1[1] : null;\r\n                            }\r\n                        }\r\n                        if (question.multiSelect.length > 0) {\r\n                            startRange = parseFloat(question.multiSelect[0].split(\"-\")[0]);\r\n                            if (startRangeLabel_1 == null) {\r\n                                startRangeLabel_1 = question.multiSelect[0].split(\"-\")[0].split(\";\")[1];\r\n                            }\r\n                            endRange = parseFloat(question.multiSelect[0].split(\"-\")[1]);\r\n                            if (endRangeLabel_1 == null) {\r\n                                endRangeLabel_1 = question.multiSelect[0].split(\"-\")[1].split(\";\")[1];\r\n                            }\r\n                        }\r\n                        startRangeLabel_1 = startRangeLabel_1 == null ? \"\" : startRangeLabel_1;\r\n                        endRangeLabel_1 = endRangeLabel_1 == null ? \"\" : endRangeLabel_1;\r\n                        var mobileImageUrl = '';\r\n                        var imageVisibility010 = 'hide';\r\n                        var imageVisibility110 = 'hide';\r\n                        var scaleVisibility = 'show-inline';\r\n                        var scaleImageContainer = '';\r\n                        if (startRange == 0 && endRange == 10) {\r\n                            mobileImageUrl = \"https://cx.getcloudcherry.com/microsurvey-assets/scale-0-10-neutral.svg\";\r\n                            imageVisibility010 = 'show';\r\n                            imageVisibility110 = 'hide';\r\n                            scaleVisibility = 'hide';\r\n                            scaleImageContainer = 'scale-image-container';\r\n                        }\r\n                        else if (startRange == 1 && endRange == 10) {\r\n                            mobileImageUrl = \"https://cx.getcloudcherry.com/microsurvey-assets/scale-1-10-neutral.svg\";\r\n                            imageVisibility010 = 'hide';\r\n                            imageVisibility110 = 'show';\r\n                            scaleVisibility = 'hide';\r\n                            scaleImageContainer = 'scale-image-container';\r\n                        }\r\n                        // console.log('scale', startRange, endRange);\r\n                        var divider = 1;\r\n                        if (endRange < 11) {\r\n                        }\r\n                        else {\r\n                            divider = (endRange - startRange) / 10.0;\r\n                        }\r\n                        var initial = 0.0;\r\n                        var optionStyle = '';\r\n                        var legendDimension = void 0;\r\n                        if (window.isMobile) {\r\n                            if (endRange < 11) {\r\n                                var parentContainer = window.innerWidth - 40;\r\n                                var dimension = ((100 / (endRange - startRange + 1)) - .5) * parentContainer / 100;\r\n                                dimension = dimension > 48 ? 48 : dimension;\r\n                                legendDimension = (endRange - startRange + 1) * (dimension + 1);\r\n                                optionStyle = \"width:\" + dimension + \"px;height:\" + dimension + \"px;padding:\" + (dimension - 15) / 2 + \"px;\";\r\n                            }\r\n                        }\r\n                        else {\r\n                            imageVisibility010 = 'hide';\r\n                            imageVisibility110 = 'hide';\r\n                            scaleVisibility = 'show-inline';\r\n                            scaleImageContainer = '';\r\n                            mobileImageUrl = \"\";\r\n                        }\r\n                        if (question.questionTags.includes(\"CES\")) {\r\n                            var leftWidth = 38 * 3 + 'px';\r\n                            for (var initial_1 = startRange; initial_1 <= endRange; initial_1 += divider) {\r\n                                options += '<span data-rating=\"' + initial_1 + '\" class=\"option-number-item option-' + endRange + '-scale-' + initial_1 + ' ' + scaleVisibility + '\" style=\"' + optionStyle + '\">' + initial_1 + '</span>';\r\n                            }\r\n                        }\r\n                        else if (question.anchorMetricName != null) {\r\n                            var metricName = question.anchorMetricName;\r\n                            var customMetric = this.surveyData.customMetrics[metricName];\r\n                            var cmwidthstart = customMetric.optionCategories[0].categoryRange.split(\",\")[0];\r\n                            var cmwidthend = customMetric.optionCategories[1].categoryRange.split(\",\")[0];\r\n                            var leftWidth = (cmwidthend - cmwidthstart) * 38 + 'px';\r\n                            for (var iterator in customMetric.optionCategories) {\r\n                                var startRange_1 = parseFloat(customMetric.optionCategories[iterator].categoryRange.split(\",\")[0]);\r\n                                var endRange_1 = parseFloat(customMetric.optionCategories[iterator].categoryRange.split(\",\")[1]);\r\n                                for (var initial_2 = startRange_1; initial_2 <= endRange_1; initial_2 += divider) {\r\n                                    options += '<span data-rating=\"' + initial_2 + '\" class=\"option-number-item option-scale\"' + scaleVisibility + '\" style=\"background:' + customMetric.optionCategories[iterator].color + '\">' + initial_2 + '</span>';\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            for (var initial_3 = startRange; initial_3 <= endRange; initial_3 += divider) {\r\n                                options += '<span data-rating=\"' + initial_3 + '\" class=\"option-number-item option-scale ' + scaleVisibility + '\" style=\"' + optionStyle + '\">' + initial_3 + '</span>';\r\n                            }\r\n                        }\r\n                        if ((endRange - startRange + 1) <= 11) {\r\n                            var optionLeftExtraClass = 'option-left-rating-text-small-container';\r\n                            var optionMidExtraClass = 'option-mid-rating-text-small-container';\r\n                            var optionRightExtraClass = 'option-right-rating-text-small-container';\r\n                            var optionMaxWidth = (((endRange - startRange + 1) * 38 / 2) - 5) + 'px';\r\n                            // console.log(optionMaxWidth);\r\n                        }\r\n                        questionTemplate = questionTemplate.replace(\"{{legendStyle}}\", \"style=\\\"position:relative;width:\" + (mobileImageUrl ? '100%' : legendDimension + 'px') + \";min-height: 20px;\\\"\");\r\n                        questionTemplate = questionTemplate.replace(/\\{\\{radialLegend\\}\\}/g, mobileImageUrl ? 'radial-legend' : 'unknown-class');\r\n                        questionTemplate = questionTemplate.replace(\"{{optionsRange}}\", options);\r\n                        // questionTemplate = questionTemplate.replace(\"{{maxWidth}}\", optionMaxWidth);\r\n                        questionTemplate = questionTemplate.replace(/maxWidth/g, mobileImageUrl ? '35%;width:35%' : optionMaxWidth);\r\n                        questionTemplate = questionTemplate.replace(/leftWidth/g, leftWidth);\r\n                        questionTemplate = questionTemplate.replace(/{{optionLeftExtraClass}}/g, optionLeftExtraClass);\r\n                        questionTemplate = questionTemplate.replace(/{{optionMidExtraClass}}/g, optionMidExtraClass);\r\n                        questionTemplate = questionTemplate.replace(/{{optionRightExtraClass}}/g, optionRightExtraClass);\r\n                        questionTemplate = questionTemplate.replace(\"{{leftLabel}}\", startRangeLabel_1);\r\n                        questionTemplate = questionTemplate.replace(\"{{midLabel}}\", midRangeLabel);\r\n                        questionTemplate = questionTemplate.replace(\"{{rightLabel}}\", endRangeLabel_1);\r\n                        questionTemplate = questionTemplate.replace(/{{mobileImageUrl}}/g, '\"' + mobileImageUrl + '\"');\r\n                        questionTemplate = questionTemplate.replace(\"{{imageVisibility010}}\", imageVisibility010);\r\n                        questionTemplate = questionTemplate.replace(\"{{imageVisibility110}}\", imageVisibility110);\r\n                        questionTemplate = questionTemplate.replace(\"{{scaleImageContainer}}\", scaleImageContainer);\r\n                    }\r\n                    break;\r\n                case \"Text\":\r\n                    //get text question template and compile it.\r\n                    questionTemplate = templates_1.templates.question_text;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    questionTemplate = questionTemplate.replace(\"{{validationHint}}\", question.validationHint ? question.validationHint : \"\");\r\n                    break;\r\n                case \"Number\":\r\n                    //get text question template and compile it.\r\n                    questionTemplate = templates_1.templates.question_number;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    questionTemplate = questionTemplate.replace(\"{{validationHint}}\", question.validationHint ? question.validationHint : \"\");\r\n                    break;\r\n                case \"MultilineText\":\r\n                    //get text question template and compile it.\r\n                    questionTemplate = templates_1.templates.question_multi_line_text;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    questionTemplate = questionTemplate.replace(\"{{characterLimit}}\", question.attributes && question.attributes.characterLimit ? question.attributes.characterLimit : \"\");\r\n                    questionTemplate = questionTemplate.replace(\"{{validationHint}}\", question.validationHint ? question.validationHint : \"\");\r\n                    break;\r\n                case \"MultiSelect\":\r\n                    var acTemplate = void 0;\r\n                    var multiSelect1 = void 0;\r\n                    //get text question template and compile it.\r\n                    multiSelect1 = Array.prototype.slice.call(LanguageTextFilter_1.LanguageTextFilter.translateMultiSelect(this, question));\r\n                    if (question.presentationMode == 'Invert') {\r\n                        // console.log('selection option before reverse', multiSelect1);\r\n                        multiSelect1.reverse();\r\n                        // console.log('selection option after reverse', multiSelect1);\r\n                        // console.log('selection api option', question.multiSelect);\r\n                    }\r\n                    //get text question template and compile it.\r\n                    if (((question.displayStyle == 'radiobutton/checkbox') || (question.displayStyle == 'icon')) && (multiSelect1.length < 6)) {\r\n                        // (window as any).ccsdkDebug?console.log(question.displayStyle):'';\r\n                        var checkOptionContainsImage = self.util.checkOptionContainsImage(multiSelect1);\r\n                        // (window as any).ccsdkDebug?console.log('select radio image',checkOptionContainsImage):'';\r\n                        if (checkOptionContainsImage\r\n                            && (((multiSelect1.length > 0) && multiSelect1[0].indexOf(\"Male\") !== -1)\r\n                                || ((multiSelect1.length > 0) && multiSelect1[0].indexOf(\"Yes\") !== -1)\r\n                                || ((multiSelect1.length > 1) && multiSelect1[1].indexOf(\"Yes\") !== -1))) {\r\n                            // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n                            acTemplate = templates_1.templates.question_checkbox;\r\n                            var options2_1 = self.util.generateCheckboxImageOptions(question.multiSelect, multiSelect1, question.id);\r\n                            // (window as any).ccsdkDebug?console.log(options2):'';\r\n                            questionTemplate = acTemplate;\r\n                            questionTemplate = questionTemplate.replace(/{{options}}/g, options2_1);\r\n                            acTemplate = questionTemplate;\r\n                        }\r\n                        else if (checkOptionContainsImage) {\r\n                            // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n                            acTemplate = templates_1.templates.question_checkbox;\r\n                            var options2_2 = self.util.generateCheckboxIgnoreImageOptions(question.multiSelect, multiSelect1, question.id);\r\n                            // (window as any).ccsdkDebug?console.log(options2):'';\r\n                            questionTemplate = acTemplate;\r\n                            questionTemplate = questionTemplate.replace(/{{options}}/g, options2_2);\r\n                            acTemplate = questionTemplate;\r\n                        }\r\n                        else {\r\n                            var options3 = self.util.generateCheckboxOptions(question.multiSelect, multiSelect1, question.id);\r\n                            // (window as any).ccsdkDebug?console.log(options2):'';\r\n                            acTemplate = templates_1.templates.question_checkbox;\r\n                            questionTemplate = acTemplate.replace(/{{options}}/g, options3);\r\n                            acTemplate = questionTemplate;\r\n                        }\r\n                    }\r\n                    else {\r\n                        // (window as any).ccsdkDebug?console.log('select type 3'):'';\r\n                        acTemplate = templates_1.templates.question_multi_select;\r\n                        // acTemplate = templates.question_select;\r\n                        var options3 = self.util.generateSelectOptions(question.multiSelect, multiSelect1);\r\n                        if (self.ccsdk.config.language.indexOf('Default') === -1) {\r\n                            if (typeof question.translated !== 'undefined'\r\n                                && question.translated != null\r\n                                && typeof question.translated[self.ccsdk.config.language] !== 'undefined'\r\n                                && question.translated[self.ccsdk.config.language].multiSelect !== 'undefined'\r\n                                && question.translated[self.ccsdk.config.language].multiSelect.length > 0) {\r\n                                multiSelect1 = Array.prototype.slice.call(question.translated[self.ccsdk.config.language].multiSelect);\r\n                                if (question.presentationMode == 'Invert') {\r\n                                    multiSelect1.reverse();\r\n                                }\r\n                                options3 = self.util.generateSelectOptions(question.multiSelect, multiSelect1);\r\n                            }\r\n                        }\r\n                        // questionTemplate = acTemplate;\r\n                        self.ccsdk.debug ? console.log(options3) : '';\r\n                        questionTemplate = acTemplate.replace(/{{options}}/g, options3);\r\n                        acTemplate = questionTemplate;\r\n                    }\r\n                    questionTemplate = acTemplate;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    break;\r\n                case \"Select\":\r\n                    var acTemplate1 = void 0;\r\n                    var acTemplate2 = void 0;\r\n                    var options1 = void 0;\r\n                    var options2 = void 0;\r\n                    var multiSelect = void 0;\r\n                    //get text question template and compile it.\r\n                    multiSelect = Array.prototype.slice.call(LanguageTextFilter_1.LanguageTextFilter.translateMultiSelect(this, question));\r\n                    var invertedMultiSelect = void 0;\r\n                    if (question.presentationMode == 'Invert') {\r\n                        // console.log('selection option before reverse', multiSelect);\r\n                        invertedMultiSelect = question.multiSelect ? question.multiSelect.slice().reverse() : [];\r\n                        multiSelect.reverse();\r\n                        // console.log('selection option after reverse', multiSelect);\r\n                        // console.log('selection api option', question.multiSelect);\r\n                    }\r\n                    else {\r\n                        invertedMultiSelect = question.multiSelect;\r\n                    }\r\n                    if ((question.displayStyle == 'radiobutton/checkbox') && (multiSelect.length < 6)) {\r\n                        // if(question.displayStyle == 'radiobutton/checkbox'){\r\n                        // (window as any).ccsdkDebug?console.log('select type 1'):'';\r\n                        // (window as any).ccsdkDebug?console.log(question.displayStyle):'';\r\n                        // acTemplate1 = templates.question_radio;\r\n                        // questionTemplate = acTemplate1;\r\n                        var checkOptionContainsImage = self.util.checkOptionContainsImage(multiSelect);\r\n                        window.ccsdkDebug ? console.log('select radio image', checkOptionContainsImage) : '';\r\n                        if (checkOptionContainsImage\r\n                            && (((multiSelect.length > 0) && multiSelect[0].indexOf(\"Male\") !== -1)\r\n                                || ((multiSelect.length > 0) && multiSelect[0].indexOf(\"Yes\") !== -1)\r\n                                || ((multiSelect.length > 1) && multiSelect[1].indexOf(\"Yes\") !== -1))) {\r\n                            // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n                            acTemplate2 = templates_1.templates.question_radio_image;\r\n                            options2 = self.util.generateRadioImageOptions(invertedMultiSelect, multiSelect, question.id);\r\n                            window.ccsdkDebug ? console.log({ options2: options2 }) : '';\r\n                            questionTemplate = acTemplate2;\r\n                            questionTemplate = questionTemplate.replace(/{{options}}/g, options2);\r\n                        }\r\n                        else if (checkOptionContainsImage) {\r\n                            // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n                            acTemplate2 = templates_1.templates.question_radio_image;\r\n                            options2 = self.util.generateRadioIgnoreImageOptions(invertedMultiSelect, multiSelect, question.id);\r\n                            // (window as any).ccsdkDebug?console.log(options2):'';\r\n                            questionTemplate = acTemplate2;\r\n                            questionTemplate = questionTemplate.replace(/{{options}}/g, options2);\r\n                        }\r\n                        else {\r\n                            acTemplate1 = templates_1.templates.question_radio;\r\n                            questionTemplate = acTemplate1;\r\n                            options1 = self.util.generateRadioOptions(invertedMultiSelect, multiSelect, question.id);\r\n                            questionTemplate = questionTemplate.replace(\"{{options}}\", options1);\r\n                        }\r\n                    }\r\n                    else if ((question.displayStyle == 'icon') && (multiSelect.length < 6)) {\r\n                        acTemplate1 = templates_1.templates.question_radio;\r\n                        questionTemplate = acTemplate1;\r\n                        var invertedMultiSelect_1;\r\n                        if (question.presentationMode == 'Invert') {\r\n                            invertedMultiSelect_1 = question.multiSelect ? question.multiSelect.slice().reverse() : [];\r\n                        }\r\n                        else {\r\n                            invertedMultiSelect_1 = question.multiSelect;\r\n                        }\r\n                        options1 = self.util.generateRadioOptions(invertedMultiSelect_1, multiSelect, question.id);\r\n                        questionTemplate = questionTemplate.replace(\"{{options}}\", options1);\r\n                    }\r\n                    else {\r\n                        window.ccsdkDebug ? console.log('select type 3') : '';\r\n                        acTemplate1 = templates_1.templates.question_select;\r\n                        options1 = self.util.generateSelectOptions(invertedMultiSelect, multiSelect);\r\n                        if (self.ccsdk.config.language.indexOf('Default') === -1) {\r\n                            if (typeof question.translated !== 'undefined'\r\n                                && question.translated != null\r\n                                && typeof question.translated[self.ccsdk.config.language] !== 'undefined'\r\n                                && question.translated[self.ccsdk.config.language].multiSelect !== 'undefined'\r\n                                && question.translated[self.ccsdk.config.language].multiSelect.length > 0) {\r\n                                multiSelect = Array.prototype.slice.call(question.translated[self.ccsdk.config.language].multiSelect);\r\n                                if (question.presentationMode == 'Invert') {\r\n                                    multiSelect.reverse();\r\n                                }\r\n                                options1 = self.util.generateSelectOptions(invertedMultiSelect, multiSelect);\r\n                            }\r\n                        }\r\n                        questionTemplate = acTemplate1;\r\n                        questionTemplate = questionTemplate.replace(\"{{options}}\", options1);\r\n                    }\r\n                    // console.log( questionTemplate );\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    // (window as any).ccsdkDebug?console.log(questionTemplate):'';\r\n                    break;\r\n                case \"Smile-5\":\r\n                    //get text question template and compile it.\r\n                    if (question.presentationMode == \"Invert\") {\r\n                        questionTemplate = templates_1.templates.question_smile_5_inverted;\r\n                    }\r\n                    else {\r\n                        questionTemplate = templates_1.templates.question_smile_5;\r\n                    }\r\n                    // let startRangeLabel = \"Very unlikely\";\r\n                    // let endRangeLabel = \"Very likely\";\r\n                    var startRangeLabel = \"\";\r\n                    var endRangeLabel = \"\";\r\n                    var displayLegend2 = LanguageTextFilter_1.LanguageTextFilter.translateDisplayLegend(this, question);\r\n                    if (displayLegend2) {\r\n                        if (displayLegend2.length > 0) {\r\n                            startRangeLabel = displayLegend2[0] ? displayLegend2[0] : null;\r\n                            endRangeLabel = displayLegend2[1] ? displayLegend2[1] : null;\r\n                        }\r\n                    }\r\n                    startRangeLabel = startRangeLabel == null ? \"\" : startRangeLabel;\r\n                    endRangeLabel = endRangeLabel == null ? \"\" : endRangeLabel;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    questionTemplate = questionTemplate.replace(\"{{leftLabel}}\", startRangeLabel);\r\n                    questionTemplate = questionTemplate.replace(\"{{rightLabel}}\", endRangeLabel);\r\n                    break;\r\n                case \"Star-5\":\r\n                    //get text question template and compile it.\r\n                    var startRangeLabel1 = \"\";\r\n                    var endRangeLabel1 = \"\";\r\n                    var displayLegend3 = LanguageTextFilter_1.LanguageTextFilter.translateDisplayLegend(this, question);\r\n                    if (displayLegend3) {\r\n                        if (displayLegend3.length > 0) {\r\n                            startRangeLabel1 = displayLegend3[0] ? displayLegend3[0] : null;\r\n                            endRangeLabel1 = displayLegend3[1] ? displayLegend3[1] : null;\r\n                        }\r\n                    }\r\n                    startRangeLabel1 = startRangeLabel1 == null ? \"\" : startRangeLabel1;\r\n                    endRangeLabel1 = endRangeLabel1 == null ? \"\" : endRangeLabel1;\r\n                    questionTemplate = templates_1.templates.question_star_5;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    questionTemplate = questionTemplate.replace(\"{{leftLabel}}\", startRangeLabel1);\r\n                    questionTemplate = questionTemplate.replace(\"{{rightLabel}}\", endRangeLabel1);\r\n                    break;\r\n            }\r\n        }\r\n        return questionTemplate;\r\n    };\r\n    SurveyHandler.prototype.questionCompare = function (a, b) {\r\n        return a.sequence - b.sequence;\r\n    };\r\n    SurveyHandler.prototype.getAnswerTypeFromDisplayType = function (displayType) {\r\n        // console.log('question type',displayType);\r\n        var type;\r\n        switch (displayType) {\r\n            case \"Slider\":\r\n                type = \"number\";\r\n                break;\r\n            case \"Scale\":\r\n                type = \"number\";\r\n                break;\r\n            case \"Text\":\r\n                type = \"text\";\r\n                break;\r\n            case \"Number\":\r\n                type = \"number\";\r\n                break;\r\n            case \"MultilineText\":\r\n                type = \"text\";\r\n                break;\r\n            case \"MultiSelect\":\r\n                type = \"text\";\r\n                break;\r\n            case \"Select\":\r\n                type = \"text\";\r\n                break;\r\n            case \"Dropdown\":\r\n                type = \"text\";\r\n                break;\r\n            case \"Smile-5\":\r\n                type = \"number\";\r\n                break;\r\n            case \"Star-5\":\r\n                type = \"number\";\r\n                break;\r\n            case \"Date\":\r\n                type = \"number\";\r\n                break;\r\n            default:\r\n                type = \"text\";\r\n                break;\r\n        }\r\n        return type;\r\n    };\r\n    /**\r\n     *\r\n     * filterQuestions - filters questions so that we don't display the one which satisifes any of the following condition\r\n     *  isRetired = true\r\n     *  statffFill = true\r\n     *  apiFill = true\r\n     *  preFill = true\r\n     *\r\n     * @param {any} question\r\n     * @returns\r\n     * @memberof Survey\r\n     */\r\n    SurveyHandler.prototype.filterQuestions = function () {\r\n        var self = this;\r\n        for (var _i = 0, _a = this.questions; _i < _a.length; _i++) {\r\n            var question = _a[_i];\r\n            if (!question.isRetired) {\r\n                //filter out prefill question only if it is filled?.\r\n                // if(!this.isQuestionFilled(question)){\r\n                if (this.isPrefillTags(question)) {\r\n                    self.ccsdk.debug ? console.log('prefillTags', this.prefillResponses) : '';\r\n                    continue;\r\n                }\r\n                if (this.isPrefillNote(question)) {\r\n                    self.ccsdk.debug ? console.log(this.prefillResponses) : '';\r\n                    continue;\r\n                }\r\n                if (this.isPrefillDirect(question)) {\r\n                    self.ccsdk.debug ? console.log(this.prefillResponses) : '';\r\n                    continue;\r\n                }\r\n                if (!(this.isPrefillQuestion(question))) {\r\n                    if (question.conditionalFilter === null ||\r\n                        (question.conditionalFilter != null &&\r\n                            (question.conditionalFilter.filterquestions == null\r\n                                || question.conditionalFilter.filterquestions.length == 0))) {\r\n                        //check supported display types\r\n                        var supportedDisplayTypes = \"Slider, Scale, Text, Number, MultilineText, MultiSelect, Smile-5, Star-5\";\r\n                        if (supportedDisplayTypes.indexOf(question.displayType) > -1) {\r\n                            this.questionsToDisplay.push(question);\r\n                        }\r\n                    }\r\n                    else {\r\n                        //if conditions full filled, fill it in questionsToDisplay\r\n                        if (ConditionalFlowFilter_1.ConditionalFlowFilter.filterQuestion(this, question)) {\r\n                            //auto does that\r\n                        }\r\n                        else {\r\n                            this.conditionalQuestions.push(question);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    this.fillPrefillWithTags(question);\r\n                    this.fillPrefillWithNote(question);\r\n                    ConditionalFlowFilter_1.ConditionalFlowFilter.filterQuestion(this, question);\r\n                }\r\n                // }\r\n            }\r\n        }\r\n        //re condition questions.\r\n        for (var _b = 0, _c = this.questions; _b < _c.length; _b++) {\r\n            var question = _c[_b];\r\n            // console.log(this.questionsToDisplay);\r\n            ConditionalFlowFilter_1.ConditionalFlowFilter.filterQuestion(this, question);\r\n        }\r\n        // console.log(this.conditionalQuestions);\r\n    };\r\n    SurveyHandler.prototype.isPrefillTags = function (question) {\r\n        if (typeof question.questionTags !== 'undefined' && question.questionTags && question.questionTags.length > 0) {\r\n            for (var _i = 0, _a = question.questionTags; _i < _a.length; _i++) {\r\n                var tag = _a[_i];\r\n                switch (tag.toLowerCase()) {\r\n                    case \"screensize\":\r\n                        //add size to prefill array\r\n                        this.fillPrefillQuestion(question.id, \"Width:\" + window.innerWidth + \"px / Height:\" + window.innerHeight + \"px\", \"text\");\r\n                        return true;\r\n                    default:\r\n                        if (typeof this.prefillWithTags[tag.toLowerCase()] != 'undefined') {\r\n                            var type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n                            this.fillPrefillQuestion(question.id, this.prefillWithTags[tag.toLowerCase()], type);\r\n                            return true;\r\n                        }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    SurveyHandler.prototype.isPrefillNote = function (question) {\r\n        if (typeof question.note !== 'undefined'\r\n            && question.note != null\r\n            && question.note.length > 0\r\n            && this.prefillWithNote[question.note.toLowerCase()]) {\r\n            var type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n            this.fillPrefillQuestion(question.id, this.prefillWithNote[question.note.toLowerCase()], type);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    SurveyHandler.prototype.isPrefillDirect = function (question) {\r\n        if (typeof question !== 'undefined'\r\n            && this.prefillDirect[question.id]) {\r\n            var type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n            this.fillPrefillQuestion(question.id, this.prefillDirect[question.id], type);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    SurveyHandler.prototype.fillPrefillWithTags = function (question) {\r\n        window.ccsdkDebug ? console.log('fillprefillwithtags', this.prefillWithTags) : '';\r\n        if (typeof question.questionTags !== 'undefined' && question.questionTags.length > 0) {\r\n            for (var _i = 0, _a = question.questionTags; _i < _a.length; _i++) {\r\n                var tag = _a[_i];\r\n                window.ccsdkDebug ? console.log('fillprefillwithtags', tag) : '';\r\n                if (typeof this.prefillWithTags[tag.toLowerCase()] !== 'undefined') {\r\n                    window.ccsdkDebug ? console.log('prefil ', tag.toLowerCase(), this.prefillWithTags[tag.toLowerCase()], this.prefillWithTags) : '';\r\n                    var type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n                    this.fillPrefillQuestion(question.id, this.prefillWithTags[tag.toLowerCase()], type);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    SurveyHandler.prototype.fillPrefillWithNote = function (question) {\r\n        if (typeof question.note !== 'undefined' && question.note != null && question.note.length > 0) {\r\n            if (typeof this.prefillWithNote[question.note.toLowerCase()] !== 'undefined') {\r\n                var type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n                this.fillPrefillQuestion(question.id, this.prefillWithNote[question.note.toLowerCase()], type);\r\n            }\r\n        }\r\n    };\r\n    SurveyHandler.prototype.getConditionalSurveyQuestions = function () {\r\n        return this.conditionalQuestions;\r\n    };\r\n    SurveyHandler.prototype.isPrefillQuestion = function (question) {\r\n        if (question.apiFill == true) {\r\n            return true;\r\n        }\r\n        if (question.staffFill == true) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    SurveyHandler.prototype.isQuestionFilled = function (question) {\r\n        for (var _i = 0, _a = this.prefillResponses; _i < _a.length; _i++) {\r\n            var response = _a[_i];\r\n            if (response.questionId == question.questionId) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    SurveyHandler.prototype.removePrevListener = function (id) {\r\n        for (var _i = 0, _a = this.domListeners; _i < _a.length; _i++) {\r\n            var listener = _a[_i];\r\n            if (listener.id == id) {\r\n                var index = this.domListeners.indexOf(listener);\r\n                window.ccsdkDebug ? console.log(\"removing listener\", id) : '';\r\n                window.ccsdkDebug ? console.log(\"removing listener index\", index) : '';\r\n                this.util.removeListener(document.querySelectorAll(\"body\")[0], listener.type, listener.internalHandler);\r\n                if (index > -1) {\r\n                    this.domListeners.splice(index, 1);\r\n                }\r\n                window.ccsdkDebug ? console.log(this.domListeners) : '';\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    SurveyHandler.prototype.destroySurvey = function () {\r\n        var self = this;\r\n        document.addEventListener('ccclose', this.destroySurveyCb);\r\n    };\r\n    SurveyHandler.prototype.destroy = function () {\r\n        var surveyContainer = this.ccsdk.dom.getSurveyContainer(this.surveyToken);\r\n        var welcomeContainer = this.ccsdk.dom.getWelcomeContainer(this.surveyToken);\r\n        if (typeof surveyContainer != 'undefined') {\r\n            this.util.remove(surveyContainer);\r\n        }\r\n        if (typeof welcomeContainer != 'undefined') {\r\n            this.util.remove(welcomeContainer);\r\n        }\r\n        document.removeEventListener('ccclose', this.destroySurveyCb);\r\n        document.removeEventListener('ccdone', this.displayThankYouCb);\r\n        document.removeEventListener('q-answered', this.acceptAnswersCb);\r\n        window.globalSurveyRunning = false;\r\n        // let bodyElement = <HTMLElement>document.\r\n        //   getElementsByTagName( \"body\" )[ 0 ];\r\n        // this.util.removeClass( bodyElement, \"blurr\" );\r\n    };\r\n    return SurveyHandler;\r\n}());\r\nexports.SurveyHandler = SurveyHandler;\r\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(17);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = __webpack_require__(19)(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../node_modules/rtl-css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./main.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../node_modules/rtl-css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./main.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(18)();\n// imports\n\n\n// module\nexports.push([module.i, typeof document !== 'undefined' && document.getElementsByTagName('html')[0].getAttribute('dir') === 'rtl' ? \".cc-sdk ul {\\n  padding-right: 0;\\n  list-style-type: none;\\n  margin: 0; }\\n\\n.cc-sdk a, .cc-sdk a:hover, .cc-sdk a:focus {\\n  text-decoration: none;\\n  color: inherit; }\\n\\n.cc-sdk *, .cc-sdk *:before, .cc-sdk *:after {\\n  box-sizing: border-box; }\\n\\n.cc-sdk p {\\n  color: inherit;\\n  margin: 0; }\\n\\n.cc-sdk map area {\\n  outline: 0;\\n  cursor: pointer; }\\n\\n.cc-sdk map area.selected {\\n  outline: 0px;\\n  outline-color: #0a2135;\\n  outline-width: 0px;\\n  outline-style: solid; }\\n\\n.cc-sdk map area:hover {\\n  outline: 1; }\\n\\n.cc-sdk.cc-popup-container {\\n  background: #fff;\\n  box-shadow: 0 0 4px 5px rgba(0, 0, 0, 0.05);\\n  font-family: \\\"open sans\\\", sans-serif;\\n  position: fixed;\\n  text-align: center;\\n  max-width: 500px;\\n  max-height: 500px;\\n  z-index: 1111; }\\n\\n@media (min-width: 768px) {\\n  .cc-sdk.cc-popup-container {\\n    padding: 10px; } }\\n\\n.cc-sdk.cc-popup-container.bottom {\\n  margin-bottom: 9px; }\\n\\n.cc-sdk.cc-popup-container.top {\\n  margin-top: 9px; }\\n\\n.cc-sdk #cc-thankyou-container .cc-question-container__text p {\\n  word-break: break-word; }\\n\\n.cc-sdk #cc-thankyou-container .cc-question-container__text p,\\n.cc-sdk #cc-thankyou-container .cc-question-container__text {\\n  width: 400px;\\n  max-width: initial;\\n  font-size: 17px;\\n  color: #424242; }\\n\\n.cc-sdk .cc-message-box {\\n  position: relative;\\n  z-index: 11; }\\n\\n.cc-sdk .cc-message-box__text {\\n  color: #424242;\\n  font-size: 14px;\\n  font-weight: 600;\\n  margin: 0;\\n  padding: 29px 14px 20px 14px;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-message-box__btn {\\n  background: #fdaf19;\\n  border-radius: 100px;\\n  display: inline-block;\\n  font-size: 15px;\\n  font-weight: 700;\\n  height: 32px;\\n  padding: 6px 0;\\n  width: 124px;\\n  text-align: center; }\\n\\n.cc-sdk.cc-popup-container .cc-popup-container__close {\\n  cursor: pointer;\\n  margin: 4px;\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n  z-index: 111; }\\n\\n.cc-sdk .cc-popup-container-2 {\\n  /* box-shadow: 0 0 4px 5px rgba(0,0,0,0.05); */\\n  height: 144px;\\n  position: fixed;\\n  width: 100%;\\n  z-index: 1111; }\\n\\n.cc-sdk .cc-popup-container-2.bottom {\\n  bottom: 0px; }\\n\\n.cc-sdk .cc-popup-container-2__icons,\\n.cc-sdk .cc-popup-container-2__icons {\\n  cursor: pointer;\\n  padding: 8px;\\n  position: absolute;\\n  top: 0;\\n  z-index: 111; }\\n\\n.cc-sdk .top.cc-popup-container-2 .cc-popup-container-2__icons {\\n  padding-top: 15px; }\\n\\n.cc-sdk .cc-popup-container-2__icons.cc-right-icon {\\n  left: 0; }\\n\\n.cc-sdk .cc-popup-container-2__icons.cc-left-icon {\\n  right: 0; }\\n\\n.cc-sdk .cc-popup-container__back {\\n  background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);\\n  display: inline-block;\\n  width: 21px;\\n  height: 21px; }\\n\\n.cc-sdk .cc-question-container {\\n  /* margin: auto; */\\n  padding: 20px 20px 25px;\\n  position: absolute;\\n  text-align: center;\\n  width: 100%;\\n  z-index: 11;\\n  top: 0;\\n  right: 0; }\\n\\n.cc-sdk .cc-question-container__text {\\n  /*height: 80px;*/\\n  color: #424242;\\n  display: inline-block;\\n  font-size: 15px;\\n  font-weight: 600;\\n  max-width: 230px;\\n  padding: 8px 0;\\n  text-align: center;\\n  vertical-align: middle;\\n  width: 20%;\\n  position: relative; }\\n  .cc-sdk .cc-question-container__text p {\\n    word-break: break-word; }\\n\\n.cc-sdk .cc-question-container[data-type='csat'] .cc-question-container__text {\\n  width: 11em; }\\n\\n.cc-sdk .cc-question-container[data-type='csat'] .cc-question-container__list {\\n  width: 64vw; }\\n\\n.cc-sdk .cc-question-container__required,\\n.cc-sdk .cc-question-container__validation {\\n  position: absolute;\\n  top: -14px;\\n  font-size: 11px;\\n  right: 0;\\n  width: 100%;\\n  left: 0;\\n  font-weight: normal;\\n  color: #C1272D;\\n  display: none; }\\n\\n.cc-sdk .cc-question-container__required-label {\\n  display: inline-block;\\n  position: relative;\\n  top: -2px;\\n  right: -2px; }\\n\\n.cc-sdk .cc-question-container__content {\\n  display: inline-block;\\n  max-width: 78%;\\n  vertical-align: middle;\\n  width: auto; }\\n\\n.cc-sdk .cc-question-container__list li {\\n  display: inline-block;\\n  padding-right: 29px;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-question-container__list li span {\\n  display: table-cell;\\n  font-size: 15px;\\n  padding-right: 15px;\\n  text-align: right;\\n  vertical-align: middle;\\n  width: 125px; }\\n\\n.cc-sdk .cc-question-container__list li input {\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-question-container:before {\\n  content: '';\\n  display: inline-block;\\n  height: 100%;\\n  margin-left: -4px;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-question-container {\\n  height: 100%;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-questions-container {\\n  height: 100%; }\\n\\n.cc-sdk p.cc-thankyou-powered {\\n  font-size: 13px !important;\\n  color: #404040 !important;\\n  font-style: italic;\\n  margin-top: 4px; }\\n  .cc-sdk p.cc-thankyou-powered.no-branding {\\n    display: none; }\\n\\n.cc-sdk .cc-thankyou-powered .cc-thankyou-logo {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/cc-thankyou-logo.svg\\\");\\n  background-size: cover;\\n  margin-left: 8px;\\n  display: inline-block;\\n  width: 16px;\\n  height: 16px; }\\n\\n.cc-sdk .multiline-box {\\n  background: #fff;\\n  border-radius: 2px;\\n  border: 1px #6d6d6d solid;\\n  font-family: 'Open Sans';\\n  font-size: 15px;\\n  height: 70px;\\n  margin: 0 50px 0 0px;\\n  min-width: 600px;\\n  padding: 2px 5px;\\n  resize: none; }\\n\\n.cc-sdk .multiline-box:focus {\\n  outline: 0; }\\n\\n.cc-sdk .detail-box .cc-question-container__text p {\\n  font-size: 13px;\\n  font-weight: 700; }\\n\\n.cc-sdk .detail-box .cc-question-container__text span {\\n  display: inline-block;\\n  font-size: 15px;\\n  font-weight: normal; }\\n\\n.cc-sdk .detail-box .cc-question-container__text {\\n  height: 56px; }\\n\\n.cc-sdk .detail-box[data-type=\\\"singleline\\\"] .cc-question-container__text {\\n  margin-left: 20px; }\\n\\n.cc-sdk .detail-box .cc-question-container__content .cc-sdk-form-control,\\n.cc-sdk .single-line .cc-question-container__content .cc-sdk-form-control {\\n  background: transparent;\\n  border: none;\\n  border-bottom: 1px solid #6d6d6d;\\n  font-family: \\\"open sans\\\";\\n  font-size: 15px;\\n  line-height: 26px;\\n  outline: 0;\\n  width: 300px;\\n  margin-right: 70px; }\\n\\n.cc-sdk .d-star-box.detail-box .cc-question-container__text {\\n  height: 92px; }\\n\\n.cc-sdk .hl.dropdown {\\n  background-image: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/arrow-down.black.svg\\\");\\n  background-position: 3% center;\\n  background-repeat: no-repeat;\\n  border-bottom: 1px solid #6d6d6d;\\n  display: inline-block;\\n  padding: 5px;\\n  position: relative;\\n  text-align: right;\\n  width: 300px; }\\n\\n.cc-sdk .drop-cc-question-container .cc-question-container__text {\\n  /*height: 60px;*/\\n  margin-left: 20px; }\\n\\n.cc-sdk .cc-sdk-form-control:focus {\\n  border-color: #fcaf18; }\\n\\n.cc-sdk .detail-box .cc-question-container__content {\\n  padding-right: 0; }\\n\\n.cc-sdk .cc-big-list-container .cc-question-container__list {\\n  display: table;\\n  width: 100%; }\\n\\n.cc-sdk .cc-big-list-container .cc-question-container__list li {\\n  display: table-cell;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-thankyou-container {\\n  width: 100% !important; }\\n\\n.cc-sdk .submit-icon {\\n  direction: rtl;\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n  bottom: 0;\\n  margin: auto 0;\\n  z-index: 11;\\n  margin-left: 75px;\\n  font-size: 14px;\\n  cursor: pointer;\\n  width: 47px;\\n  height: 47px; }\\n\\n@media (min-width: 1000px) {\\n  .cc-sdk .cc-big-list-container .cc-question-container__list li span label {\\n    overflow: hidden;\\n    max-height: 100px;\\n    display: block; } }\\n\\n@media (min-width: 769px) and (max-width: 875px) {\\n  .cc-sdk .cc-question-container__list li {\\n    padding-right: 0px !important; } }\\n\\n@media (min-width: 769px) and (max-width: 1024px) {\\n  .cc-sdk .cc-popup-container-2 {\\n    height: 200px; }\\n  .cc-sdk .cc-big-list-container .cc-question-container__list,\\n  .cc-sdk .cc-question-container__list {\\n    text-align: right; }\\n  .cc-sdk .cc-big-list-container .cc-question-container__list li,\\n  .cc-sdk .cc-question-container__list li {\\n    display: inline-block;\\n    margin-bottom: 15px;\\n    vertical-align: middle;\\n    width: 49%; }\\n  .cc-sdk .cc-question-container__content {\\n    display: inline-block;\\n    width: 45%; }\\n  .cc-sdk .multiline-box {\\n    min-width: 100%;\\n    margin: 0; }\\n  .cc-sdk .option-smile-box img,\\n  .cc-sdk .option-star-box img {\\n    margin-left: 11px !important; }\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text p,\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text {\\n    width: 100% !important;\\n    text-align: center;\\n    margin: 0 !important;\\n    padding: 0;\\n    line-height: initial;\\n    height: auto; }\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text {\\n    max-width: 98%; } }\\n\\n@media (min-width: 1000px) {\\n  .cc-sdk .cc-question-container__text p {\\n    max-height: 100px;\\n    overflow: hidden;\\n    max-width: 140ch; }\\n  .cc-sdk .cc-question-container__text p.ellipsis:after {\\n    content: '...';\\n    text-align: left;\\n    bottom: 9px;\\n    left: -3px;\\n    width: 12px;\\n    display: block;\\n    position: absolute;\\n    height: calc(1em * 1.2); } }\\n\\n@media (min-width: 769px) and (max-width: 992px) {\\n  .cc-sdk .cc-question-container {\\n    width: 100%;\\n    margin: auto; }\\n  .cc-sdk .cc-question-container__text {\\n    width: 24%;\\n    padding-left: 20px; }\\n  .cc-sdk .cc-question-container__text p {\\n    max-height: 110px;\\n    overflow: hidden; }\\n  .cc-sdk .cc-question-container__content.rating-color {\\n    margin-right: 0px; }\\n  .cc-sdk .submit-icon {\\n    margin-left: 40px !important; }\\n  .cc-sdk .cc-question-container__content.rating-color {\\n    margin-right: 0px !important; }\\n  .cc-sdk .cc-question-container__content {\\n    width: 50% !important; } }\\n\\n@media (max-width: 768px) {\\n  .cc-sdk .cc-survey-container,\\n  .cc-sdk .cc-survey-content {\\n    height: 100%; }\\n  .cc-sdk .cc-popup-container-2 {\\n    bottom: auto;\\n    height: 100%;\\n    top: 0; }\\n  .cc-sdk .cc-popup-container-2__icons.cc-right-icon {\\n    right: auto;\\n    left: 0;\\n    padding: 0; }\\n  .cc-sdk .cc-popup-container-2__icons.cc-left-icon {\\n    right: 0;\\n    left: auto;\\n    padding: 0; }\\n  .cc-sdk .cc-big-list-container .cc-question-container__list li,\\n  .cc-sdk[dir=\\\"rtl\\\"] .cc-big-list-container .cc-question-container__list li {\\n    display: block; }\\n  .cc-sdk .radio-toggle--more-option li span {\\n    width: 84% !important;\\n    padding-right: 25px !important; }\\n  .cc-sdk .radio-toggle--more-option li {\\n    padding-left: 0 !important;\\n    display: block !important;\\n    padding-top: 10px; }\\n  .cc-sdk .detail-box .cc-question-container__content {\\n    padding-right: 0px; }\\n  .cc-sdk .cc-question-container {\\n    bottom: 75px;\\n    height: auto;\\n    right: 0;\\n    padding: 40px 20px;\\n    position: absolute;\\n    text-align: right;\\n    top: auto;\\n    width: 100%; }\\n  .cc-sdk .cc-question-container__text {\\n    font-size: 18px;\\n    margin-bottom: 20px;\\n    max-width: 400px;\\n    text-align: right;\\n    width: 100%; }\\n  .cc-sdk .cc-question-container__content {\\n    display: block;\\n    max-width: 100%;\\n    width: 100%; }\\n  .cc-sdk .cc-question-container__list label {\\n    display: block; }\\n  .cc-sdk .cc-question-container__list li span {\\n    width: auto;\\n    padding-right: 15px; }\\n  .cc-sdk .cc-question-container__list li {\\n    padding-right: 0;\\n    margin-bottom: 10px;\\n    display: block; }\\n  .cc-sdk .cc-popup-container-2__icons {\\n    margin: 20px; }\\n  .cc-sdk .cc-popup-container-2__icons.left-icon {\\n    right: auto;\\n    left: 0; }\\n  .cc-sdk .cc-popup-container-2__icons.right-icon {\\n    left: auto;\\n    right: 0; }\\n  .cc-sdk .cc-popup-container__close {\\n    width: 27px; }\\n  .cc-sdk .cc-question-container__content.rating-color {\\n    margin-right: 0 !important; }\\n  .cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .cc-question-container__content,\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .cc-question-container__content {\\n    width: 100% !important; }\\n  .cc-sdk .multiline-box {\\n    height: 150px;\\n    margin: 0;\\n    min-width: 100%;\\n    width: 100%; }\\n  .cc-sdk .hl.dropdown {\\n    width: 100%; }\\n  .cc-sdk .detail-box .cc-question-container__content .cc-sdk-form-control {\\n    width: 100%; }\\n  .cc-sdk .detail-box .cc-question-container__text p {\\n    font-size: 18px; }\\n  .cc-sdk .mobile-detail-box .cc-question-container__text {\\n    height: auto; }\\n  .cc-sdk .cc-question-container__text p {\\n    max-height: auto; }\\n  .cc-sdk .welcome-box .cc-question-container__text p {\\n    color: #fff; }\\n  .cc-sdk .cc-questions-container {\\n    height: 100%;\\n    position: relative; }\\n  .cc-sdk .cc-message-box__btn {\\n    margin-right: 20px; } }\\n\\n@media (max-width: 768px) {\\n  .cc-sdk .detail-box .cc-question-container__content .cc-sdk-form-control,\\n  .cc-sdk .single-line .cc-question-container__content .cc-sdk-form-control {\\n    margin-right: 0; }\\n  .cc-sdk .submit-icon {\\n    position: absolute;\\n    right: 20px;\\n    top: auto;\\n    bottom: 30px;\\n    padding-left: 0; }\\n  .cc-sdk.cc-popup-container {\\n    position: fixed;\\n    bottom: 0;\\n    right: 0;\\n    left: 0;\\n    margin: 0 !important;\\n    width: 100%;\\n    height: 13em;\\n    max-width: 100%;\\n    max-height: 100%;\\n    text-align: right;\\n    background: transparent; }\\n  .cc-sdk.cc-popup-container .cc-message-box {\\n    position: absolute;\\n    bottom: 20%; }\\n  .cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text {\\n    font-size: 20px; }\\n  .cc-sdk.cc-popup-container .cc-message-box .submit-icon {\\n    position: absolute;\\n    bottom: -100%;\\n    top: auto;\\n    right: 0;\\n    margin: 0 14px; }\\n  .cc-sdk.cc-popup-container .cc-popup-container__close {\\n    margin: 20px;\\n    left: 0;\\n    top: 0; }\\n  .cc-sdk.cc-popup-container__back {\\n    background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);\\n    display: inline-block;\\n    width: 27px;\\n    height: 27px;\\n    background-size: 100%; }\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text p,\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text {\\n    width: 100% !important;\\n    text-align: center;\\n    margin: 0 !important;\\n    padding: 0;\\n    line-height: initial;\\n    height: auto; }\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text {\\n    max-width: 98%; } }\\n\\n[dir=\\\"rtl\\\"].cc-sdk ul {\\n  padding-left: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk.cc-popup-container .cc-popup-container__close {\\n  left: auto;\\n  right: 0;\\n  top: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text {\\n  text-align: left; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-popup-container__back {\\n  background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_rtl_.svg); }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-popup-container-2__icons.cc-right-icon {\\n  left: auto;\\n  right: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-popup-container-2__icons.cc-left-icon {\\n  left: 0;\\n  right: auto; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk.cc-question-container {\\n  margin-right: 0;\\n  margin-left: 0;\\n  left: 0;\\n  right: auto; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__required,\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__validation {\\n  left: 0%;\\n  right: auto; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__required-label {\\n  top: -2px;\\n  left: -2px;\\n  right: auto; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__list li {\\n  display: inline-block;\\n  padding-left: 15px !important;\\n  padding-right: 15px !important;\\n  vertical-align: middle; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"checkbox\\\"] .cc-question-container__list li {\\n  padding-left: 0 !important; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__list li span {\\n  padding-left: 15px;\\n  padding-right: 0;\\n  text-align: left; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container:before {\\n  margin-right: -4px;\\n  margin-left: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .multiline-box {\\n  margin: 0 0px 0 50px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .hl.dropdown {\\n  background-position: 3% center;\\n  text-align: left; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .drop-cc-question-container .cc-question-container__text {\\n  margin-right: 20px;\\n  margin-left: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .detail-box .cc-question-container__content {\\n  padding-left: 0;\\n  padding-right: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__content {\\n  text-align: left; }\\n\\n@media (min-width: 769px) and (max-width: 1024px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-big-list-container .cc-question-container__list,\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__list {\\n    text-align: left; }\\n  [dir=\\\"rtl\\\"].cc-sdk .multiline-box {\\n    margin: 0 0px 0 0px; } }\\n\\n@media (min-width: 769px) and (max-width: 992px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__text {\\n    padding-right: 20px;\\n    padding-left: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__content.rating-color {\\n    margin-right: 0px;\\n    margin-left: 0px; } }\\n\\n@media (max-width: 768px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-popup-container-2__icons.cc-right-icon {\\n    right: 0;\\n    left: auto; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-popup-container-2__icons.cc-left-icon {\\n    right: auto;\\n    left: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .radio-toggle--more-option li span {\\n    padding-left: 25px !important;\\n    padding-right: 0 !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .radio-toggle--more-option li {\\n    padding-left: 0 !important;\\n    padding-right: 0 !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .detail-box .cc-question-container__content {\\n    padding-right: 0px;\\n    padding-left: 0px; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container {\\n    right: auto;\\n    left: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .multiline-box {\\n    margin: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__text {\\n    text-align: left;\\n    width: 100%;\\n    margin-left: 5px;\\n    max-width: 100%; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__list li span {\\n    padding-left: 15px;\\n    padding-right: 0px; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__list li {\\n    padding-right: 0;\\n    padding-left: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-popup-container-2__icons.left-icon {\\n    right: 0;\\n    left: auto; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-popup-container-2__icons.right-icon {\\n    left: 0;\\n    right: auto; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__content.rating-color {\\n    margin-right: 0 !important;\\n    margin-left: 0 !important; } }\\n\\n/*cc-question-container color scale css*/\\n.cc-sdk .option-number-item {\\n  color: #fff;\\n  float: right;\\n  font-size: 13px;\\n  height: 38px;\\n  box-sizing: border-box;\\n  padding-top: 10px;\\n  text-align: center;\\n  width: 8.5%;\\n  margin-right: 1px;\\n  margin-left: 0;\\n  cursor: pointer; }\\n  .cc-sdk .option-number-item.option-zero {\\n    background: #853838; }\\n  .cc-sdk .option-number-item.option-zero.selected, .cc-sdk .option-number-item.option-zero:hover {\\n    background: #572526; }\\n  .cc-sdk .option-number-item.option-one {\\n    background: #9e4343; }\\n  .cc-sdk .option-number-item.option-one.selected, .cc-sdk .option-number-item.option-one:hover {\\n    background: #642728; }\\n  .cc-sdk .option-number-item.option-two {\\n    background: #c14d4d; }\\n  .cc-sdk .option-number-item.option-two.selected, .cc-sdk .option-number-item.option-two:hover {\\n    background: #712827; }\\n  .cc-sdk .option-number-item.option-three {\\n    background: #d94d4d; }\\n  .cc-sdk .option-number-item.option-three.selected, .cc-sdk .option-number-item.option-three:hover {\\n    background: #7c2828; }\\n  .cc-sdk .option-number-item.option-four {\\n    background: #ee4d4d; }\\n  .cc-sdk .option-number-item.option-four.selected, .cc-sdk .option-number-item.option-four:hover {\\n    background: #852828; }\\n  .cc-sdk .option-number-item.option-five {\\n    background: #ff4d4d; }\\n  .cc-sdk .option-number-item.option-five.selected, .cc-sdk .option-number-item.option-five:hover {\\n    background: #844828; }\\n  .cc-sdk .option-number-item.option-six {\\n    background: #ff8c4d; }\\n  .cc-sdk .option-number-item.option-six.selected, .cc-sdk .option-number-item.option-six:hover {\\n    background: #844828; }\\n  .cc-sdk .option-number-item.option-seven {\\n    background: #ffc74d; }\\n  .cc-sdk .option-number-item.option-seven.selected, .cc-sdk .option-number-item.option-seven:hover {\\n    background: #856728; }\\n  .cc-sdk .option-number-item.option-eight {\\n    background: #f5eb4d; }\\n  .cc-sdk .option-number-item.option-eight.selected, .cc-sdk .option-number-item.option-eight:hover {\\n    background: #7f7a28; }\\n  .cc-sdk .option-number-item.option-nine {\\n    background: #73ca81; }\\n  .cc-sdk .option-number-item.option-nine.selected, .cc-sdk .option-number-item.option-nine:hover {\\n    background: #3b6942; }\\n  .cc-sdk .option-number-item.option-ten {\\n    background: #4db47c; }\\n  .cc-sdk .option-number-item.option-ten.selected, .cc-sdk .option-number-item.option-ten:hover {\\n    background: #285e40; }\\n  .cc-sdk .option-number-item.option-7-scale-1 {\\n    background: #ed534f; }\\n  .cc-sdk .option-number-item.option-7-scale-2 {\\n    background: #ed534f; }\\n  .cc-sdk .option-number-item.option-7-scale-3 {\\n    background: #ed534f; }\\n  .cc-sdk .option-number-item.option-7-scale-4 {\\n    background: #ffbc00; }\\n  .cc-sdk .option-number-item.option-7-scale-5 {\\n    background: #ffbc00; }\\n  .cc-sdk .option-number-item.option-7-scale-6 {\\n    background: #4db47c; }\\n  .cc-sdk .option-number-item.option-7-scale-7 {\\n    background: #4db47c; }\\n  .cc-sdk .option-number-item.option-5-scale-1 {\\n    background: #ed534f; }\\n  .cc-sdk .option-number-item.option-5-scale-2 {\\n    background: #ed534f; }\\n  .cc-sdk .option-number-item.option-5-scale-3 {\\n    background: #ffbc00; }\\n  .cc-sdk .option-number-item.option-5-scale-4 {\\n    background: #4db47c; }\\n  .cc-sdk .option-number-item.option-5-scale-5 {\\n    background: #4db47c; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .option-number-item {\\n  width: calc(9.09% - 1px); }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"].scale-image-container .option-number-item {\\n  width: 8.4%; }\\n\\n.cc-sdk .cc-question-container__content.rating-color {\\n  margin-right: 74px; }\\n\\n.cc-sdk .option-left-rating-text,\\n.cc-sdk .option-right-rating-text,\\n.cc-sdk .option-mid-rating-text,\\n.cc-sdk .option-midnps-rating-text {\\n  color: #424242;\\n  font-size: 13px;\\n  right: 0;\\n  position: absolute; }\\n\\n.cc-sdk .option-midnps-rating-text {\\n  right: calc(7*9.09% - 1px); }\\n\\n.cc-sdk .option-left-rating-text-small-container {\\n  max-width: 57px;\\n  text-align: right;\\n  max-height: 37px;\\n  overflow: hidden; }\\n\\n.cc-sdk .option-mid-rating-text-small-container {\\n  max-width: 57px;\\n  text-align: left;\\n  max-height: 37px;\\n  overflow: hidden; }\\n\\n.cc-sdk .option-right-rating-text-small-container {\\n  max-width: 57px;\\n  text-align: left;\\n  max-height: 37px;\\n  overflow: hidden; }\\n\\n.cc-sdk .option-left-rating-text-small-container-smile {\\n  width: 40%;\\n  text-align: right;\\n  max-height: 37px;\\n  overflow: hidden;\\n  bottom: auto !important;\\n  top: 57px; }\\n\\n.cc-sdk .option-right-rating-text-small-container-smile {\\n  width: 40%;\\n  text-align: left;\\n  max-height: 37px;\\n  overflow: hidden;\\n  bottom: auto !important;\\n  top: 57px; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-left-rating-text,\\n.cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-left-rating-text {\\n  right: 4px;\\n  width: 40%;\\n  text-align: right; }\\n\\n.cc-sdk .option-right-rating-text {\\n  right: auto;\\n  left: 0; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n.cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n  left: 4px;\\n  text-align: left;\\n  width: 40%; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-number-item {\\n  width: 38px;\\n  margin: 0 .5px;\\n  cursor: pointer;\\n  display: inline-block;\\n  float: none; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .cc-question-container__list {\\n  display: inline-block;\\n  width: auto;\\n  position: relative; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"].scale-image-container .cc-question-container__list {\\n  width: 100%; }\\n\\n.cc-sdk .rating-color {\\n  position: relative; }\\n\\n.cc-sdk .option-smile-box,\\n.cc-sdk .option-star-box {\\n  height: 60px;\\n  margin-left: 29px;\\n  width: 60px;\\n  cursor: pointer;\\n  box-sizing: border-box;\\n  border: solid 4px transparent;\\n  border-radius: 50%;\\n  display: inline-block;\\n  background-size: 100%; }\\n\\n.cc-sdk:not([dir=\\\"rtl\\\"]) .option-star-box:nth-child(5),\\n.cc-sdk:not([dir=\\\"rtl\\\"]) .option-smile-box:nth-child(5) {\\n  margin-left: 0; }\\n\\n.cc-sdk[dir=\\\"rtl\\\"] .option-star-box:nth-child(1),\\n.cc-sdk[dir=\\\"rtl\\\"] .option-smile-box:nth-child(1) {\\n  margin-left: 0; }\\n\\n.cc-sdk .option-smile-box.cc-one {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-two {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-three {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-four {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-five {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-one.selected, .cc-sdk .option-smile-box.cc-one:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-two.selected, .cc-sdk .option-smile-box.cc-two:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-three.selected, .cc-sdk .option-smile-box.cc-three:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-four.selected, .cc-sdk .option-smile-box.cc-four:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-five.selected, .cc-sdk .option-smile-box.cc-five:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .cc-csat.cc-question-container__content.rating-color {\\n  margin-right: 45px; }\\n\\n.cc-sdk .option-csat.option-smile-box.selected,\\n.cc-sdk .option-csat.option-smile-box:hover,\\n.cc-sdk .option-csat.option-smile-box {\\n  background-size: 25px;\\n  background-position: 18px center; }\\n\\n.cc-sdk .option-csat {\\n  height: 30px;\\n  margin-left: 68px;\\n  width: 30px;\\n  padding-right: 50px;\\n  font-size: 14px; }\\n\\n.cc-sdk .option-csat {\\n  height: 45px;\\n  margin-left: 0px;\\n  width: auto;\\n  padding-right: 0px;\\n  font-size: 14px;\\n  vertical-align: middle;\\n  display: inline-block;\\n  margin-left: 13px; }\\n  .cc-sdk .option-csat span {\\n    display: inline-block;\\n    vertical-align: top;\\n    font-size: 12px;\\n    padding-right: 25px;\\n    position: relative;\\n    text-align: right;\\n    /* min-height: 32px; */\\n    width: 100%; }\\n  .cc-sdk .option-csat .cc-checkbox label {\\n    pointer-events: none; }\\n\\n.cc-sdk .option-star-box {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-star-box:hover,\\n.cc-sdk .option-star-box.selected {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star_selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"slider\\\"] .option-left-rating-text {\\n  right: 4px;\\n  width: 40%;\\n  text-align: right; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"slider\\\"] .option-right-rating-text {\\n  width: 40%;\\n  text-align: left; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .cc-question-container__list,\\n.cc-sdk .cc-question-container[data-type=\\\"star\\\"] .cc-question-container__list {\\n  position: relative;\\n  width: auto;\\n  display: inline-block; }\\n\\n.cc-sdk .circle-image {\\n  margin: auto;\\n  width: 253px;\\n  overflow: hidden;\\n  height: 240px;\\n  position: relative; }\\n\\n.cc-sdk .circle-image-scale-010-neutral {\\n  width: 242px;\\n  overflow: hidden;\\n  height: 230px;\\n  margin: auto; }\\n\\n.cc-sdk .cc-nps-selected-rating {\\n  font-size: 100px;\\n  display: inline-block;\\n  position: absolute;\\n  top: 0;\\n  right: 0px;\\n  line-height: 100px;\\n  left: 0;\\n  margin: auto;\\n  bottom: 0;\\n  width: 110px;\\n  height: 100px;\\n  text-align: center;\\n  font-weight: 100;\\n  color: #bbb; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n.cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n  left: 4px; }\\n\\n.cc-sdk .option-number-item.option-scale {\\n  background: #4db47c; }\\n\\n.cc-sdk .option-number-item.option-scale.selected,\\n.cc-sdk .option-number-item.option-scale:hover {\\n  background: #712827; }\\n\\n.cc-sdk .cc-nps-image {\\n  cursor: pointer;\\n  position: relative;\\n  right: 0; }\\n\\n.cc-sdk .legend-container {\\n  position: relative; }\\n\\n@media (min-width: 769px) and (max-width: 992px) {\\n  .cc-sdk .option-smile-box,\\n  .cc-sdk .option-star-box {\\n    width: 50px;\\n    height: 50px;\\n    margin-left: 10px; }\\n  .cc-sdk .option-csat.option-smile-box.selected,\\n  .cc-sdk .option-csat.option-smile-box:hover,\\n  .cc-sdk .option-csat.option-smile-box {\\n    display: inline-block;\\n    width: 168px;\\n    background-position: 48px center; }\\n    .cc-sdk .option-csat.option-smile-box.selected span,\\n    .cc-sdk .option-csat.option-smile-box:hover span,\\n    .cc-sdk .option-csat.option-smile-box span {\\n      padding-right: 40px; } }\\n\\n@media screen and (min-width: 992px) {\\n  .cc-sdk span.option-csat.option-smile-box {\\n    background-position: 44px center; }\\n    .cc-sdk span.option-csat.option-smile-box:hover, .cc-sdk span.option-csat.option-smile-box.selected {\\n      background-position: 44px center; }\\n    .cc-sdk span.option-csat.option-smile-box span {\\n      padding-right: 40px; } }\\n\\n@media (max-width: 768px) {\\n  .cc-sdk .option-smile-box,\\n  .cc-sdk .option-star-box {\\n    display: inline-block;\\n    margin-left: 3px; }\\n  .cc-sdk .option-csat.option-smile-box.selected,\\n  .cc-sdk .option-csat.option-smile-box:hover,\\n  .cc-sdk .option-csat.option-smile-box {\\n    display: block;\\n    background-size: 40px;\\n    background-position: 45px center; }\\n  .cc-sdk .option-csat.option-smile-box {\\n    height: 65px;\\n    width: 100%; }\\n  .cc-sdk .option-csat.option-smile-box span {\\n    font-size: 15px;\\n    padding-right: 40px; }\\n  .cc-sdk .option-csat.option-smile-box .cc-checkbox {\\n    top: calc(50% - 12.5px);\\n    height: 57px; }\\n  .cc-sdk .option-csat.option-smile-box .cc-checkbox.cc-radio label:before {\\n    width: 25px;\\n    height: 25px; }\\n  .cc-sdk .option-csat.option-smile-box .cc-checkbox input[type=\\\"radio\\\"]:checked + label:after {\\n    width: 25px;\\n    height: 25px; }\\n  .cc-sdk .option-number-item {\\n    color: #fff;\\n    float: right;\\n    font-size: 15px;\\n    height: 35px;\\n    box-sizing: border-box;\\n    margin-left: 1px;\\n    padding-top: 7px;\\n    text-align: center;\\n    width: 38px;\\n    cursor: pointer;\\n    vertical-align: middle; }\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] {\\n    bottom: 106px; }\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-left-rating-text,\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-right-rating-text,\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-mid-rating-text {\\n    width: auto; }\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-right-rating-text {\\n    text-align: left; }\\n  .cc-sdk .option-smile-box img,\\n  .cc-sdk .option-star-box img {\\n    padding-left: 5px;\\n    margin-left: 0; }\\n  .cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .cc-question-container__content {\\n    width: 100% !important; }\\n  .cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n  .cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n    left: 10px; }\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .cc-question-container__list {\\n    width: 100%; }\\n  .cc-sdk .cc-question-container[data-type=\\\"csat\\\"] .cc-question-container__list li {\\n    width: 100%; } }\\n\\n@media (max-width: 381px) {\\n  .cc-sdk .option-smile-box,\\n  .cc-sdk .option-star-box {\\n    display: inline-block;\\n    margin-left: 0;\\n    height: 50px;\\n    width: 50px; }\\n  .cc-sdk .option-smile-box img,\\n  .cc-sdk .option-star-box img {\\n    padding-left: 5px;\\n    margin-left: 0; } }\\n\\n@media screen and (max-width: 768px) {\\n  .cc-sdk .radial-legend-right,\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] span.radial-legend-right {\\n    text-align: right;\\n    width: 35%;\\n    left: 0; }\\n  .cc-sdk .radial-legend-mid {\\n    width: 35%;\\n    text-align: center;\\n    right: 0;\\n    left: 0; }\\n  .cc-sdk .radial-legend-left {\\n    width: 35%;\\n    text-align: left;\\n    right: 0; } }\\n\\n/*cc-question-container color scale css*/\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"csat\\\"] .cc-question-container__content.rating-color {\\n  margin-left: 45px;\\n  margin-right: 0px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"csat\\\"] .cc-checkbox input[type=\\\"radio\\\"] {\\n  margin-left: 0px;\\n  opacity: 0;\\n  outline: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-number-item {\\n  margin-left: 1px;\\n  margin-right: 0;\\n  float: left; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__content.rating-color {\\n  margin-left: 74px;\\n  margin-right: 0px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-right-rating-text {\\n  right: calc(100% - 418px);\\n  left: auto !important; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-left-rating-text {\\n  left: 0px;\\n  right: auto !important; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .option-right-rating-text {\\n  right: 0;\\n  left: auto !important; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-right-rating-text {\\n  right: 0;\\n  left: auto !important; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-left-rating-text {\\n  left: 2px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"slider\\\"] .option-right-rating-text {\\n  right: 0;\\n  width: 40%;\\n  text-align: right; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"slider\\\"] .option-left-rating-text {\\n  left: 0;\\n  text-align: left; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .rating-color {\\n  position: relative; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-smile-box img {\\n  margin-left: 29px;\\n  margin-right: 0px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-star-box img {\\n  margin-right: 19px;\\n  margin-left: 0px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box span {\\n  padding-left: 25px;\\n  text-align: left;\\n  padding-right: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n  right: 7px;\\n  left: auto !important;\\n  text-align: right; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-left-rating-text,\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-left-rating-text {\\n  left: 7px;\\n  right: auto !important;\\n  text-align: left; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-csat {\\n  width: auto;\\n  box-sizing: border-box;\\n  padding-right: 0;\\n  margin-left: 13px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box.selected,\\n[dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box:hover,\\n[dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box {\\n  background-position: calc(100% - ( 100% - 44px)) center;\\n  text-align: left; }\\n\\n@media (min-width: 769px) and (max-width: 992px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .option-smile-box img,\\n  [dir=\\\"rtl\\\"].cc-sdk .option-star-box img {\\n    margin-right: 0px;\\n    margin-left: 10px; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__content.rating-color {\\n    margin-left: 10px;\\n    margin-right: 86px !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .option-right-rating-text {\\n    right: 17px;\\n    left: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n    right: 7px;\\n    text-align: right;\\n    left: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-left-rating-text,\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-left-rating-text {\\n    left: 20px;\\n    right: auto !important;\\n    text-align: left; }\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box.selected,\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box:hover,\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box {\\n    width: auto; } }\\n\\n@media (max-width: 768px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .option-smile-box img,\\n  [dir=\\\"rtl\\\"].cc-sdk .option-star-box img {\\n    padding-left: 0px;\\n    padding-right: 5px;\\n    margin-left: 0;\\n    margin-right: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"csat\\\"] .cc-checkbox input[type=\\\"radio\\\"] {\\n    margin-left: 7px;\\n    opacity: 0;\\n    outline: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box.selected,\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box:hover,\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box {\\n    background-position: calc(100% - ( 100% - 44px)) center; }\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box span {\\n    padding-left: 39px;\\n    text-align: left;\\n    padding-right: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-left-rating-text,\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-left-rating-text {\\n    left: 10px;\\n    right: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .option-left-rating-text {\\n    left: 10px;\\n    right: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n    left: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .option-right-rating-text {\\n    right: calc(100% - 322px);\\n    left: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-right-rating-text {\\n    right: 13px;\\n    left: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .radial-legend-right, [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .radial-legend-right {\\n    right: auto !important;\\n    left: 10px !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .radial-legend-left, [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .radial-legend-left {\\n    left: auto !important;\\n    right: 10px !important; } }\\n\\n@media (max-width: 381px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .option-right-rating-text {\\n    right: calc(100% - 258px);\\n    left: auto !important; } }\\n\\n.cc-sdk .cc-select-wrapper {\\n  position: relative;\\n  display: inline-block;\\n  user-select: none;\\n  z-index: 11; }\\n\\n.cc-sdk .cc-select-wrapper select {\\n  display: none; }\\n\\n.cc-sdk .cc-select {\\n  position: relative;\\n  display: inline-block;\\n  margin-right: 70px; }\\n\\n.cc-sdk .cc-select-trigger {\\n  position: relative;\\n  display: block;\\n  width: 130px;\\n  padding: 0 22px 0 84px;\\n  font-size: 15px;\\n  font-style: italic;\\n  font-weight: 300;\\n  color: #222;\\n  line-height: 20px;\\n  background: transparent;\\n  border-radius: 0;\\n  cursor: pointer;\\n  width: 300px;\\n  border-bottom: 1px solid #6d6d6d;\\n  display: inline-block;\\n  text-align: right;\\n  padding: 5px 5px 5px 20px;\\n  position: relative;\\n  /*background-image: url(../images/arrow-down.black.svg);*/\\n  background-position: 3% center;\\n  background-repeat: no-repeat;\\n  max-height: 50px;\\n  overflow: hidden; }\\n\\n.cc-sdk .cc-select-trigger:after {\\n  position: absolute;\\n  display: block;\\n  content: '';\\n  width: 10px;\\n  height: 10px;\\n  top: 50%;\\n  left: 5px;\\n  margin-top: -3px;\\n  border-bottom: 1px solid #222;\\n  border-left: 1px solid #222;\\n  transform: rotate(-45deg) translateY(-50%);\\n  transition: all .2s ease-in-out;\\n  transform-origin: 50% 0; }\\n\\n.cc-sdk .cc-select.opened .cc-select-trigger:after {\\n  margin-top: 3px;\\n  transform: rotate(135deg) translateY(-50%); }\\n\\n.cc-sdk .cc-select-options-container {\\n  position: absolute;\\n  display: block;\\n  top: 100%;\\n  right: 0;\\n  left: 0;\\n  min-width: 100%;\\n  margin: 15px 0;\\n  border: 1px solid #b5b5b5;\\n  border-radius: 4px;\\n  box-sizing: border-box;\\n  box-shadow: 0 2px 1px rgba(0, 0, 0, 0.07);\\n  background: #fff;\\n  transition: all .2s ease-in-out;\\n  opacity: 0;\\n  visibility: hidden;\\n  pointer-events: none;\\n  transform: translateY(calc( -100% - 65px));\\n  height: auto;\\n  max-height: 150px;\\n  overflow: hidden;\\n  overflow-y: scroll; }\\n\\n.cc-sdk .cc-select-options {\\n  /*  max-height: 150px;\\r\\n    overflow-y: scroll; */\\n  overflow-y: scroll;\\n  height: 100%;\\n  width: 110%; }\\n\\n.cc-sdk .cc-select.opened .cc-select-options-container {\\n  opacity: 1;\\n  visibility: visible;\\n  pointer-events: all;\\n  transform: translateY(-100%) translateY(-65px); }\\n\\n@media (min-width: 769px) {\\n  .cc-sdk .cc-popup-container-2.top .cc-select-options-container,\\n  .cc-sdk .cc-popup-container-2.top .cc-select.opened .cc-select-options-container {\\n    transform: translateY(-19px); } }\\n\\n.cc-sdk .cc-select-options:before {\\n  /*       position: absolute;\\r\\n    display: block;\\r\\n    content: '';\\r\\n    bottom: 100%; right: 25px;\\r\\n    width: 7px; height: 7px;\\r\\n    margin-bottom: -4px;\\r\\n    border-top: 1px solid #b5b5b5;\\r\\n    border-left: 1px solid #b5b5b5;\\r\\n    background: #fff;\\r\\n    transform: rotate(45deg);\\r\\n    transition: all .4s ease-in-out; */ }\\n\\n.cc-sdk .option-hover:before {\\n  background: #f9f9f9; }\\n\\n.cc-sdk .cc-select-option {\\n  position: relative;\\n  display: block;\\n  padding: 0 12px;\\n  border-bottom: 1px solid #e4e4e4;\\n  font-size: 12px;\\n  font-weight: 600;\\n  color: #222;\\n  line-height: 34px;\\n  cursor: pointer;\\n  transition: all .2s ease-in-out;\\n  text-align: right;\\n  margin: 0;\\n  width: 100%; }\\n\\n.cc-sdk .cc-select-option:first-of-type {\\n  border-radius: 4px 4px 0 0; }\\n\\n.cc-sdk .cc-select-option:last-of-type {\\n  border-bottom: 0;\\n  border-radius: 0 0 4px 4px; }\\n\\n.cc-sdk .cc-select-option:hover,\\n.cc-sdk .cc-select-option.selection {\\n  background: #eaeaea; }\\n\\n.cc-sdk .cc-select-wrapper.down .cc-select-options-container {\\n  transform: translateY(calc( 20px)); }\\n\\n.cc-sdk .cc-select-wrapper.down .cc-select.opened .cc-select-options-container {\\n  transform: translateY(calc( 20px)); }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .cc-question-container__content,\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .cc-question-container__content {\\n  width: 40%; }\\n\\n@media (max-width: 768px) {\\n  .cc-sdk .cc-select,\\n  .cc-sdk .cc-select-wrapper {\\n    min-width: 100%; }\\n  .cc-sdk .cc-select {\\n    margin-right: 0px; }\\n  .cc-sdk .cc-select-trigger {\\n    min-width: 100%;\\n    width: auto; } }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-select-trigger {\\n  padding: 0 84px 0 22px;\\n  background-position: 3% center;\\n  background-repeat: no-repeat;\\n  text-align: left; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-select-trigger:after {\\n  top: 50%;\\n  right: 2px;\\n  left: auto; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-select-option {\\n  text-align: left; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-select-option:first-of-type {\\n  border-radius: 0px 4px 4px 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-select-option:last-of-type {\\n  border-radius: 4px 0 0px 4px; }\\n\\n/** Checkbox **/\\n.cc-sdk .cc-checkbox {\\n  display: table-cell;\\n  vertical-align: middle;\\n  position: relative;\\n  text-align: center; }\\n\\n.cc-sdk .cc-checkbox label {\\n  cursor: pointer;\\n  display: block;\\n  height: 25px; }\\n\\n.cc-sdk .cc-checkbox + span label img {\\n  width: 40px;\\n  display: inline-block;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-checkbox label:before,\\n.cc-sdk .cc-checkbox label:after {\\n  content: \\\"\\\";\\n  right: 0;\\n  margin: auto;\\n  position: absolute;\\n  top: calc(50% - 12.5px); }\\n\\n.cc-sdk .cc-checkbox label:before {\\n  background: transparent;\\n  border-radius: 2px;\\n  border: 1px solid #424242;\\n  cursor: pointer;\\n  height: 20px;\\n  transition: background .3s;\\n  width: 20px; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"checkbox\\\"] {\\n  opacity: 0;\\n  outline: 0; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:before {\\n  background: #fdaf19;\\n  border: none; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:after {\\n  border: 3px solid #222;\\n  border-left-style: none;\\n  border-top-style: none;\\n  height: 7px;\\n  top: calc(50% - 8.5px);\\n  right: 4px;\\n  transform: rotate(45deg);\\n  width: 12px; }\\n\\n/*radio*/\\n.cc-sdk .cc-checkbox.cc-radio label:before {\\n  background: transparent;\\n  border: 1px solid #424242;\\n  cursor: pointer;\\n  height: 25px;\\n  transition: background-color .3s;\\n  width: 25px; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"radio\\\"] {\\n  opacity: 0;\\n  outline: 0; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"radio\\\"]:checked + label:before {\\n  background: transparent;\\n  border-color: #fdaf19; }\\n\\n.cc-sdk .cc-question-container__list li {\\n  display: inline-table;\\n  margin-bottom: 0; }\\n  .cc-sdk .cc-question-container__list li .cc-sdk .cc-checkbox,\\n  .cc-sdk .cc-question-container__list li .cc-radio {\\n    width: 30px; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"radio\\\"]:checked + label:after {\\n  -moz-transform: scale(0.8);\\n  -ms-transform: scale(0.8);\\n  -o-transform: scale(0.8);\\n  -webkit-transform: scale(0.8);\\n  background: #fdaf19;\\n  border-radius: 30px;\\n  height: 25px;\\n  transform: scale(0.8);\\n  width: 25px; }\\n\\n.cc-sdk .cc-radio label:before {\\n  border-radius: 30px; }\\n\\n.cc-sdk .radio-toggle--more-option li span {\\n  padding-right: 25px !important;\\n  width: 125px !important; }\\n\\n.cc-sdk .radio-toggle .cc-question-container__list li {\\n  padding-right: 15px; }\\n\\n@media (min-width: 1000px) {\\n  .cc-sdk .radio-toggle .cc-question-container__list li span label {\\n    overflow: hidden;\\n    max-height: 100px;\\n    display: block; } }\\n\\n@media (min-width: 769px) and (max-width: 992px) {\\n  .cc-sdk .radio-toggle .cc-question-container__list li {\\n    padding-right: 10px; }\\n  .cc-sdk .radio-toggle .cc-question-container__list li span .label {\\n    display: block;\\n    max-height: 50px;\\n    overflow: hidden;\\n    text-overflow: ellipsis; }\\n  .cc-sdk .radio-toggle .cc-question-container__list li span label {\\n    overflow: hidden;\\n    max-height: 50px;\\n    display: block;\\n    text-overflow: ellipsis; } }\\n\\n@media (max-width: 768px) {\\n  .cc-sdk .radio-toggle .cc-question-container__list li {\\n    padding-right: 0; }\\n  .cc-sdk .radio-toggle .cc-question-container__list li {\\n    display: block;\\n    padding-left: 50px; } }\\n\\n.cc-sdk .progress-bar {\\n  width: 100%;\\n  position: absolute;\\n  background: #a47c2b;\\n  z-index: 1;\\n  height: 8px;\\n  right: 0; }\\n\\n.cc-sdk .progress-line {\\n  background: #fdaf19;\\n  height: 100%;\\n  display: block;\\n  width: 0%;\\n  transition: all .4s ease-in; }\\n\\n/** Scrollbar\\t**/\\n.cc-sdk .cc-scrollbar-wrapper {\\n  float: right;\\n  height: 100%;\\n  overflow: hidden;\\n  position: relative;\\n  width: 100%;\\n  z-index: 1; }\\n\\n.cc-sdk .cc-scrollbar-content {\\n  -moz-box-sizing: border-box;\\n  /* padding         : 0 32px 0 0; */\\n  /* right           : -18px; */\\n  box-sizing: border-box;\\n  height: 100%;\\n  overflow: auto;\\n  position: relative;\\n  width: 107%; }\\n\\n.cc-sdk .cc-scrollbar-scroll {\\n  background: #aaa;\\n  border-radius: 4px;\\n  cursor: pointer;\\n  opacity: 0;\\n  position: relative;\\n  top: 0;\\n  transition: opacity 0.25s linear;\\n  width: 9px;\\n  z-index: 2; }\\n\\n.cc-sdk .cc-scrollbar-container:hover .cc-scrollbar-scroll {\\n  opacity: 1; }\\n\\n.cc-sdk .cc-scrollbar-grabbed {\\n  -khtml-user-select: none;\\n  -moz-user-select: none;\\n  -o-user-select: none;\\n  -webkit-user-select: none;\\n  user-select: none; }\\n\\n.cc-sdk .cc-sdk-range {\\n  -webkit-appearance: none;\\n  -moz-appearance: none;\\n  width: 500px;\\n  height: 60px;\\n  background: transparent; }\\n\\n.cc-sdk input[type=range]::-webkit-slider-runnable-track {\\n  -webkit-appearance: none;\\n  background: #ff403d;\\n  background: -moz-linear-gradient(45deg, #ff403d 0%, #992a28 100%);\\n  background: -webkit-linear-gradient(45deg, #ff403d 0%, #992a28 100%);\\n  background: linear-gradient(-135deg, #ff403d 0%, #992a28 100%);\\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ff403d ', endColorstr='#992a28 ', GradientType=1);\\n  height: 1px; }\\n\\n.cc-sdk input[type=range]:focus {\\n  outline: none; }\\n\\n.cc-sdk input[type=range]::-moz-range-track {\\n  -moz-appearance: none;\\n  background: #ff403d;\\n  background: -moz-linear-gradient(45deg, #ff403d 0%, #992a28 100%);\\n  background: -webkit-linear-gradient(45deg, #ff403d 0%, #992a28 100%);\\n  background: linear-gradient(-135deg, #7a0806 0%, #992a28 100%);\\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ff403d ', endColorstr='#992a28 ', GradientType=1);\\n  height: 1px; }\\n\\n.cc-sdk input[type=range]::-ms-track {\\n  height: 1px;\\n  width: 500px;\\n  background-color: #ff403d; }\\n\\n.cc-sdk input[type=range]::-webkit-slider-thumb {\\n  -webkit-appearance: none;\\n  border: 1px solid #ff403d;\\n  border-radius: 50%;\\n  height: 32px;\\n  width: 32px;\\n  max-width: 80px;\\n  position: relative;\\n  bottom: 16px;\\n  background-color: #fff;\\n  cursor: -webkit-grab; }\\n\\n.cc-sdk input[type=range]::-ms-thumb {\\n  border: 1px solid #ff403d;\\n  border-radius: 50%;\\n  height: 32px;\\n  width: 32px;\\n  background: #e08692;\\n  box-sizing: border-box;\\n  cursor: pointer !important; }\\n\\n.cc-sdk input[type=range]::-moz-range-thumb {\\n  -moz-appearance: none;\\n  border: 1px solid #ff403d;\\n  border-radius: 50%;\\n  height: 32px;\\n  width: 32px;\\n  max-width: 80px;\\n  position: relative;\\n  bottom: 16px;\\n  background-color: #fff;\\n  cursor: -moz-grab; }\\n\\n.cc-sdk input[type=range]::-moz-range-thumb:before {\\n  content: 'asd'; }\\n\\n.cc-sdk input[type=range]::-webkit-slider-thumb:active {\\n  cursor: -webkit-grabbing; }\\n\\n.cc-sdk input[type=range]::-moz-range-thumb:active {\\n  cursor: -moz-grabbing; }\\n\\n.cc-sdk .cc-question-container__content.cc-sdk-range-slider {\\n  height: 50px; }\\n\\n.cc-sdk .slider-tip {\\n  background: #eb1c23;\\n  padding: 8px 9px 9px 9px;\\n  position: absolute;\\n  right: 0px;\\n  left: 0;\\n  margin: 0 auto;\\n  /* border-top-left-radius: 10px; */\\n  /* border-top-right-radius: 10px; */\\n  /* border-bottom-left-radius: 100%; */\\n  /* border-bottom-right-radius: 100%; */\\n  color: #fff;\\n  /* display: none !important; */\\n  background: none;\\n  color: #424242;\\n  font-size: 13px;\\n  width: 100px;\\n  display: inline-block;\\n  text-align: center;\\n  font-weight: bold; }\\n\\n.cc-sdk .slider-tip:after {\\n  border-width: 5px 5px 0;\\n  border-top-color: #000; }\\n\\n@media (max-width: 1024px) {\\n  .cc-sdk .cc-sdk-range {\\n    width: 100%; } }\\n\\n.cc-sdk input.cc-sdk-range.cc-blue::-moz-range-track,\\n.cc-sdk input.cc-sdk-range.cc-blue::-webkit-slider-runnable-track {\\n  background: blue; }\\n\\n.cc-sdk .chart {\\n  -moz-box-sizing: border-box;\\n  -webkit-box-sizing: border-box;\\n  box-sizing: border-box;\\n  display: inline-block;\\n  height: 21px;\\n  padding-top: 22px;\\n  position: relative;\\n  vertical-align: top;\\n  width: 21px; }\\n\\n.cc-sdk .cc-sdk-chart span {\\n  display: block;\\n  font-size: 2em;\\n  font-weight: normal; }\\n\\n.cc-sdk .cc-sdk-chart canvas {\\n  right: 0;\\n  position: absolute;\\n  top: 0; }\\n\\n.cc-sdk .cc-sdk-loader {\\n  height: 21px;\\n  right: 28px;\\n  position: absolute;\\n  top: 8px;\\n  width: 21px; }\\n\\n@media (min-width: 769px) {\\n  .cc-sdk .cc-sdk-chart canvas {\\n    margin-right: 10px; } }\\n\\n@media (max-width: 768px) {\\n  .cc-sdk .cc-sdk-loader {\\n    position: relative;\\n    right: auto;\\n    top: 0;\\n    left: auto; } }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-sdk-chart canvas {\\n  left: 0;\\n  right: auto; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-sdk-loader {\\n  left: 28px;\\n  right: auto; }\\n\\n@media (min-width: 768px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-sdk-chart canvas {\\n    margin-left: 10px;\\n    margin-right: 0; } }\\n\\n/** Utilities **/\\n.cc-sdk .show {\\n  display: block !important; }\\n\\n.cc-sdk .show-inline {\\n  display: inline-block !important; }\\n\\n.cc-sdk .hide {\\n  display: none !important; }\\n\\n.cc-sdk.bottom {\\n  bottom: 0; }\\n\\n.cc-sdk.right, .cc-sdk .right {\\n  left: 0; }\\n\\n.cc-sdk .left {\\n  right: 0; }\\n\\n.cc-sdk .top {\\n  top: 0; }\\n\\n.ccsdk-overlay {\\n  background: #fff;\\n  bottom: 0;\\n  height: 100%;\\n  right: 0;\\n  position: absolute;\\n  top: 0;\\n  width: 100%;\\n  z-index: 0; }\\n\\n.ccsdk-overlay.ccsdk-glass {\\n  background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/ww.png);\\n  background-repeat: no-repeat;\\n  background-size: cover; }\\n\\n.ccsdk-clearfix {\\n  clear: both;\\n  display: block; }\\n\\n.ccsdk-text-normal {\\n  font-weight: 400; }\\n\\n.cc-sdk ::-webkit-input-placeholder {\\n  /* Chrome/Opera/Safari */\\n  color: #4c4c4c;\\n  font-family: 'Open Sans';\\n  font-size: 13px;\\n  font-style: italic;\\n  font-weight: normal; }\\n\\n.cc-sdk .cc-sdk-form-control::-moz-placeholder {\\n  /* Firefox 19+ */\\n  font-style: italic;\\n  font-size: 13px;\\n  font-weight: normal;\\n  font-family: 'Open Sans';\\n  color: #4c4c4c; }\\n\\n.cc-sdk .cc-sdk-form-control:-ms-input-placeholder {\\n  /* IE 10+ */\\n  font-style: italic;\\n  font-size: 13px;\\n  font-weight: normal;\\n  font-family: 'Open Sans';\\n  color: #4c4c4c; }\\n\\n.cc-sdk .cc-sdk-form-control:-moz-placeholder {\\n  /* Firefox 18- */\\n  font-style: italic;\\n  font-size: 13px;\\n  font-weight: normal;\\n  font-family: 'Open Sans';\\n  color: #4c4c4c; }\\n\\n@media (min-width: 769px) {\\n  .desktop-hide {\\n    display: none; } }\\n\\n@media (max-width: 768px) {\\n  .mobile-hide {\\n    display: none; }\\n  .cc-sdk-loader {\\n    position: relative;\\n    right: auto;\\n    top: 0;\\n    left: auto; }\\n  .ccsdk-overlay.welcome-overlay {\\n    /*background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/ww.png);*/\\n    background: rgba(210, 42, 53, 0.87); } }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .submit-icon {\\n  right: 0;\\n  left: auto;\\n  margin-right: 75px; }\\n\\n@media (max-width: 768px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .submit-icon {\\n    position: absolute;\\n    right: auto;\\n    top: auto;\\n    bottom: 30px;\\n    padding-right: 0;\\n    left: 20px;\\n    margin: 0; } }\\n\\n/** Themes **/\\n/** Prefetch icons **/\\n.cc-sdk::before {\\n  width: 0px;\\n  height: 0px;\\n  overflow: hidden;\\n  position: absolute;\\n  z-index: -1; }\\n\\n.cc-sdk .yellow .progress-bar {\\n  background: #a47c2b; }\\n\\n.cc-sdk .yellow .progress-line {\\n  background: #fdaf19; }\\n\\n.cc-sdk .yellow .submit-icon {\\n  background-image: url(\\\"data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%2747px%27%20height%3D%2747px%27%20viewBox%3D%270%200%2047%2047%27%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%3E%3Ctitle%3EGroup%2016%3C%2Ftitle%3E%3Cdesc%3ECreated%20with%20Sketch.%3C%2Fdesc%3E%3Cdefs%3E%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%3Cfilter%20x%3D%27-18.1%25%27%20y%3D%27-12.9%25%27%20width%3D%27136.2%25%27%20height%3D%27136.2%25%27%20filterUnits%3D%27objectBoundingBox%27%20id%3D%27filter-2%27%3E%3CfeOffset%20dx%3D%270%27%20dy%3D%272%27%20in%3D%27SourceAlpha%27%20result%3D%27shadowOffsetOuter1%27%3E%3C%2FfeOffset%3E%3CfeGaussianBlur%20stdDeviation%3D%272%27%20in%3D%27shadowOffsetOuter1%27%20result%3D%27shadowBlurOuter1%27%3E%3C%2FfeGaussianBlur%3E%3CfeColorMatrix%20values%3D%270%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200.116423234%200%27%20type%3D%27matrix%27%20in%3D%27shadowBlurOuter1%27%3E%3C%2FfeColorMatrix%3E%3C%2Ffilter%3E%3C%2Fdefs%3E%3Cg%20id%3D%27Page-1%27%20stroke%3D%27none%27%20stroke-width%3D%271%27%20fill%3D%27none%27%20fill-rule%3D%27evenodd%27%3E%3Cg%20id%3D%271-copy-20%27%20transform%3D%27translate(-1246.000000%2C%20-664.000000)%27%3E%3Cg%20id%3D%27Group-16%27%20transform%3D%27translate(1250.000000%2C%20666.000000)%27%3E%3Cg%20id%3D%27Oval-4%27%3E%3Cuse%20fill%3D%27white%27%20fill-opacity%3D%271%27%20filter%3D%27url(%23filter-2)%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3Cuse%20fill%3D%27%23d04a49%27%20fill-rule%3D%27evenodd%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3C%2Fg%3E%3Cg%20id%3D%27Group-5%27%20transform%3D%27translate(12.000000%2C%2011.000000)%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23FFFFFF%27%3E%3Cg%20id%3D%27fast-forward-arrows%27%20transform%3D%27translate(6.173934%2C%200.000000)%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3Cg%20id%3D%27fast-forward-arrows-copy%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\\\"); }\\n\\n.cc-sdk .yellow .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:before {\\n  background: #fdaf19; }\\n\\n.cc-sdk .yellow .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:after {\\n  border-color: #222; }\\n\\n.cc-sdk .yellow .cc-checkbox input[type=\\\"radio\\\"]:checked + label:before {\\n  border-color: #fdaf19; }\\n\\n.cc-sdk .yellow .cc-checkbox input[type=\\\"radio\\\"]:checked + label:after {\\n  background: #fdaf19; }\\n\\n.cc-sdk .yellow .cc-sdk-form-control:focus {\\n  border-color: #fcaf18; }\\n\\n.cc-sdk .yellow .cc-message-box__btn {\\n  background: #fdaf19; }\\n\\n.cc-sdk .red .progress-bar {\\n  /*background: rgba(130, 17, 25, 0.87);*/\\n  background: #d22a35; }\\n\\n.cc-sdk .red .progress-line {\\n  background: #d22a35;\\n  filter: brightness(150%); }\\n\\n.cc-sdk .red .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:before {\\n  background: #d22a35; }\\n\\n.cc-sdk .red .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:after {\\n  border-color: #fff; }\\n\\n.cc-sdk .red .cc-checkbox input[type=\\\"radio\\\"]:checked + label:before {\\n  border-color: #d22a35; }\\n\\n.cc-sdk .red .cc-checkbox input[type=\\\"radio\\\"]:checked + label:after {\\n  background: #d22a35; }\\n\\n.cc-sdk .red .cc-sdk-form-control:focus {\\n  border-color: #d22a35; }\\n\\n.cc-sdk .red .cc-message-box__btn {\\n  background: #d22a35;\\n  color: #fff; }\\n\\n.cc-question-container, .hide-slide {\\n  -webkit-transform: translateX(-5px);\\n  -moz-transform: translateX(-5px);\\n  -ms-transform: translateX(-5px);\\n  -o-transform: translateX(-5px);\\n  transform: translateX(-5px);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.hide-bottom-up {\\n  -webkit-transform: translateY(30px);\\n  -moz-transform: translateY(30px);\\n  -ms-transform: translateY(30px);\\n  -o-transform: translateY(30px);\\n  transform: translateY(30px);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.hide-up-bottom {\\n  -webkit-transform: translateY(100%);\\n  -moz-transform: translateY(100%);\\n  -ms-transform: translateY(100%);\\n  -o-transform: translateY(100%);\\n  transform: translateY(100%);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.hide-right-left {\\n  -webkit-transform: translateX(-100%);\\n  -moz-transform: translateX(-100%);\\n  -ms-transform: translateX(-100%);\\n  -o-transform: translateX(-100%);\\n  transform: translateX(-100%);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.hide-left-right {\\n  -webkit-transform: translateX(100%);\\n  -moz-transform: translateX(100%);\\n  -ms-transform: translateX(100%);\\n  -o-transform: translateX(100%);\\n  transform: translateX(100%);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.show-slide, .show-thankyou-slide {\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: visible;\\n  opacity: 1;\\n  -webkit-transform: translateX(0) translateY(0);\\n  -moz-transform: translateX(0) translateY(0);\\n  -ms-transform: translateX(0) translateY(0);\\n  -o-transform: translateX(0) translateY(0);\\n  transform: translateX(0) translateY(0); }\\n\\n.cc-sdk #timer {\\n  position: relative; }\\n\\n.cc-sdk svg.cc-sdk-timer {\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  width: 40px;\\n  height: 40px;\\n  transform: rotateY(-180deg) rotateZ(90deg); }\\n\\n[dir=\\\"rtl\\\"].cc-sdk svg.cc-sdk-timer {\\n  left: 0;\\n  right: auto; }\\n\\n.cc-sdk svg.cc-sdk-timer circle {\\n  stroke-dasharray: 50px;\\n  stroke-dashoffset: 0px;\\n  stroke-linecap: round;\\n  stroke-width: 2px;\\n  stroke: red;\\n  fill: none;\\n  animation: countdown 10s linear 1 forwards; }\\n\\n@keyframes countdown {\\n  from {\\n    stroke-dashoffset: 0px; }\\n  to {\\n    stroke-dashoffset: 50px; } }\\n\\n.cc-sdk .cc-loaderimg {\\n  position: absolute;\\n  width: 100%;\\n  z-index: 1000;\\n  right: 0;\\n  left: 0;\\n  top: 0;\\n  height: 100%;\\n  background: rgba(255, 255, 255, 0.8); }\\n\\n.cc-sdk .cc-loaderimg svg {\\n  width: 100px; }\\n\" : \".cc-sdk ul {\\n  padding-left: 0;\\n  list-style-type: none;\\n  margin: 0; }\\n\\n.cc-sdk a, .cc-sdk a:hover, .cc-sdk a:focus {\\n  text-decoration: none;\\n  color: inherit; }\\n\\n.cc-sdk *, .cc-sdk *:before, .cc-sdk *:after {\\n  box-sizing: border-box; }\\n\\n.cc-sdk p {\\n  color: inherit;\\n  margin: 0; }\\n\\n.cc-sdk map area {\\n  outline: 0;\\n  cursor: pointer; }\\n\\n.cc-sdk map area.selected {\\n  outline: 0px;\\n  outline-color: #0a2135;\\n  outline-width: 0px;\\n  outline-style: solid; }\\n\\n.cc-sdk map area:hover {\\n  outline: 1; }\\n\\n.cc-sdk.cc-popup-container {\\n  background: #fff;\\n  box-shadow: 0 0 4px 5px rgba(0, 0, 0, 0.05);\\n  font-family: \\\"open sans\\\", sans-serif;\\n  position: fixed;\\n  text-align: center;\\n  max-width: 500px;\\n  max-height: 500px;\\n  z-index: 1111; }\\n\\n@media (min-width: 768px) {\\n  .cc-sdk.cc-popup-container {\\n    padding: 10px; } }\\n\\n.cc-sdk.cc-popup-container.bottom {\\n  margin-bottom: 9px; }\\n\\n.cc-sdk.cc-popup-container.top {\\n  margin-top: 9px; }\\n\\n.cc-sdk #cc-thankyou-container .cc-question-container__text p {\\n  word-break: break-word; }\\n\\n.cc-sdk #cc-thankyou-container .cc-question-container__text p,\\n.cc-sdk #cc-thankyou-container .cc-question-container__text {\\n  width: 400px;\\n  max-width: initial;\\n  font-size: 17px;\\n  color: #424242; }\\n\\n.cc-sdk .cc-message-box {\\n  position: relative;\\n  z-index: 11; }\\n\\n.cc-sdk .cc-message-box__text {\\n  color: #424242;\\n  font-size: 14px;\\n  font-weight: 600;\\n  margin: 0;\\n  padding: 29px 14px 20px 14px;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-message-box__btn {\\n  background: #fdaf19;\\n  border-radius: 100px;\\n  display: inline-block;\\n  font-size: 15px;\\n  font-weight: 700;\\n  height: 32px;\\n  padding: 6px 0;\\n  width: 124px;\\n  text-align: center; }\\n\\n.cc-sdk.cc-popup-container .cc-popup-container__close {\\n  cursor: pointer;\\n  margin: 4px;\\n  position: absolute;\\n  right: 0;\\n  top: 0;\\n  z-index: 111; }\\n\\n.cc-sdk .cc-popup-container-2 {\\n  /* box-shadow: 0 0 4px 5px rgba(0,0,0,0.05); */\\n  height: 144px;\\n  position: fixed;\\n  width: 100%;\\n  z-index: 1111; }\\n\\n.cc-sdk .cc-popup-container-2.bottom {\\n  bottom: 0px; }\\n\\n.cc-sdk .cc-popup-container-2__icons,\\n.cc-sdk .cc-popup-container-2__icons {\\n  cursor: pointer;\\n  padding: 8px;\\n  position: absolute;\\n  top: 0;\\n  z-index: 111; }\\n\\n.cc-sdk .top.cc-popup-container-2 .cc-popup-container-2__icons {\\n  padding-top: 15px; }\\n\\n.cc-sdk .cc-popup-container-2__icons.cc-right-icon {\\n  right: 0; }\\n\\n.cc-sdk .cc-popup-container-2__icons.cc-left-icon {\\n  left: 0; }\\n\\n.cc-sdk .cc-popup-container__back {\\n  background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);\\n  display: inline-block;\\n  width: 21px;\\n  height: 21px; }\\n\\n.cc-sdk .cc-question-container {\\n  /* margin: auto; */\\n  padding: 20px 20px 25px;\\n  position: absolute;\\n  text-align: center;\\n  width: 100%;\\n  z-index: 11;\\n  top: 0;\\n  left: 0; }\\n\\n.cc-sdk .cc-question-container__text {\\n  /*height: 80px;*/\\n  color: #424242;\\n  display: inline-block;\\n  font-size: 15px;\\n  font-weight: 600;\\n  max-width: 230px;\\n  padding: 8px 0;\\n  text-align: center;\\n  vertical-align: middle;\\n  width: 20%;\\n  position: relative; }\\n  .cc-sdk .cc-question-container__text p {\\n    word-break: break-word; }\\n\\n.cc-sdk .cc-question-container[data-type='csat'] .cc-question-container__text {\\n  width: 11em; }\\n\\n.cc-sdk .cc-question-container[data-type='csat'] .cc-question-container__list {\\n  width: 64vw; }\\n\\n.cc-sdk .cc-question-container__required,\\n.cc-sdk .cc-question-container__validation {\\n  position: absolute;\\n  top: -14px;\\n  font-size: 11px;\\n  left: 0;\\n  width: 100%;\\n  right: 0;\\n  font-weight: normal;\\n  color: #C1272D;\\n  display: none; }\\n\\n.cc-sdk .cc-question-container__required-label {\\n  display: inline-block;\\n  position: relative;\\n  top: -2px;\\n  left: -2px; }\\n\\n.cc-sdk .cc-question-container__content {\\n  display: inline-block;\\n  max-width: 78%;\\n  vertical-align: middle;\\n  width: auto; }\\n\\n.cc-sdk .cc-question-container__list li {\\n  display: inline-block;\\n  padding-left: 29px;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-question-container__list li span {\\n  display: table-cell;\\n  font-size: 15px;\\n  padding-left: 15px;\\n  text-align: left;\\n  vertical-align: middle;\\n  width: 125px; }\\n\\n.cc-sdk .cc-question-container__list li input {\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-question-container:before {\\n  content: '';\\n  display: inline-block;\\n  height: 100%;\\n  margin-right: -4px;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-question-container {\\n  height: 100%;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-questions-container {\\n  height: 100%; }\\n\\n.cc-sdk p.cc-thankyou-powered {\\n  font-size: 13px !important;\\n  color: #404040 !important;\\n  font-style: italic;\\n  margin-top: 4px; }\\n  .cc-sdk p.cc-thankyou-powered.no-branding {\\n    display: none; }\\n\\n.cc-sdk .cc-thankyou-powered .cc-thankyou-logo {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/cc-thankyou-logo.svg\\\");\\n  background-size: cover;\\n  margin-right: 8px;\\n  display: inline-block;\\n  width: 16px;\\n  height: 16px; }\\n\\n.cc-sdk .multiline-box {\\n  background: #fff;\\n  border-radius: 2px;\\n  border: 1px #6d6d6d solid;\\n  font-family: 'Open Sans';\\n  font-size: 15px;\\n  height: 70px;\\n  margin: 0 0px 0 50px;\\n  min-width: 600px;\\n  padding: 2px 5px;\\n  resize: none; }\\n\\n.cc-sdk .multiline-box:focus {\\n  outline: 0; }\\n\\n.cc-sdk .detail-box .cc-question-container__text p {\\n  font-size: 13px;\\n  font-weight: 700; }\\n\\n.cc-sdk .detail-box .cc-question-container__text span {\\n  display: inline-block;\\n  font-size: 15px;\\n  font-weight: normal; }\\n\\n.cc-sdk .detail-box .cc-question-container__text {\\n  height: 56px; }\\n\\n.cc-sdk .detail-box[data-type=\\\"singleline\\\"] .cc-question-container__text {\\n  margin-right: 20px; }\\n\\n.cc-sdk .detail-box .cc-question-container__content .cc-sdk-form-control,\\n.cc-sdk .single-line .cc-question-container__content .cc-sdk-form-control {\\n  background: transparent;\\n  border: none;\\n  border-bottom: 1px solid #6d6d6d;\\n  font-family: \\\"open sans\\\";\\n  font-size: 15px;\\n  line-height: 26px;\\n  outline: 0;\\n  width: 300px;\\n  margin-left: 70px; }\\n\\n.cc-sdk .d-star-box.detail-box .cc-question-container__text {\\n  height: 92px; }\\n\\n.cc-sdk .hl.dropdown {\\n  background-image: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/arrow-down.black.svg\\\");\\n  background-position: 97% center;\\n  background-repeat: no-repeat;\\n  border-bottom: 1px solid #6d6d6d;\\n  display: inline-block;\\n  padding: 5px;\\n  position: relative;\\n  text-align: left;\\n  width: 300px; }\\n\\n.cc-sdk .drop-cc-question-container .cc-question-container__text {\\n  /*height: 60px;*/\\n  margin-right: 20px; }\\n\\n.cc-sdk .cc-sdk-form-control:focus {\\n  border-color: #fcaf18; }\\n\\n.cc-sdk .detail-box .cc-question-container__content {\\n  padding-left: 0; }\\n\\n.cc-sdk .cc-big-list-container .cc-question-container__list {\\n  display: table;\\n  width: 100%; }\\n\\n.cc-sdk .cc-big-list-container .cc-question-container__list li {\\n  display: table-cell;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-thankyou-container {\\n  width: 100% !important; }\\n\\n.cc-sdk .submit-icon {\\n  direction: ltr;\\n  position: absolute;\\n  right: 0;\\n  top: 0;\\n  bottom: 0;\\n  margin: auto 0;\\n  z-index: 11;\\n  margin-right: 75px;\\n  font-size: 16px /*rtl:14px*/;\\n  cursor: pointer;\\n  width: 47px;\\n  height: 47px; }\\n\\n@media (min-width: 1000px) {\\n  .cc-sdk .cc-big-list-container .cc-question-container__list li span label {\\n    overflow: hidden;\\n    max-height: 100px;\\n    display: block; } }\\n\\n@media (min-width: 769px) and (max-width: 875px) {\\n  .cc-sdk .cc-question-container__list li {\\n    padding-left: 0px !important; } }\\n\\n@media (min-width: 769px) and (max-width: 1024px) {\\n  .cc-sdk .cc-popup-container-2 {\\n    height: 200px; }\\n  .cc-sdk .cc-big-list-container .cc-question-container__list,\\n  .cc-sdk .cc-question-container__list {\\n    text-align: left; }\\n  .cc-sdk .cc-big-list-container .cc-question-container__list li,\\n  .cc-sdk .cc-question-container__list li {\\n    display: inline-block;\\n    margin-bottom: 15px;\\n    vertical-align: middle;\\n    width: 49%; }\\n  .cc-sdk .cc-question-container__content {\\n    display: inline-block;\\n    width: 45%; }\\n  .cc-sdk .multiline-box {\\n    min-width: 100%;\\n    margin: 0; }\\n  .cc-sdk .option-smile-box img,\\n  .cc-sdk .option-star-box img {\\n    margin-right: 11px !important; }\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text p,\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text {\\n    width: 100% !important;\\n    text-align: center;\\n    margin: 0 !important;\\n    padding: 0;\\n    line-height: initial;\\n    height: auto; }\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text {\\n    max-width: 98%; } }\\n\\n@media (min-width: 1000px) {\\n  .cc-sdk .cc-question-container__text p {\\n    max-height: 100px;\\n    overflow: hidden;\\n    max-width: 140ch; }\\n  .cc-sdk .cc-question-container__text p.ellipsis:after {\\n    content: '...';\\n    text-align: right;\\n    bottom: 9px;\\n    right: -3px;\\n    width: 12px;\\n    display: block;\\n    position: absolute;\\n    height: calc(1em * 1.2); } }\\n\\n@media (min-width: 769px) and (max-width: 992px) {\\n  .cc-sdk .cc-question-container {\\n    width: 100%;\\n    margin: auto; }\\n  .cc-sdk .cc-question-container__text {\\n    width: 24%;\\n    padding-right: 20px; }\\n  .cc-sdk .cc-question-container__text p {\\n    max-height: 110px;\\n    overflow: hidden; }\\n  .cc-sdk .cc-question-container__content.rating-color {\\n    margin-left: 0px; }\\n  .cc-sdk .submit-icon {\\n    margin-right: 40px !important; }\\n  .cc-sdk .cc-question-container__content.rating-color {\\n    margin-left: 0px !important; }\\n  .cc-sdk .cc-question-container__content {\\n    width: 50% !important; } }\\n\\n@media (max-width: 768px) {\\n  .cc-sdk .cc-survey-container,\\n  .cc-sdk .cc-survey-content {\\n    height: 100%; }\\n  .cc-sdk .cc-popup-container-2 {\\n    bottom: auto;\\n    height: 100%;\\n    top: 0; }\\n  .cc-sdk .cc-popup-container-2__icons.cc-right-icon {\\n    left: auto;\\n    right: 0;\\n    padding: 0; }\\n  .cc-sdk .cc-popup-container-2__icons.cc-left-icon {\\n    left: 0;\\n    right: auto;\\n    padding: 0; }\\n  .cc-sdk .cc-big-list-container .cc-question-container__list li,\\n  .cc-sdk[dir=\\\"rtl\\\"] .cc-big-list-container .cc-question-container__list li {\\n    display: block; }\\n  .cc-sdk .radio-toggle--more-option li span {\\n    width: 84% !important;\\n    padding-left: 25px !important; }\\n  .cc-sdk .radio-toggle--more-option li {\\n    padding-right: 0 !important;\\n    display: block !important;\\n    padding-top: 10px; }\\n  .cc-sdk .detail-box .cc-question-container__content {\\n    padding-left: 0px; }\\n  .cc-sdk .cc-question-container {\\n    bottom: 75px;\\n    height: auto;\\n    left: 0;\\n    padding: 40px 20px;\\n    position: absolute;\\n    text-align: left;\\n    top: auto;\\n    width: 100%; }\\n  .cc-sdk .cc-question-container__text {\\n    font-size: 18px;\\n    margin-bottom: 20px;\\n    max-width: 400px;\\n    text-align: left;\\n    width: 100%; }\\n  .cc-sdk .cc-question-container__content {\\n    display: block;\\n    max-width: 100%;\\n    width: 100%; }\\n  .cc-sdk .cc-question-container__list label {\\n    display: block; }\\n  .cc-sdk .cc-question-container__list li span {\\n    width: auto;\\n    padding-left: 15px; }\\n  .cc-sdk .cc-question-container__list li {\\n    padding-left: 0;\\n    margin-bottom: 10px;\\n    display: block; }\\n  .cc-sdk .cc-popup-container-2__icons {\\n    margin: 20px; }\\n  .cc-sdk .cc-popup-container-2__icons.left-icon {\\n    left: auto;\\n    right: 0; }\\n  .cc-sdk .cc-popup-container-2__icons.right-icon {\\n    right: auto;\\n    left: 0; }\\n  .cc-sdk .cc-popup-container__close {\\n    width: 27px; }\\n  .cc-sdk .cc-question-container__content.rating-color {\\n    margin-left: 0 !important; }\\n  .cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .cc-question-container__content,\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .cc-question-container__content {\\n    width: 100% !important; }\\n  .cc-sdk .multiline-box {\\n    height: 150px;\\n    margin: 0;\\n    min-width: 100%;\\n    width: 100%; }\\n  .cc-sdk .hl.dropdown {\\n    width: 100%; }\\n  .cc-sdk .detail-box .cc-question-container__content .cc-sdk-form-control {\\n    width: 100%; }\\n  .cc-sdk .detail-box .cc-question-container__text p {\\n    font-size: 18px; }\\n  .cc-sdk .mobile-detail-box .cc-question-container__text {\\n    height: auto; }\\n  .cc-sdk .cc-question-container__text p {\\n    max-height: auto; }\\n  .cc-sdk .welcome-box .cc-question-container__text p {\\n    color: #fff; }\\n  .cc-sdk .cc-questions-container {\\n    height: 100%;\\n    position: relative; }\\n  .cc-sdk .cc-message-box__btn {\\n    margin-left: 20px; } }\\n\\n@media (max-width: 768px) {\\n  .cc-sdk .detail-box .cc-question-container__content .cc-sdk-form-control,\\n  .cc-sdk .single-line .cc-question-container__content .cc-sdk-form-control {\\n    margin-left: 0; }\\n  .cc-sdk .submit-icon {\\n    position: absolute;\\n    left: 20px;\\n    top: auto;\\n    bottom: 30px;\\n    padding-right: 0; }\\n  .cc-sdk.cc-popup-container {\\n    position: fixed;\\n    bottom: 0;\\n    left: 0;\\n    right: 0;\\n    margin: 0 !important;\\n    width: 100%;\\n    height: 13em;\\n    max-width: 100%;\\n    max-height: 100%;\\n    text-align: left;\\n    background: transparent; }\\n  .cc-sdk.cc-popup-container .cc-message-box {\\n    position: absolute;\\n    bottom: 20%; }\\n  .cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text {\\n    font-size: 20px; }\\n  .cc-sdk.cc-popup-container .cc-message-box .submit-icon {\\n    position: absolute;\\n    bottom: -100%;\\n    top: auto;\\n    left: 0;\\n    margin: 0 14px; }\\n  .cc-sdk.cc-popup-container .cc-popup-container__close {\\n    margin: 20px;\\n    right: 0;\\n    top: 0; }\\n  .cc-sdk.cc-popup-container__back {\\n    background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);\\n    display: inline-block;\\n    width: 27px;\\n    height: 27px;\\n    background-size: 100%; }\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text p,\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text {\\n    width: 100% !important;\\n    text-align: center;\\n    margin: 0 !important;\\n    padding: 0;\\n    line-height: initial;\\n    height: auto; }\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text {\\n    max-width: 98%; } }\\n\\n[dir=\\\"rtl\\\"].cc-sdk ul {\\n  padding-right: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk.cc-popup-container .cc-popup-container__close {\\n  right: auto;\\n  left: 0;\\n  top: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text {\\n  text-align: right; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-popup-container__back {\\n  background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_rtl_.svg); }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-popup-container-2__icons.cc-right-icon {\\n  right: auto;\\n  left: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-popup-container-2__icons.cc-left-icon {\\n  right: 0;\\n  left: auto; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk.cc-question-container {\\n  margin-left: 0;\\n  margin-right: 0;\\n  right: 0;\\n  left: auto; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__required,\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__validation {\\n  right: 0%;\\n  left: auto; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__required-label {\\n  top: -2px;\\n  right: -2px;\\n  left: auto; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__list li {\\n  display: inline-block;\\n  padding-right: 15px !important;\\n  padding-left: 15px !important;\\n  vertical-align: middle; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"checkbox\\\"] .cc-question-container__list li {\\n  padding-right: 0 !important; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__list li span {\\n  padding-right: 15px;\\n  padding-left: 0;\\n  text-align: right; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container:before {\\n  margin-left: -4px;\\n  margin-right: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .multiline-box {\\n  margin: 0 50px 0 0px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .hl.dropdown {\\n  background-position: 97% center;\\n  text-align: right; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .drop-cc-question-container .cc-question-container__text {\\n  margin-left: 20px;\\n  margin-right: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .detail-box .cc-question-container__content {\\n  padding-right: 0;\\n  padding-left: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__content {\\n  text-align: right; }\\n\\n@media (min-width: 769px) and (max-width: 1024px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-big-list-container .cc-question-container__list,\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__list {\\n    text-align: right; }\\n  [dir=\\\"rtl\\\"].cc-sdk .multiline-box {\\n    margin: 0 0px 0 0px; } }\\n\\n@media (min-width: 769px) and (max-width: 992px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__text {\\n    padding-left: 20px;\\n    padding-right: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__content.rating-color {\\n    margin-left: 0px;\\n    margin-right: 0px; } }\\n\\n@media (max-width: 768px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-popup-container-2__icons.cc-right-icon {\\n    left: 0;\\n    right: auto; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-popup-container-2__icons.cc-left-icon {\\n    left: auto;\\n    right: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .radio-toggle--more-option li span {\\n    padding-right: 25px !important;\\n    padding-left: 0 !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .radio-toggle--more-option li {\\n    padding-right: 0 !important;\\n    padding-left: 0 !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .detail-box .cc-question-container__content {\\n    padding-left: 0px;\\n    padding-right: 0px; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container {\\n    left: auto;\\n    right: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .multiline-box {\\n    margin: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__text {\\n    text-align: right;\\n    width: 100%;\\n    margin-right: 5px;\\n    max-width: 100%; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__list li span {\\n    padding-right: 15px;\\n    padding-left: 0px; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__list li {\\n    padding-left: 0;\\n    padding-right: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-popup-container-2__icons.left-icon {\\n    left: 0;\\n    right: auto; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-popup-container-2__icons.right-icon {\\n    right: 0;\\n    left: auto; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__content.rating-color {\\n    margin-left: 0 !important;\\n    margin-right: 0 !important; } }\\n\\n/*cc-question-container color scale css*/\\n.cc-sdk .option-number-item {\\n  color: #fff;\\n  float: left;\\n  font-size: 13px;\\n  height: 38px;\\n  box-sizing: border-box;\\n  padding-top: 10px;\\n  text-align: center;\\n  width: 8.5%;\\n  margin-left: 1px;\\n  margin-right: 0;\\n  cursor: pointer; }\\n  .cc-sdk .option-number-item.option-zero {\\n    background: #853838; }\\n  .cc-sdk .option-number-item.option-zero.selected, .cc-sdk .option-number-item.option-zero:hover {\\n    background: #572526; }\\n  .cc-sdk .option-number-item.option-one {\\n    background: #9e4343; }\\n  .cc-sdk .option-number-item.option-one.selected, .cc-sdk .option-number-item.option-one:hover {\\n    background: #642728; }\\n  .cc-sdk .option-number-item.option-two {\\n    background: #c14d4d; }\\n  .cc-sdk .option-number-item.option-two.selected, .cc-sdk .option-number-item.option-two:hover {\\n    background: #712827; }\\n  .cc-sdk .option-number-item.option-three {\\n    background: #d94d4d; }\\n  .cc-sdk .option-number-item.option-three.selected, .cc-sdk .option-number-item.option-three:hover {\\n    background: #7c2828; }\\n  .cc-sdk .option-number-item.option-four {\\n    background: #ee4d4d; }\\n  .cc-sdk .option-number-item.option-four.selected, .cc-sdk .option-number-item.option-four:hover {\\n    background: #852828; }\\n  .cc-sdk .option-number-item.option-five {\\n    background: #ff4d4d; }\\n  .cc-sdk .option-number-item.option-five.selected, .cc-sdk .option-number-item.option-five:hover {\\n    background: #844828; }\\n  .cc-sdk .option-number-item.option-six {\\n    background: #ff8c4d; }\\n  .cc-sdk .option-number-item.option-six.selected, .cc-sdk .option-number-item.option-six:hover {\\n    background: #844828; }\\n  .cc-sdk .option-number-item.option-seven {\\n    background: #ffc74d; }\\n  .cc-sdk .option-number-item.option-seven.selected, .cc-sdk .option-number-item.option-seven:hover {\\n    background: #856728; }\\n  .cc-sdk .option-number-item.option-eight {\\n    background: #f5eb4d; }\\n  .cc-sdk .option-number-item.option-eight.selected, .cc-sdk .option-number-item.option-eight:hover {\\n    background: #7f7a28; }\\n  .cc-sdk .option-number-item.option-nine {\\n    background: #73ca81; }\\n  .cc-sdk .option-number-item.option-nine.selected, .cc-sdk .option-number-item.option-nine:hover {\\n    background: #3b6942; }\\n  .cc-sdk .option-number-item.option-ten {\\n    background: #4db47c; }\\n  .cc-sdk .option-number-item.option-ten.selected, .cc-sdk .option-number-item.option-ten:hover {\\n    background: #285e40; }\\n  .cc-sdk .option-number-item.option-7-scale-1 {\\n    background: #ed534f; }\\n  .cc-sdk .option-number-item.option-7-scale-2 {\\n    background: #ed534f; }\\n  .cc-sdk .option-number-item.option-7-scale-3 {\\n    background: #ed534f; }\\n  .cc-sdk .option-number-item.option-7-scale-4 {\\n    background: #ffbc00; }\\n  .cc-sdk .option-number-item.option-7-scale-5 {\\n    background: #ffbc00; }\\n  .cc-sdk .option-number-item.option-7-scale-6 {\\n    background: #4db47c; }\\n  .cc-sdk .option-number-item.option-7-scale-7 {\\n    background: #4db47c; }\\n  .cc-sdk .option-number-item.option-5-scale-1 {\\n    background: #ed534f; }\\n  .cc-sdk .option-number-item.option-5-scale-2 {\\n    background: #ed534f; }\\n  .cc-sdk .option-number-item.option-5-scale-3 {\\n    background: #ffbc00; }\\n  .cc-sdk .option-number-item.option-5-scale-4 {\\n    background: #4db47c; }\\n  .cc-sdk .option-number-item.option-5-scale-5 {\\n    background: #4db47c; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .option-number-item {\\n  width: calc(9.09% - 1px); }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"].scale-image-container .option-number-item {\\n  width: 8.4%; }\\n\\n.cc-sdk .cc-question-container__content.rating-color {\\n  margin-left: 74px; }\\n\\n.cc-sdk .option-left-rating-text,\\n.cc-sdk .option-right-rating-text,\\n.cc-sdk .option-mid-rating-text,\\n.cc-sdk .option-midnps-rating-text {\\n  color: #424242;\\n  font-size: 13px;\\n  left: 0;\\n  position: absolute; }\\n\\n.cc-sdk .option-midnps-rating-text {\\n  left: calc(7*9.09% - 1px); }\\n\\n.cc-sdk .option-left-rating-text-small-container {\\n  max-width: 57px;\\n  text-align: left;\\n  max-height: 37px;\\n  overflow: hidden; }\\n\\n.cc-sdk .option-mid-rating-text-small-container {\\n  max-width: 57px;\\n  text-align: right;\\n  max-height: 37px;\\n  overflow: hidden; }\\n\\n.cc-sdk .option-right-rating-text-small-container {\\n  max-width: 57px;\\n  text-align: right;\\n  max-height: 37px;\\n  overflow: hidden; }\\n\\n.cc-sdk .option-left-rating-text-small-container-smile {\\n  width: 40%;\\n  text-align: left;\\n  max-height: 37px;\\n  overflow: hidden;\\n  bottom: auto !important;\\n  top: 57px; }\\n\\n.cc-sdk .option-right-rating-text-small-container-smile {\\n  width: 40%;\\n  text-align: right;\\n  max-height: 37px;\\n  overflow: hidden;\\n  bottom: auto !important;\\n  top: 57px; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-left-rating-text,\\n.cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-left-rating-text {\\n  left: 4px;\\n  width: 40%;\\n  text-align: left; }\\n\\n.cc-sdk .option-right-rating-text {\\n  left: auto;\\n  right: 0; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n.cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n  right: 4px;\\n  text-align: right;\\n  width: 40%; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-number-item {\\n  width: 38px;\\n  margin: 0 .5px;\\n  cursor: pointer;\\n  display: inline-block;\\n  float: none; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .cc-question-container__list {\\n  display: inline-block;\\n  width: auto;\\n  position: relative; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"].scale-image-container .cc-question-container__list {\\n  width: 100%; }\\n\\n.cc-sdk .rating-color {\\n  position: relative; }\\n\\n.cc-sdk .option-smile-box,\\n.cc-sdk .option-star-box {\\n  height: 60px;\\n  margin-right: 29px;\\n  width: 60px;\\n  cursor: pointer;\\n  box-sizing: border-box;\\n  border: solid 4px transparent;\\n  border-radius: 50%;\\n  display: inline-block;\\n  background-size: 100%; }\\n\\n.cc-sdk:not([dir=\\\"rtl\\\"]) .option-star-box:nth-child(5),\\n.cc-sdk:not([dir=\\\"rtl\\\"]) .option-smile-box:nth-child(5) {\\n  margin-right: 0; }\\n\\n.cc-sdk[dir=\\\"rtl\\\"] .option-star-box:nth-child(1),\\n.cc-sdk[dir=\\\"rtl\\\"] .option-smile-box:nth-child(1) {\\n  margin-right: 0; }\\n\\n.cc-sdk .option-smile-box.cc-one {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-two {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-three {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-four {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-five {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-one.selected, .cc-sdk .option-smile-box.cc-one:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-two.selected, .cc-sdk .option-smile-box.cc-two:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-three.selected, .cc-sdk .option-smile-box.cc-three:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-four.selected, .cc-sdk .option-smile-box.cc-four:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-five.selected, .cc-sdk .option-smile-box.cc-five:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .cc-csat.cc-question-container__content.rating-color {\\n  margin-left: 45px; }\\n\\n.cc-sdk .option-csat.option-smile-box.selected,\\n.cc-sdk .option-csat.option-smile-box:hover,\\n.cc-sdk .option-csat.option-smile-box {\\n  background-size: 25px;\\n  background-position: 18px center; }\\n\\n.cc-sdk .option-csat {\\n  height: 30px;\\n  margin-right: 68px;\\n  width: 30px;\\n  padding-left: 50px;\\n  font-size: 14px; }\\n\\n.cc-sdk .option-csat {\\n  height: 45px;\\n  margin-right: 0px;\\n  width: auto;\\n  padding-left: 0px;\\n  font-size: 14px;\\n  vertical-align: middle;\\n  display: inline-block;\\n  margin-right: 13px; }\\n  .cc-sdk .option-csat span {\\n    display: inline-block;\\n    vertical-align: top;\\n    font-size: 12px;\\n    padding-left: 25px;\\n    position: relative;\\n    text-align: left;\\n    /* min-height: 32px; */\\n    width: 100%; }\\n  .cc-sdk .option-csat .cc-checkbox label {\\n    pointer-events: none; }\\n\\n.cc-sdk .option-star-box {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-star-box:hover,\\n.cc-sdk .option-star-box.selected {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star_selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"slider\\\"] .option-left-rating-text {\\n  left: 4px;\\n  width: 40%;\\n  text-align: left; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"slider\\\"] .option-right-rating-text {\\n  width: 40%;\\n  text-align: right; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .cc-question-container__list,\\n.cc-sdk .cc-question-container[data-type=\\\"star\\\"] .cc-question-container__list {\\n  position: relative;\\n  width: auto;\\n  display: inline-block; }\\n\\n.cc-sdk .circle-image {\\n  margin: auto;\\n  width: 253px;\\n  overflow: hidden;\\n  height: 240px;\\n  position: relative; }\\n\\n.cc-sdk .circle-image-scale-010-neutral {\\n  width: 242px;\\n  overflow: hidden;\\n  height: 230px;\\n  margin: auto; }\\n\\n.cc-sdk .cc-nps-selected-rating {\\n  font-size: 100px;\\n  display: inline-block;\\n  position: absolute;\\n  top: 0;\\n  left: 0px;\\n  line-height: 100px;\\n  right: 0;\\n  margin: auto;\\n  bottom: 0;\\n  width: 110px;\\n  height: 100px;\\n  text-align: center;\\n  font-weight: 100;\\n  color: #bbb; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n.cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n  right: 4px; }\\n\\n.cc-sdk .option-number-item.option-scale {\\n  background: #4db47c; }\\n\\n.cc-sdk .option-number-item.option-scale.selected,\\n.cc-sdk .option-number-item.option-scale:hover {\\n  background: #712827; }\\n\\n.cc-sdk .cc-nps-image {\\n  cursor: pointer;\\n  position: relative;\\n  left: 0; }\\n\\n.cc-sdk .legend-container {\\n  position: relative; }\\n\\n@media (min-width: 769px) and (max-width: 992px) {\\n  .cc-sdk .option-smile-box,\\n  .cc-sdk .option-star-box {\\n    width: 50px;\\n    height: 50px;\\n    margin-right: 10px; }\\n  .cc-sdk .option-csat.option-smile-box.selected,\\n  .cc-sdk .option-csat.option-smile-box:hover,\\n  .cc-sdk .option-csat.option-smile-box {\\n    display: inline-block;\\n    width: 168px;\\n    background-position: 48px center; }\\n    .cc-sdk .option-csat.option-smile-box.selected span,\\n    .cc-sdk .option-csat.option-smile-box:hover span,\\n    .cc-sdk .option-csat.option-smile-box span {\\n      padding-left: 40px; } }\\n\\n@media screen and (min-width: 992px) {\\n  .cc-sdk span.option-csat.option-smile-box {\\n    background-position: 44px center; }\\n    .cc-sdk span.option-csat.option-smile-box:hover, .cc-sdk span.option-csat.option-smile-box.selected {\\n      background-position: 44px center; }\\n    .cc-sdk span.option-csat.option-smile-box span {\\n      padding-left: 40px; } }\\n\\n@media (max-width: 768px) {\\n  .cc-sdk .option-smile-box,\\n  .cc-sdk .option-star-box {\\n    display: inline-block;\\n    margin-right: 3px; }\\n  .cc-sdk .option-csat.option-smile-box.selected,\\n  .cc-sdk .option-csat.option-smile-box:hover,\\n  .cc-sdk .option-csat.option-smile-box {\\n    display: block;\\n    background-size: 40px;\\n    background-position: 45px center; }\\n  .cc-sdk .option-csat.option-smile-box {\\n    height: 65px;\\n    width: 100%; }\\n  .cc-sdk .option-csat.option-smile-box span {\\n    font-size: 15px;\\n    padding-left: 40px; }\\n  .cc-sdk .option-csat.option-smile-box .cc-checkbox {\\n    top: calc(50% - 12.5px);\\n    height: 57px; }\\n  .cc-sdk .option-csat.option-smile-box .cc-checkbox.cc-radio label:before {\\n    width: 25px;\\n    height: 25px; }\\n  .cc-sdk .option-csat.option-smile-box .cc-checkbox input[type=\\\"radio\\\"]:checked + label:after {\\n    width: 25px;\\n    height: 25px; }\\n  .cc-sdk .option-number-item {\\n    color: #fff;\\n    float: left;\\n    font-size: 15px;\\n    height: 35px;\\n    box-sizing: border-box;\\n    margin-right: 1px;\\n    padding-top: 7px;\\n    text-align: center;\\n    width: 38px;\\n    cursor: pointer;\\n    vertical-align: middle; }\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] {\\n    bottom: 106px; }\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-left-rating-text,\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-right-rating-text,\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-mid-rating-text {\\n    width: auto; }\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-right-rating-text {\\n    text-align: right; }\\n  .cc-sdk .option-smile-box img,\\n  .cc-sdk .option-star-box img {\\n    padding-right: 5px;\\n    margin-right: 0; }\\n  .cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .cc-question-container__content {\\n    width: 100% !important; }\\n  .cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n  .cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n    right: 10px; }\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .cc-question-container__list {\\n    width: 100%; }\\n  .cc-sdk .cc-question-container[data-type=\\\"csat\\\"] .cc-question-container__list li {\\n    width: 100%; } }\\n\\n@media (max-width: 381px) {\\n  .cc-sdk .option-smile-box,\\n  .cc-sdk .option-star-box {\\n    display: inline-block;\\n    margin-right: 0;\\n    height: 50px;\\n    width: 50px; }\\n  .cc-sdk .option-smile-box img,\\n  .cc-sdk .option-star-box img {\\n    padding-right: 5px;\\n    margin-right: 0; } }\\n\\n@media screen and (max-width: 768px) {\\n  .cc-sdk .radial-legend-right,\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] span.radial-legend-right {\\n    text-align: left;\\n    width: 35%;\\n    right: 0; }\\n  .cc-sdk .radial-legend-mid {\\n    width: 35%;\\n    text-align: center;\\n    left: 0;\\n    right: 0; }\\n  .cc-sdk .radial-legend-left {\\n    width: 35%;\\n    text-align: right;\\n    left: 0; } }\\n\\n/*cc-question-container color scale css*/\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"csat\\\"] .cc-question-container__content.rating-color {\\n  margin-right: 45px;\\n  margin-left: 0px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"csat\\\"] .cc-checkbox input[type=\\\"radio\\\"] {\\n  margin-right: 0px;\\n  opacity: 0;\\n  outline: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-number-item {\\n  margin-right: 1px;\\n  margin-left: 0;\\n  float: right; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__content.rating-color {\\n  margin-right: 74px;\\n  margin-left: 0px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-right-rating-text {\\n  left: calc(100% - 418px);\\n  right: auto !important; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-left-rating-text {\\n  right: 0px;\\n  left: auto !important; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .option-right-rating-text {\\n  left: 0;\\n  right: auto !important; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-right-rating-text {\\n  left: 0;\\n  right: auto !important; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-left-rating-text {\\n  right: 2px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"slider\\\"] .option-right-rating-text {\\n  left: 0;\\n  width: 40%;\\n  text-align: left; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"slider\\\"] .option-left-rating-text {\\n  right: 0;\\n  text-align: right; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .rating-color {\\n  position: relative; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-smile-box img {\\n  margin-right: 29px;\\n  margin-left: 0px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-star-box img {\\n  margin-left: 19px;\\n  margin-right: 0px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box span {\\n  padding-right: 25px;\\n  text-align: right;\\n  padding-left: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n  left: 7px;\\n  right: auto !important;\\n  text-align: left; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-left-rating-text,\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-left-rating-text {\\n  right: 7px;\\n  left: auto !important;\\n  text-align: right; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-csat {\\n  width: auto;\\n  box-sizing: border-box;\\n  padding-left: 0;\\n  margin-right: 13px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box.selected,\\n[dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box:hover,\\n[dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box {\\n  background-position: calc( 100% - 44px) center;\\n  text-align: right; }\\n\\n@media (min-width: 769px) and (max-width: 992px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .option-smile-box img,\\n  [dir=\\\"rtl\\\"].cc-sdk .option-star-box img {\\n    margin-left: 0px;\\n    margin-right: 10px; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__content.rating-color {\\n    margin-right: 10px;\\n    margin-left: 86px !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .option-right-rating-text {\\n    left: 17px;\\n    right: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n    left: 7px;\\n    text-align: left;\\n    right: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-left-rating-text,\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-left-rating-text {\\n    right: 20px;\\n    left: auto !important;\\n    text-align: right; }\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box.selected,\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box:hover,\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box {\\n    width: auto; } }\\n\\n@media (max-width: 768px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .option-smile-box img,\\n  [dir=\\\"rtl\\\"].cc-sdk .option-star-box img {\\n    padding-right: 0px;\\n    padding-left: 5px;\\n    margin-right: 0;\\n    margin-left: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"csat\\\"] .cc-checkbox input[type=\\\"radio\\\"] {\\n    margin-right: 7px;\\n    opacity: 0;\\n    outline: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box.selected,\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box:hover,\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box {\\n    background-position: calc( 100% - 44px) center; }\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box span {\\n    padding-right: 39px;\\n    text-align: right;\\n    padding-left: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-left-rating-text,\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-left-rating-text {\\n    right: 10px;\\n    left: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .option-left-rating-text {\\n    right: 10px;\\n    left: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n    right: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .option-right-rating-text {\\n    left: calc(100% - 322px);\\n    right: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-right-rating-text {\\n    left: 13px;\\n    right: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .radial-legend-right, [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .radial-legend-right {\\n    left: auto !important;\\n    right: 10px !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .radial-legend-left, [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .radial-legend-left {\\n    right: auto !important;\\n    left: 10px !important; } }\\n\\n@media (max-width: 381px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .option-right-rating-text {\\n    left: calc(100% - 258px);\\n    right: auto !important; } }\\n\\n.cc-sdk .cc-select-wrapper {\\n  position: relative;\\n  display: inline-block;\\n  user-select: none;\\n  z-index: 11; }\\n\\n.cc-sdk .cc-select-wrapper select {\\n  display: none; }\\n\\n.cc-sdk .cc-select {\\n  position: relative;\\n  display: inline-block;\\n  margin-left: 70px; }\\n\\n.cc-sdk .cc-select-trigger {\\n  position: relative;\\n  display: block;\\n  width: 130px;\\n  padding: 0 84px 0 22px;\\n  font-size: 15px;\\n  font-style: italic;\\n  font-weight: 300;\\n  color: #222;\\n  line-height: 20px;\\n  background: transparent;\\n  border-radius: 0;\\n  cursor: pointer;\\n  width: 300px;\\n  border-bottom: 1px solid #6d6d6d;\\n  display: inline-block;\\n  text-align: left;\\n  padding: 5px 20px 5px 5px;\\n  position: relative;\\n  /*background-image: url(../images/arrow-down.black.svg);*/\\n  background-position: 97% center;\\n  background-repeat: no-repeat;\\n  max-height: 50px;\\n  overflow: hidden; }\\n\\n.cc-sdk .cc-select-trigger:after {\\n  position: absolute;\\n  display: block;\\n  content: '';\\n  width: 10px;\\n  height: 10px;\\n  top: 50%;\\n  right: 5px;\\n  margin-top: -3px;\\n  border-bottom: 1px solid #222;\\n  border-right: 1px solid #222;\\n  transform: rotate(45deg) translateY(-50%);\\n  transition: all .2s ease-in-out;\\n  transform-origin: 50% 0; }\\n\\n.cc-sdk .cc-select.opened .cc-select-trigger:after {\\n  margin-top: 3px;\\n  transform: rotate(-135deg) translateY(-50%); }\\n\\n.cc-sdk .cc-select-options-container {\\n  position: absolute;\\n  display: block;\\n  top: 100%;\\n  left: 0;\\n  right: 0;\\n  min-width: 100%;\\n  margin: 15px 0;\\n  border: 1px solid #b5b5b5;\\n  border-radius: 4px;\\n  box-sizing: border-box;\\n  box-shadow: 0 2px 1px rgba(0, 0, 0, 0.07);\\n  background: #fff;\\n  transition: all .2s ease-in-out;\\n  opacity: 0;\\n  visibility: hidden;\\n  pointer-events: none;\\n  transform: translateY(calc( -100% - 65px));\\n  height: auto;\\n  max-height: 150px;\\n  overflow: hidden;\\n  overflow-y: scroll; }\\n\\n.cc-sdk .cc-select-options {\\n  /*  max-height: 150px;\\r\\n    overflow-y: scroll; */\\n  overflow-y: scroll;\\n  height: 100%;\\n  width: 110%; }\\n\\n.cc-sdk .cc-select.opened .cc-select-options-container {\\n  opacity: 1;\\n  visibility: visible;\\n  pointer-events: all;\\n  transform: translateY(-100%) translateY(-65px); }\\n\\n@media (min-width: 769px) {\\n  .cc-sdk .cc-popup-container-2.top .cc-select-options-container,\\n  .cc-sdk .cc-popup-container-2.top .cc-select.opened .cc-select-options-container {\\n    transform: translateY(-19px); } }\\n\\n.cc-sdk .cc-select-options:before {\\n  /*       position: absolute;\\r\\n    display: block;\\r\\n    content: '';\\r\\n    bottom: 100%; right: 25px;\\r\\n    width: 7px; height: 7px;\\r\\n    margin-bottom: -4px;\\r\\n    border-top: 1px solid #b5b5b5;\\r\\n    border-left: 1px solid #b5b5b5;\\r\\n    background: #fff;\\r\\n    transform: rotate(45deg);\\r\\n    transition: all .4s ease-in-out; */ }\\n\\n.cc-sdk .option-hover:before {\\n  background: #f9f9f9; }\\n\\n.cc-sdk .cc-select-option {\\n  position: relative;\\n  display: block;\\n  padding: 0 12px;\\n  border-bottom: 1px solid #e4e4e4;\\n  font-size: 12px;\\n  font-weight: 600;\\n  color: #222;\\n  line-height: 34px;\\n  cursor: pointer;\\n  transition: all .2s ease-in-out;\\n  text-align: left;\\n  margin: 0;\\n  width: 100%; }\\n\\n.cc-sdk .cc-select-option:first-of-type {\\n  border-radius: 4px 4px 0 0; }\\n\\n.cc-sdk .cc-select-option:last-of-type {\\n  border-bottom: 0;\\n  border-radius: 0 0 4px 4px; }\\n\\n.cc-sdk .cc-select-option:hover,\\n.cc-sdk .cc-select-option.selection {\\n  background: #eaeaea; }\\n\\n.cc-sdk .cc-select-wrapper.down .cc-select-options-container {\\n  transform: translateY(calc( 20px)); }\\n\\n.cc-sdk .cc-select-wrapper.down .cc-select.opened .cc-select-options-container {\\n  transform: translateY(calc( 20px)); }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .cc-question-container__content,\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .cc-question-container__content {\\n  width: 40%; }\\n\\n@media (max-width: 768px) {\\n  .cc-sdk .cc-select,\\n  .cc-sdk .cc-select-wrapper {\\n    min-width: 100%; }\\n  .cc-sdk .cc-select {\\n    margin-left: 0px; }\\n  .cc-sdk .cc-select-trigger {\\n    min-width: 100%;\\n    width: auto; } }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-select-trigger {\\n  padding: 0 22px 0 84px;\\n  background-position: 97% center;\\n  background-repeat: no-repeat;\\n  text-align: right; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-select-trigger:after {\\n  top: 50%;\\n  left: 2px;\\n  right: auto; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-select-option {\\n  text-align: right; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-select-option:first-of-type {\\n  border-radius: 4px 0px 0 4px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-select-option:last-of-type {\\n  border-radius: 0 4px 4px 0px; }\\n\\n/** Checkbox **/\\n.cc-sdk .cc-checkbox {\\n  display: table-cell;\\n  vertical-align: middle;\\n  position: relative;\\n  text-align: center; }\\n\\n.cc-sdk .cc-checkbox label {\\n  cursor: pointer;\\n  display: block;\\n  height: 25px; }\\n\\n.cc-sdk .cc-checkbox + span label img {\\n  width: 40px;\\n  display: inline-block;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-checkbox label:before,\\n.cc-sdk .cc-checkbox label:after {\\n  content: \\\"\\\";\\n  left: 0;\\n  margin: auto;\\n  position: absolute;\\n  top: calc(50% - 12.5px); }\\n\\n.cc-sdk .cc-checkbox label:before {\\n  background: transparent;\\n  border-radius: 2px;\\n  border: 1px solid #424242;\\n  cursor: pointer;\\n  height: 20px;\\n  transition: background .3s;\\n  width: 20px; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"checkbox\\\"] {\\n  opacity: 0;\\n  outline: 0; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:before {\\n  background: #fdaf19;\\n  border: none; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:after {\\n  border: 3px solid #222;\\n  border-right-style: none;\\n  border-top-style: none;\\n  height: 7px;\\n  top: calc(50% - 8.5px);\\n  left: 4px;\\n  transform: rotate(-45deg);\\n  width: 12px; }\\n\\n/*radio*/\\n.cc-sdk .cc-checkbox.cc-radio label:before {\\n  background: transparent;\\n  border: 1px solid #424242;\\n  cursor: pointer;\\n  height: 25px;\\n  transition: background-color .3s;\\n  width: 25px; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"radio\\\"] {\\n  opacity: 0;\\n  outline: 0; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"radio\\\"]:checked + label:before {\\n  background: transparent;\\n  border-color: #fdaf19; }\\n\\n.cc-sdk .cc-question-container__list li {\\n  display: inline-table;\\n  margin-bottom: 0; }\\n  .cc-sdk .cc-question-container__list li .cc-sdk .cc-checkbox,\\n  .cc-sdk .cc-question-container__list li .cc-radio {\\n    width: 30px; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"radio\\\"]:checked + label:after {\\n  -moz-transform: scale(0.8);\\n  -ms-transform: scale(0.8);\\n  -o-transform: scale(0.8);\\n  -webkit-transform: scale(0.8);\\n  background: #fdaf19;\\n  border-radius: 30px;\\n  height: 25px;\\n  transform: scale(0.8);\\n  width: 25px; }\\n\\n.cc-sdk .cc-radio label:before {\\n  border-radius: 30px; }\\n\\n.cc-sdk .radio-toggle--more-option li span {\\n  padding-left: 25px !important;\\n  width: 125px !important; }\\n\\n.cc-sdk .radio-toggle .cc-question-container__list li {\\n  padding-left: 15px; }\\n\\n@media (min-width: 1000px) {\\n  .cc-sdk .radio-toggle .cc-question-container__list li span label {\\n    overflow: hidden;\\n    max-height: 100px;\\n    display: block; } }\\n\\n@media (min-width: 769px) and (max-width: 992px) {\\n  .cc-sdk .radio-toggle .cc-question-container__list li {\\n    padding-left: 10px; }\\n  .cc-sdk .radio-toggle .cc-question-container__list li span .label {\\n    display: block;\\n    max-height: 50px;\\n    overflow: hidden;\\n    text-overflow: ellipsis; }\\n  .cc-sdk .radio-toggle .cc-question-container__list li span label {\\n    overflow: hidden;\\n    max-height: 50px;\\n    display: block;\\n    text-overflow: ellipsis; } }\\n\\n@media (max-width: 768px) {\\n  .cc-sdk .radio-toggle .cc-question-container__list li {\\n    padding-left: 0; }\\n  .cc-sdk .radio-toggle .cc-question-container__list li {\\n    display: block;\\n    padding-right: 50px; } }\\n\\n.cc-sdk .progress-bar {\\n  width: 100%;\\n  position: absolute;\\n  background: #a47c2b;\\n  z-index: 1;\\n  height: 8px;\\n  left: 0; }\\n\\n.cc-sdk .progress-line {\\n  background: #fdaf19;\\n  height: 100%;\\n  display: block;\\n  width: 0%;\\n  transition: all .4s ease-in; }\\n\\n/** Scrollbar\\t**/\\n.cc-sdk .cc-scrollbar-wrapper {\\n  float: left;\\n  height: 100%;\\n  overflow: hidden;\\n  position: relative;\\n  width: 100%;\\n  z-index: 1; }\\n\\n.cc-sdk .cc-scrollbar-content {\\n  -moz-box-sizing: border-box;\\n  /* padding         : 0 32px 0 0; */\\n  /* right           : -18px; */\\n  box-sizing: border-box;\\n  height: 100%;\\n  overflow: auto;\\n  position: relative;\\n  width: 107%; }\\n\\n.cc-sdk .cc-scrollbar-scroll {\\n  background: #aaa;\\n  border-radius: 4px;\\n  cursor: pointer;\\n  opacity: 0;\\n  position: relative;\\n  top: 0;\\n  transition: opacity 0.25s linear;\\n  width: 9px;\\n  z-index: 2; }\\n\\n.cc-sdk .cc-scrollbar-container:hover .cc-scrollbar-scroll {\\n  opacity: 1; }\\n\\n.cc-sdk .cc-scrollbar-grabbed {\\n  -khtml-user-select: none;\\n  -moz-user-select: none;\\n  -o-user-select: none;\\n  -webkit-user-select: none;\\n  user-select: none; }\\n\\n.cc-sdk .cc-sdk-range {\\n  -webkit-appearance: none;\\n  -moz-appearance: none;\\n  width: 500px;\\n  height: 60px;\\n  background: transparent; }\\n\\n.cc-sdk input[type=range]::-webkit-slider-runnable-track {\\n  -webkit-appearance: none;\\n  background: #ff403d;\\n  background: -moz-linear-gradient(-45deg, #ff403d 0%, #992a28 100%);\\n  background: -webkit-linear-gradient(-45deg, #ff403d 0%, #992a28 100%);\\n  background: linear-gradient(135deg, #ff403d 0%, #992a28 100%);\\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ff403d ', endColorstr='#992a28 ', GradientType=1);\\n  height: 1px; }\\n\\n.cc-sdk input[type=range]:focus {\\n  outline: none; }\\n\\n.cc-sdk input[type=range]::-moz-range-track {\\n  -moz-appearance: none;\\n  background: #ff403d;\\n  background: -moz-linear-gradient(-45deg, #ff403d 0%, #992a28 100%);\\n  background: -webkit-linear-gradient(-45deg, #ff403d 0%, #992a28 100%);\\n  background: linear-gradient(135deg, #7a0806 0%, #992a28 100%);\\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ff403d ', endColorstr='#992a28 ', GradientType=1);\\n  height: 1px; }\\n\\n.cc-sdk input[type=range]::-ms-track {\\n  height: 1px;\\n  width: 500px;\\n  background-color: #ff403d; }\\n\\n.cc-sdk input[type=range]::-webkit-slider-thumb {\\n  -webkit-appearance: none;\\n  border: 1px solid #ff403d;\\n  border-radius: 50%;\\n  height: 32px;\\n  width: 32px;\\n  max-width: 80px;\\n  position: relative;\\n  bottom: 16px;\\n  background-color: #fff;\\n  cursor: -webkit-grab; }\\n\\n.cc-sdk input[type=range]::-ms-thumb {\\n  border: 1px solid #ff403d;\\n  border-radius: 50%;\\n  height: 32px;\\n  width: 32px;\\n  background: #e08692;\\n  box-sizing: border-box;\\n  cursor: pointer !important; }\\n\\n.cc-sdk input[type=range]::-moz-range-thumb {\\n  -moz-appearance: none;\\n  border: 1px solid #ff403d;\\n  border-radius: 50%;\\n  height: 32px;\\n  width: 32px;\\n  max-width: 80px;\\n  position: relative;\\n  bottom: 16px;\\n  background-color: #fff;\\n  cursor: -moz-grab; }\\n\\n.cc-sdk input[type=range]::-moz-range-thumb:before {\\n  content: 'asd'; }\\n\\n.cc-sdk input[type=range]::-webkit-slider-thumb:active {\\n  cursor: -webkit-grabbing; }\\n\\n.cc-sdk input[type=range]::-moz-range-thumb:active {\\n  cursor: -moz-grabbing; }\\n\\n.cc-sdk .cc-question-container__content.cc-sdk-range-slider {\\n  height: 50px; }\\n\\n.cc-sdk .slider-tip {\\n  background: #eb1c23;\\n  padding: 8px 9px 9px 9px;\\n  position: absolute;\\n  left: 0px;\\n  right: 0;\\n  margin: 0 auto;\\n  /* border-top-left-radius: 10px; */\\n  /* border-top-right-radius: 10px; */\\n  /* border-bottom-left-radius: 100%; */\\n  /* border-bottom-right-radius: 100%; */\\n  color: #fff;\\n  /* display: none !important; */\\n  background: none;\\n  color: #424242;\\n  font-size: 13px;\\n  width: 100px;\\n  display: inline-block;\\n  text-align: center;\\n  font-weight: bold; }\\n\\n.cc-sdk .slider-tip:after {\\n  border-width: 5px 5px 0;\\n  border-top-color: #000; }\\n\\n@media (max-width: 1024px) {\\n  .cc-sdk .cc-sdk-range {\\n    width: 100%; } }\\n\\n.cc-sdk input.cc-sdk-range.cc-blue::-moz-range-track,\\n.cc-sdk input.cc-sdk-range.cc-blue::-webkit-slider-runnable-track {\\n  background: blue; }\\n\\n.cc-sdk .chart {\\n  -moz-box-sizing: border-box;\\n  -webkit-box-sizing: border-box;\\n  box-sizing: border-box;\\n  display: inline-block;\\n  height: 21px;\\n  padding-top: 22px;\\n  position: relative;\\n  vertical-align: top;\\n  width: 21px; }\\n\\n.cc-sdk .cc-sdk-chart span {\\n  display: block;\\n  font-size: 2em;\\n  font-weight: normal; }\\n\\n.cc-sdk .cc-sdk-chart canvas {\\n  left: 0;\\n  position: absolute;\\n  top: 0; }\\n\\n.cc-sdk .cc-sdk-loader {\\n  height: 21px;\\n  left: 28px;\\n  position: absolute;\\n  top: 8px;\\n  width: 21px; }\\n\\n@media (min-width: 769px) {\\n  .cc-sdk .cc-sdk-chart canvas {\\n    margin-left: 10px; } }\\n\\n@media (max-width: 768px) {\\n  .cc-sdk .cc-sdk-loader {\\n    position: relative;\\n    left: auto;\\n    top: 0;\\n    right: auto; } }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-sdk-chart canvas {\\n  right: 0;\\n  left: auto; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-sdk-loader {\\n  right: 28px;\\n  left: auto; }\\n\\n@media (min-width: 768px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-sdk-chart canvas {\\n    margin-right: 10px;\\n    margin-left: 0; } }\\n\\n/** Utilities **/\\n.cc-sdk .show {\\n  display: block !important; }\\n\\n.cc-sdk .show-inline {\\n  display: inline-block !important; }\\n\\n.cc-sdk .hide {\\n  display: none !important; }\\n\\n.cc-sdk.bottom {\\n  bottom: 0; }\\n\\n.cc-sdk.right, .cc-sdk .right {\\n  right: 0; }\\n\\n.cc-sdk .left {\\n  left: 0; }\\n\\n.cc-sdk .top {\\n  top: 0; }\\n\\n.ccsdk-overlay {\\n  background: #fff;\\n  bottom: 0;\\n  height: 100%;\\n  left: 0;\\n  position: absolute;\\n  top: 0;\\n  width: 100%;\\n  z-index: 0; }\\n\\n.ccsdk-overlay.ccsdk-glass {\\n  background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/ww.png);\\n  background-repeat: no-repeat;\\n  background-size: cover; }\\n\\n.ccsdk-clearfix {\\n  clear: both;\\n  display: block; }\\n\\n.ccsdk-text-normal {\\n  font-weight: 400; }\\n\\n.cc-sdk ::-webkit-input-placeholder {\\n  /* Chrome/Opera/Safari */\\n  color: #4c4c4c;\\n  font-family: 'Open Sans';\\n  font-size: 13px;\\n  font-style: italic;\\n  font-weight: normal; }\\n\\n.cc-sdk .cc-sdk-form-control::-moz-placeholder {\\n  /* Firefox 19+ */\\n  font-style: italic;\\n  font-size: 13px;\\n  font-weight: normal;\\n  font-family: 'Open Sans';\\n  color: #4c4c4c; }\\n\\n.cc-sdk .cc-sdk-form-control:-ms-input-placeholder {\\n  /* IE 10+ */\\n  font-style: italic;\\n  font-size: 13px;\\n  font-weight: normal;\\n  font-family: 'Open Sans';\\n  color: #4c4c4c; }\\n\\n.cc-sdk .cc-sdk-form-control:-moz-placeholder {\\n  /* Firefox 18- */\\n  font-style: italic;\\n  font-size: 13px;\\n  font-weight: normal;\\n  font-family: 'Open Sans';\\n  color: #4c4c4c; }\\n\\n@media (min-width: 769px) {\\n  .desktop-hide {\\n    display: none; } }\\n\\n@media (max-width: 768px) {\\n  .mobile-hide {\\n    display: none; }\\n  .cc-sdk-loader {\\n    position: relative;\\n    left: auto;\\n    top: 0;\\n    right: auto; }\\n  .ccsdk-overlay.welcome-overlay {\\n    /*background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/ww.png);*/\\n    background: rgba(210, 42, 53, 0.87); } }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .submit-icon {\\n  left: 0;\\n  right: auto;\\n  margin-left: 75px; }\\n\\n@media (max-width: 768px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .submit-icon {\\n    position: absolute;\\n    left: auto;\\n    top: auto;\\n    bottom: 30px;\\n    padding-left: 0;\\n    right: 20px;\\n    margin: 0; } }\\n\\n/** Themes **/\\n/** Prefetch icons **/\\n.cc-sdk::before {\\n  width: 0px;\\n  height: 0px;\\n  overflow: hidden;\\n  position: absolute;\\n  z-index: -1; }\\n\\n.cc-sdk .yellow .progress-bar {\\n  background: #a47c2b; }\\n\\n.cc-sdk .yellow .progress-line {\\n  background: #fdaf19; }\\n\\n.cc-sdk .yellow .submit-icon {\\n  background-image: url(\\\"data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%2747px%27%20height%3D%2747px%27%20viewBox%3D%270%200%2047%2047%27%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%3E%3Ctitle%3EGroup%2016%3C%2Ftitle%3E%3Cdesc%3ECreated%20with%20Sketch.%3C%2Fdesc%3E%3Cdefs%3E%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%3Cfilter%20x%3D%27-18.1%25%27%20y%3D%27-12.9%25%27%20width%3D%27136.2%25%27%20height%3D%27136.2%25%27%20filterUnits%3D%27objectBoundingBox%27%20id%3D%27filter-2%27%3E%3CfeOffset%20dx%3D%270%27%20dy%3D%272%27%20in%3D%27SourceAlpha%27%20result%3D%27shadowOffsetOuter1%27%3E%3C%2FfeOffset%3E%3CfeGaussianBlur%20stdDeviation%3D%272%27%20in%3D%27shadowOffsetOuter1%27%20result%3D%27shadowBlurOuter1%27%3E%3C%2FfeGaussianBlur%3E%3CfeColorMatrix%20values%3D%270%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200.116423234%200%27%20type%3D%27matrix%27%20in%3D%27shadowBlurOuter1%27%3E%3C%2FfeColorMatrix%3E%3C%2Ffilter%3E%3C%2Fdefs%3E%3Cg%20id%3D%27Page-1%27%20stroke%3D%27none%27%20stroke-width%3D%271%27%20fill%3D%27none%27%20fill-rule%3D%27evenodd%27%3E%3Cg%20id%3D%271-copy-20%27%20transform%3D%27translate(-1246.000000%2C%20-664.000000)%27%3E%3Cg%20id%3D%27Group-16%27%20transform%3D%27translate(1250.000000%2C%20666.000000)%27%3E%3Cg%20id%3D%27Oval-4%27%3E%3Cuse%20fill%3D%27white%27%20fill-opacity%3D%271%27%20filter%3D%27url(%23filter-2)%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3Cuse%20fill%3D%27%23d04a49%27%20fill-rule%3D%27evenodd%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3C%2Fg%3E%3Cg%20id%3D%27Group-5%27%20transform%3D%27translate(12.000000%2C%2011.000000)%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23FFFFFF%27%3E%3Cg%20id%3D%27fast-forward-arrows%27%20transform%3D%27translate(6.173934%2C%200.000000)%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3Cg%20id%3D%27fast-forward-arrows-copy%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\\\"); }\\n\\n.cc-sdk .yellow .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:before {\\n  background: #fdaf19; }\\n\\n.cc-sdk .yellow .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:after {\\n  border-color: #222; }\\n\\n.cc-sdk .yellow .cc-checkbox input[type=\\\"radio\\\"]:checked + label:before {\\n  border-color: #fdaf19; }\\n\\n.cc-sdk .yellow .cc-checkbox input[type=\\\"radio\\\"]:checked + label:after {\\n  background: #fdaf19; }\\n\\n.cc-sdk .yellow .cc-sdk-form-control:focus {\\n  border-color: #fcaf18; }\\n\\n.cc-sdk .yellow .cc-message-box__btn {\\n  background: #fdaf19; }\\n\\n.cc-sdk .red .progress-bar {\\n  /*background: rgba(130, 17, 25, 0.87);*/\\n  background: #d22a35; }\\n\\n.cc-sdk .red .progress-line {\\n  background: #d22a35;\\n  filter: brightness(150%); }\\n\\n.cc-sdk .red .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:before {\\n  background: #d22a35; }\\n\\n.cc-sdk .red .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:after {\\n  border-color: #fff; }\\n\\n.cc-sdk .red .cc-checkbox input[type=\\\"radio\\\"]:checked + label:before {\\n  border-color: #d22a35; }\\n\\n.cc-sdk .red .cc-checkbox input[type=\\\"radio\\\"]:checked + label:after {\\n  background: #d22a35; }\\n\\n.cc-sdk .red .cc-sdk-form-control:focus {\\n  border-color: #d22a35; }\\n\\n.cc-sdk .red .cc-message-box__btn {\\n  background: #d22a35;\\n  color: #fff; }\\n\\n.cc-question-container, .hide-slide {\\n  -webkit-transform: translateX(5px);\\n  -moz-transform: translateX(5px);\\n  -ms-transform: translateX(5px);\\n  -o-transform: translateX(5px);\\n  transform: translateX(5px);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.hide-bottom-up {\\n  -webkit-transform: translateY(30px);\\n  -moz-transform: translateY(30px);\\n  -ms-transform: translateY(30px);\\n  -o-transform: translateY(30px);\\n  transform: translateY(30px);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.hide-up-bottom {\\n  -webkit-transform: translateY(100%);\\n  -moz-transform: translateY(100%);\\n  -ms-transform: translateY(100%);\\n  -o-transform: translateY(100%);\\n  transform: translateY(100%);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.hide-right-left {\\n  -webkit-transform: translateX(100%);\\n  -moz-transform: translateX(100%);\\n  -ms-transform: translateX(100%);\\n  -o-transform: translateX(100%);\\n  transform: translateX(100%);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.hide-left-right {\\n  -webkit-transform: translateX(-100%);\\n  -moz-transform: translateX(-100%);\\n  -ms-transform: translateX(-100%);\\n  -o-transform: translateX(-100%);\\n  transform: translateX(-100%);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.show-slide, .show-thankyou-slide {\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: visible;\\n  opacity: 1;\\n  -webkit-transform: translateX(0) translateY(0);\\n  -moz-transform: translateX(0) translateY(0);\\n  -ms-transform: translateX(0) translateY(0);\\n  -o-transform: translateX(0) translateY(0);\\n  transform: translateX(0) translateY(0); }\\n\\n.cc-sdk #timer {\\n  position: relative; }\\n\\n.cc-sdk svg.cc-sdk-timer {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 40px;\\n  height: 40px;\\n  transform: rotateY(-180deg) rotateZ(-90deg); }\\n\\n[dir=\\\"rtl\\\"].cc-sdk svg.cc-sdk-timer {\\n  right: 0;\\n  left: auto; }\\n\\n.cc-sdk svg.cc-sdk-timer circle {\\n  stroke-dasharray: 50px;\\n  stroke-dashoffset: 0px;\\n  stroke-linecap: round;\\n  stroke-width: 2px;\\n  stroke: red;\\n  fill: none;\\n  animation: countdown 10s linear 1 forwards; }\\n\\n@keyframes countdown {\\n  from {\\n    stroke-dashoffset: 0px; }\\n  to {\\n    stroke-dashoffset: 50px; } }\\n\\n.cc-sdk .cc-loaderimg {\\n  position: absolute;\\n  width: 100%;\\n  z-index: 1000;\\n  left: 0;\\n  right: 0;\\n  top: 0;\\n  height: 100%;\\n  background: rgba(255, 255, 255, 0.8); }\\n\\n.cc-sdk .cc-loaderimg svg {\\n  width: 100px; }\\n\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function() {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\tvar result = [];\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar item = this[i];\n\t\t\tif(item[2]) {\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\n\t\t\t} else {\n\t\t\t\tresult.push(item[1]);\n\t\t\t}\n\t\t}\n\t\treturn result.join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(selector) {\n\t\tif (typeof memo[selector] === \"undefined\") {\n\t\t\tmemo[selector] = fn.call(this, selector);\n\t\t}\n\n\t\treturn memo[selector]\n\t};\n})(function (target) {\n\treturn document.querySelector(target)\n});\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = __webpack_require__(20);\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton) options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n\tif (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\toptions.attrs.type = \"text/css\";\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\toptions.attrs.type = \"text/css\";\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports) {\n\n\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-survey cc-sdk\\\" id=\\\"{{surveyToken}}-survey\\\">\\r\\n\\t<div class=\\\"cc-popup-container-2 {{animation}} {{location}}\\\">\\r\\n\\t\\t<div class=\\\"ccsdk-overlay ccsdk-glass\\\"></div>\\r\\n\\t\\t<div class=\\\"cc-popup-container-2__icons cc-left-icon\\\">\\r\\n\\t\\t\\t<span class=\\\"is-cc-popup-container-back cc-popup-container__back act-cc-button-prev\\\"></span>\\r\\n\\t\\t\\t<ul class=\\\"cc-sdk-loader\\\">\\r\\n\\t\\t\\t\\t<li class=\\\"cc-sdk-chart\\\" data-percent=\\\"75\\\"></li>\\r\\n\\t\\t\\t</ul>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"cc-popup-container-2__icons cc-right-icon\\\">\\r\\n\\t\\t\\t<img src=\\\"https://cx.getcloudcherry.com/microsurvey-assets/Collapse_Icon.svg\\\" class=\\\"is-cc-popup-container-minimize cc-popup-container__minimize act-cc-button-minimize mobile-hide\\\">\\r\\n\\t\\t\\t<img src=\\\"https://cx.getcloudcherry.com/microsurvey-assets/Close_Icon.svg\\\" class=\\\"is-cc-popup-container-close cc-popup-container__close act-cc-button-close mobile-hide\\\">\\r\\n\\t\\t\\t<img src=\\\"https://cx.getcloudcherry.com/microsurvey-assets/Close_Icon2.svg\\\" class=\\\"is-cc-popup-container-close cc-popup-container__close cc-popup-container__close2 act-cc-button-close desktop-hide\\\">\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"cc-survey-container\\\">\\r\\n\\t\\t\\t<div class=\\\"cc-survey-content\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"cc-questions-container\\\">\\r\\n\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"submit-icon act-cc-button-next\\\"></div>\\r\\n\\t\\t\\t<div class=\\\"{{location}} progress-bar\\\" id=\\\"progressBar\\\">\\r\\n\\t\\t\\t\\t<span class=\\\"progress-line\\\" id=\\\"progress-line\\\"></span>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\";\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-sdk act-cc-welcome-question-box cc-popup-container {{location}} {{animation}}\\\" id=\\\"{{surveyToken}}-welcome\\\">\\r\\n  <div class=\\\"ccsdk-overlay ccsdk-glass\\\"></div>\\r\\n  <div class=\\\"cc-loaderimg hide\\\">\\r\\n    <svg version=\\\"1.1\\\" id=\\\"L9\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\"\\r\\n      viewBox=\\\"0 0 100 100\\\" enable-background=\\\"new 0 0 0 0\\\" xml:space=\\\"preserve\\\">\\r\\n      <path fill=\\\"red\\\" d=\\\"M73,50c0-12.7-10.3-23-23-23S27,37.3,27,50 M30.9,50c0-10.5,8.5-19.1,19.1-19.1S69.1,39.5,69.1,50\\\">\\r\\n        <animateTransform attributeName=\\\"transform\\\" attributeType=\\\"XML\\\" type=\\\"rotate\\\" dur=\\\"1s\\\" from=\\\"0 50 50\\\" to=\\\"360 50 50\\\" repeatCount=\\\"indefinite\\\"\\r\\n        />\\r\\n      </path>\\r\\n    </svg>\\r\\n  </div>\\r\\n  <!-- <svg class=\\\"cc-sdk-timer\\\">\\r\\n    <circle r=\\\"8\\\" cx=\\\"20\\\" cy=\\\"20\\\" stroke=\\\"black\\\" stroke-width=\\\"0\\\" fill=\\\"red\\\"></circle>\\r\\n  </svg> -->\\r\\n  <img src=\\\"https://cx.getcloudcherry.com/microsurvey-assets/Close_Icon.svg\\\" class=\\\"is-cc-popup-container-close cc-popup-container__close act-cc-button-close\\\">\\r\\n  <div class=\\\"cc-message-box\\\">\\r\\n    <h2 class=\\\"cc-message-box__text\\\">{{question}}</h2>\\r\\n    <a href=\\\"javascript:void(0)\\\" class=\\\"cc-message-box__btn act-cc-{{action}} mobile-hide\\\"  id=\\\"\\\">{{button}}</a>\\r\\n  </div>\\r\\n</div>\";\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container single-line\\\" data-required=\\\"{{isRequired}}\\\" data-type=\\\"singleline\\\" data-id=\\\"{{questionId}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p>\\r\\n      <span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n    <span class=\\\"cc-question-container__validation\\\">{{validationHint}}</span>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content\\\">\\r\\n    <input type=\\\"text\\\" name=\\\"\\\" id=\\\"{{questionId}}\\\" placeholder=\\\"Enter..\\\" class=\\\"cc-sdk-form-control\\\">\\r\\n  </div>\\r\\n</div>\";\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container single-line\\\" data-required=\\\"{{isRequired}}\\\" data-type=\\\"number\\\" data-id=\\\"{{questionId}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p>\\r\\n      <span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n    <span class=\\\"cc-question-container__validation\\\">{{validationHint}}</span>\\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content\\\">\\r\\n    <input type=\\\"text\\\" name=\\\"\\\" id=\\\"{{questionId}}\\\" placeholder=\\\"Enter..\\\" class=\\\"cc-sdk-form-control\\\">\\r\\n  </div>\\r\\n</div>\";\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container\\\" data-type=\\\"multiline\\\" data-id=\\\"{{questionId}}\\\" data-required=\\\"{{isRequired}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p>\\r\\n      <span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n    <span class=\\\"cc-question-container__validation\\\">{{validationHint}}</span>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content\\\">\\r\\n    <textarea class=\\\"multiline-box cc-sdk-form-control\\\" maxlength=\\\"{{characterLimit}}\\\" id=\\\"{{questionId}}\\\" placeholder=\\\"Share your thoughts...\\\"></textarea>\\r\\n  </div>\\r\\n</div>\";\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container\\\" data-type=\\\"checkbox\\\" data-id=\\\"{{questionId}}\\\" data-required=\\\"{{isRequired}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p>\\r\\n      <span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content cc-big-list-container\\\" id=\\\"{{questionId}}\\\">\\r\\n    <ul class=\\\"cc-question-container__list\\\">\\r\\n      {{options}}\\r\\n    </ul>\\r\\n  </div>\\r\\n</div>\";\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container radio-toggle\\\" data-type=\\\"radio\\\" data-id=\\\"{{questionId}}\\\" data-required=\\\"{{isRequired}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p class=\\\"\\\">\\r\\n      <span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content\\\" id=\\\"{{questionId}}\\\">\\r\\n    <ul class=\\\"cc-question-container__list\\\">\\r\\n      {{options}}\\r\\n    </ul>\\r\\n  </div>\\r\\n</div>\";\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container radio-toggle radio-toggle--image-toggle\\\" data-required=\\\"{{isRequired}}\\\" data-type=\\\"radioImage\\\"\\r\\n  data-id=\\\"{{questionId}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p>\\r\\n      <span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content\\\" id=\\\"{{questionId}}\\\">\\r\\n    <ul class=\\\"cc-question-container__list\\\">\\r\\n      {{options}}\\r\\n    </ul>\\r\\n  </div>\\r\\n</div>\";\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container {{scaleImageContainer}}\\\" data-type=\\\"scale\\\" data-id=\\\"{{questionId}}\\\" data-required=\\\"{{isRequired}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p>\\r\\n      <span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content rating-color act-cc-question-nps\\\" id=\\\"{{questionId}}\\\">\\r\\n    <div class=\\\"cc-question-container__list\\\">\\r\\n      {{optionsRange}}\\r\\n      <div class=\\\"circle-image circle-image-scale-010-neutral desktop-hide {{imageVisibility010}}\\\">\\r\\n        <img src={{mobileImageUrl}} class=\\\"cc-nps-image\\\" alt=\\\"\\\" usemap=\\\"#Map\\\" />\\r\\n        <map name=\\\"Map\\\" id=\\\"Map\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"0\\\" title=\\\"0\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"0\\\" coords=\\\"83,193,62,228,38,212,23,193,57,167\\\"\\r\\n            shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"1\\\" title=\\\"1\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"1\\\" coords=\\\"54,165,21,189,11,173,4,154,2,140,43,134\\\"\\r\\n            shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"2\\\" title=\\\"2\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"2\\\" coords=\\\"43,131,2,135,1,118,5,93,8,83,45,97\\\"\\r\\n            shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"3\\\" title=\\\"3\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"3\\\" coords=\\\"48,92,10,78,17,61,28,44,39,32,66,66\\\"\\r\\n            shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"4\\\" title=\\\"4\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"4\\\" coords=\\\"70,61,42,30,55,20,70,14,91,5,101,45\\\"\\r\\n            shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"5\\\" title=\\\"5\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"5\\\" coords=\\\"105,44,92,5,113,2,134,3,147,5,139,46\\\"\\r\\n            shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"6\\\" title=\\\"6\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"6\\\" coords=\\\"141,46,150,6,169,11,184,19,200,30,172,63\\\"\\r\\n            shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"7\\\" title=\\\"7\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"7\\\" coords=\\\"175,63,202,34,218,48,227,66,232,78,194,93\\\"\\r\\n            shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"8\\\" title=\\\"8\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"8\\\" coords=\\\"196,97,233,81,239,103,240,118,240,135,199,130\\\"\\r\\n            shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"9\\\" title=\\\"9\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"9\\\" coords=\\\"199,135,240,140,236,159,229,175,221,189,187,167\\\"\\r\\n            shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"10\\\" title=\\\"10\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"10\\\" coords=\\\"183,169,217,191,204,212,178,229,158,192\\\"\\r\\n            shape=\\\"poly\\\">\\r\\n        </map>\\r\\n        <span class=\\\"cc-nps-selected-rating act-cc-nps-selected-rating  desktop-hide\\\">0</span>\\r\\n      </div>\\r\\n      <div class=\\\"circle-image circle-image-scale-010-neutral desktop-hide {{imageVisibility110}}\\\">\\r\\n        <img src={{mobileImageUrl}} class=\\\"cc-nps-image\\\" alt=\\\"\\\" usemap=\\\"#Map2\\\" />\\r\\n        <map name=\\\"Map2\\\" id=\\\"Map2\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"1\\\" title=\\\"1\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"1\\\" coords=\\\"67,180,40,210,26,195,15,176,11,169,47,152\\\"\\r\\n            shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"2\\\" title=\\\"2\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"2\\\" coords=\\\"48,149,9,163,2,140,1,124,3,110,45,115\\\"\\r\\n            shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"3\\\" title=\\\"3\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"3\\\" coords=\\\"44,110,4,105,8,79,17,67,22,57,58,79\\\"\\r\\n            shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"4\\\" title=\\\"4\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"4\\\" coords=\\\"58,76,24,54,33,39,48,29,65,18,85,54\\\"\\r\\n            shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"5\\\" title=\\\"5\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"5\\\" coords=\\\"87,51,68,15,85,7,106,3,120,3,122,45\\\"\\r\\n            shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"6\\\" title=\\\"6\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"6\\\" coords=\\\"123,42,123,0,141,2,163,8,176,14,157,52\\\"\\r\\n            shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"7\\\" title=\\\"7\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"7\\\" coords=\\\"159,53,180,16,201,30,212,44,220,54,186,77\\\"\\r\\n            shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"8\\\" title=\\\"8\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"8\\\" coords=\\\"188,80,222,55,229,69,236,83,241,108,199,111\\\"\\r\\n            shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"9\\\" title=\\\"9\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"9\\\" coords=\\\"200,116,239,112,241,128,240,146,234,165,196,150\\\"\\r\\n            shape=\\\"poly\\\">\\r\\n          <area target=\\\"\\\" alt=\\\"10\\\" title=\\\"10\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"10\\\" coords=\\\"193,153,233,168,225,187,212,202,202,212,175,181\\\"\\r\\n            shape=\\\"poly\\\">\\r\\n        </map>\\r\\n        <span class=\\\"cc-nps-selected-rating act-cc-nps-selected-rating  desktop-hide\\\">0</span>\\r\\n      </div>\\r\\n      <div class=\\\"legend-container\\\" {{legendStyle}}>\\r\\n        <span class=\\\"option-left-rating-text {{optionLeftExtraClass}} {{radialLegend}}-left\\\" style=\\\"max-width:maxWidth;\\\">{{leftLabel}}</span>\\r\\n        <span class=\\\"option-mid-rating-text {{optionMidExtraClass}} {{radialLegend}}-mid\\\" style=\\\"max-width:maxWidth; left:leftWidth\\\">{{midLabel}}</span>\\r\\n        <span class=\\\"option-right-rating-text {{optionRightExtraClass}} {{radialLegend}}-right\\\" style=\\\"max-width:maxWidth;\\\">{{rightLabel}}</span>\\r\\n      </div>\\r\\n      <input type=\\\"hidden\\\" value=\\\"\\\" class=\\\"option-number-input\\\">\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n{{style}}\\r\\n\";\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container\\\" data-type=\\\"csat\\\" data-required=\\\"{{isRequired}}\\\" data-id=\\\"{{questionId}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p>\\r\\n      <span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content rating-color\\\" id=\\\"{{questionId}}\\\">\\r\\n    <ul class=\\\"cc-question-container__list\\\">\\r\\n      <li>\\r\\n        <span class=\\\"option-csat option-smile-box one\\\" data-rating=\\\"1\\\">\\r\\n          <div class=\\\"cc-checkbox cc-radio \\\">\\r\\n            <input type=\\\"radio\\\" name=\\\"serv\\\" id=\\\"service-0\\\">\\r\\n            <label for=\\\"service-0\\\"></label>\\r\\n          </div>\\r\\n          <span>Completely Disagree</span>\\r\\n        </span>\\r\\n      </li>\\r\\n      <li>\\r\\n\\r\\n        <span class=\\\"option-csat option-smile-box two\\\" data-rating=\\\"2\\\">\\r\\n          <div class=\\\"cc-checkbox cc-radio \\\">\\r\\n            <input type=\\\"radio\\\" name=\\\"serv\\\" id=\\\"service-1\\\">\\r\\n            <label for=\\\"service-1\\\"></label>\\r\\n          </div>\\r\\n          <span>Somewhat Disagree</span>\\r\\n        </span>\\r\\n      </li>\\r\\n      <li>\\r\\n\\r\\n        <span class=\\\"option-csat option-smile-box three\\\" data-rating=\\\"3\\\">\\r\\n          <div class=\\\"cc-checkbox cc-radio \\\">\\r\\n            <input type=\\\"radio\\\" name=\\\"serv\\\" id=\\\"service-2\\\">\\r\\n            <label for=\\\"service-2\\\"></label>\\r\\n          </div>\\r\\n          <span>Agree</span>\\r\\n        </span>\\r\\n      </li>\\r\\n      <li>\\r\\n\\r\\n        <span class=\\\"option-csat option-smile-box four\\\" data-rating=\\\"4\\\">\\r\\n          <div class=\\\"cc-checkbox cc-radio \\\">\\r\\n            <input type=\\\"radio\\\" name=\\\"serv\\\" id=\\\"service-3\\\">\\r\\n            <label for=\\\"service-3\\\"></label>\\r\\n          </div>\\r\\n          <span>Somewhat Agree</span>\\r\\n        </span>\\r\\n      </li>\\r\\n      <li>\\r\\n        <span class=\\\"option-csat option-smile-box five\\\" data-rating=\\\"5\\\">\\r\\n          <div class=\\\"cc-checkbox cc-radio \\\">\\r\\n            <input type=\\\"radio\\\" name=\\\"serv\\\" id=\\\"service-4\\\">\\r\\n            <label for=\\\"service-4\\\"></label>\\r\\n          </div>\\r\\n          <span>Completely Agree</span>\\r\\n        </span>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n</div>\";\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container\\\" data-type=\\\"csat\\\" data-required=\\\"{{isRequired}}\\\" data-id=\\\"{{questionId}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p>\\r\\n      <span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content cc-csat rating-color\\\" id=\\\"{{questionId}}\\\">\\r\\n    <ul class=\\\"cc-question-container__list\\\">\\r\\n      <li>\\r\\n        <span class=\\\"option-csat option-smile-box cc-one\\\" data-rating=\\\"1\\\">\\r\\n          <div class=\\\"cc-checkbox cc-radio \\\">\\r\\n            <input type=\\\"radio\\\" name=\\\"serv\\\" id=\\\"service-0\\\">\\r\\n            <label for=\\\"service-0\\\"></label>\\r\\n          </div>\\r\\n          <span>Very Unsatisfied</span>\\r\\n        </span>\\r\\n      </li>\\r\\n      <li>\\r\\n        <span class=\\\"option-csat option-smile-box cc-two\\\" data-rating=\\\"2\\\">\\r\\n          <div class=\\\"cc-checkbox cc-radio\\\">\\r\\n            <input type=\\\"radio\\\" name=\\\"serv\\\" id=\\\"service-1\\\">\\r\\n            <label for=\\\"service-1\\\"></label>\\r\\n          </div>\\r\\n          <span>Unsatisfied</span>\\r\\n        </span>\\r\\n      </li>\\r\\n      <li>\\r\\n        <span class=\\\"option-csat option-smile-box cc-three\\\" data-rating=\\\"3\\\">\\r\\n          <div class=\\\"cc-checkbox cc-radio\\\">\\r\\n            <input type=\\\"radio\\\" name=\\\"serv\\\" id=\\\"service-2\\\">\\r\\n            <label for=\\\"service-2\\\"></label>\\r\\n          </div>\\r\\n          <span>Neutral</span>\\r\\n        </span>\\r\\n      </li>\\r\\n      <li>\\r\\n        <span class=\\\"option-csat option-smile-box cc-four\\\" data-rating=\\\"4\\\">\\r\\n          <div class=\\\"cc-checkbox cc-radio\\\">\\r\\n            <input type=\\\"radio\\\" name=\\\"serv\\\" id=\\\"service-3\\\">\\r\\n            <label for=\\\"service-3\\\"></label>\\r\\n          </div>\\r\\n          <span>Satisfied</span>\\r\\n        </span>\\r\\n      </li>\\r\\n      <li>\\r\\n        <span class=\\\"option-csat option-smile-box cc-five\\\" data-rating=\\\"5\\\">\\r\\n          <div class=\\\"cc-checkbox cc-radio\\\">\\r\\n            <input type=\\\"radio\\\" name=\\\"serv\\\" id=\\\"service-4\\\">\\r\\n            <label for=\\\"service-4\\\"></label>\\r\\n          </div>\\r\\n          <span>Very Satisfied</span>\\r\\n        </span>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n</div>\";\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container\\\" data-type=\\\"nps\\\" data-id=\\\"{{questionId}}\\\" data-required=\\\"{{isRequired}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p class=\\\"\\\">\\r\\n      <span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content rating-color act-cc-question-scale\\\" id=\\\"{{questionId}}\\\">\\r\\n    <div class=\\\"cc-question-container__list\\\">\\r\\n      <div class=\\\"cc-options-container\\\">\\r\\n        <span data-rating=\\\"0\\\" class=\\\"option-number-item mobile-hide option-zero\\\">0</span>\\r\\n        <span data-rating=\\\"1\\\" class=\\\"option-number-item mobile-hide option-one\\\">1</span>\\r\\n        <span data-rating=\\\"2\\\" class=\\\"option-number-item mobile-hide option-two\\\">2</span>\\r\\n        <span data-rating=\\\"3\\\" class=\\\"option-number-item mobile-hide option-three\\\">3</span>\\r\\n        <span data-rating=\\\"4\\\" class=\\\"option-number-item mobile-hide option-four\\\">4</span>\\r\\n        <span data-rating=\\\"5\\\" class=\\\"option-number-item mobile-hide option-five\\\">5</span>\\r\\n        <span data-rating=\\\"6\\\" class=\\\"option-number-item mobile-hide option-six\\\">6</span>\\r\\n        <span data-rating=\\\"7\\\" class=\\\"option-number-item mobile-hide option-seven\\\">7</span>\\r\\n        <span data-rating=\\\"8\\\" class=\\\"option-number-item mobile-hide option-eight\\\">8</span>\\r\\n        <span data-rating=\\\"9\\\" class=\\\"option-number-item mobile-hide option-nine\\\">9</span>\\r\\n        <span data-rating=\\\"10\\\" class=\\\"option-number-item mobile-hide option-ten\\\">10</span>\\r\\n        <div class=\\\"circle-image desktop-hide\\\">\\r\\n          <img src=\\\"https://cx.getcloudcherry.com/microsurvey-assets/circle.svg\\\" class=\\\"cc-nps-image\\\" alt=\\\"\\\" usemap=\\\"#Map\\\" />\\r\\n          <map name=\\\"Map\\\" id=\\\"Map\\\">\\r\\n            <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"0\\\" coords=\\\"86,199,61,177,25,201,38,219,52,230,66,238\\\"\\r\\n              shape=\\\"poly\\\">\\r\\n            <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"1\\\" coords=\\\"59,173,22,198,12,180,5,160,4,146,44,138\\\"\\r\\n              shape=\\\"poly\\\">\\r\\n            <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"2\\\" coords=\\\"44,134,49,101,8,84,3,98,0,116,2,141\\\"\\r\\n              shape=\\\"poly\\\">\\r\\n            <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"3\\\" coords=\\\"49,97,71,68,42,33,25,54,14,71,10,81\\\"\\r\\n              shape=\\\"poly\\\">\\r\\n            <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"4\\\" coords=\\\"74,65,106,47,94,5,70,14,46,31\\\"\\r\\n              shape=\\\"poly\\\">\\r\\n            <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"5\\\" coords=\\\"144,47,154,4,135,1,114,1,98,4,108,48\\\"\\r\\n              shape=\\\"poly\\\">\\r\\n            <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"6\\\" coords=\\\"149,48,157,5,183,15,209,30,180,65\\\"\\r\\n              shape=\\\"poly\\\">\\r\\n            <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"7\\\" coords=\\\"183,67,211,34,231,56,243,79,204,97\\\"\\r\\n              shape=\\\"poly\\\">\\r\\n            <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"8\\\" coords=\\\"203,100,245,85,251,106,252,124,251,141,207,135\\\"\\r\\n              shape=\\\"poly\\\">\\r\\n            <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"9\\\" coords=\\\"208,140,251,146,245,169,231,197,194,172\\\"\\r\\n              shape=\\\"poly\\\">\\r\\n            <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" class=\\\"option-number-item\\\" data-rating=\\\"10\\\" coords=\\\"193,179,229,201,218,218,202,230,185,238,166,200\\\"\\r\\n              shape=\\\"poly\\\">\\r\\n          </map>\\r\\n          <!-- <map name=\\\"Map\\\" id=\\\"Map\\\">\\r\\n                <area alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" shape=\\\"poly\\\" class=\\\"option-number-item\\\" data-rating=\\\"0\\\" coords=\\\"49,192,91,229,111,191,83,169\\\" />\\r\\n                <area alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" shape=\\\"poly\\\" class=\\\"option-number-item\\\" data-rating=\\\"1\\\" coords=\\\"29,139,47,189,83,166,70,135\\\" />\\r\\n                <area alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" shape=\\\"poly\\\" class=\\\"option-number-item\\\" data-rating=\\\"2\\\" coords=\\\"35,83,29,136,71,131,75,96\\\" />\\r\\n                <area alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" shape=\\\"poly\\\" class=\\\"option-number-item\\\" data-rating=\\\"3\\\" coords=\\\"36,79,67,35,95,66,75,94\\\" />\\r\\n                <area alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" shape=\\\"poly\\\" class=\\\"option-number-item\\\" data-rating=\\\"4\\\" coords=\\\"69,32,117,7,127,49,97,64\\\" />\\r\\n                <area alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" shape=\\\"poly\\\" class=\\\"option-number-item\\\" data-rating=\\\"5\\\" coords=\\\"120,7,175,7,165,48,131,48\\\" />\\r\\n                <area alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" shape=\\\"poly\\\" class=\\\"option-number-item\\\" data-rating=\\\"6\\\" coords=\\\"178,7,168,49,197,64,225,32\\\" />\\r\\n                <area alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" shape=\\\"poly\\\" class=\\\"option-number-item\\\" data-rating=\\\"7\\\" coords=\\\"200,67,220,95,260,80,229,35\\\" />\\r\\n                <area alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" shape=\\\"poly\\\" class=\\\"option-number-item\\\" data-rating=\\\"8\\\" coords=\\\"221,98,224,131,266,136,259,83\\\" />\\r\\n                <area alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" shape=\\\"poly\\\" class=\\\"option-number-item\\\" data-rating=\\\"9\\\" coords=\\\"224,135,266,139,248,191,212,167\\\" />\\r\\n                <area alt=\\\"\\\" title=\\\"\\\" href=\\\"#\\\" shape=\\\"poly\\\" class=\\\"option-number-item\\\" data-rating=\\\"10\\\" coords=\\\"184,191,203,230,246,194,211,169\\\" />\\r\\n            </map> -->\\r\\n          <span class=\\\"cc-nps-selected-rating act-cc-nps-selected-rating  desktop-hide\\\">0</span>\\r\\n        </div>\\r\\n        <span class=\\\"ccsdk-clearfix\\\"></span>\\r\\n        <span class=\\\"option-left-rating-text radial-legend-left\\\">Not at all likely</span>\\r\\n        <span class=\\\"option-midnps-rating-text radial-legend-mid\\\">Maybe</span>\\r\\n        <span class=\\\"option-right-rating-text radial-legend-right\\\">Very likely</span>\\r\\n        <input type=\\\"hidden\\\" value=\\\"\\\" class=\\\"option-number-input\\\">\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container drop-cc-question-container\\\" data-required=\\\"{{isRequired}}\\\" data-type=\\\"select\\\" data-id=\\\"{{questionId}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p>\\r\\n      <span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content\\\" id=\\\"{{questionId}}\\\">\\r\\n    <!-- <span class=\\\"hl dropdown\\\">Select</span> -->\\r\\n    <div class=\\\"cc-select-wrapper\\\">\\r\\n      <select name=\\\"sources\\\" id=\\\"sources\\\" class=\\\"cc-select cc-sdk-sources\\\" data-selection-value=\\\"{{model}}\\\" placeholder=\\\"Select\\\">\\r\\n        {{options}}\\r\\n      </select>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\";\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container drop-cc-question-container\\\" data-required=\\\"{{isRequired}}\\\" data-type=\\\"select\\\" data-id=\\\"{{questionId}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p class=\\\"\\\">\\r\\n      <span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content\\\" id=\\\"{{questionId}}\\\">\\r\\n    <!-- <span class=\\\"hl dropdown\\\">Select</span> -->\\r\\n    <div class=\\\"cc-select-wrapper\\\">\\r\\n      <select name=\\\"sources\\\" id=\\\"sources\\\" class=\\\"cc-select cc-sdk-sources\\\" placeholder=\\\"Select\\\" data-type=\\\"multiple\\\">\\r\\n        {{options}}\\r\\n      </select>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\";\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container\\\" data-type=\\\"smile\\\" data-required=\\\"{{isRequired}}\\\" data-id=\\\"{{questionId}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p>\\r\\n      <span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content rating-color\\\" id=\\\"{{questionId}}\\\">\\r\\n    <div class=\\\"cc-question-container__list\\\">\\r\\n      <div>\\r\\n        <span class=\\\"option-smile-box cc-one\\\" data-rating=\\\"1\\\"></span>\\r\\n        <span class=\\\"option-smile-box cc-two\\\" data-rating=\\\"2\\\"></span>\\r\\n        <span class=\\\"option-smile-box cc-three\\\" data-rating=\\\"3\\\"></span>\\r\\n        <span class=\\\"option-smile-box cc-four\\\" data-rating=\\\"4\\\"></span>\\r\\n        <span class=\\\"option-smile-box cc-five\\\" data-rating=\\\"5\\\"></span>\\r\\n      </div>\\r\\n      <span class=\\\"option-left-rating-text option-left-rating-text-small-container-smile\\\">{{leftLabel}}</span>\\r\\n      <span class=\\\"option-right-rating-text option-right-rating-text-small-container-smile\\\">{{rightLabel}}</span>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\";\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container\\\" data-type=\\\"smile\\\" data-required=\\\"{{isRequired}}\\\" data-id=\\\"{{questionId}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p>\\r\\n      <span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content rating-color\\\" id=\\\"{{questionId}}\\\">\\r\\n    <div class=\\\"cc-question-container__list\\\">\\r\\n      <div>\\r\\n        <span class=\\\"option-smile-box cc-five\\\" data-rating=\\\"5\\\"></span>\\r\\n        <span class=\\\"option-smile-box cc-four\\\" data-rating=\\\"4\\\"></span>\\r\\n        <span class=\\\"option-smile-box cc-three\\\" data-rating=\\\"3\\\"></span>\\r\\n        <span class=\\\"option-smile-box cc-two\\\" data-rating=\\\"2\\\"></span>\\r\\n        <span class=\\\"option-smile-box cc-one\\\" data-rating=\\\"1\\\"></span>\\r\\n      </div>\\r\\n      <span class=\\\"option-right-rating-text\\\">{{leftLabel}}</span>\\r\\n      <span class=\\\"option-left-rating-text\\\">{{rightLabel}}</span>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\";\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container\\\" data-type=\\\"star\\\" data-required=\\\"{{isRequired}}\\\" data-id=\\\"{{questionId}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p class=\\\"\\\">\\r\\n      <span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content rating-color\\\" id=\\\"{{questionId}}\\\">\\r\\n    <div class=\\\"cc-question-container__list\\\">\\r\\n      <div>\\r\\n        <span class=\\\"option-star-box\\\" data-rating=\\\"1\\\"></span>\\r\\n        <span class=\\\"option-star-box\\\" data-rating=\\\"2\\\"></span>\\r\\n        <span class=\\\"option-star-box\\\" data-rating=\\\"3\\\"></span>\\r\\n        <span class=\\\"option-star-box\\\" data-rating=\\\"4\\\"></span>\\r\\n        <span class=\\\"option-star-box\\\" data-rating=\\\"5\\\"></span>\\r\\n      </div>\\r\\n      <span class=\\\"option-left-rating-text option-left-rating-text-small-container-smile\\\">{{leftLabel}}</span>\\r\\n      <span class=\\\"option-right-rating-text option-right-rating-text-small-container-smile\\\">{{rightLabel}}</span>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\";\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container\\\" data-required=\\\"{{isRequired}}\\\" data-type=\\\"slider\\\" data-id=\\\"{{questionId}}\\\">\\r\\n    <div class=\\\"cc-question-container__text\\\">\\r\\n        <p>\\r\\n            <span class=\\\"cc-question-container__required-label\\\">{{requiredLabel}}</span>{{question}}</p>\\r\\n        <span class=\\\"cc-question-container__required\\\">Mandatory Question</span>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"cc-question-container__content rating-color cc-sdk-range-slider\\\" id=\\\"{{questionId}}\\\">\\r\\n        <div class=\\\"cc-question-container__slider\\\">\\r\\n            <input type=\\\"range\\\" value=\\\"{{min}}\\\" min=\\\"{{min}}\\\" max=\\\"{{max}}\\\" class=\\\"cc-sdk-range cc-blue\\\">\\r\\n            <div class=\\\"legend-container\\\" {{legendStyle}}>\\r\\n                <span class=\\\"option-left-rating-text\\\">{{minLabel}}{{min}}</span>\\r\\n                <span class=\\\"option-right-rating-text\\\">{{maxLabel}}{{max}}</span>\\r\\n                <span class=\\\"slider-tip act-slider-tip\\\"></span>\\r\\n            </div>\\r\\n            <!-- <span class=\\\"slider-tip act-slider-tip\\\">{{min}}</span> -->\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<li>\\r\\n  <div class=\\\"cc-checkbox cc-radio\\\">\\r\\n    <input type=\\\"radio\\\" name=\\\"{{qId}}\\\" id=\\\"{{qId}}-img-service-{{labelFor}}\\\" value=\\\"{{value}}\\\">\\r\\n    <label for=\\\"{{qId}}-img-service-{{labelFor}}\\\"></label>\\r\\n  </div>\\r\\n  <span>\\r\\n    <label for=\\\"{{qId}}-img-service-{{labelFor}}\\\" class=\\\"option-yes-no {{labelFor}}\\\">\\r\\n      <img src=\\\"{{image}}\\\" /> {{label}}</label>\\r\\n  </span>\\r\\n</li>\";\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<li>\\r\\n  <div class=\\\"cc-checkbox cc-radio\\\">\\r\\n    <input type=\\\"radio\\\" name=\\\"{{qId}}\\\" id=\\\"{{qId}}-service-{{labelFor}}\\\" value=\\\"{{value}}\\\">\\r\\n    <label for=\\\"{{qId}}-service-{{labelFor}}\\\"></label>\\r\\n  </div>\\r\\n  <span>\\r\\n    <label for=\\\"{{qId}}-service-{{labelFor}}\\\" class=\\\"option-yes-no {{labelFor}}\\\">{{label}}</label>\\r\\n  </span>\\r\\n</li>\";\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<li>\\r\\n  <div class=\\\"cc-checkbox\\\">\\r\\n    <input type=\\\"checkbox\\\" value=\\\"{{value}}\\\" name=\\\"\\\" id=\\\"check-{{labelFor}}\\\">\\r\\n    <label for=\\\"check-{{labelFor}}\\\">\\r\\n    </label>\\r\\n  </div>\\r\\n  <span>\\r\\n    <label for=\\\"check-{{labelFor}}\\\">{{label}}</label>\\r\\n  </span>\\r\\n</li>\";\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<li>\\r\\n  <div class=\\\"cc-checkbox\\\">\\r\\n    <input type=\\\"checkbox\\\" value=\\\"{{value}}\\\" name=\\\"\\\" id=\\\"check-{{labelFor}}\\\">\\r\\n    <label for=\\\"check-{{labelFor}}\\\">\\r\\n    </label>\\r\\n  </div>\\r\\n  <span>\\r\\n    <label for=\\\"check-{{labelFor}}\\\">\\r\\n      <img src=\\\"{{image}}\\\" /> {{label}}</label>\\r\\n  </span>\\r\\n</li>\";\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container detail-box mobile-detail-box cc-thankyou-container\\\" id=\\\"cc-thankyou-container\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p>{{question}}</p>\\r\\n    <p class=\\\"cc-thankyou-powered {{branding}}\\\"><span class=\\\"cc-thankyou-logo\\\"></span>Delight powered by Cloudcherry</p>\\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content\\\">\\r\\n  </div>\\r\\n</div>\";\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container drop-cc-question-container cc-language-selector\\\" data-required=\\\"{{isRequired}}\\\" data-type=\\\"select\\\"\\r\\n  data-id=\\\"{{questionId}}\\\">\\r\\n  <div class=\\\"cc-question-container__text\\\">\\r\\n    <p>\\r\\n      <span class=\\\"cc-question-container__required-label\\\"></span>Select language</p>\\r\\n    <span class=\\\"cc-question-container__required\\\">* Mandatory</span>\\r\\n  </div>\\r\\n  <div class=\\\"cc-question-container__content\\\" id=\\\"{{questionId}}\\\">\\r\\n    <div class=\\\"cc-select-wrapper\\\">\\r\\n      <select name=\\\"sources\\\" id=\\\"sources\\\" class=\\\"cc-select cc-sdk-sources\\\" placeholder=\\\"Select\\\">\\r\\n        {{options}}\\r\\n      </select>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\";\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar LanguageTextFilter_1 = __webpack_require__(5);\r\nvar filter_utils_1 = __webpack_require__(8);\r\nvar ConditionalTextFilter = /** @class */ (function () {\r\n    function ConditionalTextFilter() {\r\n    }\r\n    ConditionalTextFilter.filterText = function (surveyHandler, question) {\r\n        var conditionalText = question.text == null ? '' : LanguageTextFilter_1.LanguageTextFilter.translateQuestionText(surveyHandler, question);\r\n        if (question.text != null) {\r\n            var conditionalText_1 = question.text.split(':');\r\n            if (question.setName && question.text.indexOf(\":\") !== -1) {\r\n                conditionalText_1 = conditionalText_1[0] + ': <br><span class=\"text-normal\">' + conditionalText_1[1] + '</span>';\r\n            }\r\n            else {\r\n                conditionalText_1 = conditionalText_1[0];\r\n            }\r\n        }\r\n        if (question.leadingDisplayTexts == null) {\r\n            conditionalText = LanguageTextFilter_1.LanguageTextFilter.translateQuestionText(surveyHandler, question);\r\n            return conditionalText;\r\n        }\r\n        else if (question.leadingDisplayTexts.length == 0) {\r\n            conditionalText = LanguageTextFilter_1.LanguageTextFilter.translateQuestionText(surveyHandler, question);\r\n            return conditionalText;\r\n        }\r\n        else {\r\n            for (var _i = 0, _a = question.leadingDisplayTexts; _i < _a.length; _i++) {\r\n                var fOption = _a[_i];\r\n                if (fOption != null && fOption.filter != null && fOption.filter.filterquestions != null) {\r\n                    var iSatisfied = false;\r\n                    var iFailed = false;\r\n                    for (var _b = 0, _c = fOption.filter.filterquestions; _b < _c.length; _b++) {\r\n                        var filterByQuestion = _c[_b];\r\n                        if (filter_utils_1.isAnd(filterByQuestion)) {\r\n                            if (filter_utils_1.doesSatisfy(surveyHandler, filterByQuestion) && !iFailed) {\r\n                                iSatisfied = true;\r\n                            }\r\n                            else {\r\n                                iFailed = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                        else if (filter_utils_1.isOr(filterByQuestion)) {\r\n                            if (filter_utils_1.doesSatisfy(surveyHandler, filterByQuestion)) {\r\n                                iSatisfied = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (iSatisfied && !iFailed) {\r\n                        if (filter_utils_1.checkLanguage(surveyHandler, fOption)\r\n                            || (surveyHandler.ccsdk.config && surveyHandler.ccsdk.config.language\r\n                                && surveyHandler.ccsdk.config.language.toLowerCase().includes('default')\r\n                                && fOption.language === null)\r\n                            || (surveyHandler.ccsdk.config && !surveyHandler.ccsdk.config.language && fOption.language === null)) {\r\n                            var groupTitle = void 0;\r\n                            if (question.setName && conditionalText.indexOf(':') !== -1) {\r\n                                groupTitle = conditionalText.split(':')[0];\r\n                                conditionalText = groupTitle + ': <br><span class=\"text-normal\">' + fOption.text + '</span>';\r\n                            }\r\n                            else {\r\n                                conditionalText = fOption.text;\r\n                            }\r\n                        }\r\n                        conditionalText;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return conditionalText;\r\n    };\r\n    return ConditionalTextFilter;\r\n}());\r\nexports.ConditionalTextFilter = ConditionalTextFilter;\r\n\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar DomUtilities_1 = __webpack_require__(0);\r\n// import { ScrollBar } from './ScrollBar';\r\nvar Select_1 = __webpack_require__(9);\r\nvar Theme_1 = __webpack_require__(47);\r\nvar ConditionalFlowFilter_1 = __webpack_require__(10);\r\nvar Slider_1 = __webpack_require__(48);\r\nvar Constants_1 = __webpack_require__(1);\r\nvar DomSurvey = /** @class */ (function () {\r\n    function DomSurvey(ccsdk) {\r\n        this.trackSelects = [];\r\n        this.trackRadios = [];\r\n        this.currentQuestionListeners = [];\r\n        var self = this;\r\n        this.domListeners = [];\r\n        this.ccsdk = ccsdk;\r\n        this.qIndex = 0;\r\n        this.qResponse = {};\r\n        this.domSelectElements();\r\n        this.util = new DomUtilities_1.DomUtilities();\r\n        // self.scrollbar = new ScrollBar(\"data-cc-scrollbar\");\r\n        this.util.ready(function () {\r\n            // self.util.addClassAll(self.$popupContainer,'show-slide');\r\n        });\r\n    }\r\n    DomSurvey.prototype.setTheme = function (brandColor, time) {\r\n        var self = this;\r\n        this.util.ready(function () {\r\n            self.theme = new Theme_1.Theme(brandColor, time);\r\n        });\r\n    };\r\n    DomSurvey.prototype.setQIndex = function (index) {\r\n        this.qIndex = index;\r\n    };\r\n    DomSurvey.prototype.getQindex = function () {\r\n        return this.qIndex;\r\n    };\r\n    DomSurvey.prototype.domSelectElements = function () {\r\n        this.$questionContainer = document.\r\n            querySelectorAll(\".cc-questions-container\");\r\n        this.$popupContainer = document.querySelectorAll(\".cc-popup-container\");\r\n        this.$popupContainer2 = document.querySelectorAll(\".cc-popup-container-2\");\r\n        this.$body = document.querySelectorAll(\"body\")[0];\r\n        // this.select = new Select();\r\n    };\r\n    DomSurvey.prototype.removePrevListener = function (id) {\r\n        for (var _i = 0, _a = this.domListeners; _i < _a.length; _i++) {\r\n            var listener = _a[_i];\r\n            if (listener.id == id) {\r\n                var index = this.domListeners.indexOf(listener);\r\n                window.ccsdkDebug ? console.log(\"removing listener\", id) : '';\r\n                window.ccsdkDebug ? console.log(\"removing listener index\", index) : '';\r\n                this.util.removeListener(this.$body, listener.type, listener.internalHandler);\r\n                if (index > -1) {\r\n                    this.domListeners.splice(index, 1);\r\n                }\r\n                window.ccsdkDebug ? console.log(this.domListeners) : '';\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    DomSurvey.prototype.setupListeners = function () {\r\n        var self = this;\r\n        var startSurvey = this.util.initListener(\"click\", \".act-cc-survey-start\", function () {\r\n            if ((!self.util.hasClass(self.$startBtn, 'disabled')) && (self.ccsdk.surveyStatus != 'minimized')) {\r\n                var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n                document.dispatchEvent(onSurveyClickEvent);\r\n                self.util.addClass(self.$startBtn, 'disabled');\r\n                self.showLoader();\r\n                self.startSurvey();\r\n            }\r\n            else {\r\n                self.initSurveyDom();\r\n            }\r\n        });\r\n        this.domListeners.push(startSurvey);\r\n        startSurvey.internalHandler = this.util.listener(this.$body, startSurvey.type, startSurvey.id, startSurvey.cb);\r\n        var nextQue = this.util.initListener(\"click\", \".act-cc-button-next\", function () {\r\n            // alert(\"working\");\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            self.nextQuestion();\r\n        });\r\n        this.domListeners.push(nextQue);\r\n        nextQue.internalHandler = this.util.listener(this.$body, nextQue.type, nextQue.id, nextQue.cb);\r\n        var prevQue = this.util.initListener(\"click\", \".act-cc-button-prev\", function () {\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            self.prevQuestion();\r\n        });\r\n        this.domListeners.push(prevQue);\r\n        prevQue.internalHandler = this.util.listener(this.$body, prevQue.type, prevQue.id, prevQue.cb);\r\n        var closeSurvey = this.util.initListener(\"click\", \".act-cc-button-close\", function () {\r\n            var onSurveyCloseEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLOSE_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyCloseEvent);\r\n            self.ccsdk.survey.answers = {};\r\n            self.trackSelects = [];\r\n            self.destroyListeners();\r\n            self.util.trigger(document, 'ccclose', undefined);\r\n            self.bodyElement = document.\r\n                getElementsByTagName(\"body\")[0];\r\n            self.util.removeClass(self.bodyElement, \"blurr\");\r\n            self.ccsdk.survey.destroy();\r\n        });\r\n        this.domListeners.push(closeSurvey);\r\n        closeSurvey.internalHandler = this.util.listener(this.$body, closeSurvey.type, closeSurvey.id, closeSurvey.cb);\r\n        var minSurvey = this.util.initListener(\"click\", \".act-cc-button-minimize\", function () {\r\n            self.minimizeSurvey();\r\n        });\r\n        this.domListeners.push(minSurvey);\r\n        minSurvey.internalHandler = this.util.listener(self.$body, minSurvey.type, minSurvey.id, minSurvey.cb);\r\n    };\r\n    DomSurvey.prototype.minimizeSurvey = function () {\r\n        var _this = this;\r\n        // this.$popupContainer[0].removeClass('');\r\n        this.util.removeClass(this.$popupContainer2[0], 'hide-right-left');\r\n        this.util.addClass(this.$popupContainer2[0], 'hide-right-left');\r\n        setTimeout(function () {\r\n            _this.util.removeClass(_this.$popupContainer2[0], 'show-slide');\r\n        }, 200);\r\n        this.util.removeClass(this.$popupContainer[0], 'hide-right-left');\r\n        this.util.addClass(this.$popupContainer[0], 'hide-right-left');\r\n        setTimeout(function () {\r\n            _this.util.addClass(_this.$popupContainer[0], 'show-slide');\r\n        }, 200);\r\n        this.ccsdk.surveyStatus = 'minimized';\r\n        var resumeText = this.ccsdk.config.resumeButtonText ? this.ccsdk.config.resumeButtonText : 'Resume';\r\n        this.$startBtn.innerHTML = resumeText;\r\n        this.util.removeClass(this.$startBtn, 'disabled');\r\n        //update all start btns\r\n        // Array.prototype.forEach.call($startBtn, (el, i) => {\r\n        //   el.innerHTML = resumeText;\r\n        // });\r\n    };\r\n    DomSurvey.prototype.destroyListeners = function () {\r\n        // (window as any).ccsdkDebug?console.log(\"Removing all listeners\"):'';\r\n        for (var _i = 0, _a = this.domListeners; _i < _a.length; _i++) {\r\n            var listener = _a[_i];\r\n            this.util.removeListener(this.$body, listener.type, listener.internalHandler);\r\n        }\r\n        for (var _b = 0, _c = this.ccsdk.survey.domListeners; _b < _c.length; _b++) {\r\n            var listener = _c[_b];\r\n            this.util.removeListener(this.$body, listener.type, listener.internalHandler);\r\n        }\r\n        if (this.ccsdk.survey.languageSelect) {\r\n            this.ccsdk.survey.languageSelect.destroyListeners();\r\n        }\r\n        if (this.select) {\r\n            this.select.destroyListeners();\r\n        }\r\n    };\r\n    DomSurvey.prototype.startSurvey = function () {\r\n        this.ccsdk.survey.cancelKillWelcomeQuestion();\r\n        this.ccsdk.getSurveyData();\r\n    };\r\n    DomSurvey.prototype.initSurveyDom = function () {\r\n        this.domSelectElements();\r\n        // (window as any).ccsdkDebug?console.log(\"click in setup listener survey start\"):'';\r\n        this.util.addClassAll(this.$popupContainer2, 'show-slide');\r\n        this.util.removeClass(this.$popupContainer[0], 'show-slide');\r\n        if (this.ccsdk.surveyStatus == 'minimized') {\r\n            //resume survey\r\n        }\r\n        else {\r\n            //start survey\r\n            //check if only one language is configured\r\n            window.ccsdkDebug ? console.log(this.ccsdk.surveyData) : '';\r\n            if (this.ccsdk.surveyData.translated === null || (this.ccsdk.surveyData.translated && Object.keys(this.ccsdk.surveyData.translated).length < 1)) {\r\n                this.loadFirstQuestion();\r\n            }\r\n            else {\r\n                this.ccsdk.survey.displayLanguageSelector();\r\n            }\r\n        }\r\n    };\r\n    DomSurvey.prototype.updateProgress = function () {\r\n        var el = document.querySelectorAll(\"#progress-line\")[0];\r\n        if (this.ccsdk && this.ccsdk.tracking) {\r\n            this.ccsdk.tracking.trackEvent('Questions Answered', {\r\n                token: this.ccsdk.surveyToken,\r\n                data: {\r\n                    name: this.qIndex + \"/\" + this.ccsdk.survey.questionsToDisplay.length,\r\n                    action: this.currentQuestionId\r\n                }\r\n            }, null, null);\r\n        }\r\n        el.style.width = (this.qIndex / this.ccsdk.survey.questionsToDisplay.length) * 100 + '%';\r\n    };\r\n    DomSurvey.prototype.loadFirstQuestion = function () {\r\n        // applyRuleToAllEl(this.$questionContainer, );\r\n        // this.util.removeClassAll(this.$questionContainer, 'show-slide');\r\n        // this.util.addClass(this.$questionContainer, 'show-slide');\r\n        this.loadQuestionSpecifics(this.$questionContainer, 0);\r\n        this.util.removeClassAll(this.$questionContainer[0].firstChild, 'show-slide');\r\n        this.util.addClass(this.$questionContainer[0].firstChild, 'show-slide');\r\n        var leftIcon = this.util.get('.act-cc-button-prev');\r\n        this.util.addClassAll(leftIcon, 'hide-slide');\r\n        var onSurveyQuestionEvent = new CustomEvent(Constants_1.Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken);\r\n        document.dispatchEvent(onSurveyQuestionEvent);\r\n    };\r\n    DomSurvey.prototype.nextQuestion = function () {\r\n        window.ccsdkDebug ? console.log('next question q response init', this.qResponse) : '';\r\n        // console.log('next question q response init',this.qResponse);\r\n        //empty the domListner\r\n        // this.util.removeAllListeners(this.domListeners);\r\n        var onSurveyQuestionEvent = new CustomEvent(Constants_1.Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken);\r\n        document.dispatchEvent(onSurveyQuestionEvent);\r\n        //submit the current response\r\n        // (window as any).ccsdkDebug?console.log('submit ',this.qResponse.type, this.qResponse):'';\r\n        var isRequired = false;\r\n        var q = this.$questionContainer[0].firstChild;\r\n        // (window as any).ccsdkDebug?console.log(this.$questionContainer):'';\r\n        var span = this.$questionContainer[0].firstChild.querySelectorAll(\".cc-question-container__required\")[0];\r\n        var validationSpan = this.$questionContainer[0].firstChild.querySelectorAll(\".cc-question-container__validation\")[0];\r\n        if (span)\r\n            this.util.removeClass(span, \"show\");\r\n        if (validationSpan)\r\n            this.util.removeClass(validationSpan, \"show\");\r\n        //check if question is required \r\n        isRequired = q.getAttribute('data-required').toLowerCase() == 'true' ? true : false;\r\n        // console.log('required check',Object.keys(this.qResponse).length, isRequired, this.qResponse);\r\n        // if (isRequired && Object.keys(this.qResponse).length === 0) {\r\n        if (isRequired && (Object.keys(this.qResponse).length === 0)) {\r\n            if (span) {\r\n                this.util.addClass(span, \"show\");\r\n                this.util.removeClass(span, \"hide\");\r\n            }\r\n            return;\r\n        }\r\n        else if (isRequired && (!this.qResponse.text) && (!this.qResponse.number)) {\r\n            if (span) {\r\n                this.util.addClass(span, \"show\");\r\n                this.util.removeClass(span, \"hide\");\r\n            }\r\n            return;\r\n        }\r\n        else {\r\n            if (span) {\r\n                this.util.removeClass(span, \"show\");\r\n                this.util.addClass(span, \"hide\");\r\n            }\r\n            //check if validationRegex is set and is fulfilled\r\n            var validationRegex = this.ccsdk.survey.questionsToDisplay[this.qIndex].validationRegex;\r\n            if (validationRegex) {\r\n                window.ccsdkDebug ? console.log('validationRegex', validationRegex) : '';\r\n                window.ccsdkDebug ? console.log('response', this.qResponse) : '';\r\n                var pattern = validationRegex.match(new RegExp('^/(.*?)/([gimy]*)$'));\r\n                var regex = new RegExp(validationRegex);\r\n                if (this.qResponse.text) {\r\n                    if (regex.test(this.qResponse.text)) {\r\n                        this.util.removeClass(validationSpan, \"show\");\r\n                        this.util.addClass(validationSpan, \"hide\");\r\n                    }\r\n                    else {\r\n                        if (validationSpan) {\r\n                            this.util.addClass(validationSpan, \"show\");\r\n                            this.util.removeClass(validationSpan, \"hide\");\r\n                        }\r\n                        return;\r\n                    }\r\n                }\r\n                else if (this.qResponse.number) {\r\n                    window.ccsdkDebug ? console.log('test regex text', regex.test(this.qResponse.number)) : '';\r\n                    if (regex.test(this.qResponse.number)) {\r\n                        this.util.removeClass(validationSpan, \"show\");\r\n                        this.util.addClass(validationSpan, \"hide\");\r\n                    }\r\n                    else {\r\n                        if (validationSpan) {\r\n                            this.util.addClass(validationSpan, \"show\");\r\n                            this.util.removeClass(validationSpan, \"hide\");\r\n                        }\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            if (this.qResponse !== 'undefined') {\r\n                // (window as any).ccsdkDebug?console.log('qindex ' + this.qIndex):'';\r\n                if (typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined'\r\n                    && this.qResponse.type == this.ccsdk.survey.answers[this.currentQuestionId].type\r\n                    && this.qResponse.text == this.ccsdk.survey.answers[this.currentQuestionId].text\r\n                    && this.qResponse.number == this.ccsdk.survey.answers[this.currentQuestionId].number) {\r\n                    // console.log('no submit');\r\n                    //don't submit if already submitted.\r\n                }\r\n                else if (typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined'\r\n                    && !this.qResponse.text\r\n                    && !this.qResponse.number) {\r\n                    // console.log('no submit 2');\r\n                    //previous entry filled\r\n                }\r\n                else {\r\n                    // (window as any).ccsdkDebug?console.log('submitting ' + this.currentQuestionId):'';\r\n                    // console.log(this.qResponse);\r\n                    var qId = this.qResponse.questionId ? this.qResponse.questionId : this.currentQuestionId;\r\n                    this.submitQuestion(this.qIndex, this.qResponse, this.qResponse.type, qId);\r\n                    //save response\r\n                    this.ccsdk.survey.answers[this.currentQuestionId] = JSON.parse(JSON.stringify(this.qResponse));\r\n                }\r\n            }\r\n        }\r\n        ConditionalFlowFilter_1.ConditionalFlowFilter.filterQuestion(this.ccsdk.survey, this.ccsdk.survey.questionsToDisplay[this.qIndex]);\r\n        // console.log(this.ccsdk.survey.questionsToDisplay);\r\n        //go to next question\r\n        this.qIndex++;\r\n        //reset the post parameters\r\n        // this.qResponse = typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined' ? JSON.parse(JSON.stringify(this.ccsdk.survey.answers[this.currentQuestionId])) : {};\r\n        // this.qResponse = {};\r\n        var nextButtonState = 'initial';\r\n        // (window as any).ccsdkDebug?console.log(this.$questionContainer):'';\r\n        var nextQ = this.$questionContainer;\r\n        // (window as any).ccsdkDebug?console.log(this.qIndex):'';\r\n        if (this.qIndex == this.ccsdk.survey.questionsToDisplay.length) {\r\n            //Last run to show thank you message\r\n            var leftIcon = this.util.get('.act-cc-button-prev');\r\n            var rightIcon = this.util.get('.cc-icon-right');\r\n            var nextIcon = this.util.get('.act-cc-button-next');\r\n            this.util.addClassAll(leftIcon, 'hide');\r\n            this.util.addClassAll(rightIcon, 'hide');\r\n            this.util.addClassAll(nextIcon, 'hide');\r\n            this.util.trigger(document, 'ccdone', undefined);\r\n            this.util.removeClass(this.$questionContainer[0].firstChild, 'show-slide');\r\n            this.updateProgress();\r\n        }\r\n        else {\r\n            if ((this.qIndex > this.ccsdk.survey.questionsToDisplay.length)) {\r\n                //reset the counter to show first question\r\n                this.qIndex = 0;\r\n            }\r\n            //repopulate qResponse based on answers.\r\n            // ( window as any ).ccsdkDebug ? console.log( 'previous answer', this.ccsdk.survey.answers[ this.currentQuestionId ] ) : '';\r\n            this.qResponse = typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined' ? JSON.parse(JSON.stringify(this.ccsdk.survey.answers[this.currentQuestionId])) : {};\r\n            // this.util.removeClassAll(this.$questionContainer[0].firstChild, 'show-slide');\r\n            // this.util.addClass(nextQ, 'show-slide');\r\n            this.updateProgress();\r\n            this.loadQuestionSpecifics(nextQ, this.qIndex);\r\n            this.util.addClass(this.$questionContainer[0].firstChild, 'show-slide');\r\n            // if(nextButtonState === 'dirty'){\r\n            // this.submitQuestion(this.qIndex, 'test', 'multiline');\r\n            // }\r\n        }\r\n        if (this.qIndex == 0) {\r\n            var leftIcon = this.util.get('.act-cc-button-prev');\r\n            this.util.addClassAll(leftIcon, 'hide-slide');\r\n        }\r\n        else {\r\n            var leftIcon = this.util.get('.act-cc-button-prev');\r\n            this.util.addClass(leftIcon[0], 'show-slide');\r\n            this.util.removeClass(leftIcon[0], 'hide-slide');\r\n        }\r\n        // ( window as any ).ccsdkDebug ? console.log( 'next question q response end', this.qResponse ) : '';\r\n        // this.qResponse = {};\r\n    };\r\n    DomSurvey.prototype.prevQuestion = function () {\r\n        this.qIndex--;\r\n        if (!this.ccsdk.survey.questionsToDisplay.length || this.qIndex < 0) {\r\n            this.qIndex = 0;\r\n            return;\r\n            // this.qIndex = this.$questionContainer.length - 1;\r\n        }\r\n        // ( window as any ).ccsdkDebug ? console.log( this.qIndex ) : '';\r\n        var onSurveyQuestionEvent = new CustomEvent(Constants_1.Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken);\r\n        document.dispatchEvent(onSurveyQuestionEvent);\r\n        //re populate qResponse based on answers.\r\n        // this.util.removeClassAll(this.$questionContainer,'show-slide');\r\n        this.loadQuestionSpecifics(null, this.qIndex);\r\n        this.qResponse = typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined' ? JSON.parse(JSON.stringify(this.ccsdk.survey.answers[this.currentQuestionId])) : {};\r\n        window.ccsdkDebug ? console.log(\"prevQuestion qResponse\", this.qResponse) : '';\r\n        this.util.addClass(this.$questionContainer[0].firstChild, 'show-slide');\r\n        this.updateProgress();\r\n        if (this.qIndex == 0) {\r\n            var leftIcon = this.util.get('.act-cc-button-prev');\r\n            this.util.addClassAll(leftIcon, 'hide-slide');\r\n            this.util.removeClassAll(leftIcon, 'show-slide');\r\n        }\r\n    };\r\n    DomSurvey.prototype.showLoader = function () {\r\n        var $loader = document.querySelectorAll(\".cc-loaderimg\")[0];\r\n        this.util.addClass($loader, 'show');\r\n        this.util.removeClass($loader, 'hide');\r\n    };\r\n    DomSurvey.prototype.hideLoader = function () {\r\n        var $loader = document.querySelectorAll(\".cc-loaderimg\")[0];\r\n        this.util.removeClass($loader, 'show');\r\n        this.util.addClass($loader, 'hide');\r\n    };\r\n    DomSurvey.prototype.appendInBody = function (html) {\r\n        document.querySelectorAll(\"body\")[0].insertAdjacentHTML('afterbegin', html);\r\n        //force update domSelect\r\n        this.domSelectElements();\r\n    };\r\n    DomSurvey.prototype.replaceInQuestionsContainer = function (html) {\r\n        this.$questionContainer[0].innerHTML = html;\r\n        this.domSelectElements();\r\n    };\r\n    DomSurvey.prototype.appendInQuestionsContainer = function (html) {\r\n        document.querySelectorAll(\".cc-questions-container\")[0].insertAdjacentHTML('afterbegin', html);\r\n        //force update domSelect\r\n        this.domSelectElements();\r\n    };\r\n    DomSurvey.prototype.showWelcomeContainer = function () {\r\n        var _this = this;\r\n        setTimeout(function () {\r\n            var startContainer = document.\r\n                querySelectorAll(\".act-cc-welcome-question-box\")[0];\r\n            var bodyElement = document.\r\n                getElementsByTagName(\"body\")[0];\r\n            _this.util.addClass(startContainer, \"show-slide\");\r\n            // this.util.addClass( bodyElement, \"blurr\" );\r\n        }, 200);\r\n        // console.debug()\r\n        this.$startBtn = document.querySelectorAll(\".act-cc-survey-start\")[0];\r\n    };\r\n    DomSurvey.prototype.showLanguageSelector = function () {\r\n        var _this = this;\r\n        setTimeout(function () {\r\n            var startContainer = document.\r\n                querySelectorAll(\".cc-language-selector\")[0];\r\n            var bodyElement = document.\r\n                getElementsByTagName(\"body\")[0];\r\n            _this.util.addClass(startContainer, \"show-slide\");\r\n            // this.util.addClass( bodyElement, \"blurr\" );\r\n        }, 200);\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists('.cc-language-select', this.domListeners)) {\r\n            // return;\r\n            // ( window as any ).ccsdkDebug ? console.log( \"language select - previous listeners exists\" ) : '';\r\n            this.removePrevListener('.cc-language-select');\r\n        }\r\n        var languageSelect = this.util.initListener(\"click\", \".cc-language-select\", function () {\r\n            // let onSurveyClickEvent = new CustomEvent(Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            // document.dispatchEvent(onSurveyClickEvent);\r\n            //select language show next question.\r\n            // self.startSurvey();\r\n            self.ccsdk.config.language = \"default\";\r\n            self.ccsdk.config.language = \"\"; //language selection from menu then show first question\r\n        });\r\n        languageSelect.internalHandler = this.util.listener(this.$body, languageSelect.type, languageSelect.id, languageSelect.cb);\r\n    };\r\n    DomSurvey.prototype.getSurveyContainer = function (token) {\r\n        return document.querySelectorAll(\"#\" + token + \"-survey\")[0];\r\n    };\r\n    DomSurvey.prototype.getWelcomeContainer = function (token) {\r\n        return document.querySelectorAll(\"#\" + token + \"-welcome\")[0];\r\n    };\r\n    DomSurvey.prototype.loadQuestionSpecifics = function (q, index) {\r\n        var self = this;\r\n        this.$questionContainer[0].innerHTML = \"\";\r\n        var compiledTemplate = this.ccsdk.survey.compileTemplate(this.ccsdk.survey.questionsToDisplay[index]);\r\n        // console.log( compiledTemplate );\r\n        this.$questionContainer[0].innerHTML += compiledTemplate;\r\n        var qType = this.$questionContainer[0].firstChild.getAttribute('data-type');\r\n        var qId = this.$questionContainer[0].firstChild.getAttribute('data-id');\r\n        this.qResponse = {};\r\n        // (window as any).ccsdkDebug?console.log(\"QTYIPE AND QID \" , qType, qId):'';\r\n        this.currentQuestionId = qId.substring(2, qId.length);\r\n        // console.log( 'qtype', qType )\r\n        switch (qType) {\r\n            case 'scale':\r\n                var allOptions1 = document.querySelectorAll('#' + qId + ' .option-number-item');\r\n                var optionWidth1 = (100 / allOptions1.length) - .6;\r\n                // (window as any).ccsdkDebug?console.log(\"Option width\", allOptions1, optionWidth1.toFixed(2)):'';\r\n                // self.util.css(allOptions1 , 'width',  optionWidth1.toFixed(1) + '%');\r\n                this.setupListenersQuestionScale(index, qId);\r\n                break;\r\n            case 'nps':\r\n                this.setupListenersQuestionNPS(index, qId);\r\n                break;\r\n            case 'multiline':\r\n                this.setupListenersQuestionMultiline(index, qId);\r\n                break;\r\n            case 'select':\r\n                if (typeof this.select !== 'undefined') {\r\n                    this.select.destroyListeners();\r\n                }\r\n                this.setupListenersQuestionSelect(index, qId);\r\n                break;\r\n            case 'radio':\r\n                this.setupListenersQuestionRadio(index, qId);\r\n                break;\r\n            case 'radioImage':\r\n                this.setupListenersQuestionRadioImage(index, qId);\r\n                break;\r\n            case 'checkbox':\r\n                this.setupListenersQuestionCheckbox(index, qId);\r\n                break;\r\n            case 'star':\r\n                this.setupListenersQuestionStar(index, qId);\r\n                break;\r\n            case 'smile':\r\n                this.setupListenersQuestionSmile(index, qId);\r\n                break;\r\n            case 'csat':\r\n                this.setupListenersQuestionCsat(index, qId);\r\n                break;\r\n            case 'slider':\r\n                this.setupListenersQuestionSlider(index, qId);\r\n                break;\r\n            case 'singleline':\r\n                this.setupListenersQuestionSingleline(index, qId);\r\n                break;\r\n            case 'number':\r\n                this.setupListenersQuestionNumber(index, qId);\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n    // question specific listeners\r\n    DomSurvey.prototype.setupListenersQuestionScale = function (index, qId) {\r\n        var self = this;\r\n        var selectedRating = document.querySelectorAll('#' + qId + ' .cc-nps-selected-rating')[0];\r\n        var selectedRating1 = document.querySelectorAll('#' + qId + ' .cc-nps-selected-rating')[1];\r\n        //add id too.\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .option-number-item', this.domListeners)) {\r\n            // return;\r\n            // ( window as any ).ccsdkDebug ? console.log( \"scale question - previous listeners exists\" ) : '';\r\n            this.removePrevListener('#' + qId + ' .option-number-item');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        // ( window as any ).ccsdkDebug ? console.log( 'scale question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            var previousSelection = document.querySelectorAll('#' + qId + ' .option-number-item[data-rating=\"' + previousValue + '\"]')[0];\r\n            // ( window as any ).ccsdkDebug ? console.log( 'scale previous selection', previousSelection ) : '';\r\n            if (typeof previousSelection !== 'undefined') {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                self.qResponse.type = 'scale';\r\n                self.qResponse.text = null;\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.questionId = qId;\r\n                selectedRating.innerHTML = previousValue;\r\n                selectedRating1.innerHTML = previousValue;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('click', '#' + qId + ' .option-number-item', function () {\r\n            var allOptions = document.querySelectorAll('#' + qId + ' .option-number-item');\r\n            var rating = this.getAttribute('data-rating');\r\n            self.util.removeClassAll(allOptions, \"selected\");\r\n            self.util.addClass(this, \"selected\");\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Scale selected',rating):'';\r\n            self.qResponse.type = 'scale';\r\n            self.qResponse.text = null;\r\n            self.qResponse.number = rating;\r\n            self.qResponse.questionId = qId;\r\n            selectedRating.innerHTML = '' + rating;\r\n            selectedRating1.innerHTML = '' + rating;\r\n            //move to next question automagically\r\n            // alert('calling next questions inside scale');\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n            // self.util.trigger(document,'q-answered', {\r\n            //   index : index,\r\n            //   rating : rating,\r\n            //   type : 'scale'\r\n            // });\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionNPS = function (index, qId) {\r\n        var self = this;\r\n        var selectedRating = document.querySelectorAll('#' + qId + ' .cc-nps-selected-rating')[0];\r\n        var allOptions = document.querySelectorAll('#' + qId + ' .option-number-item');\r\n        //add id too.\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .option-number-item', this.domListeners)) {\r\n            //remove listeners\r\n            // ( window as any ).ccsdkDebug ? console.log( \"nps question - previous listeners exists\" ) : '';\r\n            this.removePrevListener('#' + qId + ' .option-number-item');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('nps question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            var previousSelection = document.querySelectorAll('#' + qId + ' .option-number-item[data-rating=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug ? console.log('nps previous selection', previousSelection) : '';\r\n            if (typeof previousSelection !== 'undefined') {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                var $mobileRating = document.querySelectorAll(\".act-cc-nps-selected-rating\")[0];\r\n                $mobileRating.innerHTML = previousValue;\r\n                self.qResponse.type = 'nps';\r\n                self.qResponse.text = null;\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        // (window as any).ccsdkDebug?console.log(self.domListeners):'';\r\n        var ref = this.util.initListener('click', '#' + qId + ' .option-number-item', function () {\r\n            var rating = this.getAttribute('data-rating');\r\n            self.util.removeClassAll(allOptions, \"selected\");\r\n            self.util.addClass(this, \"selected\");\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Scale selected',rating):'';\r\n            self.qResponse.type = 'nps';\r\n            self.qResponse.text = null;\r\n            self.qResponse.number = rating;\r\n            self.qResponse.questionId = qId;\r\n            selectedRating.innerHTML = '' + rating;\r\n            //move to next question automagically\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            // alert('calling next questions inside scale');\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n            // self.util.trigger(document,'q-answered', {\r\n            //   index : index,\r\n            //   rating : rating,\r\n            //   type : 'scale'\r\n            // });\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionCheckbox = function (index, qId) {\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .cc-checkbox', this.domListeners)) {\r\n            // return;\r\n            window.ccsdkDebug ? console.log(\"checkbox question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + ' .cc-checkbox');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('radio question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValues = this.ccsdk.survey.answers[questionId].text;\r\n            if (previousValues) {\r\n                previousValues = previousValues.split(',');\r\n                for (var _i = 0, previousValues_1 = previousValues; _i < previousValues_1.length; _i++) {\r\n                    var previousValue = previousValues_1[_i];\r\n                    var previousSelection = document.querySelectorAll('#' + qId + ' input[value=\"' + previousValue + '\"]')[0];\r\n                    window.ccsdkDebug ? console.log('radio previous selection', previousSelection) : '';\r\n                    if (typeof previousSelection !== 'undefined') {\r\n                        this.util.addClass(previousSelection, \"selected\");\r\n                        previousSelection.setAttribute('checked', 'checked');\r\n                        self.qResponse.type = 'checkbox';\r\n                        self.qResponse.text = previousValue;\r\n                        self.qResponse.number = null;\r\n                        self.qResponse.questionId = qId;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        var ref = this.util.initListener('click', '#' + qId + ' .cc-checkbox', function () {\r\n            // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox input');\r\n            // let rating : number = this.querySelectorAll('input')[0].value;\r\n            var rating = [].filter.call(document.querySelectorAll('#' + qId + ' .cc-checkbox input'), function (c) {\r\n                return c.checked;\r\n            }).map(function (c) {\r\n                return c.value;\r\n            }).join(',');\r\n            window.ccsdkDebug ? console.log('Checkbox selected', rating) : '';\r\n            self.qResponse.type = 'checkbox';\r\n            self.qResponse.text = rating;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n            //move to next question automagically\r\n            // self.nextQuestion();\r\n        });\r\n        this.domListeners.push(ref);\r\n        var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n        document.dispatchEvent(onSurveyClickEvent);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionRadio = function (index, qId) {\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .cc-checkbox input', this.domListeners)) {\r\n            // return;\r\n            //remove listeners\r\n            window.ccsdkDebug ? console.log(\"radio question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + ' .cc-checkbox input');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('radio question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].text;\r\n            var previousSelection = document.querySelectorAll('#' + qId + ' input[value=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug ? console.log('radio previous selection', previousSelection) : '';\r\n            if (typeof previousSelection !== 'undefined') {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                previousSelection.setAttribute('checked', 'checked');\r\n                self.qResponse.type = 'radio';\r\n                self.qResponse.text = previousValue;\r\n                self.qResponse.number = null;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('click', '#' + qId + ' .cc-checkbox input', function () {\r\n            // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox');\r\n            var rating = this.value;\r\n            // self.util.removeClassAll(allOptions, \"selected\");\r\n            // self.util.addClass(this, \"selected\");\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\r\n            self.qResponse.type = 'radio';\r\n            self.qResponse.text = rating;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            //move to next question automagically\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionRadioImage = function (index, qId) {\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .cc-checkbox input', this.domListeners)) {\r\n            window.ccsdkDebug ? console.log(\"radio image question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + ' .cc-checkbox input');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('radio image question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].text;\r\n            var previousSelection = document.querySelectorAll('#' + qId + ' input[value=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug ? console.log('radio image previous selection', previousSelection) : '';\r\n            if (typeof previousSelection !== 'undefined') {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                previousSelection.setAttribute('checked', 'checked');\r\n                self.qResponse.type = 'radioImage';\r\n                self.qResponse.text = previousValue;\r\n                self.qResponse.number = null;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('click', '#' + qId + ' .cc-checkbox input', function () {\r\n            // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox');\r\n            var rating = this.value;\r\n            // self.util.removeClassAll(allOptions, \"selected\");\r\n            // self.util.addClass(this, \"selected\");\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\r\n            self.qResponse.type = 'radioImage';\r\n            self.qResponse.text = rating;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            //move to next question automagically\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionStar = function (index, qId) {\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .option-star-box', this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug ? console.log(\"smile question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + ' .option-star-box');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('star question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            var previousSelection = document.querySelectorAll('#' + qId + ' .option-star-box[data-rating=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug ? console.log('star previous selection', previousSelection) : '';\r\n            if (typeof previousSelection !== 'undefined' && previousSelection != null) {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                self.qResponse.type = 'star';\r\n                self.qResponse.text = null;\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('click', '#' + qId + ' .option-star-box', function () {\r\n            var allOptions = document.querySelectorAll('#' + qId + ' .option-star-box');\r\n            var rating = this.getAttribute('data-rating');\r\n            self.util.removeClassAll(allOptions, \"selected\");\r\n            self.util.addClass(this, \"selected\");\r\n            //select previous sibling\r\n            // let child : any = this.previousSibling;\r\n            // while( ( child = child.previousSibling) != null ){\r\n            //   self.util.addClass(child, \"selected\");\r\n            // }\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\r\n            self.qResponse.type = 'star';\r\n            self.qResponse.text = null;\r\n            self.qResponse.number = rating;\r\n            self.qResponse.questionId = qId;\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            //move to next question automagically\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionSmile = function (index, qId) {\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .option-smile-box', this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug ? console.log(\"smile question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + ' .option-smile-box');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('smile question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            var previousSelection = document.querySelectorAll('#' + qId + ' .option-smile-box[data-rating=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug ? console.log('smile previous selection', previousSelection) : '';\r\n            if (typeof previousSelection !== 'undefined' && previousSelection != null) {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                self.qResponse.type = 'smile';\r\n                self.qResponse.text = null;\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('click', '#' + qId + ' .option-smile-box', function () {\r\n            var allOptions = document.querySelectorAll('#' + qId + ' .option-smile-box');\r\n            var rating = this.getAttribute('data-rating');\r\n            self.util.removeClassAll(allOptions, \"selected\");\r\n            self.util.addClass(this, \"selected\");\r\n            //select previous siblings\r\n            // let child : any = this.previousSibling;\r\n            // while( ( child = child.previousSibling) != null ){\r\n            //   self.util.addClass(child, \"selected\");\r\n            // }\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Smile selected',rating):'';\r\n            self.qResponse.type = 'smile';\r\n            self.qResponse.text = null;\r\n            self.qResponse.number = rating;\r\n            self.qResponse.questionId = qId;\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            //move to next question automagically\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionCsat = function (index, qId) {\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .option-smile-box', this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug ? console.log(\"csat question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + ' .option-smile-box');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('csat question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            var previousSelection = document.querySelectorAll('#' + qId + ' .option-smile-box[data-rating=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug ? console.log('csat previous selection', previousSelection) : '';\r\n            if (typeof previousSelection !== 'undefined' && previousSelection != null) {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                previousSelection.querySelectorAll(\"input\")[0].setAttribute('checked', 'checked');\r\n                self.qResponse.type = 'smile';\r\n                self.qResponse.text = null;\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('click', '#' + qId + ' .option-smile-box', function () {\r\n            var allOptions = document.querySelectorAll('#' + qId + ' .option-smile-box');\r\n            var rating = this.getAttribute('data-rating');\r\n            self.util.removeClassAll(allOptions, \"selected\");\r\n            self.util.addClass(this, \"selected\");\r\n            this.querySelectorAll(\"input\")[0].setAttribute('checked', 'checked');\r\n            var child = this.previousSibling;\r\n            while ((child = child.previousSibling) != null) {\r\n                // (window as any).ccsdkDebug?console.log('questionscale', 'previousSiblings', child):'';\r\n                self.util.addClass(child, \"selected\");\r\n            }\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Smile selected',rating):'';\r\n            self.qResponse.type = 'smile';\r\n            self.qResponse.text = null;\r\n            self.qResponse.number = rating;\r\n            self.qResponse.questionId = qId;\r\n            console.log('dispatching event in csat', this);\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            //move to next question automagically\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionMultiline = function (index, qId) {\r\n        var self = this;\r\n        var multilineRes = '';\r\n        if (this.util.checkIfListenerExists('#' + qId, this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug ? console.log(\"multiine question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId);\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('multiine question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].text;\r\n            window.ccsdkDebug ? console.log('multiine input box', document.querySelectorAll('#' + qId)[0]) : '';\r\n            var previousSelection = document.querySelectorAll('#' + qId)[0];\r\n            window.ccsdkDebug ? console.log('multiine previous selection', previousSelection) : '';\r\n            window.ccsdkDebug ? console.log('multiine previous value', previousValue) : '';\r\n            if (typeof previousSelection !== 'undefined' &&\r\n                previousSelection != null &&\r\n                typeof previousValue !== 'undefined') {\r\n                previousSelection.value = previousValue;\r\n                self.qResponse.type = 'multiline';\r\n                self.qResponse.text = previousValue;\r\n                self.qResponse.number = null;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('change', '#' + qId, function () {\r\n            multilineRes = this.value;\r\n            self.qResponse.type = 'multiline';\r\n            self.qResponse.text = multilineRes;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionSingleline = function (index, qId) {\r\n        var self = this;\r\n        var singlelineRes = '';\r\n        if (this.util.checkIfListenerExists('#' + qId, this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug ? console.log(\"singleline question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId);\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('singleline question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].text;\r\n            window.ccsdkDebug ? console.log('singleline input box', document.querySelectorAll('#' + qId)[0]) : '';\r\n            var previousSelection = document.querySelectorAll('#' + qId)[0];\r\n            window.ccsdkDebug ? console.log('singleline previous selection', previousSelection) : '';\r\n            window.ccsdkDebug ? console.log('singleline previous value', previousValue) : '';\r\n            if (typeof previousSelection !== 'undefined' &&\r\n                previousSelection != null &&\r\n                typeof previousValue !== 'undefined') {\r\n                previousSelection.value = previousValue;\r\n                self.qResponse.type = 'singleline';\r\n                self.qResponse.text = previousValue;\r\n                self.qResponse.number = null;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('change', '#' + qId, function () {\r\n            singlelineRes = this.value;\r\n            self.qResponse.type = 'singleline';\r\n            self.qResponse.text = singlelineRes;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n        // console.log( 'singleline qResponse', self.qResponse );\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionNumber = function (index, qId) {\r\n        var self = this;\r\n        var numberRes = '';\r\n        if (this.util.checkIfListenerExists('#' + qId, this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug ? console.log(\"number question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId);\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('number question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            window.ccsdkDebug ? console.log('number input box', document.querySelectorAll('#' + qId)[0]) : '';\r\n            var previousSelection = document.querySelectorAll('#' + qId)[0];\r\n            window.ccsdkDebug ? console.log('number previous selection', previousSelection) : '';\r\n            window.ccsdkDebug ? console.log('number previous value', previousValue) : '';\r\n            if (typeof previousSelection !== 'undefined' &&\r\n                previousSelection != null &&\r\n                typeof previousValue !== 'undefined') {\r\n                previousSelection.value = previousValue;\r\n                self.qResponse.type = 'number';\r\n                self.qResponse.text = null;\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('change', '#' + qId, function () {\r\n            numberRes = this.value;\r\n            self.qResponse.type = 'number';\r\n            self.qResponse.text = null;\r\n            self.qResponse.number = numberRes;\r\n            self.qResponse.questionId = qId;\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionSlider = function (index, qId) {\r\n        var self = this;\r\n        var sliderRes = '';\r\n        var slider = new Slider_1.Slider();\r\n        var sliderInput = document.querySelectorAll('#' + qId + \" input\")[0];\r\n        if (this.util.checkIfListenerExists('#' + qId + \" input\", this.domListeners)) {\r\n            // return;\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('slider question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            window.ccsdkDebug ? console.log('slider input box', document.querySelectorAll('#' + qId)[0]) : '';\r\n            var previousSelection = document.querySelectorAll('#' + qId + \" .act-slider-tip\")[0];\r\n            window.ccsdkDebug ? console.log('slider previous selection', previousSelection) : '';\r\n            window.ccsdkDebug ? console.log('slider previous value', previousValue) : '';\r\n            if (typeof previousSelection !== 'undefined' &&\r\n                previousSelection != null &&\r\n                typeof previousValue !== 'undefined') {\r\n                previousSelection.innerHTML = previousValue;\r\n                sliderInput.value = previousValue;\r\n                self.qResponse.type = 'slider';\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.text = null;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener(\"change\", '#' + qId + \" input\", function () {\r\n            sliderRes = this.value;\r\n            self.qResponse.type = 'slider';\r\n            self.qResponse.number = sliderRes;\r\n            self.qResponse.text = null;\r\n            self.qResponse.questionId = qId;\r\n            //move to next question automagically\r\n            // self.nextQuestion();\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionSelect = function (index, qId) {\r\n        var self = this;\r\n        var questionId;\r\n        window.ccsdkDebug ? console.log('select que', this.domListeners) : '';\r\n        questionId = qId.substring(2, qId.length);\r\n        // (window as any).ccsdkDebug?console.log(this.ccsdk.survey.answers[questionId]):'';\r\n        // (window as any).ccsdkDebug?console.log(this.ccsdk.survey.surveyAnswers[questionId]):'';\r\n        if (this.util.checkIfListenerExists('#' + qId + \" .cc-select-options .cc-select-option\", this.domListeners)) {\r\n            window.ccsdkDebug ? console.log('select que listner exists') : '';\r\n            this.removePrevListener('#' + qId + \" .cc-select-options .cc-select-option\");\r\n            // return;\r\n        }\r\n        window.ccsdkDebug ? console.log('select que') : '';\r\n        // if(!self.util.arrayContains.call(self.trackSelects, qId)){\r\n        window.ccsdkDebug ? console.log('select que initialize select') : '';\r\n        self.select = new Select_1.Select(qId);\r\n        self.select.destroyListeners();\r\n        self.select.init(qId);\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            if (this.ccsdk.survey.answers[questionId].text) {\r\n                var question = this.ccsdk.survey.getQuestionById(questionId);\r\n                self.select.setValue(this.ccsdk.survey.answers[questionId].text, question, this.ccsdk.survey);\r\n                self.select.selectOptions(this.ccsdk.survey.answers[questionId].text);\r\n                self.qResponse.type = 'select';\r\n                self.qResponse.text = this.ccsdk.survey.answers[questionId].text;\r\n                self.qResponse.number = null;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        self.trackSelects.push(qId);\r\n        // }\r\n        var selectRes = '';\r\n        var ref = this.util.initListener('click', '#' + qId + \" .cc-select-options .cc-select-option\", function () {\r\n            // selectRes = this.getAttribute('data-value');\r\n            selectRes = document.querySelectorAll('#' + qId + \" .cc-select-trigger\")[0].getAttribute('data-selection-value');\r\n            // (window as any).ccsdkDebug?console.log(selectRes):'';\r\n            self.qResponse.type = 'select';\r\n            self.qResponse.text = selectRes;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n            //move to next question automagically\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            // self.nextQuestion();\r\n        });\r\n        // this.util.removeListener(this.$body, ref.type, listener.internalHandler);    \r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    // addListenersNextButtonSubmit(index : number, data : any, type : string){\r\n    //   let self : DomSurvey = this;\r\n    //   let btnNext = self.util.get('.act-cc-button-next')[0];\r\n    //   self.util.on('click', btnNext, this.submitQuestion(\r\n    //     index, data, type\r\n    //   ));\r\n    //\r\n    // }\r\n    // removeListenersNextButtonSubmit(index : number, data : any, type : string){\r\n    //   let self : DomSurvey = this;\r\n    //   let btnNext = self.util.get('.act-cc-button-next');\r\n    //   self.util.on('click', btnNext, this.submitQuestion(\r\n    //     index, data, type\r\n    //   ));\r\n    //   self.util.off('click', btnNext, this.submitQuestion(\r\n    //     index, data, type\r\n    //   ));\r\n    // }\r\n    DomSurvey.prototype.submitQuestion = function (index, data, type, qId) {\r\n        // (window as any).ccsdkDebug?console.log('type', type ,'res',data):'';\r\n        this.util.trigger(document, 'q-answered', {\r\n            index: index,\r\n            data: data,\r\n            type: type,\r\n            questionId: qId.substring(2, qId.length)\r\n        });\r\n    };\r\n    return DomSurvey;\r\n}());\r\nexports.DomSurvey = DomSurvey;\r\n\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar DomUtilities_1 = __webpack_require__(0);\r\nvar Theme = /** @class */ (function () {\r\n    function Theme(brandColor, time) {\r\n        this.util = new DomUtilities_1.DomUtilities();\r\n        this.brandColorDark = this.util.shadeBlendConvert(-0.3, brandColor, undefined);\r\n        this.brandColorWhite = this.util.shadeBlendConvert(0.1, brandColor, undefined);\r\n        var css = \"\\n\\t\\t.cc-sdk #progressBar{\\n\\t\\t\\tbackground : \" + this.brandColorDark + \";\\n\\t\\t}\\n\\t\\t.cc-sdk #progress-line{ \\n\\t\\t\\tbackground: \" + brandColor + \";\\n\\t\\t}\\n\\t\\t.cc-sdk .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:before {\\n\\t\\t\\tbackground:\" + brandColor + \";\\n\\t\\t}\\n\\t\\t.ccsdk-overlay.glass{\\n\\t\\t\\tbackground-color:\" + this.util.hexToRGB(brandColor, .5) + \";\\n\\t\\t}\\n\\t\\t.cc-sdk .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:after {\\n\\t\\t\\tborder-color: #fff;\\n\\t\\t}\\n\\t\\t.cc-sdk .cc-checkbox input[type=\\\"radio\\\"]:checked + label:before {\\n\\t\\t\\tborder-color: \" + brandColor + \";\\n\\t\\t}\\n\\t\\t.cc-sdk .cc-checkbox input[type=\\\"radio\\\"]:checked + label:before {\\n\\t\\t\\tborder-color: \" + brandColor + \";\\n\\t\\t}\\n\\t\\t.cc-sdk .cc-checkbox input[type=\\\"radio\\\"]:checked + label:after {\\n\\t\\t\\tbackground: \" + brandColor + \";\\n\\t\\t}\\n\\t\\t.cc-sdk .cc-sdk-form-control:focus {\\n\\t\\t\\tborder-color: \" + brandColor + \";\\n\\t\\t}\\n\\t\\t.cc-sdk .cc-message-box__btn{\\n\\t\\t\\tbackground: \" + brandColor + \";\\n\\t\\t\\tcolor:#fff;\\n\\t\\t}\\n\\t\\t\\t.cc-sdk .submit-icon{\\n\\t\\t\\t\\tbackground-image: url(\\\"data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%2747px%27%20height%3D%2747px%27%20viewBox%3D%270%200%2047%2047%27%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%3E%3Ctitle%3EGroup%2016%3C%2Ftitle%3E%3Cdesc%3ECreated%20with%20Sketch.%3C%2Fdesc%3E%3Cdefs%3E%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%3Cfilter%20x%3D%27-18.1%25%27%20y%3D%27-12.9%25%27%20width%3D%27136.2%25%27%20height%3D%27136.2%25%27%20filterUnits%3D%27objectBoundingBox%27%20id%3D%27filter-2%27%3E%3CfeOffset%20dx%3D%270%27%20dy%3D%272%27%20in%3D%27SourceAlpha%27%20result%3D%27shadowOffsetOuter1%27%3E%3C%2FfeOffset%3E%3CfeGaussianBlur%20stdDeviation%3D%272%27%20in%3D%27shadowOffsetOuter1%27%20result%3D%27shadowBlurOuter1%27%3E%3C%2FfeGaussianBlur%3E%3CfeColorMatrix%20values%3D%270%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200.116423234%200%27%20type%3D%27matrix%27%20in%3D%27shadowBlurOuter1%27%3E%3C%2FfeColorMatrix%3E%3C%2Ffilter%3E%3C%2Fdefs%3E%3Cg%20id%3D%27Page-1%27%20stroke%3D%27none%27%20stroke-width%3D%271%27%20fill%3D%27none%27%20fill-rule%3D%27evenodd%27%3E%3Cg%20id%3D%271-copy-20%27%20transform%3D%27translate(-1246.000000%2C%20-664.000000)%27%3E%3Cg%20id%3D%27Group-16%27%20transform%3D%27translate(1250.000000%2C%20666.000000)%27%3E%3Cg%20id%3D%27Oval-4%27%3E%3Cuse%20fill%3D%27white%27%20fill-opacity%3D%271%27%20filter%3D%27url(%23filter-2)%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3Cuse%20fill%3D%27\" + encodeURIComponent(brandColor) + \"%27%20fill-rule%3D%27evenodd%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3C%2Fg%3E%3Cg%20id%3D%27Group-5%27%20transform%3D%27translate(12.000000%2C%2011.000000)%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23FFFFFF%27%3E%3Cg%20id%3D%27fast-forward-arrows%27%20transform%3D%27translate(6.173934%2C%200.000000)%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3Cg%20id%3D%27fast-forward-arrows-copy%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\\\");\\n\\t\\t\\t}\\n\\t\\t\\t[dir=\\\"rtl\\\"].cc-sdk .submit-icon{\\n\\t\\t\\t\\tbackground-image: url(\\\"data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%2747px%27%20height%3D%2747px%27%20viewBox%3D%270%200%2047%2047%27%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%3E%0A%20%20%20%20%3Cdesc%3ECreated%20with%20Sketch.%3C%2Fdesc%3E%0A%20%20%20%20%3Cdefs%3E%3C%2Fdefs%3E%0A%20%20%20%20%3Cg%20id%3D%27Page-1%27%20stroke%3D%27none%27%20stroke-width%3D%271%27%20fill%3D%27none%27%20fill-rule%3D%27evenodd%27%3E%0A%20%20%20%20%20%20%20%20%3Cg%20id%3D%27Submit_Icon%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27Oval-4%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27path-1-link%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23white%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27path-1-link%27%20fill%3D%27\" + encodeURIComponent(brandColor) + \"%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27Group-5%27%20transform%3D%27translate(12.000000%2C%2011.000000)%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23ffffff%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27fast-forward-arrows%27%20transform%3D%27translate(11.173934%2C%208.500000)%20scale(-1%2C%201)%20translate(-11.173934%2C%20-8.500000)%20translate(6.173934%2C%200.000000)%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27fast-forward-arrows-copy%27%20transform%3D%27translate(5.000000%2C%208.500000)%20scale(-1%2C%201)%20translate(-5.000000%2C%20-8.500000)%20%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%3C%2Fg%3E%0A%3C%2Fsvg%3E\\\");\\n\\t\\t\\t}\\n\\t\\t\\t.cc-sdk .cc-question-container__required-label{\\n\\t\\t\\tcolor: \" + brandColor + \";\\n\\t\\t}\\n\\t\\t.cc-sdk input[type=\\\"range\\\"]::-webkit-slider-runnable-track{\\n\\t\\t\\tbackground: \" + brandColor + \" !important;\\n\\t\\t\\t   background: -moz-linear-gradient(-45deg, \" + brandColor + \" 0%, \" + this.brandColorDark + \" 100%)!important;\\n\\t\\t\\t   background: -webkit-linear-gradient(-45deg, \" + brandColor + \"' 0%,\" + this.brandColorDark + \" 100%)!important;\\n\\t\\t\\t   background: linear-gradient(135deg, \" + brandColor + \" 0%,\" + this.brandColorDark + \" 100%)!important;\\n\\t\\t\\t   filter: progid:DXImageTransform.Microsoft.gradient( startColorstr=\" + brandColor + \", endColorstr=\" + this.brandColorDark + \",GradientType=1 );\\n\\t\\t   }\\n\\t\\t.cc-sdk input[type=\\\"range\\\"]::-moz-range-track {\\n\\t\\t\\tbackground: \" + brandColor + \" !important;\\n\\t\\t\\tbackground: -moz-linear-gradient(-45deg, \" + brandColor + \" 0%, \" + this.brandColorDark + \" 100%)!important;\\n\\t\\t\\tbackground: -webkit-linear-gradient(-45deg, \" + brandColor + \" 0%, \" + this.brandColorDark + \" 100%)!important;\\n\\t\\t\\tbackground: linear-gradient(135deg, \" + brandColor + \" 0%,\" + this.brandColorDark + \" 100%)!important;\\n\\t\\t\\tfilter: progid:DXImageTransform.Microsoft.gradient( startColorstr=\" + brandColor + \", endColorstr=\" + this.brandColorDark + \",GradientType=1 );\\n\\t\\t}\\n\\t\\t   .cc-sdk input[type=\\\"range\\\"]::-webkit-slider-thumb{\\n\\t\\t\\tborder: 1px solid \" + brandColor + \" ;\\n\\t\\t\\tbackground-color: #fff;\\n\\t\\t   }\\n\\t\\t   .cc-sdk input[type=\\\"range\\\"]::-moz-range-thumb {\\n\\t\\t\\tborder: 1px solid \" + brandColor + \" ;\\n\\t\\t\\tbackground-color: #fff;\\n\\t\\t   }\\n\\t\\t   .cc-sdk svg.timer circle {\\n\\t\\t\\tanimation: countdown \" + time + \"s linear 1 forwards;\\n\\t\\t\\tstroke: \" + brandColor + \";\\n\\t\\t   }\\n\\t\\t   .cc-sdk input[type=range].selected::-webkit-slider-thumb {\\n\\t\\t\\t\\tbackground-color: \" + brandColor + \";\\n\\t\\t\\t}\\n\\t\\t\\t.cc-sdk input[type = range].selected::-moz - range - thumb {\\n\\t\\t\\t\\tbackground-color: \" + brandColor + \";\\n\\t\\t\\t}\\n\\t\\t\\t.cc-sdk .cc-checkbox label:hover:before{\\n\\t\\t\\t\\tborder: solid 1px \" + brandColor + \";\\n\\t\\t\\t}\\n\\t\\t @media (max-width: 768px){\\n\\t \\t\\t\\t.ccsdk-overlay.glass{\\n\\t \\t\\t\\tbackground-color:rgba(255,255,255,.85);\\n\\t \\t\\t\\tbackground-image:none;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t.cc-sdk.cc-popup-container{\\n\\t\\t\\t\\t\\tbackground-color : transparent;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t.cc-sdk.cc-popup-container .ccsdk-overlay.glass{\\n\\t\\t\\t\\t\\tbackground-color : \" + this.util.hexToRGB(brandColor, .9) + \";\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t.cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text{\\n\\t\\t\\t\\t\\tcolor:#fff;\\n\\t\\t\\t\\t}\\n\\t\\t\";\r\n        this.util.appendStyle(css);\r\n    }\r\n    return Theme;\r\n}());\r\nexports.Theme = Theme;\r\n\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar DomUtilities_1 = __webpack_require__(0);\r\nvar Slider = /** @class */ (function () {\r\n    function Slider() {\r\n        this.inputRange = document.getElementsByClassName('cc-sdk-range')[0];\r\n        this.rangeTip = this.inputRange.parentNode.querySelectorAll(\".act-slider-tip\")[0];\r\n        this.util = new DomUtilities_1.DomUtilities();\r\n        //  this.maxValue = 100; // the higher the smoother when dragging\r\n        this.speed = 5;\r\n        // set min/max value\r\n        // this.inputRange.min = 0;\r\n        this.inputRange.min = this.inputRange.getAttribute('min');\r\n        // this.inputRange.max = this.maxValue;\r\n        this.inputRange.max = this.inputRange.getAttribute('max');\r\n        this.setupListeners();\r\n    }\r\n    Slider.prototype.setupListeners = function () {\r\n        var self = this;\r\n        // bind events\r\n        this.inputRange.addEventListener('mouseup', this.clearTo, false);\r\n        // move gradient\r\n        this.inputRange.addEventListener('input', function () {\r\n            self.updateRangeTip();\r\n            self.util.addClass(this, 'selected');\r\n            //Change slide thumb color on way up\r\n            if (this.value > 20) {\r\n                self.inputRange.classList.add('ltpurple');\r\n            }\r\n            if (this.value > 40) {\r\n                self.inputRange.classList.add('purple');\r\n            }\r\n            if (this.value > 60) {\r\n                self.inputRange.classList.add('pink');\r\n            }\r\n            //Change slide thumb color on way down\r\n            if (this.value < 20) {\r\n                self.inputRange.classList.remove('ltpurple');\r\n            }\r\n            if (this.value < 40) {\r\n                self.inputRange.classList.remove('purple');\r\n            }\r\n            if (this.value < 60) {\r\n                self.inputRange.classList.remove('pink');\r\n            }\r\n        });\r\n    };\r\n    Slider.prototype.updateRangeTip = function () {\r\n        var self = this;\r\n        this.rangeTip.style.display = 'block';\r\n        this.rangeTip.innerHTML = this.inputRange.value;\r\n    };\r\n    Slider.prototype.clearTo = function () {\r\n        clearTimeout(this.timeout);\r\n    };\r\n    // listen for unlock\r\n    // unlockStartHandler() {\r\n    //   let self : any = this;\r\n    //   // clear raf if trying again\r\n    //   window.cancelAnimationFrame(this.rafID);\r\n    //   // set to desired value\r\n    //   this.currValue = +self.value;\r\n    // }\r\n    // unlockEndHandler() {\r\n    //   // store current value\r\n    //   this.currValue = + this.value;\r\n    //   // determine if we have reached success or not\r\n    //   if(this.currValue >= this.maxValue) {\r\n    //      this.successHandler();\r\n    //   }\r\n    //   else {\r\n    //      this.rafID = window.requestAnimationFrame(this.animateHandler);\r\n    //   }\r\n    // }\r\n    // handle range animation\r\n    Slider.prototype.animateHandler = function () {\r\n        // calculate gradient transition\r\n        var transX = this.currValue - this.maxValue;\r\n        // update input range\r\n        this.inputRange.value = this.currValue;\r\n        //Change slide thumb color on mouse up\r\n        if (this.currValue < 20) {\r\n            this.inputRange.classList.remove('ltpurple');\r\n        }\r\n        if (this.currValue < 40) {\r\n            this.inputRange.classList.remove('purple');\r\n        }\r\n        if (this.currValue < 60) {\r\n            this.inputRange.classList.remove('pink');\r\n        }\r\n        // determine if we need to continue\r\n        if (this.currValue > -1) {\r\n            window.requestAnimationFrame(this.animateHandler);\r\n        }\r\n        // decrement value\r\n        this.currValue = this.currValue - this.speed;\r\n    };\r\n    // handle successful unlock\r\n    Slider.prototype.successHandler = function () {\r\n    };\r\n    return Slider;\r\n}());\r\nexports.Slider = Slider;\r\n\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n//Manages trigger.\r\nvar Cookie_1 = __webpack_require__(2);\r\nvar Constants_1 = __webpack_require__(1);\r\n//collect initial data\r\n//if on site time is null, add on site time\r\nif (Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerSiteStartTime) == null) {\r\n    Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerSiteStartTime, new Date(), undefined, undefined);\r\n}\r\n//always add on page Time\r\nCookie_1.Cookie.set(Constants_1.Constants.CCTriggerPageStartTime, new Date(), undefined, undefined);\r\nvar sitePageViewCount = Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerSitePageViewCount);\r\nif (sitePageViewCount == null) {\r\n    Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerSitePageViewCount, 1, undefined, undefined);\r\n}\r\nelse {\r\n    sitePageViewCount = (parseInt(sitePageViewCount) + 1).toString();\r\n    Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerSitePageViewCount, sitePageViewCount, undefined, undefined);\r\n}\r\nvar individualPageViewCount = Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerIndividualPageViewCount);\r\nif (individualPageViewCount == null) {\r\n    Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerIndividualPageViewCount, 1, undefined, window.location.href);\r\n}\r\nelse {\r\n    individualPageViewCount = (parseInt(individualPageViewCount) + 1).toString();\r\n    Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerIndividualPageViewCount, individualPageViewCount, undefined, window.location.href);\r\n}\r\nwindow.click = 0;\r\nwindow.onscroll = function (e) {\r\n    // called when the window is scrolled.  \r\n    var doc = document.documentElement;\r\n    var left = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);\r\n    var top = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\r\n    window.ccsdkTopOffset = top;\r\n    TriggerManager.processScrollTriggers(top);\r\n};\r\ndocument.onclick = function (e) {\r\n    window.click++;\r\n};\r\n//TriggerManager adds to survey Queue\r\nvar TriggerManager = /** @class */ (function () {\r\n    function TriggerManager() {\r\n        //initialize triggers\r\n        //add those triggers which aren't completed yet.\r\n    }\r\n    TriggerManager.addSurvey = function (surveyId, trigger) {\r\n        TriggerManager.triggerInstances[surveyId] = trigger;\r\n        if (Object.keys(TriggerManager.triggerInstances).length >= 1) {\r\n            window.ccsdkDebug ? console.log(TriggerManager.triggerInterval) : '';\r\n            if (TriggerManager.triggerInterval == null) {\r\n                window.ccsdkDebug ? console.log(\"TriggerHandler : Setting up Interval Trigger Handlers.\") : '';\r\n                TriggerManager.triggerInterval = setInterval(TriggerManager.processIntervalTriggers, 1000);\r\n            }\r\n            //processing sequential triggers if any.\r\n            // console.log(\"TriggerHandler : Processing sequential triggers for  \" + surveyId);\r\n            // TriggerManager.processTriggersBySurveyId(surveyId);\r\n        }\r\n    };\r\n    TriggerManager.removeSurvey = function (surveyId) {\r\n        delete TriggerManager.triggerInstances[surveyId];\r\n        if (Object.keys(TriggerManager.triggerInstances).length == 0) {\r\n            clearInterval(TriggerManager.triggerInterval);\r\n        }\r\n    };\r\n    TriggerManager.processIntervalTriggers = function () {\r\n        //if some survey is already running skip processing surveys for now?or queue it?.\r\n        Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerPageElapsedTime, new Date(), undefined, window.location.href);\r\n        Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerSiteElapsedTime, new Date(), undefined, undefined);\r\n        //set cookies and call every process Interval Triggers.\r\n        for (var trigger in TriggerManager.triggerInstances) {\r\n            TriggerManager.triggerInstances[trigger].processIntervalTriggers();\r\n            TriggerManager.triggerInstances[trigger].processConditionalTriggers();\r\n        }\r\n    };\r\n    TriggerManager.processScrollTriggers = function (scrollNow) {\r\n        for (var trigger in TriggerManager.triggerInstances) {\r\n            //process all scroll triggers.\r\n            TriggerManager.triggerInstances[trigger].processScrollTriggers(scrollNow);\r\n        }\r\n    };\r\n    TriggerManager.disableTriggers = function (surveyId) {\r\n        TriggerManager.triggerInstances[surveyId].disableTriggers();\r\n    };\r\n    TriggerManager.triggerInterval = null;\r\n    TriggerManager.triggerInstances = {};\r\n    return TriggerManager;\r\n}());\r\nexports.TriggerManager = TriggerManager;\r\n;\r\n\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Cookie_1 = __webpack_require__(2);\r\nvar Constants_1 = __webpack_require__(1);\r\nvar SurveyManager_1 = __webpack_require__(3);\r\nvar TriggerUtils_1 = __webpack_require__(51);\r\nvar Triggers = /** @class */ (function () {\r\n    function Triggers(ccsdk) {\r\n        this.ccsdk = ccsdk;\r\n        this.pageCountTrigger = false;\r\n        this.siteCountTrigger = false;\r\n        this.pageTimeTrigger = false;\r\n        this.siteTimeTrigger = false;\r\n        this.urlParamTrigger = false;\r\n        this.notUrlParamTrigger = false;\r\n        this.utmParamTrigger = false;\r\n        this.scrollPixelsTrigger = false;\r\n        //disable all triggers.\r\n        this.pageCountTriggerEnabled = false;\r\n        this.siteCountTriggerEnabled = false;\r\n        this.pageTimeTriggerEnabled = false;\r\n        this.siteTimeTriggerEnabled = false;\r\n        this.urlParamTriggerEnabled = false;\r\n        this.notUrlParamTriggerEnabled = false;\r\n        this.utmParamTriggerEnabled = false;\r\n        this.scrollPixelsTriggerEnabled = false;\r\n        this.conditionalTriggers = {};\r\n    }\r\n    Triggers.prototype.enableClickTrigger = function (target, cb) {\r\n        var item = document.querySelectorAll(target)[0];\r\n        if (typeof item !== 'undefined') {\r\n            item.addEventListener('click', cb);\r\n        }\r\n    };\r\n    Triggers.prototype.enablePageCountTrigger = function (minPageCount) {\r\n        this.minPageCount = minPageCount;\r\n        this.pageCountTriggerEnabled = true;\r\n        this.TriggerPopUpByPageCount();\r\n    };\r\n    Triggers.prototype.enableSiteCountTrigger = function (minSiteCount) {\r\n        this.minSiteCount = minSiteCount;\r\n        this.pageCountTriggerEnabled = true;\r\n        this.TriggerPopUpByPageCount();\r\n    };\r\n    Triggers.prototype.enablePageTimeTrigger = function (minPageTime) {\r\n        this.minPageTime = minPageTime;\r\n        this.pageTimeTriggerEnabled = true;\r\n        this.TriggerPopUpByTimeSpentOnPage();\r\n    };\r\n    Triggers.prototype.enableSiteTimeTrigger = function (minSiteTime) {\r\n        this.minSiteTime = minSiteTime;\r\n        this.siteTimeTriggerEnabled = true;\r\n        this.TriggerPopUpByTimeSpentOnSite();\r\n    };\r\n    Triggers.prototype.enablePopUpByURLPatternTrigger = function (urlPattern) {\r\n        this.inUrl = urlPattern;\r\n        this.urlParamTriggerEnabled = true;\r\n        this.TriggerPopUpByURLPattern();\r\n    };\r\n    Triggers.prototype.enablePopUpByNotURLPatternTrigger = function (urlPattern) {\r\n        this.notinUrl = urlPattern;\r\n        this.notUrlParamTriggerEnabled = true;\r\n        this.TriggerPopUpByNotURLPattern();\r\n    };\r\n    Triggers.prototype.enablePopUpByUTMPatternTrigger = function (urlPattern) {\r\n        this.utm = urlPattern;\r\n        this.utmParamTriggerEnabled = true;\r\n        this.TriggerPopUpByUTMParameter();\r\n    };\r\n    Triggers.prototype.enableScrollPixelsTrigger = function (minScrollPixels) {\r\n        this.minScrollPixels = minScrollPixels;\r\n        this.scrollPixelsTriggerEnabled = true;\r\n    };\r\n    Triggers.prototype.processIntervalTriggers = function () {\r\n        //if survey already launched\r\n        //skip processing.\r\n        if (this.ccsdk.surveyRunning || this.ccsdk.surveyDone) {\r\n            return;\r\n        }\r\n        this.TriggerPopUpByTimeSpentOnPage();\r\n        this.TriggerPopUpByTimeSpentOnSite();\r\n    };\r\n    Triggers.prototype.setConditionalTriggers = function (config) {\r\n        window.ccsdkDebug ? console.log(config.grepURL) : '';\r\n        //\r\n        if ((typeof config.click !== 'undefined') && (config.click != 0)) {\r\n            this.conditionalTriggers.click = config.click;\r\n        }\r\n        if ((typeof config.onExitDetect !== 'undefined')) {\r\n            this.conditionalTriggers.onExitDetect = config.onExitDetect;\r\n        }\r\n        // if ((typeof config.cssSelector !== 'undefined')) {\r\n        //   this.conditionalTriggers.cssSelector = config.cssSelector;\r\n        // }\r\n        if ((typeof config.waitSeconds !== 'undefined') && (config.waitSeconds !== 0)) {\r\n            this.conditionalTriggers.waitSeconds = config.waitSeconds;\r\n        }\r\n        if ((typeof config.scrollPercent !== 'undefined') && (config.scrollPercent !== 0)) {\r\n            this.conditionalTriggers.scrollPercent = config.scrollPercent;\r\n        }\r\n        if ((typeof config.grepInvertURL !== 'undefined') && (config.grepInvertURL)) {\r\n            this.conditionalTriggers.grepInvertURL = config.grepInvertURL;\r\n        }\r\n        if ((typeof config.grepURL !== 'undefined') && (config.grepURL)) {\r\n            this.conditionalTriggers.grepURL = config.grepURL;\r\n        }\r\n    };\r\n    Triggers.prototype.processConditionalTriggers = function () {\r\n        //gather all conditional triggers and process them.\r\n        var self = this;\r\n        var isEnabled = true;\r\n        if (this.ccsdk.surveyRunning || this.ccsdk.surveyDone) {\r\n            window.ccsdkDebug ? console.log('returning') : '';\r\n            return;\r\n        }\r\n        if (typeof this.conditionalTriggers !== 'undefined') {\r\n            if (Object.keys(this.conditionalTriggers).length == 0) {\r\n                return false;\r\n            }\r\n            for (var conditionalTrigger in this.conditionalTriggers) {\r\n                if (this.conditionalTriggers[conditionalTrigger] != null) {\r\n                    switch (conditionalTrigger) {\r\n                        case \"onExitDetect\":\r\n                            var onExitDetect = self.ccsdk.util.initListener(\"mouseout\", \"document\", function () {\r\n                                window.ccsdkDebug ? console.log(\"Mouse out\") : '';\r\n                            });\r\n                            onExitDetect.internalHandler = self.ccsdk.util.listener(document, onExitDetect.type, onExitDetect.id, onExitDetect.cb);\r\n                            break;\r\n                        case \"click\":\r\n                            //find click count on screen\r\n                            //calculate click count\r\n                            // if((window as any).click > this.conditionalTriggers.click) {\r\n                            //   return SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n                            // }\r\n                            isEnabled = isEnabled && (window.click >= this.conditionalTriggers.click);\r\n                            break;\r\n                        case \"waitSeconds\":\r\n                            var pageStartTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerPageStartTime)).getTime();\r\n                            var pageTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerPageElapsedTime)).getTime();\r\n                            isEnabled = isEnabled && TriggerUtils_1.TriggerUtils.checkTimeCondition(pageTime, pageStartTime, this.conditionalTriggers[conditionalTrigger]);\r\n                            window.ccsdkDebug ? console.log('waitSeconds enabled', isEnabled) : '';\r\n                            break;\r\n                        case \"scrollPercent\":\r\n                            //fill it with current scroll position\r\n                            isEnabled = isEnabled && TriggerUtils_1.TriggerUtils.checkScroll(window.ccsdkTopOffset, this.conditionalTriggers[conditionalTrigger]);\r\n                            window.ccsdkDebug ? console.log('scrollPercent enabled', isEnabled) : '';\r\n                            break;\r\n                        case \"grepURL\":\r\n                            isEnabled = isEnabled && TriggerUtils_1.TriggerUtils.checkInUrl(this.conditionalTriggers[conditionalTrigger]);\r\n                            window.ccsdkDebug ? console.log('grepURL enabled', isEnabled) : '';\r\n                            break;\r\n                        case \"grepInvertURL\":\r\n                            isEnabled = isEnabled && !TriggerUtils_1.TriggerUtils.checkInUrl(this.conditionalTriggers[conditionalTrigger]);\r\n                            window.ccsdkDebug ? console.log('grepInvertURL enabled', isEnabled) : '';\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            if (isEnabled) {\r\n                if (this.ccsdk && this.ccsdk.tracking) {\r\n                    this.ccsdk.tracking.trackEvent('Popped Up', {\r\n                        token: this.ccsdk.tracking.token,\r\n                        data: {\r\n                            name: null,\r\n                            action: null\r\n                        }\r\n                    }, null, null);\r\n                }\r\n                SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n            }\r\n        }\r\n        else {\r\n            //do nothing.\r\n        }\r\n    };\r\n    Triggers.prototype.processNonConditionalTriggers = function () {\r\n        //process all non conditional one shot triggers here?\r\n    };\r\n    Triggers.prototype.processScrollTriggers = function (scrollNow) {\r\n        this.TriggerPopUpByScrollPixels(scrollNow);\r\n    };\r\n    Triggers.prototype.TriggerPopUpByPageCount = function () {\r\n        var pageCount = parseInt(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerSitePageViewCount));\r\n        if (pageCount == NaN) {\r\n            pageCount = 0;\r\n        }\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.pageCountTrigger && TriggerUtils_1.TriggerUtils.checkPageCount(pageCount, this.minPageCount)) {\r\n            this.pageCountTrigger = true;\r\n            //displayQuestion\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n        else {\r\n            //already executed.\r\n            //or condition not satisified yet.\r\n        }\r\n    };\r\n    //minPageTime in seconds\r\n    Triggers.prototype.TriggerPopUpByTimeSpentOnPage = function () {\r\n        var pageStartTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerPageStartTime)).getTime();\r\n        var pageTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerPageElapsedTime)).getTime();\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.pageTimeTrigger && TriggerUtils_1.TriggerUtils.checkTimeCondition(pageTime, pageStartTime, this.minPageTime)) {\r\n            this.pageTimeTrigger = true;\r\n            //displayQuestion\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n        else {\r\n            //already executed.\r\n            //or condition not satisified yet.\r\n        }\r\n    };\r\n    Triggers.prototype.TriggerPopUpByTimeSpentOnSite = function () {\r\n        var siteStartTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerSiteStartTime)).getTime();\r\n        var siteTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerSiteElapsedTime)).getTime();\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.siteTimeTrigger && TriggerUtils_1.TriggerUtils.checkTimeCondition(siteTime, siteStartTime, this.minSiteTime)) {\r\n            this.siteTimeTrigger = true;\r\n            //displayQuestion\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n        else {\r\n            //already executed.\r\n            //or condition not satisified yet.\r\n        }\r\n    };\r\n    Triggers.prototype.TriggerPopUpByInactivity = function () {\r\n    };\r\n    Triggers.prototype.TriggerPopUpByScrollPixels = function (scrollNow) {\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.scrollPixelsTrigger && TriggerUtils_1.TriggerUtils.checkScroll(scrollNow, this.minScrollPixels)) {\r\n            this.scrollPixelsTrigger = true;\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n            // this.ccsdk.initSurvey();\r\n            // SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n        else {\r\n            //already executed?\r\n            //or condition not satisified yet.\r\n        }\r\n    };\r\n    //run only once?\r\n    Triggers.prototype.TriggerPopUpByURLPattern = function () {\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.urlParamTrigger && TriggerUtils_1.TriggerUtils.checkInUrl(this.inUrl)) {\r\n            this.urlParamTrigger = true;\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n        else {\r\n        }\r\n    };\r\n    Triggers.prototype.TriggerPopUpByNotURLPattern = function () {\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.notUrlParamTrigger && !TriggerUtils_1.TriggerUtils.checkInUrl(this.inUrl)) {\r\n            this.notUrlParamTrigger = true;\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n        else {\r\n        }\r\n    };\r\n    Triggers.prototype.TriggerPopUpByUTMParameter = function () {\r\n        var utmP = this.utm.split(\"=\");\r\n        var utmVal = Cookie_1.Cookie.getParameterByName(utmP[0], undefined);\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.utmParamTrigger && utmVal === utmP[1]) {\r\n            this.utmParamTrigger = true;\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n    };\r\n    Triggers.prototype.resetTriggers = function () {\r\n        this.pageCountTrigger = false;\r\n        this.pageTimeTrigger = false;\r\n        this.siteTimeTrigger = false;\r\n        this.urlParamTrigger = false;\r\n        this.scrollPixelsTrigger = false;\r\n    };\r\n    return Triggers;\r\n}());\r\nexports.Triggers = Triggers;\r\n// function triggerHandler(surveyHandler) {\r\n//   //survey specific Trigger Handlers\r\n//   // self.surveyRunning = self.util.get('#' + self.surveyToken  + \"-survey\").length == 1;\r\n// Cookie.set(Constants.CCTriggerPageElapsedTime, new Date(), undefined, window.location.href);\r\n// Cookie.set(Constants.CCTriggerSiteElapsedTime, new Date(), undefined, undefined);\r\n//   surveyHandler.triggers.TriggerPopUpByTimeSpentOnSite(surveyHandler.siteInterval);\r\n//   // surveyHandler.surveyRunning = surveyHandler.util.get('#' + self.surveyToken  + \"-survey\").length == 1;\r\n//   surveyHandler.triggers.TriggerPopUpByTimeSpentOnPage(surveyHandler.pageInterval);\r\n// }\r\n//call below functions when survey is locked and loaded.\r\n// self.triggers.TriggerPopUpByURLPattern(/xyz=33/);\r\n// self.triggers.TriggerPopUpByUTMParameter();\r\n// self.triggerInterval = setInterval(self.triggerHandler, 1000, self);\r\n\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar TriggerUtils = /** @class */ (function () {\r\n    function TriggerUtils() {\r\n    }\r\n    TriggerUtils.checkInUrl = function (inUrl) {\r\n        return window.location.href.match(inUrl) != null && window.location.href.match(inUrl).length > 0;\r\n    };\r\n    TriggerUtils.checkTimeCondition = function (pageTime, pageStartTime, minPageTime) {\r\n        return Math.round((pageTime - pageStartTime) / 1000) > minPageTime;\r\n    };\r\n    TriggerUtils.checkScroll = function (scrollNow, minScrollPixels) {\r\n        return scrollNow > minScrollPixels;\r\n    };\r\n    TriggerUtils.checkPageCount = function (pageCount, minPageCount) {\r\n        return pageCount >= minPageCount;\r\n    };\r\n    return TriggerUtils;\r\n}());\r\nexports.TriggerUtils = TriggerUtils;\r\n\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Request_1 = __webpack_require__(4);\r\nvar MatomoTracker = /** @class */ (function () {\r\n    function MatomoTracker() {\r\n    }\r\n    MatomoTracker.prototype.trackEvent = function (event, payload, successCb, errorCb) {\r\n        var url = new URL('https://matomo.getcloudcherry.com/piwik.php');\r\n        // constants for project\r\n        var idsite = 4;\r\n        var rec = 1;\r\n        var searchParams = {\r\n            idsite: idsite,\r\n            rec: rec,\r\n            action_name: event,\r\n            url: window.location.href,\r\n            action_url: window.location.href,\r\n            uid: this.username,\r\n            _cvar: { '1': ['Token', payload.token] },\r\n            new_visit: event === 'Welcome Pop up Position' ? 1 : 0,\r\n            e_c: event,\r\n            e_a: payload.data.action,\r\n            e_n: payload.data.name,\r\n            rand: Math.ceil(Math.random() * 100)\r\n        };\r\n        Object.keys(searchParams).forEach(function (x) {\r\n            var param;\r\n            if (typeof searchParams[x] === 'string') {\r\n                param = searchParams[x];\r\n            }\r\n            else {\r\n                param = JSON.stringify(searchParams[x]);\r\n            }\r\n            url.searchParams.set(x, param);\r\n        });\r\n        return Request_1.RequestHelper.post(url.toString(), null, successCb, errorCb);\r\n    };\r\n    return MatomoTracker;\r\n}());\r\nexports.MatomoTracker = MatomoTracker;\r\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// cc.en.bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3738995508ff348004e5","import { templates } from '../templates';\r\nimport { Config } from '../../Config';\r\n\r\nclass DomUtilities {\r\n\r\n  sbcRip: any;\r\n\r\n  constructor() {\r\n    // HTMLElement.prototype.matches = HTMLElement.prototype.matches ||\r\n    // HTMLElement.prototype.matchesSelector ||\r\n    // HTMLElement.prototype.webkitMatchesSelector ||\r\n    // HTMLElement.prototype.mozMatchesSelector ||\r\n    // HTMLElement.prototype.msMatchesSelector ||\r\n    // HTMLElement.prototype.oMatchesSelector;\r\n  }\r\n\r\n  get( selector: string ) {\r\n    return document.querySelectorAll( selector );\r\n  }\r\n\r\n  appendStyle( css: string ): void {\r\n    let head: any = document.head || document.getElementsByTagName( 'head' )[ 0 ];\r\n    let style: any = document.createElement( 'style' );\r\n    style.type = 'text/css';\r\n    if ( style.styleSheet ) {\r\n      style.styleSheet.cssText = css;\r\n    } else {\r\n      style.appendChild( document.createTextNode( css ) );\r\n    }\r\n    head.appendChild( style );\r\n  }\r\n\r\n  remove( el: any ) {\r\n    el.parentNode.removeChild( el );\r\n  }\r\n\r\n  removeAll( elements: any ): void {\r\n    Array.prototype.forEach.call( elements, ( el, i ) => {\r\n      el.parentNode.removeChild( el );\r\n    } );\r\n  }\r\n\r\n  css( elements: any, property: string, value: any ) {\r\n    Array.prototype.forEach.call( elements, ( el, i ) => {\r\n      el.style[ property ] = value;\r\n    } );\r\n  }\r\n\r\n  removeClassAll( elements: any, className: string ): void {\r\n    Array.prototype.forEach.call( elements, ( el, i ) => {\r\n      this.removeClass( el, className );\r\n    } );\r\n  }\r\n\r\n  addClassAll( elements: any, className: string ): void {\r\n    Array.prototype.forEach.call( elements, ( el, i ) => {\r\n      this.addClass( el, className );\r\n    } );\r\n  }\r\n\r\n  removeClass( el: any, className: string ): void {\r\n    // console.log(el);\r\n    if ( !el ) {\r\n      return;\r\n    }\r\n    if ( el.classList )\r\n      el.classList.remove( className );\r\n    else\r\n      el.className = el.className.replace( new RegExp( '(^|\\\\b)' + className.split( ' ' ).join( '|' ) + '(\\\\b|$)', 'gi' ), ' ' );\r\n  }\r\n  addClass( el: any, className: string ) {\r\n    if ( !el ) {\r\n      return;\r\n    }\r\n    if ( el.classList )\r\n      el.classList.add( className );\r\n    else\r\n      el.className += ' ' + className;\r\n  }\r\n  toggleClass( el: any, className: string ): void {\r\n    if ( el.classList ) {\r\n      if ( el.classList.contains( className ) )\r\n        el.classList.remove( className );\r\n      else\r\n        el.classList.add( className );\r\n    }\r\n\r\n\r\n  }\r\n  hasClass( el: any, className: string ) {\r\n    if ( el.classList )\r\n      return el.classList.contains( className );\r\n    else\r\n      return new RegExp( '(^| )' + className + '( |$)', 'gi' ).test( el.className );\r\n  }\r\n  ready( fn: any ): void {\r\n    if ( ( <any>document ).attachEvent ? document.readyState === \"complete\" : document.readyState !== \"loading\" ) {\r\n      fn();\r\n    } else {\r\n      document.addEventListener( 'DOMContentLoaded', fn );\r\n    }\r\n  }\r\n\r\n  getParents( el: any, parentSelector: any ): any {\r\n    // If no parentSelector defined will bubble up all the way to *document*\r\n    if ( parentSelector === undefined ) {\r\n      parentSelector = document;\r\n    }\r\n\r\n    var parents = [];\r\n    var p = el.parentNode;\r\n\r\n    while ( p !== parentSelector ) {\r\n      var o = p;\r\n      parents.push( o );\r\n      p = o.parentNode;\r\n    }\r\n    parents.push( parentSelector ); // Push that parentSelector you wanted to stop at\r\n\r\n    return parents;\r\n  }\r\n\r\n  listener( el: any, evt: any, sel: any, handler: any ): any {\r\n    let selectorMatches = function ( el, selector ) {\r\n      var p = Element.prototype;\r\n      var f = p.matches || p.webkitMatchesSelector || ( <any>p ).mozMatchesSelector || ( <any>p ).msMatchesSelector || function ( s ) {\r\n        return [].indexOf.call( document.querySelectorAll( s ), this ) !== -1;\r\n      };\r\n      return f.call( el, selector );\r\n    }\r\n    let internalHandler = function ( event ) {\r\n      var t = event.target;\r\n      while ( t && t !== this ) {\r\n        if ( selectorMatches( t, sel ) ) {\r\n          handler.call( t, event );\r\n        }\r\n        t = t.parentNode;\r\n      }\r\n    };\r\n    el.addEventListener( evt, internalHandler );\r\n    return internalHandler;\r\n  }\r\n\r\n\r\n\r\n\r\n  initListener( type: string, id: string, cb: any ) {\r\n    let ref: any = {\r\n      id: id,\r\n      type: type,\r\n      cb: cb,\r\n      internalHandler: undefined,\r\n    };\r\n    return ref;\r\n  }\r\n\r\n  checkIfListenerExists( id: string, ar: any ): boolean {\r\n    for ( let listener of ar ) {\r\n      if ( listener.id == id ) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  on( evt: any, el: any, handler: any ) {\r\n    el.addEventListener( evt, handler );\r\n  }\r\n  off( evt: any, el: any, handler: any ) {\r\n    el.removeEventListener( evt, handler );\r\n  }\r\n  removeListener( el: any, evt: any, handler: any ) {\r\n    el.removeEventListener( evt, handler );\r\n  }\r\n  removeAllListeners( ar: any ): boolean {\r\n    for ( let listener of ar ) {\r\n      this.removeListener( document.querySelectorAll( \"body\" )[ 0 ], listener.type, listener.internalHandler );\r\n    }\r\n    return true;\r\n  }\r\n\r\n  trigger( el: any, eventName: string, data: Object ) {\r\n    if ( typeof CustomEvent === 'function' ) {\r\n      var event = <any>new CustomEvent( eventName, { detail: data } );\r\n    } else {\r\n      var event = <any>document.createEvent( 'CustomEvent' );\r\n      event.initCustomEvent( eventName, true, true, data );\r\n    }\r\n\r\n    el.dispatchEvent( event );\r\n  }\r\n\r\n  removeTrigger( el: any, eventName: string ) {\r\n    el.removeEventListener( eventName );\r\n  }\r\n\r\n  shadeBlendConvert( p: number, from: any, to: string ): string {\r\n    if ( typeof ( p ) != \"number\" || p < -1 || p > 1 || typeof ( from ) != \"string\" || ( from[ 0 ] != 'r' && from[ 0 ] != '#' ) || ( typeof ( to ) != \"string\" && typeof ( to ) != \"undefined\" ) ) return null; //ErrorCheck\r\n    if ( !this.sbcRip ) this.sbcRip = function ( d ) {\r\n      var l = d.length, RGB = new Object();\r\n      if ( l > 9 ) {\r\n        d = d.split( \",\" );\r\n        if ( d.length < 3 || d.length > 4 ) return null;//ErrorCheck\r\n        RGB[ 0 ] = i( d[ 0 ].slice( 4 ) ), RGB[ 1 ] = i( d[ 1 ] ), RGB[ 2 ] = i( d[ 2 ] ), RGB[ 3 ] = d[ 3 ] ? parseFloat( d[ 3 ] ) : -1;\r\n      } else {\r\n        if ( l == 8 || l == 6 || l < 4 ) return null; //ErrorCheck\r\n        if ( l < 6 ) d = \"#\" + d[ 1 ] + d[ 1 ] + d[ 2 ] + d[ 2 ] + d[ 3 ] + d[ 3 ] + ( l > 4 ? d[ 4 ] + \"\" + d[ 4 ] : \"\" ); //3 digit\r\n        d = i( d.slice( 1 ), 16 ), RGB[ 0 ] = d >> 16 & 255, RGB[ 1 ] = d >> 8 & 255, RGB[ 2 ] = d & 255, RGB[ 3 ] = l == 9 || l == 5 ? r( ( ( d >> 24 & 255 ) / 255 ) * 10000 ) / 10000 : -1;\r\n      }\r\n      return RGB;\r\n    }\r\n    var i = parseInt, r = Math.round, h = from.length > 9, h = typeof ( to ) == \"string\" ? to.length > 9 ? true : to == \"c\" ? !h : false : h, b = p < 0, p = b ? p * -1 : p, to = to && to != \"c\" ? to : b ? \"#000000\" : \"#FFFFFF\", f = this.sbcRip( from ), t = this.sbcRip( to );\r\n    if ( !f || !t ) return null; //ErrorCheck\r\n    if ( h ) return \"rgb(\" + r( ( t[ 0 ] - f[ 0 ] ) * p + f[ 0 ] ) + \",\" + r( ( t[ 1 ] - f[ 1 ] ) * p + f[ 1 ] ) + \",\" + r( ( t[ 2 ] - f[ 2 ] ) * p + f[ 2 ] ) + ( f[ 3 ] < 0 && t[ 3 ] < 0 ? \")\" : \",\" + ( f[ 3 ] > -1 && t[ 3 ] > -1 ? r( ( ( t[ 3 ] - f[ 3 ] ) * p + f[ 3 ] ) * 10000 ) / 10000 : t[ 3 ] < 0 ? f[ 3 ] : t[ 3 ] ) + \")\" );\r\n    else return \"#\" + ( 0x100000000 + ( f[ 3 ] > -1 && t[ 3 ] > -1 ? r( ( ( t[ 3 ] - f[ 3 ] ) * p + f[ 3 ] ) * 255 ) : t[ 3 ] > -1 ? r( t[ 3 ] * 255 ) : f[ 3 ] > -1 ? r( f[ 3 ] * 255 ) : 255 ) * 0x1000000 + r( ( t[ 0 ] - f[ 0 ] ) * p + f[ 0 ] ) * 0x10000 + r( ( t[ 1 ] - f[ 1 ] ) * p + f[ 1 ] ) * 0x100 + r( ( t[ 2 ] - f[ 2 ] ) * p + f[ 2 ] ) ).toString( 16 ).slice( f[ 3 ] > -1 || t[ 3 ] > -1 ? 1 : 3 );\r\n  }\r\n\r\n  hexToRGB( hex: string, alpha: any ): string {\r\n    if ( !hex || [ 4, 7 ].indexOf( hex.length ) === -1 ) {\r\n      return; // throw new Error('Bad Hex');\r\n    }\r\n\r\n    hex = hex.substr( 1 );\r\n    // if shortcuts (#F00) -> set to normal (#FF0000)\r\n    if ( hex.length === 3 ) {\r\n      hex = hex.split( '' ).map( function ( el ) {\r\n        return el + el + '';\r\n      } ).join( '' );\r\n    }\r\n\r\n    var r = parseInt( hex.slice( 0, 2 ), 16 ),\r\n      g = parseInt( hex.slice( 2, 4 ), 16 ),\r\n      b = parseInt( hex.slice( 4, 6 ), 16 );\r\n\r\n    if ( alpha ) {\r\n      return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha + \")\";\r\n    } else {\r\n      return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\r\n    }\r\n  }\r\n\r\n\r\n  arrayContains( needle ) {\r\n    // Per spec, the way to identify NaN is that it is not equal to itself\r\n    var findNaN = needle !== needle;\r\n    var indexOf;\r\n\r\n    if ( !findNaN && typeof Array.prototype.indexOf === 'function' ) {\r\n      indexOf = Array.prototype.indexOf;\r\n    } else {\r\n      indexOf = function ( needle ) {\r\n        var i = -1, index = -1;\r\n\r\n        for ( i = 0; i < this.length; i++ ) {\r\n          var item = this[ i ];\r\n\r\n          if ( ( findNaN && item !== item ) || item === needle ) {\r\n            index = i;\r\n            break;\r\n          }\r\n        }\r\n\r\n        return index;\r\n      };\r\n    }\r\n\r\n    return indexOf.call( this, needle ) > -1;\r\n  }\r\n\r\n  generateSelectOptions( arr: string[], translatedArr: string[] ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let translatedOpt = ( translatedArr[ i ] || arr[ i ] ).split( ';' );\r\n        let arrOpt = arr[ i ].split( ';' );\r\n        res += '<option value=\"' + arrOpt[ 0 ] + '\">' + ( translatedOpt[ 0 ] ) + '</option>';\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n  generateLanguageSelectOptions( arr: any ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        if ( arr[ i ] == 'default' ) {\r\n          res += '<option value=\"' + arr[ i ] + '\">English (Default)</option>';\r\n        } else {\r\n          res += '<option value=\"' + arr[ i ] + '\">' + arr[ i ] + '</option>';\r\n        }\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n  checkOptionContainsImage( arr: any ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: boolean = true;\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let opt: any = arr[ i ];\r\n        res = res && ( opt.indexOf( ';' ) !== -1 ) && ( opt.indexOf( '.' ) !== -1 );\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n\r\n  generateRadioImageOptions( arr: string[], translatedArr: string[], id: string ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let optHtml: string = templates.option_radio_image;\r\n        let opt: any = arr[ i ].split( ';' )\r\n        let translatedOpt = translatedArr[ i ].split( ';' )\r\n        //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n        //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n        optHtml = optHtml.replace( /{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[ 1 ] );\r\n        optHtml = optHtml.replace( /{{qId}}/g, \"nm\" + id );\r\n        optHtml = optHtml.replace( /{{label}}/g, translatedOpt[ 0 ] );\r\n        optHtml = optHtml.replace( /{{labelFor}}/g, translatedOpt[ 0 ].replace( /\\s+/g, '-' ) );\r\n        optHtml = optHtml.replace( /{{value}}/g, opt[ 0 ] );\r\n        res += optHtml;\r\n\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n  generateRadioIgnoreImageOptions( arr: string[], translatedArr: string[], id: string ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let optHtml: string = templates.option_radio;\r\n        let opt: any = arr[ i ].split( ';' );\r\n        let translatedOpt = translatedArr[ i ].split( ';' );\r\n        //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n        //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n        optHtml = optHtml.replace( /{{qId}}/g, \"nm\" + id );\r\n        optHtml = optHtml.replace( /{{label}}/g, translatedOpt[ 0 ] );\r\n        optHtml = optHtml.replace( /{{labelFor}}/g, translatedOpt[ 0 ].replace( /\\s+/g, '-' ) );\r\n        optHtml = optHtml.replace( /{{value}}/g, opt[ 0 ] );\r\n        res += optHtml;\r\n\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n\r\n\r\n  generateRadioOptions( arr: string, translatedArr: string[], id: string ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let optHtml: string = templates.option_radio;\r\n        let opt: any = arr[ i ].split( ';' );\r\n        let translatedOpt = translatedArr[ i ].split( ';' );\r\n        optHtml = optHtml.replace( /{{qId}}/g, \"nm\" + id );\r\n        optHtml = optHtml.replace( /{{label}}/g, translatedOpt[ 0 ] );\r\n        optHtml = optHtml.replace( /{{labelFor}}/g, translatedOpt[ 0 ].replace( /\\s+/g, '-' ) );\r\n        optHtml = optHtml.replace( /{{value}}/g, opt[ 0 ] );\r\n        res += optHtml;\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n  generateCheckboxImageOptions( arr: string[], translatedArr: string[], id: string ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let optHtml: string = templates.option_checkbox_image;\r\n        let opt: any = arr[ i ].split( ';' );\r\n        let translatedOpt = translatedArr[ i ].split( ';' );\r\n        //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n        //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n        optHtml = optHtml.replace( /{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[ 1 ] );\r\n        optHtml = optHtml.replace( /{{qId}}/g, \"nm\" + id );\r\n        optHtml = optHtml.replace( /{{label}}/g, translatedOpt[ 0 ] );\r\n        optHtml = optHtml.replace( /{{labelFor}}/g, translatedOpt[ 0 ].replace( /\\s+/g, '-' ) );\r\n        optHtml = optHtml.replace( /{{value}}/g, opt[ 0 ] );\r\n        res += optHtml;\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n\r\n  generateCheckboxIgnoreImageOptions( arr: string[], translatedArr: string[], id: string ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let optHtml: string = templates.option_checkbox;\r\n        let opt: any = arr[ i ].split( ';' );\r\n        let translatedOpt = translatedArr[ i ].split( ';' );\r\n\r\n        //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n        //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n        optHtml = optHtml.replace( /{{qId}}/g, \"nm\" + id );\r\n        optHtml = optHtml.replace( /{{label}}/g, translatedOpt[ 0 ] );\r\n        optHtml = optHtml.replace( /{{labelFor}}/g, translatedOpt[ 0 ].replace( /\\s+/g, '-' ) );\r\n        optHtml = optHtml.replace( /{{value}}/g, opt[ 0 ] );\r\n        res += optHtml;\r\n\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n\r\n  generateCheckboxOptions( arr: string[], translatedArr: string[], id: string ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let optHtml: string = templates.option_checkbox;\r\n        let opt: any = arr[ i ].split( ';' );\r\n        let translatedOpt = translatedArr[ i ].split( ';' );\r\n        optHtml = optHtml.replace( /{{label}}/g, translatedOpt[ 0 ] );\r\n        optHtml = optHtml.replace( /{{labelFor}}/g, translatedOpt[ 0 ].replace( /\\s+/g, '-' ) );\r\n        optHtml = optHtml.replace( /{{value}}/g, opt[ 0 ] );\r\n\r\n        res += optHtml;\r\n\r\n      }\r\n      // console.log( res );\r\n      return res;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n//add Math.round\r\n\r\n\r\nexport { DomUtilities };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/dom/DomUtilities.ts","class Constants {\r\n  static CCTriggerPageStartTime = \"cc-trigger-page-start-time\";\r\n  static CCTriggerPageElapsedTime = \"cc-trigger-page-elapsed-time\";\r\n  static CCTriggerSiteStartTime = \"cc-trigger-site-start-time\";\r\n  static CCTriggerSiteElapsedTime = \"cc-trigger-site-elapsed-time\";\r\n  static CCTriggerSitePageViewCount = \"cc-trigger-site-page-count\";\r\n  static CCTriggerIndividualPageViewCount = \"cc-trigger-individual-page-count\";\r\n  static SURVEY_IMPRESSION_EVENT = \"onImpression\";\r\n  static SURVEY_START_EVENT = \"onStart\";\r\n  static SURVEY_DATA_EVENT = \"onData\";\r\n  static SURVEY_END_EVENT = \"onEnd\";\r\n  static SURVEY_CLOSE_EVENT = \"onClose\";\r\n  static SURVEY_QUESTION_EVENT = \"onQuestion\";\r\n  static SURVEY_ANSWER_EVENT = \"onAnswer\";\r\n  static SURVEY_CLICK_EVENT = \"onClick\";\r\n  static GRANT_TYPE = \"password\";\r\n  static AUTHORIZATION = \"Authorization\";\r\n  static AUTHORIZATION_BEARER = \"Bearer\";\r\n  static SURVEY_CLIENT = \"JS-MicroWeb\";\r\n}\r\n\r\nexport { Constants };\n\n\n// WEBPACK FOOTER //\n// ./src/Constants.ts","class Cookie {\r\n    /**\r\n     * Set/Overwrite a cookie value\r\n     *\r\n     * @param name\r\n     * @param value\r\n     * @param days      OPTIONAL Days till this cookie will stay valid. Default is current session\r\n     * @param path      OPTIONAL domain root will be used by default\r\n     */\r\n    static set(name : any, value : any, days : any, path : any) {\r\n      if (days) {\r\n          var date = new Date();\r\n              date.setTime(date.getTime()+(days*24*60*60*1000));\r\n          var expires = \"; expires=\"+date.toUTCString();\r\n      } else var expires = \"\";\r\n\r\n      var dir = path || '/';\r\n      document.cookie = name+\"=\"+value+expires+\"; path=\"+dir;\r\n  }\r\n\r\n  /**\r\n   * Retrieve a cookie value\r\n   *\r\n   * @param name\r\n   * @return String|null\r\n   */\r\n  static get(name) {\r\n      var nameEQ = name + \"=\";\r\n      var ca = document.cookie.split(';');\r\n      for(var i=0;i < ca.length;i++) {\r\n          var c = ca[i];\r\n          while (c.charAt(0)==' ') c = c.substring(1,c.length);\r\n          if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);\r\n      }\r\n      return null;\r\n  }\r\n\r\n  /**\r\n   * Remove a cookie\r\n   *\r\n   * @param name\r\n   */\r\n  static delete(name) {\r\n    Cookie.set(name,\"\",-1, undefined);\r\n  }\r\n\r\n  static getParameterByName(name : string, url : any) {\r\n    if (!url) url = window.location.href;\r\n    name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\r\n    var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\r\n        results = regex.exec(url);\r\n    if (!results) return null;\r\n    if (!results[2]) return '';\r\n    return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\r\n  }\r\n}\r\n\r\nexport { Cookie };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/Cookie.ts","\r\n//Survey Manager manages and queues survey.\r\n\r\nclass SurveyManager {\r\n\r\n  static surveyQueue: any = [];\r\n  static processQueueInterval: any = null;\r\n\r\n  static surveyInstances: any = {};\r\n\r\n  static initializeSurvey( surveyId: string ) {\r\n    //check if survey ran?\r\n    //do survey initialization.\r\n    if ( !SurveyManager.surveyInstances || !SurveyManager.surveyInstances[ surveyId ] ) {\r\n      console.error( 'Microsurvey not properly set up. Contact Support.' );\r\n      return;\r\n    }\r\n\r\n    SurveyManager.surveyInstances[ surveyId ].setupSurvey();\r\n  }\r\n\r\n  static addSurvey( surveyId ) {\r\n    ( window as any ).ccsdkDebug ? console.log( \"Adding survey ID : \" + surveyId ) : '';\r\n    SurveyManager.surveyQueue.push( surveyId );\r\n    if ( SurveyManager.processQueueInterval == null ) {\r\n      SurveyManager.processQueueInterval = setInterval( SurveyManager.processQueueIntervalCB, 100 );\r\n    }\r\n  }\r\n\r\n  static removeSurvey( surveyId ) {\r\n    if ( SurveyManager.surveyQueue.length > 0 ) {\r\n      for ( let survey in SurveyManager.surveyQueue ) {\r\n        if ( SurveyManager.surveyQueue[ survey ].surveyId == surveyId ) {\r\n          SurveyManager.surveyQueue.splice( survey, 1 );\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    if ( SurveyManager.surveyQueue.length == 0 ) {\r\n      clearInterval( SurveyManager.processQueueInterval );\r\n    }\r\n  }\r\n\r\n  static processQueueIntervalCB() {\r\n    if ( ( window as any ).globalSurveyRunning == true ) {\r\n      return;\r\n    } else {\r\n      let surveyId = SurveyManager.surveyQueue.pop();\r\n      ( window as any ).ccsdkDebug ? console.log( \"Processing survey ID \" + surveyId ) : '';\r\n      if ( surveyId == undefined ) {\r\n        clearInterval( SurveyManager.processQueueInterval );\r\n        SurveyManager.processQueueInterval = null;\r\n      } else {\r\n        ( window as any ).globalSurveyRunning = true;\r\n        SurveyManager.initializeSurvey( surveyId );\r\n      }\r\n    }\r\n  }\r\n\r\n  public static setSurveyRunning() {\r\n    ( window as any ).globalSurveyRunning = true;\r\n    ( window as any ).globalSurveyStartTime = new Date();\r\n  }\r\n\r\n  public static unsetSurveyRunning() {\r\n    ( window as any ).globalSurveyRunning = false;\r\n  }\r\n}\r\n\r\nexport { SurveyManager };\n\n\n// WEBPACK FOOTER //\n// ./src/SurveyManager.ts","// import 'whatwg-fetch';\r\n\r\nfunction makeRequest( method: string, url: string, postParams: string, headers: any, successcb: any, errorcb: any ): any {\r\n  var xhr = new XMLHttpRequest();\r\n  xhr.open( method, url );\r\n  xhr.onload = function () {\r\n    if ( ( this as any ).status >= 200 && ( this as any ).status < 300 ) {\r\n      if ( xhr.response ) {\r\n      }\r\n      let res: any = xhr.response && typeof xhr.response === 'string' && !xhr.response.match( 'GIF' ) ? JSON.parse( xhr.response ) : '';\r\n      if ( successcb ) successcb( res );\r\n    } else {\r\n      if ( errorcb ) {\r\n        errorcb( {\r\n          status: ( this as any ).status,\r\n          statusText: xhr.statusText\r\n        } );\r\n      }\r\n    }\r\n  };\r\n  xhr.onerror = function () {\r\n    if ( errorcb ) {\r\n      errorcb( {\r\n        status: ( this as any ).status,\r\n        statusText: xhr.statusText\r\n      } );\r\n    }\r\n  };\r\n  if ( headers ) {\r\n    Object.keys( headers ).forEach( function ( key ) {\r\n      xhr.setRequestHeader( key, headers[ key ] );\r\n    } );\r\n  }\r\n  // var params : any = postParams;\r\n  // We'll need to stringify if we've been given an object\r\n  // If we have a string, this is skipped.\r\n  // if (params && typeof params === 'object') {\r\n  //   params = Object.keys(params).map(function (key) {\r\n  //     return encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\r\n  //   }).join('&');\r\n  // }\r\n  xhr.send( postParams );\r\n}\r\n\r\nclass RequestHelper {\r\n\r\n  static getWithHeaders( url: string, headers: any, successcb: any, errorcb: any ) {\r\n    return makeRequest( \"GET\", url, null, headers, successcb, errorcb );\r\n  }\r\n\r\n  static postWithHeaders( url: string, data: Object, headers: any, successcb: any, errorcb: any ) {\r\n    headers[ \"Content-Type\" ] = \"application/json;charset=utf-8\";\r\n    return makeRequest( \"POST\", url, JSON.stringify( data ), headers, successcb, errorcb );\r\n\r\n  }\r\n\r\n  static get( url: string, successcb: any, errorcb: any ) {\r\n    return makeRequest( \"GET\", url, null, null, successcb, errorcb );\r\n    // let request : Request = new Request( (url as any) , new Object());\r\n    // return fetch(request).then( (response : Response) => {\r\n    //   if (response.status >= 200 && response.status < 300) {\r\n    //     return Promise.resolve(response);\r\n    //   } else {\r\n    //     var error = new Error(response.statusText);\r\n    //     // error.response = response;\r\n    //     throw error;\r\n    //   }\r\n    // }).then( (response : Response) => {\r\n    //   return response.json();\r\n    // }).catch( (error : Error) => {\r\n    //   (window as any).ccsdkDebug?console.log('Request failed ', error):'';\r\n    // });\r\n  }\r\n\r\n  /**\r\n   *\r\n   * var data = new FormData()\r\n   *  data.append('file', input.files[0])\r\n   *  data.append('user', 'hubot')\r\n   *\r\n   * @static\r\n   * @param {any} url\r\n   * @param {any} data\r\n   * @memberof Request\r\n   */\r\n  static post( url: string, data: Object, successcb: any, errorcb: any ) {\r\n    //consider, file upload?\r\n    // (window as any).ccsdkDebug?console.log(\"[\" + JSON.stringify(data) + \"]\"):'';\r\n    ( window as any ).ccsdkDebug ? console.log( \"Sending : \" + data ) : '';\r\n    return makeRequest( \"POST\", url, JSON.stringify( data ), {}, successcb, errorcb );\r\n    // let request : Request = new Request( (url as any), {\r\n    //   method : \"POST\",\r\n    //   headers : {\r\n    //     \"Content-Type\" : \"application/json; charset=utf-8\"\r\n    //   },\r\n    //   body : JSON.stringify(data)\r\n    // });\r\n    // return fetch(request).then( (response : Response) => {\r\n    //   if (response.status >= 200 && response.status < 300) {\r\n    //     return Promise.resolve(response);\r\n    //   } else {\r\n    //     let error : Error = new Error(response.statusText);\r\n    //     // error.response = response;\r\n    //     throw error;\r\n    //   }\r\n    // }).then( (response : Response) => {\r\n    //   return response.json();\r\n    // }).catch( (error : Error) => {\r\n    //   (window as any).ccsdkDebug?console.log('Request failed ', error):'';\r\n    // });\r\n  }\r\n\r\n}\r\n\r\nexport { RequestHelper };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/Request.ts","class LanguageTextFilter {\r\n\r\n    public static translateQuestionText( surveyHandler: any, question: any ) {\r\n        if ( surveyHandler.ccsdk.config.language.indexOf( 'Default' ) === -1 ) {\r\n            if ( question.translated != null &&\r\n                typeof question.translated[ surveyHandler.ccsdk.config.language ] !== 'undefined' ) {\r\n                if ( question.translated[ surveyHandler.ccsdk.config.language ].text ) {\r\n                    let qText = question.translated[ surveyHandler.ccsdk.config.language ].text.split( ':' );\r\n                    if ( question.translated[ surveyHandler.ccsdk.config.language ].text.indexOf( \":\" ) !== -1 ) {\r\n                        qText = qText[ 0 ] + ': <br><span class=\"text-normal\">' + qText[ 1 ] + '</span>';\r\n                    }\r\n                    return qText;\r\n                }\r\n                // else if ( question.translated[ surveyHandler.ccsdk.config.language ].text ) {\r\n                //     return question.translated[ surveyHandler.ccsdk.config.language ].text;\r\n                // }\r\n                // return question.translated[surveyHandler.ccsdk.config.language].text;\r\n            }\r\n        }\r\n        if ( question.text ) {\r\n            let qText = question.text.split( ':' );\r\n            if ( question.text.indexOf( \":\" ) !== -1 ) {\r\n                qText = qText[ 0 ] + ': <br><span class=\"text-normal\">' + qText[ 1 ] + '</span>';\r\n            }\r\n            return qText;\r\n        } else {\r\n            return question.text == null ? '' : question.text;\r\n        }\r\n    }\r\n\r\n    public static translateMessages( surveyHandler: any, type: string ) {\r\n        if ( surveyHandler.surveyData.translated != null && typeof surveyHandler.surveyData.translated[ surveyHandler.ccsdk.config.language ] !== 'undefined' ) {\r\n            if ( surveyHandler.ccsdk.config.language.indexOf( 'Default' ) === -1 ) {\r\n                if ( surveyHandler.surveyData.translated[ surveyHandler.ccsdk.config.language ] !== 'undefined' ) {\r\n                    if ( surveyHandler.surveyData.translated[ surveyHandler.ccsdk.config.language ][ type ] != null ) {\r\n                        return surveyHandler.surveyData.translated[ surveyHandler.ccsdk.config.language ][ type ];\r\n                    } else {\r\n                        return surveyHandler.surveyData[ type ];\r\n                    }\r\n                } else {\r\n                    return surveyHandler.surveyData[ type ];\r\n                }\r\n            } else {\r\n                return surveyHandler.surveyData[ type ];\r\n            }\r\n        }\r\n    }\r\n\r\n    public static translateDisplayLegend( surveyHandler: any, question: any ) {\r\n        if ( surveyHandler.ccsdk.config.language.indexOf( 'Default' ) === -1 ) {\r\n            if ( question.translated != null &&\r\n                typeof question.translated[ surveyHandler.ccsdk.config.language ] !== 'undefined' ) {\r\n                return question.translated[ surveyHandler.ccsdk.config.language ].displayLegend;\r\n            } else {\r\n                return question.displayLegend;\r\n            }\r\n        } else {\r\n            return question.displayLegend;\r\n        }\r\n    }\r\n\r\n    public static translateMultiSelect( surveyHandler: any, question: any ) {\r\n        if ( surveyHandler.ccsdk.config.language.indexOf( 'Default' ) === -1 ) {\r\n            if ( question.translated != null &&\r\n                typeof question.translated[ surveyHandler.ccsdk.config.language ] !== 'undefined' &&\r\n                question.translated[ surveyHandler.ccsdk.config.language ].multiSelect\r\n            ) {\r\n                let translatedOptions = question.translated[ surveyHandler.ccsdk.config.language ].multiSelect;\r\n                return question.multiSelect.map( ( x, i ) => {\r\n                    if ( translatedOptions[ i ] ) {\r\n                        return translatedOptions[ i ];\r\n                    } else {\r\n                        return x;\r\n                    }\r\n                } );\r\n            } else {\r\n                return question.multiSelect;\r\n            }\r\n        } else {\r\n            return question.multiSelect;\r\n        }\r\n    }\r\n\r\n    public static translateMultiSelectOption( surveyHandler: any, question: any, option: any ) {\r\n        let effectiveMultiselect = this.translateMultiSelect( surveyHandler, question );\r\n        if ( ( effectiveMultiselect instanceof Array ) && effectiveMultiselect.length > 0 ) {\r\n            for ( let i = 0; i < question.multiSelect.length; i++ ) {\r\n                let opt: any = question.multiSelect[ i ].split( ';' )\r\n                if ( opt[ 0 ] == option ) {\r\n                    return effectiveMultiselect[ i ].split( ';' )[ 0 ];\r\n                } else {\r\n\r\n                }\r\n            }\r\n        }\r\n        return option;\r\n    }\r\n\r\n}\r\n\r\nexport { LanguageTextFilter };\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/filters/LanguageTextFilter.ts","class Config {\r\n  static API_URL: String = \"https://api.getcloudcherry.com\";\r\n  static SURVEY_BY_TOKEN: String = \"/api/SurveyByToken/{token}/\";\r\n  // static SURVEY_BY_TOKEN : String  = \"/api/SurveyByToken/{token}/{tabletId}\";\r\n  static SURVEY_PARTIAL_RESPONSE: String = \"/api/PartialSurvey/{id}/{complete}/JS-MicroWeb\";\r\n  // static SURVEY_PARTIAL_RESPONSE : String =  \"/api/PartialSurvey/{id}/{complete}/JS-Web/{tabletId}\";\r\n  static CDN_URL: string = \"https://cx.getcloudcherry.com/\";\r\n  static CDN_ASSET_URL: string = \"https://cx.getcloudcherry.com/microsurvey-assets/\";\r\n  static POST_LOGIN_TOKEN = \"/api/LoginToken\";\r\n  static GET_SURVEY_THROTTLE_LOGIC = \"/api/SurveyThrottleLogic/{location}\";\r\n  static POST_THROTTLING = \"/api/Throttling\";\r\n  static POST_THROTTLING_ADD_ENTRIES = \"/api/Throttling/AddEntries\";\r\n  static POST_SURVEY_FINAL = \"/api/surveybytoken/{tokenId}\"\r\n  static GET_CAMPAIGN = \"/api/SurveyToken/Campaign/{token}/\"\r\n}\r\n\r\nexport { Config };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/Config.ts","import '../css/main.scss';\r\nimport * as QuestionSurvey from '../templates/Survey.html';\r\nimport * as QuestionStart from '../templates/QuestionStart.html';\r\nimport * as QuestionSingleline from '../templates/QuestionSingleline.html';\r\nimport * as QuestionNumber from '../templates/QuestionNumber.html';\r\nimport * as QuestionMultiline from '../templates/QuestionMultiline.html';\r\nimport * as QuestionCheckbox from '../templates/QuestionCheckbox.html';\r\nimport * as QuestionRadio from '../templates/QuestionRadio.html';\r\nimport * as QuestionRadioImage from '../templates/QuestionRadioImage.html';\r\nimport * as QuestionScale from '../templates/QuestionScale.html';\r\nimport * as QuestionCSATAgreement5 from '../templates/QuestionCSATAgreement5.html';\r\nimport * as QuestionCSATSatisfaction5 from '../templates/QuestionCSATSatisfaction5.html';\r\nimport * as QuestionNPS from '../templates/QuestionNPS.html';\r\nimport * as QuestionSelect from '../templates/QuestionSelect.html';\r\nimport * as QuestionMultiSelect from '../templates/QuestionMultiSelect.html';\r\nimport * as QuestionSmile from '../templates/QuestionSmile.html';\r\nimport * as QuestionSmileInverted from '../templates/QuestionSmileInverted.html';\r\nimport * as QuestionStar from '../templates/QuestionStar.html';\r\nimport * as QuestionSlider from '../templates/QuestionSlider.html';\r\nimport * as OptionRadioImage from '../templates/OptionRadioImage.html';\r\nimport * as OptionRadio from '../templates/OptionRadio.html';\r\nimport * as OptionCheckbox from '../templates/OptionCheckbox.html';\r\nimport * as OptionCheckboxImage from '../templates/OptionCheckboxImage.html';\r\nimport * as ThankYou from '../templates/ThankYou.html';\r\n\r\nimport * as LanguageSelector from '../templates/LanguageSelector.html';\r\n\r\nlet templates = {\r\n  question_survey: \"\",\r\n  question_start: \"\",\r\n  question_text: \"\",\r\n  question_number: \"\",\r\n  question_scale: \"\",\r\n  question_csat_agreement_5: \"\",\r\n  question_csat_satisfaction_5: \"\",\r\n  question_nps: \"\",\r\n  question_multi_line_text: \"\",\r\n  question_multi_select: \"\",\r\n  question_radio: \"\",\r\n  question_radio_image: \"\",\r\n  question_checkbox: \"\",\r\n  question_select: \"\",\r\n  question_smile_5: \"\",\r\n  question_smile_5_inverted: \"\",\r\n  question_star_5: \"\",\r\n  question_slider: \"\",\r\n  option_radio_image: \"\",\r\n  option_radio: \"\",\r\n  option_checkbox: \"\",\r\n  option_checkbox_image: \"\",\r\n  thankyou: \"\",\r\n  language_selector: \"\"\r\n\r\n};\r\n\r\n\r\ntemplates.question_survey = QuestionSurvey;\r\n\r\ntemplates.question_start = QuestionStart;\r\n\r\ntemplates.question_text = QuestionSingleline;\r\ntemplates.question_number = QuestionNumber;\r\n\r\n\r\ntemplates.question_scale = QuestionScale;\r\ntemplates.question_csat_agreement_5 = QuestionCSATAgreement5;\r\ntemplates.question_csat_satisfaction_5 = QuestionCSATSatisfaction5;\r\ntemplates.question_nps = QuestionNPS;\r\n\r\ntemplates.question_slider = QuestionSlider;\r\n\r\n\r\ntemplates.question_multi_line_text = QuestionMultiline;\r\n\r\n\r\ntemplates.question_multi_select = QuestionMultiSelect;\r\n\r\n\r\ntemplates.question_select = QuestionSelect;\r\n\r\n\r\ntemplates.question_smile_5 = QuestionSmile;\r\ntemplates.question_smile_5_inverted = QuestionSmileInverted;\r\n\r\ntemplates.question_star_5 = QuestionStar;\r\n\r\ntemplates.question_checkbox = QuestionCheckbox;\r\n\r\ntemplates.question_radio = QuestionRadio;\r\n\r\ntemplates.question_radio_image = QuestionRadioImage;\r\ntemplates.option_radio_image = OptionRadioImage;\r\ntemplates.option_radio = OptionRadio;\r\ntemplates.option_checkbox = OptionCheckbox;\r\ntemplates.option_checkbox_image = OptionCheckboxImage;\r\n\r\ntemplates.thankyou = ThankYou;\r\n\r\ntemplates.language_selector = LanguageSelector;\r\n\r\n\r\nexport { templates };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/templates.ts","export function isAnd( filterQuestion: any ): boolean {\r\n  if ( !filterQuestion ) {\r\n    return false;\r\n  }\r\n  if ( filterQuestion.groupBy == null || filterQuestion.groupBy.toUpperCase() == \"AND\" ) {\r\n    return true;\r\n  }\r\n}\r\n\r\nexport function isOr( filterQuestion: any ): boolean {\r\n  if ( !filterQuestion ) {\r\n    return false;\r\n  }\r\n  if ( filterQuestion.groupBy != null && filterQuestion.groupBy.toUpperCase() == \"OR\" ) {\r\n    return true;\r\n  }\r\n}\r\n\r\nexport function isNumberCheck( filterQuestion: any ): boolean {\r\n  if ( !filterQuestion ) {\r\n    return false;\r\n  }\r\n  if ( filterQuestion.answerCheck[ 0 ] === \"lt\" || filterQuestion.answerCheck[ 0 ] === \"gt\" || filterQuestion.answerCheck[ 0 ] === \"eq\" ) {\r\n    return true;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n  * Contains logic to control conditional flow and whether to show or hide the questions based on the user input\r\n  *\r\n  * @param filterQuestion\r\n  * @return\r\n  */\r\nexport function doesSatisfy( surveyHandler: any, filterQuestion: any ): boolean {\r\n  const answer = surveyHandler.getAnswerForQuestionId( filterQuestion.questionId );\r\n  if ( isNumberCheck( filterQuestion ) ) {\r\n    if ( filterQuestion.answerCheck[ 0 ].toLowerCase() == \"lt\" ) {\r\n      if ( answer != null )\r\n        if ( answer.numberInput != null && answer.numberInput < filterQuestion.number ) {\r\n          return true;\r\n        }\r\n    } else if ( filterQuestion.answerCheck[ 0 ].toLowerCase() == ( \"gt\" ) ) {\r\n      if ( answer != null )\r\n        if ( answer.numberInput != null && answer.numberInput > filterQuestion.number ) {\r\n          return true;\r\n        }\r\n    } else if ( filterQuestion.answerCheck[ 0 ].toLowerCase() == ( \"eq\" ) ) {\r\n      if ( answer != null )\r\n        if ( answer.numberInput != null && answer.numberInput == filterQuestion.number ) {\r\n          return true;\r\n        }\r\n    }\r\n  } else {\r\n    // any text match for text answers\r\n    if ( filterQuestion.answerCheck[ 0 ] && filterQuestion.answerCheck[ 0 ].toLowerCase() === 'any text' ) {\r\n      if ( answer.textInput && answer.textInput !== ' ' ) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    let iFoundAll = false;\r\n    let question = surveyHandler.getQuestionById( filterQuestion.questionId );\r\n    let questionAnswerText = answer != null && answer.textInput != null ? answer.textInput : '';\r\n    if ( !answer ) {\r\n      return false;\r\n    }\r\n    for ( let aAnswer of filterQuestion.answerCheck ) {\r\n      if ( question.displayType === 'MultiSelect' ) {\r\n        let selectedOptions = answer.textInput.split( ',' );\r\n        if ( selectedOptions.indexOf( aAnswer ) !== -1 ) {\r\n          iFoundAll = true;\r\n        }\r\n      } else if ( questionAnswerText === aAnswer ) {\r\n        iFoundAll = true;\r\n      }\r\n    }\r\n    return iFoundAll;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function questionCompare( a: any, b: any ) {\r\n  return a.sequence - b.sequence;\r\n}\r\n\r\nexport function checkLanguage(surveyHandler, fOption) {\r\n  if (surveyHandler.ccsdk.config && surveyHandler.ccsdk.config.language) {\r\n    return fOption.language === surveyHandler.ccsdk.config.language \r\n  }\r\n  return false;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/filters/filter-utils.ts","import { DomUtilities } from \"./DomUtilities\";\r\nimport {LanguageTextFilter} from '../filters/LanguageTextFilter';\r\n\r\nclass Select {\r\n  util: DomUtilities;\r\n  $body: any;\r\n  $html: any;\r\n  qId: any;\r\n  select: any;\r\n  type: string;\r\n  listeners: any = [];\r\n  constructor( qId: string ) {\r\n    this.qId = qId;\r\n  }\r\n  init( qId: string ) {\r\n    this.util = new DomUtilities();\r\n    this.$body = document.querySelectorAll( \"body\" )[ 0 ];\r\n    this.$html = document.querySelectorAll( \"html\" )[ 0 ];\r\n    var select = document.querySelectorAll( \"#\" + qId + \" .cc-select\" );\r\n\r\n    // var divSelect = document.querySelectorAll(\"div.cc-select\");\r\n    // this.util.removeAll(divSelect);\r\n    let parent = this;\r\n\r\n    //Assumption: iterating over array but there will always be one select at a time\r\n    this.type = select[ 0 ].getAttribute( 'data-type' );\r\n    Array.prototype.forEach.call( select, function ( el, i ) {\r\n      var self = el;\r\n      var $selectOptions = document.querySelectorAll( \"#\" + qId + \" .cc-select-options\" );\r\n      var classes = self.getAttribute( \"class\" ),\r\n        id = self.getAttribute( \"id\" ),\r\n        name = self.getAttribute( \"name\" );\r\n      var template = '<div class=\"' + classes + '\">';\r\n      template += '<span class=\"cc-select-trigger\">' + self.getAttribute( \"placeholder\" ) + '</span>';\r\n      template += '<div class=\"cc-select-options-container\" cc-scrollbar-container><div class=\"cc-select-options\">';\r\n      var options = self.querySelectorAll( \"option\" );\r\n      Array.prototype.forEach.call( options, function ( el, i ) {\r\n        template += '<span class=\"cc-select-option ' + el.getAttribute( \"class\" ) + '\" data-value=\"' + el.getAttribute( \"value\" ) + '\">' + el.innerHTML + '</span>';\r\n      } );\r\n      template += '</div></div></div>';\r\n      parent.util.addClass( self, 'hide' );\r\n      self.insertAdjacentHTML( 'afterend', template );\r\n    } );\r\n    this.setupListeners();\r\n  }\r\n\r\n\r\n  setupListeners() {\r\n    var self = this;\r\n    var qId = self.qId;\r\n    let ref2 = this.util.initListener( 'click', \"#\" + qId + \" .cc-select-option\", function ( e ) {\r\n      // let ref2 = this.util.initListener(this.$body, \"click\", \"#\"+qId+\" .cc-select-option\", function(e) {\r\n      ( window as any ).ccsdkDebug ? console.log( 'click cc-select-option', this ) : '';\r\n      let selfOption = this;\r\n      let value = this.getAttribute( 'data-value' );\r\n      //select cc-select-wrapper\r\n      //todo: write a function to directly select parent via selector\r\n      let selectOptions = this.parentNode;\r\n      let select = selectOptions.parentNode.parentNode;\r\n      this.select = select;\r\n      let selectWrapper = select.parentNode;\r\n      ( window as any ).ccsdkDebug ? console.log( select ) : '';\r\n      ( window as any ).ccsdkDebug ? console.log( selectOptions ) : '';\r\n      ( window as any ).ccsdkDebug ? console.log( selectWrapper ) : '';\r\n      let selectionTrigger = select.querySelectorAll( '.cc-select-trigger' )[ 0 ];\r\n\r\n      self.util.addClass( this, \"selection\" );\r\n      let selectedOptionText = selectionTrigger.textContent;\r\n      let selectedValueText = selectionTrigger.getAttribute( 'data-selection-value' ) || '';\r\n\r\n      ( window as any ).ccsdkDebug ? console.log( 'select type', self.type ) : '';\r\n      if ( self.type !== 'multiple' ) {\r\n        ( window as any ).ccsdkDebug ? console.log( 'select type', self.type ) : '';\r\n        selectedOptionText = selfOption.textContent;\r\n        ( window as any ).ccsdkDebug ? console.log( 'selected option', selectedOptionText ) : '';\r\n        self.util.removeClassAll( document.querySelectorAll( \".cc-select\" ), \"opened\" );\r\n        selectionTrigger.setAttribute( 'data-selection-value', value );\r\n        selectWrapper.querySelectorAll( \"select\" )[ 0 ].value = value;\r\n        selectionTrigger.textContent = selectedOptionText;\r\n        self.util.removeClassAll( document.querySelectorAll( \"#\" + qId + \" .cc-select-option\" ), 'selection' );\r\n        self.util.addClass( self, 'selection' );\r\n      } else {\r\n        ( window as any ).ccsdkDebug ? console.log( selectedOptionText ) : '';\r\n        if ( selectedOptionText != 'Select' ) {\r\n            selectedOptionText = self.addOrRemoveFromList(selectedOptionText, selfOption.textContent);\r\n            selectedValueText = self.addOrRemoveFromList(selectedValueText, value);\r\n        } else {\r\n          ( window as any ).ccsdkDebug ? console.log( selfOption.textContent ) : '';\r\n          selectedOptionText = selfOption.textContent;\r\n          selectedValueText = value;\r\n        }\r\n\r\n        selectWrapper.querySelectorAll( \"select\" )[ 0 ].value = selectedValueText;\r\n        selectionTrigger.setAttribute( 'data-selection-value', selectedValueText );\r\n        self.util.removeClassAll( document.querySelectorAll( \"#\" + qId + \" .cc-select-option\" ), 'selection' );        \r\n        self.selectOptions(selectedValueText);\r\n        \r\n        selectedValueText\r\n        if ( selectedOptionText.length < 1 ) {\r\n          selectionTrigger.textContent = 'Select';\r\n        } else {\r\n          selectionTrigger.textContent = selectedOptionText;\r\n        }\r\n        return false;\r\n\r\n      }\r\n\r\n    } );\r\n    this.listeners.push( ref2 );\r\n    ref2.internalHandler = this.util.listener( this.$body, ref2.type, ref2.id, ref2.cb );\r\n    let ref = this.util.initListener( 'click', \"#\" + qId + \" .cc-select-trigger\", function ( e ) {\r\n      self.$html.addEventListener( 'click', function ( e ) {\r\n        if ( !self.util.hasClass( e.target, 'cc-select-option' ) ) {\r\n          self.util.removeClassAll( document.querySelectorAll( \".cc-select\" ), \"opened\" );\r\n          self.$html.removeEventListener( 'click', function () {\r\n          } );\r\n        }\r\n      } )\r\n      var ccSelect = this.parentNode;\r\n      ( window as any ).ccsdkDebug ? console.log( 'click cc-select-trigger', ccSelect ) : '';\r\n      self.util.toggleClass( ccSelect, \"opened\" );\r\n      e.stopPropagation();\r\n    } );\r\n    this.listeners.push( ref );\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n\r\n  }\r\n\r\n  destroyListeners() {\r\n    for ( let listener of this.listeners ) {\r\n      this.util.removeListener( this.$body, listener.type, listener.internalHandler );\r\n    }\r\n    return true;\r\n  }\r\n\r\n\r\n  setValue( value: string, question, surveyHandler ) {\r\n    let self = this;\r\n    let qId = self.qId;\r\n    let select: any;\r\n\r\n    select = document.querySelectorAll( \"#\" + qId + \" select\" )[ 0 ];\r\n    select.value = value;\r\n    let selectTrigger = document.querySelectorAll( \"#\" + qId + \" .cc-select-trigger\" )[ 0 ];\r\n    let selectedValueList = value.split(',');\r\n    let translatedSelection = selectedValueList.map(x => LanguageTextFilter.translateMultiSelectOption(surveyHandler, question, x) );\r\n    selectTrigger.textContent = translatedSelection.join(',');\r\n    selectTrigger.setAttribute('data-selection-value', value);\r\n  }\r\n\r\n  selectOption( el: any ) {\r\n    this.util.addClass( el, 'selection' );\r\n  }\r\n\r\n  removeOption(el){\r\n    this.util.removeClass(el, 'selection');\r\n  }\r\n\r\n  selectOptions( csv: string ) {\r\n    let self = this;\r\n    if ( csv ) {\r\n      let allOptions = csv.split( ',' );\r\n      for ( let option of allOptions ) {\r\n        let domOptions = document.querySelectorAll( \"#\" + self.qId + \" .cc-select-option\" );\r\n        Array.prototype.forEach.call( domOptions, function ( el, i ) {\r\n          if ( el.getAttribute( 'data-value' ) == option ) {\r\n            self.selectOption( el );\r\n          } else {\r\n            \r\n          }\r\n        } );\r\n      }\r\n    }\r\n  }\r\n\r\n  addOrRemoveFromList(listAsString: string, item: string){\r\n    let list = listAsString.split(',');\r\n    let itemIndex = list.indexOf(item);\r\n    if(itemIndex !== -1){\r\n      list.splice(itemIndex, 1);\r\n    } else {\r\n      list.push(item);\r\n    }\r\n    return list.join(',');\r\n  }\r\n\r\n}\r\nexport { Select }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/dom/Select.ts","import { isArray } from \"util\";\r\nimport { LanguageTextFilter } from \"./LanguageTextFilter\";\r\nimport { isAnd, isOr, doesSatisfy, questionCompare } from './filter-utils';\r\n\r\nclass ConditionalFlowFilter {\r\n  public static filterQuestion( surveyHandler: any, question: any ) {\r\n    let aAddedCount = 0;\r\n    let aRemovedCount = 0;\r\n\r\n    if ( surveyHandler.getAnswerForQuestionId( question.id ) != null ) {\r\n      for ( let aQuestion of surveyHandler.getConditionalSurveyQuestions() ) {\r\n        // console.log( aQuestion );\r\n        if ( aQuestion.conditionalFilter != null ) {\r\n          let iSatisfied = false;\r\n          let iFailed = false;\r\n          for ( let aFilterByQuestion of aQuestion.conditionalFilter.filterquestions ) {\r\n            if ( isAnd( aFilterByQuestion ) ) {\r\n              if ( doesSatisfy( surveyHandler, aFilterByQuestion ) && !iFailed ) {\r\n                iSatisfied = true;\r\n              } else {\r\n                iFailed = true;\r\n                break;\r\n              }\r\n            } else if ( isOr( aFilterByQuestion ) ) {\r\n              if ( doesSatisfy( surveyHandler, aFilterByQuestion ) ) {\r\n                iSatisfied = true;\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          const surveyQuestions = surveyHandler.getSurveyQuestions();\r\n          if ( iSatisfied && !iFailed ) {\r\n            if ( surveyQuestions.indexOf( aQuestion ) === -1 ) {\r\n              surveyQuestions.push( aQuestion );\r\n              aAddedCount++;\r\n            }\r\n          } else {\r\n            if ( surveyQuestions.indexOf( aQuestion ) !== -1 ) {\r\n              aRemovedCount++;\r\n              surveyQuestions.splice( surveyQuestions.indexOf( aQuestion ), 1 );\r\n              // surveyHandler.removePartial(aQuestion.id);\r\n              //removing from partial requires not posting partial after each question rather than posting them all at once.\r\n              surveyHandler.removeAnswer( aQuestion.id );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if ( aAddedCount > 0 || aRemovedCount > 0 ) {\r\n      surveyHandler.getSurveyQuestions().sort( questionCompare );\r\n      // surveyHandler.sendConditionalFLowQuestionsData(surveyHandler.getSurveyQuestions().size());\r\n      return true;\r\n    } else {\r\n      // return false;\r\n    }\r\n    // ( window as any ).ccsdkDebug ? console.log( surveyHandler.getSurveyQuestions() ) : '';\r\n  }\r\n}\r\n\r\nexport { ConditionalFlowFilter };\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/filters/ConditionalFlowFilter.ts","// Production steps of ECMA-262, Edition 6, 22.1.2.1\r\nif ( !( <any>Array ).from ) {\r\n  ( <any>Array ).from = ( function () {\r\n    var toStr = Object.prototype.toString;\r\n    var isCallable = function ( fn ) {\r\n      return typeof fn === 'function' || toStr.call( fn ) === '[object Function]';\r\n    };\r\n    var toInteger = function ( value ) {\r\n      var number = Number( value );\r\n      if ( isNaN( number ) ) {\r\n        return 0;\r\n      }\r\n      if ( number === 0 || !isFinite( number ) ) {\r\n        return number;\r\n      }\r\n      return ( number > 0 ? 1 : -1 ) * Math.floor( Math.abs( number ) );\r\n    };\r\n    var maxSafeInteger = Math.pow( 2, 53 ) - 1;\r\n    var toLength = function ( value ) {\r\n      var len = toInteger( value );\r\n      return Math.min( Math.max( len, 0 ), maxSafeInteger );\r\n    };\r\n\r\n    // The length property of the from method is 1.\r\n    return function from( arrayLike /*, mapFn, thisArg */ ) {\r\n      // 1. Let C be the this value.\r\n      var C = this;\r\n\r\n      // 2. Let items be ToObject(arrayLike).\r\n      var items = Object( arrayLike );\r\n\r\n      // 3. ReturnIfAbrupt(items).\r\n      if ( arrayLike == null ) {\r\n        throw new TypeError( 'Array.from requires an array-like object - not null or undefined' );\r\n      }\r\n\r\n      // 4. If mapfn is undefined, then let mapping be false.\r\n      var mapFn = arguments.length > 1 ? arguments[ 1 ] : void undefined;\r\n      var T;\r\n      if ( typeof mapFn !== 'undefined' ) {\r\n        // 5. else\r\n        // 5. a If IsCallable(mapfn) is false, throw a TypeError exception.\r\n        if ( !isCallable( mapFn ) ) {\r\n          throw new TypeError( 'Array.from: when provided, the second argument must be a function' );\r\n        }\r\n\r\n        // 5. b. If thisArg was supplied, let T be thisArg; else let T be undefined.\r\n        if ( arguments.length > 2 ) {\r\n          T = arguments[ 2 ];\r\n        }\r\n      }\r\n\r\n      // 10. Let lenValue be Get(items, \"length\").\r\n      // 11. Let len be ToLength(lenValue).\r\n      var len = toLength( items.length );\r\n\r\n      // 13. If IsConstructor(C) is true, then\r\n      // 13. a. Let A be the result of calling the [[Construct]] internal method \r\n      // of C with an argument list containing the single item len.\r\n      // 14. a. Else, Let A be ArrayCreate(len).\r\n      var A = isCallable( C ) ? Object( new C( len ) ) : new Array( len );\r\n\r\n      // 16. Let k be 0.\r\n      var k = 0;\r\n      // 17. Repeat, while k < len… (also steps a - h)\r\n      var kValue;\r\n      while ( k < len ) {\r\n        kValue = items[ k ];\r\n        if ( mapFn ) {\r\n          A[ k ] = typeof T === 'undefined' ? mapFn( kValue, k ) : mapFn.call( T, kValue, k );\r\n        } else {\r\n          A[ k ] = kValue;\r\n        }\r\n        k += 1;\r\n      }\r\n      // 18. Let putStatus be Put(A, \"length\", len, true).\r\n      A.length = len;\r\n      // 20. Return A.\r\n      return A;\r\n    };\r\n  }() );\r\n}\r\n\r\n// custom event polyfill\r\n( function () {\r\n\r\n  if ( typeof ( <any>window ).CustomEvent === \"function\" ) return false;\r\n\r\n  function CustomEvent( event, params ) {\r\n    params = params || {\r\n      bubbles: false,\r\n      cancelable: false,\r\n      detail: undefined\r\n    };\r\n    var evt = document.createEvent( 'CustomEvent' );\r\n    evt.initCustomEvent( event, params.bubbles, params.cancelable, params.detail );\r\n    return evt;\r\n  }\r\n\r\n  CustomEvent.prototype = ( <any>window ).Event.prototype;\r\n\r\n  ( <any>window ).CustomEvent = CustomEvent;\r\n} )();\r\n\r\n// includes polyfill\r\nif ( !( <any>Array.prototype ).includes ) {\r\n  Object.defineProperty( Array.prototype, 'includes', {\r\n    value: function ( searchElement, fromIndex ) {\r\n\r\n      if ( this == null ) {\r\n        throw new TypeError( '\"this\" is null or not defined' );\r\n      }\r\n\r\n      // 1. Let O be ? ToObject(this value).\r\n      var o = Object( this );\r\n\r\n      // 2. Let len be ? ToLength(? Get(O, \"length\")).\r\n      var len = o.length >>> 0;\r\n\r\n      // 3. If len is 0, return false.\r\n      if ( len === 0 ) {\r\n        return false;\r\n      }\r\n\r\n      // 4. Let n be ? ToInteger(fromIndex).\r\n      //    (If fromIndex is undefined, this step produces the value 0.)\r\n      var n = fromIndex | 0;\r\n\r\n      // 5. If n ≥ 0, then\r\n      //  a. Let k be n.\r\n      // 6. Else n < 0,\r\n      //  a. Let k be len + n.\r\n      //  b. If k < 0, let k be 0.\r\n      var k = Math.max( n >= 0 ? n : len - Math.abs( n ), 0 );\r\n\r\n      function sameValueZero( x, y ) {\r\n        return x === y || ( typeof x === 'number' && typeof y === 'number' && isNaN( x ) && isNaN( y ) );\r\n      }\r\n\r\n      // 7. Repeat, while k < len\r\n      while ( k < len ) {\r\n        // a. Let elementK be the result of ? Get(O, ! ToString(k)).\r\n        // b. If SameValueZero(searchElement, elementK) is true, return true.\r\n        if ( sameValueZero( o[ k ], searchElement ) ) {\r\n          return true;\r\n        }\r\n        // c. Increase k by 1. \r\n        k++;\r\n      }\r\n\r\n      // 8. Return false\r\n      return false;\r\n    }\r\n  } );\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/polyfills/ccsdk.polyfill.ts","import { Cookie } from './helpers/Cookie';\r\nimport { SurveyManager } from \"./SurveyManager\";\r\nimport { Survey } from \"./Survey\";\r\nimport { PrefillDictionary, PrefillsBatchOrSingle } from './typings';\r\n\r\n/**\r\n * functions that are exposed to SDK User are written here.\r\n * Entry point for CCSDK.\r\n */\r\n// declare var Sentry: any;\r\n\r\nlet localCCSDK = {\r\n  init: init,\r\n  destroy: destroy,\r\n  trigger: trigger,\r\n  hide: hide,\r\n  show: show,\r\n  on: on,\r\n  prefill: prefill,\r\n  prefillByTag: prefillByTag,\r\n  prefillByNote: prefillByNote\r\n};\r\n\r\n// let instances : any = {};\r\n\r\n( window as any ).globalSurveyRunning = false;\r\n( window as any ).ccsdkDebug = false;\r\n( window as any ).isMobile = window.innerWidth <= 768 ? true : false;\r\n\r\nif ( typeof ( window as any ).CCSDK !== 'undefined' ) {\r\n  var queue = ( window as any ).CCSDK.q;\r\n  ( window as any ).CCSDK = function () {\r\n    if ( arguments && arguments.length == 0 ) {\r\n      var time = new Date();\r\n    } else {\r\n      ( window as any ).ccsdkDebug ? console.log( arguments ) : '';\r\n      var args = ( Array as any ).from( arguments );\r\n      //Call this functions as ccsdk('functionName', ['argument1', 'argument2']);\r\n      var functionName = args.splice( 0, 1 )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( functionName ) : '';\r\n      return localCCSDK[ functionName ].apply( this, args );\r\n    }\r\n  };\r\n  if ( queue ) {\r\n    for ( var q of queue ) {\r\n      var args = ( Array as any ).from( q );\r\n      var functionName = args.splice( 0, 1 )[ 0 ];\r\n      localCCSDK[ functionName ].apply( this, args );\r\n    }\r\n  }\r\n  let eventCCReady: Event = document.createEvent( 'Event' );\r\n  eventCCReady.initEvent( 'ccready', true, true );\r\n  document.dispatchEvent( eventCCReady );\r\n}\r\n\r\nexport function init( surveyToken: any ) {\r\n  //config options can be set in arguments[1]\r\n  //available config options : themeColor\r\n  surveyToken = decodeURIComponent( surveyToken ).trim();\r\n  let config = ( typeof arguments[ 1 ] === 'object' ) ? arguments[ 1 ] : {};\r\n  //create survey instance\r\n  if ( typeof Cookie.get( surveyToken + '-finish' ) !== 'undefined' && Cookie.get( surveyToken + '-finish' ) ) {\r\n    return;\r\n  }\r\n  if ( typeof Cookie.get( surveyToken + '-coolDown' ) !== 'undefined' && Cookie.get( surveyToken + '-coolDown' ) ) {\r\n    return;\r\n  }\r\n\r\n  if ( typeof config.isActive !== 'undefined' && config.isActive ) {\r\n    SurveyManager.surveyInstances[ surveyToken ] = ( SurveyManager.surveyInstances[ surveyToken ] ) ? SurveyManager.surveyInstances[ surveyToken ] : new Survey( surveyToken, config );\r\n    SurveyManager.surveyInstances[ surveyToken ].tracking.trackEvent( 'Init MicroSurvey', {\r\n      token: surveyToken,\r\n      data: {\r\n        name: ( <any>window ).isMobile ? 'Mobile Mode' : 'Desktop Mode',\r\n        action: surveyToken\r\n      }\r\n    }, null, null );\r\n    return SurveyManager.surveyInstances[ surveyToken ];\r\n  } else {\r\n    //do nothing\r\n  }\r\n\r\n}\r\n\r\nexport function destroy( surveyToken: string ) {\r\n  //remove from trigger manager, delete instance.\r\n  if ( !SurveyManager ||\r\n    !SurveyManager.surveyInstances ||\r\n    !SurveyManager.surveyInstances[ surveyToken ] ||\r\n    !SurveyManager.surveyInstances[ surveyToken ].dom ) {\r\n    return;\r\n  }\r\n  SurveyManager.surveyInstances[ surveyToken ].dom.destroyListeners();\r\n  SurveyManager.surveyInstances[ surveyToken ].destroy();\r\n  delete SurveyManager.surveyInstances[ surveyToken ];\r\n}\r\n//\r\nexport function trigger( surveyToken: string, type: string, target: string ) {\r\n  ( window as any ).ccsdkDebug ? console.log( SurveyManager.surveyInstances ) : '';\r\n\r\n  if ( typeof SurveyManager.surveyInstances[ surveyToken ] != 'undefined' ) {\r\n    SurveyManager.surveyInstances[ surveyToken ].tracking.trackEvent( 'Trigger Type', {\r\n      token: surveyToken,\r\n      data: {\r\n        name: type,\r\n        action: surveyToken\r\n      }\r\n    }, null, null );\r\n    SurveyManager.surveyInstances[ surveyToken ].trigger( type, target );\r\n  }\r\n  //tell trigger manager to register trigger.\r\n}\r\n\r\nexport function on( surveyToken: string, type: string, callback: any ) {\r\n  if ( typeof SurveyManager.surveyInstances[ surveyToken ] != 'undefined' ) {\r\n    SurveyManager.surveyInstances[ surveyToken ].tracking.trackEvent( 'Event Listeners', {\r\n      token: surveyToken,\r\n      data: {\r\n        name: type,\r\n        action: surveyToken\r\n      }\r\n    }, null, null );\r\n    SurveyManager.surveyInstances[ surveyToken ].on( type, callback );\r\n  }\r\n}\r\n\r\nexport function prefill( surveyToken: string, ...restArgs: PrefillsBatchOrSingle ) {\r\n\r\n  if ( typeof SurveyManager.surveyInstances[ surveyToken ] != 'undefined' ) {\r\n    let questionId;\r\n    if ( typeof restArgs[ 0 ] === 'string' ) {\r\n      questionId = restArgs[ 0 ];\r\n    } else {\r\n      questionId = Object.keys( restArgs[ 0 ] ).length + ' Questions';\r\n    }\r\n    SurveyManager.surveyInstances[ surveyToken ].tracking.trackEvent( 'Prefill', {\r\n      token: surveyToken,\r\n      data: {\r\n        name: questionId,\r\n        action: surveyToken\r\n      }\r\n    }, null, null );\r\n    SurveyManager.surveyInstances[ surveyToken ].prefill( ...restArgs, 'DIRECT' );\r\n  }\r\n}\r\n\r\nexport function prefillByTag( surveyToken: string, ...restArgs: PrefillsBatchOrSingle ) {\r\n  if ( typeof SurveyManager.surveyInstances[ surveyToken ] != 'undefined' ) {\r\n    let questionTag;\r\n    if ( typeof restArgs[ 0 ] === 'string' ) {\r\n      questionTag = restArgs[ 0 ];\r\n    } else {\r\n      questionTag = Object.keys( restArgs[ 0 ] ).length + ' Questions';\r\n    }\r\n    SurveyManager.surveyInstances[ surveyToken ].tracking.trackEvent( 'Prefill by tag', {\r\n      token: surveyToken,\r\n      data: {\r\n        name: questionTag,\r\n        action: surveyToken\r\n      }\r\n    }, null, null );\r\n    SurveyManager.surveyInstances[ surveyToken ].prefill( ...restArgs, 'BY_TAG' );\r\n  }\r\n}\r\n\r\nexport function prefillByNote( surveyToken: string, ...restArgs: PrefillsBatchOrSingle ) {\r\n  if ( typeof SurveyManager.surveyInstances[ surveyToken ] != 'undefined' ) {\r\n    let questionNote;\r\n    if ( typeof restArgs[ 0 ] === 'string' ) {\r\n      questionNote = restArgs[ 0 ];\r\n    } else {\r\n      questionNote = Object.keys( restArgs[ 0 ] ).length + ' Questions';\r\n    }\r\n    SurveyManager.surveyInstances[ surveyToken ].tracking.trackEvent( 'Prefill by Note', {\r\n      token: surveyToken,\r\n      data: {\r\n        name: questionNote,\r\n        action: surveyToken\r\n      }\r\n    }, null, null );\r\n    SurveyManager.surveyInstances[ surveyToken ].prefill( ...restArgs, 'BY_NOTE' );\r\n  }\r\n}\r\n\r\nexport function show( surveyToken: string ) {\r\n  if ( typeof SurveyManager.surveyInstances[ surveyToken ] != 'undefined' ) {\r\n    SurveyManager.surveyInstances[ surveyToken ].show();\r\n  }\r\n}\r\n\r\nexport function hide( surveyToken: string ) {\r\n  if ( typeof SurveyManager.surveyInstances[ surveyToken ] != 'undefined' ) {\r\n    SurveyManager.surveyInstances[ surveyToken ].dom.destroyListeners();\r\n    SurveyManager.surveyInstances[ surveyToken ].destroy();\r\n    SurveyManager.surveyInstances[ surveyToken ].hide();\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/CCSDKEntry.ts","import { CCSDKConfig } from \"./interfaces/CCSDKConfig\";\r\nimport { DisplayConfig } from \"./interfaces/DisplayConfig\";\r\nimport { SurveyHandler } from \"./SurveyHandler\";\r\nimport { DomSurvey } from \"./helpers/dom/DomSurvey\";\r\nimport { DomUtilities } from \"./helpers/dom/DomUtilities\";\r\nimport { Scrollbar } from \"./helpers/dom/ScrollBar\";\r\nimport { Cookie } from './helpers/Cookie';\r\nimport { Constants } from './Constants';\r\nimport { Slider } from \"./helpers/dom/Slider\";\r\nimport { SurveyManager } from \"./SurveyManager\";\r\nimport { TriggerManager } from \"./TriggerManager\";\r\nimport { Triggers } from './Triggers';\r\nimport { RequestHelper } from './helpers/Request';\r\nimport { Config } from './Config';\r\nimport { MatomoTracker } from './helpers/tracking';\r\nimport { templates } from \"./helpers/templates\";\r\nimport { PrefillsBatchOrSingle, PrefillType } from \"./typings\";\r\n\r\nclass Survey {\r\n  survey: SurveyHandler;\r\n  dom: DomSurvey;\r\n  surveyData: any;\r\n  util: DomUtilities;\r\n  scrollbar: Scrollbar;\r\n  slider: Slider;\r\n  config: CCSDKConfig;\r\n  surveyToken: string;\r\n  triggers: Triggers;\r\n  surveyRunning: boolean;\r\n  surveyDone: boolean;\r\n  surveyStatus: string;\r\n  isThrottled: boolean;\r\n  thorttlingLogic: any;\r\n  loginData: any;\r\n  debug: false;\r\n  surveyStartTime: any;\r\n  requester = new RequestHelper();\r\n  tracking: MatomoTracker;\r\n\r\n  constructor( surveyToken: string, config: CCSDKConfig ) {\r\n    this.isThrottled = true;\r\n    this.surveyDone = false;\r\n    this.surveyStatus = '';\r\n    this.surveyToken = surveyToken;\r\n    this.config = config;\r\n    this.surveyRunning = false;\r\n    this.thorttlingLogic = null;\r\n    this.tracking = new MatomoTracker();\r\n    this.tracking.token = surveyToken;\r\n    if ( typeof this.config.textDirection === 'undefined' ) {\r\n      this.config.textDirection = \"ltr\";\r\n    }\r\n\r\n    this.triggers = new Triggers( this );\r\n    TriggerManager.addSurvey( this.surveyToken, this.triggers );\r\n    this.survey = new SurveyHandler( this );\r\n    this.util = new DomUtilities;\r\n    //set themeColor of survey\r\n    this.config.brandColor = ( this.config && this.config.brandColor ) ?\r\n      this.config.brandColor : \"#db3c39\";\r\n    //use config variable textDirection and set dir\r\n    this.setHtmlTextDirection();\r\n    this.setDisplayOptions();\r\n    this.util.trigger( document, this.surveyToken + '-ready', { 'survey': this } );\r\n    //do login\r\n    this.config.username = \"test\";\r\n    this.config.password = \"test\";\r\n    this.config.location = \"location\";\r\n    this.config.language = \"English (Default)\";\r\n    //check trigger conditions and add itself to \r\n    //based on new config\r\n    //gotta and these.\r\n    this.trigger( \"click\", this.config.cssSelector );\r\n    // this.trigger(\"scroll-pixels\", this.config.scrollPercent);\r\n    // this.trigger(\"page-time\", this.config.waitSeconds);\r\n    // this.trigger(\"url-match\", this.config.grepURL);\r\n    // this.trigger(\"url-not-match\", this.config.grepInvertURL);\r\n    // this.config.scrollPercent = 10;\r\n    // this.config.waitSeconds = 5;\r\n    this.triggers.setConditionalTriggers( this.config );\r\n    // this.login(function() {\r\n    //on login\r\n    // });\r\n  }\r\n\r\n  getSurveyThrottlingLogic( cb ) {\r\n    let getThrottleUrl = Config.API_URL + Config.GET_SURVEY_THROTTLE_LOGIC.replace( '{location}', this.config.location );\r\n    let headers = {};\r\n    headers[ Constants.AUTHORIZATION ] = Constants.AUTHORIZATION_BEARER + \" \" + this.loginData.access_token;\r\n    let self = this;\r\n    let successcb = function ( data ) {\r\n      self.thorttlingLogic = data;\r\n      self.checkThrottling( cb );\r\n    };\r\n\r\n    RequestHelper.getWithHeaders( getThrottleUrl, headers, successcb, null );\r\n  }\r\n\r\n  checkThrottling( cb ) {\r\n    if ( this.thorttlingLogic != null ) {\r\n      if ( this.thorttlingLogic.inputIds == null ) {\r\n        this.thorttlingLogic.inputIds = [];\r\n      }\r\n      this.thorttlingLogic.inputIds.push( this.thorttlingLogic[ this.thorttlingLogic.uniqueIDQuestionIdOrTag.toLowerCase() ] );\r\n      if ( this.thorttlingLogic.logics != null && this.thorttlingLogic.logics.length > 0 && this.config != null ) {\r\n        this.thorttlingLogic.logics[ 0 ].filter.location = [];\r\n        this.thorttlingLogic.logics[ 0 ].filter.location.push( this.config.location );\r\n      }\r\n    }\r\n    let self = this;\r\n    let postThrottleUrl = Config.API_URL + Config.POST_THROTTLING;\r\n    let headers = {};\r\n    headers[ Constants.AUTHORIZATION ] = Constants.AUTHORIZATION + \" \" + this.loginData.access_token;\r\n    let successcb = function ( throttleResponse ) {\r\n\r\n      if ( typeof throttleResponse[ 0 ][ self.thorttlingLogic.uniqueIDQuestionIdOrTag.toLowerCase() ] && throttleResponse[ 0 ].value ) {\r\n        //get survey data?  \r\n        cb();\r\n      }\r\n    };\r\n\r\n    RequestHelper.postWithHeaders( postThrottleUrl, this.thorttlingLogic, headers, successcb, null );\r\n  }\r\n\r\n  addThrottlingEntries( isOpen: boolean ) {\r\n    let addThrottleUrl = Config.API_URL + Config.POST_THROTTLING_ADD_ENTRIES;\r\n    let headers = {};\r\n    this.loginData = { access_token: \"help\" };\r\n    headers[ Constants.AUTHORIZATION ] = Constants.AUTHORIZATION + \" \" + this.loginData.access_token;\r\n    //fill this from config and data.\r\n    let successcb = ( throttleResponse ) => {\r\n      this.debug ? console.log( throttleResponse ) : '';\r\n    }\r\n\r\n    RequestHelper.postWithHeaders( addThrottleUrl, {\r\n      user: \"\",\r\n      mobile: \"\",\r\n      emailId: \"\",\r\n      customId: \"\",\r\n      surveySentDate: \"\",\r\n      surveyOpenDate: \"\",\r\n      channel: \"\",\r\n      isOpened: isOpen\r\n    }, headers, successcb, null );\r\n\r\n  }\r\n\r\n  setupSurvey() {\r\n    // this.getSurveyData();\r\n    this.initSurvey();\r\n  }\r\n\r\n  setHtmlTextDirection() {\r\n    let ccSDKElement = document.querySelector( '.cc-sdk' );\r\n    if ( !ccSDKElement ) {\r\n      return;\r\n    }\r\n    let ccSDKDir: string = ccSDKElement.getAttribute( 'dir' );\r\n    let direction: string = ( this.config && this.config.textDirection ) ?\r\n      this.config.textDirection : ( ccSDKDir ? ccSDKDir : \"ltr\" );\r\n    ccSDKElement.setAttribute( 'dir', direction );\r\n  }\r\n\r\n  setDisplayOptions() {\r\n    this.survey.surveyDisplay.position = this.config && this.config.position ?\r\n      this.config.position : \"bottom right\";\r\n    let welcomePopupAnimation = 'hide-right-left';\r\n    // this.survey.surveyDisplay.welcomePopupAnimation =  this.config && this.config.display && this.config.display.welcomePopupAnimation ?\r\n    // \"hide-\"+ this.config.display.welcomePopupAnimation : \"hide-right-left\";\r\n    // this.survey.surveyDisplay.surveyPopupAnimation =  this.config && this.config.display && this.config.display.surveyPopupAnimation ?\r\n    // \"hide-\"+ this.config.display.surveyPopupAnimation : \"hide-right-left\";\r\n    // this.survey.surveyDisplay.surveyPosition =  this.config && this.config.display && this.config.display.surveyPosition ?\r\n    // this.config.display.surveyPosition : ( this.config.display.position.search(/bottom/gi)==-1?\"top\":\"bottom\" ) ;\r\n\r\n    switch ( this.survey.surveyDisplay.position ) {\r\n      case 'bottom right':\r\n        welcomePopupAnimation = 'hide-right-left';\r\n        break;\r\n      case 'right bottom':\r\n        welcomePopupAnimation = 'hide-right-left';\r\n        break;\r\n      case 'top right':\r\n        welcomePopupAnimation = 'hide-right-left';\r\n        break;\r\n      case 'right top':\r\n        welcomePopupAnimation = 'hide-right-left';\r\n        break;\r\n      case 'bottom left':\r\n        welcomePopupAnimation = 'hide-left-right';\r\n        break;\r\n      case 'left bottom':\r\n        welcomePopupAnimation = 'hide-left-right';\r\n        break;\r\n      case 'top left':\r\n        welcomePopupAnimation = 'hide-left-right';\r\n        break;\r\n      case 'left top':\r\n        welcomePopupAnimation = 'hide-left-right';\r\n        break;\r\n      default:\r\n        welcomePopupAnimation = 'hide-right-left';\r\n        break;\r\n    }\r\n    this.survey.surveyDisplay.welcomePopupAnimation = welcomePopupAnimation;\r\n    this.tracking.trackEvent( 'Welcome Pop up Position', {\r\n      token: this.tracking.token,\r\n      data: {\r\n        name: this.survey.surveyDisplay.position,\r\n        action: null\r\n      }\r\n    }, null, null );\r\n\r\n    this.survey.surveyDisplay.surveyPosition = this.config.position.search( /bottom/gi ) == -1 ? \"top\" : \"bottom\";\r\n  }\r\n\r\n  getSurveyData() {\r\n    let self: Survey = this;\r\n    let successcb = function ( surveyData ) {\r\n      self.debug ? console.log( surveyData ) : '';\r\n      // console.log(surveyData);\r\n\r\n      self.surveyData = surveyData;\r\n      if ( surveyData && surveyData.questions && surveyData.questions[ 0 ] ) {\r\n        self.tracking.username = surveyData.questions[ 0 ].user;\r\n      }\r\n\r\n      self.tracking.token = self.surveyToken;\r\n\r\n      self.tracking.trackEvent( 'Login Success', {\r\n        token: self.tracking.token,\r\n        data: {\r\n          name: 'Token',\r\n          action: self.surveyToken\r\n        }\r\n      }, console.log, console.error )\r\n      self.tracking.trackEvent( 'Survey Length', {\r\n        token: self.tracking.token,\r\n        data: {\r\n          name: `${ surveyData.questions.length } Questions`,\r\n          action: `${ surveyData.preFill ? surveyData.preFill.length : 0 } Prefills`\r\n        }\r\n      }, null, null );\r\n      let event = new CustomEvent( Constants.SURVEY_DATA_EVENT + \"-\" + self.surveyToken, { detail: JSON.parse( JSON.stringify( surveyData ) ) } );\r\n      document.dispatchEvent( event );\r\n      if ( !self.config.skipWelcomePage ) {\r\n        self.dom.hideLoader();\r\n      }\r\n      if ( self.surveyData ) {\r\n        self.initSurveyQuestions();\r\n      } else {\r\n        this.tracking.trackEvent( 'Expired Survey', {\r\n          token: this.tracking.token,\r\n          data: {\r\n            name: null,\r\n            action: null\r\n          }\r\n        }, null, null );\r\n        self.survey.displayWelcomeQuestion( \"The Survey has been expired\" );\r\n      }\r\n    };\r\n    let errorcb = null;\r\n    this.survey.fetchQuestions( successcb, errorcb );\r\n  }\r\n\r\n  initSurvey() {\r\n    //if survey already run don't run?\r\n    //if default trigger initiated and survey already run then don't run.\r\n    let self: Survey = this;\r\n    // if(!self.surveyRunning) {\r\n    //   self.surveyRunning = true;\r\n    // }\r\n    self.surveyRunning = true;\r\n    self.dom = new DomSurvey( this );\r\n    self.dom.setTheme( self.config.brandColor, this.config.keepAlive ? this.config.keepAlive : 0 );\r\n    // self.survey.attachSurvey(this.surveyData);\r\n    // self.config.language = \"हिन्दी\";\r\n    self.config.language = \"default\";\r\n    if ( self.surveyToken && decodeURIComponent( self.surveyToken ).trim() !== '' && !self.config.skipWelcomePage ) {\r\n      self.survey.displayWelcomeQuestion();\r\n    } else if ( self.config.skipWelcomePage ) {\r\n      let onImpressionEvent = new CustomEvent( Constants.SURVEY_IMPRESSION_EVENT + \"-\" + this.surveyToken );\r\n      document.dispatchEvent( onImpressionEvent );\r\n      self.dom.startSurvey();\r\n      self.survey.setCoolDownPeriod( self.config, self.surveyToken );\r\n      this.surveyStartTime = new Date();\r\n      self.survey.acceptAnswers();\r\n    }\r\n    self.dom.setupListeners();\r\n    // self.survey.displayLanguageSelector();\r\n    //survey start event.\r\n    // let onSurveyStartEvent = new CustomEvent(Constants.SURVEY_START_EVENT + \"-\" + this.surveyToken);\r\n    // document.dispatchEvent(onSurveyStartEvent);\r\n  }\r\n\r\n  initSurveyQuestions() {\r\n    let self: Survey = this;\r\n    self.survey.attachSurvey( this.surveyData );\r\n    // self.dom.setupListeners();\r\n    // self.config.language = \"हिन्दी\";\r\n    self.config.language = \"default\";\r\n    // self.survey.displayLanguageSelector();\r\n    //survey start event.\r\n    this.dom.initSurveyDom();\r\n    let onSurveyStartEvent = new CustomEvent( Constants.SURVEY_START_EVENT + \"-\" + this.surveyToken );\r\n    document.dispatchEvent( onSurveyStartEvent );\r\n  }\r\n\r\n  public on( type: string, callback: any ) {\r\n    document.addEventListener( type + \"-\" + this.surveyToken, function ( e: any ) {\r\n      callback( e.detail );\r\n    } );\r\n  }\r\n\r\n  public show() {\r\n    //do show and hide things.\r\n    SurveyManager.setSurveyRunning();\r\n    //show survey\r\n    this.setupSurvey();\r\n\r\n  }\r\n\r\n  public hide() {\r\n    SurveyManager.unsetSurveyRunning();\r\n    this.survey.destroy();\r\n    this.tracking.trackEvent( 'Survey Destroyed', {\r\n      token: this.tracking.token,\r\n      data: {\r\n        name: ( <any>new Date() - ( <any>window ).globalSurveyStartTime ) + 's',\r\n        action: null\r\n      }\r\n    }, null, null );\r\n  }\r\n\r\n  public destroy() {\r\n    //remove all listeners?\r\n    SurveyManager.unsetSurveyRunning();\r\n    this.survey.destroy();\r\n  }\r\n\r\n\r\n  public prefill( restOfArgs: PrefillsBatchOrSingle, type: PrefillType ) {\r\n    let prefillObject;\r\n    if ( typeof restOfArgs[ 0 ] !== 'object' ) {\r\n      prefillObject = {\r\n        [ <string>restOfArgs[ 0 ] ]: restOfArgs[ 1 ]\r\n      };\r\n    } else {\r\n      prefillObject = restOfArgs[ 0 ];\r\n    }\r\n    //save this in this.surveyHandler\r\n    if ( type === 'DIRECT' ) {\r\n      this.survey.fillPrefillDirect( prefillObject );\r\n    } else if ( type === 'BY_TAG' ) {\r\n      this.survey.fillPrefill( prefillObject );\r\n    } else if ( type === 'BY_NOTE' ) {\r\n      this.survey.fillPrefillByNote( prefillObject );\r\n    }\r\n  }\r\n\r\n\r\n  public trigger( type: string, target: any ) {\r\n    let self: Survey = this;\r\n    switch ( type ) {\r\n      case 'click':\r\n        console.log( 'enable click trigger ##' )\r\n        this.triggers.enableClickTrigger( target, function () {\r\n          // self.initSurvey();\r\n          // Scrollbar.initAll();\r\n          // self.slider = new Slider();\r\n          // self.setupSurvey();\r\n          SurveyManager.addSurvey( self.surveyToken );\r\n\r\n        } );\r\n        break;\r\n      case 'page-count':\r\n        let count: number = parseInt( target );\r\n        this.triggers.enablePageCountTrigger( count );\r\n\r\n        break;\r\n      case 'site-count':\r\n        let count2: number = parseInt( target );\r\n        this.triggers.enableSiteCountTrigger( count2 );\r\n        break;\r\n      case 'page-time':\r\n        this.triggers.enablePageTimeTrigger( parseInt( target ) );\r\n        break;\r\n      case 'site-time':\r\n        this.triggers.enableSiteTimeTrigger( parseInt( target ) );\r\n        break;\r\n      case 'url-match':\r\n        this.triggers.enablePopUpByURLPatternTrigger( target );\r\n        break;\r\n      case 'url-not-match':\r\n        this.triggers.enablePopUpByNotURLPatternTrigger( target );\r\n        break;\r\n      case 'utm-match':\r\n        this.triggers.enablePopUpByUTMPatternTrigger( target );\r\n        break;\r\n      case 'scroll-pixels':\r\n        this.triggers.enableScrollPixelsTrigger( parseInt( target ) );\r\n        break;\r\n      case 'launch':\r\n        SurveyManager.addSurvey( self.surveyToken );\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nexport { Survey };\n\n\n// WEBPACK FOOTER //\n// ./src/Survey.ts","\r\n// import 'whatwg-fetch';\r\nimport { Config } from \"./Config\";\r\nimport { DisplayConfig } from \"./interfaces/DisplayConfig\";\r\nimport { RequestHelper } from './helpers/Request';\r\nimport { templates } from \"./helpers/templates\";\r\nimport { DomUtilities } from \"./helpers/dom/DomUtilities\";\r\nimport { DomSurvey } from \"./helpers/dom/DomSurvey\";\r\nimport { ConditionalTextFilter } from \"./helpers/filters/ConditionalTextFilter\";\r\nimport { Constants } from \"./Constants\";\r\nimport { LanguageTextFilter } from \"./helpers/filters/LanguageTextFilter\";\r\nimport { Select } from './helpers/dom/Select';\r\nimport { Cookie } from './helpers/Cookie';\r\nimport { ConditionalFlowFilter } from './helpers/filters/ConditionalFlowFilter';\r\nimport { PrefillDictionary } from \"./typings\";\r\n\r\n\r\n\r\nclass SurveyHandler {\r\n  surveyToken: string;\r\n  surveyData: any;\r\n  questions: any;\r\n  prefillQuestions: any;\r\n  questionsToDisplay: any;\r\n  randomNumber: Number;\r\n  welcomeQuestion: any;\r\n  welcomeQuestionButtonText: any;\r\n  prefillResponses: any;\r\n  prefillDirect: any;\r\n  prefillWithTags: any;\r\n  prefillWithNote: any;\r\n  questionResponses: any;\r\n  answers: any = {};\r\n  surveyAnswers: any = {};\r\n  util: DomUtilities;\r\n  dom: DomSurvey;\r\n  displayThankYouCb: any;\r\n  destroySurveyCb: any;\r\n  acceptAnswersCb: any;\r\n  surveyDisplay: DisplayConfig;\r\n  currentQuestion: any;\r\n  conditionalQuestions: any;\r\n  ccsdk: any;\r\n  welcomeInterval: any;\r\n  welcomeQuestionDisplayTime: any;\r\n  domListeners: any;\r\n  languageSelect: any;\r\n  private _prefillsPartiallyPosted = false;\r\n  // isPartialAvailable : Boolean;\r\n\r\n  constructor( ccsdk ) {\r\n    this.surveyToken = ccsdk.surveyToken;\r\n    this.surveyData = {};\r\n    this.surveyDisplay = {\r\n      'position': '',\r\n      'surveyPosition': '',\r\n      'welcomePopupAnimation': '',\r\n      'surveyPopupAnimation': '',\r\n    };\r\n    this.ccsdk = ccsdk;\r\n    this.domListeners = [];\r\n    this.questions = [];\r\n    this.questionsToDisplay = [];\r\n    this.prefillQuestions = [];\r\n    this.conditionalQuestions = [];\r\n    this.prefillResponses = [];\r\n    this.prefillWithTags = {};\r\n    this.prefillWithNote = {};\r\n    this.prefillDirect = {};\r\n    this.answers = {};\r\n    this.util = new DomUtilities();\r\n    this.dom = ccsdk.dom;\r\n    this.displayThankYouCb = ( e: any ) => {\r\n      //perform final post\r\n      this.finalPost( null, null );\r\n      if ( this.ccsdk && this.ccsdk.tracking ) {\r\n        this.ccsdk.tracking.trackEvent( 'Completed Survey', {\r\n          token: this.ccsdk.tracking.token,\r\n          data: {\r\n            name: null,\r\n            action: null\r\n          }\r\n        }, null, null );\r\n      }\r\n\r\n      let thankyouHtml: any = templates.thankyou;\r\n      // thankyouHtml = thankyouHtml.replace(\"{{question}}\", this.surveyData.thankyouText);\r\n      // thankyouHtml = thankyouHtml.replace(\"{{question}}\", LanguageTextFilter.translateMessages(this, \"thankyouText\"));\r\n      let thankyouText = this.ccsdk.config.thankyouText ? this.ccsdk.config.thankyouText : ( this.surveyData.thankyouText ? this.surveyData.thankyouText : 'Thank You' );\r\n      let startText = this.ccsdk.config.startButtonText ? this.ccsdk.config.startButtonText : 'Start';\r\n      thankyouHtml = thankyouHtml.replace( \"{{question}}\", thankyouText );\r\n      thankyouHtml = thankyouHtml.replace( \"{{button}}\", startText );\r\n      thankyouHtml = thankyouHtml.replace( \"{{branding}}\", this.surveyData.branding && this.surveyData.branding.toUpperCase() === 'NONE' ? 'no-branding' : 'full-branding' )\r\n      this.ccsdk.dom.replaceInQuestionsContainer( thankyouHtml );\r\n      //TODO : Fix this Add class not working???\r\n      let thankyouContainer: any = this.util.get( \"#cc-thankyou-container\" );\r\n      ( window as any ).ccsdkDebug ? console.log( thankyouContainer ) : '';\r\n      this.util.addClass( thankyouContainer[ 0 ], 'show-thankyou-slide' );\r\n      let onSurveyEndEvent = new CustomEvent( Constants.SURVEY_END_EVENT + \"-\" + this.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyEndEvent );\r\n      //set done cookie for 30 days.\r\n      Cookie.set( this.surveyToken + '-finish', 'true', 30, '/' );\r\n      setTimeout( () => {\r\n        this.ccsdk.dom.destroyListeners();\r\n        this.destroy();\r\n      }, 2000 );\r\n    }\r\n\r\n    this.destroySurveyCb = ( e: any ) => {\r\n      let self: SurveyHandler = this;\r\n      //send end survey event.\r\n      let onSurveyEndEvent = new CustomEvent( Constants.SURVEY_END_EVENT + \"-\" + this.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyEndEvent );\r\n      self.destroy();\r\n    }\r\n\r\n    this.acceptAnswersCb = ( e: any ) => {\r\n      let self: SurveyHandler = this;\r\n      // (window as any).ccsdkDebug?console.log(self):'';\r\n      // (window as any).ccsdkDebug?console.log('question answered',e:'')\r\n      let data: any = <any>e.detail;\r\n      let response: any = {};\r\n      response.questionId = data.questionId;\r\n      switch ( data.type ) {\r\n        case 'scale':\r\n          response.text = null;\r\n          response.number = Number( data.data.number );\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'nps':\r\n          response.text = null;\r\n          response.number = Number( data.data.number );\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'radio':\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          // response.number = Number(data.data.number);\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'radioImage':\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'smile':\r\n          response.text = null;\r\n          response.number = Number( data.data.number );\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'star':\r\n          response.text = null;\r\n          response.number = Number( data.data.number );\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'multiline':\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex( data.index );\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'singleline':\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex( data.index );\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'number':\r\n          response.text = null;\r\n          response.number = Number( data.data.number );\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex( data.index );\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'checkbox':\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex( data.index );\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'select':\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex( data.index );\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'slider':\r\n          response.text = data.data.text;\r\n          response.number = Number( data.data.number );\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex( data.index );\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  fetchQuestions( successcb, errorcb ) {\r\n    this.randomNumber = parseInt( ( String )( Math.random() * 1000 ) );\r\n    let surveyUrl = Config.SURVEY_BY_TOKEN.replace( \"{token}\", \"\" + this.surveyToken );\r\n    // surveyUrl = surveyUrl.replace(\"{tabletId}\", \"\" + this.randomNumber);\r\n    surveyUrl = Config.API_URL + surveyUrl;\r\n    RequestHelper.get( surveyUrl, successcb, errorcb );\r\n\r\n    // (window as any).ccsdkDebug?console.log(data):'';\r\n    // this.surveyData = data.then(function();\r\n    // (window as any).ccsdkDebug?console.log(this.surveyData):'';\r\n  }\r\n\r\n  removeAnswer( questionId ) {\r\n    delete this.answers[ questionId ];\r\n    delete this.surveyAnswers[ questionId ];\r\n  }\r\n\r\n  attachSurvey( surveyData: any ) {\r\n    this.surveyData = surveyData;\r\n    this.setupPrefill();\r\n    this.setupSurveyContainer();\r\n    //clean survey\r\n    this.cleanSurvey();\r\n    this.displayQuestions();\r\n    this.displayThankYou();\r\n    this.destroySurvey();\r\n  }\r\n\r\n  setupPrefill() {\r\n    if ( this.surveyData && this.surveyData.preFill && this.surveyData.preFill.length > 0 ) {\r\n      this.surveyData.preFill.map( response => {\r\n        this.fillPrefillQuestionObject( response.questionId, response );\r\n      } )\r\n    }\r\n  }\r\n\r\n  cleanSurvey() {\r\n    this.questionsToDisplay = [];\r\n    this.answers = {};\r\n    this.surveyAnswers = {};\r\n    this.conditionalQuestions = [];\r\n  }\r\n\r\n  setupSurveyContainer() {\r\n    let surveyHtml: any = templates.question_survey;\r\n    surveyHtml = surveyHtml.replace( \"{{surveyToken}}\", this.surveyToken );\r\n    surveyHtml = surveyHtml.replace( \"{{animation}}\", this.surveyDisplay.surveyPopupAnimation );\r\n    surveyHtml = surveyHtml.replace( /{{location}}/g, this.surveyDisplay.surveyPosition );\r\n    this.ccsdk.dom.appendInBody( surveyHtml );\r\n  }\r\n\r\n  displayQuestionSelector() {\r\n\r\n  }\r\n\r\n  displayWelcomeQuestion( warningWelcomeText?: string ) {\r\n    //call this with true when welcome container is clicked.\r\n    // this.ccsdk.addThrottlingEntries(false);\r\n    let onSurveyImpressionEvent = new CustomEvent( Constants.SURVEY_IMPRESSION_EVENT + \"-\" + this.surveyToken );\r\n    document.dispatchEvent( onSurveyImpressionEvent );\r\n    this.ccsdk.surveyStartTime = new Date();\r\n    let self = this;\r\n    let welcomeHtml: any = templates.question_start;\r\n    welcomeHtml = welcomeHtml.replace( \"{{surveyToken}}\", this.surveyToken );\r\n    // welcomeHtml = welcomeHtml.replace(\"{{question}}\", this.surveyData.welcomeText);\r\n    let welcomeText = this.ccsdk.config.welcomeText ? this.ccsdk.config.welcomeText : 'Welcome';\r\n    // welcomeHtml = welcomeHtml.replace(\"{{question}}\", LanguageTextFilter.translateMessages(this, \"welcomeText\"));\r\n    let startText = this.ccsdk.config.startButtonText ? this.ccsdk.config.startButtonText : 'Start';\r\n    if ( warningWelcomeText ) {\r\n      document.getElementById( this.surveyToken + \"-welcome\" ).remove();\r\n      welcomeHtml = welcomeHtml.replace( \"{{question}}\", warningWelcomeText );\r\n      welcomeHtml = welcomeHtml.replace( \"{{button}}\", \"Close\" );\r\n      welcomeHtml = welcomeHtml.replace( \"{{action}}\", \"button-close\" );\r\n    } else {\r\n      welcomeHtml = welcomeHtml.replace( \"{{question}}\", welcomeText );\r\n      welcomeHtml = welcomeHtml.replace( \"{{button}}\", startText );\r\n      welcomeHtml = welcomeHtml.replace( \"{{action}}\", \"survey-start\" );\r\n    }\r\n    welcomeHtml = welcomeHtml.replace( \"{{location}}\", this.surveyDisplay.position );\r\n    welcomeHtml = welcomeHtml.replace( \"{{animation}}\", this.surveyDisplay.welcomePopupAnimation );\r\n    // (window as any).ccsdkDebug?console.log(\"Appending in body\"):'';\r\n    this.ccsdk.dom.appendInBody( welcomeHtml );\r\n    this.ccsdk.dom.showWelcomeContainer();\r\n    this.setCoolDownPeriod( this.ccsdk.config, this.surveyToken )\r\n    if ( ( typeof this.ccsdk.config.keepAlive != undefined ) && ( this.ccsdk.config.keepAlive > 0 ) ) {\r\n      this.welcomeQuestionDisplayTime = new Date();\r\n      this.welcomeInterval = setInterval( () => { self.checkWelcomeQuestionDisplay( self.ccsdk.config.keepAlive ) }\r\n        , 1000 );\r\n    }\r\n\r\n    this.acceptAnswers();\r\n    // self.survey.displayLanguageSelector();\r\n\r\n  }\r\n\r\n  setCoolDownPeriod( campaign, surveyToken ) {\r\n    if ( campaign && campaign.coolDownPeriod && campaign.coolDownPeriod != 0 ) {\r\n      Cookie.set( surveyToken + '-coolDown', 'true', campaign.coolDownPeriod / 86400, '/' );\r\n    } else {\r\n      Cookie.set( surveyToken + '-coolDown', 'true', 1, '/' );\r\n    }\r\n  }\r\n\r\n  checkWelcomeQuestionDisplay( keepAlive ) {\r\n    let self = this;\r\n    let now = new Date();\r\n    if ( keepAlive ) {\r\n      // console.log((now.getTime() - this.welcomeQuestionDisplayTime.getTime()) / 1000);\r\n      if ( keepAlive <= ( now.getTime() - this.welcomeQuestionDisplayTime.getTime() ) / 1000 ) {\r\n        self.killWelcomeQuestion();\r\n      }\r\n    }\r\n  }\r\n\r\n  killWelcomeQuestion() {\r\n    this.destroy();\r\n    clearInterval( this.welcomeInterval );\r\n  }\r\n  cancelKillWelcomeQuestion() {\r\n    clearInterval( this.welcomeInterval );\r\n  }\r\n\r\n  displayLanguageSelector() {\r\n    let self = this;\r\n    let options1: string;\r\n    let qId = 'languageSelector';\r\n    let cTemplate1 = templates.language_selector;\r\n    options1 = this.util.generateLanguageSelectOptions( [ \"default\" ] );\r\n    if ( this.surveyData.translated ) {\r\n      options1 = this.util.generateLanguageSelectOptions( [ \"default\" ].concat( Object.keys( this.surveyData.translated ) ) );\r\n    }\r\n    cTemplate1 = cTemplate1.replace( /{{questionId}}/g, qId );\r\n    cTemplate1 = cTemplate1.replace( \"{{options}}\", options1 );\r\n    cTemplate1 = cTemplate1.replace( \"{{requiredLabel}}\", true ? \"*\" : \"\" );\r\n    this.ccsdk.dom.replaceInQuestionsContainer( cTemplate1 );\r\n    let $questionContainer = document.\r\n      querySelectorAll( \".cc-questions-container\" );\r\n    let $body = document.getElementsByTagName( \"body\" )[ 0 ];\r\n\r\n    this.util.addClass( $questionContainer[ 0 ].firstChild, 'show-slide' );\r\n    this.languageSelect = new Select( qId );\r\n    let submitBtn = document.querySelectorAll( '.submit-icon' );\r\n    this.util.removeClassAll( submitBtn, 'act-cc-button-next' );\r\n    this.util.addClassAll( submitBtn, 'act-cc-button-lang-next' );\r\n    if ( this.languageSelect ) {\r\n      this.languageSelect.destroyListeners();\r\n    }\r\n    this.languageSelect.init( qId );\r\n    let selectRes = '';\r\n    if ( this.util.checkIfListenerExists( '#' + qId + \" .cc-select-options .cc-select-option\", this.domListeners ) ) {\r\n      // return;\r\n      ( window as any ).ccsdkDebug ? console.log( \"display language select - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId + \" .cc-select-options .cc-select-option\" );\r\n    }\r\n    let ref = this.util.initListener( 'click', '#' + qId + \" .cc-select-options .cc-select-option\", function () {\r\n      self.ccsdk.debug ? console.log( 'languageSelectOption' ) : '';\r\n      selectRes = document.querySelectorAll( '#' + qId + \" .cc-select-trigger\" )[ 0 ].innerHTML;\r\n    } );\r\n    this.domListeners.push( ref );\r\n    ref.internalHandler = this.util.listener( $body, ref.type, ref.id, ref.cb );\r\n\r\n\r\n    let languageSelect2 = this.util.initListener( \"click\", \".act-cc-button-lang-next\", function () {\r\n      self.ccsdk.debug ? console.log( 'languageNext' ) : '';\r\n      self.ccsdk.config.language = \"default\";\r\n      self.ccsdk.config.language = selectRes; //language selection from menu then show first question\r\n      //set config rtl or ltr\r\n      let isRTL = /[\\u0600-\\u06FF]/.test( selectRes );\r\n      self.ccsdk.config.textDirection = isRTL ? 'rtl' : 'ltr';\r\n      self.ccsdk.setHtmlTextDirection();\r\n      self.util.removeClassAll( submitBtn, 'act-cc-button-lang-next' );\r\n      self.util.addClassAll( submitBtn, 'act-cc-button-next' );\r\n      self.ccsdk.dom.loadFirstQuestion();        // this.loadFirstQuestion();\r\n      // self.postPrefillPartialAnswer( false, null, null );\r\n    } );\r\n    this.domListeners.push( languageSelect2 );\r\n\r\n    languageSelect2.internalHandler = this.util.listener( $body, languageSelect2.type, languageSelect2.id, languageSelect2.cb );\r\n\r\n\r\n\r\n    // this.util.addClass(thankyouContainer[0], 'show-thankyou-slide');\r\n\r\n    // this.ccsdk.dom.appendInBody(cTemplate1);\r\n    // this.ccsdk.dom.showLanguageSelector();\r\n    ( window as any ).ccsdkDebug ? console.log( cTemplate1 ) : '';\r\n  }\r\n\r\n  displayThankYou() {\r\n    let self: SurveyHandler = this;\r\n    document.addEventListener( 'ccdone', this.displayThankYouCb );\r\n  }\r\n\r\n\r\n  displayQuestions() {\r\n    //check question is supported, based on question types.\r\n    //filter pre fill questions.\r\n    this.questions = this.surveyData.questions;\r\n\r\n    // this.questionsToDisplay = (this.surveyData.questions as any[]).filter(this.filterQuestions);\r\n    this.filterQuestions();\r\n    //sort questions and display them?\r\n    this.questionsToDisplay = this.questionsToDisplay.sort( this.questionCompare );\r\n    let ccSurvey: any;\r\n    ccSurvey = document.getElementsByClassName( \"cc-questions-container\" );\r\n    // ccSurvey = ccSurvey[0];\r\n    let surveyObject = ccSurvey[ 0 ];\r\n    // (window as any).ccsdkDebug?console.log(this.questionsToDisplay):'';\r\n    //chec\r\n    //for now just do 1st question.\r\n    for ( let question of this.questionsToDisplay ) {\r\n      if ( this.checkConditionals( question ) ) {\r\n        let compiledTemplate = this.compileTemplate( question );\r\n        question.compiledTemplate = compiledTemplate;\r\n        // surveyObject.innerHTML += compiledTemplate;\r\n        //register handlers for onclick?\r\n      } else {\r\n        if ( this.isPrefillQuestion( question ) ) {\r\n          this.prefillQuestions.push( question );\r\n        }\r\n      }\r\n      //else don't display it.\r\n    }\r\n    // (window as any).ccsdkDebug?console.log(surveyObject.innerHTML):'';\r\n    // this.postPartialAnswer(this.questionsToDisplay[0], \"test\");\r\n\r\n  }\r\n\r\n  getSurveyQuestions(): any {\r\n    return this.questionsToDisplay;\r\n  }\r\n\r\n  getAnswerForQuestionId( questionId: string ) {\r\n    let answer = this.surveyAnswers[ questionId ];\r\n    if ( typeof answer === 'undefined' ) {\r\n      for ( let response of this.prefillResponses ) {\r\n        if ( response.questionId == questionId ) {\r\n          return response;\r\n        }\r\n      }\r\n    }\r\n    return this.surveyAnswers[ questionId ];\r\n  }\r\n\r\n  acceptAnswers() {\r\n    let self: SurveyHandler = this;\r\n    // (window as any).ccsdkDebug?console.log('add question answered listener':'')\r\n    document.addEventListener( 'q-answered', this.acceptAnswersCb );\r\n  }\r\n\r\n  fillPrefillQuestionObject( id: any, response: any ) {\r\n    let question: any = this.getQuestionById( id );\r\n    let responseStored = this.getPrefillResponseById( id );\r\n    if ( responseStored != null ) {\r\n      this.updatePrefillResponseById( id, response );\r\n    } else {\r\n      this.prefillResponses.push( response )\r\n    }\r\n  }\r\n\r\n  fillPrefill( prefillObj: PrefillDictionary ) {\r\n    Object.keys( prefillObj ).map( x => {\r\n      this.prefillWithTags[ x.toLowerCase() ] = prefillObj[ x ];\r\n    } );\r\n    ( window as any ).ccsdkDebug ? console.log( 'prefillByTag', this.prefillWithTags ) : '';\r\n  }\r\n\r\n  fillPrefillByNote( prefillObj: PrefillDictionary ) {\r\n    Object.keys( prefillObj ).map( x => {\r\n      this.prefillWithNote[ x.toLowerCase() ] = prefillObj[ x ];\r\n    } );\r\n    ( window as any ).ccsdkDebug ? console.log( 'prefillByNote', this.prefillWithNote ) : '';\r\n  }\r\n\r\n  fillPrefillDirect( prefillObj: PrefillDictionary ) {\r\n    Object.keys( prefillObj ).forEach( x => {\r\n      this.prefillDirect[ x ] = prefillObj[ x ];\r\n    } );\r\n\r\n    ( window as any ).ccsdkDebug ? console.log( 'prefillDirect', this.prefillDirect ) : '';\r\n  }\r\n\r\n  fillPrefillQuestion( id: any, value: any, valueType: string ) {\r\n    let question: any = this.getQuestionById( id );\r\n\r\n    let response: any;\r\n    let responseStored = this.getPrefillResponseById( id );\r\n    if ( responseStored != null ) {\r\n      response = responseStored;\r\n    } else {\r\n      response = {\r\n        questionId: question.id,\r\n        questionText: question.text,\r\n        textInput: null,\r\n        numberInput: null\r\n      };\r\n    }\r\n    valueType = this.getAnswerTypeFromDisplayType( question.displayType );\r\n\r\n    if ( valueType.toLowerCase() == \"number\" ) {\r\n      response.numberInput = value;\r\n    }\r\n    if ( valueType.toLowerCase() == \"text\" ) {\r\n      response.textInput = value;\r\n    }\r\n    if ( responseStored != null ) {\r\n      this.updatePrefillResponseById( id, response );\r\n    } else {\r\n      this.prefillResponses.push( response )\r\n    }\r\n\r\n  }\r\n\r\n  postPrefillPartialAnswer( fullSubmission = false, successcb, errorcb ) {\r\n    if ( !fullSubmission && this._prefillsPartiallyPosted ) {\r\n      return;\r\n    }\r\n    this._prefillsPartiallyPosted = true;\r\n    if ( !this.surveyData.partialResponseId ) {\r\n      return;\r\n    }\r\n    let surveyPartialUrl = Config.SURVEY_PARTIAL_RESPONSE.replace( \"{id}\", this.surveyData.partialResponseId );\r\n    surveyPartialUrl = surveyPartialUrl.replace( \"{complete}\", \"false\" );\r\n    surveyPartialUrl = Config.API_URL + surveyPartialUrl;\r\n    ( window as any ).ccsdkDebug ? console.log( \"Posting Prefill Responses to Server\" ) : '';\r\n    ( window as any ).ccsdkDebug ? console.log( this.prefillResponses ) : '';\r\n\r\n    if ( !this.surveyData.partialResponseId ) {\r\n      // run successCB if there is one.\r\n      if ( successcb ) {\r\n        successcb();\r\n      }\r\n      return;\r\n    }\r\n    if ( typeof this.prefillResponses !== 'undefined' && this.prefillResponses.length > 0 ) {\r\n      RequestHelper.postWithHeaders( surveyPartialUrl, this.prefillResponses, {}, successcb, errorcb );\r\n    } else {\r\n      // console.log('No Prefill data');\r\n      return;\r\n    }\r\n  }\r\n\r\n  updatePrefillResponseById( id: any, resp: any ) {\r\n    for ( let response of this.prefillResponses ) {\r\n      if ( response.questionId == id ) {\r\n        response = resp;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  getPrefillResponseById( id: any ) {\r\n    return this.prefillResponses.find( x => x.id === id );\r\n  }\r\n\r\n  getQuestionById( id: any ) {\r\n    return this.questions.find( x => x.id === id );\r\n  }\r\n\r\n  postPartialAnswer( index: any, response: any, complete = false, successcb, errorcb ) {\r\n    this.postPrefillPartialAnswer( complete, null, null );\r\n\r\n    let question: any = this.questionsToDisplay[ index ];\r\n\r\n    let data: any = {\r\n      questionId: question.id,\r\n      questionText: question.text,\r\n      textInput: response.text,\r\n      numberInput: response.number\r\n    };\r\n\r\n    let surveyPartialUrl = Config.SURVEY_PARTIAL_RESPONSE.replace( \"{id}\", this.surveyData.partialResponseId );\r\n    ( window as any ).ccsdkDebug ? console.log( \"partial response\", question.id == this.questionsToDisplay[ this.questionsToDisplay.length - 1 ].id ) : '';\r\n    surveyPartialUrl = surveyPartialUrl.replace( \"{complete}\", `${ complete }` );\r\n    surveyPartialUrl = Config.API_URL + surveyPartialUrl;\r\n\r\n    //add partial answer to main answer\r\n    this.surveyAnswers[ question.id ] = data;\r\n\r\n    data = [ data ];\r\n\r\n    let onSurveyAnswerEvent = new CustomEvent( Constants.SURVEY_ANSWER_EVENT + \"-\" + this.surveyToken );\r\n    document.dispatchEvent( onSurveyAnswerEvent );\r\n\r\n    if ( !this.surveyData.partialResponseId ) {\r\n      // run success callback and return\r\n      if ( successcb ) {\r\n        successcb();\r\n      }\r\n      return;\r\n    }\r\n\r\n    if ( question.id == this.questionsToDisplay[ this.questionsToDisplay.length - 1 ].id ) {\r\n      //last question post moved to separate function\r\n      RequestHelper.postWithHeaders( surveyPartialUrl, data, {}, successcb, errorcb );\r\n    } else {\r\n      RequestHelper.postWithHeaders( surveyPartialUrl, data, {}, successcb, errorcb );\r\n    }\r\n\r\n  }\r\n\r\n  finalPost( successcb, errorcb ) {\r\n    //last question\r\n    let postSurveyFinalUrl = Config.POST_SURVEY_FINAL.replace( \"{tokenId}\", this.ccsdk.surveyToken );\r\n    postSurveyFinalUrl = Config.API_URL + postSurveyFinalUrl;\r\n    let answersAll = [];\r\n    // hack for partial flushing\r\n    let lastAnswer;\r\n\r\n    if ( Object.keys( this.surveyAnswers ).length == 0 ) {\r\n      return;\r\n    }\r\n    for ( let answer in this.surveyAnswers ) {\r\n      let response = this.surveyAnswers[ answer ];\r\n      if ( response && ( response.textInput !== null || response.numberInput !== null ) ) {\r\n        answersAll.push( response );\r\n        lastAnswer = response;\r\n      }\r\n    }\r\n    for ( let answer in this.prefillResponses ) {\r\n      answersAll.push( this.prefillResponses[ answer ] );\r\n    }\r\n    let timeAtPost = new Date().getTime();\r\n    let finalData = {\r\n      id: this.ccsdk.surveyToken,\r\n      user: this.ccsdk.config.username,\r\n      locationId: null,\r\n      responses: answersAll,\r\n      nps: 0,\r\n      surveyClient: Constants.SURVEY_CLIENT,\r\n      responseDuration: Math.floor( ( timeAtPost - this.ccsdk.surveyStartTime.getTime() ) / 1000 )\r\n    };\r\n    if ( lastAnswer ) {\r\n      let _lastAnswer = {\r\n        text: lastAnswer.textInput,\r\n        number: lastAnswer.numberInput\r\n      }\r\n      this.postPartialAnswer( this.questionsToDisplay.length - 1, _lastAnswer, true, null, null )\r\n    }\r\n\r\n    if ( finalData.responses && finalData.responses.length > 0 ) {\r\n      RequestHelper.postWithHeaders( postSurveyFinalUrl, finalData, {}, successcb, errorcb );\r\n    } else {\r\n      successcb();\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   *\r\n   * check if conditions are satsified which are required to display question?\r\n   *\r\n   * @param {any} question\r\n   * @memberof Survey\r\n   */\r\n  checkConditionals( question: any ) {\r\n    return true;\r\n  }\r\n\r\n  compileTemplate( question: any ) {\r\n    let self: SurveyHandler = this;\r\n    //get question type\r\n    let questionTemplate;\r\n    // (window as any).ccsdkDebug?console.log(question):'';\r\n    if ( question != 'undefined' ) {\r\n      switch ( question.displayType ) {\r\n        case \"Slider\":\r\n          let displayLegend = question.displayLegend;\r\n          let opt: any = question.multiSelect[ 0 ].split( \"-\" );\r\n          let optMin: any = opt[ 0 ].split( \";\" );\r\n          let optMax: any = opt[ 1 ].split( \";\" );\r\n          //get text question template and compile it.\r\n          questionTemplate = templates.question_slider;\r\n          questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n          questionTemplate = questionTemplate.replace( /{{min}}/g, optMin[ 0 ] );\r\n          if ( displayLegend[ 0 ] ) {\r\n            questionTemplate = questionTemplate.replace( /{{minLabel}}/g, displayLegend[ 0 ] + '-' );\r\n          } else {\r\n            questionTemplate = questionTemplate.replace( /{{minLabel}}/g, \"\" );\r\n          }\r\n          questionTemplate = questionTemplate.replace( /{{max}}/g, optMax[ 0 ] );\r\n          if ( displayLegend[ 1 ] ) {\r\n            questionTemplate = questionTemplate.replace( /{{maxLabel}}/g, displayLegend[ 1 ] + \"-\" );\r\n          } else {\r\n            questionTemplate = questionTemplate.replace( /{{maxLabel}}/g, \"\" );\r\n          }\r\n          questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n          questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n          questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n          break;\r\n        case \"Scale\":\r\n          //get text question template and compile it.\r\n          ( window as any ).ccsdkDebug ? console.log( question.questionTags ) : '';\r\n          if ( question.questionTags.includes( \"NPS\" ) ) {\r\n            questionTemplate = templates.question_nps;\r\n            questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n            questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n            questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n            questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n          } else if ( question.questionTags.includes( \"CSAT\" ) ) {\r\n            if ( question.questionTags.includes( \"csat_satisfaction_5\" ) ) {\r\n              questionTemplate = templates.question_csat_satisfaction_5;\r\n            } else if ( question.questionTags.includes( \"csat_agreement_5\" ) ) {\r\n              questionTemplate = templates.question_csat_agreement_5;\r\n            }\r\n            questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n            questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n            questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n            questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n          } else {\r\n            let tileColor = '';\r\n            let style = '';\r\n            if ( question.attributes != null && question.attributes.scaleColor && question.attributes.scaleColor.length > 0 ) {\r\n              if ( question.attributes.scaleColor !== 'Gradient' ) {\r\n                tileColor = question.attributes.scaleColor;\r\n              } else {\r\n                tileColor = \"#02BAEE\"\r\n              }\r\n            } else if ( question.presentationMode != null && question.presentationMode.indexOf( \"Color\" ) !== -1 ) {\r\n              tileColor = question.presentationMode.split( ':' )[ 1 ];\r\n            }\r\n            if ( tileColor.length > 0 ) {\r\n              let tileColorDark = this.util.shadeBlendConvert( -0.3, tileColor, undefined );\r\n              style = '\\\r\n                <style>\\\r\n                #id'+ question.id + ' .option-number-item.option-scale{\\\r\n                  background-color : '+ tileColor + ';\\\r\n                }\\\r\n                #id'+ question.id + ' .option-number-item.option-scale:hover,\\\r\n                #id'+ question.id + ' .option-number-item.option-scale.selected{\\\r\n                  background-color : '+ tileColorDark + ';\\\r\n                }\\\r\n                </style>\\\r\n              ';\r\n            }\r\n\r\n            questionTemplate = templates.question_scale;\r\n            questionTemplate = questionTemplate.replace( /{{style}}/g, style );\r\n            questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n            questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n            questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n            questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n            //construct NPS scale here....\r\n            let startRange = 0.0;\r\n            let endRange = 10.0;\r\n            let options = \"\";\r\n            let startRangeLabel = \"\";\r\n            // let startRangeLabel = \"\";\r\n            // let endRangeLabel = \"Very likely\";\r\n            let endRangeLabel = \"\";\r\n            let midRangeLabel = \"\";\r\n\r\n            if ( question.questionTags.includes( \"ces_agree_5\" ) || question.questionTags.includes( \"ces_agree_7\" ) ) {\r\n\r\n              startRangeLabel = \"Strongly Disagree\";\r\n              endRangeLabel = \"Strongly Agree\";\r\n              if ( question.questionTags.includes( \"ces_agree_7\" ) ) { \r\n                midRangeLabel = \"Somewhat Agree\";\r\n              }\r\n            }\r\n            else if ( question.questionTags.includes( \"ces_effort_5\" ) || question.questionTags.includes( \"ces_effort_7\" ) ) {\r\n              startRangeLabel = \"High Effort\";\r\n              endRangeLabel = \"Low Effort\";\r\n              if ( question.questionTags.includes( \"ces_effort_7\" ) ) {  \r\n                midRangeLabel = \"Moderate Effort\";\r\n              }\r\n            }\r\n\r\n            else if( question.anchorMetricName != null ) {\r\n              let metricName = question.anchorMetricName;\r\n              let customMetric = this.surveyData.customMetrics[metricName];\r\n              startRangeLabel = customMetric.optionCategories[0].label;\r\n              midRangeLabel = customMetric.optionCategories[1].label;\r\n              endRangeLabel = customMetric.optionCategories[2].label; \r\n            }\r\n            \r\n            let displayLegend = LanguageTextFilter.translateDisplayLegend( this, question );\r\n            if ( displayLegend ) {\r\n              if ( displayLegend.length > 0 ) {\r\n                startRangeLabel = displayLegend[ 0 ] ? displayLegend[ 0 ] : null;\r\n                endRangeLabel = displayLegend[ 1 ] ? displayLegend[ 1 ] : null;\r\n              }\r\n            }\r\n            if ( question.multiSelect.length > 0 ) {\r\n              startRange = parseFloat( question.multiSelect[ 0 ].split( \"-\" )[ 0 ] );\r\n              if ( startRangeLabel == null ) {\r\n                startRangeLabel = question.multiSelect[ 0 ].split( \"-\" )[ 0 ].split( \";\" )[ 1 ];\r\n              }\r\n              endRange = parseFloat( question.multiSelect[ 0 ].split( \"-\" )[ 1 ] );\r\n              if ( endRangeLabel == null ) {\r\n                endRangeLabel = question.multiSelect[ 0 ].split( \"-\" )[ 1 ].split( \";\" )[ 1 ];\r\n              }\r\n            }\r\n            startRangeLabel = startRangeLabel == null ? \"\" : startRangeLabel;\r\n            endRangeLabel = endRangeLabel == null ? \"\" : endRangeLabel;\r\n            let mobileImageUrl = '';\r\n            let imageVisibility010 = 'hide';\r\n            let imageVisibility110 = 'hide';\r\n            let scaleVisibility = 'show-inline';\r\n            let scaleImageContainer = '';\r\n            if ( startRange == 0 && endRange == 10 ) {\r\n              mobileImageUrl = \"https://cx.getcloudcherry.com/microsurvey-assets/scale-0-10-neutral.svg\";\r\n              imageVisibility010 = 'show';\r\n              imageVisibility110 = 'hide';\r\n              scaleVisibility = 'hide';\r\n              scaleImageContainer = 'scale-image-container';\r\n            } else if ( startRange == 1 && endRange == 10 ) {\r\n              mobileImageUrl = \"https://cx.getcloudcherry.com/microsurvey-assets/scale-1-10-neutral.svg\";\r\n              imageVisibility010 = 'hide';\r\n              imageVisibility110 = 'show';\r\n              scaleVisibility = 'hide';\r\n              scaleImageContainer = 'scale-image-container';\r\n            }\r\n            // console.log('scale', startRange, endRange);\r\n            let divider: any = 1;\r\n            if ( endRange < 11 ) {\r\n            } else {\r\n              divider = ( endRange - startRange ) / 10.0;\r\n            }\r\n            let initial = 0.0;\r\n            let optionStyle = '';\r\n            let legendDimension;\r\n            if ( ( window as any ).isMobile ) {\r\n              if ( endRange < 11 ) {\r\n                let parentContainer = window.innerWidth - 40;\r\n                let dimension = ( ( 100 / ( endRange - startRange + 1 ) ) - .5 ) * parentContainer / 100;\r\n                dimension = dimension > 48 ? 48 : dimension;\r\n                legendDimension = ( endRange - startRange + 1 ) * ( dimension + 1 );\r\n                optionStyle = `width:${ dimension }px;height:${ dimension }px;padding:${ ( dimension - 15 ) / 2 }px;`;\r\n              }\r\n            } else {\r\n              imageVisibility010 = 'hide';\r\n              imageVisibility110 = 'hide';\r\n              scaleVisibility = 'show-inline';\r\n              scaleImageContainer = '';\r\n              mobileImageUrl = \"\";\r\n            }\r\n\r\n            if ( question.questionTags.includes( \"CES\" ) ) {\r\n              var leftWidth = 38*3 + 'px';\r\n              for ( let initial = startRange; initial <= endRange; initial += divider ) {\r\n                options += '<span data-rating=\"' + initial + '\" class=\"option-number-item option-' + endRange + '-scale-' + initial + ' ' + scaleVisibility + '\" style=\"' + optionStyle + '\">' + initial + '</span>';\r\n              }\r\n            }\r\n\r\n            else if(question.anchorMetricName != null) {  \r\n              let metricName = question.anchorMetricName;\r\n              let customMetric = this.surveyData.customMetrics[metricName];\r\n              \r\n              var cmwidthstart = customMetric.optionCategories[0].categoryRange.split(\",\")[0];\r\n              var cmwidthend = customMetric.optionCategories[1].categoryRange.split(\",\")[0];\r\n              var leftWidth = (cmwidthend - cmwidthstart)*38 + 'px';\r\n              \r\n              for(var iterator in customMetric.optionCategories) {  \r\n                let startRange = parseFloat(customMetric.optionCategories[iterator].categoryRange.split(\",\")[0]);\r\n                let endRange = parseFloat(customMetric.optionCategories[iterator].categoryRange.split(\",\")[1]);\r\n                \r\n                for (let initial = startRange; initial <= endRange; initial += divider) {             \r\n                  options += '<span data-rating=\"' + initial + '\" class=\"option-number-item option-scale\"' + scaleVisibility + '\" style=\"background:' + customMetric.optionCategories[iterator].color + '\">' + initial + '</span>';\r\n                }\r\n              }\r\n            }\r\n            else {\r\n              for ( let initial = startRange; initial <= endRange; initial += divider ) {\r\n                options += '<span data-rating=\"' + initial + '\" class=\"option-number-item option-scale ' + scaleVisibility + '\" style=\"' + optionStyle + '\">' + initial + '</span>';\r\n              }\r\n            }\r\n\r\n            if ( ( endRange - startRange + 1 ) <= 11 ) {\r\n              var optionLeftExtraClass = 'option-left-rating-text-small-container';\r\n              var optionMidExtraClass = 'option-mid-rating-text-small-container'; \r\n              var optionRightExtraClass = 'option-right-rating-text-small-container';\r\n              var optionMaxWidth = ( ( ( endRange - startRange + 1 ) * 38 / 2 ) - 5 ) + 'px';\r\n              // console.log(optionMaxWidth);\r\n            }\r\n            questionTemplate = questionTemplate.replace( \"{{legendStyle}}\", `style=\"position:relative;width:${ mobileImageUrl ? '100%' : legendDimension + 'px' };min-height: 20px;\"` )\r\n            questionTemplate = questionTemplate.replace( /\\{\\{radialLegend\\}\\}/g, mobileImageUrl ? 'radial-legend' : 'unknown-class' );\r\n            questionTemplate = questionTemplate.replace( \"{{optionsRange}}\", options );\r\n            // questionTemplate = questionTemplate.replace(\"{{maxWidth}}\", optionMaxWidth);\r\n            questionTemplate = questionTemplate.replace( /maxWidth/g, mobileImageUrl ? '35%;width:35%' : optionMaxWidth );\r\n            questionTemplate = questionTemplate.replace( /leftWidth/g, leftWidth );\r\n            questionTemplate = questionTemplate.replace( /{{optionLeftExtraClass}}/g, optionLeftExtraClass );\r\n            questionTemplate = questionTemplate.replace( /{{optionMidExtraClass}}/g,optionMidExtraClass);\r\n            questionTemplate = questionTemplate.replace( /{{optionRightExtraClass}}/g, optionRightExtraClass );\r\n            questionTemplate = questionTemplate.replace( \"{{leftLabel}}\", startRangeLabel );\r\n            questionTemplate = questionTemplate.replace( \"{{midLabel}}\", midRangeLabel);\r\n            questionTemplate = questionTemplate.replace( \"{{rightLabel}}\", endRangeLabel );\r\n            questionTemplate = questionTemplate.replace( /{{mobileImageUrl}}/g, '\"' + mobileImageUrl + '\"' );\r\n            questionTemplate = questionTemplate.replace( \"{{imageVisibility010}}\", imageVisibility010 );\r\n            questionTemplate = questionTemplate.replace( \"{{imageVisibility110}}\", imageVisibility110 );\r\n            questionTemplate = questionTemplate.replace( \"{{scaleImageContainer}}\", scaleImageContainer );\r\n          }\r\n\r\n          break;\r\n        case \"Text\":\r\n          //get text question template and compile it.\r\n          questionTemplate = templates.question_text;\r\n          questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n          questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n          questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n          questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n          questionTemplate = questionTemplate.replace( \"{{validationHint}}\", question.validationHint ? question.validationHint : \"\" );\r\n\r\n          break;\r\n        case \"Number\":\r\n          //get text question template and compile it.\r\n          questionTemplate = templates.question_number;\r\n          questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n          questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n          questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n          questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n          questionTemplate = questionTemplate.replace( \"{{validationHint}}\", question.validationHint ? question.validationHint : \"\" );\r\n\r\n          break;\r\n        case \"MultilineText\":\r\n          //get text question template and compile it.\r\n          questionTemplate = templates.question_multi_line_text;\r\n          questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n          questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n          questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n          questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n          questionTemplate = questionTemplate.replace( \"{{characterLimit}}\", question.attributes && question.attributes.characterLimit ? question.attributes.characterLimit : \"\" );\r\n          questionTemplate = questionTemplate.replace( \"{{validationHint}}\", question.validationHint ? question.validationHint : \"\" );\r\n\r\n          break;\r\n        case \"MultiSelect\":\r\n          let acTemplate: string;\r\n          let multiSelect1;\r\n          //get text question template and compile it.\r\n          multiSelect1 = Array.prototype.slice.call( LanguageTextFilter.translateMultiSelect( this, question ) );\r\n          if ( question.presentationMode == 'Invert' ) {\r\n            // console.log('selection option before reverse', multiSelect1);\r\n            multiSelect1.reverse();\r\n            // console.log('selection option after reverse', multiSelect1);\r\n            // console.log('selection api option', question.multiSelect);\r\n          }\r\n          //get text question template and compile it.\r\n          if ( ( ( question.displayStyle == 'radiobutton/checkbox' ) || ( question.displayStyle == 'icon' ) ) && ( multiSelect1.length < 6 ) ) {\r\n            // (window as any).ccsdkDebug?console.log(question.displayStyle):'';\r\n            let checkOptionContainsImage: boolean = self.util.checkOptionContainsImage( multiSelect1 );\r\n            // (window as any).ccsdkDebug?console.log('select radio image',checkOptionContainsImage):'';\r\n            if ( checkOptionContainsImage\r\n              && (\r\n                ( ( multiSelect1.length > 0 ) && multiSelect1[ 0 ].indexOf( \"Male\" ) !== -1 )\r\n                || ( ( multiSelect1.length > 0 ) && multiSelect1[ 0 ].indexOf( \"Yes\" ) !== -1 )\r\n                || ( ( multiSelect1.length > 1 ) && multiSelect1[ 1 ].indexOf( \"Yes\" ) !== -1 ) )\r\n\r\n            ) {\r\n              // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n              acTemplate = templates.question_checkbox;\r\n              let options2 = self.util.generateCheckboxImageOptions( question.multiSelect, multiSelect1, question.id );\r\n              // (window as any).ccsdkDebug?console.log(options2):'';\r\n              questionTemplate = acTemplate;\r\n              questionTemplate = questionTemplate.replace( /{{options}}/g, options2 );\r\n              acTemplate = questionTemplate;\r\n            } else if ( checkOptionContainsImage ) {\r\n              // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n              acTemplate = templates.question_checkbox;\r\n              let options2 = self.util.generateCheckboxIgnoreImageOptions( question.multiSelect, multiSelect1, question.id );\r\n              // (window as any).ccsdkDebug?console.log(options2):'';\r\n              questionTemplate = acTemplate;\r\n              questionTemplate = questionTemplate.replace( /{{options}}/g, options2 );\r\n              acTemplate = questionTemplate;\r\n            } else {\r\n              let options3: string = self.util.generateCheckboxOptions( question.multiSelect, multiSelect1, question.id );\r\n              // (window as any).ccsdkDebug?console.log(options2):'';\r\n              acTemplate = templates.question_checkbox;\r\n              questionTemplate = acTemplate.replace( /{{options}}/g, options3 );\r\n              acTemplate = questionTemplate;\r\n            }\r\n          } else {\r\n            // (window as any).ccsdkDebug?console.log('select type 3'):'';\r\n            acTemplate = templates.question_multi_select;\r\n\r\n            // acTemplate = templates.question_select;\r\n            let options3 = self.util.generateSelectOptions( question.multiSelect, multiSelect1 );\r\n\r\n            if ( self.ccsdk.config.language.indexOf( 'Default' ) === -1 ) {\r\n              if (\r\n                typeof question.translated !== 'undefined'\r\n                && question.translated != null\r\n                && typeof question.translated[ self.ccsdk.config.language ] !== 'undefined'\r\n                && question.translated[ self.ccsdk.config.language ].multiSelect !== 'undefined'\r\n                && question.translated[ self.ccsdk.config.language ].multiSelect.length > 0\r\n              ) {\r\n                multiSelect1 = Array.prototype.slice.call( question.translated[ self.ccsdk.config.language ].multiSelect );\r\n                if ( question.presentationMode == 'Invert' ) {\r\n                  multiSelect1.reverse();\r\n                }\r\n                options3 = self.util.generateSelectOptions( question.multiSelect, multiSelect1 );\r\n              }\r\n            }\r\n            // questionTemplate = acTemplate;\r\n            self.ccsdk.debug ? console.log( options3 ) : '';\r\n            questionTemplate = acTemplate.replace( /{{options}}/g, options3 );\r\n            acTemplate = questionTemplate;\r\n\r\n          }\r\n          questionTemplate = acTemplate;\r\n          questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n          questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n          questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n          questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n\r\n          break;\r\n        case \"Select\":\r\n          let acTemplate1: string;\r\n          let acTemplate2: string;\r\n          let options1: string;\r\n          let options2: string;\r\n          let multiSelect;\r\n          //get text question template and compile it.\r\n          multiSelect = Array.prototype.slice.call( LanguageTextFilter.translateMultiSelect( this, question ) );\r\n          let invertedMultiSelect;\r\n          if ( question.presentationMode == 'Invert' ) {\r\n            // console.log('selection option before reverse', multiSelect);\r\n            invertedMultiSelect = question.multiSelect ? question.multiSelect.slice().reverse() : [];\r\n            multiSelect.reverse();\r\n            // console.log('selection option after reverse', multiSelect);\r\n            // console.log('selection api option', question.multiSelect);\r\n          } else {\r\n            invertedMultiSelect = question.multiSelect;\r\n          }\r\n          if ( ( question.displayStyle == 'radiobutton/checkbox' ) && ( multiSelect.length < 6 ) ) {\r\n            // if(question.displayStyle == 'radiobutton/checkbox'){\r\n            // (window as any).ccsdkDebug?console.log('select type 1'):'';\r\n            // (window as any).ccsdkDebug?console.log(question.displayStyle):'';\r\n            // acTemplate1 = templates.question_radio;\r\n            // questionTemplate = acTemplate1;\r\n\r\n            let checkOptionContainsImage: boolean = self.util.checkOptionContainsImage( multiSelect );\r\n            ( window as any ).ccsdkDebug ? console.log( 'select radio image', checkOptionContainsImage ) : '';\r\n            if ( checkOptionContainsImage\r\n              && (\r\n                ( ( multiSelect.length > 0 ) && multiSelect[ 0 ].indexOf( \"Male\" ) !== -1 )\r\n                || ( ( multiSelect.length > 0 ) && multiSelect[ 0 ].indexOf( \"Yes\" ) !== -1 )\r\n                || ( ( multiSelect.length > 1 ) && multiSelect[ 1 ].indexOf( \"Yes\" ) !== -1 ) )\r\n            ) {\r\n              // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n              acTemplate2 = templates.question_radio_image;\r\n\r\n              options2 = self.util.generateRadioImageOptions( invertedMultiSelect, multiSelect, question.id );\r\n              ( window as any ).ccsdkDebug ? console.log( { options2 } ) : '';\r\n              questionTemplate = acTemplate2;\r\n              questionTemplate = questionTemplate.replace( /{{options}}/g, options2 );\r\n            } else if ( checkOptionContainsImage ) {\r\n              // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n              acTemplate2 = templates.question_radio_image;\r\n              options2 = self.util.generateRadioIgnoreImageOptions( invertedMultiSelect, multiSelect, question.id );\r\n              // (window as any).ccsdkDebug?console.log(options2):'';\r\n              questionTemplate = acTemplate2;\r\n              questionTemplate = questionTemplate.replace( /{{options}}/g, options2 );\r\n            } else {\r\n              acTemplate1 = templates.question_radio;\r\n              questionTemplate = acTemplate1;\r\n\r\n              options1 = self.util.generateRadioOptions( invertedMultiSelect, multiSelect, question.id );\r\n              questionTemplate = questionTemplate.replace( \"{{options}}\", options1 );\r\n            }\r\n          } else if ( ( question.displayStyle == 'icon' ) && ( multiSelect.length < 6 ) ) {\r\n            acTemplate1 = templates.question_radio;\r\n            questionTemplate = acTemplate1;\r\n            let invertedMultiSelect;\r\n            if ( question.presentationMode == 'Invert' ) {\r\n              invertedMultiSelect = question.multiSelect ? question.multiSelect.slice().reverse() : [];\r\n            } else {\r\n              invertedMultiSelect = question.multiSelect;\r\n            }\r\n            options1 = self.util.generateRadioOptions( invertedMultiSelect, multiSelect, question.id );\r\n            questionTemplate = questionTemplate.replace( \"{{options}}\", options1 );\r\n\r\n          } else {\r\n\r\n            ( window as any ).ccsdkDebug ? console.log( 'select type 3' ) : '';\r\n            acTemplate1 = templates.question_select;\r\n            options1 = self.util.generateSelectOptions( invertedMultiSelect, multiSelect );\r\n            if ( self.ccsdk.config.language.indexOf( 'Default' ) === -1 ) {\r\n              if ( typeof question.translated !== 'undefined'\r\n                && question.translated != null\r\n                && typeof question.translated[ self.ccsdk.config.language ] !== 'undefined'\r\n                && question.translated[ self.ccsdk.config.language ].multiSelect !== 'undefined'\r\n                && question.translated[ self.ccsdk.config.language ].multiSelect.length > 0\r\n              ) {\r\n                multiSelect = Array.prototype.slice.call( question.translated[ self.ccsdk.config.language ].multiSelect );\r\n                if ( question.presentationMode == 'Invert' ) {\r\n                  multiSelect.reverse();\r\n                }\r\n                options1 = self.util.generateSelectOptions( invertedMultiSelect, multiSelect );\r\n              }\r\n            }\r\n            questionTemplate = acTemplate1;\r\n            questionTemplate = questionTemplate.replace( \"{{options}}\", options1 );\r\n\r\n\r\n          }\r\n          // console.log( questionTemplate );\r\n          questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n          questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n          questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n          questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n          // (window as any).ccsdkDebug?console.log(questionTemplate):'';\r\n\r\n          break;\r\n        case \"Smile-5\":\r\n          //get text question template and compile it.\r\n          if ( question.presentationMode == \"Invert\" ) {\r\n            questionTemplate = templates.question_smile_5_inverted;\r\n\r\n          } else {\r\n\r\n            questionTemplate = templates.question_smile_5;\r\n          }\r\n          // let startRangeLabel = \"Very unlikely\";\r\n          // let endRangeLabel = \"Very likely\";\r\n          let startRangeLabel = \"\";\r\n          let endRangeLabel = \"\";\r\n          let displayLegend2 = LanguageTextFilter.translateDisplayLegend( this, question );\r\n\r\n          if ( displayLegend2 ) {\r\n            if ( displayLegend2.length > 0 ) {\r\n              startRangeLabel = displayLegend2[ 0 ] ? displayLegend2[ 0 ] : null;\r\n              endRangeLabel = displayLegend2[ 1 ] ? displayLegend2[ 1 ] : null;\r\n            }\r\n          }\r\n          startRangeLabel = startRangeLabel == null ? \"\" : startRangeLabel;\r\n          endRangeLabel = endRangeLabel == null ? \"\" : endRangeLabel;\r\n          questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n          questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n          questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n          questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n          questionTemplate = questionTemplate.replace( \"{{leftLabel}}\", startRangeLabel );\r\n          questionTemplate = questionTemplate.replace( \"{{rightLabel}}\", endRangeLabel );\r\n          break;\r\n        case \"Star-5\":\r\n          //get text question template and compile it.\r\n          let startRangeLabel1 = \"\";\r\n          let endRangeLabel1 = \"\";\r\n          let displayLegend3 = LanguageTextFilter.translateDisplayLegend( this, question );\r\n\r\n          if ( displayLegend3 ) {\r\n            if ( displayLegend3.length > 0 ) {\r\n              startRangeLabel1 = displayLegend3[ 0 ] ? displayLegend3[ 0 ] : null;\r\n              endRangeLabel1 = displayLegend3[ 1 ] ? displayLegend3[ 1 ] : null;\r\n            }\r\n          }\r\n          startRangeLabel1 = startRangeLabel1 == null ? \"\" : startRangeLabel1;\r\n          endRangeLabel1 = endRangeLabel1 == null ? \"\" : endRangeLabel1;\r\n          questionTemplate = templates.question_star_5;\r\n          questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n          questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n          questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n          questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n          questionTemplate = questionTemplate.replace( \"{{leftLabel}}\", startRangeLabel1 );\r\n          questionTemplate = questionTemplate.replace( \"{{rightLabel}}\", endRangeLabel1 );\r\n          break;\r\n      }\r\n    }\r\n    return questionTemplate;\r\n  }\r\n\r\n  questionCompare( a: any, b: any ) {\r\n    return a.sequence - b.sequence;\r\n  }\r\n\r\n  getAnswerTypeFromDisplayType( displayType: string ) {\r\n    // console.log('question type',displayType);\r\n    let type: string;\r\n    switch ( displayType ) {\r\n      case \"Slider\":\r\n        type = \"number\";\r\n        break;\r\n      case \"Scale\":\r\n        type = \"number\";\r\n        break;\r\n      case \"Text\":\r\n        type = \"text\";\r\n        break;\r\n      case \"Number\":\r\n        type = \"number\";\r\n        break;\r\n      case \"MultilineText\":\r\n        type = \"text\";\r\n        break;\r\n      case \"MultiSelect\":\r\n        type = \"text\";\r\n        break;\r\n      case \"Select\":\r\n        type = \"text\";\r\n        break;\r\n      case \"Dropdown\":\r\n        type = \"text\";\r\n        break;\r\n      case \"Smile-5\":\r\n        type = \"number\";\r\n        break;\r\n      case \"Star-5\":\r\n        type = \"number\";\r\n        break;\r\n      case \"Date\":\r\n        type = \"number\";\r\n        break;\r\n      default:\r\n        type = \"text\";\r\n        break;\r\n    }\r\n\r\n    return type;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * filterQuestions - filters questions so that we don't display the one which satisifes any of the following condition\r\n   *  isRetired = true\r\n   *  statffFill = true\r\n   *  apiFill = true\r\n   *  preFill = true\r\n   *\r\n   * @param {any} question\r\n   * @returns\r\n   * @memberof Survey\r\n   */\r\n  filterQuestions() {\r\n    let self = this;\r\n    for ( let question of this.questions ) {\r\n      if ( !question.isRetired ) {\r\n        //filter out prefill question only if it is filled?.\r\n        // if(!this.isQuestionFilled(question)){\r\n        if ( this.isPrefillTags( question ) ) {\r\n          self.ccsdk.debug ? console.log( 'prefillTags', this.prefillResponses ) : '';\r\n          continue;\r\n        }\r\n        if ( this.isPrefillNote( question ) ) {\r\n          self.ccsdk.debug ? console.log( this.prefillResponses ) : '';\r\n          continue;\r\n        }\r\n        if ( this.isPrefillDirect( question ) ) {\r\n          self.ccsdk.debug ? console.log( this.prefillResponses ) : '';\r\n          continue;\r\n        }\r\n        if ( !( this.isPrefillQuestion( question ) ) ) {\r\n          if (\r\n            question.conditionalFilter === null ||\r\n            ( question.conditionalFilter != null &&\r\n              ( question.conditionalFilter.filterquestions == null\r\n                || question.conditionalFilter.filterquestions.length == 0 ) )\r\n          ) {\r\n            //check supported display types\r\n            let supportedDisplayTypes = \"Slider, Scale, Text, Number, MultilineText, MultiSelect, Smile-5, Star-5\";\r\n            if ( supportedDisplayTypes.indexOf( question.displayType ) > -1 ) {\r\n              this.questionsToDisplay.push( question );\r\n            }\r\n          } else {\r\n            //if conditions full filled, fill it in questionsToDisplay\r\n            if ( ConditionalFlowFilter.filterQuestion( this, question ) ) {\r\n              //auto does that\r\n            } else {\r\n              this.conditionalQuestions.push( question );\r\n            }\r\n          }\r\n        } else {\r\n          this.fillPrefillWithTags( question );\r\n          this.fillPrefillWithNote( question );\r\n          ConditionalFlowFilter.filterQuestion( this, question );\r\n        }\r\n        // }\r\n      }\r\n    }\r\n    //re condition questions.\r\n    for ( let question of this.questions ) {\r\n      // console.log(this.questionsToDisplay);\r\n      ConditionalFlowFilter.filterQuestion( this, question );\r\n    }\r\n\r\n    // console.log(this.conditionalQuestions);\r\n  }\r\n\r\n  isPrefillTags( question: any ) {\r\n    if ( typeof question.questionTags !== 'undefined' && question.questionTags && question.questionTags.length > 0 ) {\r\n      for ( let tag of question.questionTags ) {\r\n        switch ( tag.toLowerCase() ) {\r\n          case \"screensize\":\r\n            //add size to prefill array\r\n            this.fillPrefillQuestion( question.id, \"Width:\" + window.innerWidth + \"px / Height:\" + window.innerHeight + \"px\", \"text\" );\r\n            return true;\r\n          default:\r\n            if ( typeof this.prefillWithTags[ tag.toLowerCase() ] != 'undefined' ) {\r\n              let type = this.getAnswerTypeFromDisplayType( question.displayType );\r\n              this.fillPrefillQuestion( question.id, this.prefillWithTags[ tag.toLowerCase() ], type );\r\n              return true;\r\n            }\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  isPrefillNote( question: any ) {\r\n    if ( typeof question.note !== 'undefined'\r\n      && question.note != null\r\n      && question.note.length > 0\r\n      && this.prefillWithNote[ question.note.toLowerCase() ]\r\n    ) {\r\n      let type = this.getAnswerTypeFromDisplayType( question.displayType );\r\n      this.fillPrefillQuestion( question.id, this.prefillWithNote[ question.note.toLowerCase() ], type );\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  isPrefillDirect( question: any ) {\r\n    if ( typeof question !== 'undefined'\r\n      && this.prefillDirect[ question.id ]\r\n    ) {\r\n      let type = this.getAnswerTypeFromDisplayType( question.displayType );\r\n      this.fillPrefillQuestion( question.id, this.prefillDirect[ question.id ], type );\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  fillPrefillWithTags( question: any ) {\r\n    ( window as any ).ccsdkDebug ? console.log( 'fillprefillwithtags', this.prefillWithTags ) : '';\r\n    if ( typeof question.questionTags !== 'undefined' && question.questionTags.length > 0 ) {\r\n      for ( let tag of question.questionTags ) {\r\n        ( window as any ).ccsdkDebug ? console.log( 'fillprefillwithtags', tag ) : '';\r\n        if ( typeof this.prefillWithTags[ tag.toLowerCase() ] !== 'undefined' ) {\r\n          ( window as any ).ccsdkDebug ? console.log( 'prefil ', tag.toLowerCase(), this.prefillWithTags[ tag.toLowerCase() ], this.prefillWithTags ) : '';\r\n\r\n          let type = this.getAnswerTypeFromDisplayType( question.displayType );\r\n          this.fillPrefillQuestion( question.id, this.prefillWithTags[ tag.toLowerCase() ], type );\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  fillPrefillWithNote( question: any ) {\r\n    if ( typeof question.note !== 'undefined' && question.note != null && question.note.length > 0 ) {\r\n      if ( typeof this.prefillWithNote[ question.note.toLowerCase() ] !== 'undefined' ) {\r\n        let type = this.getAnswerTypeFromDisplayType( question.displayType );\r\n        this.fillPrefillQuestion( question.id, this.prefillWithNote[ question.note.toLowerCase() ], type );\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n  getConditionalSurveyQuestions(): any {\r\n    return this.conditionalQuestions;\r\n  }\r\n\r\n  isPrefillQuestion( question: any ) {\r\n    if ( question.apiFill == true ) {\r\n      return true;\r\n    }\r\n    if ( question.staffFill == true ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  isQuestionFilled( question: any ) {\r\n    for ( let response of this.prefillResponses ) {\r\n      if ( response.questionId == question.questionId ) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  removePrevListener( id: string ): boolean {\r\n    for ( let listener of this.domListeners ) {\r\n      if ( listener.id == id ) {\r\n        let index = this.domListeners.indexOf( listener );\r\n        ( window as any ).ccsdkDebug ? console.log( \"removing listener\", id ) : '';\r\n        ( window as any ).ccsdkDebug ? console.log( \"removing listener index\", index ) : '';\r\n        this.util.removeListener( document.querySelectorAll( \"body\" )[ 0 ], listener.type, listener.internalHandler );\r\n        if ( index > -1 ) {\r\n          this.domListeners.splice( index, 1 );\r\n        }\r\n        ( window as any ).ccsdkDebug ? console.log( this.domListeners ) : '';\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  destroySurvey() {\r\n    let self: SurveyHandler = this;\r\n    document.addEventListener( 'ccclose', this.destroySurveyCb );\r\n  }\r\n\r\n  destroy() {\r\n    let surveyContainer = this.ccsdk.dom.getSurveyContainer( this.surveyToken );\r\n    let welcomeContainer = this.ccsdk.dom.getWelcomeContainer( this.surveyToken );\r\n    if ( typeof surveyContainer != 'undefined' ) {\r\n      this.util.remove( surveyContainer );\r\n    }\r\n    if ( typeof welcomeContainer != 'undefined' ) {\r\n      this.util.remove( welcomeContainer );\r\n    }\r\n    document.removeEventListener( 'ccclose', this.destroySurveyCb );\r\n    document.removeEventListener( 'ccdone', this.displayThankYouCb );\r\n    document.removeEventListener( 'q-answered', this.acceptAnswersCb );\r\n    ( window as any ).globalSurveyRunning = false;\r\n    // let bodyElement = <HTMLElement>document.\r\n    //   getElementsByTagName( \"body\" )[ 0 ];\r\n    // this.util.removeClass( bodyElement, \"blurr\" );\r\n\r\n  }\r\n}\r\n\r\nexport { SurveyHandler };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/SurveyHandler.ts","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/rtl-css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./main.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../node_modules/rtl-css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./main.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../node_modules/rtl-css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./main.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/css/main.scss\n// module id = 16\n// module chunks = 0","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function() {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\tvar result = [];\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar item = this[i];\n\t\t\tif(item[2]) {\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\n\t\t\t} else {\n\t\t\t\tresult.push(item[1]);\n\t\t\t}\n\t\t}\n\t\treturn result.join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rtl-css-loader/lib/css-base.js\n// module id = 18\n// module chunks = 0","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(selector) {\n\t\tif (typeof memo[selector] === \"undefined\") {\n\t\t\tmemo[selector] = fn.call(this, selector);\n\t\t}\n\n\t\treturn memo[selector]\n\t};\n})(function (target) {\n\treturn document.querySelector(target)\n});\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton) options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n\tif (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\toptions.attrs.type = \"text/css\";\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\toptions.attrs.type = \"text/css\";\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/style-loader/lib/addStyles.js\n// module id = 19\n// module chunks = 0","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/style-loader/lib/urls.js\n// module id = 20\n// module chunks = 0","\r\nimport { LanguageTextFilter } from './LanguageTextFilter';\r\nimport { isAnd, doesSatisfy, isOr, checkLanguage } from './filter-utils';\r\n\r\nclass ConditionalTextFilter {\r\n  public static filterText( surveyHandler: any, question: any ): string {\r\n    let conditionalText = question.text == null ? '' : LanguageTextFilter.translateQuestionText( surveyHandler, question );\r\n    if ( question.text != null ) {\r\n      let conditionalText: string = question.text.split( ':' );\r\n      if ( question.setName && question.text.indexOf( \":\" ) !== -1 ) {\r\n        conditionalText = conditionalText[ 0 ] + ': <br><span class=\"text-normal\">' + conditionalText[ 1 ] + '</span>';\r\n      } else {\r\n        conditionalText = conditionalText[ 0 ];\r\n      }\r\n    }\r\n    if ( question.leadingDisplayTexts == null ) {\r\n      conditionalText = LanguageTextFilter.translateQuestionText( surveyHandler, question );\r\n      return conditionalText;\r\n    } else if ( question.leadingDisplayTexts.length == 0 ) {\r\n      conditionalText = LanguageTextFilter.translateQuestionText( surveyHandler, question );\r\n      return conditionalText;\r\n    } else {\r\n      for ( let fOption of question.leadingDisplayTexts ) {\r\n        if ( fOption != null && fOption.filter != null && fOption.filter.filterquestions != null ) {\r\n          let iSatisfied: boolean = false;\r\n          let iFailed: boolean = false;\r\n          for ( let filterByQuestion of fOption.filter.filterquestions ) {\r\n            if ( isAnd( filterByQuestion ) ) {\r\n              if ( doesSatisfy( surveyHandler, filterByQuestion ) && !iFailed ) {\r\n                iSatisfied = true;\r\n              } else {\r\n                iFailed = true;\r\n                break;\r\n              }\r\n            } else if ( isOr( filterByQuestion ) ) {\r\n              if ( doesSatisfy( surveyHandler, filterByQuestion ) ) {\r\n                iSatisfied = true;\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          if ( iSatisfied && !iFailed ) {\r\n            if ( checkLanguage( surveyHandler, fOption )\r\n              || ( surveyHandler.ccsdk.config && surveyHandler.ccsdk.config.language\r\n                && surveyHandler.ccsdk.config.language.toLowerCase().includes( 'default' )\r\n                && fOption.language === null )\r\n              || ( surveyHandler.ccsdk.config && !surveyHandler.ccsdk.config.language && fOption.language === null ) ) {\r\n              let groupTitle;\r\n              if ( question.setName && conditionalText.indexOf( ':' ) !== -1 ) {\r\n                groupTitle = conditionalText.split( ':' )[ 0 ];\r\n                conditionalText = groupTitle + ': <br><span class=\"text-normal\">' + fOption.text + '</span>';\r\n              } else {\r\n                conditionalText = fOption.text;\r\n              }\r\n            }\r\n            conditionalText;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return conditionalText;\r\n  }\r\n}\r\n\r\nexport { ConditionalTextFilter };\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/filters/ConditionalTextFilter.ts","import { DomUtilities } from './DomUtilities';\r\n// import { ScrollBar } from './ScrollBar';\r\nimport { Select } from './Select';\r\nimport { Theme } from './Theme';\r\nimport { ConditionalFlowFilter } from \"../filters/ConditionalFlowFilter\";\r\nimport { Slider } from \"./Slider\";\r\nimport { Constants } from \"../../Constants\";\r\nimport { setInterval } from 'timers';\r\n\r\nclass DomSurvey {\r\n\r\n  util: DomUtilities;\r\n  // scrollbar : ScrollBar;\r\n  domListeners: any;\r\n  select: Select;\r\n  theme: Theme;\r\n  qIndex: number;\r\n  currentQuestionId: string;\r\n  $questionContainer: any;\r\n  $innerQuestionContainer: any;\r\n  $popupContainer: any;\r\n  $popupContainer2: any;\r\n  $body: any;\r\n  qResponse: any;\r\n  trackSelects: any = [];\r\n  trackRadios: any = [];\r\n  ccsdk: any;\r\n  currentQuestionListeners: any = [];\r\n  trackSetupListeners: any;\r\n  $startBtn: any;\r\n  bodyElement: any;\r\n\r\n\r\n  constructor( ccsdk: any ) {\r\n    let self: DomSurvey = this;\r\n    this.domListeners = [];\r\n    this.ccsdk = ccsdk;\r\n    this.qIndex = 0;\r\n    this.qResponse = {};\r\n    this.domSelectElements();\r\n    this.util = new DomUtilities()\r\n    // self.scrollbar = new ScrollBar(\"data-cc-scrollbar\");\r\n    this.util.ready( function () {\r\n      // self.util.addClassAll(self.$popupContainer,'show-slide');\r\n    } );\r\n  }\r\n\r\n  setTheme( brandColor, time ) {\r\n    let self: DomSurvey = this;\r\n    this.util.ready( function () {\r\n      self.theme = new Theme( brandColor, time );\r\n    } );\r\n  }\r\n\r\n  setQIndex( index: number ) {\r\n    this.qIndex = index;\r\n  }\r\n\r\n  getQindex() {\r\n    return this.qIndex;\r\n  }\r\n\r\n  domSelectElements() {\r\n    this.$questionContainer = document.\r\n      querySelectorAll( \".cc-questions-container\" );\r\n    this.$popupContainer = document.querySelectorAll( \".cc-popup-container\" );\r\n    this.$popupContainer2 = document.querySelectorAll( \".cc-popup-container-2\" );\r\n    this.$body = document.querySelectorAll( \"body\" )[ 0 ];\r\n    // this.select = new Select();\r\n\r\n  }\r\n\r\n\r\n\r\n  removePrevListener( id: string ): boolean {\r\n    for ( let listener of this.domListeners ) {\r\n      if ( listener.id == id ) {\r\n        let index = this.domListeners.indexOf( listener );\r\n        ( window as any ).ccsdkDebug ? console.log( \"removing listener\", id ) : '';\r\n        ( window as any ).ccsdkDebug ? console.log( \"removing listener index\", index ) : '';\r\n        this.util.removeListener( this.$body, listener.type, listener.internalHandler );\r\n        if ( index > -1 ) {\r\n          this.domListeners.splice( index, 1 );\r\n        }\r\n        ( window as any ).ccsdkDebug ? console.log( this.domListeners ) : '';\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  setupListeners() {\r\n    let self = this;\r\n    let startSurvey = this.util.initListener( \"click\", \".act-cc-survey-start\", function () {\r\n      if ( ( !self.util.hasClass( self.$startBtn, 'disabled' ) ) && ( self.ccsdk.surveyStatus != 'minimized' ) ) {\r\n        let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n        document.dispatchEvent( onSurveyClickEvent );\r\n        self.util.addClass( self.$startBtn, 'disabled' );\r\n        self.showLoader();\r\n        self.startSurvey();\r\n      } else {\r\n        self.initSurveyDom();\r\n      }\r\n    } );\r\n    this.domListeners.push( startSurvey );\r\n\r\n    startSurvey.internalHandler = this.util.listener( this.$body, startSurvey.type, startSurvey.id, startSurvey.cb );\r\n\r\n    let nextQue = this.util.initListener( \"click\", \".act-cc-button-next\", function () {\r\n      // alert(\"working\");\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n      self.nextQuestion();\r\n    } );\r\n    this.domListeners.push( nextQue );\r\n\r\n    nextQue.internalHandler = this.util.listener( this.$body, nextQue.type, nextQue.id, nextQue.cb );\r\n\r\n    let prevQue = this.util.initListener( \"click\", \".act-cc-button-prev\", function () {\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n      self.prevQuestion();\r\n    } );\r\n    this.domListeners.push( prevQue );\r\n\r\n    prevQue.internalHandler = this.util.listener( this.$body, prevQue.type, prevQue.id, prevQue.cb );\r\n\r\n    let closeSurvey = this.util.initListener( \"click\", \".act-cc-button-close\", function () {\r\n      let onSurveyCloseEvent = new CustomEvent( Constants.SURVEY_CLOSE_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyCloseEvent );\r\n      self.ccsdk.survey.answers = {};\r\n      self.trackSelects = [];\r\n      self.destroyListeners();\r\n      self.util.trigger( document, 'ccclose', undefined );\r\n      self.bodyElement = <HTMLElement>document.\r\n        getElementsByTagName( \"body\" )[ 0 ];\r\n      self.util.removeClass( self.bodyElement, \"blurr\" )\r\n      self.ccsdk.survey.destroy();\r\n\r\n    } );\r\n    this.domListeners.push( closeSurvey );\r\n\r\n\r\n    closeSurvey.internalHandler = this.util.listener( this.$body, closeSurvey.type, closeSurvey.id, closeSurvey.cb );\r\n\r\n    let minSurvey = this.util.initListener( \"click\", \".act-cc-button-minimize\", function () {\r\n      self.minimizeSurvey();\r\n    } );\r\n    this.domListeners.push( minSurvey );\r\n\r\n\r\n    minSurvey.internalHandler = this.util.listener( self.$body, minSurvey.type, minSurvey.id, minSurvey.cb );\r\n  }\r\n\r\n\r\n  minimizeSurvey() {\r\n    // this.$popupContainer[0].removeClass('');\r\n    this.util.removeClass( this.$popupContainer2[ 0 ], 'hide-right-left' );\r\n    this.util.addClass( this.$popupContainer2[ 0 ], 'hide-right-left' );\r\n    setTimeout( () => {\r\n      this.util.removeClass( this.$popupContainer2[ 0 ], 'show-slide' );\r\n    }, 200 );\r\n    this.util.removeClass( this.$popupContainer[ 0 ], 'hide-right-left' );\r\n    this.util.addClass( this.$popupContainer[ 0 ], 'hide-right-left' );\r\n    setTimeout( () => {\r\n      this.util.addClass( this.$popupContainer[ 0 ], 'show-slide' );\r\n    }, 200 );\r\n    this.ccsdk.surveyStatus = 'minimized';\r\n    let resumeText = this.ccsdk.config.resumeButtonText ? this.ccsdk.config.resumeButtonText : 'Resume';\r\n    this.$startBtn.innerHTML = resumeText;\r\n    this.util.removeClass( this.$startBtn, 'disabled' );\r\n\r\n    //update all start btns\r\n    // Array.prototype.forEach.call($startBtn, (el, i) => {\r\n    //   el.innerHTML = resumeText;\r\n    // });\r\n\r\n  }\r\n\r\n  destroyListeners() {\r\n    // (window as any).ccsdkDebug?console.log(\"Removing all listeners\"):'';\r\n    for ( let listener of this.domListeners ) {\r\n      this.util.removeListener( this.$body, listener.type, listener.internalHandler );\r\n    }\r\n    for ( let listener of this.ccsdk.survey.domListeners ) {\r\n      this.util.removeListener( this.$body, listener.type, listener.internalHandler );\r\n    }\r\n    if ( this.ccsdk.survey.languageSelect ) {\r\n      this.ccsdk.survey.languageSelect.destroyListeners();\r\n    }\r\n    if ( this.select ) {\r\n      this.select.destroyListeners();\r\n    }\r\n\r\n  }\r\n\r\n  startSurvey() {\r\n    this.ccsdk.survey.cancelKillWelcomeQuestion();\r\n    this.ccsdk.getSurveyData();\r\n  }\r\n\r\n  initSurveyDom() {\r\n    this.domSelectElements();\r\n    // (window as any).ccsdkDebug?console.log(\"click in setup listener survey start\"):'';\r\n    this.util.addClassAll( this.$popupContainer2, 'show-slide' );\r\n    this.util.removeClass( this.$popupContainer[ 0 ], 'show-slide' );\r\n    if ( this.ccsdk.surveyStatus == 'minimized' ) {\r\n      //resume survey\r\n    } else {\r\n      //start survey\r\n      //check if only one language is configured\r\n      ( window as any ).ccsdkDebug ? console.log( this.ccsdk.surveyData ) : '';\r\n      if ( this.ccsdk.surveyData.translated === null || ( this.ccsdk.surveyData.translated && Object.keys( this.ccsdk.surveyData.translated ).length < 1 ) ) {\r\n        this.loadFirstQuestion();\r\n      } else {\r\n        this.ccsdk.survey.displayLanguageSelector();\r\n      }\r\n    }\r\n  }\r\n\r\n  updateProgress() {\r\n    let el = <HTMLElement>document.querySelectorAll( \"#progress-line\" )[ 0 ];\r\n    if ( this.ccsdk && this.ccsdk.tracking ) {\r\n      this.ccsdk.tracking.trackEvent( 'Questions Answered', {\r\n        token: this.ccsdk.surveyToken,\r\n        data: {\r\n          name: `${ this.qIndex }/${ this.ccsdk.survey.questionsToDisplay.length }`,\r\n          action: this.currentQuestionId\r\n        }\r\n      }, null, null );\r\n    }\r\n    el.style.width = ( this.qIndex / this.ccsdk.survey.questionsToDisplay.length ) * 100 + '%';\r\n  }\r\n\r\n  loadFirstQuestion() {\r\n    // applyRuleToAllEl(this.$questionContainer, );\r\n    // this.util.removeClassAll(this.$questionContainer, 'show-slide');\r\n    // this.util.addClass(this.$questionContainer, 'show-slide');\r\n\r\n    this.loadQuestionSpecifics( this.$questionContainer, 0 );\r\n    this.util.removeClassAll( this.$questionContainer[ 0 ].firstChild, 'show-slide' );\r\n    this.util.addClass( this.$questionContainer[ 0 ].firstChild, 'show-slide' );\r\n    let leftIcon: any = this.util.get( '.act-cc-button-prev' );\r\n    this.util.addClassAll( leftIcon, 'hide-slide' );\r\n    let onSurveyQuestionEvent = new CustomEvent( Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken );\r\n    document.dispatchEvent( onSurveyQuestionEvent );\r\n  }\r\n\r\n  nextQuestion() {\r\n    ( window as any ).ccsdkDebug ? console.log( 'next question q response init', this.qResponse ) : '';\r\n    // console.log('next question q response init',this.qResponse);\r\n    //empty the domListner\r\n    // this.util.removeAllListeners(this.domListeners);\r\n    let onSurveyQuestionEvent = new CustomEvent( Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken );\r\n    document.dispatchEvent( onSurveyQuestionEvent );\r\n    //submit the current response\r\n    // (window as any).ccsdkDebug?console.log('submit ',this.qResponse.type, this.qResponse):'';\r\n    let isRequired: boolean = false;\r\n    let q: HTMLElement = this.$questionContainer[ 0 ].firstChild;\r\n    // (window as any).ccsdkDebug?console.log(this.$questionContainer):'';\r\n    let span: Element = this.$questionContainer[ 0 ].firstChild.querySelectorAll( \".cc-question-container__required\" )[ 0 ]\r\n    let validationSpan: Element = this.$questionContainer[ 0 ].firstChild.querySelectorAll( \".cc-question-container__validation\" )[ 0 ]\r\n    if ( span )\r\n      this.util.removeClass( span, \"show\" );\r\n    if ( validationSpan )\r\n      this.util.removeClass( validationSpan, \"show\" );\r\n\r\n\r\n    //check if question is required \r\n    isRequired = q.getAttribute( 'data-required' ).toLowerCase() == 'true' ? true : false;\r\n    // console.log('required check',Object.keys(this.qResponse).length, isRequired, this.qResponse);\r\n    // if (isRequired && Object.keys(this.qResponse).length === 0) {\r\n    if ( isRequired && ( Object.keys( this.qResponse ).length === 0 ) ) {\r\n      if ( span ) {\r\n        this.util.addClass( span, \"show\" );\r\n        this.util.removeClass( span, \"hide\" );\r\n      }\r\n      return;\r\n    } else if ( isRequired && ( !this.qResponse.text ) && ( !this.qResponse.number ) ) {\r\n      if ( span ) {\r\n        this.util.addClass( span, \"show\" );\r\n        this.util.removeClass( span, \"hide\" );\r\n      }\r\n      return;\r\n    } else {\r\n      if ( span ) {\r\n        this.util.removeClass( span, \"show\" );\r\n        this.util.addClass( span, \"hide\" );\r\n      }\r\n\r\n      //check if validationRegex is set and is fulfilled\r\n      let validationRegex = this.ccsdk.survey.questionsToDisplay[ this.qIndex ].validationRegex\r\n      if ( validationRegex ) {\r\n        ( window as any ).ccsdkDebug ? console.log( 'validationRegex', validationRegex ) : '';\r\n        ( window as any ).ccsdkDebug ? console.log( 'response', this.qResponse ) : '';\r\n        let pattern = validationRegex.match( new RegExp( '^/(.*?)/([gimy]*)$' ) );\r\n        let regex = new RegExp( validationRegex );\r\n        if ( this.qResponse.text ) {\r\n          if ( regex.test( this.qResponse.text ) ) {\r\n            this.util.removeClass( validationSpan, \"show\" );\r\n            this.util.addClass( validationSpan, \"hide\" );\r\n          } else {\r\n            if ( validationSpan ) {\r\n              this.util.addClass( validationSpan, \"show\" );\r\n              this.util.removeClass( validationSpan, \"hide\" );\r\n            }\r\n            return;\r\n          }\r\n        }\r\n        else if ( this.qResponse.number ) {\r\n          ( window as any ).ccsdkDebug ? console.log( 'test regex text', regex.test( this.qResponse.number ) ) : '';\r\n\r\n          if ( regex.test( this.qResponse.number ) ) {\r\n            this.util.removeClass( validationSpan, \"show\" );\r\n            this.util.addClass( validationSpan, \"hide\" );\r\n          } else {\r\n            if ( validationSpan ) {\r\n              this.util.addClass( validationSpan, \"show\" );\r\n              this.util.removeClass( validationSpan, \"hide\" );\r\n            }\r\n            return;\r\n          }\r\n        }\r\n      }\r\n\r\n\r\n\r\n      if ( this.qResponse !== 'undefined' ) {\r\n        // (window as any).ccsdkDebug?console.log('qindex ' + this.qIndex):'';\r\n        if ( typeof this.ccsdk.survey.answers[ this.currentQuestionId ] !== 'undefined'\r\n          && this.qResponse.type == this.ccsdk.survey.answers[ this.currentQuestionId ].type\r\n          && this.qResponse.text == this.ccsdk.survey.answers[ this.currentQuestionId ].text\r\n          && this.qResponse.number == this.ccsdk.survey.answers[ this.currentQuestionId ].number\r\n        ) {\r\n          // console.log('no submit');\r\n          //don't submit if already submitted.\r\n        } else if ( typeof this.ccsdk.survey.answers[ this.currentQuestionId ] !== 'undefined'\r\n          && !this.qResponse.text\r\n          && !this.qResponse.number\r\n        ) {\r\n          // console.log('no submit 2');\r\n\r\n          //previous entry filled\r\n        } else {\r\n          // (window as any).ccsdkDebug?console.log('submitting ' + this.currentQuestionId):'';\r\n          // console.log(this.qResponse);\r\n\r\n          let qId = this.qResponse.questionId ? this.qResponse.questionId : this.currentQuestionId;\r\n          this.submitQuestion( this.qIndex, this.qResponse, this.qResponse.type, qId );\r\n          //save response\r\n          this.ccsdk.survey.answers[ this.currentQuestionId ] = JSON.parse( JSON.stringify( this.qResponse ) );\r\n        }\r\n      }\r\n    }\r\n    ConditionalFlowFilter.filterQuestion( this.ccsdk.survey, this.ccsdk.survey.questionsToDisplay[ this.qIndex ] );\r\n    // console.log(this.ccsdk.survey.questionsToDisplay);\r\n    //go to next question\r\n    this.qIndex++;\r\n    //reset the post parameters\r\n    // this.qResponse = typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined' ? JSON.parse(JSON.stringify(this.ccsdk.survey.answers[this.currentQuestionId])) : {};\r\n    // this.qResponse = {};\r\n    let nextButtonState: string = 'initial';\r\n    // (window as any).ccsdkDebug?console.log(this.$questionContainer):'';\r\n    let nextQ: HTMLElement = this.$questionContainer;\r\n    // (window as any).ccsdkDebug?console.log(this.qIndex):'';\r\n    if ( this.qIndex == this.ccsdk.survey.questionsToDisplay.length ) {\r\n      //Last run to show thank you message\r\n      let leftIcon: any = this.util.get( '.act-cc-button-prev' );\r\n      let rightIcon: any = this.util.get( '.cc-icon-right' );\r\n      let nextIcon: any = this.util.get( '.act-cc-button-next' );\r\n      this.util.addClassAll( leftIcon, 'hide' );\r\n      this.util.addClassAll( rightIcon, 'hide' );\r\n      this.util.addClassAll( nextIcon, 'hide' );\r\n      this.util.trigger( document, 'ccdone', undefined );\r\n      this.util.removeClass( this.$questionContainer[ 0 ].firstChild, 'show-slide' );\r\n      this.updateProgress();\r\n    } else {\r\n      if ( ( this.qIndex > this.ccsdk.survey.questionsToDisplay.length ) ) {\r\n        //reset the counter to show first question\r\n        this.qIndex = 0;\r\n      }\r\n      //repopulate qResponse based on answers.\r\n      // ( window as any ).ccsdkDebug ? console.log( 'previous answer', this.ccsdk.survey.answers[ this.currentQuestionId ] ) : '';\r\n      this.qResponse = typeof this.ccsdk.survey.answers[ this.currentQuestionId ] !== 'undefined' ? JSON.parse( JSON.stringify( this.ccsdk.survey.answers[ this.currentQuestionId ] ) ) : {};\r\n      // this.util.removeClassAll(this.$questionContainer[0].firstChild, 'show-slide');\r\n      // this.util.addClass(nextQ, 'show-slide');\r\n      this.updateProgress();\r\n      this.loadQuestionSpecifics( nextQ, this.qIndex );\r\n      this.util.addClass( this.$questionContainer[ 0 ].firstChild, 'show-slide' );\r\n      // if(nextButtonState === 'dirty'){\r\n      // this.submitQuestion(this.qIndex, 'test', 'multiline');\r\n      // }\r\n    }\r\n    if ( this.qIndex == 0 ) {\r\n      let leftIcon: any = this.util.get( '.act-cc-button-prev' );\r\n      this.util.addClassAll( leftIcon, 'hide-slide' );\r\n    } else {\r\n      let leftIcon: any = this.util.get( '.act-cc-button-prev' );\r\n      this.util.addClass( leftIcon[ 0 ], 'show-slide' );\r\n      this.util.removeClass( leftIcon[ 0 ], 'hide-slide' );\r\n    }\r\n    // ( window as any ).ccsdkDebug ? console.log( 'next question q response end', this.qResponse ) : '';\r\n    // this.qResponse = {};\r\n\r\n  }\r\n\r\n  prevQuestion() {\r\n    this.qIndex--;\r\n    if ( !this.ccsdk.survey.questionsToDisplay.length || this.qIndex < 0 ) {\r\n      this.qIndex = 0;\r\n      return;\r\n      // this.qIndex = this.$questionContainer.length - 1;\r\n    }\r\n    // ( window as any ).ccsdkDebug ? console.log( this.qIndex ) : '';\r\n    let onSurveyQuestionEvent = new CustomEvent( Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken );\r\n    document.dispatchEvent( onSurveyQuestionEvent );\r\n    //re populate qResponse based on answers.\r\n    // this.util.removeClassAll(this.$questionContainer,'show-slide');\r\n    this.loadQuestionSpecifics( null, this.qIndex );\r\n    this.qResponse = typeof this.ccsdk.survey.answers[ this.currentQuestionId ] !== 'undefined' ? JSON.parse( JSON.stringify( this.ccsdk.survey.answers[ this.currentQuestionId ] ) ) : {};\r\n    ( window as any ).ccsdkDebug ? console.log( \"prevQuestion qResponse\", this.qResponse ) : '';\r\n    this.util.addClass( this.$questionContainer[ 0 ].firstChild, 'show-slide' );\r\n    this.updateProgress();\r\n    if ( this.qIndex == 0 ) {\r\n      let leftIcon: any = this.util.get( '.act-cc-button-prev' );\r\n      this.util.addClassAll( leftIcon, 'hide-slide' );\r\n      this.util.removeClassAll( leftIcon, 'show-slide' );\r\n    }\r\n  }\r\n\r\n  showLoader() {\r\n    let $loader = document.querySelectorAll( \".cc-loaderimg\" )[ 0 ];\r\n    this.util.addClass( $loader, 'show' );\r\n    this.util.removeClass( $loader, 'hide' );\r\n  }\r\n  hideLoader() {\r\n    let $loader = document.querySelectorAll( \".cc-loaderimg\" )[ 0 ];\r\n    this.util.removeClass( $loader, 'show' );\r\n    this.util.addClass( $loader, 'hide' );\r\n  }\r\n\r\n  appendInBody( html ) {\r\n    document.querySelectorAll( \"body\" )[ 0 ].insertAdjacentHTML(\r\n      'afterbegin', html\r\n    );\r\n    //force update domSelect\r\n    this.domSelectElements();\r\n  }\r\n\r\n  replaceInQuestionsContainer( html ) {\r\n    this.$questionContainer[ 0 ].innerHTML = html;\r\n    this.domSelectElements();\r\n  }\r\n\r\n  appendInQuestionsContainer( html ) {\r\n    document.querySelectorAll( \".cc-questions-container\" )[ 0 ].insertAdjacentHTML(\r\n      'afterbegin', html\r\n    );\r\n    //force update domSelect\r\n    this.domSelectElements();\r\n  }\r\n\r\n  showWelcomeContainer() {\r\n    setTimeout( () => {\r\n      let startContainer = <HTMLElement>document.\r\n        querySelectorAll( \".act-cc-welcome-question-box\" )[ 0 ];\r\n      let bodyElement = <HTMLElement>document.\r\n        getElementsByTagName( \"body\" )[ 0 ];\r\n      this.util.addClass( startContainer, \"show-slide\" );\r\n      // this.util.addClass( bodyElement, \"blurr\" );\r\n    }, 200 );\r\n    // console.debug()\r\n    this.$startBtn = document.querySelectorAll( \".act-cc-survey-start\" )[ 0 ];\r\n\r\n  }\r\n\r\n  showLanguageSelector() {\r\n    setTimeout( () => {\r\n      let startContainer = <HTMLElement>document.\r\n        querySelectorAll( \".cc-language-selector\" )[ 0 ];\r\n      let bodyElement = <HTMLElement>document.\r\n        getElementsByTagName( \"body\" )[ 0 ];\r\n      this.util.addClass( startContainer, \"show-slide\" );\r\n      // this.util.addClass( bodyElement, \"blurr\" );\r\n    }, 200 );\r\n    let self = this;\r\n    if ( this.util.checkIfListenerExists( '.cc-language-select', this.domListeners ) ) {\r\n      // return;\r\n      // ( window as any ).ccsdkDebug ? console.log( \"language select - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '.cc-language-select' );\r\n    }\r\n    let languageSelect = this.util.initListener( \"click\", \".cc-language-select\", function () {\r\n      // let onSurveyClickEvent = new CustomEvent(Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n      // document.dispatchEvent(onSurveyClickEvent);\r\n      //select language show next question.\r\n      // self.startSurvey();\r\n      self.ccsdk.config.language = \"default\";\r\n      self.ccsdk.config.language = \"\"; //language selection from menu then show first question\r\n    } );\r\n\r\n    languageSelect.internalHandler = this.util.listener( this.$body, languageSelect.type, languageSelect.id, languageSelect.cb );\r\n  }\r\n\r\n  getSurveyContainer( token: string ) {\r\n    return document.querySelectorAll( \"#\" + token + \"-survey\" )[ 0 ];\r\n  }\r\n\r\n  getWelcomeContainer( token: string ) {\r\n    return document.querySelectorAll( \"#\" + token + \"-welcome\" )[ 0 ];\r\n  }\r\n\r\n  loadQuestionSpecifics( q: HTMLElement, index: number ) {\r\n    let self: DomSurvey = this;\r\n    this.$questionContainer[ 0 ].innerHTML = \"\";\r\n    let compiledTemplate = this.ccsdk.survey.compileTemplate( this.ccsdk.survey.questionsToDisplay[ index ] );\r\n    // console.log( compiledTemplate );\r\n    this.$questionContainer[ 0 ].innerHTML += compiledTemplate;\r\n    let qType: string = this.$questionContainer[ 0 ].firstChild.getAttribute( 'data-type' );\r\n    let qId: string = this.$questionContainer[ 0 ].firstChild.getAttribute( 'data-id' );\r\n    this.qResponse = {};\r\n    // (window as any).ccsdkDebug?console.log(\"QTYIPE AND QID \" , qType, qId):'';\r\n    this.currentQuestionId = qId.substring( 2, qId.length );\r\n    // console.log( 'qtype', qType )\r\n    switch ( qType ) {\r\n      case 'scale':\r\n        let allOptions1: any = document.querySelectorAll( '#' + qId + ' .option-number-item' );\r\n        let optionWidth1 = ( 100 / allOptions1.length ) - .6;\r\n        // (window as any).ccsdkDebug?console.log(\"Option width\", allOptions1, optionWidth1.toFixed(2)):'';\r\n        // self.util.css(allOptions1 , 'width',  optionWidth1.toFixed(1) + '%');\r\n        this.setupListenersQuestionScale( index, qId );\r\n        break;\r\n      case 'nps':\r\n        this.setupListenersQuestionNPS( index, qId );\r\n        break;\r\n      case 'multiline':\r\n        this.setupListenersQuestionMultiline( index, qId );\r\n        break;\r\n      case 'select':\r\n        if ( typeof this.select !== 'undefined' ) {\r\n          this.select.destroyListeners();\r\n        }\r\n        this.setupListenersQuestionSelect( index, qId );\r\n        break;\r\n      case 'radio':\r\n        this.setupListenersQuestionRadio( index, qId );\r\n        break;\r\n      case 'radioImage':\r\n        this.setupListenersQuestionRadioImage( index, qId );\r\n        break;\r\n      case 'checkbox':\r\n        this.setupListenersQuestionCheckbox( index, qId );\r\n        break;\r\n      case 'star':\r\n        this.setupListenersQuestionStar( index, qId );\r\n        break;\r\n      case 'smile':\r\n        this.setupListenersQuestionSmile( index, qId );\r\n        break;\r\n      case 'csat':\r\n        this.setupListenersQuestionCsat( index, qId );\r\n        break;\r\n      case 'slider':\r\n        this.setupListenersQuestionSlider( index, qId );\r\n        break;\r\n      case 'singleline':\r\n        this.setupListenersQuestionSingleline( index, qId );\r\n        break;\r\n      case 'number':\r\n        this.setupListenersQuestionNumber( index, qId );\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  // question specific listeners\r\n\r\n  setupListenersQuestionScale( index: number, qId: string ) {\r\n    var self: DomSurvey = this;\r\n    let selectedRating = <HTMLElement>document.querySelectorAll( '#' + qId + ' .cc-nps-selected-rating' )[ 0 ];\r\n    let selectedRating1 = <HTMLElement>document.querySelectorAll( '#' + qId + ' .cc-nps-selected-rating' )[ 1 ];\r\n    //add id too.\r\n    if ( this.util.checkIfListenerExists( '#' + qId + ' .option-number-item', this.domListeners ) ) {\r\n      // return;\r\n      // ( window as any ).ccsdkDebug ? console.log( \"scale question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId + ' .option-number-item' );\r\n    }\r\n\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    // ( window as any ).ccsdkDebug ? console.log( 'scale question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].number;\r\n      let previousSelection = document.querySelectorAll( '#' + qId + ' .option-number-item[data-rating=\"' + previousValue + '\"]' )[ 0 ];\r\n      // ( window as any ).ccsdkDebug ? console.log( 'scale previous selection', previousSelection ) : '';\r\n      if ( typeof previousSelection !== 'undefined' ) {\r\n        this.util.addClass( previousSelection, \"selected\" );\r\n        self.qResponse.type = 'scale';\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n        selectedRating.innerHTML = previousValue;\r\n        selectedRating1.innerHTML = previousValue;\r\n\r\n      }\r\n\r\n    }\r\n\r\n    let ref = this.util.initListener( 'click', '#' + qId + ' .option-number-item', function () {\r\n      let allOptions: any = document.querySelectorAll( '#' + qId + ' .option-number-item' );\r\n\r\n      let rating: number = this.getAttribute( 'data-rating' );\r\n      self.util.removeClassAll( allOptions, \"selected\" );\r\n      self.util.addClass( this, \"selected\" );\r\n      // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n      // (window as any).ccsdkDebug?console.log('Scale selected',rating):'';\r\n      self.qResponse.type = 'scale';\r\n      self.qResponse.text = null;\r\n      self.qResponse.number = rating;\r\n      self.qResponse.questionId = qId;\r\n      selectedRating.innerHTML = '' + rating;\r\n      selectedRating1.innerHTML = '' + rating;\r\n\r\n      //move to next question automagically\r\n      // alert('calling next questions inside scale');\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n      setTimeout( () => {\r\n        self.nextQuestion();\r\n      }, 500 );\r\n      // self.util.trigger(document,'q-answered', {\r\n      //   index : index,\r\n      //   rating : rating,\r\n      //   type : 'scale'\r\n      // });\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionNPS( index: number, qId: string ) {\r\n    var self: DomSurvey = this;\r\n    let selectedRating = <HTMLElement>document.querySelectorAll( '#' + qId + ' .cc-nps-selected-rating' )[ 0 ];\r\n    let allOptions: any = document.querySelectorAll( '#' + qId + ' .option-number-item' );\r\n\r\n    //add id too.\r\n    if ( this.util.checkIfListenerExists( '#' + qId + ' .option-number-item', this.domListeners ) ) {\r\n      //remove listeners\r\n      // ( window as any ).ccsdkDebug ? console.log( \"nps question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId + ' .option-number-item' );\r\n\r\n    }\r\n\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'nps question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].number;\r\n      let previousSelection = document.querySelectorAll( '#' + qId + ' .option-number-item[data-rating=\"' + previousValue + '\"]' )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'nps previous selection', previousSelection ) : '';\r\n      if ( typeof previousSelection !== 'undefined' ) {\r\n        this.util.addClass( previousSelection, \"selected\" );\r\n        let $mobileRating = document.querySelectorAll( \".act-cc-nps-selected-rating\" )[ 0 ];\r\n        $mobileRating.innerHTML = previousValue;\r\n        self.qResponse.type = 'nps';\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n\r\n    }\r\n\r\n    // (window as any).ccsdkDebug?console.log(self.domListeners):'';\r\n    let ref = this.util.initListener( 'click', '#' + qId + ' .option-number-item', function () {\r\n      let rating: number = this.getAttribute( 'data-rating' );\r\n      self.util.removeClassAll( allOptions, \"selected\" );\r\n      self.util.addClass( this, \"selected\" );\r\n      // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n      // (window as any).ccsdkDebug?console.log('Scale selected',rating):'';\r\n      self.qResponse.type = 'nps';\r\n      self.qResponse.text = null;\r\n      self.qResponse.number = rating;\r\n      self.qResponse.questionId = qId;\r\n      selectedRating.innerHTML = '' + rating;\r\n      //move to next question automagically\r\n\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n\r\n      // alert('calling next questions inside scale');\r\n      setTimeout( () => {\r\n        self.nextQuestion();\r\n      }, 500 );\r\n      // self.util.trigger(document,'q-answered', {\r\n      //   index : index,\r\n      //   rating : rating,\r\n      //   type : 'scale'\r\n      // });\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionCheckbox( index: number, qId: string ) {\r\n    var self: DomSurvey = this;\r\n    if ( this.util.checkIfListenerExists( '#' + qId + ' .cc-checkbox', this.domListeners ) ) {\r\n      // return;\r\n      ( window as any ).ccsdkDebug ? console.log( \"checkbox question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId + ' .cc-checkbox' );\r\n    }\r\n\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'radio question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValues = this.ccsdk.survey.answers[ questionId ].text;\r\n      if ( previousValues ) {\r\n        previousValues = previousValues.split( ',' );\r\n        for ( let previousValue of previousValues ) {\r\n          let previousSelection = document.querySelectorAll( '#' + qId + ' input[value=\"' + previousValue + '\"]' )[ 0 ];\r\n          ( window as any ).ccsdkDebug ? console.log( 'radio previous selection', previousSelection ) : '';\r\n          if ( typeof previousSelection !== 'undefined' ) {\r\n            this.util.addClass( previousSelection, \"selected\" );\r\n            previousSelection.setAttribute( 'checked', 'checked' );\r\n            self.qResponse.type = 'checkbox';\r\n            self.qResponse.text = previousValue;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    let ref = this.util.initListener( 'click', '#' + qId + ' .cc-checkbox', function () {\r\n      // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox input');\r\n      // let rating : number = this.querySelectorAll('input')[0].value;\r\n      let rating: string = [].filter.call( document.querySelectorAll( '#' + qId + ' .cc-checkbox input' ), function ( c ) {\r\n        return c.checked;\r\n      } ).map( function ( c ) {\r\n        return c.value;\r\n      } ).join( ',' );\r\n\r\n      ( window as any ).ccsdkDebug ? console.log( 'Checkbox selected', rating ) : '';\r\n\r\n      self.qResponse.type = 'checkbox';\r\n      self.qResponse.text = rating;\r\n      self.qResponse.number = null;\r\n      self.qResponse.questionId = qId;\r\n      //move to next question automagically\r\n      // self.nextQuestion();\r\n    } );\r\n    this.domListeners.push( ref );\r\n    let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n    document.dispatchEvent( onSurveyClickEvent );\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionRadio( index: number, qId: string ) {\r\n    var self: DomSurvey = this;\r\n    if ( this.util.checkIfListenerExists( '#' + qId + ' .cc-checkbox input', this.domListeners ) ) {\r\n      // return;\r\n      //remove listeners\r\n      ( window as any ).ccsdkDebug ? console.log( \"radio question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId + ' .cc-checkbox input' );\r\n    }\r\n\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'radio question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].text;\r\n      let previousSelection = document.querySelectorAll( '#' + qId + ' input[value=\"' + previousValue + '\"]' )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'radio previous selection', previousSelection ) : '';\r\n      if ( typeof previousSelection !== 'undefined' ) {\r\n        this.util.addClass( previousSelection, \"selected\" );\r\n        previousSelection.setAttribute( 'checked', 'checked' );\r\n        self.qResponse.type = 'radio';\r\n        self.qResponse.text = previousValue;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n\r\n    }\r\n\r\n\r\n\r\n    let ref = this.util.initListener( 'click', '#' + qId + ' .cc-checkbox input', function () {\r\n      // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox');\r\n      let rating: string = this.value;\r\n      // self.util.removeClassAll(allOptions, \"selected\");\r\n      // self.util.addClass(this, \"selected\");\r\n      // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n      // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\r\n      self.qResponse.type = 'radio';\r\n      self.qResponse.text = rating;\r\n      self.qResponse.number = null;\r\n      self.qResponse.questionId = qId;\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n      //move to next question automagically\r\n      setTimeout( () => {\r\n        self.nextQuestion();\r\n      }, 500 );\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionRadioImage( index: number, qId: string ) {\r\n    var self: DomSurvey = this;\r\n    if ( this.util.checkIfListenerExists( '#' + qId + ' .cc-checkbox input', this.domListeners ) ) {\r\n      ( window as any ).ccsdkDebug ? console.log( \"radio image question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId + ' .cc-checkbox input' );\r\n    }\r\n\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'radio image question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].text;\r\n      let previousSelection = document.querySelectorAll( '#' + qId + ' input[value=\"' + previousValue + '\"]' )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'radio image previous selection', previousSelection ) : '';\r\n      if ( typeof previousSelection !== 'undefined' ) {\r\n        this.util.addClass( previousSelection, \"selected\" );\r\n        previousSelection.setAttribute( 'checked', 'checked' );\r\n        self.qResponse.type = 'radioImage';\r\n        self.qResponse.text = previousValue;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n\r\n    }\r\n\r\n    let ref = this.util.initListener( 'click', '#' + qId + ' .cc-checkbox input', function () {\r\n      // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox');\r\n      let rating: string = this.value;\r\n      // self.util.removeClassAll(allOptions, \"selected\");\r\n      // self.util.addClass(this, \"selected\");\r\n      // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n      // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\r\n      self.qResponse.type = 'radioImage';\r\n      self.qResponse.text = rating;\r\n      self.qResponse.number = null;\r\n      self.qResponse.questionId = qId;\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n      //move to next question automagically\r\n      setTimeout( () => {\r\n        self.nextQuestion();\r\n      }, 500 );\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionStar( index: number, qId: string ) {\r\n    var self: DomSurvey = this;\r\n    if ( this.util.checkIfListenerExists( '#' + qId + ' .option-star-box', this.domListeners ) ) {\r\n      //remove listeners\r\n      ( window as any ).ccsdkDebug ? console.log( \"smile question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId + ' .option-star-box' );\r\n\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'star question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].number;\r\n      let previousSelection = document.querySelectorAll( '#' + qId + ' .option-star-box[data-rating=\"' + previousValue + '\"]' )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'star previous selection', previousSelection ) : '';\r\n      if ( typeof previousSelection !== 'undefined' && previousSelection != null ) {\r\n        this.util.addClass( previousSelection, \"selected\" );\r\n        self.qResponse.type = 'star';\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n\r\n    }\r\n    let ref = this.util.initListener( 'click', '#' + qId + ' .option-star-box', function () {\r\n      let allOptions: any = document.querySelectorAll( '#' + qId + ' .option-star-box' );\r\n      let rating: number = this.getAttribute( 'data-rating' );\r\n      self.util.removeClassAll( allOptions, \"selected\" );\r\n      self.util.addClass( this, \"selected\" );\r\n\r\n      //select previous sibling\r\n      // let child : any = this.previousSibling;\r\n      // while( ( child = child.previousSibling) != null ){\r\n      //   self.util.addClass(child, \"selected\");\r\n      // }\r\n\r\n\r\n      // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n      // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\r\n      self.qResponse.type = 'star';\r\n      self.qResponse.text = null;\r\n      self.qResponse.number = rating;\r\n      self.qResponse.questionId = qId;\r\n\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n      //move to next question automagically\r\n      setTimeout( () => {\r\n        self.nextQuestion();\r\n      }, 500 );\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionSmile( index: number, qId: string ) {\r\n    var self: DomSurvey = this;\r\n    if ( this.util.checkIfListenerExists( '#' + qId + ' .option-smile-box', this.domListeners ) ) {\r\n      //remove listeners\r\n      ( window as any ).ccsdkDebug ? console.log( \"smile question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId + ' .option-smile-box' );\r\n\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'smile question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].number;\r\n      let previousSelection = document.querySelectorAll( '#' + qId + ' .option-smile-box[data-rating=\"' + previousValue + '\"]' )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'smile previous selection', previousSelection ) : '';\r\n      if ( typeof previousSelection !== 'undefined' && previousSelection != null ) {\r\n\r\n        this.util.addClass( previousSelection, \"selected\" );\r\n        self.qResponse.type = 'smile';\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n\r\n    }\r\n\r\n    let ref = this.util.initListener( 'click', '#' + qId + ' .option-smile-box', function () {\r\n      let allOptions: any = document.querySelectorAll( '#' + qId + ' .option-smile-box' );\r\n      let rating: number = this.getAttribute( 'data-rating' );\r\n      self.util.removeClassAll( allOptions, \"selected\" );\r\n      self.util.addClass( this, \"selected\" );\r\n\r\n      //select previous siblings\r\n      // let child : any = this.previousSibling;\r\n      // while( ( child = child.previousSibling) != null ){\r\n      //   self.util.addClass(child, \"selected\");\r\n      // }\r\n      // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n      // (window as any).ccsdkDebug?console.log('Smile selected',rating):'';\r\n      self.qResponse.type = 'smile';\r\n      self.qResponse.text = null;\r\n      self.qResponse.number = rating;\r\n      self.qResponse.questionId = qId;\r\n\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n      //move to next question automagically\r\n      setTimeout( () => {\r\n        self.nextQuestion();\r\n      }, 500 );\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n\r\n  setupListenersQuestionCsat( index: number, qId: string ) {\r\n    var self: DomSurvey = this;\r\n    if ( this.util.checkIfListenerExists( '#' + qId + ' .option-smile-box', this.domListeners ) ) {\r\n      //remove listeners\r\n      ( window as any ).ccsdkDebug ? console.log( \"csat question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId + ' .option-smile-box' );\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'csat question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].number;\r\n      let previousSelection = document.querySelectorAll( '#' + qId + ' .option-smile-box[data-rating=\"' + previousValue + '\"]' )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'csat previous selection', previousSelection ) : '';\r\n      if ( typeof previousSelection !== 'undefined' && previousSelection != null ) {\r\n\r\n        this.util.addClass( previousSelection, \"selected\" );\r\n        previousSelection.querySelectorAll( \"input\" )[ 0 ].setAttribute( 'checked', 'checked' );\r\n        self.qResponse.type = 'smile';\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n\r\n      }\r\n\r\n    }\r\n\r\n    let ref = this.util.initListener( 'click', '#' + qId + ' .option-smile-box', function () {\r\n      let allOptions: any = document.querySelectorAll( '#' + qId + ' .option-smile-box' );\r\n      let rating: number = this.getAttribute( 'data-rating' );\r\n      self.util.removeClassAll( allOptions, \"selected\" );\r\n      self.util.addClass( this, \"selected\" );\r\n      this.querySelectorAll( \"input\" )[ 0 ].setAttribute( 'checked', 'checked' );\r\n      let child: any = this.previousSibling;\r\n      while ( ( child = child.previousSibling ) != null ) {\r\n        // (window as any).ccsdkDebug?console.log('questionscale', 'previousSiblings', child):'';\r\n        self.util.addClass( child, \"selected\" );\r\n      }\r\n      // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n      // (window as any).ccsdkDebug?console.log('Smile selected',rating):'';\r\n      self.qResponse.type = 'smile';\r\n      self.qResponse.text = null;\r\n      self.qResponse.number = rating;\r\n      self.qResponse.questionId = qId;\r\n      console.log( 'dispatching event in csat', this )\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n      //move to next question automagically\r\n      setTimeout( () => {\r\n        self.nextQuestion();\r\n      }, 500 );\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionMultiline( index: number, qId: string ) {\r\n    let self: DomSurvey = this;\r\n    let multilineRes: string = '';\r\n    if ( this.util.checkIfListenerExists( '#' + qId, this.domListeners ) ) {\r\n      //remove listeners\r\n      ( window as any ).ccsdkDebug ? console.log( \"multiine question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId );\r\n\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'multiine question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].text;\r\n      ( window as any ).ccsdkDebug ? console.log( 'multiine input box', document.querySelectorAll( '#' + qId )[ 0 ] ) : '';\r\n      let previousSelection = <HTMLInputElement>document.querySelectorAll( '#' + qId )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'multiine previous selection', previousSelection ) : '';\r\n      ( window as any ).ccsdkDebug ? console.log( 'multiine previous value', previousValue ) : '';\r\n      if ( typeof previousSelection !== 'undefined' &&\r\n        previousSelection != null &&\r\n        typeof previousValue !== 'undefined' ) {\r\n        previousSelection.value = previousValue;\r\n        self.qResponse.type = 'multiline';\r\n        self.qResponse.text = previousValue;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n    let ref = this.util.initListener( 'change', '#' + qId, function () {\r\n      multilineRes = this.value;\r\n      self.qResponse.type = 'multiline';\r\n      self.qResponse.text = multilineRes;\r\n      self.qResponse.number = null;\r\n      self.qResponse.questionId = qId;\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionSingleline( index: number, qId: string ) {\r\n    let self: DomSurvey = this;\r\n    let singlelineRes: string = '';\r\n    if ( this.util.checkIfListenerExists( '#' + qId, this.domListeners ) ) {\r\n      //remove listeners\r\n      ( window as any ).ccsdkDebug ? console.log( \"singleline question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId );\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'singleline question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].text;\r\n      ( window as any ).ccsdkDebug ? console.log( 'singleline input box', document.querySelectorAll( '#' + qId )[ 0 ] ) : '';\r\n      let previousSelection = <HTMLInputElement>document.querySelectorAll( '#' + qId )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'singleline previous selection', previousSelection ) : '';\r\n      ( window as any ).ccsdkDebug ? console.log( 'singleline previous value', previousValue ) : '';\r\n      if ( typeof previousSelection !== 'undefined' &&\r\n        previousSelection != null &&\r\n        typeof previousValue !== 'undefined' ) {\r\n        previousSelection.value = previousValue;\r\n        self.qResponse.type = 'singleline';\r\n        self.qResponse.text = previousValue;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n    let ref = this.util.initListener( 'change', '#' + qId, function () {\r\n      singlelineRes = this.value;\r\n      self.qResponse.type = 'singleline';\r\n      self.qResponse.text = singlelineRes;\r\n      self.qResponse.number = null;\r\n      self.qResponse.questionId = qId;\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n\r\n    // console.log( 'singleline qResponse', self.qResponse );\r\n  }\r\n\r\n  setupListenersQuestionNumber( index: number, qId: string ) {\r\n    let self: DomSurvey = this;\r\n    let numberRes: string = '';\r\n    if ( this.util.checkIfListenerExists( '#' + qId, this.domListeners ) ) {\r\n      //remove listeners\r\n      ( window as any ).ccsdkDebug ? console.log( \"number question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId );\r\n\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'number question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].number;\r\n      ( window as any ).ccsdkDebug ? console.log( 'number input box', document.querySelectorAll( '#' + qId )[ 0 ] ) : '';\r\n      let previousSelection = <HTMLInputElement>document.querySelectorAll( '#' + qId )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'number previous selection', previousSelection ) : '';\r\n      ( window as any ).ccsdkDebug ? console.log( 'number previous value', previousValue ) : '';\r\n      if ( typeof previousSelection !== 'undefined' &&\r\n        previousSelection != null &&\r\n        typeof previousValue !== 'undefined' ) {\r\n        previousSelection.value = previousValue;\r\n        self.qResponse.type = 'number';\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n    let ref = this.util.initListener( 'change', '#' + qId, function () {\r\n      numberRes = this.value;\r\n      self.qResponse.type = 'number';\r\n      self.qResponse.text = null;\r\n      self.qResponse.number = numberRes;\r\n      self.qResponse.questionId = qId;\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionSlider( index: number, qId: string ) {\r\n    let self: DomSurvey = this;\r\n    let sliderRes: string = '';\r\n    let slider = new Slider();\r\n    let sliderInput = <HTMLInputElement>document.querySelectorAll( '#' + qId + \" input\" )[ 0 ];\r\n\r\n    if ( this.util.checkIfListenerExists( '#' + qId + \" input\", this.domListeners ) ) {\r\n      // return;\r\n\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'slider question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].number;\r\n      ( window as any ).ccsdkDebug ? console.log( 'slider input box', document.querySelectorAll( '#' + qId )[ 0 ] ) : '';\r\n      let previousSelection = <HTMLInputElement>document.querySelectorAll( '#' + qId + \" .act-slider-tip\" )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'slider previous selection', previousSelection ) : '';\r\n      ( window as any ).ccsdkDebug ? console.log( 'slider previous value', previousValue ) : '';\r\n      if ( typeof previousSelection !== 'undefined' &&\r\n        previousSelection != null &&\r\n        typeof previousValue !== 'undefined' ) {\r\n        previousSelection.innerHTML = previousValue;\r\n        sliderInput.value = previousValue;\r\n        self.qResponse.type = 'slider';\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.text = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n    let ref = this.util.initListener( \"change\", '#' + qId + \" input\", function () {\r\n      sliderRes = this.value;\r\n      self.qResponse.type = 'slider';\r\n      self.qResponse.number = sliderRes;\r\n      self.qResponse.text = null;\r\n      self.qResponse.questionId = qId;\r\n      //move to next question automagically\r\n      // self.nextQuestion();\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionSelect( index: number, qId: string ) {\r\n    let self: DomSurvey = this;\r\n    let questionId: any;\r\n    ( window as any ).ccsdkDebug ? console.log( 'select que', this.domListeners ) : '';\r\n    questionId = qId.substring( 2, qId.length );\r\n    // (window as any).ccsdkDebug?console.log(this.ccsdk.survey.answers[questionId]):'';\r\n    // (window as any).ccsdkDebug?console.log(this.ccsdk.survey.surveyAnswers[questionId]):'';\r\n    if ( this.util.checkIfListenerExists( '#' + qId + \" .cc-select-options .cc-select-option\", this.domListeners ) ) {\r\n      ( window as any ).ccsdkDebug ? console.log( 'select que listner exists' ) : '';\r\n      this.removePrevListener( '#' + qId + \" .cc-select-options .cc-select-option\" );\r\n\r\n      // return;\r\n    }\r\n    ( window as any ).ccsdkDebug ? console.log( 'select que' ) : '';\r\n\r\n    // if(!self.util.arrayContains.call(self.trackSelects, qId)){\r\n    ( window as any ).ccsdkDebug ? console.log( 'select que initialize select' ) : '';\r\n\r\n    self.select = new Select( qId );\r\n    self.select.destroyListeners();\r\n    self.select.init( qId );\r\n\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      if ( this.ccsdk.survey.answers[ questionId ].text ) {\r\n        let question = this.ccsdk.survey.getQuestionById( questionId );\r\n        self.select.setValue( this.ccsdk.survey.answers[ questionId ].text, question, this.ccsdk.survey );\r\n        self.select.selectOptions( this.ccsdk.survey.answers[ questionId ].text );\r\n        self.qResponse.type = 'select';\r\n        self.qResponse.text = this.ccsdk.survey.answers[ questionId ].text;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n    self.trackSelects.push( qId );\r\n    // }\r\n    let selectRes: string = '';\r\n    let ref = this.util.initListener( 'click', '#' + qId + \" .cc-select-options .cc-select-option\", function () {\r\n      // selectRes = this.getAttribute('data-value');\r\n      selectRes = document.querySelectorAll( '#' + qId + \" .cc-select-trigger\" )[ 0 ].getAttribute( 'data-selection-value' );\r\n      // (window as any).ccsdkDebug?console.log(selectRes):'';\r\n      self.qResponse.type = 'select';\r\n      self.qResponse.text = selectRes;\r\n      self.qResponse.number = null;\r\n      self.qResponse.questionId = qId;\r\n      //move to next question automagically\r\n\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n\r\n      // self.nextQuestion();\r\n    } );\r\n\r\n    // this.util.removeListener(this.$body, ref.type, listener.internalHandler);    \r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n\r\n  }\r\n\r\n\r\n\r\n  // addListenersNextButtonSubmit(index : number, data : any, type : string){\r\n  //   let self : DomSurvey = this;\r\n  //   let btnNext = self.util.get('.act-cc-button-next')[0];\r\n  //   self.util.on('click', btnNext, this.submitQuestion(\r\n  //     index, data, type\r\n  //   ));\r\n  //\r\n  // }\r\n\r\n  // removeListenersNextButtonSubmit(index : number, data : any, type : string){\r\n  //   let self : DomSurvey = this;\r\n  //   let btnNext = self.util.get('.act-cc-button-next');\r\n  //   self.util.on('click', btnNext, this.submitQuestion(\r\n  //     index, data, type\r\n  //   ));\r\n  //   self.util.off('click', btnNext, this.submitQuestion(\r\n  //     index, data, type\r\n  //   ));\r\n  // }\r\n\r\n  submitQuestion( index: number, data: any, type: string, qId: string ) {\r\n    // (window as any).ccsdkDebug?console.log('type', type ,'res',data):'';\r\n    this.util.trigger( document, 'q-answered', {\r\n      index: index,\r\n      data: data,\r\n      type: type,\r\n      questionId: qId.substring( 2, qId.length )\r\n    } );\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\nexport { DomSurvey }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/dom/DomSurvey.ts","import { DomUtilities } from './DomUtilities';\r\n\r\nclass Theme {\r\n\tutil: DomUtilities;\r\n\tbrandColorDark: string;\r\n\tbrandColorWhite: string;\r\n\tconstructor( brandColor, time ) {\r\n\t\tthis.util = new DomUtilities();\r\n\t\tthis.brandColorDark = this.util.shadeBlendConvert( -0.3, brandColor, undefined );\r\n\t\tthis.brandColorWhite = this.util.shadeBlendConvert( 0.1, brandColor, undefined );\r\n\t\tlet css: string = `\r\n\t\t.cc-sdk #progressBar{\r\n\t\t\tbackground : ${this.brandColorDark };\r\n\t\t}\r\n\t\t.cc-sdk #progress-line{ \r\n\t\t\tbackground: ${brandColor };\r\n\t\t}\r\n\t\t.cc-sdk .cc-checkbox input[type=\"checkbox\"]:checked + label:before {\r\n\t\t\tbackground:${brandColor };\r\n\t\t}\r\n\t\t.ccsdk-overlay.glass{\r\n\t\t\tbackground-color:${this.util.hexToRGB( brandColor, .5 ) };\r\n\t\t}\r\n\t\t.cc-sdk .cc-checkbox input[type=\"checkbox\"]:checked + label:after {\r\n\t\t\tborder-color: #fff;\r\n\t\t}\r\n\t\t.cc-sdk .cc-checkbox input[type=\"radio\"]:checked + label:before {\r\n\t\t\tborder-color: ${brandColor };\r\n\t\t}\r\n\t\t.cc-sdk .cc-checkbox input[type=\"radio\"]:checked + label:before {\r\n\t\t\tborder-color: ${brandColor };\r\n\t\t}\r\n\t\t.cc-sdk .cc-checkbox input[type=\"radio\"]:checked + label:after {\r\n\t\t\tbackground: ${brandColor };\r\n\t\t}\r\n\t\t.cc-sdk .cc-sdk-form-control:focus {\r\n\t\t\tborder-color: ${brandColor };\r\n\t\t}\r\n\t\t.cc-sdk .cc-message-box__btn{\r\n\t\t\tbackground: ${brandColor };\r\n\t\t\tcolor:#fff;\r\n\t\t}\r\n\t\t\t.cc-sdk .submit-icon{\r\n\t\t\t\tbackground-image: url(\"data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%2747px%27%20height%3D%2747px%27%20viewBox%3D%270%200%2047%2047%27%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%3E%3Ctitle%3EGroup%2016%3C%2Ftitle%3E%3Cdesc%3ECreated%20with%20Sketch.%3C%2Fdesc%3E%3Cdefs%3E%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%3Cfilter%20x%3D%27-18.1%25%27%20y%3D%27-12.9%25%27%20width%3D%27136.2%25%27%20height%3D%27136.2%25%27%20filterUnits%3D%27objectBoundingBox%27%20id%3D%27filter-2%27%3E%3CfeOffset%20dx%3D%270%27%20dy%3D%272%27%20in%3D%27SourceAlpha%27%20result%3D%27shadowOffsetOuter1%27%3E%3C%2FfeOffset%3E%3CfeGaussianBlur%20stdDeviation%3D%272%27%20in%3D%27shadowOffsetOuter1%27%20result%3D%27shadowBlurOuter1%27%3E%3C%2FfeGaussianBlur%3E%3CfeColorMatrix%20values%3D%270%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200.116423234%200%27%20type%3D%27matrix%27%20in%3D%27shadowBlurOuter1%27%3E%3C%2FfeColorMatrix%3E%3C%2Ffilter%3E%3C%2Fdefs%3E%3Cg%20id%3D%27Page-1%27%20stroke%3D%27none%27%20stroke-width%3D%271%27%20fill%3D%27none%27%20fill-rule%3D%27evenodd%27%3E%3Cg%20id%3D%271-copy-20%27%20transform%3D%27translate(-1246.000000%2C%20-664.000000)%27%3E%3Cg%20id%3D%27Group-16%27%20transform%3D%27translate(1250.000000%2C%20666.000000)%27%3E%3Cg%20id%3D%27Oval-4%27%3E%3Cuse%20fill%3D%27white%27%20fill-opacity%3D%271%27%20filter%3D%27url(%23filter-2)%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3Cuse%20fill%3D%27${encodeURIComponent( brandColor ) }%27%20fill-rule%3D%27evenodd%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3C%2Fg%3E%3Cg%20id%3D%27Group-5%27%20transform%3D%27translate(12.000000%2C%2011.000000)%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23FFFFFF%27%3E%3Cg%20id%3D%27fast-forward-arrows%27%20transform%3D%27translate(6.173934%2C%200.000000)%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3Cg%20id%3D%27fast-forward-arrows-copy%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\");\r\n\t\t\t}\r\n\t\t\t[dir=\"rtl\"].cc-sdk .submit-icon{\r\n\t\t\t\tbackground-image: url(\"data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%2747px%27%20height%3D%2747px%27%20viewBox%3D%270%200%2047%2047%27%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%3E%0A%20%20%20%20%3Cdesc%3ECreated%20with%20Sketch.%3C%2Fdesc%3E%0A%20%20%20%20%3Cdefs%3E%3C%2Fdefs%3E%0A%20%20%20%20%3Cg%20id%3D%27Page-1%27%20stroke%3D%27none%27%20stroke-width%3D%271%27%20fill%3D%27none%27%20fill-rule%3D%27evenodd%27%3E%0A%20%20%20%20%20%20%20%20%3Cg%20id%3D%27Submit_Icon%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27Oval-4%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27path-1-link%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23white%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27path-1-link%27%20fill%3D%27${encodeURIComponent( brandColor ) }%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27Group-5%27%20transform%3D%27translate(12.000000%2C%2011.000000)%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23ffffff%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27fast-forward-arrows%27%20transform%3D%27translate(11.173934%2C%208.500000)%20scale(-1%2C%201)%20translate(-11.173934%2C%20-8.500000)%20translate(6.173934%2C%200.000000)%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27fast-forward-arrows-copy%27%20transform%3D%27translate(5.000000%2C%208.500000)%20scale(-1%2C%201)%20translate(-5.000000%2C%20-8.500000)%20%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%3C%2Fg%3E%0A%3C%2Fsvg%3E\");\r\n\t\t\t}\r\n\t\t\t.cc-sdk .cc-question-container__required-label{\r\n\t\t\tcolor: ${brandColor };\r\n\t\t}\r\n\t\t.cc-sdk input[type=\"range\"]::-webkit-slider-runnable-track{\r\n\t\t\tbackground: ${brandColor } !important;\r\n\t\t\t   background: -moz-linear-gradient(-45deg, ${brandColor } 0%, ${ this.brandColorDark } 100%)!important;\r\n\t\t\t   background: -webkit-linear-gradient(-45deg, ${brandColor }' 0%,${ this.brandColorDark } 100%)!important;\r\n\t\t\t   background: linear-gradient(135deg, ${brandColor } 0%,${ this.brandColorDark } 100%)!important;\r\n\t\t\t   filter: progid:DXImageTransform.Microsoft.gradient( startColorstr=${brandColor }, endColorstr=${ this.brandColorDark },GradientType=1 );\r\n\t\t   }\r\n\t\t.cc-sdk input[type=\"range\"]::-moz-range-track {\r\n\t\t\tbackground: ${brandColor } !important;\r\n\t\t\tbackground: -moz-linear-gradient(-45deg, ${brandColor } 0%, ${ this.brandColorDark } 100%)!important;\r\n\t\t\tbackground: -webkit-linear-gradient(-45deg, ${brandColor } 0%, ${ this.brandColorDark } 100%)!important;\r\n\t\t\tbackground: linear-gradient(135deg, ${brandColor } 0%,${ this.brandColorDark } 100%)!important;\r\n\t\t\tfilter: progid:DXImageTransform.Microsoft.gradient( startColorstr=${brandColor }, endColorstr=${ this.brandColorDark },GradientType=1 );\r\n\t\t}\r\n\t\t   .cc-sdk input[type=\"range\"]::-webkit-slider-thumb{\r\n\t\t\tborder: 1px solid ${brandColor } ;\r\n\t\t\tbackground-color: #fff;\r\n\t\t   }\r\n\t\t   .cc-sdk input[type=\"range\"]::-moz-range-thumb {\r\n\t\t\tborder: 1px solid ${brandColor } ;\r\n\t\t\tbackground-color: #fff;\r\n\t\t   }\r\n\t\t   .cc-sdk svg.timer circle {\r\n\t\t\tanimation: countdown ${time }s linear 1 forwards;\r\n\t\t\tstroke: ${brandColor };\r\n\t\t   }\r\n\t\t   .cc-sdk input[type=range].selected::-webkit-slider-thumb {\r\n\t\t\t\tbackground-color: ${brandColor };\r\n\t\t\t}\r\n\t\t\t.cc-sdk input[type = range].selected::-moz - range - thumb {\r\n\t\t\t\tbackground-color: ${brandColor };\r\n\t\t\t}\r\n\t\t\t.cc-sdk .cc-checkbox label:hover:before{\r\n\t\t\t\tborder: solid 1px ${brandColor };\r\n\t\t\t}\r\n\t\t @media (max-width: 768px){\r\n\t \t\t\t.ccsdk-overlay.glass{\r\n\t \t\t\tbackground-color:rgba(255,255,255,.85);\r\n\t \t\t\tbackground-image:none;\r\n\t\t\t\t}\r\n\t\t\t\t.cc-sdk.cc-popup-container{\r\n\t\t\t\t\tbackground-color : transparent;\r\n\t\t\t\t}\r\n\t\t\t\t.cc-sdk.cc-popup-container .ccsdk-overlay.glass{\r\n\t\t\t\t\tbackground-color : ${this.util.hexToRGB( brandColor, .9 ) };\r\n\t\t\t\t}\r\n\t\t\t\t.cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text{\r\n\t\t\t\t\tcolor:#fff;\r\n\t\t\t\t}\r\n\t\t`;\r\n\t\tthis.util.appendStyle( css );\r\n\r\n\t}\r\n}\r\nexport { Theme }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/dom/Theme.ts","import { DomUtilities } from './DomUtilities';\r\nclass Slider {\r\n  inputRange: any;\r\n  rangeTip: any;\r\n  maxValue: number;\r\n  speed: number;\r\n  currValue: number;\r\n  rafID: any;\r\n  timeout: any;\r\n  util: any\r\n\r\n  constructor() {\r\n    this.inputRange = document.getElementsByClassName( 'cc-sdk-range' )[ 0 ];\r\n    this.rangeTip = this.inputRange.parentNode.querySelectorAll( \".act-slider-tip\" )[ 0 ];\r\n    this.util = new DomUtilities();\r\n    //  this.maxValue = 100; // the higher the smoother when dragging\r\n    this.speed = 5;\r\n\r\n\r\n    // set min/max value\r\n    // this.inputRange.min = 0;\r\n    this.inputRange.min = this.inputRange.getAttribute( 'min' );\r\n    // this.inputRange.max = this.maxValue;\r\n    this.inputRange.max = this.inputRange.getAttribute( 'max' );\r\n    this.setupListeners();\r\n  }\r\n\r\n  setupListeners() {\r\n    let self: Slider = this;\r\n\r\n    // bind events\r\n    this.inputRange.addEventListener( 'mouseup', this.clearTo, false );\r\n\r\n    // move gradient\r\n    this.inputRange.addEventListener( 'input', function () {\r\n      self.updateRangeTip();\r\n      self.util.addClass( this, 'selected' );\r\n\r\n      //Change slide thumb color on way up\r\n      if ( this.value > 20 ) {\r\n        self.inputRange.classList.add( 'ltpurple' );\r\n      }\r\n      if ( this.value > 40 ) {\r\n        self.inputRange.classList.add( 'purple' );\r\n      }\r\n      if ( this.value > 60 ) {\r\n        self.inputRange.classList.add( 'pink' );\r\n      }\r\n\r\n      //Change slide thumb color on way down\r\n      if ( this.value < 20 ) {\r\n        self.inputRange.classList.remove( 'ltpurple' );\r\n      }\r\n      if ( this.value < 40 ) {\r\n        self.inputRange.classList.remove( 'purple' );\r\n      }\r\n      if ( this.value < 60 ) {\r\n        self.inputRange.classList.remove( 'pink' );\r\n      }\r\n    } );\r\n  }\r\n\r\n\r\n\r\n  updateRangeTip() {\r\n    let self: Slider = this;\r\n    this.rangeTip.style.display = 'block';\r\n    this.rangeTip.innerHTML = this.inputRange.value;\r\n  }\r\n\r\n  clearTo() {\r\n    clearTimeout( this.timeout );\r\n  }\r\n\r\n  // listen for unlock\r\n  // unlockStartHandler() {\r\n  //   let self : any = this;\r\n  //   // clear raf if trying again\r\n  //   window.cancelAnimationFrame(this.rafID);\r\n  //   // set to desired value\r\n  //   this.currValue = +self.value;\r\n  // }\r\n\r\n  // unlockEndHandler() {\r\n  //   // store current value\r\n  //   this.currValue = + this.value;\r\n  //   // determine if we have reached success or not\r\n  //   if(this.currValue >= this.maxValue) {\r\n  //      this.successHandler();\r\n  //   }\r\n  //   else {\r\n  //      this.rafID = window.requestAnimationFrame(this.animateHandler);\r\n  //   }\r\n  // }\r\n\r\n  // handle range animation\r\n  animateHandler() {\r\n    // calculate gradient transition\r\n    var transX = this.currValue - this.maxValue;\r\n\r\n    // update input range\r\n    this.inputRange.value = this.currValue;\r\n\r\n    //Change slide thumb color on mouse up\r\n    if ( this.currValue < 20 ) {\r\n      this.inputRange.classList.remove( 'ltpurple' );\r\n    }\r\n    if ( this.currValue < 40 ) {\r\n      this.inputRange.classList.remove( 'purple' );\r\n    }\r\n    if ( this.currValue < 60 ) {\r\n      this.inputRange.classList.remove( 'pink' );\r\n    }\r\n\r\n    // determine if we need to continue\r\n    if ( this.currValue > -1 ) {\r\n      window.requestAnimationFrame( this.animateHandler );\r\n    }\r\n\r\n    // decrement value\r\n    this.currValue = this.currValue - this.speed;\r\n  }\r\n\r\n  // handle successful unlock\r\n  successHandler() {\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\nexport { Slider };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/dom/Slider.ts","//Manages trigger.\r\nimport { Cookie } from \"./helpers/Cookie\";\r\nimport { Constants } from \"./Constants\";\r\nimport { Triggers } from \"./Triggers\";\r\n//collect initial data\r\n//if on site time is null, add on site time\r\nif ( Cookie.get( Constants.CCTriggerSiteStartTime ) == null ) {\r\n  Cookie.set( Constants.CCTriggerSiteStartTime, new Date(), undefined, undefined );\r\n}\r\n//always add on page Time\r\nCookie.set( Constants.CCTriggerPageStartTime, new Date(), undefined, undefined );\r\n\r\nlet sitePageViewCount = Cookie.get( Constants.CCTriggerSitePageViewCount );\r\nif ( sitePageViewCount == null ) {\r\n  Cookie.set( Constants.CCTriggerSitePageViewCount, 1, undefined, undefined );\r\n} else {\r\n  sitePageViewCount = ( parseInt( sitePageViewCount ) + 1 ).toString();\r\n  Cookie.set( Constants.CCTriggerSitePageViewCount, sitePageViewCount, undefined, undefined );\r\n}\r\n\r\nlet individualPageViewCount = Cookie.get( Constants.CCTriggerIndividualPageViewCount );\r\nif ( individualPageViewCount == null ) {\r\n  Cookie.set( Constants.CCTriggerIndividualPageViewCount, 1, undefined, window.location.href );\r\n} else {\r\n  individualPageViewCount = ( parseInt( individualPageViewCount ) + 1 ).toString();\r\n  Cookie.set( Constants.CCTriggerIndividualPageViewCount, individualPageViewCount, undefined, window.location.href );\r\n}\r\n\r\n( window as any ).click = 0;\r\n\r\nwindow.onscroll = function ( e ) {\r\n  // called when the window is scrolled.  \r\n  let doc = document.documentElement;\r\n  let left = ( window.pageXOffset || doc.scrollLeft ) - ( doc.clientLeft || 0 );\r\n  let top = ( window.pageYOffset || doc.scrollTop ) - ( doc.clientTop || 0 );\r\n  ( window as any ).ccsdkTopOffset = top;\r\n  TriggerManager.processScrollTriggers( top );\r\n}\r\n\r\ndocument.onclick = function ( e ) {\r\n  ( window as any ).click++;\r\n}\r\n\r\n//TriggerManager adds to survey Queue\r\nclass TriggerManager {\r\n\r\n  static triggerInterval: any = null;\r\n  static triggerInstances: any = {};\r\n\r\n  constructor() {\r\n    //initialize triggers\r\n    //add those triggers which aren't completed yet.\r\n  }\r\n\r\n  static addSurvey( surveyId: any, trigger: Triggers ) {\r\n    TriggerManager.triggerInstances[ surveyId ] = trigger;\r\n    if ( Object.keys( TriggerManager.triggerInstances ).length >= 1 ) {\r\n      ( window as any ).ccsdkDebug ? console.log( TriggerManager.triggerInterval ) : '';\r\n      if ( TriggerManager.triggerInterval == null ) {\r\n        ( window as any ).ccsdkDebug ? console.log( \"TriggerHandler : Setting up Interval Trigger Handlers.\" ) : '';\r\n        TriggerManager.triggerInterval = setInterval( TriggerManager.processIntervalTriggers, 1000 );\r\n      }\r\n      //processing sequential triggers if any.\r\n      // console.log(\"TriggerHandler : Processing sequential triggers for  \" + surveyId);\r\n      // TriggerManager.processTriggersBySurveyId(surveyId);\r\n    }\r\n  }\r\n\r\n  static removeSurvey( surveyId: string ) {\r\n    delete TriggerManager.triggerInstances[ surveyId ];\r\n    if ( Object.keys( TriggerManager.triggerInstances ).length == 0 ) {\r\n      clearInterval( TriggerManager.triggerInterval );\r\n    }\r\n  }\r\n\r\n  static processIntervalTriggers() {\r\n    //if some survey is already running skip processing surveys for now?or queue it?.\r\n    Cookie.set( Constants.CCTriggerPageElapsedTime, new Date(), undefined, window.location.href );\r\n    Cookie.set( Constants.CCTriggerSiteElapsedTime, new Date(), undefined, undefined );\r\n    //set cookies and call every process Interval Triggers.\r\n    for ( let trigger in TriggerManager.triggerInstances ) {\r\n      TriggerManager.triggerInstances[ trigger ].processIntervalTriggers();\r\n      TriggerManager.triggerInstances[ trigger ].processConditionalTriggers();\r\n    }\r\n  }\r\n\r\n  static processScrollTriggers( scrollNow ) {\r\n    for ( let trigger in TriggerManager.triggerInstances ) {\r\n      //process all scroll triggers.\r\n      TriggerManager.triggerInstances[ trigger ].processScrollTriggers( scrollNow );\r\n    }\r\n  }\r\n\r\n  static disableTriggers( surveyId: string ) {\r\n    TriggerManager.triggerInstances[ surveyId ].disableTriggers();\r\n  }\r\n\r\n};\r\n\r\n\r\n\r\nexport { TriggerManager };\n\n\n// WEBPACK FOOTER //\n// ./src/TriggerManager.ts","import { Cookie } from \"./helpers/Cookie\";\r\nimport { Constants } from \"./Constants\";\r\nimport { SurveyManager } from \"./SurveyManager\";\r\nimport { TriggerUtils } from \"./helpers/TriggerUtils\";\r\nimport { CCSDKConfig } from \"./interfaces/CCSDKConfig\";\r\n\r\nclass Triggers {\r\n\r\n  ccsdk: any;\r\n  pageCountTrigger: boolean;\r\n  pageTimeTrigger: boolean;\r\n  siteCountTrigger: boolean;\r\n  siteTimeTrigger: boolean;\r\n  urlParamTrigger: boolean;\r\n  notUrlParamTrigger: boolean;\r\n  utmParamTrigger: boolean;\r\n  scrollPixelsTrigger: boolean;\r\n  minPageCount: number;\r\n  minSiteCount: number;\r\n  minPageTime: number;\r\n  minSiteTime: number;\r\n  minScrollPixels: number;\r\n  utm: string;\r\n  inUrl: RegExp;\r\n  notinUrl: RegExp;\r\n  pageCountTriggerEnabled: boolean;\r\n  siteCountTriggerEnabled: boolean;\r\n  pageTimeTriggerEnabled: boolean;\r\n  siteTimeTriggerEnabled: boolean;\r\n  urlParamTriggerEnabled: boolean;\r\n  notUrlParamTriggerEnabled: boolean;\r\n  utmParamTriggerEnabled: boolean;\r\n  scrollPixelsTriggerEnabled: boolean;\r\n\r\n  conditionalTriggers: any;\r\n\r\n  constructor( ccsdk ) {\r\n    this.ccsdk = ccsdk;\r\n    this.pageCountTrigger = false;\r\n    this.siteCountTrigger = false;\r\n    this.pageTimeTrigger = false;\r\n    this.siteTimeTrigger = false;\r\n    this.urlParamTrigger = false;\r\n    this.notUrlParamTrigger = false;\r\n    this.utmParamTrigger = false;\r\n    this.scrollPixelsTrigger = false;\r\n\r\n    //disable all triggers.\r\n    this.pageCountTriggerEnabled = false;\r\n    this.siteCountTriggerEnabled = false;\r\n    this.pageTimeTriggerEnabled = false;\r\n    this.siteTimeTriggerEnabled = false;\r\n    this.urlParamTriggerEnabled = false;\r\n    this.notUrlParamTriggerEnabled = false;\r\n    this.utmParamTriggerEnabled = false;\r\n    this.scrollPixelsTriggerEnabled = false;\r\n    this.conditionalTriggers = {};\r\n  }\r\n\r\n\r\n  enableClickTrigger( target: string, cb: any ) {\r\n    let item = document.querySelectorAll( target )[ 0 ];\r\n    if ( typeof item !== 'undefined' ) {\r\n      item.addEventListener( 'click', cb );\r\n    }\r\n  }\r\n\r\n  enablePageCountTrigger( minPageCount: number ) {\r\n    this.minPageCount = minPageCount;\r\n    this.pageCountTriggerEnabled = true;\r\n    this.TriggerPopUpByPageCount();\r\n  }\r\n\r\n  enableSiteCountTrigger( minSiteCount: number ) {\r\n    this.minSiteCount = minSiteCount;\r\n    this.pageCountTriggerEnabled = true;\r\n    this.TriggerPopUpByPageCount();\r\n  }\r\n\r\n  enablePageTimeTrigger( minPageTime: number ) {\r\n    this.minPageTime = minPageTime;\r\n    this.pageTimeTriggerEnabled = true;\r\n    this.TriggerPopUpByTimeSpentOnPage();\r\n  }\r\n\r\n  enableSiteTimeTrigger( minSiteTime: number ) {\r\n    this.minSiteTime = minSiteTime;\r\n    this.siteTimeTriggerEnabled = true;\r\n    this.TriggerPopUpByTimeSpentOnSite();\r\n  }\r\n\r\n  enablePopUpByURLPatternTrigger( urlPattern: RegExp ) {\r\n    this.inUrl = urlPattern;\r\n    this.urlParamTriggerEnabled = true;\r\n    this.TriggerPopUpByURLPattern();\r\n  }\r\n\r\n  enablePopUpByNotURLPatternTrigger( urlPattern: RegExp ) {\r\n    this.notinUrl = urlPattern;\r\n    this.notUrlParamTriggerEnabled = true;\r\n    this.TriggerPopUpByNotURLPattern();\r\n  }\r\n\r\n  enablePopUpByUTMPatternTrigger( urlPattern: string ) {\r\n    this.utm = urlPattern;\r\n    this.utmParamTriggerEnabled = true;\r\n    this.TriggerPopUpByUTMParameter();\r\n  }\r\n\r\n  enableScrollPixelsTrigger( minScrollPixels: number ) {\r\n    this.minScrollPixels = minScrollPixels;\r\n    this.scrollPixelsTriggerEnabled = true;\r\n\r\n  }\r\n\r\n  processIntervalTriggers() {\r\n    //if survey already launched\r\n    //skip processing.\r\n    if ( this.ccsdk.surveyRunning || this.ccsdk.surveyDone ) {\r\n      return;\r\n    }\r\n    this.TriggerPopUpByTimeSpentOnPage();\r\n    this.TriggerPopUpByTimeSpentOnSite();\r\n  }\r\n\r\n  setConditionalTriggers( config: CCSDKConfig ) {\r\n    ( window as any ).ccsdkDebug ? console.log( config.grepURL ) : '';\r\n    //\r\n    if ( ( typeof config.click !== 'undefined' ) && ( config.click != 0 ) ) {\r\n      this.conditionalTriggers.click = config.click;\r\n    }\r\n    if ( ( typeof config.onExitDetect !== 'undefined' ) ) {\r\n      this.conditionalTriggers.onExitDetect = config.onExitDetect;\r\n    }\r\n    // if ((typeof config.cssSelector !== 'undefined')) {\r\n    //   this.conditionalTriggers.cssSelector = config.cssSelector;\r\n    // }\r\n    if ( ( typeof config.waitSeconds !== 'undefined' ) && ( config.waitSeconds !== 0 ) ) {\r\n      this.conditionalTriggers.waitSeconds = config.waitSeconds;\r\n    }\r\n    if ( ( typeof config.scrollPercent !== 'undefined' ) && ( config.scrollPercent !== 0 ) ) {\r\n      this.conditionalTriggers.scrollPercent = config.scrollPercent;\r\n    }\r\n    if ( ( typeof config.grepInvertURL !== 'undefined' ) && ( config.grepInvertURL ) ) {\r\n      this.conditionalTriggers.grepInvertURL = config.grepInvertURL;\r\n    }\r\n    if ( ( typeof config.grepURL !== 'undefined' ) && ( config.grepURL ) ) {\r\n      this.conditionalTriggers.grepURL = config.grepURL;\r\n    }\r\n\r\n  }\r\n\r\n  processConditionalTriggers() {\r\n    //gather all conditional triggers and process them.\r\n    let self = this;\r\n    let isEnabled = true;\r\n    if ( this.ccsdk.surveyRunning || this.ccsdk.surveyDone ) {\r\n      ( window as any ).ccsdkDebug ? console.log( 'returning' ) : '';\r\n      return;\r\n    }\r\n    if ( typeof this.conditionalTriggers !== 'undefined' ) {\r\n      if ( Object.keys( this.conditionalTriggers ).length == 0 ) {\r\n        return false;\r\n      }\r\n      for ( let conditionalTrigger in this.conditionalTriggers ) {\r\n        if ( this.conditionalTriggers[ conditionalTrigger ] != null ) {\r\n          switch ( conditionalTrigger ) {\r\n            case \"onExitDetect\":\r\n              let onExitDetect = self.ccsdk.util.initListener( \"mouseout\", \"document\", function () {\r\n                ( window as any ).ccsdkDebug ? console.log( \"Mouse out\" ) : '';\r\n\r\n              } );\r\n\r\n              onExitDetect.internalHandler = self.ccsdk.util.listener( document, onExitDetect.type, onExitDetect.id, onExitDetect.cb );\r\n\r\n              break;\r\n            case \"click\":\r\n              //find click count on screen\r\n              //calculate click count\r\n              // if((window as any).click > this.conditionalTriggers.click) {\r\n              //   return SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n              // }\r\n              isEnabled = isEnabled && ( ( window as any ).click >= this.conditionalTriggers.click );\r\n              break;\r\n            case \"waitSeconds\":\r\n              let pageStartTime = new Date( Cookie.get( Constants.CCTriggerPageStartTime ) ).getTime();\r\n              let pageTime = new Date( Cookie.get( Constants.CCTriggerPageElapsedTime ) ).getTime();\r\n              isEnabled = isEnabled && TriggerUtils.checkTimeCondition( pageTime, pageStartTime, this.conditionalTriggers[ conditionalTrigger ] );\r\n              ( window as any ).ccsdkDebug ? console.log( 'waitSeconds enabled', isEnabled ) : '';\r\n              break;\r\n            case \"scrollPercent\":\r\n              //fill it with current scroll position\r\n              isEnabled = isEnabled && TriggerUtils.checkScroll( ( window as any ).ccsdkTopOffset, this.conditionalTriggers[ conditionalTrigger ] );\r\n              ( window as any ).ccsdkDebug ? console.log( 'scrollPercent enabled', isEnabled ) : '';\r\n\r\n              break;\r\n            case \"grepURL\":\r\n              isEnabled = isEnabled && TriggerUtils.checkInUrl( this.conditionalTriggers[ conditionalTrigger ] );\r\n              ( window as any ).ccsdkDebug ? console.log( 'grepURL enabled', isEnabled ) : '';\r\n              break;\r\n            case \"grepInvertURL\":\r\n              isEnabled = isEnabled && !TriggerUtils.checkInUrl( this.conditionalTriggers[ conditionalTrigger ] );\r\n              ( window as any ).ccsdkDebug ? console.log( 'grepInvertURL enabled', isEnabled ) : '';\r\n              break;\r\n          }\r\n        }\r\n      }\r\n      if ( isEnabled ) {\r\n        if ( this.ccsdk && this.ccsdk.tracking ) {\r\n          this.ccsdk.tracking.trackEvent( 'Popped Up', {\r\n            token: this.ccsdk.tracking.token,\r\n            data: {\r\n              name: null,\r\n              action: null\r\n            }\r\n          }, null, null )\r\n        }\r\n        SurveyManager.addSurvey( this.ccsdk.surveyToken );\r\n      }\r\n    } else {\r\n      //do nothing.\r\n    }\r\n  }\r\n\r\n  processNonConditionalTriggers() {\r\n    //process all non conditional one shot triggers here?\r\n  }\r\n\r\n  processScrollTriggers( scrollNow: number ) {\r\n    this.TriggerPopUpByScrollPixels( scrollNow );\r\n  }\r\n\r\n  TriggerPopUpByPageCount() {\r\n    let pageCount = parseInt( Cookie.get( Constants.CCTriggerSitePageViewCount ) );\r\n    if ( pageCount == NaN ) {\r\n      pageCount = 0;\r\n    }\r\n    //!(window as any).globalSurveyRunning && \r\n    if ( !this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.pageCountTrigger && TriggerUtils.checkPageCount( pageCount, this.minPageCount ) ) {\r\n      this.pageCountTrigger = true;\r\n      //displayQuestion\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey( this.ccsdk.surveyToken );\r\n    } else {\r\n      //already executed.\r\n      //or condition not satisified yet.\r\n    }\r\n  }\r\n\r\n\r\n  //minPageTime in seconds\r\n  TriggerPopUpByTimeSpentOnPage() {\r\n    let pageStartTime = new Date( Cookie.get( Constants.CCTriggerPageStartTime ) ).getTime();\r\n    let pageTime = new Date( Cookie.get( Constants.CCTriggerPageElapsedTime ) ).getTime();\r\n\r\n    //!(window as any).globalSurveyRunning && \r\n    if ( !this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.pageTimeTrigger && TriggerUtils.checkTimeCondition( pageTime, pageStartTime, this.minPageTime ) ) {\r\n      this.pageTimeTrigger = true;\r\n      //displayQuestion\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey( this.ccsdk.surveyToken );\r\n    } else {\r\n      //already executed.\r\n      //or condition not satisified yet.\r\n    }\r\n  }\r\n\r\n  TriggerPopUpByTimeSpentOnSite() {\r\n    let siteStartTime = new Date( Cookie.get( Constants.CCTriggerSiteStartTime ) ).getTime();\r\n    let siteTime = new Date( Cookie.get( Constants.CCTriggerSiteElapsedTime ) ).getTime();\r\n    //!(window as any).globalSurveyRunning && \r\n    if ( !this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.siteTimeTrigger && TriggerUtils.checkTimeCondition( siteTime, siteStartTime, this.minSiteTime ) ) {\r\n      this.siteTimeTrigger = true;\r\n      //displayQuestion\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey( this.ccsdk.surveyToken );\r\n    } else {\r\n      //already executed.\r\n      //or condition not satisified yet.\r\n    }\r\n  }\r\n\r\n  TriggerPopUpByInactivity() {\r\n\r\n  }\r\n\r\n  TriggerPopUpByScrollPixels( scrollNow: number ) {\r\n    //!(window as any).globalSurveyRunning && \r\n    if ( !this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.scrollPixelsTrigger && TriggerUtils.checkScroll( scrollNow, this.minScrollPixels ) ) {\r\n      this.scrollPixelsTrigger = true;\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey( this.ccsdk.surveyToken );\r\n      // this.ccsdk.initSurvey();\r\n      // SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n    } else {\r\n      //already executed?\r\n      //or condition not satisified yet.\r\n    }\r\n  }\r\n\r\n  //run only once?\r\n  TriggerPopUpByURLPattern() {\r\n    //!(window as any).globalSurveyRunning && \r\n    if ( !this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.urlParamTrigger && TriggerUtils.checkInUrl( this.inUrl ) ) {\r\n      this.urlParamTrigger = true;\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey( this.ccsdk.surveyToken );\r\n    } else {\r\n\r\n    }\r\n  }\r\n\r\n  TriggerPopUpByNotURLPattern() {\r\n    //!(window as any).globalSurveyRunning && \r\n    if ( !this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.notUrlParamTrigger && !TriggerUtils.checkInUrl( this.inUrl ) ) {\r\n      this.notUrlParamTrigger = true;\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey( this.ccsdk.surveyToken );\r\n    } else {\r\n\r\n    }\r\n  }\r\n\r\n  TriggerPopUpByUTMParameter() {\r\n    let utmP = this.utm.split( \"=\" );\r\n    let utmVal = Cookie.getParameterByName( utmP[ 0 ], undefined );\r\n    //!(window as any).globalSurveyRunning && \r\n    if ( !this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.utmParamTrigger && utmVal === utmP[ 1 ] ) {\r\n      this.utmParamTrigger = true;\r\n\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey( this.ccsdk.surveyToken );\r\n    }\r\n  }\r\n\r\n  resetTriggers() {\r\n    this.pageCountTrigger = false;\r\n    this.pageTimeTrigger = false;\r\n    this.siteTimeTrigger = false;\r\n    this.urlParamTrigger = false;\r\n    this.scrollPixelsTrigger = false;\r\n  }\r\n}\r\n\r\nexport { Triggers };\r\n\r\n\r\n// function triggerHandler(surveyHandler) {\r\n//   //survey specific Trigger Handlers\r\n//   // self.surveyRunning = self.util.get('#' + self.surveyToken  + \"-survey\").length == 1;\r\n  // Cookie.set(Constants.CCTriggerPageElapsedTime, new Date(), undefined, window.location.href);\r\n  // Cookie.set(Constants.CCTriggerSiteElapsedTime, new Date(), undefined, undefined);\r\n//   surveyHandler.triggers.TriggerPopUpByTimeSpentOnSite(surveyHandler.siteInterval);\r\n//   // surveyHandler.surveyRunning = surveyHandler.util.get('#' + self.surveyToken  + \"-survey\").length == 1;\r\n//   surveyHandler.triggers.TriggerPopUpByTimeSpentOnPage(surveyHandler.pageInterval);\r\n// }\r\n\r\n//call below functions when survey is locked and loaded.\r\n// self.triggers.TriggerPopUpByURLPattern(/xyz=33/);\r\n// self.triggers.TriggerPopUpByUTMParameter();\r\n// self.triggerInterval = setInterval(self.triggerHandler, 1000, self);\n\n\n// WEBPACK FOOTER //\n// ./src/Triggers.ts","class TriggerUtils {\r\n\r\n\r\n    public static checkInUrl(inUrl : RegExp) {\r\n        return window.location.href.match(inUrl) != null && window.location.href.match(inUrl).length > 0;\r\n    }\r\n\r\n    public static checkTimeCondition(pageTime : number, pageStartTime : number, minPageTime : number) {\r\n        return Math.round((pageTime - pageStartTime) / 1000) > minPageTime;\r\n    }\r\n\r\n    public static checkScroll(scrollNow : number, minScrollPixels : number) {\r\n        return scrollNow > minScrollPixels;\r\n    }\r\n\r\n    public static checkPageCount(pageCount : number, minPageCount : number) {\r\n        return pageCount >= minPageCount;\r\n    }\r\n}\r\n\r\nexport { TriggerUtils };\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/TriggerUtils.ts","import { RequestHelper } from './Request';\r\n\r\nexport class MatomoTracker {\r\n\r\n  public username;\r\n  public token;\r\n\r\n  trackEvent( event, payload, successCb, errorCb ) {\r\n    let url = new URL( 'https://matomo.getcloudcherry.com/piwik.php' );\r\n    // constants for project\r\n    const idsite = 4;\r\n    const rec = 1;\r\n\r\n    let searchParams = {\r\n      idsite,\r\n      rec,\r\n      action_name: event,\r\n      url: window.location.href,\r\n      action_url: window.location.href,\r\n      uid: this.username,\r\n      _cvar: { '1': [ 'Token', payload.token ] },\r\n      new_visit: event === 'Welcome Pop up Position' ? 1 : 0,\r\n      e_c: event,\r\n      e_a: payload.data.action,\r\n      e_n: payload.data.name,\r\n      rand: Math.ceil( Math.random() * 100 )\r\n    };\r\n    Object.keys( searchParams ).forEach( x => {\r\n      let param;\r\n      if ( typeof searchParams[ x ] === 'string' ) {\r\n        param = searchParams[ x ];\r\n      } else {\r\n        param = JSON.stringify( searchParams[ x ] );\r\n      }\r\n      url.searchParams.set( x, param );\r\n    } )\r\n    return RequestHelper.post( url.toString(), null, successCb, errorCb );\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/tracking.ts"],"sourceRoot":""}