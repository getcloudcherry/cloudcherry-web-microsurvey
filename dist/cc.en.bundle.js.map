{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/helpers/dom/DomUtilities.ts","webpack:///./src/Constants.ts","webpack:///./src/helpers/Cookie.ts","webpack:///./src/SurveyManager.ts","webpack:///./src/helpers/filters/LanguageTextFilter.ts","webpack:///./src/Config.ts","webpack:///./src/helpers/Request.ts","webpack:///./src/helpers/templates.ts","webpack:///./src/helpers/filters/filter-utils.ts","webpack:///./src/helpers/dom/Select.ts","webpack:///./src/helpers/filters/ConditionalFlowFilter.ts","webpack:///./src/polyfills/ccsdk.polyfill.ts","webpack:///./src/CCSDKEntry.ts","webpack:///./src/Survey.ts","webpack:///./src/SurveyHandler.ts","webpack:///./src/css/main.scss?8357","webpack:///./src/css/main.scss","webpack:///./node_modules/rtl-css-loader/lib/css-base.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./src/helpers/filters/ConditionalTextFilter.ts","webpack:///./src/helpers/languagesConfig.ts","webpack:///./src/helpers/dom/DomSurvey.ts","webpack:///./src/helpers/dom/Theme.ts","webpack:///./src/helpers/dom/Slider.ts","webpack:///./src/TriggerManager.ts","webpack:///./src/Triggers.ts","webpack:///./src/helpers/TriggerUtils.ts","webpack:///./src/helpers/tracking.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","templates_1","DomUtilities","selector","document","querySelectorAll","appendStyle","css","head","getElementsByTagName","style","createElement","type","styleSheet","cssText","appendChild","createTextNode","remove","el","parentNode","removeChild","removeAll","elements","Array","forEach","removeClassAll","className","_this","this","removeClass","addClassAll","addClass","classList","replace","RegExp","split","join","add","toggleClass","contains","hasClass","test","ready","fn","attachEvent","readyState","addEventListener","getParents","parentSelector","undefined","parents","push","listener","evt","sel","handler","internalHandler","event","target","Element","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","indexOf","initListener","id","cb","checkIfListenerExists","ar","_i","ar_1","length","on","off","removeEventListener","removeListener","removeAllListeners","ar_2","trigger","eventName","data","CustomEvent","detail","createEvent","initCustomEvent","dispatchEvent","removeTrigger","shadeBlendConvert","from","to","sbcRip","RGB","slice","parseFloat","parseInt","Math","round","h","b","f","toString","hexToRGB","hex","alpha","substr","map","g","arrayContains","needle","findNaN","index","item","generateSelectOptions","arr","translatedArr","isArray","res","translatedOpt","generateLanguageSelectOptions","text","checkOptionContainsImage","opt","generateRadioImageOptions","optHtml","templates","option_radio_image","generateRadioIgnoreImageOptions","option_radio","generateRadioOptions","generateCheckboxImageOptions","option_checkbox_image","generateCheckboxIgnoreImageOptions","option_checkbox","generateCheckboxOptions","Constants","CCTriggerPageStartTime","CCTriggerPageElapsedTime","CCTriggerSiteStartTime","CCTriggerSiteElapsedTime","CCTriggerSitePageViewCount","CCTriggerIndividualPageViewCount","SURVEY_IMPRESSION_EVENT","SURVEY_START_EVENT","SURVEY_DATA_EVENT","SURVEY_END_EVENT","SURVEY_CLOSE_EVENT","SURVEY_QUESTION_EVENT","SURVEY_ANSWER_EVENT","SURVEY_CLICK_EVENT","GRANT_TYPE","AUTHORIZATION","AUTHORIZATION_BEARER","SURVEY_CLIENT","Cookie","set","days","path","date","Date","setTime","getTime","expires","toUTCString","dir","cookie","nameEQ","ca","charAt","substring","delete","getParameterByName","url","window","location","href","results","exec","decodeURIComponent","SurveyManager","initializeSurvey","surveyId","surveyInstances","setupSurvey","console","error","addSurvey","ccsdkDebug","log","surveyQueue","processQueueInterval","setInterval","processQueueIntervalCB","removeSurvey","survey","splice","clearInterval","globalSurveyRunning","pop","setSurveyRunning","globalSurveyStartTime","unsetSurveyRunning","prefillQueue","LanguageTextFilter","translateQuestionText","surveyHandler","question","ccsdk","config","language","translated","qText","translateMessages","surveyData","translateDisplayLegend","displayLegend","translateMultiSelect","multiSelect","translatedOptions_1","x","translateMultiSelectOption","option","effectiveMultiselect","Config","API_URL","SURVEY_BY_TOKEN","SURVEY_PARTIAL_RESPONSE","CDN_URL","CDN_ASSET_URL","POST_LOGIN_TOKEN","GET_SURVEY_THROTTLE_LOGIC","POST_THROTTLING","POST_THROTTLING_ADD_ENTRIES","POST_SURVEY_FINAL","GET_CAMPAIGN","makeRequest","method","postParams","headers","successcb","errorcb","xhr","XMLHttpRequest","open","onload","status","response","match","JSON","parse","statusText","onerror","keys","setRequestHeader","send","RequestHelper","getWithHeaders","postWithHeaders","stringify","post","QuestionSurvey","QuestionStart","QuestionSingleline","QuestionNumber","QuestionMultiline","QuestionCheckbox","QuestionRadio","QuestionRadioImage","QuestionScale","QuestionCSATAgreement5","QuestionCSATSatisfaction5","QuestionNPS","QuestionSelect","QuestionMultiSelect","QuestionSmile","QuestionSmileInverted","QuestionStar","QuestionSlider","OptionRadioImage","OptionRadio","OptionCheckbox","OptionCheckboxImage","ThankYou","question_survey","question_start","question_text","question_number","question_scale","question_csat_agreement_5","question_csat_satisfaction_5","question_nps","question_multi_line_text","question_multi_select","question_radio","question_radio_image","question_checkbox","question_select","question_smile_5","question_date","question_smile_5_inverted","question_star_5","question_slider","thankyou","language_selector","isNumberCheck","filterQuestion","answerCheck","isAnd","groupBy","toUpperCase","isOr","doesSatisfy","answer","getAnswerForQuestionId","questionId","toLowerCase","textInput","iFoundAll","getQuestionById","questionAnswerText","_a","aAnswer","displayType","numberInput","number","questionCompare","a","sequence","checkLanguage","fOption","DomUtilities_1","LanguageTextFilter_1","Select","qId","listeners","init","util","$body","$html","select","parent","getAttribute","self","classes","template","options","innerHTML","insertAdjacentHTML","setupListeners","ref2","e","selectOptions","selectWrapper","selectionTrigger","selectedOptionText","textContent","selectedValueText","addOrRemoveFromList","setAttribute","ref","ccSelect","stopPropagation","destroyListeners","setValue","selectTrigger","translatedSelection","selectOption","removeOption","csv","domOptions","allOptions_1","listAsString","list","itemIndex","filter_utils_1","ConditionalFlowFilter","aAddedCount","aRemovedCount","getConditionalSurveyQuestions","aQuestion","conditionalFilter","iSatisfied","iFailed","_b","_c","filterquestions","aFilterByQuestion","surveyQuestions","getSurveyQuestions","removeAnswer","sort","toStr","isCallable","maxSafeInteger","toLength","pow","len","Number","isNaN","isFinite","floor","abs","toInteger","min","max","arrayLike","items","TypeError","T","mapFn","arguments","kValue","A","k","params","bubbles","cancelable","Event","find","predicate","thisArg","configurable","writable","Cookie_1","SurveyManager_1","Survey_1","localCCSDK","destroy","hide","show","prefill","prefillByTag","prefillByNote","isMobile","innerWidth","CCSDK","queue","q","args","functionName","apply","queue_1","eventCCReady","initEvent","surveyToken","trim","isActive","Survey","tracking","trackEvent","token","action","directPrefills","byTagPrefills","byNotePrefills","dom","callback","restArgs","questionTag","questionNote","SurveyHandler_1","DomSurvey_1","Constants_1","TriggerManager_1","Triggers_1","Request_1","Config_1","tracking_1","requester","isThrottled","surveyDone","surveyStatus","surveyRunning","thorttlingLogic","MatomoTracker","textDirection","triggers","Triggers","TriggerManager","SurveyHandler","brandColor","setHtmlTextDirection","setDisplayOptions","setTimeout","username","password","cssSelector","setConditionalTriggers","getSurveyThrottlingLogic","getThrottleUrl","loginData","access_token","checkThrottling","inputIds","uniqueIDQuestionIdOrTag","logics","filter","postThrottleUrl","throttleResponse","addThrottlingEntries","isOpen","addThrottleUrl","user","mobile","emailId","customId","surveySentDate","surveyOpenDate","channel","isOpened","debug","initSurvey","ccSDKElement","querySelector","ccSDKDir","direction","surveyDisplay","position","welcomePopupAnimation","surveyPosition","search","getSurveyData","fetchQuestions","skipWelcomePage","hideLoader","questions","err","preFill","event_1","initSurveyQuestions","displayWelcomeQuestion","DomSurvey","setTheme","keepAlive","onImpressionEvent","startSurvey","setCoolDownPeriod","surveyStartTime","acceptAnswers","attachSurvey","initSurveyDom","onSurveyStartEvent","restOfArgs","prefillObject","fillPrefillDirect","fillPrefill","fillPrefillByNote","filterQuestions","enableClickTrigger","count","enablePageCountTrigger","count2","enableSiteCountTrigger","enablePageTimeTrigger","enableSiteTimeTrigger","enablePopUpByURLPatternTrigger","enablePopUpByNotURLPatternTrigger","enablePopUpByUTMPatternTrigger","enableScrollPixelsTrigger","ConditionalTextFilter_1","Select_1","ConditionalFlowFilter_1","languagesConfig_1","answers","surveyAnswers","_prefillsPartiallyPosted","retryPrefills","surveyPopupAnimation","domListeners","questionsToDisplay","prefillQuestions","conditionalQuestions","prefillResponses","prefillWithTags","prefillWithNote","prefillDirect","languageConfig","LanguagesConfig","displayThankYouCb","finalPost","thankyouHtml","thankyouText","startText","startButtonText","branding","replaceInQuestionsContainer","thankyouContainer","onSurveyEndEvent","destroySurveyCb","acceptAnswersCb","postPartialAnswer","domSelectElements","setQIndex","randomNumber","String","random","surveyUrl","setupPrefill","setupSurveyContainer","cleanSurvey","displayQuestions","displayThankYou","destroySurvey","fillPrefillQuestionObject","surveyHtml","appendInBody","displayQuestionSelector","warningWelcomeText","onSurveyImpressionEvent","welcomeHtml","welcomeText","getElementById","showWelcomeContainer","welcomeQuestionDisplayTime","welcomeInterval","checkWelcomeQuestionDisplay","campaign","coolDownPeriod","now","killWelcomeQuestion","cancelKillWelcomeQuestion","displayLanguageSelector","options1","languageKeys","languageTexts","cTemplate1","concat","getLanguageText","$questionContainer","firstChild","languageSelect","submitBtn","selectRes","removePrevListener","selectOpt","languageSelect2","languageQuestion","questionTags","selectLang","fillPrefillQuestion","isRTL","loadFirstQuestion","getElementsByClassName","checkConditionals","compiledTemplate","compileTemplate","isPrefillQuestion","getPrefillResponseById","updatePrefillResponseById","prefillObj","postRecentPrefills","valueType","responseStored","questionText","getAnswerTypeFromDisplayType","postPrefillPartialAnswer","fullSubmission","partialResponseId","surveyPartialUrl","resp","postPrefillPartialAnswerWithRetry","complete","onSurveyAnswerEvent","responses","postSurveyFinalUrl","lastAnswer","answersAll","timeAtPost","finalData","locationId","nps","surveyClient","responseDuration","responseDateTime","_lastAnswer","questionTemplate","optMin","optMax","ConditionalTextFilter","filterText","isRequired","middleBlock","endBlock","dimension","tileColor","attributes","scaleColor","presentationMode","tileColorDark","startRange","endRange","endRangeLabel_1","startRangeLabel_1","midRangeLabel","anchorMetricName","customMetric","customMetrics","metricName","optionCategories","label","optionsLength","middleRange","categoryRange","endRange_1","displayLegend_1","mobileImageUrl","imageVisibility010","imageVisibility110","scaleVisibility","scaleImageContainer","divider","legendDimension","optionStyle","initial_1","cmwidthstart","cmwidthend","leftWidth","iterator","startRange_1","initial_2","endRange_2","color","initial_3","optionLeftExtraClass","optionMidExtraClass","optionRightExtraClass","optionMaxWidth","validationHint","characterLimit","acTemplate","multiSelect1","reverse","displayStyle","options2_1","options2_2","options3","acTemplate1","options2","invertedMultiSelect","acTemplate2","invertedMultiSelect_1","startRangeLabel","endRangeLabel","displayLegend2","startRangeLabel1","endRangeLabel1","displayLegend3","isRetired","isPrefillTags","isPrefillNote","isPrefillDirect","fillPrefillWithTags","fillPrefillWithNote","tag","innerHeight","note","apiFill","staffFill","isQuestionFilled","surveyContainer","getSurveyContainer","welcomeContainer","getWelcomeContainer","content","result","mediaQuery","alreadyImportedModules","memo","isOldIE","getElement","singletonCounter","addStylesToDom","styles","domStyle","stylesInDom","refs","j","parts","addStyle","listToStyles","newStyles","base","part","media","sourceMap","insertStyleElement","insertInto","Error","lastStyleElementInsertedAtTop","stylesInsertedAtTop","insertAt","nextSibling","insertBefore","removeStyleElement","idx","addAttrs","attrs","obj","update","transform","singleton","styleIndex","createStyleElement","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","btoa","rel","link","createLinkElement","fixUrls","unescape","encodeURIComponent","oldSrc","newObj","DEBUG","mayRemove","newList","textStore","replaceText","replacement","Boolean","cssNode","childNodes","baseUrl","protocol","host","currentDir","pathname","fullMatch","origUrl","newUrl","unquotedOrigUrl","$1","conditionalText","conditionalText_1","setName","leadingDisplayTexts","filterByQuestion","groupTitle","code","locale","languages","_lang","languageObj","allLanguages","allLanguage","__assign","assign","trackSelects","trackRadios","currentQuestionListeners","qIndex","qResponse","time","theme","Theme_1","Theme","getQindex","$startBtn","onSurveyClickEvent","showLoader","nextQue","nextQuestion","prevQue","prevQuestion","closeSurvey","onSurveyCloseEvent","bodyElement","minSurvey","minimizeSurvey","$popupContainer2","$popupContainer","resumeText","resumeButtonText","updateProgress","currentQuestionId","width","loadQuestionSpecifics","leftIcon","onSurveyQuestionEvent","span","validationSpan","validationRegex","regex","submitQuestion","nextQ","rightIcon","nextIcon","$loader","html","appendInQuestionsContainer","startContainer","showLanguageSelector","qType","setupListenersQuestionScale","setupListenersQuestionNPS","setupListenersQuestionMultiline","setupListenersQuestionSelect","setupListenersQuestionRadio","setupListenersQuestionRadioImage","setupListenersQuestionCheckbox","setupListenersQuestionStar","setupListenersQuestionSmile","setupListenersQuestionCsat","setupListenersQuestionSlider","setupListenersQuestionSingleline","setupListenersQuestionNumber","setupListenersForDate","selectedRating","selectedRating1","previousValue","previousSelection","allOptions","rating","previousValues_1","previousValues","checked","child","previousSibling","multilineRes","singlelineRes","model","dateQuestion","children","month","year","numberRes","sliderRes","sliderInput","Slider_1","Slider","inputRange","rangeTip","speed","clearTo","updateRangeTip","display","clearTimeout","timeout","animateHandler","currValue","maxValue","requestAnimationFrame","sitePageViewCount","lastIndexOf","individualPageViewCount","click","onscroll","doc","documentElement","top","pageXOffset","scrollLeft","clientLeft","pageYOffset","scrollTop","clientTop","ccsdkTopOffset","processScrollTriggers","onclick","triggerInstances","triggerInterval","processIntervalTriggers","processConditionalTriggers","scrollNow","pageCountTrigger","siteCountTrigger","pageTimeTrigger","siteTimeTrigger","urlParamTrigger","notUrlParamTrigger","utmParamTrigger","scrollPixelsTrigger","pageCountTriggerEnabled","siteCountTriggerEnabled","pageTimeTriggerEnabled","siteTimeTriggerEnabled","urlParamTriggerEnabled","notUrlParamTriggerEnabled","utmParamTriggerEnabled","scrollPixelsTriggerEnabled","conditionalTriggers","minPageCount","TriggerPopUpByPageCount","minSiteCount","minPageTime","TriggerPopUpByTimeSpentOnPage","minSiteTime","TriggerPopUpByTimeSpentOnSite","urlPattern","inUrl","TriggerPopUpByURLPattern","notinUrl","TriggerPopUpByNotURLPattern","utm","TriggerPopUpByUTMParameter","minScrollPixels","grepURL","onExitDetect","waitSeconds","scrollPercent","grepInvertURL","conditionalTrigger","isEnabled","pageStartTime","pageTime","TriggerUtils_1","TriggerUtils","checkTimeCondition","checkScroll","checkInUrl","processNonConditionalTriggers","TriggerPopUpByScrollPixels","pageCount","NaN","checkPageCount","siteStartTime","siteTime","TriggerPopUpByInactivity","utmP","utmVal","payload","successCb","errorCb"],"mappings":"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","file":"cc.en.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n","import { templates } from \"../templates\";\r\nimport { Config } from \"../../Config\";\r\n\r\nclass DomUtilities {\r\n  sbcRip: any;\r\n\r\n  constructor() {\r\n    // HTMLElement.prototype.matches = HTMLElement.prototype.matches ||\r\n    // HTMLElement.prototype.matchesSelector ||\r\n    // HTMLElement.prototype.webkitMatchesSelector ||\r\n    // HTMLElement.prototype.mozMatchesSelector ||\r\n    // HTMLElement.prototype.msMatchesSelector ||\r\n    // HTMLElement.prototype.oMatchesSelector;\r\n  }\r\n\r\n  get(selector: string) {\r\n    return document.querySelectorAll(selector);\r\n  }\r\n\r\n  appendStyle(css: string): void {\r\n    let head: any = document.head || document.getElementsByTagName(\"head\")[0];\r\n    let style: any = document.createElement(\"style\");\r\n    style.type = \"text/css\";\r\n    if (style.styleSheet) {\r\n      style.styleSheet.cssText = css;\r\n    } else {\r\n      style.appendChild(document.createTextNode(css));\r\n    }\r\n    head.appendChild(style);\r\n  }\r\n\r\n  remove(el: any) {\r\n    el.parentNode.removeChild(el);\r\n  }\r\n\r\n  removeAll(elements: any): void {\r\n    Array.prototype.forEach.call(elements, (el, i) => {\r\n      el.parentNode.removeChild(el);\r\n    });\r\n  }\r\n\r\n  css(elements: any, property: string, value: any) {\r\n    Array.prototype.forEach.call(elements, (el, i) => {\r\n      el.style[property] = value;\r\n    });\r\n  }\r\n\r\n  removeClassAll(elements: any, className: string): void {\r\n    Array.prototype.forEach.call(elements, (el, i) => {\r\n      this.removeClass(el, className);\r\n    });\r\n  }\r\n\r\n  addClassAll(elements: any, className: string): void {\r\n    Array.prototype.forEach.call(elements, (el, i) => {\r\n      this.addClass(el, className);\r\n    });\r\n  }\r\n\r\n  removeClass(el: any, className: string): void {\r\n    // console.log(el);\r\n    if (!el) {\r\n      return;\r\n    }\r\n    if (el.classList) el.classList.remove(className);\r\n    else\r\n      el.className = el.className.replace(\r\n        new RegExp(\r\n          \"(^|\\\\b)\" + className.split(\" \").join(\"|\") + \"(\\\\b|$)\",\r\n          \"gi\"\r\n        ),\r\n        \" \"\r\n      );\r\n  }\r\n  addClass(el: any, className: string) {\r\n    if (!el) {\r\n      return;\r\n    }\r\n    if (el.classList) el.classList.add(className);\r\n    else el.className += \" \" + className;\r\n  }\r\n  toggleClass(el: any, className: string): void {\r\n    if (el.classList) {\r\n      if (el.classList.contains(className)) el.classList.remove(className);\r\n      else el.classList.add(className);\r\n    }\r\n  }\r\n  hasClass(el: any, className: string) {\r\n    if (el.classList) return el.classList.contains(className);\r\n    else\r\n      return new RegExp(\"(^| )\" + className + \"( |$)\", \"gi\").test(el.className);\r\n  }\r\n  ready(fn: any): void {\r\n    if (\r\n      (<any>document).attachEvent\r\n        ? document.readyState === \"complete\"\r\n        : document.readyState !== \"loading\"\r\n    ) {\r\n      fn();\r\n    } else {\r\n      document.addEventListener(\"DOMContentLoaded\", fn);\r\n    }\r\n  }\r\n\r\n  getParents(el: any, parentSelector: any): any {\r\n    // If no parentSelector defined will bubble up all the way to *document*\r\n    if (parentSelector === undefined) {\r\n      parentSelector = document;\r\n    }\r\n\r\n    var parents = [];\r\n    var p = el.parentNode;\r\n\r\n    while (p !== parentSelector) {\r\n      var o = p;\r\n      parents.push(o);\r\n      p = o.parentNode;\r\n    }\r\n    parents.push(parentSelector); // Push that parentSelector you wanted to stop at\r\n\r\n    return parents;\r\n  }\r\n\r\n  listener(el: any, evt: any, sel: any, handler: any): any {\r\n    let selectorMatches = function (el, selector) {\r\n      var p = Element.prototype;\r\n      var f =\r\n        p.matches ||\r\n        p.webkitMatchesSelector ||\r\n        (<any>p).mozMatchesSelector ||\r\n        (<any>p).msMatchesSelector ||\r\n        function (s) {\r\n          return [].indexOf.call(document.querySelectorAll(s), this) !== -1;\r\n        };\r\n      return f.call(el, selector);\r\n    };\r\n    let internalHandler = function (event) {\r\n      var t = event.target;\r\n      while (t && t !== this) {\r\n        if (selectorMatches(t, sel)) {\r\n          handler.call(t, event);\r\n        }\r\n        t = t.parentNode;\r\n      }\r\n    };\r\n    el.addEventListener(evt, internalHandler);\r\n    return internalHandler;\r\n  }\r\n\r\n  initListener(type: string, id: string, cb: any) {\r\n    let ref: any = {\r\n      id: id,\r\n      type: type,\r\n      cb: cb,\r\n      internalHandler: undefined,\r\n    };\r\n    return ref;\r\n  }\r\n\r\n  checkIfListenerExists(id: string, ar: any): boolean {\r\n    for (let listener of ar) {\r\n      if (listener.id == id) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  on(evt: any, el: any, handler: any) {\r\n    el.addEventListener(evt, handler);\r\n  }\r\n  off(evt: any, el: any, handler: any) {\r\n    el.removeEventListener(evt, handler);\r\n  }\r\n  removeListener(el: any, evt: any, handler: any) {\r\n    el.removeEventListener(evt, handler);\r\n  }\r\n  removeAllListeners(ar: any): boolean {\r\n    for (let listener of ar) {\r\n      this.removeListener(\r\n        document.querySelectorAll(\"body\")[0],\r\n        listener.type,\r\n        listener.internalHandler\r\n      );\r\n    }\r\n    return true;\r\n  }\r\n\r\n  trigger(el: any, eventName: string, data: Object) {\r\n    if (typeof CustomEvent === \"function\") {\r\n      var event = <any>new CustomEvent(eventName, { detail: data });\r\n    } else {\r\n      var event = <any>document.createEvent(\"CustomEvent\");\r\n      event.initCustomEvent(eventName, true, true, data);\r\n    }\r\n\r\n    el.dispatchEvent(event);\r\n  }\r\n\r\n  removeTrigger(el: any, eventName: string) {\r\n    el.removeEventListener(eventName);\r\n  }\r\n\r\n  shadeBlendConvert(p: number, from: any, to: string): string {\r\n    if (\r\n      typeof p != \"number\" ||\r\n      p < -1 ||\r\n      p > 1 ||\r\n      typeof from != \"string\" ||\r\n      (from[0] != \"r\" && from[0] != \"#\") ||\r\n      (typeof to != \"string\" && typeof to != \"undefined\")\r\n    )\r\n      return null; //ErrorCheck\r\n    if (!this.sbcRip)\r\n      this.sbcRip = function (d) {\r\n        var l = d.length,\r\n          RGB = new Object();\r\n        if (l > 9) {\r\n          d = d.split(\",\");\r\n          if (d.length < 3 || d.length > 4) return null; //ErrorCheck\r\n          (RGB[0] = i(d[0].slice(4))),\r\n            (RGB[1] = i(d[1])),\r\n            (RGB[2] = i(d[2])),\r\n            (RGB[3] = d[3] ? parseFloat(d[3]) : -1);\r\n        } else {\r\n          if (l == 8 || l == 6 || l < 4) return null; //ErrorCheck\r\n          if (l < 6)\r\n            d =\r\n              \"#\" +\r\n              d[1] +\r\n              d[1] +\r\n              d[2] +\r\n              d[2] +\r\n              d[3] +\r\n              d[3] +\r\n              (l > 4 ? d[4] + \"\" + d[4] : \"\"); //3 digit\r\n          (d = i(d.slice(1), 16)),\r\n            (RGB[0] = (d >> 16) & 255),\r\n            (RGB[1] = (d >> 8) & 255),\r\n            (RGB[2] = d & 255),\r\n            (RGB[3] =\r\n              l == 9 || l == 5\r\n                ? r((((d >> 24) & 255) / 255) * 10000) / 10000\r\n                : -1);\r\n        }\r\n        return RGB;\r\n      };\r\n    var i = parseInt,\r\n      r = Math.round,\r\n      h = from.length > 9,\r\n      h =\r\n        typeof to == \"string\"\r\n          ? to.length > 9\r\n            ? true\r\n            : to == \"c\"\r\n            ? !h\r\n            : false\r\n          : h,\r\n      b = p < 0,\r\n      p = b ? p * -1 : p,\r\n      to = to && to != \"c\" ? to : b ? \"#000000\" : \"#FFFFFF\",\r\n      f = this.sbcRip(from),\r\n      t = this.sbcRip(to);\r\n    if (!f || !t) return null; //ErrorCheck\r\n    if (h)\r\n      return (\r\n        \"rgb(\" +\r\n        r((t[0] - f[0]) * p + f[0]) +\r\n        \",\" +\r\n        r((t[1] - f[1]) * p + f[1]) +\r\n        \",\" +\r\n        r((t[2] - f[2]) * p + f[2]) +\r\n        (f[3] < 0 && t[3] < 0\r\n          ? \")\"\r\n          : \",\" +\r\n            (f[3] > -1 && t[3] > -1\r\n              ? r(((t[3] - f[3]) * p + f[3]) * 10000) / 10000\r\n              : t[3] < 0\r\n              ? f[3]\r\n              : t[3]) +\r\n            \")\")\r\n      );\r\n    else\r\n      return (\r\n        \"#\" +\r\n        (\r\n          0x100000000 +\r\n          (f[3] > -1 && t[3] > -1\r\n            ? r(((t[3] - f[3]) * p + f[3]) * 255)\r\n            : t[3] > -1\r\n            ? r(t[3] * 255)\r\n            : f[3] > -1\r\n            ? r(f[3] * 255)\r\n            : 255) *\r\n            0x1000000 +\r\n          r((t[0] - f[0]) * p + f[0]) * 0x10000 +\r\n          r((t[1] - f[1]) * p + f[1]) * 0x100 +\r\n          r((t[2] - f[2]) * p + f[2])\r\n        )\r\n          .toString(16)\r\n          .slice(f[3] > -1 || t[3] > -1 ? 1 : 3)\r\n      );\r\n  }\r\n\r\n  hexToRGB(hex: string, alpha: any): string {\r\n    if (!hex || [4, 7].indexOf(hex.length) === -1) {\r\n      return; // throw new Error('Bad Hex');\r\n    }\r\n\r\n    hex = hex.substr(1);\r\n    // if shortcuts (#F00) -> set to normal (#FF0000)\r\n    if (hex.length === 3) {\r\n      hex = hex\r\n        .split(\"\")\r\n        .map(function (el) {\r\n          return el + el + \"\";\r\n        })\r\n        .join(\"\");\r\n    }\r\n\r\n    var r = parseInt(hex.slice(0, 2), 16),\r\n      g = parseInt(hex.slice(2, 4), 16),\r\n      b = parseInt(hex.slice(4, 6), 16);\r\n\r\n    if (alpha) {\r\n      return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha + \")\";\r\n    } else {\r\n      return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\r\n    }\r\n  }\r\n\r\n  arrayContains(needle) {\r\n    // Per spec, the way to identify NaN is that it is not equal to itself\r\n    var findNaN = needle !== needle;\r\n    var indexOf;\r\n\r\n    if (!findNaN && typeof Array.prototype.indexOf === \"function\") {\r\n      indexOf = Array.prototype.indexOf;\r\n    } else {\r\n      indexOf = function (needle) {\r\n        var i = -1,\r\n          index = -1;\r\n\r\n        for (i = 0; i < this.length; i++) {\r\n          var item = this[i];\r\n\r\n          if ((findNaN && item !== item) || item === needle) {\r\n            index = i;\r\n            break;\r\n          }\r\n        }\r\n\r\n        return index;\r\n      };\r\n    }\r\n\r\n    return indexOf.call(this, needle) > -1;\r\n  }\r\n\r\n  generateSelectOptions(arr: string[], translatedArr: string[]) {\r\n    if (Array.isArray(arr)) {\r\n      let i: number = 0;\r\n      let res: string = \"\";\r\n      for (i = 0; i < arr.length; i++) {\r\n        let translatedOpt = (translatedArr[i] || arr[i]).split(\";\");\r\n        let arrOpt = arr[i].split(\";\");\r\n        res +=\r\n          '<option value=\"' + arrOpt[0] + '\">' + translatedOpt[0] + \"</option>\";\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n  generateLanguageSelectOptions(arr: any, text: any) {\r\n    if (Array.isArray(arr)) {\r\n      let i: number = 0;\r\n      let res: string = \"\";\r\n      for (i = 0; i < arr.length; i++) {\r\n        if (arr[i] == \"default\") {\r\n          res += '<option value=\"' + arr[i] + '\">English (Default)</option>';\r\n        } else {\r\n          res += '<option value=\"' + arr[i] + '\">' + text[i] + \"</option>\";\r\n        }\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n  checkOptionContainsImage(arr: any) {\r\n    if (Array.isArray(arr)) {\r\n      let i: number = 0;\r\n      let res: boolean = true;\r\n      for (i = 0; i < arr.length; i++) {\r\n        let opt: any = arr[i];\r\n        res = res && opt.indexOf(\";\") !== -1 && opt.indexOf(\".\") !== -1;\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n\r\n  generateRadioImageOptions(\r\n    arr: string[],\r\n    translatedArr: string[],\r\n    id: string\r\n  ) {\r\n    if (Array.isArray(arr)) {\r\n      let i: number = 0;\r\n      let res: string = \"\";\r\n      for (i = 0; i < arr.length; i++) {\r\n        let optHtml: string = templates.option_radio_image;\r\n        let opt: any = arr[i].split(\";\");\r\n        let translatedOpt = translatedArr[i].split(\";\");\r\n        //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n        //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n        optHtml = optHtml.replace(\r\n          /{{image}}/g,\r\n          \"https://cx.getcloudcherry.com/microsurvey-assets/\" + opt[1]\r\n        );\r\n        optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\r\n        optHtml = optHtml.replace(/{{label}}/g, translatedOpt[0]);\r\n        optHtml = optHtml.replace(\r\n          /{{labelFor}}/g,\r\n          translatedOpt[0].replace(/\\s+/g, \"-\")\r\n        );\r\n        optHtml = optHtml.replace(/{{value}}/g, opt[0]);\r\n        res += optHtml;\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n  generateRadioIgnoreImageOptions(\r\n    arr: string[],\r\n    translatedArr: string[],\r\n    id: string\r\n  ) {\r\n    if (Array.isArray(arr)) {\r\n      let i: number = 0;\r\n      let res: string = \"\";\r\n      for (i = 0; i < arr.length; i++) {\r\n        let optHtml: string = templates.option_radio;\r\n        let opt: any = arr[i].split(\";\");\r\n        let translatedOpt = translatedArr[i].split(\";\");\r\n        //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n        //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n        optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\r\n        optHtml = optHtml.replace(/{{label}}/g, translatedOpt[0]);\r\n        optHtml = optHtml.replace(\r\n          /{{labelFor}}/g,\r\n          translatedOpt[0].replace(/\\s+/g, \"-\")\r\n        );\r\n        optHtml = optHtml.replace(/{{value}}/g, opt[0]);\r\n        res += optHtml;\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n\r\n  generateRadioOptions(arr: string, translatedArr: string[], id: string) {\r\n    if (Array.isArray(arr)) {\r\n      let i: number = 0;\r\n      let res: string = \"\";\r\n      for (i = 0; i < arr.length; i++) {\r\n        let optHtml: string = templates.option_radio;\r\n        let opt: any = arr[i].split(\";\");\r\n        // normal radio\r\n        let translatedOpt = translatedArr[i].split(\";\");\r\n        optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\r\n        optHtml = optHtml.replace(/{{label}}/g, translatedOpt[0]);\r\n        optHtml = optHtml.replace(\r\n          /{{labelFor}}/g,\r\n          translatedOpt[0].replace(/\\s+/g, \"-\")\r\n        );\r\n        optHtml = optHtml.replace(/{{value}}/g, opt[0]);\r\n        res += optHtml;\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n  generateCheckboxImageOptions(\r\n    arr: string[],\r\n    translatedArr: string[],\r\n    id: string\r\n  ) {\r\n    if (Array.isArray(arr)) {\r\n      let i: number = 0;\r\n      let res: string = \"\";\r\n      for (i = 0; i < arr.length; i++) {\r\n        let optHtml: string = templates.option_checkbox_image;\r\n        let opt: any = arr[i].split(\";\");\r\n        let translatedOpt = translatedArr[i].split(\";\");\r\n        //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n        //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n        optHtml = optHtml.replace(\r\n          /{{image}}/g,\r\n          \"https://cx.getcloudcherry.com/microsurvey-assets/\" + opt[1]\r\n        );\r\n        optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\r\n        optHtml = optHtml.replace(/{{label}}/g, translatedOpt[0]);\r\n        optHtml = optHtml.replace(\r\n          /{{labelFor}}/g,\r\n          translatedOpt[0].replace(/\\s+/g, \"-\")\r\n        );\r\n        optHtml = optHtml.replace(/{{value}}/g, opt[0]);\r\n        res += optHtml;\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n\r\n  generateCheckboxIgnoreImageOptions(\r\n    arr: string[],\r\n    translatedArr: string[],\r\n    id: string\r\n  ) {\r\n    if (Array.isArray(arr)) {\r\n      let i: number = 0;\r\n      let res: string = \"\";\r\n      for (i = 0; i < arr.length; i++) {\r\n        let optHtml: string = templates.option_checkbox;\r\n        let opt: any = arr[i].split(\";\");\r\n        let translatedOpt = translatedArr[i].split(\";\");\r\n\r\n        //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n        //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n        optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\r\n        optHtml = optHtml.replace(/{{label}}/g, translatedOpt[0]);\r\n        optHtml = optHtml.replace(\r\n          /{{labelFor}}/g,\r\n          translatedOpt[0].replace(/\\s+/g, \"-\")\r\n        );\r\n        optHtml = optHtml.replace(/{{value}}/g, opt[0]);\r\n        res += optHtml;\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n\r\n  generateCheckboxOptions(arr: string[], translatedArr: string[], id: string) {\r\n    if (Array.isArray(arr)) {\r\n      let i: number = 0;\r\n      let res: string = \"\";\r\n      for (i = 0; i < arr.length; i++) {\r\n        let optHtml: string = templates.option_checkbox;\r\n        let opt: any = arr[i].split(\";\");\r\n        let translatedOpt = translatedArr[i].split(\";\");\r\n        optHtml = optHtml.replace(/{{label}}/g, translatedOpt[0]);\r\n        optHtml = optHtml.replace(\r\n          /{{labelFor}}/g,\r\n          translatedOpt[0].replace(/\\s+/g, \"-\")\r\n        );\r\n        optHtml = optHtml.replace(/{{value}}/g, opt[0]);\r\n\r\n        res += optHtml;\r\n      }\r\n      // console.log( res );\r\n      return res;\r\n    }\r\n  }\r\n}\r\n\r\n//add Math.round\r\n\r\nexport { DomUtilities };\r\n","class Constants {\r\n  static CCTriggerPageStartTime = \"cc-trigger-page-start-time\";\r\n  static CCTriggerPageElapsedTime = \"cc-trigger-page-elapsed-time\";\r\n  static CCTriggerSiteStartTime = \"cc-trigger-site-start-time\";\r\n  static CCTriggerSiteElapsedTime = \"cc-trigger-site-elapsed-time\";\r\n  static CCTriggerSitePageViewCount = \"cc-trigger-site-page-count\";\r\n  static CCTriggerIndividualPageViewCount = \"cc-trigger-individual-page-count\";\r\n  static SURVEY_IMPRESSION_EVENT = \"onImpression\";\r\n  static SURVEY_START_EVENT = \"onStart\";\r\n  static SURVEY_DATA_EVENT = \"onData\";\r\n  static SURVEY_END_EVENT = \"onEnd\";\r\n  static SURVEY_CLOSE_EVENT = \"onClose\";\r\n  static SURVEY_QUESTION_EVENT = \"onQuestion\";\r\n  static SURVEY_ANSWER_EVENT = \"onAnswer\";\r\n  static SURVEY_CLICK_EVENT = \"onClick\";\r\n  static GRANT_TYPE = \"password\";\r\n  static AUTHORIZATION = \"Authorization\";\r\n  static AUTHORIZATION_BEARER = \"Bearer\";\r\n  static SURVEY_CLIENT = \"JS-MicroWeb\";\r\n}\r\n\r\nexport { Constants };","class Cookie {\r\n    /**\r\n     * Set/Overwrite a cookie value\r\n     *\r\n     * @param name\r\n     * @param value\r\n     * @param days      OPTIONAL Days till this cookie will stay valid. Default is current session\r\n     * @param path      OPTIONAL domain root will be used by default\r\n     */\r\n    static set(name : any, value : any, days : any, path : any) {\r\n      if (days) {\r\n          var date = new Date();\r\n              date.setTime(date.getTime()+(days*24*60*60*1000));\r\n          var expires = \"; expires=\"+date.toUTCString();\r\n      } else var expires = \"\";\r\n\r\n      var dir = path || '/';\r\n      document.cookie = name+\"=\"+value+expires+\"; path=\"+dir;\r\n  }\r\n\r\n  /**\r\n   * Retrieve a cookie value\r\n   *\r\n   * @param name\r\n   * @return String|null\r\n   */\r\n  static get(name) {\r\n      var nameEQ = name + \"=\";\r\n      var ca = document.cookie.split(';');\r\n      for(var i=0;i < ca.length;i++) {\r\n          var c = ca[i];\r\n          while (c.charAt(0)==' ') c = c.substring(1,c.length);\r\n          if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);\r\n      }\r\n      return null;\r\n  }\r\n\r\n  /**\r\n   * Remove a cookie\r\n   *\r\n   * @param name\r\n   */\r\n  static delete(name) {\r\n    Cookie.set(name,\"\",-1, undefined);\r\n  }\r\n\r\n  static getParameterByName(name : string, url : any) {\r\n    if (!url) url = window.location.href;\r\n    name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\r\n    var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\r\n        results = regex.exec(url);\r\n    if (!results) return null;\r\n    if (!results[2]) return '';\r\n    return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\r\n  }\r\n}\r\n\r\nexport { Cookie };\r\n","\r\n//Survey Manager manages and queues survey.\r\n\r\nclass SurveyManager {\r\n\r\n  static surveyQueue: any = [];\r\n  static processQueueInterval: any = null;\r\n  static prefillQueue: any = {};\r\n  static surveyInstances: any = {};\r\n\r\n  static initializeSurvey(surveyId: string) {\r\n    //check if survey ran?\r\n    //do survey initialization.\r\n    if (!SurveyManager.surveyInstances || !SurveyManager.surveyInstances[surveyId]) {\r\n      console.error('Microsurvey not properly set up. Contact Support.');\r\n      return;\r\n    }\r\n\r\n    SurveyManager.surveyInstances[surveyId].setupSurvey();\r\n  }\r\n\r\n  static addSurvey(surveyId) {\r\n    (window as any).ccsdkDebug ? console.log(\"Adding survey ID : \" + surveyId) : '';\r\n    if (SurveyManager.surveyQueue.indexOf(surveyId) === -1) {\r\n      SurveyManager.surveyQueue.push(surveyId);\r\n    }\r\n    if (SurveyManager.processQueueInterval == null) {\r\n      SurveyManager.processQueueInterval = setInterval(SurveyManager.processQueueIntervalCB, 100);\r\n    }\r\n  }\r\n\r\n  static removeSurvey(surveyId) {\r\n    if (SurveyManager.surveyQueue.length > 0) {\r\n      for (let survey in SurveyManager.surveyQueue) {\r\n        if (SurveyManager.surveyQueue[survey].surveyId == surveyId) {\r\n          SurveyManager.surveyQueue.splice(survey, 1);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    if (SurveyManager.surveyQueue.length == 0) {\r\n      clearInterval(SurveyManager.processQueueInterval);\r\n    }\r\n  }\r\n\r\n  static processQueueIntervalCB() {\r\n    if ((window as any).globalSurveyRunning == true) {\r\n      return;\r\n    } else {\r\n      let surveyId = SurveyManager.surveyQueue.pop();\r\n      (window as any).ccsdkDebug ? console.log(\"Processing survey ID \" + surveyId) : '';\r\n      if (surveyId == undefined) {\r\n        clearInterval(SurveyManager.processQueueInterval);\r\n        SurveyManager.processQueueInterval = null;\r\n      } else {\r\n        (window as any).globalSurveyRunning = true;\r\n        SurveyManager.initializeSurvey(surveyId);\r\n      }\r\n    }\r\n  }\r\n\r\n  public static setSurveyRunning() {\r\n    (window as any).globalSurveyRunning = true;\r\n    (window as any).globalSurveyStartTime = new Date();\r\n  }\r\n\r\n  public static unsetSurveyRunning() {\r\n    (window as any).globalSurveyRunning = false;\r\n  }\r\n}\r\n\r\nexport { SurveyManager };","class LanguageTextFilter {\r\n\r\n    public static translateQuestionText( surveyHandler: any, question: any ) {\r\n        if ( surveyHandler.ccsdk.config.language.indexOf( 'Default' ) === -1 ) {\r\n            if ( question.translated != null &&\r\n                typeof question.translated[ surveyHandler.ccsdk.config.language ] !== 'undefined' ) {\r\n                if ( question.translated[ surveyHandler.ccsdk.config.language ].text ) {\r\n                    let qText = question.translated[ surveyHandler.ccsdk.config.language ].text.split( ':' );\r\n                    if ( question.translated[ surveyHandler.ccsdk.config.language ].text.indexOf( \":\" ) !== -1 ) {\r\n                        qText = qText[ 0 ] + ': <br><span class=\"text-normal\">' + qText[ 1 ] + '</span>';\r\n                    }\r\n                    return qText;\r\n                }\r\n                // else if ( question.translated[ surveyHandler.ccsdk.config.language ].text ) {\r\n                //     return question.translated[ surveyHandler.ccsdk.config.language ].text;\r\n                // }\r\n                // return question.translated[surveyHandler.ccsdk.config.language].text;\r\n            }\r\n        }\r\n        if ( question.text ) {\r\n            let qText = question.text.split( ':' );\r\n            if ( question.text.indexOf( \":\" ) !== -1 ) {\r\n                qText = qText[ 0 ] + ': <br><span class=\"text-normal\">' + qText[ 1 ] + '</span>';\r\n            }\r\n            return qText;\r\n        } else {\r\n            return question.text == null ? '' : question.text;\r\n        }\r\n    }\r\n\r\n    public static translateMessages( surveyHandler: any, type: string ) {\r\n        if ( surveyHandler.surveyData.translated != null && typeof surveyHandler.surveyData.translated[ surveyHandler.ccsdk.config.language ] !== 'undefined' ) {\r\n            if ( surveyHandler.ccsdk.config.language.indexOf( 'Default' ) === -1 ) {\r\n                if ( surveyHandler.surveyData.translated[ surveyHandler.ccsdk.config.language ] !== 'undefined' ) {\r\n                    if ( surveyHandler.surveyData.translated[ surveyHandler.ccsdk.config.language ][ type ] != null ) {\r\n                        return surveyHandler.surveyData.translated[ surveyHandler.ccsdk.config.language ][ type ];\r\n                    } else {\r\n                        return surveyHandler.surveyData[ type ];\r\n                    }\r\n                } else {\r\n                    return surveyHandler.surveyData[ type ];\r\n                }\r\n            } else {\r\n                return surveyHandler.surveyData[ type ];\r\n            }\r\n        }\r\n    }\r\n\r\n    public static translateDisplayLegend( surveyHandler: any, question: any ) {\r\n        if ( surveyHandler.ccsdk.config.language.indexOf( 'Default' ) === -1 ) {\r\n            if ( question.translated != null &&\r\n                typeof question.translated[ surveyHandler.ccsdk.config.language ] !== 'undefined' ) {\r\n                return question.translated[ surveyHandler.ccsdk.config.language ].displayLegend;\r\n            } else {\r\n                return question.displayLegend;\r\n            }\r\n        } else {\r\n            return question.displayLegend;\r\n        }\r\n    }\r\n\r\n    public static translateMultiSelect( surveyHandler: any, question: any ) {\r\n        if ( surveyHandler.ccsdk.config.language.indexOf( 'Default' ) === -1 ) {\r\n            if ( question.translated != null &&\r\n                typeof question.translated[ surveyHandler.ccsdk.config.language ] !== 'undefined' &&\r\n                question.translated[ surveyHandler.ccsdk.config.language ].multiSelect\r\n            ) {\r\n                let translatedOptions = question.translated[ surveyHandler.ccsdk.config.language ].multiSelect;\r\n                return question.multiSelect.map( ( x, i ) => {\r\n                    if ( translatedOptions[ i ] ) {\r\n                        return translatedOptions[ i ];\r\n                    } else {\r\n                        return x;\r\n                    }\r\n                } );\r\n            } else {\r\n                return question.multiSelect;\r\n            }\r\n        } else {\r\n            return question.multiSelect;\r\n        }\r\n    }\r\n\r\n    public static translateMultiSelectOption( surveyHandler: any, question: any, option: any ) {\r\n        let effectiveMultiselect = this.translateMultiSelect( surveyHandler, question );\r\n        if ( ( effectiveMultiselect instanceof Array ) && effectiveMultiselect.length > 0 ) {\r\n            for ( let i = 0; i < question.multiSelect.length; i++ ) {\r\n                let opt: any = question.multiSelect[ i ].split( ';' )\r\n                if ( opt[ 0 ] == option ) {\r\n                    return effectiveMultiselect[ i ].split( ';' )[ 0 ];\r\n                } else {\r\n\r\n                }\r\n            }\r\n        }\r\n        return option;\r\n    }\r\n\r\n}\r\n\r\nexport { LanguageTextFilter };","class Config {\r\n  static API_URL: String = \"https://api.getcloudcherry.com\";\r\n  static SURVEY_BY_TOKEN: String = \"/api/SurveyByToken/{token}/\";\r\n  // static SURVEY_BY_TOKEN : String  = \"/api/SurveyByToken/{token}/{tabletId}\";\r\n  static SURVEY_PARTIAL_RESPONSE: String = \"/api/PartialSurvey/{id}/{complete}/JS-MicroWeb\";\r\n  // static SURVEY_PARTIAL_RESPONSE : String =  \"/api/PartialSurvey/{id}/{complete}/JS-Web/{tabletId}\";\r\n  static CDN_URL: string = \"https://cx.getcloudcherry.com/\";\r\n  static CDN_ASSET_URL: string = \"https://cx.getcloudcherry.com/microsurvey-assets/\";\r\n  static POST_LOGIN_TOKEN = \"/api/LoginToken\";\r\n  static GET_SURVEY_THROTTLE_LOGIC = \"/api/SurveyThrottleLogic/{location}\";\r\n  static POST_THROTTLING = \"/api/Throttling\";\r\n  static POST_THROTTLING_ADD_ENTRIES = \"/api/Throttling/AddEntries\";\r\n  static POST_SURVEY_FINAL = \"/api/surveybytoken/{tokenId}\"\r\n  static GET_CAMPAIGN = \"/api/SurveyToken/Campaign/{token}/\"\r\n}\r\n\r\nexport { Config };\r\n","// import 'whatwg-fetch';\r\n\r\nfunction makeRequest( method: string, url: string, postParams: string, headers: any, successcb: any, errorcb: any ): any {\r\n  var xhr = new XMLHttpRequest();\r\n  xhr.open( method, url );\r\n  xhr.onload = function () {\r\n    if ( ( this as any ).status >= 200 && ( this as any ).status < 300 ) {\r\n      if ( xhr.response ) {\r\n      }\r\n      let res: any = xhr.response && typeof xhr.response === 'string' && !xhr.response.match( 'GIF' ) ? JSON.parse( xhr.response ) : '';\r\n      if ( successcb ) successcb( res );\r\n    } else {\r\n      if ( errorcb ) {\r\n        errorcb( {\r\n          status: ( this as any ).status,\r\n          statusText: xhr.statusText\r\n        } );\r\n      }\r\n    }\r\n  };\r\n  xhr.onerror = function () {\r\n    if ( errorcb ) {\r\n      errorcb( {\r\n        status: ( this as any ).status,\r\n        statusText: xhr.statusText\r\n      } );\r\n    }\r\n  };\r\n  if ( headers ) {\r\n    Object.keys( headers ).forEach( function ( key ) {\r\n      xhr.setRequestHeader( key, headers[ key ] );\r\n    } );\r\n  }\r\n  // var params : any = postParams;\r\n  // We'll need to stringify if we've been given an object\r\n  // If we have a string, this is skipped.\r\n  // if (params && typeof params === 'object') {\r\n  //   params = Object.keys(params).map(function (key) {\r\n  //     return encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\r\n  //   }).join('&');\r\n  // }\r\n  xhr.send( postParams );\r\n}\r\n\r\nclass RequestHelper {\r\n\r\n  static getWithHeaders( url: string, headers: any, successcb: any, errorcb: any ) {\r\n    return makeRequest( \"GET\", url, null, headers, successcb, errorcb );\r\n  }\r\n\r\n  static postWithHeaders( url: string, data: Object, headers: any, successcb: any, errorcb: any ) {\r\n    headers[ \"Content-Type\" ] = \"application/json;charset=utf-8\";\r\n    return makeRequest( \"POST\", url, JSON.stringify( data ), headers, successcb, errorcb );\r\n\r\n  }\r\n\r\n  static get( url: string, successcb: any, errorcb: any ) {\r\n    return makeRequest( \"GET\", url, null, null, successcb, errorcb );\r\n    // let request : Request = new Request( (url as any) , new Object());\r\n    // return fetch(request).then( (response : Response) => {\r\n    //   if (response.status >= 200 && response.status < 300) {\r\n    //     return Promise.resolve(response);\r\n    //   } else {\r\n    //     var error = new Error(response.statusText);\r\n    //     // error.response = response;\r\n    //     throw error;\r\n    //   }\r\n    // }).then( (response : Response) => {\r\n    //   return response.json();\r\n    // }).catch( (error : Error) => {\r\n    //   (window as any).ccsdkDebug?console.log('Request failed ', error):'';\r\n    // });\r\n  }\r\n\r\n  /**\r\n   *\r\n   * var data = new FormData()\r\n   *  data.append('file', input.files[0])\r\n   *  data.append('user', 'hubot')\r\n   *\r\n   * @static\r\n   * @param {any} url\r\n   * @param {any} data\r\n   * @memberof Request\r\n   */\r\n  static post( url: string, data: Object, successcb: any, errorcb: any ) {\r\n    //consider, file upload?\r\n    // (window as any).ccsdkDebug?console.log(\"[\" + JSON.stringify(data) + \"]\"):'';\r\n    ( window as any ).ccsdkDebug ? console.log( \"Sending : \" + data ) : '';\r\n    return makeRequest( \"POST\", url, JSON.stringify( data ), {}, successcb, errorcb );\r\n    // let request : Request = new Request( (url as any), {\r\n    //   method : \"POST\",\r\n    //   headers : {\r\n    //     \"Content-Type\" : \"application/json; charset=utf-8\"\r\n    //   },\r\n    //   body : JSON.stringify(data)\r\n    // });\r\n    // return fetch(request).then( (response : Response) => {\r\n    //   if (response.status >= 200 && response.status < 300) {\r\n    //     return Promise.resolve(response);\r\n    //   } else {\r\n    //     let error : Error = new Error(response.statusText);\r\n    //     // error.response = response;\r\n    //     throw error;\r\n    //   }\r\n    // }).then( (response : Response) => {\r\n    //   return response.json();\r\n    // }).catch( (error : Error) => {\r\n    //   (window as any).ccsdkDebug?console.log('Request failed ', error):'';\r\n    // });\r\n  }\r\n\r\n}\r\n\r\nexport { RequestHelper };\r\n","import '../css/main.scss';\r\nimport * as QuestionSurvey from '../templates/Survey.html';\r\nimport * as QuestionStart from '../templates/QuestionStart.html';\r\nimport * as QuestionSingleline from '../templates/QuestionSingleline.html';\r\nimport * as QuestionNumber from '../templates/QuestionNumber.html';\r\nimport * as QuestionMultiline from '../templates/QuestionMultiline.html';\r\nimport * as QuestionCheckbox from '../templates/QuestionCheckbox.html';\r\nimport * as QuestionRadio from '../templates/QuestionRadio.html';\r\nimport * as QuestionRadioImage from '../templates/QuestionRadioImage.html';\r\nimport * as QuestionScale from '../templates/QuestionScale.html';\r\nimport * as QuestionCSATAgreement5 from '../templates/QuestionCSATAgreement5.html';\r\nimport * as QuestionCSATSatisfaction5 from '../templates/QuestionCSATSatisfaction5.html';\r\nimport * as QuestionNPS from '../templates/QuestionNPS.html';\r\nimport * as QuestionSelect from '../templates/QuestionSelect.html';\r\nimport * as QuestionMultiSelect from '../templates/QuestionMultiSelect.html';\r\nimport * as QuestionSmile from '../templates/QuestionSmile.html';\r\nimport * as QuestionSmileInverted from '../templates/QuestionSmileInverted.html';\r\nimport * as QuestionStar from '../templates/QuestionStar.html';\r\nimport * as QuestionSlider from '../templates/QuestionSlider.html';\r\nimport * as OptionRadioImage from '../templates/OptionRadioImage.html';\r\nimport * as OptionRadio from '../templates/OptionRadio.html';\r\nimport * as OptionCheckbox from '../templates/OptionCheckbox.html';\r\nimport * as OptionCheckboxImage from '../templates/OptionCheckboxImage.html';\r\nimport * as ThankYou from '../templates/ThankYou.html';\r\nimport * as QuestionDate from '../templates/QuestionDate.html';\r\nimport * as LanguageSelector from '../templates/LanguageSelector.html';\r\n\r\nlet templates = {\r\n  question_survey: QuestionSurvey,\r\n  question_start: QuestionStart,\r\n  question_text: QuestionSingleline,\r\n  question_number: QuestionNumber,\r\n  question_scale: QuestionScale,\r\n  question_csat_agreement_5: QuestionCSATAgreement5,\r\n  question_csat_satisfaction_5: QuestionCSATSatisfaction5,\r\n  question_nps: QuestionNPS,\r\n  question_multi_line_text: QuestionMultiline,\r\n  question_multi_select: QuestionMultiSelect,\r\n  question_radio: QuestionRadio,\r\n  question_radio_image: QuestionRadioImage,\r\n  question_checkbox: QuestionCheckbox,\r\n  question_select: QuestionSelect,\r\n  question_smile_5: QuestionSmile,\r\n  question_date: QuestionDate,\r\n  question_smile_5_inverted: QuestionSmileInverted,\r\n  question_star_5: QuestionStar,\r\n  question_slider: QuestionSlider,\r\n  option_radio_image: OptionRadioImage,\r\n  option_radio: OptionRadio,\r\n  option_checkbox: OptionCheckbox,\r\n  option_checkbox_image: OptionCheckboxImage,\r\n  thankyou: ThankYou,\r\n  language_selector: LanguageSelector\r\n};\r\n\r\nexport { templates };\r\n","export function isAnd(filterQuestion: any): boolean {\r\n  if (!filterQuestion) {\r\n    return false;\r\n  }\r\n  if (filterQuestion.groupBy == null || filterQuestion.groupBy.toUpperCase() == \"AND\") {\r\n    return true;\r\n  }\r\n}\r\n\r\nexport function isOr(filterQuestion: any): boolean {\r\n  if (!filterQuestion) {\r\n    return false;\r\n  }\r\n  if (filterQuestion.groupBy != null && filterQuestion.groupBy.toUpperCase() == \"OR\") {\r\n    return true;\r\n  }\r\n}\r\n\r\nexport function isNumberCheck(filterQuestion: any): boolean {\r\n  if (!filterQuestion) {\r\n    return false;\r\n  }\r\n  if (filterQuestion.answerCheck[0] === \"lt\" || filterQuestion.answerCheck[0] === \"gt\" || filterQuestion.answerCheck[0] === \"eq\") {\r\n    return true;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n  * Contains logic to control conditional flow and whether to show or hide the questions based on the user input\r\n  *\r\n  * @param filterQuestion\r\n  * @return\r\n  */\r\nexport function doesSatisfy(surveyHandler: any, filterQuestion: any): boolean {\r\n  const answer = surveyHandler.getAnswerForQuestionId(filterQuestion.questionId);\r\n  if (isNumberCheck(filterQuestion)) {\r\n    if (filterQuestion.answerCheck[0].toLowerCase() == \"lt\") {\r\n      if (answer)\r\n        if (answer.numberInput != null && answer.numberInput < filterQuestion.number) {\r\n          return true;\r\n        }\r\n    } else if (filterQuestion.answerCheck[0].toLowerCase() == (\"gt\")) {\r\n      if (answer)\r\n        if (answer.numberInput != null && answer.numberInput > filterQuestion.number) {\r\n          return true;\r\n        }\r\n    } else if (filterQuestion.answerCheck[0].toLowerCase() == (\"eq\")) {\r\n      if (answer)\r\n        if (answer.numberInput != null && answer.numberInput == filterQuestion.number) {\r\n          return true;\r\n        }\r\n    }\r\n  } else {\r\n    // any text match for text answers\r\n    if (filterQuestion.answerCheck[0] && filterQuestion.answerCheck[0].toLowerCase() === 'any text') {\r\n      if (answer && answer.textInput && answer.textInput !== ' ') {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    let iFoundAll = false;\r\n    let question = surveyHandler.getQuestionById(filterQuestion.questionId);\r\n    let questionAnswerText = answer != null && answer.textInput != null ? answer.textInput : '';\r\n    if (!answer) {\r\n      return false;\r\n    }\r\n    for (let aAnswer of filterQuestion.answerCheck) {\r\n      if (question.displayType === 'MultiSelect') {\r\n        let selectedOptions = answer.textInput.split(',');\r\n        if (selectedOptions.indexOf(aAnswer) !== -1) {\r\n          iFoundAll = true;\r\n        }\r\n      } else if (questionAnswerText === aAnswer) {\r\n        iFoundAll = true;\r\n      }\r\n    }\r\n    return iFoundAll;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function questionCompare(a: any, b: any) {\r\n  return a.sequence - b.sequence;\r\n}\r\n\r\nexport function checkLanguage(surveyHandler, fOption) {\r\n  if (surveyHandler.ccsdk.config && surveyHandler.ccsdk.config.language) {\r\n    return fOption.language === surveyHandler.ccsdk.config.language\r\n  }\r\n  return false;\r\n}\r\n","import { DomUtilities } from \"./DomUtilities\";\r\nimport { LanguageTextFilter } from '../filters/LanguageTextFilter';\r\n\r\nclass Select {\r\n  util: DomUtilities;\r\n  $body: any;\r\n  $html: any;\r\n  qId: any;\r\n  select: any;\r\n  type: string;\r\n  listeners: any = [];\r\n  constructor(qId: string) {\r\n    this.qId = qId;\r\n  }\r\n  init(qId: string) {\r\n    this.util = new DomUtilities();\r\n    this.$body = document.querySelectorAll(\"body\")[0];\r\n    this.$html = document.querySelectorAll(\"html\")[0];\r\n    var select = document.querySelectorAll(\"#\" + qId + \" .cc-select\");\r\n\r\n    // var divSelect = document.querySelectorAll(\"div.cc-select\");\r\n    // this.util.removeAll(divSelect);\r\n    let parent = this;\r\n\r\n    //Assumption: iterating over array but there will always be one select at a time\r\n    this.type = select[0].getAttribute('data-type');\r\n    Array.prototype.forEach.call(select, function (el, i) {\r\n      var self = el;\r\n      var $selectOptions = document.querySelectorAll(\"#\" + qId + \" .cc-select-options\");\r\n      var classes = self.getAttribute(\"class\"),\r\n        id = self.getAttribute(\"id\"),\r\n        name = self.getAttribute(\"name\");\r\n      var template = '<div class=\"' + classes + '\">';\r\n      template += '<span class=\"cc-select-trigger\">' + self.getAttribute(\"placeholder\") + '</span>';\r\n      template += '<div class=\"cc-select-options-container\" cc-scrollbar-container><div class=\"cc-select-options\">';\r\n      var options = self.querySelectorAll(\"option\");\r\n      Array.prototype.forEach.call(options, function (el, i) {\r\n        template += '<span class=\"cc-select-option ' + el.getAttribute(\"class\") + '\" data-value=\"' + el.getAttribute(\"value\") + '\">' + el.innerHTML + '</span>';\r\n      });\r\n      template += '</div></div></div>';\r\n      parent.util.addClass(self, 'hide');\r\n      self.insertAdjacentHTML('afterend', template);\r\n    });\r\n    this.setupListeners();\r\n  }\r\n\r\n\r\n  setupListeners() {\r\n    var self = this;\r\n    var qId = self.qId;\r\n    let ref2 = this.util.initListener('click', \"#\" + qId + \" .cc-select-option\", function (e) {\r\n      // let ref2 = this.util.initListener(this.$body, \"click\", \"#\"+qId+\" .cc-select-option\", function(e) {\r\n      (window as any).ccsdkDebug ? console.log('click cc-select-option', this) : '';\r\n      let selfOption = this;\r\n      let value = this.getAttribute('data-value');\r\n      //select cc-select-wrapper\r\n      //todo: write a function to directly select parent via selector\r\n      let selectOptions = this.parentNode;\r\n      let select = selectOptions.parentNode.parentNode;\r\n      this.select = select;\r\n      let selectWrapper = select.parentNode;\r\n      (window as any).ccsdkDebug ? console.log(select) : '';\r\n      (window as any).ccsdkDebug ? console.log(selectOptions) : '';\r\n      (window as any).ccsdkDebug ? console.log(selectWrapper) : '';\r\n      let selectionTrigger = select.querySelectorAll('.cc-select-trigger')[0];\r\n\r\n      self.util.addClass(this, \"selection\");\r\n      let selectedOptionText = selectionTrigger.textContent;\r\n      let selectedValueText = selectionTrigger.getAttribute('data-selection-value') || '';\r\n\r\n      (window as any).ccsdkDebug ? console.log('select type', self.type) : '';\r\n      if (self.type !== 'multiple') {\r\n        (window as any).ccsdkDebug ? console.log('select type', self.type) : '';\r\n        selectedOptionText = selfOption.textContent;\r\n        (window as any).ccsdkDebug ? console.log('selected option', selectedOptionText) : '';\r\n        self.util.removeClassAll(document.querySelectorAll(\".cc-select\"), \"cc-opened\");\r\n        selectionTrigger.setAttribute('data-selection-value', value);\r\n        selectWrapper.querySelectorAll(\"select\")[0].value = value;\r\n        selectionTrigger.textContent = selectedOptionText;\r\n        self.util.removeClassAll(document.querySelectorAll(\"#\" + qId + \" .cc-select-option\"), 'selection');\r\n        self.util.addClass(self, 'selection');\r\n      } else {\r\n        (window as any).ccsdkDebug ? console.log(selectedOptionText) : '';\r\n        if (selectedOptionText != 'Select') {\r\n          selectedOptionText = self.addOrRemoveFromList(selectedOptionText, selfOption.textContent);\r\n          selectedValueText = self.addOrRemoveFromList(selectedValueText, value);\r\n        } else {\r\n          (window as any).ccsdkDebug ? console.log(selfOption.textContent) : '';\r\n          selectedOptionText = selfOption.textContent;\r\n          selectedValueText = value;\r\n        }\r\n\r\n        selectWrapper.querySelectorAll(\"select\")[0].value = selectedValueText;\r\n        selectionTrigger.setAttribute('data-selection-value', selectedValueText);\r\n        self.util.removeClassAll(document.querySelectorAll(\"#\" + qId + \" .cc-select-option\"), 'selection');\r\n        self.selectOptions(selectedValueText);\r\n\r\n        selectedValueText\r\n        if (selectedOptionText.length < 1) {\r\n          selectionTrigger.textContent = 'Select';\r\n        } else {\r\n          selectionTrigger.textContent = selectedOptionText;\r\n        }\r\n        return false;\r\n\r\n      }\r\n\r\n    });\r\n    this.listeners.push(ref2);\r\n    ref2.internalHandler = this.util.listener(this.$body, ref2.type, ref2.id, ref2.cb);\r\n    let ref = this.util.initListener('click', \"#\" + qId + \" .cc-select-trigger\", function (e) {\r\n      self.$html.addEventListener('click', function (e) {\r\n        if (!self.util.hasClass(e.target, 'cc-select-option')) {\r\n          self.util.removeClassAll(document.querySelectorAll(\".cc-select\"), \"cc-opened\");\r\n          self.$html.removeEventListener('click', function () {\r\n          });\r\n        }\r\n      })\r\n      var ccSelect = this.parentNode;\r\n      (window as any).ccsdkDebug ? console.log('click cc-select-trigger', ccSelect) : '';\r\n      self.util.toggleClass(ccSelect, \"cc-opened\");\r\n      e.stopPropagation();\r\n    });\r\n    this.listeners.push(ref);\r\n    ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n\r\n  }\r\n\r\n  destroyListeners() {\r\n    for (let listener of this.listeners) {\r\n      this.util.removeListener(this.$body, listener.type, listener.internalHandler);\r\n    }\r\n    return true;\r\n  }\r\n\r\n\r\n  setValue(value: string, question, surveyHandler) {\r\n    let self = this;\r\n    let qId = self.qId;\r\n    let select: any;\r\n\r\n    select = document.querySelectorAll(\"#\" + qId + \" select\")[0];\r\n    select.value = value;\r\n    let selectTrigger = document.querySelectorAll(\"#\" + qId + \" .cc-select-trigger\")[0];\r\n    let selectedValueList = value.split(',');\r\n    let translatedSelection = selectedValueList.map(x => LanguageTextFilter.translateMultiSelectOption(surveyHandler, question, x));\r\n    selectTrigger.textContent = translatedSelection.join(',');\r\n    selectTrigger.setAttribute('data-selection-value', value);\r\n  }\r\n\r\n  selectOption(el: any) {\r\n    this.util.addClass(el, 'selection');\r\n  }\r\n\r\n  removeOption(el) {\r\n    this.util.removeClass(el, 'selection');\r\n  }\r\n\r\n  selectOptions(csv: string) {\r\n    let self = this;\r\n    if (csv) {\r\n      let allOptions = csv.split(',');\r\n      for (let option of allOptions) {\r\n        let domOptions = document.querySelectorAll(\"#\" + self.qId + \" .cc-select-option\");\r\n        Array.prototype.forEach.call(domOptions, function (el, i) {\r\n          if (el.getAttribute('data-value') == option) {\r\n            self.selectOption(el);\r\n          } else {\r\n\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  addOrRemoveFromList(listAsString: string, item: string) {\r\n    let list = listAsString.split(',');\r\n    let itemIndex = list.indexOf(item);\r\n    if (itemIndex !== -1) {\r\n      list.splice(itemIndex, 1);\r\n    } else {\r\n      list.push(item);\r\n    }\r\n    return list.join(',');\r\n  }\r\n\r\n}\r\nexport { Select }\r\n","import { isArray } from \"util\";\r\nimport { LanguageTextFilter } from \"./LanguageTextFilter\";\r\nimport { isAnd, isOr, doesSatisfy, questionCompare } from './filter-utils';\r\n\r\nclass ConditionalFlowFilter {\r\n  public static filterQuestion( surveyHandler: any, question: any ) {\r\n    let aAddedCount = 0;\r\n    let aRemovedCount = 0;\r\n\r\n    if ( surveyHandler.getAnswerForQuestionId( question.id ) != null ) {\r\n      for ( let aQuestion of surveyHandler.getConditionalSurveyQuestions() ) {\r\n        // console.log( aQuestion );\r\n        if ( aQuestion.conditionalFilter != null ) {\r\n          let iSatisfied = false;\r\n          let iFailed = false;\r\n          for ( let aFilterByQuestion of aQuestion.conditionalFilter.filterquestions ) {\r\n            if ( isAnd( aFilterByQuestion ) ) {\r\n              if ( doesSatisfy( surveyHandler, aFilterByQuestion ) && !iFailed ) {\r\n                iSatisfied = true;\r\n              } else {\r\n                iFailed = true;\r\n                break;\r\n              }\r\n            } else if ( isOr( aFilterByQuestion ) ) {\r\n              if ( doesSatisfy( surveyHandler, aFilterByQuestion ) ) {\r\n                iSatisfied = true;\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          const surveyQuestions = surveyHandler.getSurveyQuestions();\r\n          if ( iSatisfied && !iFailed ) {\r\n            if ( surveyQuestions.indexOf( aQuestion ) === -1 ) {\r\n              surveyQuestions.push( aQuestion );\r\n              aAddedCount++;\r\n            }\r\n          } else {\r\n            if ( surveyQuestions.indexOf( aQuestion ) !== -1 ) {\r\n              aRemovedCount++;\r\n              surveyQuestions.splice( surveyQuestions.indexOf( aQuestion ), 1 );\r\n              // surveyHandler.removePartial(aQuestion.id);\r\n              //removing from partial requires not posting partial after each question rather than posting them all at once.\r\n              surveyHandler.removeAnswer( aQuestion.id );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if ( aAddedCount > 0 || aRemovedCount > 0 ) {\r\n      surveyHandler.getSurveyQuestions().sort( questionCompare );\r\n      // surveyHandler.sendConditionalFLowQuestionsData(surveyHandler.getSurveyQuestions().size());\r\n      return true;\r\n    } else {\r\n      // return false;\r\n    }\r\n    // ( window as any ).ccsdkDebug ? console.log( surveyHandler.getSurveyQuestions() ) : '';\r\n  }\r\n}\r\n\r\nexport { ConditionalFlowFilter };","// Production steps of ECMA-262, Edition 6, 22.1.2.1\r\nif (!(<any>Array).from) {\r\n  (<any>Array).from = (function () {\r\n    var toStr = Object.prototype.toString;\r\n    var isCallable = function (fn) {\r\n      return typeof fn === 'function' || toStr.call(fn) === '[object Function]';\r\n    };\r\n    var toInteger = function (value) {\r\n      var number = Number(value);\r\n      if (isNaN(number)) {\r\n        return 0;\r\n      }\r\n      if (number === 0 || !isFinite(number)) {\r\n        return number;\r\n      }\r\n      return (number > 0 ? 1 : -1) * Math.floor(Math.abs(number));\r\n    };\r\n    var maxSafeInteger = Math.pow(2, 53) - 1;\r\n    var toLength = function (value) {\r\n      var len = toInteger(value);\r\n      return Math.min(Math.max(len, 0), maxSafeInteger);\r\n    };\r\n\r\n    // The length property of the from method is 1.\r\n    return function from(arrayLike /*, mapFn, thisArg */) {\r\n      // 1. Let C be the this value.\r\n      var C = this;\r\n\r\n      // 2. Let items be ToObject(arrayLike).\r\n      var items = Object(arrayLike);\r\n\r\n      // 3. ReturnIfAbrupt(items).\r\n      if (arrayLike == null) {\r\n        throw new TypeError('Array.from requires an array-like object - not null or undefined');\r\n      }\r\n\r\n      // 4. If mapfn is undefined, then let mapping be false.\r\n      var mapFn = arguments.length > 1 ? arguments[1] : void undefined;\r\n      var T;\r\n      if (typeof mapFn !== 'undefined') {\r\n        // 5. else\r\n        // 5. a If IsCallable(mapfn) is false, throw a TypeError exception.\r\n        if (!isCallable(mapFn)) {\r\n          throw new TypeError('Array.from: when provided, the second argument must be a function');\r\n        }\r\n\r\n        // 5. b. If thisArg was supplied, let T be thisArg; else let T be undefined.\r\n        if (arguments.length > 2) {\r\n          T = arguments[2];\r\n        }\r\n      }\r\n\r\n      // 10. Let lenValue be Get(items, \"length\").\r\n      // 11. Let len be ToLength(lenValue).\r\n      var len = toLength(items.length);\r\n\r\n      // 13. If IsConstructor(C) is true, then\r\n      // 13. a. Let A be the result of calling the [[Construct]] internal method \r\n      // of C with an argument list containing the single item len.\r\n      // 14. a. Else, Let A be ArrayCreate(len).\r\n      var A = isCallable(C) ? Object(new C(len)) : new Array(len);\r\n\r\n      // 16. Let k be 0.\r\n      var k = 0;\r\n      // 17. Repeat, while k < len… (also steps a - h)\r\n      var kValue;\r\n      while (k < len) {\r\n        kValue = items[k];\r\n        if (mapFn) {\r\n          A[k] = typeof T === 'undefined' ? mapFn(kValue, k) : mapFn.call(T, kValue, k);\r\n        } else {\r\n          A[k] = kValue;\r\n        }\r\n        k += 1;\r\n      }\r\n      // 18. Let putStatus be Put(A, \"length\", len, true).\r\n      A.length = len;\r\n      // 20. Return A.\r\n      return A;\r\n    };\r\n  }());\r\n}\r\n\r\n// custom event polyfill\r\n(function () {\r\n\r\n  if (typeof (<any>window).CustomEvent === \"function\") return false;\r\n\r\n  function CustomEvent(event, params) {\r\n    params = params || {\r\n      bubbles: false,\r\n      cancelable: false,\r\n      detail: undefined\r\n    };\r\n    var evt = document.createEvent('CustomEvent');\r\n    evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\r\n    return evt;\r\n  }\r\n\r\n  CustomEvent.prototype = (<any>window).Event.prototype;\r\n\r\n  (<any>window).CustomEvent = CustomEvent;\r\n})();\r\n\r\n// https://tc39.github.io/ecma262/#sec-array.prototype.find\r\nif (!(<any>Array.prototype).find) {\r\n  Object.defineProperty(Array.prototype, 'find', {\r\n    value: function (predicate) {\r\n      // 1. Let O be ? ToObject(this value).\r\n      if (this == null) {\r\n        throw new TypeError('\"this\" is null or not defined');\r\n      }\r\n\r\n      var o = Object(this);\r\n\r\n      // 2. Let len be ? ToLength(? Get(O, \"length\")).\r\n      var len = o.length >>> 0;\r\n\r\n      // 3. If IsCallable(predicate) is false, throw a TypeError exception.\r\n      if (typeof predicate !== 'function') {\r\n        throw new TypeError('predicate must be a function');\r\n      }\r\n\r\n      // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\r\n      var thisArg = arguments[1];\r\n\r\n      // 5. Let k be 0.\r\n      var k = 0;\r\n\r\n      // 6. Repeat, while k < len\r\n      while (k < len) {\r\n        // a. Let Pk be ! ToString(k).\r\n        // b. Let kValue be ? Get(O, Pk).\r\n        // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\r\n        // d. If testResult is true, return kValue.\r\n        var kValue = o[k];\r\n        if (predicate.call(thisArg, kValue, k, o)) {\r\n          return kValue;\r\n        }\r\n        // e. Increase k by 1.\r\n        k++;\r\n      }\r\n\r\n      // 7. Return undefined.\r\n      return undefined;\r\n    },\r\n    configurable: true,\r\n    writable: true\r\n  });\r\n}","import { Cookie } from \"./helpers/Cookie\";\r\nimport { SurveyManager } from \"./SurveyManager\";\r\nimport { Survey } from \"./Survey\";\r\nimport { PrefillsBatchOrSingle, PrefillDictionary } from \"./types\";\r\n\r\n/**\r\n * functions that are exposed to SDK User are written here.\r\n * Entry point for CCSDK.\r\n */\r\n// declare var Sentry: any;\r\n\r\nlet localCCSDK = {\r\n  init: init,\r\n  destroy: destroy,\r\n  trigger: trigger,\r\n  hide: hide,\r\n  show: show,\r\n  on: on,\r\n  prefill: prefill,\r\n  prefillByTag: prefillByTag,\r\n  prefillByNote: prefillByNote\r\n};\r\n\r\n// let instances : any = {};\r\n\r\n(window as any).globalSurveyRunning = false;\r\n(window as any).ccsdkDebug = false;\r\n(window as any).isMobile = window.innerWidth <= 768 ? true : false;\r\n\r\nif (typeof (window as any).CCSDK !== \"undefined\") {\r\n  var queue = (window as any).CCSDK.q;\r\n  (window as any).CCSDK = function() {\r\n    if (arguments && arguments.length == 0) {\r\n      var time = new Date();\r\n    } else {\r\n      (window as any).ccsdkDebug ? console.log(arguments) : \"\";\r\n      var args = (Array as any).from(arguments);\r\n      //Call this functions as ccsdk('functionName', ['argument1', 'argument2']);\r\n      var functionName = args.splice(0, 1)[0];\r\n      (window as any).ccsdkDebug ? console.log(functionName) : \"\";\r\n      return localCCSDK[functionName].apply(this, args);\r\n    }\r\n  };\r\n  if (queue) {\r\n    for (var q of queue) {\r\n      var args = (Array as any).from(q);\r\n      var functionName = args.splice(0, 1)[0];\r\n      localCCSDK[functionName].apply(this, args);\r\n    }\r\n  }\r\n  let eventCCReady: Event = document.createEvent(\"Event\");\r\n  eventCCReady.initEvent(\"ccready\", true, true);\r\n  document.dispatchEvent(eventCCReady);\r\n}\r\n\r\nexport function init(surveyToken: any) {\r\n  //config options can be set in arguments[1]\r\n  //available config options : themeColor\r\n  surveyToken = decodeURIComponent(surveyToken).trim();\r\n  let config = typeof arguments[1] === \"object\" ? arguments[1] : {};\r\n  //create survey instance\r\n  if (\r\n    typeof Cookie.get(surveyToken + \"-finish\") !== \"undefined\" &&\r\n    Cookie.get(surveyToken + \"-finish\")\r\n  ) {\r\n    return;\r\n  }\r\n  if (\r\n    typeof Cookie.get(surveyToken + \"-coolDown\") !== \"undefined\" &&\r\n    Cookie.get(surveyToken + \"-coolDown\")\r\n  ) {\r\n    return;\r\n  }\r\n\r\n  if (config && typeof config.isActive !== \"undefined\" && config.isActive) {\r\n    SurveyManager.surveyInstances[surveyToken] = SurveyManager.surveyInstances[\r\n      surveyToken\r\n    ]\r\n      ? SurveyManager.surveyInstances[surveyToken]\r\n      : new Survey(surveyToken, config);\r\n    SurveyManager.surveyInstances[surveyToken].tracking.trackEvent(\r\n      \"Init MicroSurvey\",\r\n      {\r\n        token: surveyToken,\r\n        data: {\r\n          name: (<any>window).isMobile ? \"Mobile Mode\" : \"Desktop Mode\",\r\n          action: surveyToken\r\n        }\r\n      },\r\n      null,\r\n      null\r\n    );\r\n\r\n    if (SurveyManager.prefillQueue[surveyToken]) {\r\n      let object = SurveyManager.prefillQueue[surveyToken];\r\n      SurveyManager.surveyInstances[surveyToken].tracking.trackEvent(\r\n        \"Init MicroSurvey\",\r\n        {\r\n          token: surveyToken,\r\n          data: {\r\n            name: \"Prefill lazily\",\r\n            action: surveyToken\r\n          }\r\n        },\r\n        null,\r\n        null\r\n      );\r\n      if (object.directPrefills) {\r\n        object.directPrefills.forEach(x => {\r\n          SurveyManager.surveyInstances[surveyToken].prefill(x, \"DIRECT\");\r\n        });\r\n        delete object.directPrefills;\r\n      } else if (object.byTagPrefills) {\r\n        object.byTagPrefills.forEach(x => {\r\n          SurveyManager.surveyInstances[surveyToken].prefill(x, \"BY_TAG\");\r\n        });\r\n        delete object.byTagPrefills;\r\n      } else if (object.byNotePrefills) {\r\n        object.byTagPrefills.forEach(x => {\r\n          SurveyManager.surveyInstances[surveyToken].prefill(x, \"BY_NOTE\");\r\n        });\r\n        delete object.byNotePrefills;\r\n      }\r\n    }\r\n    return SurveyManager.surveyInstances[surveyToken];\r\n  } else {\r\n    //do nothing\r\n  }\r\n}\r\n\r\nexport function destroy(surveyToken: string) {\r\n  //remove from trigger manager, delete instance.\r\n  if (\r\n    !SurveyManager ||\r\n    !SurveyManager.surveyInstances ||\r\n    !SurveyManager.surveyInstances[surveyToken] ||\r\n    !SurveyManager.surveyInstances[surveyToken].dom\r\n  ) {\r\n    return;\r\n  }\r\n  SurveyManager.surveyInstances[surveyToken].dom.destroyListeners();\r\n  SurveyManager.surveyInstances[surveyToken].destroy();\r\n  delete SurveyManager.surveyInstances[surveyToken];\r\n}\r\n//\r\nexport function trigger(surveyToken: string, type: string, target: string) {\r\n  (window as any).ccsdkDebug ? console.log(SurveyManager.surveyInstances) : \"\";\r\n\r\n  if (typeof SurveyManager.surveyInstances[surveyToken] != \"undefined\") {\r\n    SurveyManager.surveyInstances[surveyToken].tracking.trackEvent(\r\n      \"Trigger Type\",\r\n      {\r\n        token: surveyToken,\r\n        data: {\r\n          name: type,\r\n          action: surveyToken\r\n        }\r\n      },\r\n      null,\r\n      null\r\n    );\r\n    SurveyManager.surveyInstances[surveyToken].trigger(type, target);\r\n  }\r\n  //tell trigger manager to register trigger.\r\n}\r\n\r\nexport function on(surveyToken: string, type: string, callback: any) {\r\n  if (typeof SurveyManager.surveyInstances[surveyToken] != \"undefined\") {\r\n    SurveyManager.surveyInstances[surveyToken].tracking.trackEvent(\r\n      \"Event Listeners\",\r\n      {\r\n        token: surveyToken,\r\n        data: {\r\n          name: type,\r\n          action: surveyToken\r\n        }\r\n      },\r\n      null,\r\n      null\r\n    );\r\n    SurveyManager.surveyInstances[surveyToken].on(type, callback);\r\n  }\r\n}\r\n\r\nexport function prefill(\r\n  surveyToken: string,\r\n  ...restArgs: PrefillsBatchOrSingle\r\n) {\r\n  if (typeof SurveyManager.surveyInstances[surveyToken] != \"undefined\") {\r\n    let questionId;\r\n    if (typeof restArgs[0] === \"string\") {\r\n      questionId = restArgs[0];\r\n    } else {\r\n      questionId =\r\n        Object.keys(<PrefillDictionary>restArgs[0]).length + \" Questions\";\r\n    }\r\n    SurveyManager.surveyInstances[surveyToken].tracking.trackEvent(\r\n      \"Prefill\",\r\n      {\r\n        token: surveyToken,\r\n        data: {\r\n          name: questionId,\r\n          action: surveyToken\r\n        }\r\n      },\r\n      null,\r\n      null\r\n    );\r\n    SurveyManager.surveyInstances[surveyToken].prefill(restArgs, \"DIRECT\");\r\n  } else {\r\n    if (SurveyManager.prefillQueue[surveyToken]) {\r\n      SurveyManager.prefillQueue[surveyToken].directPrefills.push(restArgs);\r\n    } else {\r\n      SurveyManager.prefillQueue[surveyToken] = {\r\n        directPrefills: [restArgs]\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\nexport function prefillByTag(\r\n  surveyToken: string,\r\n  ...restArgs: PrefillsBatchOrSingle\r\n) {\r\n  if (typeof SurveyManager.surveyInstances[surveyToken] != \"undefined\") {\r\n    let questionTag;\r\n    if (typeof restArgs[0] === \"string\") {\r\n      questionTag = restArgs[0];\r\n    } else {\r\n      questionTag =\r\n        Object.keys(<PrefillDictionary>restArgs[0]).length + \" Questions\";\r\n    }\r\n    SurveyManager.surveyInstances[surveyToken].tracking.trackEvent(\r\n      \"Prefill by tag\",\r\n      {\r\n        token: surveyToken,\r\n        data: {\r\n          name: questionTag,\r\n          action: surveyToken\r\n        }\r\n      },\r\n      null,\r\n      null\r\n    );\r\n    SurveyManager.surveyInstances[surveyToken].prefill(restArgs, \"BY_TAG\");\r\n  } else {\r\n    if (SurveyManager.prefillQueue[surveyToken]) {\r\n      SurveyManager.prefillQueue[surveyToken].byTagPrefills.push(restArgs);\r\n    } else {\r\n      SurveyManager.prefillQueue[surveyToken] = {\r\n        byTagPrefills: [restArgs]\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\nexport function prefillByNote(\r\n  surveyToken: string,\r\n  ...restArgs: PrefillsBatchOrSingle\r\n) {\r\n  if (typeof SurveyManager.surveyInstances[surveyToken] != \"undefined\") {\r\n    let questionNote;\r\n    if (typeof restArgs[0] === \"string\") {\r\n      questionNote = restArgs[0];\r\n    } else {\r\n      questionNote =\r\n        Object.keys(<PrefillDictionary>restArgs[0]).length + \" Questions\";\r\n    }\r\n    SurveyManager.surveyInstances[surveyToken].tracking.trackEvent(\r\n      \"Prefill by Note\",\r\n      {\r\n        token: surveyToken,\r\n        data: {\r\n          name: questionNote,\r\n          action: surveyToken\r\n        }\r\n      },\r\n      null,\r\n      null\r\n    );\r\n    SurveyManager.surveyInstances[surveyToken].prefill(restArgs, \"BY_NOTE\");\r\n  } else {\r\n    if (SurveyManager.prefillQueue[surveyToken]) {\r\n      SurveyManager.prefillQueue[surveyToken].byNotePrefills.push(restArgs);\r\n    } else {\r\n      SurveyManager.prefillQueue[surveyToken] = {\r\n        byNotePrefills: [restArgs]\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\nexport function show(surveyToken: string) {\r\n  if (typeof SurveyManager.surveyInstances[surveyToken] != \"undefined\") {\r\n    SurveyManager.surveyInstances[surveyToken].show();\r\n  }\r\n}\r\n\r\nexport function hide(surveyToken: string) {\r\n  if (typeof SurveyManager.surveyInstances[surveyToken] != \"undefined\") {\r\n    SurveyManager.surveyInstances[surveyToken].dom.destroyListeners();\r\n    SurveyManager.surveyInstances[surveyToken].destroy();\r\n    SurveyManager.surveyInstances[surveyToken].hide();\r\n  }\r\n}\r\n","import { CCSDKConfig } from \"./interfaces/CCSDKConfig\";\r\nimport { DisplayConfig } from \"./interfaces/DisplayConfig\";\r\nimport { SurveyHandler } from \"./SurveyHandler\";\r\nimport { DomSurvey } from \"./helpers/dom/DomSurvey\";\r\nimport { DomUtilities } from \"./helpers/dom/DomUtilities\";\r\nimport { Scrollbar } from \"./helpers/dom/ScrollBar\";\r\nimport { Cookie } from \"./helpers/Cookie\";\r\nimport { Constants } from \"./Constants\";\r\nimport { Slider } from \"./helpers/dom/Slider\";\r\nimport { SurveyManager } from \"./SurveyManager\";\r\nimport { TriggerManager } from \"./TriggerManager\";\r\nimport { Triggers } from \"./Triggers\";\r\nimport { RequestHelper } from \"./helpers/Request\";\r\nimport { Config } from \"./Config\";\r\nimport { MatomoTracker } from \"./helpers/tracking\";\r\nimport { templates } from \"./helpers/templates\";\r\nimport { PrefillsBatchOrSingle, PrefillType } from \"./types\";\r\n\r\nclass Survey {\r\n  survey: SurveyHandler;\r\n  dom: DomSurvey;\r\n  surveyData: any;\r\n  util: DomUtilities;\r\n  scrollbar: Scrollbar;\r\n  slider: Slider;\r\n  config: CCSDKConfig;\r\n  surveyToken: string;\r\n  triggers: Triggers;\r\n  surveyRunning: boolean;\r\n  surveyDone: boolean;\r\n  surveyStatus: string;\r\n  isThrottled: boolean;\r\n  thorttlingLogic: any;\r\n  loginData: any;\r\n  debug: false;\r\n  surveyStartTime: any;\r\n  requester = new RequestHelper();\r\n  tracking: MatomoTracker;\r\n\r\n  constructor(surveyToken: string, config: CCSDKConfig) {\r\n    this.isThrottled = true;\r\n    this.surveyDone = false;\r\n    this.surveyStatus = \"\";\r\n    this.surveyToken = surveyToken;\r\n    this.config = config;\r\n    this.surveyRunning = false;\r\n    this.thorttlingLogic = null;\r\n    this.tracking = new MatomoTracker();\r\n    this.tracking.token = surveyToken;\r\n    if (typeof this.config.textDirection === \"undefined\") {\r\n      this.config.textDirection = \"ltr\";\r\n    }\r\n\r\n    this.triggers = new Triggers(this);\r\n    TriggerManager.addSurvey(this.surveyToken, this.triggers);\r\n    this.survey = new SurveyHandler(this);\r\n    this.util = new DomUtilities();\r\n    //set themeColor of survey\r\n    this.config.brandColor =\r\n      this.config && this.config.brandColor\r\n        ? this.config.brandColor\r\n        : \"#db3c39\";\r\n    //use config variable textDirection and set dir\r\n    this.setHtmlTextDirection();\r\n    this.setDisplayOptions();\r\n    setTimeout(() => {\r\n      this.util.trigger(document, this.surveyToken + \"-ready\", {\r\n        survey: this,\r\n      });\r\n    }, 100);\r\n    //do login\r\n    this.config.username = \"test\";\r\n    this.config.password = \"test\";\r\n    this.config.location = \"location\";\r\n    this.config.language = \"English (Default)\";\r\n    //check trigger conditions and add itself to\r\n    //based on new config\r\n    //gotta and these.\r\n    this.trigger(\"click\", this.config.cssSelector);\r\n    this.triggers.setConditionalTriggers(this.config);\r\n  }\r\n\r\n  getSurveyThrottlingLogic(cb) {\r\n    let getThrottleUrl =\r\n      Config.API_URL +\r\n      Config.GET_SURVEY_THROTTLE_LOGIC.replace(\r\n        \"{location}\",\r\n        this.config.location\r\n      );\r\n    let headers = {};\r\n    headers[Constants.AUTHORIZATION] =\r\n      Constants.AUTHORIZATION_BEARER + \" \" + this.loginData.access_token;\r\n    let self = this;\r\n    let successcb = function (data) {\r\n      self.thorttlingLogic = data;\r\n      self.checkThrottling(cb);\r\n    };\r\n\r\n    RequestHelper.getWithHeaders(getThrottleUrl, headers, successcb, null);\r\n  }\r\n\r\n  checkThrottling(cb) {\r\n    if (this.thorttlingLogic != null) {\r\n      if (this.thorttlingLogic.inputIds == null) {\r\n        this.thorttlingLogic.inputIds = [];\r\n      }\r\n      this.thorttlingLogic.inputIds.push(\r\n        this.thorttlingLogic[\r\n          this.thorttlingLogic.uniqueIDQuestionIdOrTag.toLowerCase()\r\n        ]\r\n      );\r\n      if (\r\n        this.thorttlingLogic.logics != null &&\r\n        this.thorttlingLogic.logics.length > 0 &&\r\n        this.config != null\r\n      ) {\r\n        this.thorttlingLogic.logics[0].filter.location = [];\r\n        this.thorttlingLogic.logics[0].filter.location.push(\r\n          this.config.location\r\n        );\r\n      }\r\n    }\r\n    let self = this;\r\n    let postThrottleUrl = Config.API_URL + Config.POST_THROTTLING;\r\n    let headers = {};\r\n    headers[Constants.AUTHORIZATION] =\r\n      Constants.AUTHORIZATION + \" \" + this.loginData.access_token;\r\n    let successcb = function (throttleResponse) {\r\n      if (\r\n        typeof throttleResponse[0][\r\n          self.thorttlingLogic.uniqueIDQuestionIdOrTag.toLowerCase()\r\n        ] &&\r\n        throttleResponse[0].value\r\n      ) {\r\n        //get survey data?\r\n        cb();\r\n      }\r\n    };\r\n\r\n    RequestHelper.postWithHeaders(\r\n      postThrottleUrl,\r\n      this.thorttlingLogic,\r\n      headers,\r\n      successcb,\r\n      null\r\n    );\r\n  }\r\n\r\n  addThrottlingEntries(isOpen: boolean) {\r\n    let addThrottleUrl = Config.API_URL + Config.POST_THROTTLING_ADD_ENTRIES;\r\n    let headers = {};\r\n    this.loginData = { access_token: \"help\" };\r\n    headers[Constants.AUTHORIZATION] =\r\n      Constants.AUTHORIZATION + \" \" + this.loginData.access_token;\r\n    //fill this from config and data.\r\n    let successcb = (throttleResponse) => {\r\n      this.debug ? console.log(throttleResponse) : \"\";\r\n    };\r\n\r\n    RequestHelper.postWithHeaders(\r\n      addThrottleUrl,\r\n      {\r\n        user: \"\",\r\n        mobile: \"\",\r\n        emailId: \"\",\r\n        customId: \"\",\r\n        surveySentDate: \"\",\r\n        surveyOpenDate: \"\",\r\n        channel: \"\",\r\n        isOpened: isOpen,\r\n      },\r\n      headers,\r\n      successcb,\r\n      null\r\n    );\r\n  }\r\n\r\n  setupSurvey() {\r\n    this.initSurvey();\r\n  }\r\n\r\n  setHtmlTextDirection() {\r\n    let ccSDKElement = document.querySelector(\".cc-sdk\");\r\n    if (!ccSDKElement) {\r\n      return;\r\n    }\r\n    let ccSDKDir: string = ccSDKElement.getAttribute(\"dir\");\r\n    let direction: string =\r\n      this.config && this.config.textDirection\r\n        ? this.config.textDirection\r\n        : ccSDKDir\r\n        ? ccSDKDir\r\n        : \"ltr\";\r\n    ccSDKElement.setAttribute(\"dir\", direction);\r\n  }\r\n\r\n  setDisplayOptions() {\r\n    this.survey.surveyDisplay.position =\r\n      this.config && this.config.position\r\n        ? this.config.position\r\n        : \"bottom right\";\r\n    let welcomePopupAnimation = \"hide-right-left\";\r\n\r\n    switch (this.survey.surveyDisplay.position) {\r\n      case \"bottom right\":\r\n        welcomePopupAnimation = \"hide-right-left\";\r\n        break;\r\n      case \"right bottom\":\r\n        welcomePopupAnimation = \"hide-right-left\";\r\n        break;\r\n      case \"top right\":\r\n        welcomePopupAnimation = \"hide-right-left\";\r\n        break;\r\n      case \"right top\":\r\n        welcomePopupAnimation = \"hide-right-left\";\r\n        break;\r\n      case \"bottom left\":\r\n        welcomePopupAnimation = \"hide-left-right\";\r\n        break;\r\n      case \"left bottom\":\r\n        welcomePopupAnimation = \"hide-left-right\";\r\n        break;\r\n      case \"top left\":\r\n        welcomePopupAnimation = \"hide-left-right\";\r\n        break;\r\n      case \"left top\":\r\n        welcomePopupAnimation = \"hide-left-right\";\r\n        break;\r\n      default:\r\n        welcomePopupAnimation = \"hide-right-left\";\r\n        break;\r\n    }\r\n    this.survey.surveyDisplay.welcomePopupAnimation = welcomePopupAnimation;\r\n    this.tracking.trackEvent(\r\n      \"Welcome Pop up Position\",\r\n      {\r\n        token: this.tracking.token,\r\n        data: {\r\n          name: this.survey.surveyDisplay.position,\r\n          action: null,\r\n        },\r\n      },\r\n      null,\r\n      null\r\n    );\r\n\r\n    this.survey.surveyDisplay.surveyPosition =\r\n      this.config.position.search(/bottom/gi) == -1 ? \"top\" : \"bottom\";\r\n  }\r\n\r\n  getSurveyData() {\r\n    let self: Survey = this;\r\n    let successcb = function (surveyData) {\r\n      self.debug ? console.log(surveyData) : \"\";\r\n\r\n      let event = new CustomEvent(\r\n        Constants.SURVEY_DATA_EVENT + \"-\" + self.surveyToken,\r\n        { detail: JSON.parse(JSON.stringify(surveyData)) }\r\n      );\r\n      document.dispatchEvent(event);\r\n      if (!self.config.skipWelcomePage) {\r\n        self.dom.hideLoader();\r\n      }\r\n\r\n      self.surveyData = surveyData;\r\n      if (surveyData && surveyData.questions && surveyData.questions[0]) {\r\n        self.tracking.username = surveyData.questions[0].user;\r\n      }\r\n\r\n      self.tracking.token = self.surveyToken;\r\n      if (self.surveyData) {\r\n        self.tracking.trackEvent(\r\n          \"Login Success\",\r\n          {\r\n            token: self.tracking.token,\r\n            data: {\r\n              name: \"Token\",\r\n              action: self.surveyToken,\r\n            },\r\n          },\r\n          console.log,\r\n          (err) => console.error(err)\r\n        );\r\n        self.tracking.trackEvent(\r\n          \"Survey Length\",\r\n          {\r\n            token: self.tracking.token,\r\n            data: {\r\n              name: `${surveyData.questions.length} Questions`,\r\n              action: `${\r\n                surveyData.preFill ? surveyData.preFill.length : 0\r\n              } Prefills`,\r\n            },\r\n          },\r\n          null,\r\n          null\r\n        );\r\n\r\n        let event = new CustomEvent(\r\n          Constants.SURVEY_DATA_EVENT + \"-\" + self.surveyToken,\r\n          { detail: JSON.parse(JSON.stringify(surveyData)) }\r\n        );\r\n\r\n        document.dispatchEvent(event);\r\n        if (!self.config.skipWelcomePage) {\r\n          self.dom.hideLoader();\r\n        }\r\n        if (self.surveyData) {\r\n          self.initSurveyQuestions();\r\n        }\r\n      } else {\r\n        self.tracking.trackEvent(\r\n          \"Expired Survey\",\r\n          {\r\n            token: self.tracking.token,\r\n            data: {\r\n              name: null,\r\n              action: null,\r\n            },\r\n          },\r\n          null,\r\n          null\r\n        );\r\n        self.survey.displayWelcomeQuestion(\"The Survey has been expired\");\r\n      }\r\n    };\r\n    let errorcb = null;\r\n    this.survey.fetchQuestions(successcb, errorcb);\r\n  }\r\n\r\n  initSurvey() {\r\n    //if survey already run don't run?\r\n    //if default trigger initiated and survey already run then don't run.\r\n    let self: Survey = this;\r\n\r\n    self.surveyRunning = true;\r\n    self.dom = new DomSurvey(this);\r\n    self.dom.setTheme(\r\n      self.config.brandColor,\r\n      this.config.keepAlive ? this.config.keepAlive : 0\r\n    );\r\n    self.config.language = \"default\";\r\n    if (\r\n      self.surveyToken &&\r\n      decodeURIComponent(self.surveyToken).trim() !== \"\" &&\r\n      !self.config.skipWelcomePage\r\n    ) {\r\n      self.survey.displayWelcomeQuestion();\r\n    } else if (self.config.skipWelcomePage) {\r\n      let onImpressionEvent = new CustomEvent(\r\n        Constants.SURVEY_IMPRESSION_EVENT + \"-\" + this.surveyToken\r\n      );\r\n      document.dispatchEvent(onImpressionEvent);\r\n      self.dom.startSurvey();\r\n      self.survey.setCoolDownPeriod(self.config, self.surveyToken);\r\n      this.surveyStartTime = new Date();\r\n      self.survey.acceptAnswers();\r\n    }\r\n    self.dom.setupListeners();\r\n  }\r\n\r\n  initSurveyQuestions() {\r\n    let self: Survey = this;\r\n    self.survey.attachSurvey(this.surveyData);\r\n    self.config.language = \"default\";\r\n\r\n    this.dom.initSurveyDom();\r\n    let onSurveyStartEvent = new CustomEvent(\r\n      Constants.SURVEY_START_EVENT + \"-\" + this.surveyToken\r\n    );\r\n    document.dispatchEvent(onSurveyStartEvent);\r\n  }\r\n\r\n  public on(type: string, callback: any) {\r\n    document.addEventListener(type + \"-\" + this.surveyToken, function (e: any) {\r\n      callback(e.detail);\r\n    });\r\n  }\r\n\r\n  public show() {\r\n    //do show and hide things.\r\n    SurveyManager.setSurveyRunning();\r\n    //show survey\r\n    this.setupSurvey();\r\n  }\r\n\r\n  public hide() {\r\n    SurveyManager.unsetSurveyRunning();\r\n    this.survey.destroy();\r\n    this.tracking.trackEvent(\r\n      \"Survey Destroyed\",\r\n      {\r\n        token: this.tracking.token,\r\n        data: {\r\n          name: <any>new Date() - (<any>window).globalSurveyStartTime + \"s\",\r\n          action: null,\r\n        },\r\n      },\r\n      null,\r\n      null\r\n    );\r\n  }\r\n\r\n  public destroy() {\r\n    //remove all listeners?\r\n    SurveyManager.unsetSurveyRunning();\r\n    this.survey.destroy();\r\n  }\r\n\r\n  public prefill(restOfArgs: PrefillsBatchOrSingle, type: PrefillType) {\r\n    let prefillObject;\r\n    if (typeof restOfArgs[0] !== \"object\") {\r\n      prefillObject = {\r\n        [<string>restOfArgs[0]]: restOfArgs[1],\r\n      };\r\n    } else {\r\n      prefillObject = restOfArgs[0];\r\n    }\r\n    //save this in this.surveyHandler\r\n    if (type === \"DIRECT\") {\r\n      this.survey.fillPrefillDirect(prefillObject);\r\n    } else if (type === \"BY_TAG\") {\r\n      this.survey.fillPrefill(prefillObject);\r\n    } else if (type === \"BY_NOTE\") {\r\n      this.survey.fillPrefillByNote(prefillObject);\r\n    }\r\n\r\n    // map prefills from prefill buckets to prefillQueue\r\n    this.survey.filterQuestions();\r\n  }\r\n\r\n  public trigger(type: string, target: any) {\r\n    let self: Survey = this;\r\n    switch (type) {\r\n      case \"click\":\r\n        // console.log( 'enable click trigger ##' )\r\n        this.triggers.enableClickTrigger(target, function () {\r\n          SurveyManager.addSurvey(self.surveyToken);\r\n        });\r\n        break;\r\n      case \"page-count\":\r\n        let count: number = parseInt(target);\r\n        this.triggers.enablePageCountTrigger(count);\r\n\r\n        break;\r\n      case \"site-count\":\r\n        let count2: number = parseInt(target);\r\n        this.triggers.enableSiteCountTrigger(count2);\r\n        break;\r\n      case \"page-time\":\r\n        this.triggers.enablePageTimeTrigger(parseInt(target));\r\n        break;\r\n      case \"site-time\":\r\n        this.triggers.enableSiteTimeTrigger(parseInt(target));\r\n        break;\r\n      case \"url-match\":\r\n        this.triggers.enablePopUpByURLPatternTrigger(target);\r\n        break;\r\n      case \"url-not-match\":\r\n        this.triggers.enablePopUpByNotURLPatternTrigger(target);\r\n        break;\r\n      case \"utm-match\":\r\n        this.triggers.enablePopUpByUTMPatternTrigger(target);\r\n        break;\r\n      case \"scroll-pixels\":\r\n        this.triggers.enableScrollPixelsTrigger(parseInt(target));\r\n        break;\r\n      case \"launch\":\r\n        SurveyManager.addSurvey(self.surveyToken);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nexport { Survey };\r\n","// import 'whatwg-fetch';\r\nimport { Config } from \"./Config\";\r\nimport { DisplayConfig } from \"./interfaces/DisplayConfig\";\r\nimport { RequestHelper } from \"./helpers/Request\";\r\nimport { templates } from \"./helpers/templates\";\r\nimport { DomUtilities } from \"./helpers/dom/DomUtilities\";\r\nimport { DomSurvey } from \"./helpers/dom/DomSurvey\";\r\nimport { ConditionalTextFilter } from \"./helpers/filters/ConditionalTextFilter\";\r\nimport { Constants } from \"./Constants\";\r\nimport { LanguageTextFilter } from \"./helpers/filters/LanguageTextFilter\";\r\nimport { Select } from \"./helpers/dom/Select\";\r\nimport { Cookie } from \"./helpers/Cookie\";\r\nimport { ConditionalFlowFilter } from \"./helpers/filters/ConditionalFlowFilter\";\r\nimport { PrefillDictionary } from \"./types\";\r\nimport { start } from \"repl\";\r\nimport { LanguagesConfig } from \"./helpers/languagesConfig\";\r\n\r\nclass SurveyHandler {\r\n  surveyToken: string;\r\n  surveyData: any;\r\n  questions: any;\r\n  prefillQuestions: any;\r\n  questionsToDisplay: any;\r\n  randomNumber: Number;\r\n  welcomeQuestion: any;\r\n  welcomeQuestionButtonText: any;\r\n  prefillResponses: any;\r\n  prefillDirect: any;\r\n  prefillWithTags: any;\r\n  prefillWithNote: any;\r\n  questionResponses: any;\r\n  answers: any = {};\r\n  surveyAnswers: any = {};\r\n  util: DomUtilities;\r\n  languageConfig: LanguagesConfig;\r\n  dom: DomSurvey;\r\n  displayThankYouCb: any;\r\n  destroySurveyCb: any;\r\n  acceptAnswersCb: any;\r\n  surveyDisplay: DisplayConfig;\r\n  currentQuestion: any;\r\n  conditionalQuestions: any;\r\n  ccsdk: any;\r\n  welcomeInterval: any;\r\n  welcomeQuestionDisplayTime: any;\r\n  domListeners: any;\r\n  languageSelect: any;\r\n  private _prefillsPartiallyPosted = false;\r\n  // isPartialAvailable : Boolean;\r\n  retryPrefills = 3;\r\n\r\n  constructor(ccsdk) {\r\n    this.surveyToken = ccsdk.surveyToken;\r\n    this.surveyData = {};\r\n    this.surveyDisplay = {\r\n      position: \"\",\r\n      surveyPosition: \"\",\r\n      welcomePopupAnimation: \"\",\r\n      surveyPopupAnimation: \"\",\r\n    };\r\n    this.ccsdk = ccsdk;\r\n    this.domListeners = [];\r\n    this.questions = [];\r\n    this.questionsToDisplay = [];\r\n    this.prefillQuestions = [];\r\n    this.conditionalQuestions = [];\r\n    this.prefillResponses = [];\r\n    this.prefillWithTags = {};\r\n    this.prefillWithNote = {};\r\n    this.prefillDirect = {};\r\n    this.answers = {};\r\n    this.util = new DomUtilities();\r\n    this.languageConfig = new LanguagesConfig();\r\n    this.dom = ccsdk.dom;\r\n    this.displayThankYouCb = (e: any) => {\r\n      //perform final post\r\n      this.finalPost(null, null);\r\n      if (this.ccsdk && this.ccsdk.tracking) {\r\n        this.ccsdk.tracking.trackEvent(\r\n          \"Completed Survey\",\r\n          {\r\n            token: this.ccsdk.tracking.token,\r\n            data: {\r\n              name: null,\r\n              action: null,\r\n            },\r\n          },\r\n          null,\r\n          null\r\n        );\r\n      }\r\n\r\n      let thankyouHtml: any = templates.thankyou;\r\n      // thankyouHtml = thankyouHtml.replace(\"{{question}}\", this.surveyData.thankyouText);\r\n      // thankyouHtml = thankyouHtml.replace(\"{{question}}\", LanguageTextFilter.translateMessages(this, \"thankyouText\"));\r\n      let thankyouText = this.ccsdk.config.thankyouText\r\n        ? this.ccsdk.config.thankyouText\r\n        : this.surveyData.thankyouText\r\n        ? this.surveyData.thankyouText\r\n        : \"Thank You\";\r\n      let startText = this.ccsdk.config.startButtonText\r\n        ? this.ccsdk.config.startButtonText\r\n        : \"Start\";\r\n      thankyouHtml = thankyouHtml.replace(\"{{question}}\", thankyouText);\r\n      thankyouHtml = thankyouHtml.replace(\"{{button}}\", startText);\r\n      thankyouHtml = thankyouHtml.replace(\r\n        \"{{branding}}\",\r\n        this.surveyData.branding &&\r\n          this.surveyData.branding.toUpperCase() === \"NONE\"\r\n          ? \"no-branding\"\r\n          : \"full-branding\"\r\n      );\r\n      this.ccsdk.dom.replaceInQuestionsContainer(thankyouHtml);\r\n      //TODO : Fix this Add class not working???\r\n      let thankyouContainer: any = this.util.get(\"#cc-thankyou-container\");\r\n      (window as any).ccsdkDebug ? console.log(thankyouContainer) : \"\";\r\n      this.util.addClass(thankyouContainer[0], \"show-thankyou-slide\");\r\n      let onSurveyEndEvent = new CustomEvent(\r\n        Constants.SURVEY_END_EVENT + \"-\" + this.ccsdk.surveyToken\r\n      );\r\n      document.dispatchEvent(onSurveyEndEvent);\r\n      //set done cookie for 30 days.\r\n      Cookie.set(this.surveyToken + \"-finish\", \"true\", 30, \"/\");\r\n      setTimeout(() => {\r\n        this.ccsdk.dom.destroyListeners();\r\n        this.destroy();\r\n      }, 2000);\r\n    };\r\n\r\n    this.destroySurveyCb = (e: any) => {\r\n      let self: SurveyHandler = this;\r\n      //send end survey event.\r\n      let onSurveyEndEvent = new CustomEvent(\r\n        Constants.SURVEY_END_EVENT + \"-\" + this.ccsdk.surveyToken\r\n      );\r\n      document.dispatchEvent(onSurveyEndEvent);\r\n      self.destroy();\r\n    };\r\n\r\n    this.acceptAnswersCb = (e: any) => {\r\n      let self: SurveyHandler = this;\r\n      // (window as any).ccsdkDebug?console.log(self):'';\r\n      // (window as any).ccsdkDebug?console.log('question answered',e:'')\r\n      let data: any = <any>e.detail;\r\n      let response: any = {};\r\n      response.questionId = data.questionId;\r\n\r\n      switch (data.type) {\r\n        case \"scale\":\r\n          response.text = null;\r\n          response.number = Number(data.data.number);\r\n          self.postPartialAnswer(data.index, response, false, null, null);\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case \"nps\":\r\n          response.text = null;\r\n          response.number = Number(data.data.number);\r\n          self.postPartialAnswer(data.index, response, false, null, null);\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case \"radio\":\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          // response.number = Number(data.data.number);\r\n          self.postPartialAnswer(data.index, response, false, null, null);\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case \"radioImage\":\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          self.postPartialAnswer(data.index, response, false, null, null);\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case \"smile\":\r\n          response.text = null;\r\n          response.number = Number(data.data.number);\r\n          self.postPartialAnswer(data.index, response, false, null, null);\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case \"star\":\r\n          response.text = null;\r\n          response.number = Number(data.data.number);\r\n          self.postPartialAnswer(data.index, response, false, null, null);\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case \"multiline\":\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer(data.index, response, false, null, null);\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex(data.index);\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case \"singleline\":\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer(data.index, response, false, null, null);\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex(data.index);\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case \"number\":\r\n          response.text = null;\r\n          response.number = Number(data.data.number);\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer(data.index, response, false, null, null);\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex(data.index);\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case \"checkbox\":\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer(data.index, response, false, null, null);\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex(data.index);\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case \"select\":\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer(data.index, response, false, null, null);\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex(data.index);\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case \"slider\":\r\n          response.text = data.data.text;\r\n          response.number = Number(data.data.number);\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer(data.index, response, false, null, null);\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex(data.index);\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    };\r\n  }\r\n\r\n  fetchQuestions(successcb, errorcb) {\r\n    this.randomNumber = parseInt(String(Math.random() * 1000));\r\n    let surveyUrl = Config.SURVEY_BY_TOKEN.replace(\r\n      \"{token}\",\r\n      \"\" + this.surveyToken\r\n    );\r\n    // surveyUrl = surveyUrl.replace(\"{tabletId}\", \"\" + this.randomNumber);\r\n    surveyUrl = Config.API_URL + surveyUrl;\r\n    RequestHelper.get(surveyUrl, successcb, errorcb);\r\n\r\n    // (window as any).ccsdkDebug?console.log(data):'';\r\n    // this.surveyData = data.then(function();\r\n    // (window as any).ccsdkDebug?console.log(this.surveyData):'';\r\n  }\r\n\r\n  removeAnswer(questionId) {\r\n    delete this.answers[questionId];\r\n    delete this.surveyAnswers[questionId];\r\n  }\r\n\r\n  attachSurvey(surveyData: any) {\r\n    this.surveyData = surveyData;\r\n    this.setupPrefill();\r\n    this.setupSurveyContainer();\r\n    //clean survey\r\n    this.cleanSurvey();\r\n    this.displayQuestions();\r\n    this.displayThankYou();\r\n    this.destroySurvey();\r\n  }\r\n\r\n  setupPrefill() {\r\n    if (\r\n      this.surveyData &&\r\n      this.surveyData.preFill &&\r\n      this.surveyData.preFill.length > 0\r\n    ) {\r\n      this.surveyData.preFill.map((response) => {\r\n        this.fillPrefillQuestionObject(response.questionId, response);\r\n      });\r\n    }\r\n  }\r\n\r\n  cleanSurvey() {\r\n    this.questionsToDisplay = [];\r\n    this.answers = {};\r\n    this.surveyAnswers = {};\r\n    this.conditionalQuestions = [];\r\n  }\r\n\r\n  setupSurveyContainer() {\r\n    let surveyHtml: any = templates.question_survey;\r\n    surveyHtml = surveyHtml.replace(\"{{surveyToken}}\", this.surveyToken);\r\n    surveyHtml = surveyHtml.replace(\r\n      \"{{animation}}\",\r\n      this.surveyDisplay.surveyPopupAnimation\r\n    );\r\n    surveyHtml = surveyHtml.replace(\r\n      /{{location}}/g,\r\n      this.surveyDisplay.surveyPosition\r\n    );\r\n    this.ccsdk.dom.appendInBody(surveyHtml);\r\n  }\r\n\r\n  displayQuestionSelector() {}\r\n\r\n  displayWelcomeQuestion(warningWelcomeText?: string) {\r\n    //call this with true when welcome container is clicked.\r\n    // this.ccsdk.addThrottlingEntries(false);\r\n    let onSurveyImpressionEvent = new CustomEvent(\r\n      Constants.SURVEY_IMPRESSION_EVENT + \"-\" + this.surveyToken\r\n    );\r\n    document.dispatchEvent(onSurveyImpressionEvent);\r\n    this.ccsdk.surveyStartTime = new Date();\r\n    let self = this;\r\n    let welcomeHtml: any = templates.question_start;\r\n    welcomeHtml = welcomeHtml.replace(\"{{surveyToken}}\", this.surveyToken);\r\n    // welcomeHtml = welcomeHtml.replace(\"{{question}}\", this.surveyData.welcomeText);\r\n    let welcomeText = this.ccsdk.config.welcomeText\r\n      ? this.ccsdk.config.welcomeText\r\n      : \"Welcome\";\r\n    // welcomeHtml = welcomeHtml.replace(\"{{question}}\", LanguageTextFilter.translateMessages(this, \"welcomeText\"));\r\n    let startText = this.ccsdk.config.startButtonText\r\n      ? this.ccsdk.config.startButtonText\r\n      : \"Start\";\r\n    if (warningWelcomeText) {\r\n      document.getElementById(this.surveyToken + \"-welcome\").remove();\r\n      welcomeHtml = welcomeHtml.replace(\"{{question}}\", warningWelcomeText);\r\n      welcomeHtml = welcomeHtml.replace(\"{{button}}\", \"Close\");\r\n      welcomeHtml = welcomeHtml.replace(\"{{action}}\", \"button-close\");\r\n    } else {\r\n      welcomeHtml = welcomeHtml.replace(\"{{question}}\", welcomeText);\r\n      welcomeHtml = welcomeHtml.replace(\"{{button}}\", startText);\r\n      welcomeHtml = welcomeHtml.replace(\"{{action}}\", \"survey-start\");\r\n    }\r\n    welcomeHtml = welcomeHtml.replace(\r\n      \"{{location}}\",\r\n      this.surveyDisplay.position\r\n    );\r\n    welcomeHtml = welcomeHtml.replace(\r\n      \"{{animation}}\",\r\n      this.surveyDisplay.welcomePopupAnimation\r\n    );\r\n    // (window as any).ccsdkDebug?console.log(\"Appending in body\"):'';\r\n    this.ccsdk.dom.appendInBody(welcomeHtml);\r\n    this.ccsdk.dom.showWelcomeContainer();\r\n    this.setCoolDownPeriod(this.ccsdk.config, this.surveyToken);\r\n    if (\r\n      typeof this.ccsdk.config.keepAlive != undefined &&\r\n      this.ccsdk.config.keepAlive > 0\r\n    ) {\r\n      this.welcomeQuestionDisplayTime = new Date();\r\n      this.welcomeInterval = setInterval(() => {\r\n        self.checkWelcomeQuestionDisplay(self.ccsdk.config.keepAlive);\r\n      }, 1000);\r\n    }\r\n\r\n    this.acceptAnswers();\r\n    // self.survey.displayLanguageSelector();\r\n  }\r\n\r\n  setCoolDownPeriod(campaign, surveyToken) {\r\n    if (campaign && campaign.coolDownPeriod && campaign.coolDownPeriod != 0) {\r\n      Cookie.set(\r\n        surveyToken + \"-coolDown\",\r\n        \"true\",\r\n        campaign.coolDownPeriod / 86400,\r\n        \"/\"\r\n      );\r\n    } else {\r\n      Cookie.set(surveyToken + \"-coolDown\", \"true\", 1, \"/\");\r\n    }\r\n  }\r\n\r\n  checkWelcomeQuestionDisplay(keepAlive) {\r\n    let self = this;\r\n    let now = new Date();\r\n    if (keepAlive) {\r\n      // console.log((now.getTime() - this.welcomeQuestionDisplayTime.getTime()) / 1000);\r\n      if (\r\n        keepAlive <=\r\n        (now.getTime() - this.welcomeQuestionDisplayTime.getTime()) / 1000\r\n      ) {\r\n        self.killWelcomeQuestion();\r\n      }\r\n    }\r\n  }\r\n\r\n  killWelcomeQuestion() {\r\n    this.destroy();\r\n    clearInterval(this.welcomeInterval);\r\n  }\r\n  cancelKillWelcomeQuestion() {\r\n    clearInterval(this.welcomeInterval);\r\n  }\r\n\r\n  displayLanguageSelector() {\r\n    let self = this;\r\n    let options1: string;\r\n    let qId = \"languageSelector\";\r\n    let languageKeys = [\"default\"];\r\n    let languageTexts = [\"default\"];\r\n    let cTemplate1 = templates.language_selector;\r\n    options1 = this.util.generateLanguageSelectOptions(\r\n      languageKeys,\r\n      languageTexts\r\n    );\r\n    if (this.surveyData.translated) {\r\n      languageKeys = [\"default\"].concat(\r\n        Object.keys(this.surveyData.translated)\r\n      );\r\n      languageTexts = this.languageConfig.getLanguageText(languageKeys);\r\n      options1 = this.util.generateLanguageSelectOptions(\r\n        languageKeys,\r\n        languageTexts\r\n      );\r\n    }\r\n    cTemplate1 = cTemplate1.replace(/{{questionId}}/g, qId);\r\n    cTemplate1 = cTemplate1.replace(\"{{options}}\", options1);\r\n    cTemplate1 = cTemplate1.replace(\"{{requiredLabel}}\", true ? \"*\" : \"\");\r\n    this.ccsdk.dom.replaceInQuestionsContainer(cTemplate1);\r\n    let $questionContainer = document.querySelectorAll(\r\n      \".cc-questions-container\"\r\n    );\r\n    let $body = document.getElementsByTagName(\"body\")[0];\r\n\r\n    this.util.addClass($questionContainer[0].firstChild, \"show-slide\");\r\n    this.languageSelect = new Select(qId);\r\n    let submitBtn = document.querySelectorAll(\".submit-icon\");\r\n    this.util.removeClassAll(submitBtn, \"act-cc-button-next\");\r\n    this.util.addClassAll(submitBtn, \"act-cc-button-lang-next\");\r\n    if (this.languageSelect) {\r\n      this.languageSelect.destroyListeners();\r\n    }\r\n    this.languageSelect.init(qId);\r\n    let selectRes = \"\";\r\n    if (\r\n      this.util.checkIfListenerExists(\r\n        \"#\" + qId + \" .cc-select-options .cc-select-option\",\r\n        this.domListeners\r\n      )\r\n    ) {\r\n      // return;\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"display language select - previous listeners exists\")\r\n        : \"\";\r\n      this.removePrevListener(\r\n        \"#\" + qId + \" .cc-select-options .cc-select-option\"\r\n      );\r\n    }\r\n    let ref = this.util.initListener(\r\n      \"click\",\r\n      \"#\" + qId + \" .cc-select-options .cc-select-option\",\r\n      function () {\r\n        self.ccsdk.debug ? console.log(\"languageSelectOption\") : \"\";\r\n        let selectOpt = document.querySelectorAll(\r\n          \"#\" + qId + \" #sources\"\r\n        )[0] as HTMLSelectElement;\r\n        selectRes = selectOpt.value;\r\n      }\r\n    );\r\n    this.domListeners.push(ref);\r\n    ref.internalHandler = this.util.listener($body, ref.type, ref.id, ref.cb);\r\n\r\n    let languageSelect2 = this.util.initListener(\r\n      \"click\",\r\n      \".act-cc-button-lang-next\",\r\n      function () {\r\n        self.ccsdk.debug ? console.log(\"languageNext\") : \"\";\r\n        self.ccsdk.config.language = \"default\";\r\n        self.ccsdk.config.language = selectRes; //language selection from menu then show first question\r\n        //set config rtl or ltr\r\n\r\n        var languageQuestion = self.surveyData.questions.find(\r\n          (x) => x.questionTags && x.questionTags.indexOf(\"cc_language\") !== -1\r\n        );\r\n\r\n        if (languageQuestion) {\r\n          let selectLang = languageTexts[languageKeys.indexOf(selectRes)];\r\n          if (!selectLang || selectLang === \"default\") {\r\n            selectLang = \"English\";\r\n          }\r\n          self.fillPrefillQuestion(languageQuestion.id, selectLang, \"text\");\r\n        }\r\n        let isRTL = /[\\u0600-\\u06FF]/.test(selectRes);\r\n        self.ccsdk.config.textDirection = isRTL ? \"rtl\" : \"ltr\";\r\n        self.ccsdk.setHtmlTextDirection();\r\n        self.util.removeClassAll(submitBtn, \"act-cc-button-lang-next\");\r\n        self.util.addClassAll(submitBtn, \"act-cc-button-next\");\r\n        self.ccsdk.dom.loadFirstQuestion(); // this.loadFirstQuestion();\r\n        // self.postPrefillPartialAnswer( false, null, null );\r\n      }\r\n    );\r\n    this.domListeners.push(languageSelect2);\r\n\r\n    languageSelect2.internalHandler = this.util.listener(\r\n      $body,\r\n      languageSelect2.type,\r\n      languageSelect2.id,\r\n      languageSelect2.cb\r\n    );\r\n\r\n    // this.util.addClass(thankyouContainer[0], 'show-thankyou-slide');\r\n\r\n    // this.ccsdk.dom.appendInBody(cTemplate1);\r\n    // this.ccsdk.dom.showLanguageSelector();\r\n    (window as any).ccsdkDebug ? console.log(cTemplate1) : \"\";\r\n  }\r\n\r\n  displayThankYou() {\r\n    let self: SurveyHandler = this;\r\n    document.addEventListener(\"ccdone\", this.displayThankYouCb);\r\n  }\r\n\r\n  displayQuestions() {\r\n    //check question is supported, based on question types.\r\n    //filter pre fill questions.\r\n    this.questions = this.surveyData.questions;\r\n\r\n    // this.questionsToDisplay = (this.surveyData.questions as any[]).filter(this.filterQuestions);\r\n    this.filterQuestions();\r\n\r\n    let ccSurvey: any;\r\n    ccSurvey = document.getElementsByClassName(\"cc-questions-container\");\r\n    // ccSurvey = ccSurvey[0];\r\n    let surveyObject = ccSurvey[0];\r\n    // (window as any).ccsdkDebug?console.log(this.questionsToDisplay):'';\r\n    //chec\r\n    //for now just do 1st question.\r\n    for (let question of this.questionsToDisplay) {\r\n      if (this.checkConditionals(question)) {\r\n        let compiledTemplate = this.compileTemplate(question);\r\n        question.compiledTemplate = compiledTemplate;\r\n        // surveyObject.innerHTML += compiledTemplate;\r\n        //register handlers for onclick?\r\n      } else {\r\n        if (this.isPrefillQuestion(question)) {\r\n          this.prefillQuestions.push(question);\r\n        }\r\n      }\r\n      //else don't display it.\r\n    }\r\n    // (window as any).ccsdkDebug?console.log(surveyObject.innerHTML):'';\r\n    // this.postPartialAnswer(this.questionsToDisplay[0], \"test\");\r\n  }\r\n\r\n  getSurveyQuestions(): any {\r\n    return this.questionsToDisplay;\r\n  }\r\n\r\n  getAnswerForQuestionId(questionId: string) {\r\n    let answer = this.surveyAnswers[questionId];\r\n    if (typeof answer === \"undefined\") {\r\n      for (let response of this.prefillResponses) {\r\n        if (response.questionId == questionId) {\r\n          return response;\r\n        }\r\n      }\r\n    }\r\n    return this.surveyAnswers[questionId];\r\n  }\r\n\r\n  acceptAnswers() {\r\n    let self: SurveyHandler = this;\r\n    // (window as any).ccsdkDebug?console.log('add question answered listener':'')\r\n    document.addEventListener(\"q-answered\", this.acceptAnswersCb);\r\n  }\r\n\r\n  fillPrefillQuestionObject(id: any, response: any) {\r\n    let question: any = this.getQuestionById(id);\r\n    let responseStored = this.getPrefillResponseById(id);\r\n    if (responseStored != null) {\r\n      this.updatePrefillResponseById(id, response);\r\n    } else {\r\n      this.prefillResponses.push(response);\r\n    }\r\n  }\r\n\r\n  fillPrefill(prefillObj: PrefillDictionary) {\r\n    Object.keys(prefillObj).map((x) => {\r\n      this.prefillWithTags[x.toLowerCase()] = prefillObj[x];\r\n    });\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"prefillByTag\", this.prefillWithTags)\r\n      : \"\";\r\n\r\n    if (this._prefillsPartiallyPosted) {\r\n      this.postRecentPrefills();\r\n    }\r\n  }\r\n\r\n  fillPrefillByNote(prefillObj: PrefillDictionary) {\r\n    Object.keys(prefillObj).map((x) => {\r\n      this.prefillWithNote[x.toLowerCase()] = prefillObj[x];\r\n    });\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"prefillByNote\", this.prefillWithNote)\r\n      : \"\";\r\n\r\n    if (this._prefillsPartiallyPosted) {\r\n      this.postRecentPrefills();\r\n    }\r\n  }\r\n\r\n  fillPrefillDirect(prefillObj: PrefillDictionary) {\r\n    Object.keys(prefillObj).forEach((x) => {\r\n      this.prefillDirect[x] = prefillObj[x];\r\n    });\r\n\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"prefillDirect\", this.prefillDirect)\r\n      : \"\";\r\n\r\n    if (this._prefillsPartiallyPosted) {\r\n      this.postRecentPrefills();\r\n    }\r\n  }\r\n\r\n  // prepares for partial posting in the next chance\r\n  postRecentPrefills() {\r\n    // clear the post partial flag\r\n    this._prefillsPartiallyPosted = false;\r\n\r\n    this.filterQuestions();\r\n  }\r\n\r\n  fillPrefillQuestion(id: any, value: any, valueType: string) {\r\n    let question: any = this.getQuestionById(id);\r\n    let response: any;\r\n    let responseStored = this.getPrefillResponseById(id);\r\n    if (responseStored != null) {\r\n      response = responseStored;\r\n    } else {\r\n      response = {\r\n        questionId: question.id,\r\n        questionText: question.text,\r\n        textInput: null,\r\n        numberInput: null,\r\n      };\r\n    }\r\n    valueType = this.getAnswerTypeFromDisplayType(question.displayType);\r\n\r\n    if (valueType.toLowerCase() == \"number\") {\r\n      response.numberInput = value;\r\n    }\r\n    if (valueType.toLowerCase() == \"text\") {\r\n      response.textInput = value;\r\n    }\r\n    if (responseStored != null) {\r\n      this.updatePrefillResponseById(id, response);\r\n    } else {\r\n      this.prefillResponses.push(response);\r\n    }\r\n  }\r\n\r\n  postPrefillPartialAnswer(fullSubmission = false, successcb, errorcb) {\r\n    if (this._prefillsPartiallyPosted) {\r\n      return;\r\n    }\r\n    this._prefillsPartiallyPosted = true;\r\n    if (!this.surveyData.partialResponseId) {\r\n      return;\r\n    }\r\n    let surveyPartialUrl = Config.SURVEY_PARTIAL_RESPONSE.replace(\r\n      \"{id}\",\r\n      this.surveyData.partialResponseId\r\n    );\r\n    surveyPartialUrl = surveyPartialUrl.replace(\"{complete}\", \"false\");\r\n    surveyPartialUrl = Config.API_URL + surveyPartialUrl;\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"Posting Prefill Responses to Server\")\r\n      : \"\";\r\n    (window as any).ccsdkDebug ? console.log(this.prefillResponses) : \"\";\r\n\r\n    if (!this.surveyData.partialResponseId) {\r\n      // run successCB if there is one.\r\n      if (successcb) {\r\n        successcb();\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (\r\n      typeof this.prefillResponses === \"undefined\" ||\r\n      this.prefillResponses.length <= 0\r\n    ) {\r\n      this.filterQuestions();\r\n    }\r\n\r\n    if (this.prefillResponses.length !== 0) {\r\n      RequestHelper.postWithHeaders(\r\n        surveyPartialUrl,\r\n        this.prefillResponses,\r\n        {},\r\n        successcb,\r\n        errorcb\r\n      );\r\n    }\r\n  }\r\n\r\n  updatePrefillResponseById(id: any, resp: any) {\r\n    for (let response of this.prefillResponses) {\r\n      if (response.questionId == id) {\r\n        response = resp;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  getPrefillResponseById(id: any) {\r\n    return (\r\n      this.prefillResponses && this.prefillResponses.find((x) => x.id === id)\r\n    );\r\n  }\r\n\r\n  getQuestionById(id: any) {\r\n    return this.questions.find((x) => x.id === id);\r\n  }\r\n\r\n  postPrefillPartialAnswerWithRetry(complete = false) {\r\n    this.postPrefillPartialAnswer(\r\n      complete,\r\n      null,\r\n      this.retryPrefills > 0\r\n        ? () => {\r\n            this.retryPrefills -= 1;\r\n            this._prefillsPartiallyPosted = false;\r\n            this.postPrefillPartialAnswerWithRetry(complete);\r\n          }\r\n        : null\r\n    );\r\n  }\r\n\r\n  postPartialAnswer(\r\n    index: any,\r\n    response: any,\r\n    complete = false,\r\n    successcb,\r\n    errorcb\r\n  ) {\r\n    // this.postPrefillPartialAnswerWithRetry(complete);\r\n\r\n    let question: any = this.questionsToDisplay[index];\r\n    if (!question) {\r\n      return;\r\n    }\r\n    let data: any = {\r\n      questionId: question.id,\r\n      questionText: question.text,\r\n      textInput: response.text,\r\n      numberInput: response.number,\r\n    };\r\n\r\n    let surveyPartialUrl = Config.SURVEY_PARTIAL_RESPONSE.replace(\r\n      \"{id}\",\r\n      this.surveyData.partialResponseId\r\n    );\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\r\n          \"partial response\",\r\n          question.id ==\r\n            this.questionsToDisplay[this.questionsToDisplay.length - 1].id\r\n        )\r\n      : \"\";\r\n    surveyPartialUrl = surveyPartialUrl.replace(\"{complete}\", `${complete}`);\r\n    surveyPartialUrl = Config.API_URL + surveyPartialUrl;\r\n\r\n    //add partial answer to main answer\r\n    this.surveyAnswers[question.id] = data;\r\n\r\n    data = [data];\r\n\r\n    let onSurveyAnswerEvent = new CustomEvent(\r\n      Constants.SURVEY_ANSWER_EVENT + \"-\" + this.surveyToken\r\n    );\r\n    document.dispatchEvent(onSurveyAnswerEvent);\r\n\r\n    if (!this.surveyData.partialResponseId) {\r\n      // run success callback and return\r\n      if (successcb) {\r\n        successcb();\r\n      }\r\n      return;\r\n    }\r\n    // console.log(data);\r\n    if (this._prefillsPartiallyPosted) {\r\n      RequestHelper.postWithHeaders(\r\n        surveyPartialUrl,\r\n        data,\r\n        {},\r\n        successcb,\r\n        errorcb\r\n      );\r\n    } else {\r\n      if (\r\n        typeof this.prefillResponses === \"undefined\" ||\r\n        this.prefillResponses.length <= 0\r\n      ) {\r\n        this.filterQuestions();\r\n      }\r\n      let responses = [...this.prefillResponses, ...data];\r\n      this._prefillsPartiallyPosted = true;\r\n      if (this.prefillResponses.length !== 0) {\r\n        RequestHelper.postWithHeaders(\r\n          surveyPartialUrl,\r\n          responses,\r\n          {},\r\n          successcb,\r\n          errorcb\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  finalPost(successcb, errorcb) {\r\n    //last question\r\n    let postSurveyFinalUrl = Config.POST_SURVEY_FINAL.replace(\r\n      \"{tokenId}\",\r\n      this.ccsdk.surveyToken\r\n    );\r\n    postSurveyFinalUrl = Config.API_URL + postSurveyFinalUrl;\r\n    let answersAll = [];\r\n    // hack for partial flushing\r\n    let lastAnswer;\r\n\r\n    if (Object.keys(this.surveyAnswers).length == 0) {\r\n      return;\r\n    }\r\n    for (let answer in this.surveyAnswers) {\r\n      let response = this.surveyAnswers[answer];\r\n      if (\r\n        response &&\r\n        (response.textInput !== null || response.numberInput !== null)\r\n      ) {\r\n        answersAll.push(response);\r\n        lastAnswer = response;\r\n      }\r\n    }\r\n    for (let answer in this.prefillResponses) {\r\n      answersAll.push(this.prefillResponses[answer]);\r\n    }\r\n\r\n    answersAll = answersAll.filter((x) => x && typeof x === \"object\");\r\n\r\n    let timeAtPost = new Date().getTime();\r\n    let finalData = {\r\n      id: this.ccsdk.surveyToken,\r\n      user: this.ccsdk.config.username,\r\n      locationId: null,\r\n      responses: answersAll,\r\n      nps: 0,\r\n      surveyClient: Constants.SURVEY_CLIENT,\r\n      responseDuration: Math.floor(\r\n        (timeAtPost - this.ccsdk.surveyStartTime.getTime()) / 1000\r\n      ),\r\n      responseDateTime: new Date(),\r\n    };\r\n    if (lastAnswer) {\r\n      let _lastAnswer = {\r\n        text: lastAnswer.textInput,\r\n        number: lastAnswer.numberInput,\r\n      };\r\n      this.postPartialAnswer(\r\n        this.questionsToDisplay.length - 1,\r\n        _lastAnswer,\r\n        true,\r\n        null,\r\n        null\r\n      );\r\n    }\r\n\r\n    if (finalData.responses && finalData.responses.length > 0) {\r\n      RequestHelper.postWithHeaders(\r\n        postSurveyFinalUrl,\r\n        finalData,\r\n        {},\r\n        successcb,\r\n        errorcb\r\n      );\r\n    } else {\r\n      successcb();\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * check if conditions are satsified which are required to display question?\r\n   *\r\n   * @param {any} question\r\n   * @memberof Survey\r\n   */\r\n  checkConditionals(question: any) {\r\n    return true;\r\n  }\r\n\r\n  compileTemplate(question: any) {\r\n    let self: SurveyHandler = this;\r\n    //get question type\r\n    let questionTemplate;\r\n    // (window as any).ccsdkDebug?console.log(question):'';\r\n    if (question != \"undefined\") {\r\n      switch (question.displayType) {\r\n        case \"Slider\":\r\n          let displayLegend = question.displayLegend;\r\n          let opt: any = question.multiSelect[0].split(\"-\");\r\n          let optMin: any = opt[0].split(\";\");\r\n          let optMax: any = opt[1].split(\";\");\r\n          //get text question template and compile it.\r\n          questionTemplate = templates.question_slider;\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{question}}\",\r\n            ConditionalTextFilter.filterText(this, question)\r\n          );\r\n          questionTemplate = questionTemplate.replace(/{{min}}/g, optMin[0]);\r\n          if (displayLegend[0]) {\r\n            questionTemplate = questionTemplate.replace(\r\n              /{{minLabel}}/g,\r\n              displayLegend[0] + \"-\"\r\n            );\r\n          } else {\r\n            questionTemplate = questionTemplate.replace(/{{minLabel}}/g, \"\");\r\n          }\r\n          questionTemplate = questionTemplate.replace(/{{max}}/g, optMax[0]);\r\n          if (displayLegend[1]) {\r\n            questionTemplate = questionTemplate.replace(\r\n              /{{maxLabel}}/g,\r\n              displayLegend[1] + \"-\"\r\n            );\r\n          } else {\r\n            questionTemplate = questionTemplate.replace(/{{maxLabel}}/g, \"\");\r\n          }\r\n          questionTemplate = questionTemplate.replace(\r\n            /{{questionId}}/g,\r\n            \"id\" + question.id\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{isRequired}}\",\r\n            question.isRequired ? \"true\" : \"false\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{requiredLabel}}\",\r\n            question.isRequired ? \"*\" : \"\"\r\n          );\r\n          break;\r\n        case \"Scale\":\r\n          //get text question template and compile it.\r\n          var middleBlock = 0;\r\n          var endBlock = 0;\r\n          let dimension;\r\n          (window as any).ccsdkDebug ? console.log(question.questionTags) : \"\";\r\n          if (question.questionTags.indexOf(\"NPS\") !== -1) {\r\n            questionTemplate = templates.question_nps;\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{question}}\",\r\n              ConditionalTextFilter.filterText(this, question)\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              /{{questionId}}/g,\r\n              \"id\" + question.id\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{isRequired}}\",\r\n              question.isRequired ? \"true\" : \"false\"\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{requiredLabel}}\",\r\n              question.isRequired ? \"*\" : \"\"\r\n            );\r\n          } else if (question.questionTags.indexOf(\"CSAT\") !== -1) {\r\n            if (question.questionTags.indexOf(\"csat_satisfaction_5\") !== -1) {\r\n              questionTemplate = templates.question_csat_satisfaction_5;\r\n            } else if (\r\n              question.questionTags.indexOf(\"csat_agreement_5\") !== -1\r\n            ) {\r\n              questionTemplate = templates.question_csat_agreement_5;\r\n            }\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{question}}\",\r\n              ConditionalTextFilter.filterText(this, question)\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              /{{questionId}}/g,\r\n              \"id\" + question.id\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{isRequired}}\",\r\n              question.isRequired ? \"true\" : \"false\"\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{requiredLabel}}\",\r\n              question.isRequired ? \"*\" : \"\"\r\n            );\r\n          } else {\r\n            let tileColor = \"\";\r\n            let style = \"\";\r\n            if (\r\n              question.attributes != null &&\r\n              question.attributes.scaleColor &&\r\n              question.attributes.scaleColor.length > 0\r\n            ) {\r\n              if (question.attributes.scaleColor !== \"Gradient\") {\r\n                tileColor = question.attributes.scaleColor;\r\n              } else {\r\n                tileColor = \"#02BAEE\";\r\n              }\r\n            } else if (\r\n              question.presentationMode != null &&\r\n              question.presentationMode.indexOf(\"Color\") !== -1\r\n            ) {\r\n              tileColor = question.presentationMode.split(\":\")[1];\r\n            }\r\n            if (tileColor.length > 0) {\r\n              let tileColorDark = this.util.shadeBlendConvert(\r\n                -0.3,\r\n                tileColor,\r\n                undefined\r\n              );\r\n              style =\r\n                \"\\\r\n                <style>\\\r\n                #id\" +\r\n                question.id +\r\n                \" .option-number-item.option-scale{\\\r\n                  background-color : \" +\r\n                tileColor +\r\n                \";\\\r\n                }\\\r\n                #id\" +\r\n                question.id +\r\n                \" .option-number-item.option-scale:hover,\\\r\n                #id\" +\r\n                question.id +\r\n                \" .option-number-item.option-scale.selected{\\\r\n                  background-color : \" +\r\n                tileColorDark +\r\n                \";\\\r\n                }\\\r\n                </style>\\\r\n              \";\r\n            }\r\n\r\n            questionTemplate = templates.question_scale;\r\n            questionTemplate = questionTemplate.replace(/{{style}}/g, style);\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{question}}\",\r\n              ConditionalTextFilter.filterText(this, question)\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              /{{questionId}}/g,\r\n              \"id\" + question.id\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{isRequired}}\",\r\n              question.isRequired ? \"true\" : \"false\"\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{requiredLabel}}\",\r\n              question.isRequired ? \"*\" : \"\"\r\n            );\r\n            //construct NPS scale here....\r\n\r\n            let startRange = 0.0;\r\n            let endRange = 10.0;\r\n            let options = \"\";\r\n            let startRangeLabel = \"\";\r\n            // let startRangeLabel = \"\";\r\n            // let endRangeLabel = \"Very likely\";\r\n            let endRangeLabel = \"\";\r\n            let midRangeLabel = \"\";\r\n\r\n            if (\r\n              question.questionTags.indexOf(\"ces_agree_5\") !== -1 ||\r\n              question.questionTags.indexOf(\"ces_agree_7\") !== -1\r\n            ) {\r\n              startRangeLabel = \"Strongly Disagree\";\r\n              endRangeLabel = \"Strongly Agree\";\r\n              if (question.questionTags.indexOf(\"ces_agree_7\") !== -1) {\r\n                midRangeLabel = \"Somewhat Agree\";\r\n                middleBlock = 2;\r\n              }\r\n            } else if (\r\n              question.questionTags.indexOf(\"ces_effort_5\") !== -1 ||\r\n              question.questionTags.indexOf(\"ces_effort_7\") !== -1\r\n            ) {\r\n              startRangeLabel = \"High Effort\";\r\n              endRangeLabel = \"Low Effort\";\r\n              if (question.questionTags.indexOf(\"ces_effort_7\") !== -1) {\r\n                midRangeLabel = \"Moderate Effort\";\r\n                middleBlock = 0;\r\n              }\r\n            } else if (question.anchorMetricName != null) {\r\n              let metricName = question.anchorMetricName;\r\n              let customMetric = this.surveyData.customMetrics[metricName];\r\n              let optionsLength = customMetric.optionCategories.length;\r\n              startRangeLabel = customMetric.optionCategories[0].label;\r\n              if (optionsLength > 2) {\r\n                midRangeLabel = customMetric.optionCategories[1].label;\r\n                let middleRange = customMetric.optionCategories[1].categoryRange.split(\r\n                  \",\"\r\n                );\r\n                middleBlock =\r\n                  parseInt(middleRange[1], 10) -\r\n                  parseInt(middleRange[0], 10) +\r\n                  1;\r\n              } else {\r\n                midRangeLabel = null;\r\n              }\r\n              endRangeLabel =\r\n                customMetric.optionCategories[optionsLength - 1].label;\r\n\r\n              let endRange = customMetric.optionCategories[\r\n                optionsLength - 1\r\n              ].categoryRange.split(\",\");\r\n              endBlock =\r\n                parseInt(endRange[1], 10) - parseInt(endRange[0], 10) + 1;\r\n            }\r\n\r\n            let displayLegend = LanguageTextFilter.translateDisplayLegend(\r\n              this,\r\n              question\r\n            );\r\n            if (displayLegend) {\r\n              if (displayLegend.length > 0) {\r\n                startRangeLabel = displayLegend[0] ? displayLegend[0] : null;\r\n                endRangeLabel = displayLegend[1] ? displayLegend[1] : null;\r\n              }\r\n            }\r\n            if (question.multiSelect.length > 0) {\r\n              startRange = parseFloat(question.multiSelect[0].split(\"-\")[0]);\r\n              if (startRangeLabel == null) {\r\n                startRangeLabel = question.multiSelect[0]\r\n                  .split(\"-\")[0]\r\n                  .split(\";\")[1];\r\n              }\r\n              endRange = parseFloat(question.multiSelect[0].split(\"-\")[1]);\r\n              if (endRangeLabel == null) {\r\n                endRangeLabel = question.multiSelect[0]\r\n                  .split(\"-\")[1]\r\n                  .split(\";\")[1];\r\n              }\r\n            }\r\n            startRangeLabel = startRangeLabel == null ? \"\" : startRangeLabel;\r\n            endRangeLabel = endRangeLabel == null ? \"\" : endRangeLabel;\r\n            let mobileImageUrl = \"\";\r\n            let imageVisibility010 = \"hide\";\r\n            let imageVisibility110 = \"hide\";\r\n            let scaleVisibility = \"show-inline\";\r\n            let scaleImageContainer = \"\";\r\n            if (\r\n              startRange == 0 &&\r\n              endRange == 10 &&\r\n              question.anchorMetricName === null\r\n            ) {\r\n              mobileImageUrl =\r\n                \"https://cx.getcloudcherry.com/microsurvey-assets/scale-0-10-neutral.svg\";\r\n              imageVisibility010 = \"show\";\r\n              imageVisibility110 = \"hide\";\r\n              scaleVisibility = \"hide\";\r\n              scaleImageContainer = \"scale-image-container\";\r\n            } else if (\r\n              startRange == 1 &&\r\n              endRange == 10 &&\r\n              question.anchorMetricName === null\r\n            ) {\r\n              mobileImageUrl =\r\n                \"https://cx.getcloudcherry.com/microsurvey-assets/scale-1-10-neutral.svg\";\r\n              imageVisibility010 = \"hide\";\r\n              imageVisibility110 = \"show\";\r\n              scaleVisibility = \"hide\";\r\n              scaleImageContainer = \"scale-image-container\";\r\n            }\r\n            // console.log('scale', startRange, endRange);\r\n            let divider: any = 1;\r\n            if (endRange < 11) {\r\n            } else {\r\n              divider = (endRange - startRange) / 10.0;\r\n            }\r\n            let initial = 0.0;\r\n            let optionStyle = \"\";\r\n            let legendDimension;\r\n            if ((window as any).isMobile) {\r\n              if (endRange < 11) {\r\n                let parentContainer = window.innerWidth - 40;\r\n                dimension =\r\n                  ((100 / (endRange - startRange + 1) - 0.5) *\r\n                    parentContainer) /\r\n                  100;\r\n                dimension = dimension > 48 ? 48 : dimension;\r\n                legendDimension = (endRange - startRange + 1) * (dimension + 1);\r\n                optionStyle = `width:${dimension}px;height:${dimension}px;padding:${\r\n                  (dimension - 15) / 2\r\n                }px;`;\r\n              }\r\n            } else {\r\n              imageVisibility010 = \"hide\";\r\n              imageVisibility110 = \"hide\";\r\n              scaleVisibility = \"show-inline\";\r\n              scaleImageContainer = \"\";\r\n              mobileImageUrl = \"\";\r\n            }\r\n            var leftWidth;\r\n            if (question.questionTags.indexOf(\"CES\") !== -1) {\r\n              if ((window as any).isMobile) {\r\n                leftWidth = dimension * 3 + \"px\";\r\n              } else {\r\n                leftWidth = 38 * 3 + \"px\";\r\n              }\r\n              for (\r\n                let initial = startRange;\r\n                initial <= endRange;\r\n                initial += divider\r\n              ) {\r\n                options +=\r\n                  '<span data-rating=\"' +\r\n                  initial +\r\n                  '\" class=\"option-number-item option-' +\r\n                  endRange +\r\n                  \"-scale-\" +\r\n                  initial +\r\n                  \" \" +\r\n                  scaleVisibility +\r\n                  '\" style=\"' +\r\n                  optionStyle +\r\n                  '\">' +\r\n                  initial +\r\n                  \"</span>\";\r\n              }\r\n            } else if (question.anchorMetricName != null) {\r\n              let metricName = question.anchorMetricName;\r\n              let customMetric = this.surveyData.customMetrics[metricName];\r\n\r\n              var cmwidthstart = customMetric.optionCategories[0].categoryRange.split(\r\n                \",\"\r\n              )[0];\r\n              var cmwidthend = customMetric.optionCategories[1].categoryRange.split(\r\n                \",\"\r\n              )[0];\r\n\r\n              if ((window as any).isMobile) {\r\n                leftWidth =\r\n                  (dimension + 1) * (cmwidthend - cmwidthstart) - 0.5 + \"px\";\r\n              } else {\r\n                leftWidth = (cmwidthend - cmwidthstart) * 39 + \"px\";\r\n              }\r\n\r\n              for (\r\n                let iterator = 0;\r\n                iterator < customMetric.optionCategories.length;\r\n                iterator++\r\n              ) {\r\n                let startRange = parseFloat(\r\n                  customMetric.optionCategories[iterator].categoryRange.split(\r\n                    \",\"\r\n                  )[0]\r\n                );\r\n                let endRange = parseFloat(\r\n                  customMetric.optionCategories[iterator].categoryRange.split(\r\n                    \",\"\r\n                  )[1]\r\n                );\r\n\r\n                imageVisibility010 = \"hide\";\r\n                imageVisibility110 = \"hide\";\r\n                scaleVisibility = \"show-inline\";\r\n                scaleImageContainer = \"\";\r\n                mobileImageUrl = \"\";\r\n\r\n                for (\r\n                  let initial = startRange;\r\n                  initial <= endRange;\r\n                  initial += divider\r\n                ) {\r\n                  options +=\r\n                    '<span data-rating=\"' +\r\n                    initial +\r\n                    '\" class=\"option-number-item option-scale\"' +\r\n                    scaleVisibility +\r\n                    '\" style=\"background:' +\r\n                    customMetric.optionCategories[iterator].color +\r\n                    \";\" +\r\n                    optionStyle +\r\n                    ';\">' +\r\n                    initial +\r\n                    \"</span>\";\r\n                }\r\n              }\r\n              if (!(window as any).isMobile) {\r\n                legendDimension = (endRange - startRange + 1) * 39;\r\n              }\r\n            } else {\r\n              for (\r\n                let initial = startRange;\r\n                initial <= endRange;\r\n                initial += divider\r\n              ) {\r\n                options +=\r\n                  '<span data-rating=\"' +\r\n                  initial +\r\n                  '\" class=\"option-number-item option-scale ' +\r\n                  scaleVisibility +\r\n                  '\" style=\"' +\r\n                  optionStyle +\r\n                  '\">' +\r\n                  initial +\r\n                  \"</span>\";\r\n              }\r\n              if (!(window as any).isMobile) {\r\n                legendDimension = (endRange - startRange + 1) * 39;\r\n              }\r\n            }\r\n\r\n            if (endRange - startRange + 1 <= 11) {\r\n              var optionLeftExtraClass =\r\n                \"option-left-rating-text-small-container\";\r\n              var optionMidExtraClass =\r\n                \"option-mid-rating-text-small-container\";\r\n              var optionRightExtraClass =\r\n                \"option-right-rating-text-small-container\";\r\n              var optionMaxWidth = ((endRange - startRange + 1) * 38) / 2 - 5;\r\n              // console.log(optionMaxWidth);\r\n            }\r\n\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{legendStyle}}\",\r\n              `style=\"position:relative;width:${\r\n                mobileImageUrl ? \"100%\" : legendDimension + \"px\"\r\n              };min-height: 20px;\"`\r\n            );\r\n\r\n            questionTemplate = questionTemplate.replace(\r\n              /\\{\\{radialLegend\\}\\}/g,\r\n              mobileImageUrl ? \"radial-legend\" : \"unknown-class\"\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{optionsRange}}\",\r\n              options\r\n            );\r\n\r\n            questionTemplate = questionTemplate.replace(\r\n              /maxWidthMiddle/g,\r\n              mobileImageUrl\r\n                ? \"35%;width:35%\"\r\n                : midRangeLabel && dimension\r\n                ? dimension * middleBlock + \"px\"\r\n                : 38 * middleBlock + \"px\"\r\n            );\r\n            // questionTemplate = questionTemplate.replace(\"{{maxWidth}}\", optionMaxWidth);\r\n            questionTemplate = questionTemplate.replace(\r\n              /maxWidthEnd/g,\r\n              mobileImageUrl\r\n                ? \"35%;width:35%\"\r\n                : endBlock && dimension\r\n                ? dimension * endBlock + \"px\"\r\n                : endBlock\r\n                ? endBlock * 38 + \"px\"\r\n                : optionMaxWidth + \"px\"\r\n            );\r\n\r\n            questionTemplate = questionTemplate.replace(\r\n              /maxWidth/g,\r\n              mobileImageUrl ? \"35%;width:35%\" : optionMaxWidth + \"px\"\r\n            );\r\n\r\n            questionTemplate = questionTemplate.replace(\r\n              /leftWidth/g,\r\n              leftWidth\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              /{{optionLeftExtraClass}}/g,\r\n              optionLeftExtraClass\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              /{{optionMidExtraClass}}/g,\r\n              optionMidExtraClass\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              /{{optionRightExtraClass}}/g,\r\n              optionRightExtraClass\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{leftLabel}}\",\r\n              startRangeLabel\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{midLabel}}\",\r\n              midRangeLabel || \"\"\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{rightLabel}}\",\r\n              endRangeLabel\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              /{{mobileImageUrl}}/g,\r\n              mobileImageUrl\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{imageVisibility010}}\",\r\n              imageVisibility010\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{imageVisibility110}}\",\r\n              imageVisibility110\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{scaleImageContainer}}\",\r\n              scaleImageContainer\r\n            );\r\n          }\r\n\r\n          break;\r\n        case \"Text\":\r\n          //get text question template and compile it.\r\n          questionTemplate = templates.question_text;\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{question}}\",\r\n            ConditionalTextFilter.filterText(this, question)\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            /{{questionId}}/g,\r\n            \"id\" + question.id\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{isRequired}}\",\r\n            question.isRequired ? \"true\" : \"false\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{requiredLabel}}\",\r\n            question.isRequired ? \"*\" : \"\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{validationHint}}\",\r\n            question.validationHint ? question.validationHint : \"\"\r\n          );\r\n\r\n          break;\r\n        case \"Number\":\r\n          //get text question template and compile it.\r\n          questionTemplate = templates.question_number;\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{question}}\",\r\n            ConditionalTextFilter.filterText(this, question)\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            /{{questionId}}/g,\r\n            \"id\" + question.id\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{isRequired}}\",\r\n            question.isRequired ? \"true\" : \"false\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{requiredLabel}}\",\r\n            question.isRequired ? \"*\" : \"\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{validationHint}}\",\r\n            question.validationHint ? question.validationHint : \"\"\r\n          );\r\n          break;\r\n\r\n        case \"Date\":\r\n          questionTemplate = templates.question_date;\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{question}}\",\r\n            ConditionalTextFilter.filterText(this, question)\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            /{{questionId}}/g,\r\n            \"id\" + question.id\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{isRequired}}\",\r\n            question.isRequired ? \"true\" : \"false\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{requiredLabel}}\",\r\n            question.isRequired ? \"*\" : \"\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{validationHint}}\",\r\n            question.validationHint ? question.validationHint : \"\"\r\n          );\r\n          break;\r\n\r\n        case \"MultilineText\":\r\n          //get text question template and compile it.\r\n          questionTemplate = templates.question_multi_line_text;\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{question}}\",\r\n            ConditionalTextFilter.filterText(this, question)\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            /{{questionId}}/g,\r\n            \"id\" + question.id\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{isRequired}}\",\r\n            question.isRequired ? \"true\" : \"false\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{requiredLabel}}\",\r\n            question.isRequired ? \"*\" : \"\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{characterLimit}}\",\r\n            question.attributes && question.attributes.characterLimit\r\n              ? question.attributes.characterLimit\r\n              : \"\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{validationHint}}\",\r\n            question.validationHint ? question.validationHint : \"\"\r\n          );\r\n          break;\r\n\r\n        case \"MultiSelect\":\r\n          let acTemplate: string;\r\n          let multiSelect1;\r\n          //get text question template and compile it.\r\n          multiSelect1 = Array.prototype.slice.call(\r\n            LanguageTextFilter.translateMultiSelect(this, question)\r\n          );\r\n          if (question.presentationMode == \"Invert\") {\r\n            // console.log('selection option before reverse', multiSelect1);\r\n            multiSelect1.reverse();\r\n            // console.log('selection option after reverse', multiSelect1);\r\n            // console.log('selection api option', question.multiSelect);\r\n          }\r\n          //get text question template and compile it.\r\n          if (\r\n            (question.displayStyle == \"radiobutton/checkbox\" ||\r\n              question.displayStyle == \"icon\") &&\r\n            multiSelect1.length < 6\r\n          ) {\r\n            // (window as any).ccsdkDebug?console.log(question.displayStyle):'';\r\n            let checkOptionContainsImage: boolean = self.util.checkOptionContainsImage(\r\n              multiSelect1\r\n            );\r\n            // (window as any).ccsdkDebug?console.log('select radio image',checkOptionContainsImage):'';\r\n            if (\r\n              checkOptionContainsImage &&\r\n              ((multiSelect1.length > 0 &&\r\n                multiSelect1[0].indexOf(\"Male\") !== -1) ||\r\n                (multiSelect1.length > 0 &&\r\n                  multiSelect1[0].indexOf(\"Yes\") !== -1) ||\r\n                (multiSelect1.length > 1 &&\r\n                  multiSelect1[1].indexOf(\"Yes\") !== -1))\r\n            ) {\r\n              // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n              acTemplate = templates.question_checkbox;\r\n              let options2 = self.util.generateCheckboxImageOptions(\r\n                question.multiSelect,\r\n                multiSelect1,\r\n                question.id\r\n              );\r\n              // (window as any).ccsdkDebug?console.log(options2):'';\r\n              questionTemplate = acTemplate;\r\n              questionTemplate = questionTemplate.replace(\r\n                /{{options}}/g,\r\n                options2\r\n              );\r\n              acTemplate = questionTemplate;\r\n            } else if (checkOptionContainsImage) {\r\n              // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n              acTemplate = templates.question_checkbox;\r\n              let options2 = self.util.generateCheckboxIgnoreImageOptions(\r\n                question.multiSelect,\r\n                multiSelect1,\r\n                question.id\r\n              );\r\n              // (window as any).ccsdkDebug?console.log(options2):'';\r\n              questionTemplate = acTemplate;\r\n              questionTemplate = questionTemplate.replace(\r\n                /{{options}}/g,\r\n                options2\r\n              );\r\n              acTemplate = questionTemplate;\r\n            } else {\r\n              let options3: string = self.util.generateCheckboxOptions(\r\n                question.multiSelect,\r\n                multiSelect1,\r\n                question.id\r\n              );\r\n              // (window as any).ccsdkDebug?console.log(options2):'';\r\n              acTemplate = templates.question_checkbox;\r\n              questionTemplate = acTemplate.replace(/{{options}}/g, options3);\r\n              acTemplate = questionTemplate;\r\n            }\r\n          } else {\r\n            // (window as any).ccsdkDebug?console.log('select type 3'):'';\r\n            acTemplate = templates.question_multi_select;\r\n\r\n            // acTemplate = templates.question_select;\r\n            let options3 = self.util.generateSelectOptions(\r\n              question.multiSelect,\r\n              multiSelect1\r\n            );\r\n\r\n            if (self.ccsdk.config.language.indexOf(\"Default\") === -1) {\r\n              if (\r\n                typeof question.translated !== \"undefined\" &&\r\n                question.translated != null &&\r\n                typeof question.translated[self.ccsdk.config.language] !==\r\n                  \"undefined\" &&\r\n                question.translated[self.ccsdk.config.language].multiSelect !==\r\n                  \"undefined\" &&\r\n                question.translated[self.ccsdk.config.language].multiSelect\r\n                  .length > 0\r\n              ) {\r\n                multiSelect1 = Array.prototype.slice.call(\r\n                  question.translated[self.ccsdk.config.language].multiSelect\r\n                );\r\n                if (question.presentationMode == \"Invert\") {\r\n                  multiSelect1.reverse();\r\n                }\r\n                options3 = self.util.generateSelectOptions(\r\n                  question.multiSelect,\r\n                  multiSelect1\r\n                );\r\n              }\r\n            }\r\n            // questionTemplate = acTemplate;\r\n            self.ccsdk.debug ? console.log(options3) : \"\";\r\n            questionTemplate = acTemplate.replace(/{{options}}/g, options3);\r\n            acTemplate = questionTemplate;\r\n          }\r\n          questionTemplate = acTemplate;\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{question}}\",\r\n            ConditionalTextFilter.filterText(this, question)\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            /{{questionId}}/g,\r\n            \"id\" + question.id\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{isRequired}}\",\r\n            question.isRequired ? \"true\" : \"false\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{requiredLabel}}\",\r\n            question.isRequired ? \"*\" : \"\"\r\n          );\r\n\r\n          break;\r\n        case \"Select\":\r\n          let acTemplate1: string;\r\n          let acTemplate2: string;\r\n          let options1: string;\r\n          let options2: string;\r\n          let multiSelect;\r\n          //get text question template and compile it.\r\n          multiSelect = Array.prototype.slice.call(\r\n            LanguageTextFilter.translateMultiSelect(this, question)\r\n          );\r\n          let invertedMultiSelect;\r\n          if (question.presentationMode == \"Invert\") {\r\n            // console.log('selection option before reverse', multiSelect);\r\n            invertedMultiSelect = question.multiSelect\r\n              ? question.multiSelect.slice().reverse()\r\n              : [];\r\n            multiSelect.reverse();\r\n            // console.log('selection option after reverse', multiSelect);\r\n            // console.log('selection api option', question.multiSelect);\r\n          } else {\r\n            invertedMultiSelect = question.multiSelect;\r\n          }\r\n          if (\r\n            question.displayStyle == \"radiobutton/checkbox\" &&\r\n            multiSelect.length < 6\r\n          ) {\r\n            // if(question.displayStyle == 'radiobutton/checkbox'){\r\n            // (window as any).ccsdkDebug?console.log('select type 1'):'';\r\n            // (window as any).ccsdkDebug?console.log(question.displayStyle):'';\r\n            // acTemplate1 = templates.question_radio;\r\n            // questionTemplate = acTemplate1;\r\n\r\n            let checkOptionContainsImage: boolean = self.util.checkOptionContainsImage(\r\n              multiSelect\r\n            );\r\n            (window as any).ccsdkDebug\r\n              ? console.log(\"select radio image\", checkOptionContainsImage)\r\n              : \"\";\r\n            if (\r\n              checkOptionContainsImage &&\r\n              ((multiSelect.length > 0 &&\r\n                multiSelect[0].indexOf(\"Male\") !== -1) ||\r\n                (multiSelect.length > 0 &&\r\n                  multiSelect[0].indexOf(\"Yes\") !== -1) ||\r\n                (multiSelect.length > 1 &&\r\n                  multiSelect[1].indexOf(\"Yes\") !== -1))\r\n            ) {\r\n              // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n              acTemplate2 = templates.question_radio_image;\r\n\r\n              options2 = self.util.generateRadioImageOptions(\r\n                invertedMultiSelect,\r\n                multiSelect,\r\n                question.id\r\n              );\r\n              (window as any).ccsdkDebug ? console.log({ options2 }) : \"\";\r\n              questionTemplate = acTemplate2;\r\n              questionTemplate = questionTemplate.replace(\r\n                /{{options}}/g,\r\n                options2\r\n              );\r\n            } else if (checkOptionContainsImage) {\r\n              // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n              acTemplate2 = templates.question_radio_image;\r\n              options2 = self.util.generateRadioIgnoreImageOptions(\r\n                invertedMultiSelect,\r\n                multiSelect,\r\n                question.id\r\n              );\r\n              // (window as any).ccsdkDebug?console.log(options2):'';\r\n              // console.log(options2, 'radio2');\r\n\r\n              questionTemplate = acTemplate2;\r\n              questionTemplate = questionTemplate.replace(\r\n                /{{options}}/g,\r\n                options2\r\n              );\r\n            } else {\r\n              acTemplate1 = templates.question_radio;\r\n              questionTemplate = acTemplate1;\r\n\r\n              options1 = self.util.generateRadioOptions(\r\n                invertedMultiSelect,\r\n                multiSelect,\r\n                question.id\r\n              );\r\n              questionTemplate = questionTemplate.replace(\r\n                \"{{options}}\",\r\n                options1\r\n              );\r\n            }\r\n          } else if (\r\n            question.displayStyle == \"icon\" &&\r\n            multiSelect.length < 6\r\n          ) {\r\n            acTemplate1 = templates.question_radio;\r\n            questionTemplate = acTemplate1;\r\n            let invertedMultiSelect;\r\n            if (question.presentationMode == \"Invert\") {\r\n              invertedMultiSelect = question.multiSelect\r\n                ? question.multiSelect.slice().reverse()\r\n                : [];\r\n            } else {\r\n              invertedMultiSelect = question.multiSelect;\r\n            }\r\n            options1 = self.util.generateRadioOptions(\r\n              invertedMultiSelect,\r\n              multiSelect,\r\n              question.id\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{options}}\",\r\n              options1\r\n            );\r\n          } else {\r\n            (window as any).ccsdkDebug ? console.log(\"select type 3\") : \"\";\r\n            acTemplate1 = templates.question_select;\r\n            options1 = self.util.generateSelectOptions(\r\n              invertedMultiSelect,\r\n              multiSelect\r\n            );\r\n            if (self.ccsdk.config.language.indexOf(\"Default\") === -1) {\r\n              if (\r\n                typeof question.translated !== \"undefined\" &&\r\n                question.translated != null &&\r\n                typeof question.translated[self.ccsdk.config.language] !==\r\n                  \"undefined\" &&\r\n                question.translated[self.ccsdk.config.language].multiSelect !==\r\n                  \"undefined\" &&\r\n                question.translated[self.ccsdk.config.language].multiSelect\r\n                  .length > 0\r\n              ) {\r\n                multiSelect = Array.prototype.slice.call(\r\n                  question.translated[self.ccsdk.config.language].multiSelect\r\n                );\r\n                if (question.presentationMode == \"Invert\") {\r\n                  multiSelect.reverse();\r\n                }\r\n                options1 = self.util.generateSelectOptions(\r\n                  invertedMultiSelect,\r\n                  multiSelect\r\n                );\r\n              }\r\n            }\r\n            questionTemplate = acTemplate1;\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{options}}\",\r\n              options1\r\n            );\r\n          }\r\n          // console.log( questionTemplate );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{question}}\",\r\n            ConditionalTextFilter.filterText(this, question)\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            /{{questionId}}/g,\r\n            \"id\" + question.id\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{isRequired}}\",\r\n            question.isRequired ? \"true\" : \"false\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{requiredLabel}}\",\r\n            question.isRequired ? \"*\" : \"\"\r\n          );\r\n          // (window as any).ccsdkDebug?console.log(questionTemplate):'';\r\n\r\n          break;\r\n        case \"Smile-5\":\r\n          //get text question template and compile it.\r\n          if (question.presentationMode == \"Invert\") {\r\n            questionTemplate = templates.question_smile_5_inverted;\r\n          } else {\r\n            questionTemplate = templates.question_smile_5;\r\n          }\r\n          // let startRangeLabel = \"Very unlikely\";\r\n          // let endRangeLabel = \"Very likely\";\r\n          let startRangeLabel = \"\";\r\n          let endRangeLabel = \"\";\r\n          let displayLegend2 = LanguageTextFilter.translateDisplayLegend(\r\n            this,\r\n            question\r\n          );\r\n\r\n          if (displayLegend2) {\r\n            if (displayLegend2.length > 0) {\r\n              startRangeLabel = displayLegend2[0] ? displayLegend2[0] : null;\r\n              endRangeLabel = displayLegend2[1] ? displayLegend2[1] : null;\r\n            }\r\n          }\r\n          startRangeLabel = startRangeLabel == null ? \"\" : startRangeLabel;\r\n          endRangeLabel = endRangeLabel == null ? \"\" : endRangeLabel;\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{question}}\",\r\n            ConditionalTextFilter.filterText(this, question)\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            /{{questionId}}/g,\r\n            \"id\" + question.id\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{isRequired}}\",\r\n            question.isRequired ? \"true\" : \"false\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{requiredLabel}}\",\r\n            question.isRequired ? \"*\" : \"\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{leftLabel}}\",\r\n            startRangeLabel\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{rightLabel}}\",\r\n            endRangeLabel\r\n          );\r\n          break;\r\n        case \"Star-5\":\r\n          //get text question template and compile it.\r\n          let startRangeLabel1 = \"\";\r\n          let endRangeLabel1 = \"\";\r\n          let displayLegend3 = LanguageTextFilter.translateDisplayLegend(\r\n            this,\r\n            question\r\n          );\r\n\r\n          if (displayLegend3) {\r\n            if (displayLegend3.length > 0) {\r\n              startRangeLabel1 = displayLegend3[0] ? displayLegend3[0] : null;\r\n              endRangeLabel1 = displayLegend3[1] ? displayLegend3[1] : null;\r\n            }\r\n          }\r\n          startRangeLabel1 = startRangeLabel1 == null ? \"\" : startRangeLabel1;\r\n          endRangeLabel1 = endRangeLabel1 == null ? \"\" : endRangeLabel1;\r\n          questionTemplate = templates.question_star_5;\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{question}}\",\r\n            ConditionalTextFilter.filterText(this, question)\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            /{{questionId}}/g,\r\n            \"id\" + question.id\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{isRequired}}\",\r\n            question.isRequired ? \"true\" : \"false\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{requiredLabel}}\",\r\n            question.isRequired ? \"*\" : \"\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{leftLabel}}\",\r\n            startRangeLabel1\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{rightLabel}}\",\r\n            endRangeLabel1\r\n          );\r\n          break;\r\n      }\r\n    }\r\n    return questionTemplate;\r\n  }\r\n\r\n  questionCompare(a: any, b: any) {\r\n    return a.sequence - b.sequence;\r\n  }\r\n\r\n  getAnswerTypeFromDisplayType(displayType: string) {\r\n    // console.log('question type',displayType);\r\n    let type: string;\r\n    switch (displayType) {\r\n      case \"Slider\":\r\n        type = \"number\";\r\n        break;\r\n      case \"Scale\":\r\n        type = \"number\";\r\n        break;\r\n      case \"Text\":\r\n        type = \"text\";\r\n        break;\r\n      case \"Number\":\r\n        type = \"number\";\r\n        break;\r\n      case \"MultilineText\":\r\n        type = \"text\";\r\n        break;\r\n      case \"MultiSelect\":\r\n        type = \"text\";\r\n        break;\r\n      case \"Select\":\r\n        type = \"text\";\r\n        break;\r\n      case \"Dropdown\":\r\n        type = \"text\";\r\n        break;\r\n      case \"Smile-5\":\r\n        type = \"number\";\r\n        break;\r\n      case \"Star-5\":\r\n        type = \"number\";\r\n        break;\r\n      case \"Date\":\r\n        type = \"number\";\r\n        break;\r\n      default:\r\n        type = \"text\";\r\n        break;\r\n    }\r\n\r\n    return type;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * filterQuestions - filters questions so that we don't display the one which satisifes any of the following condition\r\n   *  isRetired = true\r\n   *  statffFill = true\r\n   *  apiFill = true\r\n   *  preFill = true\r\n   *\r\n   * @param {any} question\r\n   * @returns\r\n   * @memberof Survey\r\n   */\r\n  filterQuestions() {\r\n    let self = this;\r\n    this.prefillResponses = [];\r\n    this.questionsToDisplay = [];\r\n    for (let question of this.questions) {\r\n      if (!question.isRetired) {\r\n        //filter out prefill question only if it is filled?.\r\n        // if(!this.isQuestionFilled(question)){\r\n        if (this.isPrefillTags(question)) {\r\n          self.ccsdk.debug\r\n            ? console.log(\"prefillTags\", this.prefillResponses)\r\n            : \"\";\r\n          continue;\r\n        }\r\n        if (this.isPrefillNote(question)) {\r\n          self.ccsdk.debug ? console.log(this.prefillResponses) : \"\";\r\n          continue;\r\n        }\r\n        if (this.isPrefillDirect(question)) {\r\n          self.ccsdk.debug ? console.log(this.prefillResponses) : \"\";\r\n          continue;\r\n        }\r\n        if (!this.isPrefillQuestion(question)) {\r\n          if (\r\n            question.conditionalFilter === null ||\r\n            (question.conditionalFilter != null &&\r\n              (question.conditionalFilter.filterquestions == null ||\r\n                question.conditionalFilter.filterquestions.length == 0))\r\n          ) {\r\n            //check supported display types\r\n            let supportedDisplayTypes =\r\n              \"Slider, Scale, Text, Number, MultilineText, MultiSelect, Smile-5, Star-5, Date\";\r\n            if (supportedDisplayTypes.indexOf(question.displayType) > -1) {\r\n              this.questionsToDisplay.push(question);\r\n            }\r\n          } else {\r\n            //if conditions full filled, fill it in questionsToDisplay\r\n            if (ConditionalFlowFilter.filterQuestion(this, question)) {\r\n              //auto does that\r\n            } else {\r\n              this.conditionalQuestions.push(question);\r\n            }\r\n          }\r\n        } else {\r\n          this.fillPrefillWithTags(question);\r\n          this.fillPrefillWithNote(question);\r\n          ConditionalFlowFilter.filterQuestion(this, question);\r\n        }\r\n        // }\r\n      }\r\n    }\r\n    //re condition questions.\r\n    for (let question of this.questions) {\r\n      // console.log(this.questionsToDisplay);\r\n      ConditionalFlowFilter.filterQuestion(this, question);\r\n    }\r\n    //sort questions and display them?\r\n    this.questionsToDisplay = this.questionsToDisplay.sort(\r\n      this.questionCompare\r\n    );\r\n    // console.log(this.conditionalQuestions);\r\n  }\r\n\r\n  isPrefillTags(question: any) {\r\n    if (\r\n      typeof question.questionTags !== \"undefined\" &&\r\n      question.questionTags &&\r\n      question.questionTags.length > 0\r\n    ) {\r\n      for (let tag of question.questionTags) {\r\n        switch (tag.toLowerCase()) {\r\n          case \"screensize\":\r\n            //add size to prefill array\r\n            this.fillPrefillQuestion(\r\n              question.id,\r\n              \"Width:\" +\r\n                window.innerWidth +\r\n                \"px / Height:\" +\r\n                window.innerHeight +\r\n                \"px\",\r\n              \"text\"\r\n            );\r\n            return true;\r\n          // Token prefill\r\n          case \"cc_token\":\r\n            this.fillPrefillQuestion(question.id, this.surveyToken, \"text\");\r\n            return true;\r\n          // Channel prefill\r\n          case \"cc_channel\":\r\n            this.fillPrefillQuestion(question.id, \"MicroSurvey\", \"text\");\r\n            return true;\r\n          // currentURL\r\n          case \"cc_currenturl\":\r\n            this.fillPrefillQuestion(question.id, window.location.href, \"text\");\r\n            return true;\r\n          // partial response\r\n          case \"cc_partialresponseid\":\r\n            this.fillPrefillQuestion(\r\n              question.id,\r\n              this.surveyData.partialResponseId,\r\n              \"text\"\r\n            );\r\n            return true;\r\n          default:\r\n            if (typeof this.prefillWithTags[tag.toLowerCase()] != \"undefined\") {\r\n              let type = this.getAnswerTypeFromDisplayType(\r\n                question.displayType\r\n              );\r\n              this.fillPrefillQuestion(\r\n                question.id,\r\n                this.prefillWithTags[tag.toLowerCase()],\r\n                type\r\n              );\r\n              return true;\r\n            }\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  isPrefillNote(question: any) {\r\n    if (\r\n      typeof question.note !== \"undefined\" &&\r\n      question.note != null &&\r\n      question.note.length > 0 &&\r\n      this.prefillWithNote[question.note.toLowerCase()]\r\n    ) {\r\n      let type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n      this.fillPrefillQuestion(\r\n        question.id,\r\n        this.prefillWithNote[question.note.toLowerCase()],\r\n        type\r\n      );\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  isPrefillDirect(question: any) {\r\n    if (typeof question !== \"undefined\" && this.prefillDirect[question.id]) {\r\n      let type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n      this.fillPrefillQuestion(\r\n        question.id,\r\n        this.prefillDirect[question.id],\r\n        type\r\n      );\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  fillPrefillWithTags(question: any) {\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"fillprefillwithtags\", this.prefillWithTags)\r\n      : \"\";\r\n    if (\r\n      typeof question.questionTags !== \"undefined\" &&\r\n      question.questionTags.length > 0\r\n    ) {\r\n      for (let tag of question.questionTags) {\r\n        (window as any).ccsdkDebug\r\n          ? console.log(\"fillprefillwithtags\", tag)\r\n          : \"\";\r\n        if (typeof this.prefillWithTags[tag.toLowerCase()] !== \"undefined\") {\r\n          (window as any).ccsdkDebug\r\n            ? console.log(\r\n                \"prefil \",\r\n                tag.toLowerCase(),\r\n                this.prefillWithTags[tag.toLowerCase()],\r\n                this.prefillWithTags\r\n              )\r\n            : \"\";\r\n\r\n          let type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n          this.fillPrefillQuestion(\r\n            question.id,\r\n            this.prefillWithTags[tag.toLowerCase()],\r\n            type\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  fillPrefillWithNote(question: any) {\r\n    if (\r\n      typeof question.note !== \"undefined\" &&\r\n      question.note != null &&\r\n      question.note.length > 0\r\n    ) {\r\n      if (\r\n        typeof this.prefillWithNote[question.note.toLowerCase()] !== \"undefined\"\r\n      ) {\r\n        let type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n        this.fillPrefillQuestion(\r\n          question.id,\r\n          this.prefillWithNote[question.note.toLowerCase()],\r\n          type\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  getConditionalSurveyQuestions(): any {\r\n    return this.conditionalQuestions;\r\n  }\r\n\r\n  isPrefillQuestion(question: any) {\r\n    if (question.apiFill == true) {\r\n      return true;\r\n    }\r\n    if (question.staffFill == true) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  isQuestionFilled(question: any) {\r\n    for (let response of this.prefillResponses) {\r\n      if (response.questionId == question.questionId) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  removePrevListener(id: string): boolean {\r\n    for (let listener of this.domListeners) {\r\n      if (listener.id == id) {\r\n        let index = this.domListeners.indexOf(listener);\r\n        (window as any).ccsdkDebug ? console.log(\"removing listener\", id) : \"\";\r\n        (window as any).ccsdkDebug\r\n          ? console.log(\"removing listener index\", index)\r\n          : \"\";\r\n        this.util.removeListener(\r\n          document.querySelectorAll(\"body\")[0],\r\n          listener.type,\r\n          listener.internalHandler\r\n        );\r\n        if (index > -1) {\r\n          this.domListeners.splice(index, 1);\r\n        }\r\n        (window as any).ccsdkDebug ? console.log(this.domListeners) : \"\";\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  destroySurvey() {\r\n    let self: SurveyHandler = this;\r\n    document.addEventListener(\"ccclose\", this.destroySurveyCb);\r\n  }\r\n\r\n  destroy() {\r\n    let surveyContainer = this.ccsdk.dom.getSurveyContainer(this.surveyToken);\r\n    let welcomeContainer = this.ccsdk.dom.getWelcomeContainer(this.surveyToken);\r\n    if (typeof surveyContainer != \"undefined\") {\r\n      this.util.remove(surveyContainer);\r\n    }\r\n    if (typeof welcomeContainer != \"undefined\") {\r\n      this.util.remove(welcomeContainer);\r\n    }\r\n    document.removeEventListener(\"ccclose\", this.destroySurveyCb);\r\n    document.removeEventListener(\"ccdone\", this.displayThankYouCb);\r\n    document.removeEventListener(\"q-answered\", this.acceptAnswersCb);\r\n    (window as any).globalSurveyRunning = false;\r\n    // let bodyElement = <HTMLElement>document.\r\n    //   getElementsByTagName( \"body\" )[ 0 ];\r\n    // this.util.removeClass( bodyElement, \"blurr\" );\r\n  }\r\n}\r\n\r\nexport { SurveyHandler };\r\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/rtl-css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./main.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../node_modules/rtl-css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./main.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../node_modules/rtl-css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./main.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../node_modules/rtl-css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, typeof document !== 'undefined' && document.getElementsByTagName('html')[0].getAttribute('dir') === 'rtl' ? \".cc-sdk ul {\\n  padding-right: 0;\\n  list-style-type: none;\\n  margin: 0; }\\n\\n.cc-sdk a,\\n.cc-sdk a:hover,\\n.cc-sdk a:focus {\\n  text-decoration: none;\\n  color: inherit; }\\n\\n.cc-sdk *,\\n.cc-sdk *:before,\\n.cc-sdk *:after {\\n  box-sizing: border-box; }\\n\\n.cc-sdk p {\\n  color: inherit;\\n  margin: 0; }\\n\\n.cc-sdk map area {\\n  outline: 0;\\n  cursor: pointer; }\\n\\n.cc-sdk map area.selected {\\n  outline: 0px;\\n  outline-color: #0a2135;\\n  outline-width: 0px;\\n  outline-style: solid; }\\n\\n.cc-sdk map area:hover {\\n  outline: 1; }\\n\\n.cc-sdk label {\\n  margin-bottom: 0;\\n  font-weight: normal; }\\n\\n.cc-sdk input,\\n.cc-sdk textarea {\\n  padding: 0;\\n  border: none;\\n  width: auto;\\n  margin-top: 0;\\n  font-size: inherit;\\n  font-style: inherit;\\n  font-weight: inherit;\\n  color: inherit;\\n  outline: none; }\\n\\n.cc-sdk p {\\n  font-size: inherit; }\\n\\n.cc-sdk.cc-popup-container {\\n  background: #fff;\\n  box-shadow: 0 0 4px 5px rgba(0, 0, 0, 0.05);\\n  font-family: \\\"open sans\\\", sans-serif;\\n  position: fixed;\\n  text-align: center;\\n  max-width: 500px;\\n  max-height: 500px;\\n  z-index: 1111; }\\n\\n@media (min-width: 768px) {\\n  .cc-sdk.cc-popup-container {\\n    padding: 10px; } }\\n\\n.cc-sdk.cc-popup-container.bottom {\\n  margin-bottom: 9px; }\\n\\n.cc-sdk.cc-popup-container.top {\\n  margin-top: 9px; }\\n\\n.cc-sdk #cc-thankyou-container .cc-question-container__text p {\\n  word-break: break-word; }\\n\\n.cc-sdk #cc-thankyou-container .cc-question-container__text p,\\n.cc-sdk #cc-thankyou-container .cc-question-container__text {\\n  width: 400px;\\n  max-width: initial;\\n  font-size: 17px;\\n  color: #424242; }\\n\\n.cc-sdk .cc-message-box {\\n  position: relative;\\n  z-index: 11; }\\n\\n.cc-sdk .cc-message-box__text {\\n  color: #424242;\\n  font-size: 14px;\\n  font-weight: 600;\\n  margin: 0;\\n  padding: 29px 14px 20px 14px;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-message-box__btn {\\n  background: #fdaf19;\\n  border-radius: 100px;\\n  display: inline-block;\\n  font-size: 15px;\\n  font-weight: 700;\\n  height: 32px;\\n  padding: 6px 0;\\n  width: 124px;\\n  text-align: center; }\\n\\n.cc-sdk.cc-popup-container .cc-popup-container__close {\\n  cursor: pointer;\\n  margin: 4px;\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n  z-index: 111; }\\n\\n.cc-sdk .cc-popup-container-2 {\\n  /* box-shadow: 0 0 4px 5px rgba(0,0,0,0.05); */\\n  height: 144px;\\n  position: fixed;\\n  width: 100%;\\n  z-index: 1111; }\\n\\n.cc-sdk .cc-popup-container-2.bottom {\\n  bottom: 0px; }\\n\\n.cc-sdk .cc-popup-container-2__icons,\\n.cc-sdk .cc-popup-container-2__icons {\\n  cursor: pointer;\\n  padding: 8px;\\n  position: absolute;\\n  top: 0;\\n  z-index: 111; }\\n\\n.cc-sdk .top.cc-popup-container-2 .cc-popup-container-2__icons {\\n  padding-top: 15px; }\\n\\n.cc-sdk .cc-popup-container-2__icons.cc-right-icon {\\n  left: 0; }\\n\\n.cc-sdk .cc-popup-container-2__icons.cc-left-icon {\\n  right: 0; }\\n\\n.cc-sdk .cc-popup-container__back {\\n  background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);\\n  display: inline-block;\\n  width: 21px;\\n  height: 21px; }\\n\\n.cc-sdk .cc-question-container {\\n  /* margin: auto; */\\n  padding: 20px 20px 25px;\\n  position: absolute;\\n  text-align: center;\\n  width: 100%;\\n  z-index: 11;\\n  top: 0;\\n  right: 0; }\\n\\n.cc-sdk .cc-question-container__text {\\n  /*height: 80px;*/\\n  color: #424242;\\n  display: inline-block;\\n  font-size: 15px;\\n  font-weight: 600;\\n  max-width: 230px;\\n  padding: 8px 0;\\n  text-align: center;\\n  vertical-align: middle;\\n  width: 20%;\\n  position: relative; }\\n  .cc-sdk .cc-question-container__text p {\\n    word-break: break-word; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"csat\\\"] .cc-question-container__text {\\n  width: 11em; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"csat\\\"] .cc-question-container__list {\\n  width: 64vw; }\\n\\n.cc-sdk .cc-question-container__required,\\n.cc-sdk .cc-question-container__validation {\\n  position: absolute;\\n  top: -14px;\\n  font-size: 11px;\\n  right: 0;\\n  width: 100%;\\n  left: 0;\\n  font-weight: normal;\\n  color: #c1272d;\\n  display: none; }\\n\\n.cc-sdk .cc-question-container__required-label {\\n  display: inline-block;\\n  position: relative;\\n  top: -2px;\\n  right: -2px; }\\n\\n.cc-sdk .cc-question-container__content {\\n  display: inline-block;\\n  max-width: 78%;\\n  vertical-align: middle;\\n  width: auto; }\\n\\n.cc-sdk .cc-question-container__list li {\\n  display: inline-block;\\n  padding-right: 29px;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-question-container__list li span {\\n  display: table-cell;\\n  font-size: 15px;\\n  padding-right: 15px;\\n  text-align: right;\\n  vertical-align: middle;\\n  width: 125px; }\\n\\n.cc-sdk .cc-question-container__list li input {\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-question-container:before {\\n  content: \\\"\\\";\\n  display: inline-block;\\n  height: 100%;\\n  margin-left: -4px;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-question-container {\\n  height: 100%;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-questions-container {\\n  height: 100%; }\\n\\n.cc-sdk p.cc-thankyou-powered {\\n  font-size: 13px !important;\\n  color: #404040 !important;\\n  margin-top: 4px;\\n  font-weight: 400 !important; }\\n  .cc-sdk p.cc-thankyou-powered.no-branding {\\n    display: none; }\\n\\n.cc-sdk .cc-thankyou-powered .cc-thankyou-logo {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/cc-thankyou-logo.svg\\\");\\n  background-size: cover;\\n  margin-left: 8px;\\n  display: inline-block;\\n  width: 16px;\\n  height: 16px; }\\n\\n.cc-sdk .multiline-box {\\n  background: #fff;\\n  border-radius: 2px;\\n  border: 1px #6d6d6d solid;\\n  font-family: \\\"Open Sans\\\";\\n  font-size: 15px;\\n  height: 70px;\\n  margin: 0 50px 0 0px;\\n  min-width: 600px;\\n  padding: 2px 5px;\\n  resize: none; }\\n\\n.cc-sdk .multiline-box:focus {\\n  outline: 0; }\\n\\n.cc-sdk .detail-box .cc-question-container__text p {\\n  font-size: 13px;\\n  font-weight: 700; }\\n\\n.cc-sdk .detail-box .cc-question-container__text span {\\n  display: inline-block;\\n  font-size: 15px;\\n  font-weight: normal; }\\n\\n.cc-sdk .detail-box .cc-question-container__text {\\n  height: 56px; }\\n\\n.cc-sdk .detail-box[data-type=\\\"singleline\\\"] .cc-question-container__text {\\n  margin-left: 20px; }\\n\\n.cc-sdk .detail-box .cc-question-container__content .cc-sdk-form-control,\\n.cc-sdk .single-line .cc-question-container__content .cc-sdk-form-control {\\n  background: transparent;\\n  border: none;\\n  border-bottom: 1px solid #6d6d6d;\\n  font-family: \\\"open sans\\\";\\n  font-size: 15px;\\n  line-height: 26px;\\n  outline: 0;\\n  width: 300px;\\n  margin-right: 70px; }\\n\\n.cc-sdk .d-star-box.detail-box .cc-question-container__text {\\n  height: 92px; }\\n\\n.cc-sdk .hl.dropdown {\\n  background-image: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/arrow-down.black.svg\\\");\\n  background-position: 3% center;\\n  background-repeat: no-repeat;\\n  border-bottom: 1px solid #6d6d6d;\\n  display: inline-block;\\n  padding: 5px;\\n  position: relative;\\n  text-align: right;\\n  width: 300px; }\\n\\n.cc-sdk .drop-cc-question-container .cc-question-container__text {\\n  /*height: 60px;*/\\n  margin-left: 20px; }\\n\\n.cc-sdk .cc-sdk-form-control:focus {\\n  border-color: #fcaf18; }\\n\\n.cc-sdk .detail-box .cc-question-container__content {\\n  padding-right: 0; }\\n\\n.cc-sdk .cc-big-list-container .cc-question-container__list {\\n  display: table;\\n  width: 100%; }\\n\\n.cc-sdk .cc-big-list-container .cc-question-container__list li {\\n  display: table-cell;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-thankyou-container {\\n  width: 100% !important; }\\n\\n.cc-sdk .submit-icon {\\n  direction: rtl;\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n  bottom: 0;\\n  margin: auto 0;\\n  z-index: 11;\\n  margin-left: 75px;\\n  font-size: 14px;\\n  cursor: pointer;\\n  width: 47px;\\n  height: 47px; }\\n\\n@media (min-width: 1000px) {\\n  .cc-sdk .cc-big-list-container .cc-question-container__list li span label {\\n    overflow: hidden;\\n    max-height: 100px;\\n    display: block; } }\\n\\n@media (min-width: 769px) and (max-width: 875px) {\\n  .cc-sdk .cc-question-container__list li {\\n    padding-right: 0px !important; } }\\n\\n@media (min-width: 769px) and (max-width: 1024px) {\\n  .cc-sdk .cc-popup-container-2 {\\n    height: 200px; }\\n  .cc-sdk .cc-big-list-container .cc-question-container__list,\\n  .cc-sdk .cc-question-container__list {\\n    text-align: right; }\\n  .cc-sdk .cc-big-list-container .cc-question-container__list li,\\n  .cc-sdk .cc-question-container__list li {\\n    display: inline-block;\\n    margin-bottom: 15px;\\n    vertical-align: middle;\\n    width: 49%; }\\n  .cc-sdk .cc-question-container__content {\\n    display: inline-block;\\n    width: 45%; }\\n  .cc-sdk .multiline-box {\\n    min-width: 100%;\\n    margin: 0; }\\n  .cc-sdk .option-smile-box img,\\n  .cc-sdk .option-star-box img {\\n    margin-left: 11px !important; }\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text p,\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text {\\n    width: 100% !important;\\n    text-align: center;\\n    margin: 0 !important;\\n    padding: 0;\\n    line-height: initial;\\n    height: auto; }\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text {\\n    max-width: 98%; } }\\n\\n@media (min-width: 1000px) {\\n  .cc-sdk .cc-question-container__text p {\\n    max-height: 100px;\\n    overflow: hidden;\\n    max-width: 140ch; }\\n  .cc-sdk .cc-question-container__text p.ellipsis:after {\\n    content: \\\"...\\\";\\n    text-align: left;\\n    bottom: 9px;\\n    left: -3px;\\n    width: 12px;\\n    display: block;\\n    position: absolute;\\n    height: calc(1em * 1.2); } }\\n\\n@media (min-width: 769px) and (max-width: 992px) {\\n  .cc-sdk .cc-question-container {\\n    width: 100%;\\n    margin: auto; }\\n  .cc-sdk .cc-question-container__text {\\n    width: 24%;\\n    padding-left: 20px; }\\n  .cc-sdk .cc-question-container__text p {\\n    max-height: 110px;\\n    overflow: hidden; }\\n  .cc-sdk .cc-question-container__content.rating-color {\\n    margin-right: 0px; }\\n  .cc-sdk .submit-icon {\\n    margin-left: 40px !important; }\\n  .cc-sdk .cc-question-container__content.rating-color {\\n    margin-right: 0px !important; }\\n  .cc-sdk .cc-question-container__content {\\n    width: 50% !important; } }\\n\\n@media (max-width: 768px) {\\n  .cc-sdk .cc-survey-container,\\n  .cc-sdk .cc-survey-content {\\n    height: 100%; }\\n  .cc-sdk .cc-popup-container-2 {\\n    bottom: auto;\\n    height: 100%;\\n    top: 0; }\\n  .cc-sdk .cc-popup-container-2__icons.cc-right-icon {\\n    right: auto;\\n    left: 0;\\n    padding: 0; }\\n  .cc-sdk .cc-popup-container-2__icons.cc-left-icon {\\n    right: 0;\\n    left: auto;\\n    padding: 0; }\\n  .cc-sdk .cc-big-list-container .cc-question-container__list li,\\n  .cc-sdk[dir=\\\"rtl\\\"] .cc-big-list-container .cc-question-container__list li {\\n    display: block; }\\n  .cc-sdk .radio-toggle--more-option li span {\\n    width: 84% !important;\\n    padding-right: 25px !important; }\\n  .cc-sdk .radio-toggle--more-option li {\\n    padding-left: 0 !important;\\n    display: block !important;\\n    padding-top: 10px; }\\n  .cc-sdk .detail-box .cc-question-container__content {\\n    padding-right: 0px; }\\n  .cc-sdk .cc-question-container {\\n    bottom: 75px;\\n    height: auto;\\n    right: 0;\\n    padding: 40px 20px;\\n    position: absolute;\\n    text-align: right;\\n    top: auto;\\n    width: 100%; }\\n  .cc-sdk .cc-question-container__text {\\n    font-size: 18px;\\n    margin-bottom: 20px;\\n    max-width: 400px;\\n    text-align: right;\\n    width: 100%; }\\n  .cc-sdk .cc-question-container__content {\\n    display: block;\\n    max-width: 100%;\\n    width: 100%; }\\n  .cc-sdk .cc-question-container__list label {\\n    display: block; }\\n  .cc-sdk .cc-question-container__list li span {\\n    width: auto;\\n    padding-right: 15px; }\\n  .cc-sdk .cc-question-container__list li {\\n    padding-right: 0;\\n    margin-bottom: 10px;\\n    display: block; }\\n  .cc-sdk .cc-popup-container-2__icons {\\n    margin: 20px; }\\n  .cc-sdk .cc-popup-container-2__icons.left-icon {\\n    right: auto;\\n    left: 0; }\\n  .cc-sdk .cc-popup-container-2__icons.right-icon {\\n    left: auto;\\n    right: 0; }\\n  .cc-sdk .cc-popup-container__close {\\n    width: 27px; }\\n  .cc-sdk .cc-question-container__content.rating-color {\\n    margin-right: 0 !important; }\\n  .cc-sdk\\n.cc-question-container[data-type=\\\"nps\\\"]\\n.cc-question-container__content,\\n  .cc-sdk\\n.cc-question-container[data-type=\\\"scale\\\"]\\n.cc-question-container__content {\\n    width: 100% !important; }\\n  .cc-sdk .multiline-box {\\n    height: 150px;\\n    margin: 0;\\n    min-width: 100%;\\n    width: 100%; }\\n  .cc-sdk .hl.dropdown {\\n    width: 100%; }\\n  .cc-sdk .detail-box .cc-question-container__content .cc-sdk-form-control {\\n    width: 100%; }\\n  .cc-sdk .detail-box .cc-question-container__text p {\\n    font-size: 18px; }\\n  .cc-sdk .mobile-detail-box .cc-question-container__text {\\n    height: auto; }\\n  .cc-sdk .cc-question-container__text p {\\n    max-height: auto; }\\n  .cc-sdk .welcome-box .cc-question-container__text p {\\n    color: #fff; }\\n  .cc-sdk .cc-questions-container {\\n    height: 100%;\\n    position: relative; }\\n  .cc-sdk .cc-message-box__btn {\\n    margin-right: 20px; } }\\n\\n@media (max-width: 768px) {\\n  .cc-sdk .detail-box .cc-question-container__content .cc-sdk-form-control,\\n  .cc-sdk .single-line .cc-question-container__content .cc-sdk-form-control {\\n    margin-right: 0; }\\n  .cc-sdk .submit-icon {\\n    position: absolute;\\n    right: 20px;\\n    top: auto;\\n    bottom: 30px;\\n    padding-left: 0; }\\n  .cc-sdk.cc-popup-container {\\n    position: fixed;\\n    bottom: 0;\\n    right: 0;\\n    left: 0;\\n    margin: 0 !important;\\n    width: 100%;\\n    height: 13em;\\n    max-width: 100%;\\n    max-height: 100%;\\n    text-align: right;\\n    background: transparent; }\\n  .cc-sdk.cc-popup-container .cc-message-box {\\n    position: absolute;\\n    bottom: 20%; }\\n  .cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text {\\n    font-size: 20px; }\\n  .cc-sdk.cc-popup-container .cc-message-box .submit-icon {\\n    position: absolute;\\n    bottom: -100%;\\n    top: auto;\\n    right: 0;\\n    margin: 0 14px; }\\n  .cc-sdk.cc-popup-container .cc-popup-container__close {\\n    margin: 20px;\\n    left: 0;\\n    top: 0; }\\n  .cc-sdk.cc-popup-container__back {\\n    background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);\\n    display: inline-block;\\n    width: 27px;\\n    height: 27px;\\n    background-size: 100%; }\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text p,\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text {\\n    width: 100% !important;\\n    text-align: center;\\n    margin: 0 !important;\\n    padding: 0;\\n    line-height: initial;\\n    height: auto; }\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text {\\n    max-width: 98%; } }\\n\\n.date-s,\\n.date-y {\\n  display: inline-block;\\n  margin: 0 12px !important;\\n  width: 80px !important; }\\n\\n.date-error {\\n  color: red;\\n  font-style: italic;\\n  visibility: hidden;\\n  margin-top: 12px; }\\n  .date-error.show-error {\\n    visibility: visible; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk ul {\\n  padding-left: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk.cc-popup-container .cc-popup-container__close {\\n  left: auto;\\n  right: 0;\\n  top: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text {\\n  text-align: left; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-popup-container__back {\\n  background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_rtl_.svg); }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-popup-container-2__icons.cc-right-icon {\\n  left: auto;\\n  right: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-popup-container-2__icons.cc-left-icon {\\n  left: 0;\\n  right: auto; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk.cc-question-container {\\n  margin-right: 0;\\n  margin-left: 0;\\n  left: 0;\\n  right: auto; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__required,\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__validation {\\n  left: 0%;\\n  right: auto; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__required-label {\\n  top: -2px;\\n  left: -2px;\\n  right: auto; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__list li {\\n  display: inline-block;\\n  padding-left: 15px !important;\\n  padding-right: 15px !important;\\n  vertical-align: middle; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"checkbox\\\"] .cc-question-container__list li {\\n  padding-left: 0 !important; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__list li span {\\n  padding-left: 15px;\\n  padding-right: 0;\\n  text-align: left; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container:before {\\n  margin-right: -4px;\\n  margin-left: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .multiline-box {\\n  margin: 0 0px 0 50px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .hl.dropdown {\\n  background-position: 3% center;\\n  text-align: left; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .drop-cc-question-container .cc-question-container__text {\\n  margin-right: 20px;\\n  margin-left: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .detail-box .cc-question-container__content {\\n  padding-left: 0;\\n  padding-right: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__content {\\n  text-align: left; }\\n\\n@media (min-width: 769px) and (max-width: 1024px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-big-list-container .cc-question-container__list,\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__list {\\n    text-align: left; }\\n  [dir=\\\"rtl\\\"].cc-sdk .multiline-box {\\n    margin: 0 0px 0 0px; } }\\n\\n@media (min-width: 769px) and (max-width: 992px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__text {\\n    padding-right: 20px;\\n    padding-left: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__content.rating-color {\\n    margin-right: 0px;\\n    margin-left: 0px; } }\\n\\n@media (max-width: 768px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-popup-container-2__icons.cc-right-icon {\\n    right: 0;\\n    left: auto; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-popup-container-2__icons.cc-left-icon {\\n    right: auto;\\n    left: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .radio-toggle--more-option li span {\\n    padding-left: 25px !important;\\n    padding-right: 0 !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .radio-toggle--more-option li {\\n    padding-left: 0 !important;\\n    padding-right: 0 !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .detail-box .cc-question-container__content {\\n    padding-right: 0px;\\n    padding-left: 0px; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container {\\n    right: auto;\\n    left: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .multiline-box {\\n    margin: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__text {\\n    text-align: left;\\n    width: 100%;\\n    margin-left: 5px;\\n    max-width: 100%; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__list li span {\\n    padding-left: 15px;\\n    padding-right: 0px; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__list li {\\n    padding-right: 0;\\n    padding-left: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-popup-container-2__icons.left-icon {\\n    right: 0;\\n    left: auto; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-popup-container-2__icons.right-icon {\\n    left: 0;\\n    right: auto; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__content.rating-color {\\n    margin-right: 0 !important;\\n    margin-left: 0 !important; } }\\n\\n/*cc-question-container color scale css*/\\n.cc-sdk .option-number-item {\\n  color: #fff;\\n  float: right;\\n  font-size: 13px;\\n  height: 38px;\\n  box-sizing: border-box;\\n  padding-top: 10px;\\n  text-align: center;\\n  width: 8.5%;\\n  margin-right: 1px;\\n  margin-left: 0;\\n  cursor: pointer; }\\n  .cc-sdk .option-number-item.option-zero {\\n    background: #853838; }\\n  .cc-sdk .option-number-item.option-zero.selected, .cc-sdk .option-number-item.option-zero:hover {\\n    background: #572526; }\\n  .cc-sdk .option-number-item.option-one {\\n    background: #9e4343; }\\n  .cc-sdk .option-number-item.option-one.selected, .cc-sdk .option-number-item.option-one:hover {\\n    background: #642728; }\\n  .cc-sdk .option-number-item.option-two {\\n    background: #c14d4d; }\\n  .cc-sdk .option-number-item.option-two.selected, .cc-sdk .option-number-item.option-two:hover {\\n    background: #712827; }\\n  .cc-sdk .option-number-item.option-three {\\n    background: #d94d4d; }\\n  .cc-sdk .option-number-item.option-three.selected, .cc-sdk .option-number-item.option-three:hover {\\n    background: #7c2828; }\\n  .cc-sdk .option-number-item.option-four {\\n    background: #ee4d4d; }\\n  .cc-sdk .option-number-item.option-four.selected, .cc-sdk .option-number-item.option-four:hover {\\n    background: #852828; }\\n  .cc-sdk .option-number-item.option-five {\\n    background: #ff4d4d; }\\n  .cc-sdk .option-number-item.option-five.selected, .cc-sdk .option-number-item.option-five:hover {\\n    background: #844828; }\\n  .cc-sdk .option-number-item.option-six {\\n    background: #ff8c4d; }\\n  .cc-sdk .option-number-item.option-six.selected, .cc-sdk .option-number-item.option-six:hover {\\n    background: #844828; }\\n  .cc-sdk .option-number-item.option-seven {\\n    background: #ffc74d; }\\n  .cc-sdk .option-number-item.option-seven.selected, .cc-sdk .option-number-item.option-seven:hover {\\n    background: #856728; }\\n  .cc-sdk .option-number-item.option-eight {\\n    background: #f5eb4d; }\\n  .cc-sdk .option-number-item.option-eight.selected, .cc-sdk .option-number-item.option-eight:hover {\\n    background: #7f7a28; }\\n  .cc-sdk .option-number-item.option-nine {\\n    background: #73ca81; }\\n  .cc-sdk .option-number-item.option-nine.selected, .cc-sdk .option-number-item.option-nine:hover {\\n    background: #3b6942; }\\n  .cc-sdk .option-number-item.option-ten {\\n    background: #4db47c; }\\n  .cc-sdk .option-number-item.option-ten.selected, .cc-sdk .option-number-item.option-ten:hover {\\n    background: #285e40; }\\n  .cc-sdk .option-number-item.option-7-scale-1 {\\n    background: #ed534f; }\\n  .cc-sdk .option-number-item.option-7-scale-2 {\\n    background: #ed534f; }\\n  .cc-sdk .option-number-item.option-7-scale-3 {\\n    background: #ed534f; }\\n  .cc-sdk .option-number-item.option-7-scale-4 {\\n    background: #ffbc00; }\\n  .cc-sdk .option-number-item.option-7-scale-5 {\\n    background: #ffbc00; }\\n  .cc-sdk .option-number-item.option-7-scale-6 {\\n    background: #4db47c; }\\n  .cc-sdk .option-number-item.option-7-scale-7 {\\n    background: #4db47c; }\\n  .cc-sdk .option-number-item.option-5-scale-1 {\\n    background: #ed534f; }\\n  .cc-sdk .option-number-item.option-5-scale-2 {\\n    background: #ed534f; }\\n  .cc-sdk .option-number-item.option-5-scale-3 {\\n    background: #ffbc00; }\\n  .cc-sdk .option-number-item.option-5-scale-4 {\\n    background: #4db47c; }\\n  .cc-sdk .option-number-item.option-5-scale-5 {\\n    background: #4db47c; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .option-number-item {\\n  width: calc(9.09% - 1px); }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"].scale-image-container\\n.option-number-item {\\n  width: 8.4%; }\\n\\n.cc-sdk .cc-question-container__content.rating-color {\\n  margin-right: 74px; }\\n\\n.cc-sdk .option-left-rating-text,\\n.cc-sdk .option-right-rating-text,\\n.cc-sdk .option-mid-rating-text,\\n.cc-sdk .option-midnps-rating-text {\\n  color: #424242;\\n  font-size: 13px;\\n  right: 0;\\n  position: absolute; }\\n\\n.cc-sdk .option-midnps-rating-text {\\n  right: calc(7 * 9.09% - 1px); }\\n\\n.cc-sdk .option-left-rating-text-small-container {\\n  max-width: 57px;\\n  text-align: right;\\n  overflow: hidden; }\\n\\n.cc-sdk .option-mid-rating-text-small-container {\\n  max-width: 57px;\\n  text-align: right;\\n  overflow: hidden; }\\n\\n.cc-sdk .option-right-rating-text-small-container {\\n  max-width: 57px;\\n  text-align: left;\\n  overflow: hidden; }\\n\\n.cc-sdk .option-left-rating-text-small-container-smile {\\n  width: 40%;\\n  text-align: right;\\n  max-height: 37px;\\n  overflow: hidden;\\n  bottom: auto !important;\\n  top: 57px; }\\n\\n.cc-sdk .option-right-rating-text-small-container-smile {\\n  width: 40%;\\n  text-align: left;\\n  max-height: 37px;\\n  overflow: hidden;\\n  bottom: auto !important;\\n  top: 57px; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-left-rating-text,\\n.cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-left-rating-text {\\n  right: 4px;\\n  width: 40%;\\n  text-align: right; }\\n\\n.cc-sdk .option-right-rating-text {\\n  right: auto;\\n  left: 0; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n.cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n  left: 4px;\\n  text-align: left;\\n  width: 40%; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-number-item {\\n  width: 38px;\\n  margin: 0 0.5px;\\n  cursor: pointer;\\n  display: inline-block;\\n  float: none; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .cc-question-container__list {\\n  display: inline-block;\\n  width: auto;\\n  position: relative; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"].scale-image-container\\n.cc-question-container__list {\\n  width: 100%; }\\n\\n.cc-sdk .rating-color {\\n  position: relative; }\\n\\n.cc-sdk .option-smile-box,\\n.cc-sdk .option-star-box {\\n  height: 60px;\\n  margin-left: 29px;\\n  width: 60px;\\n  cursor: pointer;\\n  box-sizing: border-box;\\n  border: solid 4px transparent;\\n  border-radius: 50%;\\n  display: inline-block;\\n  background-size: 100%; }\\n\\n.cc-sdk:not([dir=\\\"rtl\\\"]) .option-star-box:nth-child(5),\\n.cc-sdk:not([dir=\\\"rtl\\\"]) .option-smile-box:nth-child(5) {\\n  margin-left: 0; }\\n\\n.cc-sdk[dir=\\\"rtl\\\"] .option-star-box:nth-child(1),\\n.cc-sdk[dir=\\\"rtl\\\"] .option-smile-box:nth-child(1) {\\n  margin-left: 0; }\\n\\n.cc-sdk .option-smile-box.cc-one {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-two {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-three {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-four {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-five {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-one.selected, .cc-sdk .option-smile-box.cc-one:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-two.selected, .cc-sdk .option-smile-box.cc-two:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-three.selected, .cc-sdk .option-smile-box.cc-three:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-four.selected, .cc-sdk .option-smile-box.cc-four:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-five.selected, .cc-sdk .option-smile-box.cc-five:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .cc-csat.cc-question-container__content.rating-color {\\n  margin-right: 45px; }\\n\\n.cc-sdk .option-csat.option-smile-box.selected,\\n.cc-sdk .option-csat.option-smile-box:hover,\\n.cc-sdk .option-csat.option-smile-box {\\n  background-size: 25px;\\n  background-position: 18px center; }\\n\\n.cc-sdk .option-csat {\\n  height: 30px;\\n  margin-left: 68px;\\n  width: 30px;\\n  padding-right: 50px;\\n  font-size: 14px; }\\n\\n.cc-sdk .option-csat {\\n  height: 45px;\\n  margin-left: 0px;\\n  width: auto;\\n  padding-right: 0px;\\n  font-size: 14px;\\n  vertical-align: middle;\\n  display: inline-block;\\n  margin-left: 13px; }\\n  .cc-sdk .option-csat span {\\n    display: inline-block;\\n    vertical-align: top;\\n    font-size: 12px;\\n    padding-right: 25px;\\n    position: relative;\\n    text-align: right;\\n    /* min-height: 32px; */\\n    width: 100%; }\\n  .cc-sdk .option-csat .cc-checkbox label {\\n    pointer-events: none; }\\n\\n.cc-sdk .option-star-box {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-star-box:hover,\\n.cc-sdk .option-star-box.selected {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star_selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"slider\\\"] .option-left-rating-text {\\n  right: 4px;\\n  width: 40%;\\n  text-align: right; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"slider\\\"] .option-right-rating-text {\\n  width: 40%;\\n  text-align: left; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .cc-question-container__list,\\n.cc-sdk .cc-question-container[data-type=\\\"star\\\"] .cc-question-container__list {\\n  position: relative;\\n  width: auto;\\n  display: inline-block; }\\n\\n.cc-sdk .circle-image {\\n  margin: auto;\\n  width: 253px;\\n  overflow: hidden;\\n  height: 240px;\\n  position: relative; }\\n\\n.cc-sdk .circle-image-scale-010-neutral {\\n  width: 242px;\\n  overflow: hidden;\\n  height: 230px;\\n  margin: auto; }\\n\\n.cc-sdk .cc-nps-selected-rating {\\n  font-size: 100px;\\n  display: inline-block;\\n  position: absolute;\\n  top: 0;\\n  right: 0px;\\n  line-height: 100px;\\n  left: 0;\\n  margin: auto;\\n  bottom: 0;\\n  width: 110px;\\n  height: 100px;\\n  text-align: center;\\n  font-weight: 100;\\n  color: #bbb; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n.cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n  left: 4px; }\\n\\n.cc-sdk .option-number-item.option-scale {\\n  background: #4db47c; }\\n\\n.cc-sdk .option-number-item.option-scale.selected,\\n.cc-sdk .option-number-item.option-scale:hover {\\n  background: #712827; }\\n\\n.cc-sdk .cc-nps-image {\\n  cursor: pointer;\\n  position: relative;\\n  right: 0; }\\n\\n.cc-sdk .legend-container {\\n  position: relative; }\\n\\n@media (min-width: 769px) and (max-width: 992px) {\\n  .cc-sdk .option-smile-box,\\n  .cc-sdk .option-star-box {\\n    width: 50px;\\n    height: 50px;\\n    margin-left: 10px; }\\n  .cc-sdk .option-csat.option-smile-box.selected,\\n  .cc-sdk .option-csat.option-smile-box:hover,\\n  .cc-sdk .option-csat.option-smile-box {\\n    display: inline-block;\\n    width: 168px;\\n    background-position: 48px center; }\\n    .cc-sdk .option-csat.option-smile-box.selected span,\\n    .cc-sdk .option-csat.option-smile-box:hover span,\\n    .cc-sdk .option-csat.option-smile-box span {\\n      padding-right: 40px; } }\\n\\n@media screen and (min-width: 992px) {\\n  .cc-sdk span.option-csat.option-smile-box {\\n    background-position: 44px center; }\\n    .cc-sdk span.option-csat.option-smile-box:hover, .cc-sdk span.option-csat.option-smile-box.selected {\\n      background-position: 44px center; }\\n    .cc-sdk span.option-csat.option-smile-box span {\\n      padding-right: 40px; } }\\n\\n@media (max-width: 768px) {\\n  .cc-sdk .option-smile-box,\\n  .cc-sdk .option-star-box {\\n    display: inline-block;\\n    margin-left: 3px; }\\n  .cc-sdk .option-csat.option-smile-box.selected,\\n  .cc-sdk .option-csat.option-smile-box:hover,\\n  .cc-sdk .option-csat.option-smile-box {\\n    display: block;\\n    background-size: 40px;\\n    background-position: 45px center; }\\n  .cc-sdk .option-csat.option-smile-box {\\n    height: 65px;\\n    width: 100%; }\\n  .cc-sdk .option-csat.option-smile-box span {\\n    font-size: 15px;\\n    padding-right: 40px; }\\n  .cc-sdk .option-csat.option-smile-box .cc-checkbox {\\n    top: calc(50% - 12.5px);\\n    height: 57px; }\\n  .cc-sdk .option-csat.option-smile-box .cc-checkbox.cc-radio label:before {\\n    width: 25px;\\n    height: 25px; }\\n  .cc-sdk .option-csat.option-smile-box\\n.cc-checkbox\\ninput[type=\\\"radio\\\"]:checked\\n+ label:after {\\n    width: 25px;\\n    height: 25px; }\\n  .cc-sdk .option-number-item {\\n    color: #fff;\\n    float: right;\\n    font-size: 15px;\\n    height: 35px;\\n    box-sizing: border-box;\\n    margin-left: 1px;\\n    padding-top: 7px;\\n    text-align: center;\\n    width: 38px;\\n    cursor: pointer;\\n    vertical-align: middle; }\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] {\\n    bottom: 106px; }\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-left-rating-text,\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-right-rating-text,\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-mid-rating-text {\\n    width: auto; }\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-right-rating-text {\\n    text-align: left; }\\n  .cc-sdk .option-smile-box img,\\n  .cc-sdk .option-star-box img {\\n    padding-left: 5px;\\n    margin-left: 0; }\\n  .cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .cc-question-container__content {\\n    width: 100% !important; }\\n  .cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n  .cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n    left: 10px; }\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .cc-question-container__list {\\n    width: 100%; }\\n  .cc-sdk .cc-question-container[data-type=\\\"csat\\\"] .cc-question-container__list li {\\n    width: 100%; } }\\n\\n@media (max-width: 381px) {\\n  .cc-sdk .option-smile-box,\\n  .cc-sdk .option-star-box {\\n    display: inline-block;\\n    margin-left: 0;\\n    height: 50px;\\n    width: 50px; }\\n  .cc-sdk .option-smile-box img,\\n  .cc-sdk .option-star-box img {\\n    padding-left: 5px;\\n    margin-left: 0; } }\\n\\n@media screen and (max-width: 768px) {\\n  .cc-sdk .radial-legend-right,\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] span.radial-legend-right {\\n    text-align: right;\\n    width: 35%;\\n    left: 0; }\\n  .cc-sdk .radial-legend-mid {\\n    width: 35%;\\n    text-align: center;\\n    right: 0;\\n    left: 0;\\n    display: none; }\\n  .cc-sdk .radial-legend-left {\\n    width: 35%;\\n    text-align: left;\\n    right: 0; } }\\n\\n/*cc-question-container color scale css*/\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"csat\\\"] .cc-question-container__content.rating-color {\\n  margin-left: 45px;\\n  margin-right: 0px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"csat\\\"] .cc-checkbox input[type=\\\"radio\\\"] {\\n  margin-left: 0px;\\n  opacity: 0;\\n  outline: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-number-item {\\n  margin-left: 1px;\\n  margin-right: 0;\\n  float: left; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__content.rating-color {\\n  margin-left: 74px;\\n  margin-right: 0px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-right-rating-text {\\n  right: calc(100% - 418px);\\n  left: auto !important; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-left-rating-text {\\n  left: 0px;\\n  right: auto !important; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .option-right-rating-text {\\n  right: 0;\\n  left: auto !important; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-right-rating-text {\\n  right: 0;\\n  left: auto !important; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-left-rating-text {\\n  left: 2px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"slider\\\"] .option-right-rating-text {\\n  right: 0;\\n  width: 40%;\\n  text-align: right; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"slider\\\"] .option-left-rating-text {\\n  left: 0;\\n  text-align: left; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .rating-color {\\n  position: relative; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-smile-box img {\\n  margin-left: 29px;\\n  margin-right: 0px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-star-box img {\\n  margin-right: 19px;\\n  margin-left: 0px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box span {\\n  padding-left: 25px;\\n  text-align: left;\\n  padding-right: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n  right: 7px;\\n  left: auto !important;\\n  text-align: right; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-left-rating-text,\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-left-rating-text {\\n  left: 7px;\\n  right: auto !important;\\n  text-align: left; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-csat {\\n  width: auto;\\n  box-sizing: border-box;\\n  padding-right: 0;\\n  margin-left: 13px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box.selected,\\n[dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box:hover,\\n[dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box {\\n  background-position: calc(100% - ( 100% - 44px)) center;\\n  text-align: left; }\\n\\n@media (min-width: 769px) and (max-width: 992px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .option-smile-box img,\\n  [dir=\\\"rtl\\\"].cc-sdk .option-star-box img {\\n    margin-right: 0px;\\n    margin-left: 10px; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__content.rating-color {\\n    margin-left: 10px;\\n    margin-right: 86px !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .option-right-rating-text {\\n    right: 17px;\\n    left: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n    right: 7px;\\n    text-align: right;\\n    left: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-left-rating-text,\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-left-rating-text {\\n    left: 20px;\\n    right: auto !important;\\n    text-align: left; }\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box.selected,\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box:hover,\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box {\\n    width: auto; } }\\n\\n@media (max-width: 768px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .option-smile-box img,\\n  [dir=\\\"rtl\\\"].cc-sdk .option-star-box img {\\n    padding-left: 0px;\\n    padding-right: 5px;\\n    margin-left: 0;\\n    margin-right: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"csat\\\"] .cc-checkbox input[type=\\\"radio\\\"] {\\n    margin-left: 7px;\\n    opacity: 0;\\n    outline: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box.selected,\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box:hover,\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box {\\n    background-position: calc(100% - ( 100% - 44px)) center; }\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box span {\\n    padding-left: 39px;\\n    text-align: left;\\n    padding-right: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-left-rating-text,\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-left-rating-text {\\n    left: 10px;\\n    right: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .option-left-rating-text {\\n    left: 10px;\\n    right: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n    left: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .option-right-rating-text {\\n    right: calc(100% - 322px);\\n    left: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-right-rating-text {\\n    right: 13px;\\n    left: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .radial-legend-right, [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .radial-legend-right {\\n    right: auto !important;\\n    left: 10px !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .radial-legend-left, [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .radial-legend-left {\\n    left: auto !important;\\n    right: 10px !important; } }\\n\\n@media (max-width: 381px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .option-right-rating-text {\\n    right: calc(100% - 258px);\\n    left: auto !important; } }\\n\\n.cc-sdk .cc-select-wrapper {\\n  position: relative;\\n  display: inline-block;\\n  user-select: none;\\n  z-index: 11; }\\n\\n.cc-sdk .cc-select-wrapper select {\\n  display: none; }\\n\\n.cc-sdk .cc-select {\\n  position: relative;\\n  display: inline-block;\\n  margin-right: 70px; }\\n\\n.cc-sdk .cc-select-trigger {\\n  position: relative;\\n  display: block;\\n  width: 130px;\\n  padding: 0 22px 0 84px;\\n  font-size: 15px;\\n  font-style: italic;\\n  font-weight: 300;\\n  color: #222;\\n  line-height: 20px;\\n  background: transparent;\\n  border-radius: 0;\\n  cursor: pointer;\\n  width: 300px;\\n  border-bottom: 1px solid #6d6d6d;\\n  display: inline-block;\\n  text-align: right;\\n  padding: 5px 5px 5px 20px;\\n  position: relative;\\n  /*background-image: url(../images/arrow-down.black.svg);*/\\n  background-position: 3% center;\\n  background-repeat: no-repeat;\\n  max-height: 50px;\\n  overflow: hidden; }\\n\\n.cc-sdk .cc-select-trigger:after {\\n  position: absolute;\\n  display: block;\\n  content: '';\\n  width: 10px;\\n  height: 10px;\\n  top: 50%;\\n  left: 5px;\\n  margin-top: -3px;\\n  border-bottom: 1px solid #222;\\n  border-left: 1px solid #222;\\n  transform: rotate(-45deg) translateY(-50%);\\n  transition: all .2s ease-in-out;\\n  transform-origin: 50% 0; }\\n\\n.cc-sdk .cc-select.cc-opened .cc-select-trigger:after {\\n  margin-top: 3px;\\n  transform: rotate(135deg) translateY(-50%); }\\n\\n.cc-sdk .cc-select-options-container {\\n  position: absolute;\\n  display: block;\\n  top: 100%;\\n  right: 0;\\n  left: 0;\\n  min-width: 100%;\\n  margin: 15px 0;\\n  border: 1px solid #b5b5b5;\\n  border-radius: 4px;\\n  box-sizing: border-box;\\n  box-shadow: 0 2px 1px rgba(0, 0, 0, 0.07);\\n  background: #fff;\\n  transition: all .2s ease-in-out;\\n  opacity: 0;\\n  visibility: hidden;\\n  pointer-events: none;\\n  transform: translateY(calc( -100% - 65px));\\n  height: auto;\\n  max-height: 150px;\\n  overflow: hidden;\\n  overflow-y: scroll; }\\n\\n.cc-sdk .cc-select-options {\\n  /*  max-height: 150px;\\r\\n    overflow-y: scroll; */\\n  overflow-y: scroll;\\n  height: 100%;\\n  width: 110%; }\\n\\n.cc-sdk .cc-select.cc-opened .cc-select-options-container {\\n  opacity: 1;\\n  visibility: visible;\\n  pointer-events: all;\\n  transform: translateY(-100%) translateY(-65px); }\\n\\n@media (min-width: 769px) {\\n  .cc-sdk .cc-popup-container-2.top .cc-select-options-container,\\n  .cc-sdk .cc-popup-container-2.top .cc-select.cc-opened .cc-select-options-container {\\n    transform: translateY(-19px); } }\\n\\n.cc-sdk .cc-select-options:before {\\n  /*       position: absolute;\\r\\n    display: block;\\r\\n    content: '';\\r\\n    bottom: 100%; right: 25px;\\r\\n    width: 7px; height: 7px;\\r\\n    margin-bottom: -4px;\\r\\n    border-top: 1px solid #b5b5b5;\\r\\n    border-left: 1px solid #b5b5b5;\\r\\n    background: #fff;\\r\\n    transform: rotate(45deg);\\r\\n    transition: all .4s ease-in-out; */ }\\n\\n.cc-sdk .option-hover:before {\\n  background: #f9f9f9; }\\n\\n.cc-sdk .cc-select-option {\\n  position: relative;\\n  display: block;\\n  padding: 0 12px;\\n  border-bottom: 1px solid #e4e4e4;\\n  font-size: 12px;\\n  font-weight: 600;\\n  color: #222;\\n  line-height: 34px;\\n  cursor: pointer;\\n  transition: all .2s ease-in-out;\\n  text-align: right;\\n  margin: 0;\\n  width: 100%; }\\n\\n.cc-sdk .cc-select-option:first-of-type {\\n  border-radius: 4px 4px 0 0; }\\n\\n.cc-sdk .cc-select-option:last-of-type {\\n  border-bottom: 0;\\n  border-radius: 0 0 4px 4px; }\\n\\n.cc-sdk .cc-select-option:hover,\\n.cc-sdk .cc-select-option.selection {\\n  background: #eaeaea; }\\n\\n.cc-sdk .cc-select-wrapper.down .cc-select-options-container {\\n  transform: translateY(calc( 20px)); }\\n\\n.cc-sdk .cc-select-wrapper.down .cc-select.cc-opened .cc-select-options-container {\\n  transform: translateY(calc( 20px)); }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .cc-question-container__content,\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .cc-question-container__content {\\n  width: 40%; }\\n\\n@media (max-width: 768px) {\\n  .cc-sdk .cc-select,\\n  .cc-sdk .cc-select-wrapper {\\n    min-width: 100%; }\\n  .cc-sdk .cc-select {\\n    margin-right: 0px; }\\n  .cc-sdk .cc-select-trigger {\\n    min-width: 100%;\\n    width: auto; } }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-select-trigger {\\n  padding: 0 84px 0 22px;\\n  background-position: 3% center;\\n  background-repeat: no-repeat;\\n  text-align: left; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-select-trigger:after {\\n  top: 50%;\\n  right: 2px;\\n  left: auto; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-select-option {\\n  text-align: left; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-select-option:first-of-type {\\n  border-radius: 0px 4px 4px 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-select-option:last-of-type {\\n  border-radius: 4px 0 0px 4px; }\\n\\n/** Checkbox **/\\n.cc-sdk .cc-checkbox {\\n  display: table-cell;\\n  vertical-align: middle;\\n  position: relative;\\n  text-align: center; }\\n\\n.cc-sdk .cc-checkbox label {\\n  cursor: pointer;\\n  display: block;\\n  height: 20px;\\n  width: 20px; }\\n\\n.cc-sdk .cc-checkbox + span label img {\\n  width: 40px;\\n  display: inline-block;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-checkbox label:before,\\n.cc-sdk .cc-checkbox label:after {\\n  content: \\\"\\\";\\n  right: 0;\\n  margin: auto;\\n  position: absolute;\\n  top: calc(50% - 12.5px); }\\n\\n.cc-sdk .cc-checkbox label:before {\\n  background: transparent;\\n  border-radius: 2px;\\n  border: 1px solid #424242;\\n  cursor: pointer;\\n  height: 20px;\\n  transition: background 0.3s;\\n  width: 20px; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"checkbox\\\"] {\\n  opacity: 0;\\n  outline: 0; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:before {\\n  background: #fdaf19;\\n  border: none; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:after {\\n  border: 3px solid #222;\\n  border-left-style: none;\\n  border-top-style: none;\\n  height: 7px;\\n  top: calc(50% - 8.5px);\\n  right: 4px;\\n  transform: rotate(45deg);\\n  width: 12px; }\\n\\n/*radio*/\\n.cc-sdk .cc-checkbox.cc-radio label:before {\\n  background: transparent;\\n  border: 1px solid #424242;\\n  cursor: pointer;\\n  height: 25px;\\n  transition: background-color 0.3s;\\n  width: 25px; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"radio\\\"] {\\n  opacity: 0;\\n  outline: 0; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"radio\\\"]:checked + label:before {\\n  background: transparent;\\n  border-color: #fdaf19; }\\n\\n.cc-sdk .cc-question-container__list li {\\n  display: inline-table;\\n  margin-bottom: 0; }\\n  .cc-sdk .cc-question-container__list li .cc-sdk .cc-checkbox,\\n  .cc-sdk .cc-question-container__list li .cc-radio {\\n    width: 30px; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"radio\\\"]:checked + label:after {\\n  -moz-transform: scale(0.8);\\n  -ms-transform: scale(0.8);\\n  -o-transform: scale(0.8);\\n  -webkit-transform: scale(0.8);\\n  background: #fdaf19;\\n  border-radius: 30px;\\n  height: 25px;\\n  transform: scale(0.8);\\n  width: 25px; }\\n\\n.cc-sdk .cc-radio label:before {\\n  border-radius: 30px; }\\n\\n.cc-sdk .radio-toggle--more-option li span {\\n  padding-right: 25px !important;\\n  width: 125px !important; }\\n\\n.cc-sdk .radio-toggle .cc-question-container__list li {\\n  padding-right: 15px; }\\n\\n@media (min-width: 1000px) {\\n  .cc-sdk .radio-toggle .cc-question-container__list li span label {\\n    overflow: hidden;\\n    max-height: 100px;\\n    display: block; } }\\n\\n@media (min-width: 769px) and (max-width: 992px) {\\n  .cc-sdk .radio-toggle .cc-question-container__list li {\\n    padding-right: 10px; }\\n  .cc-sdk .radio-toggle .cc-question-container__list li span .label {\\n    display: block;\\n    max-height: 50px;\\n    overflow: hidden;\\n    text-overflow: ellipsis; }\\n  .cc-sdk .radio-toggle .cc-question-container__list li span label {\\n    overflow: hidden;\\n    max-height: 50px;\\n    display: block;\\n    text-overflow: ellipsis; } }\\n\\n@media (max-width: 768px) {\\n  .cc-sdk .radio-toggle .cc-question-container__list li {\\n    padding-right: 0; }\\n  .cc-sdk .radio-toggle .cc-question-container__list li {\\n    display: block;\\n    padding-left: 50px; } }\\n\\n.cc-sdk .progress-bar {\\n  width: 100%;\\n  position: absolute;\\n  background: #a47c2b;\\n  z-index: 1;\\n  height: 8px;\\n  right: 0; }\\n\\n.cc-sdk .progress-line {\\n  background: #fdaf19;\\n  height: 100%;\\n  display: block;\\n  width: 0%;\\n  transition: all .4s ease-in; }\\n\\n@media screen and (max-width: 768px) {\\n  .cc-sdk .progress-bar {\\n    bottom: unset;\\n    top: 0px; } }\\n\\n/** Scrollbar\\t**/\\n.cc-sdk .cc-scrollbar-wrapper {\\n  float: right;\\n  height: 100%;\\n  overflow: hidden;\\n  position: relative;\\n  width: 100%;\\n  z-index: 1; }\\n\\n.cc-sdk .cc-scrollbar-content {\\n  -moz-box-sizing: border-box;\\n  /* padding         : 0 32px 0 0; */\\n  /* right           : -18px; */\\n  box-sizing: border-box;\\n  height: 100%;\\n  overflow: auto;\\n  position: relative;\\n  width: 107%; }\\n\\n.cc-sdk .cc-scrollbar-scroll {\\n  background: #aaa;\\n  border-radius: 4px;\\n  cursor: pointer;\\n  opacity: 0;\\n  position: relative;\\n  top: 0;\\n  transition: opacity 0.25s linear;\\n  width: 9px;\\n  z-index: 2; }\\n\\n.cc-sdk .cc-scrollbar-container:hover .cc-scrollbar-scroll {\\n  opacity: 1; }\\n\\n.cc-sdk .cc-scrollbar-grabbed {\\n  -khtml-user-select: none;\\n  -moz-user-select: none;\\n  -o-user-select: none;\\n  -webkit-user-select: none;\\n  user-select: none; }\\n\\n.cc-sdk .cc-sdk-range {\\n  -webkit-appearance: none;\\n  -moz-appearance: none;\\n  width: 500px;\\n  height: 60px;\\n  background: transparent; }\\n\\n.cc-sdk input[type=range]::-webkit-slider-runnable-track {\\n  -webkit-appearance: none;\\n  background: #ff403d;\\n  background: -moz-linear-gradient(45deg, #ff403d 0%, #992a28 100%);\\n  background: -webkit-linear-gradient(45deg, #ff403d 0%, #992a28 100%);\\n  background: linear-gradient(-135deg, #ff403d 0%, #992a28 100%);\\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ff403d ', endColorstr='#992a28 ', GradientType=1);\\n  height: 1px; }\\n\\n.cc-sdk input[type=range]:focus {\\n  outline: none; }\\n\\n.cc-sdk input[type=range]::-moz-range-track {\\n  -moz-appearance: none;\\n  background: #ff403d;\\n  background: -moz-linear-gradient(45deg, #ff403d 0%, #992a28 100%);\\n  background: -webkit-linear-gradient(45deg, #ff403d 0%, #992a28 100%);\\n  background: linear-gradient(-135deg, #7a0806 0%, #992a28 100%);\\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ff403d ', endColorstr='#992a28 ', GradientType=1);\\n  height: 1px; }\\n\\n.cc-sdk input[type=range]::-ms-track {\\n  height: 1px;\\n  width: 500px;\\n  background-color: #ff403d; }\\n\\n.cc-sdk input[type=range]::-webkit-slider-thumb {\\n  -webkit-appearance: none;\\n  border: 1px solid #ff403d;\\n  border-radius: 50%;\\n  height: 32px;\\n  width: 32px;\\n  max-width: 80px;\\n  position: relative;\\n  bottom: 16px;\\n  background-color: #fff;\\n  cursor: -webkit-grab; }\\n\\n.cc-sdk input[type=range]::-ms-thumb {\\n  border: 1px solid #ff403d;\\n  border-radius: 50%;\\n  height: 32px;\\n  width: 32px;\\n  background: #e08692;\\n  box-sizing: border-box;\\n  cursor: pointer !important; }\\n\\n.cc-sdk input[type=range]::-moz-range-thumb {\\n  -moz-appearance: none;\\n  border: 1px solid #ff403d;\\n  border-radius: 50%;\\n  height: 32px;\\n  width: 32px;\\n  max-width: 80px;\\n  position: relative;\\n  bottom: 16px;\\n  background-color: #fff;\\n  cursor: -moz-grab; }\\n\\n.cc-sdk input[type=range]::-moz-range-thumb:before {\\n  content: 'asd'; }\\n\\n.cc-sdk input[type=range]::-webkit-slider-thumb:active {\\n  cursor: -webkit-grabbing; }\\n\\n.cc-sdk input[type=range]::-moz-range-thumb:active {\\n  cursor: -moz-grabbing; }\\n\\n.cc-sdk .cc-question-container__content.cc-sdk-range-slider {\\n  height: 50px; }\\n\\n.cc-sdk .slider-tip {\\n  background: #eb1c23;\\n  padding: 8px 9px 9px 9px;\\n  position: absolute;\\n  right: 0px;\\n  left: 0;\\n  margin: 0 auto;\\n  /* border-top-left-radius: 10px; */\\n  /* border-top-right-radius: 10px; */\\n  /* border-bottom-left-radius: 100%; */\\n  /* border-bottom-right-radius: 100%; */\\n  color: #fff;\\n  /* display: none !important; */\\n  background: none;\\n  color: #424242;\\n  font-size: 13px;\\n  width: 100px;\\n  display: inline-block;\\n  text-align: center;\\n  font-weight: bold; }\\n\\n.cc-sdk .slider-tip:after {\\n  border-width: 5px 5px 0;\\n  border-top-color: #000; }\\n\\n@media (max-width: 1024px) {\\n  .cc-sdk .cc-sdk-range {\\n    width: 100%; } }\\n\\n.cc-sdk input.cc-sdk-range.cc-blue::-moz-range-track,\\n.cc-sdk input.cc-sdk-range.cc-blue::-webkit-slider-runnable-track {\\n  background: blue; }\\n\\n.cc-sdk .chart {\\n  -moz-box-sizing: border-box;\\n  -webkit-box-sizing: border-box;\\n  box-sizing: border-box;\\n  display: inline-block;\\n  height: 21px;\\n  padding-top: 22px;\\n  position: relative;\\n  vertical-align: top;\\n  width: 21px; }\\n\\n.cc-sdk .cc-sdk-chart span {\\n  display: block;\\n  font-size: 2em;\\n  font-weight: normal; }\\n\\n.cc-sdk .cc-sdk-chart canvas {\\n  right: 0;\\n  position: absolute;\\n  top: 0; }\\n\\n.cc-sdk .cc-sdk-loader {\\n  height: 21px;\\n  right: 28px;\\n  position: absolute;\\n  top: 8px;\\n  width: 21px; }\\n\\n@media (min-width: 769px) {\\n  .cc-sdk .cc-sdk-chart canvas {\\n    margin-right: 10px; } }\\n\\n@media (max-width: 768px) {\\n  .cc-sdk .cc-sdk-loader {\\n    position: relative;\\n    right: auto;\\n    top: 0;\\n    left: auto; } }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-sdk-chart canvas {\\n  left: 0;\\n  right: auto; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-sdk-loader {\\n  left: 28px;\\n  right: auto; }\\n\\n@media (min-width: 768px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-sdk-chart canvas {\\n    margin-left: 10px;\\n    margin-right: 0; } }\\n\\n/** Utilities **/\\n.cc-sdk .show {\\n  display: block !important; }\\n\\n.cc-sdk .show-inline {\\n  display: inline-block !important; }\\n\\n.cc-sdk .hide {\\n  display: none !important; }\\n\\n.cc-sdk.bottom {\\n  bottom: 0; }\\n\\n.cc-sdk.right, .cc-sdk .right {\\n  left: 0; }\\n\\n.cc-sdk .left {\\n  right: 0; }\\n\\n.cc-sdk .top {\\n  top: 0; }\\n\\n.ccsdk-overlay {\\n  background: #fff;\\n  bottom: 0;\\n  height: 100%;\\n  right: 0;\\n  position: absolute;\\n  top: 0;\\n  width: 100%;\\n  z-index: 0; }\\n\\n.ccsdk-overlay.ccsdk-glass {\\n  background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/ww.png);\\n  background-repeat: no-repeat;\\n  background-size: cover; }\\n\\n.ccsdk-clearfix {\\n  clear: both;\\n  display: block; }\\n\\n.ccsdk-text-normal {\\n  font-weight: 400; }\\n\\n.cc-sdk ::-webkit-input-placeholder {\\n  /* Chrome/Opera/Safari */\\n  color: #4c4c4c;\\n  font-family: 'Open Sans';\\n  font-size: 13px;\\n  font-style: italic;\\n  font-weight: normal; }\\n\\n.cc-sdk .cc-sdk-form-control::-moz-placeholder {\\n  /* Firefox 19+ */\\n  font-style: italic;\\n  font-size: 13px;\\n  font-weight: normal;\\n  font-family: 'Open Sans';\\n  color: #4c4c4c; }\\n\\n.cc-sdk .cc-sdk-form-control:-ms-input-placeholder {\\n  /* IE 10+ */\\n  font-style: italic;\\n  font-size: 13px;\\n  font-weight: normal;\\n  font-family: 'Open Sans';\\n  color: #4c4c4c; }\\n\\n.cc-sdk .cc-sdk-form-control:-moz-placeholder {\\n  /* Firefox 18- */\\n  font-style: italic;\\n  font-size: 13px;\\n  font-weight: normal;\\n  font-family: 'Open Sans';\\n  color: #4c4c4c; }\\n\\n@media (min-width: 769px) {\\n  .desktop-hide {\\n    display: none; } }\\n\\n@media (max-width: 768px) {\\n  .mobile-hide {\\n    display: none; }\\n  .cc-sdk-loader {\\n    position: relative;\\n    right: auto;\\n    top: 0;\\n    left: auto; }\\n  .ccsdk-overlay.welcome-overlay {\\n    /*background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/ww.png);*/\\n    background: rgba(210, 42, 53, 0.87); } }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .submit-icon {\\n  right: 0;\\n  left: auto;\\n  margin-right: 75px; }\\n\\n@media (max-width: 768px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .submit-icon {\\n    position: absolute;\\n    right: auto;\\n    top: auto;\\n    bottom: 30px;\\n    padding-right: 0;\\n    left: 20px;\\n    margin: 0; } }\\n\\n/** Themes **/\\n/** Prefetch icons **/\\n.cc-sdk::before {\\n  width: 0px;\\n  height: 0px;\\n  overflow: hidden;\\n  position: absolute;\\n  z-index: -1; }\\n\\n.cc-sdk .yellow .progress-bar {\\n  background: #a47c2b; }\\n\\n.cc-sdk .yellow .progress-line {\\n  background: #fdaf19; }\\n\\n.cc-sdk .yellow .submit-icon {\\n  background-image: url(\\\"data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%2747px%27%20height%3D%2747px%27%20viewBox%3D%270%200%2047%2047%27%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%3E%3Ctitle%3EGroup%2016%3C%2Ftitle%3E%3Cdesc%3ECreated%20with%20Sketch.%3C%2Fdesc%3E%3Cdefs%3E%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%3Cfilter%20x%3D%27-18.1%25%27%20y%3D%27-12.9%25%27%20width%3D%27136.2%25%27%20height%3D%27136.2%25%27%20filterUnits%3D%27objectBoundingBox%27%20id%3D%27filter-2%27%3E%3CfeOffset%20dx%3D%270%27%20dy%3D%272%27%20in%3D%27SourceAlpha%27%20result%3D%27shadowOffsetOuter1%27%3E%3C%2FfeOffset%3E%3CfeGaussianBlur%20stdDeviation%3D%272%27%20in%3D%27shadowOffsetOuter1%27%20result%3D%27shadowBlurOuter1%27%3E%3C%2FfeGaussianBlur%3E%3CfeColorMatrix%20values%3D%270%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200.116423234%200%27%20type%3D%27matrix%27%20in%3D%27shadowBlurOuter1%27%3E%3C%2FfeColorMatrix%3E%3C%2Ffilter%3E%3C%2Fdefs%3E%3Cg%20id%3D%27Page-1%27%20stroke%3D%27none%27%20stroke-width%3D%271%27%20fill%3D%27none%27%20fill-rule%3D%27evenodd%27%3E%3Cg%20id%3D%271-copy-20%27%20transform%3D%27translate(-1246.000000%2C%20-664.000000)%27%3E%3Cg%20id%3D%27Group-16%27%20transform%3D%27translate(1250.000000%2C%20666.000000)%27%3E%3Cg%20id%3D%27Oval-4%27%3E%3Cuse%20fill%3D%27white%27%20fill-opacity%3D%271%27%20filter%3D%27url(%23filter-2)%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3Cuse%20fill%3D%27%23d04a49%27%20fill-rule%3D%27evenodd%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3C%2Fg%3E%3Cg%20id%3D%27Group-5%27%20transform%3D%27translate(12.000000%2C%2011.000000)%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23FFFFFF%27%3E%3Cg%20id%3D%27fast-forward-arrows%27%20transform%3D%27translate(6.173934%2C%200.000000)%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3Cg%20id%3D%27fast-forward-arrows-copy%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\\\"); }\\n\\n.cc-sdk .yellow .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:before {\\n  background: #fdaf19; }\\n\\n.cc-sdk .yellow .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:after {\\n  border-color: #222; }\\n\\n.cc-sdk .yellow .cc-checkbox input[type=\\\"radio\\\"]:checked + label:before {\\n  border-color: #fdaf19; }\\n\\n.cc-sdk .yellow .cc-checkbox input[type=\\\"radio\\\"]:checked + label:after {\\n  background: #fdaf19; }\\n\\n.cc-sdk .yellow .cc-sdk-form-control:focus {\\n  border-color: #fcaf18; }\\n\\n.cc-sdk .yellow .cc-message-box__btn {\\n  background: #fdaf19; }\\n\\n.cc-sdk .red .progress-bar {\\n  /*background: rgba(130, 17, 25, 0.87);*/\\n  background: #d22a35; }\\n\\n.cc-sdk .red .progress-line {\\n  background: #d22a35;\\n  filter: brightness(150%); }\\n\\n.cc-sdk .red .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:before {\\n  background: #d22a35; }\\n\\n.cc-sdk .red .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:after {\\n  border-color: #fff; }\\n\\n.cc-sdk .red .cc-checkbox input[type=\\\"radio\\\"]:checked + label:before {\\n  border-color: #d22a35; }\\n\\n.cc-sdk .red .cc-checkbox input[type=\\\"radio\\\"]:checked + label:after {\\n  background: #d22a35; }\\n\\n.cc-sdk .red .cc-sdk-form-control:focus {\\n  border-color: #d22a35; }\\n\\n.cc-sdk .red .cc-message-box__btn {\\n  background: #d22a35;\\n  color: #fff; }\\n\\n.cc-question-container, .hide-slide {\\n  -webkit-transform: translateX(-5px);\\n  -moz-transform: translateX(-5px);\\n  -ms-transform: translateX(-5px);\\n  -o-transform: translateX(-5px);\\n  transform: translateX(-5px);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.hide-bottom-up {\\n  -webkit-transform: translateY(30px);\\n  -moz-transform: translateY(30px);\\n  -ms-transform: translateY(30px);\\n  -o-transform: translateY(30px);\\n  transform: translateY(30px);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.hide-up-bottom {\\n  -webkit-transform: translateY(100%);\\n  -moz-transform: translateY(100%);\\n  -ms-transform: translateY(100%);\\n  -o-transform: translateY(100%);\\n  transform: translateY(100%);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.hide-right-left {\\n  -webkit-transform: translateX(-100%);\\n  -moz-transform: translateX(-100%);\\n  -ms-transform: translateX(-100%);\\n  -o-transform: translateX(-100%);\\n  transform: translateX(-100%);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.hide-left-right {\\n  -webkit-transform: translateX(100%);\\n  -moz-transform: translateX(100%);\\n  -ms-transform: translateX(100%);\\n  -o-transform: translateX(100%);\\n  transform: translateX(100%);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.show-slide, .show-thankyou-slide {\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: visible;\\n  opacity: 1;\\n  -webkit-transform: translateX(0) translateY(0);\\n  -moz-transform: translateX(0) translateY(0);\\n  -ms-transform: translateX(0) translateY(0);\\n  -o-transform: translateX(0) translateY(0);\\n  transform: translateX(0) translateY(0); }\\n\\n.cc-sdk #timer {\\n  position: relative; }\\n\\n.cc-sdk svg.cc-sdk-timer {\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  width: 40px;\\n  height: 40px;\\n  transform: rotateY(-180deg) rotateZ(90deg); }\\n\\n[dir=\\\"rtl\\\"].cc-sdk svg.cc-sdk-timer {\\n  left: 0;\\n  right: auto; }\\n\\n.cc-sdk svg.cc-sdk-timer circle {\\n  stroke-dasharray: 50px;\\n  stroke-dashoffset: 0px;\\n  stroke-linecap: round;\\n  stroke-width: 2px;\\n  stroke: red;\\n  fill: none;\\n  animation: countdown 10s linear 1 forwards; }\\n\\n@keyframes countdown {\\n  from {\\n    stroke-dashoffset: 0px; }\\n  to {\\n    stroke-dashoffset: 50px; } }\\n\\n.cc-sdk .cc-loaderimg {\\n  position: absolute;\\n  width: 100%;\\n  z-index: 1000;\\n  right: 0;\\n  left: 0;\\n  top: 0;\\n  height: 100%;\\n  background: rgba(255, 255, 255, 0.8); }\\n\\n.cc-sdk .cc-loaderimg svg {\\n  width: 100px; }\\n\" : \".cc-sdk ul {\\n  padding-left: 0;\\n  list-style-type: none;\\n  margin: 0; }\\n\\n.cc-sdk a,\\n.cc-sdk a:hover,\\n.cc-sdk a:focus {\\n  text-decoration: none;\\n  color: inherit; }\\n\\n.cc-sdk *,\\n.cc-sdk *:before,\\n.cc-sdk *:after {\\n  box-sizing: border-box; }\\n\\n.cc-sdk p {\\n  color: inherit;\\n  margin: 0; }\\n\\n.cc-sdk map area {\\n  outline: 0;\\n  cursor: pointer; }\\n\\n.cc-sdk map area.selected {\\n  outline: 0px;\\n  outline-color: #0a2135;\\n  outline-width: 0px;\\n  outline-style: solid; }\\n\\n.cc-sdk map area:hover {\\n  outline: 1; }\\n\\n.cc-sdk label {\\n  margin-bottom: 0;\\n  font-weight: normal; }\\n\\n.cc-sdk input,\\n.cc-sdk textarea {\\n  padding: 0;\\n  border: none;\\n  width: auto;\\n  margin-top: 0;\\n  font-size: inherit;\\n  font-style: inherit;\\n  font-weight: inherit;\\n  color: inherit;\\n  outline: none; }\\n\\n.cc-sdk p {\\n  font-size: inherit; }\\n\\n.cc-sdk.cc-popup-container {\\n  background: #fff;\\n  box-shadow: 0 0 4px 5px rgba(0, 0, 0, 0.05);\\n  font-family: \\\"open sans\\\", sans-serif;\\n  position: fixed;\\n  text-align: center;\\n  max-width: 500px;\\n  max-height: 500px;\\n  z-index: 1111; }\\n\\n@media (min-width: 768px) {\\n  .cc-sdk.cc-popup-container {\\n    padding: 10px; } }\\n\\n.cc-sdk.cc-popup-container.bottom {\\n  margin-bottom: 9px; }\\n\\n.cc-sdk.cc-popup-container.top {\\n  margin-top: 9px; }\\n\\n.cc-sdk #cc-thankyou-container .cc-question-container__text p {\\n  word-break: break-word; }\\n\\n.cc-sdk #cc-thankyou-container .cc-question-container__text p,\\n.cc-sdk #cc-thankyou-container .cc-question-container__text {\\n  width: 400px;\\n  max-width: initial;\\n  font-size: 17px;\\n  color: #424242; }\\n\\n.cc-sdk .cc-message-box {\\n  position: relative;\\n  z-index: 11; }\\n\\n.cc-sdk .cc-message-box__text {\\n  color: #424242;\\n  font-size: 14px;\\n  font-weight: 600;\\n  margin: 0;\\n  padding: 29px 14px 20px 14px;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-message-box__btn {\\n  background: #fdaf19;\\n  border-radius: 100px;\\n  display: inline-block;\\n  font-size: 15px;\\n  font-weight: 700;\\n  height: 32px;\\n  padding: 6px 0;\\n  width: 124px;\\n  text-align: center; }\\n\\n.cc-sdk.cc-popup-container .cc-popup-container__close {\\n  cursor: pointer;\\n  margin: 4px;\\n  position: absolute;\\n  right: 0;\\n  top: 0;\\n  z-index: 111; }\\n\\n.cc-sdk .cc-popup-container-2 {\\n  /* box-shadow: 0 0 4px 5px rgba(0,0,0,0.05); */\\n  height: 144px;\\n  position: fixed;\\n  width: 100%;\\n  z-index: 1111; }\\n\\n.cc-sdk .cc-popup-container-2.bottom {\\n  bottom: 0px; }\\n\\n.cc-sdk .cc-popup-container-2__icons,\\n.cc-sdk .cc-popup-container-2__icons {\\n  cursor: pointer;\\n  padding: 8px;\\n  position: absolute;\\n  top: 0;\\n  z-index: 111; }\\n\\n.cc-sdk .top.cc-popup-container-2 .cc-popup-container-2__icons {\\n  padding-top: 15px; }\\n\\n.cc-sdk .cc-popup-container-2__icons.cc-right-icon {\\n  right: 0; }\\n\\n.cc-sdk .cc-popup-container-2__icons.cc-left-icon {\\n  left: 0; }\\n\\n.cc-sdk .cc-popup-container__back {\\n  background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);\\n  display: inline-block;\\n  width: 21px;\\n  height: 21px; }\\n\\n.cc-sdk .cc-question-container {\\n  /* margin: auto; */\\n  padding: 20px 20px 25px;\\n  position: absolute;\\n  text-align: center;\\n  width: 100%;\\n  z-index: 11;\\n  top: 0;\\n  left: 0; }\\n\\n.cc-sdk .cc-question-container__text {\\n  /*height: 80px;*/\\n  color: #424242;\\n  display: inline-block;\\n  font-size: 15px;\\n  font-weight: 600;\\n  max-width: 230px;\\n  padding: 8px 0;\\n  text-align: center;\\n  vertical-align: middle;\\n  width: 20%;\\n  position: relative; }\\n  .cc-sdk .cc-question-container__text p {\\n    word-break: break-word; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"csat\\\"] .cc-question-container__text {\\n  width: 11em; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"csat\\\"] .cc-question-container__list {\\n  width: 64vw; }\\n\\n.cc-sdk .cc-question-container__required,\\n.cc-sdk .cc-question-container__validation {\\n  position: absolute;\\n  top: -14px;\\n  font-size: 11px;\\n  left: 0;\\n  width: 100%;\\n  right: 0;\\n  font-weight: normal;\\n  color: #c1272d;\\n  display: none; }\\n\\n.cc-sdk .cc-question-container__required-label {\\n  display: inline-block;\\n  position: relative;\\n  top: -2px;\\n  left: -2px; }\\n\\n.cc-sdk .cc-question-container__content {\\n  display: inline-block;\\n  max-width: 78%;\\n  vertical-align: middle;\\n  width: auto; }\\n\\n.cc-sdk .cc-question-container__list li {\\n  display: inline-block;\\n  padding-left: 29px;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-question-container__list li span {\\n  display: table-cell;\\n  font-size: 15px;\\n  padding-left: 15px;\\n  text-align: left;\\n  vertical-align: middle;\\n  width: 125px; }\\n\\n.cc-sdk .cc-question-container__list li input {\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-question-container:before {\\n  content: \\\"\\\";\\n  display: inline-block;\\n  height: 100%;\\n  margin-right: -4px;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-question-container {\\n  height: 100%;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-questions-container {\\n  height: 100%; }\\n\\n.cc-sdk p.cc-thankyou-powered {\\n  font-size: 13px !important;\\n  color: #404040 !important;\\n  margin-top: 4px;\\n  font-weight: 400 !important; }\\n  .cc-sdk p.cc-thankyou-powered.no-branding {\\n    display: none; }\\n\\n.cc-sdk .cc-thankyou-powered .cc-thankyou-logo {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/cc-thankyou-logo.svg\\\");\\n  background-size: cover;\\n  margin-right: 8px;\\n  display: inline-block;\\n  width: 16px;\\n  height: 16px; }\\n\\n.cc-sdk .multiline-box {\\n  background: #fff;\\n  border-radius: 2px;\\n  border: 1px #6d6d6d solid;\\n  font-family: \\\"Open Sans\\\";\\n  font-size: 15px;\\n  height: 70px;\\n  margin: 0 0px 0 50px;\\n  min-width: 600px;\\n  padding: 2px 5px;\\n  resize: none; }\\n\\n.cc-sdk .multiline-box:focus {\\n  outline: 0; }\\n\\n.cc-sdk .detail-box .cc-question-container__text p {\\n  font-size: 13px;\\n  font-weight: 700; }\\n\\n.cc-sdk .detail-box .cc-question-container__text span {\\n  display: inline-block;\\n  font-size: 15px;\\n  font-weight: normal; }\\n\\n.cc-sdk .detail-box .cc-question-container__text {\\n  height: 56px; }\\n\\n.cc-sdk .detail-box[data-type=\\\"singleline\\\"] .cc-question-container__text {\\n  margin-right: 20px; }\\n\\n.cc-sdk .detail-box .cc-question-container__content .cc-sdk-form-control,\\n.cc-sdk .single-line .cc-question-container__content .cc-sdk-form-control {\\n  background: transparent;\\n  border: none;\\n  border-bottom: 1px solid #6d6d6d;\\n  font-family: \\\"open sans\\\";\\n  font-size: 15px;\\n  line-height: 26px;\\n  outline: 0;\\n  width: 300px;\\n  margin-left: 70px; }\\n\\n.cc-sdk .d-star-box.detail-box .cc-question-container__text {\\n  height: 92px; }\\n\\n.cc-sdk .hl.dropdown {\\n  background-image: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/arrow-down.black.svg\\\");\\n  background-position: 97% center;\\n  background-repeat: no-repeat;\\n  border-bottom: 1px solid #6d6d6d;\\n  display: inline-block;\\n  padding: 5px;\\n  position: relative;\\n  text-align: left;\\n  width: 300px; }\\n\\n.cc-sdk .drop-cc-question-container .cc-question-container__text {\\n  /*height: 60px;*/\\n  margin-right: 20px; }\\n\\n.cc-sdk .cc-sdk-form-control:focus {\\n  border-color: #fcaf18; }\\n\\n.cc-sdk .detail-box .cc-question-container__content {\\n  padding-left: 0; }\\n\\n.cc-sdk .cc-big-list-container .cc-question-container__list {\\n  display: table;\\n  width: 100%; }\\n\\n.cc-sdk .cc-big-list-container .cc-question-container__list li {\\n  display: table-cell;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-thankyou-container {\\n  width: 100% !important; }\\n\\n.cc-sdk .submit-icon {\\n  direction: ltr;\\n  position: absolute;\\n  right: 0;\\n  top: 0;\\n  bottom: 0;\\n  margin: auto 0;\\n  z-index: 11;\\n  margin-right: 75px;\\n  font-size: 16px /*rtl:14px*/;\\n  cursor: pointer;\\n  width: 47px;\\n  height: 47px; }\\n\\n@media (min-width: 1000px) {\\n  .cc-sdk .cc-big-list-container .cc-question-container__list li span label {\\n    overflow: hidden;\\n    max-height: 100px;\\n    display: block; } }\\n\\n@media (min-width: 769px) and (max-width: 875px) {\\n  .cc-sdk .cc-question-container__list li {\\n    padding-left: 0px !important; } }\\n\\n@media (min-width: 769px) and (max-width: 1024px) {\\n  .cc-sdk .cc-popup-container-2 {\\n    height: 200px; }\\n  .cc-sdk .cc-big-list-container .cc-question-container__list,\\n  .cc-sdk .cc-question-container__list {\\n    text-align: left; }\\n  .cc-sdk .cc-big-list-container .cc-question-container__list li,\\n  .cc-sdk .cc-question-container__list li {\\n    display: inline-block;\\n    margin-bottom: 15px;\\n    vertical-align: middle;\\n    width: 49%; }\\n  .cc-sdk .cc-question-container__content {\\n    display: inline-block;\\n    width: 45%; }\\n  .cc-sdk .multiline-box {\\n    min-width: 100%;\\n    margin: 0; }\\n  .cc-sdk .option-smile-box img,\\n  .cc-sdk .option-star-box img {\\n    margin-right: 11px !important; }\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text p,\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text {\\n    width: 100% !important;\\n    text-align: center;\\n    margin: 0 !important;\\n    padding: 0;\\n    line-height: initial;\\n    height: auto; }\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text {\\n    max-width: 98%; } }\\n\\n@media (min-width: 1000px) {\\n  .cc-sdk .cc-question-container__text p {\\n    max-height: 100px;\\n    overflow: hidden;\\n    max-width: 140ch; }\\n  .cc-sdk .cc-question-container__text p.ellipsis:after {\\n    content: \\\"...\\\";\\n    text-align: right;\\n    bottom: 9px;\\n    right: -3px;\\n    width: 12px;\\n    display: block;\\n    position: absolute;\\n    height: calc(1em * 1.2); } }\\n\\n@media (min-width: 769px) and (max-width: 992px) {\\n  .cc-sdk .cc-question-container {\\n    width: 100%;\\n    margin: auto; }\\n  .cc-sdk .cc-question-container__text {\\n    width: 24%;\\n    padding-right: 20px; }\\n  .cc-sdk .cc-question-container__text p {\\n    max-height: 110px;\\n    overflow: hidden; }\\n  .cc-sdk .cc-question-container__content.rating-color {\\n    margin-left: 0px; }\\n  .cc-sdk .submit-icon {\\n    margin-right: 40px !important; }\\n  .cc-sdk .cc-question-container__content.rating-color {\\n    margin-left: 0px !important; }\\n  .cc-sdk .cc-question-container__content {\\n    width: 50% !important; } }\\n\\n@media (max-width: 768px) {\\n  .cc-sdk .cc-survey-container,\\n  .cc-sdk .cc-survey-content {\\n    height: 100%; }\\n  .cc-sdk .cc-popup-container-2 {\\n    bottom: auto;\\n    height: 100%;\\n    top: 0; }\\n  .cc-sdk .cc-popup-container-2__icons.cc-right-icon {\\n    left: auto;\\n    right: 0;\\n    padding: 0; }\\n  .cc-sdk .cc-popup-container-2__icons.cc-left-icon {\\n    left: 0;\\n    right: auto;\\n    padding: 0; }\\n  .cc-sdk .cc-big-list-container .cc-question-container__list li,\\n  .cc-sdk[dir=\\\"rtl\\\"] .cc-big-list-container .cc-question-container__list li {\\n    display: block; }\\n  .cc-sdk .radio-toggle--more-option li span {\\n    width: 84% !important;\\n    padding-left: 25px !important; }\\n  .cc-sdk .radio-toggle--more-option li {\\n    padding-right: 0 !important;\\n    display: block !important;\\n    padding-top: 10px; }\\n  .cc-sdk .detail-box .cc-question-container__content {\\n    padding-left: 0px; }\\n  .cc-sdk .cc-question-container {\\n    bottom: 75px;\\n    height: auto;\\n    left: 0;\\n    padding: 40px 20px;\\n    position: absolute;\\n    text-align: left;\\n    top: auto;\\n    width: 100%; }\\n  .cc-sdk .cc-question-container__text {\\n    font-size: 18px;\\n    margin-bottom: 20px;\\n    max-width: 400px;\\n    text-align: left;\\n    width: 100%; }\\n  .cc-sdk .cc-question-container__content {\\n    display: block;\\n    max-width: 100%;\\n    width: 100%; }\\n  .cc-sdk .cc-question-container__list label {\\n    display: block; }\\n  .cc-sdk .cc-question-container__list li span {\\n    width: auto;\\n    padding-left: 15px; }\\n  .cc-sdk .cc-question-container__list li {\\n    padding-left: 0;\\n    margin-bottom: 10px;\\n    display: block; }\\n  .cc-sdk .cc-popup-container-2__icons {\\n    margin: 20px; }\\n  .cc-sdk .cc-popup-container-2__icons.left-icon {\\n    left: auto;\\n    right: 0; }\\n  .cc-sdk .cc-popup-container-2__icons.right-icon {\\n    right: auto;\\n    left: 0; }\\n  .cc-sdk .cc-popup-container__close {\\n    width: 27px; }\\n  .cc-sdk .cc-question-container__content.rating-color {\\n    margin-left: 0 !important; }\\n  .cc-sdk\\n.cc-question-container[data-type=\\\"nps\\\"]\\n.cc-question-container__content,\\n  .cc-sdk\\n.cc-question-container[data-type=\\\"scale\\\"]\\n.cc-question-container__content {\\n    width: 100% !important; }\\n  .cc-sdk .multiline-box {\\n    height: 150px;\\n    margin: 0;\\n    min-width: 100%;\\n    width: 100%; }\\n  .cc-sdk .hl.dropdown {\\n    width: 100%; }\\n  .cc-sdk .detail-box .cc-question-container__content .cc-sdk-form-control {\\n    width: 100%; }\\n  .cc-sdk .detail-box .cc-question-container__text p {\\n    font-size: 18px; }\\n  .cc-sdk .mobile-detail-box .cc-question-container__text {\\n    height: auto; }\\n  .cc-sdk .cc-question-container__text p {\\n    max-height: auto; }\\n  .cc-sdk .welcome-box .cc-question-container__text p {\\n    color: #fff; }\\n  .cc-sdk .cc-questions-container {\\n    height: 100%;\\n    position: relative; }\\n  .cc-sdk .cc-message-box__btn {\\n    margin-left: 20px; } }\\n\\n@media (max-width: 768px) {\\n  .cc-sdk .detail-box .cc-question-container__content .cc-sdk-form-control,\\n  .cc-sdk .single-line .cc-question-container__content .cc-sdk-form-control {\\n    margin-left: 0; }\\n  .cc-sdk .submit-icon {\\n    position: absolute;\\n    left: 20px;\\n    top: auto;\\n    bottom: 30px;\\n    padding-right: 0; }\\n  .cc-sdk.cc-popup-container {\\n    position: fixed;\\n    bottom: 0;\\n    left: 0;\\n    right: 0;\\n    margin: 0 !important;\\n    width: 100%;\\n    height: 13em;\\n    max-width: 100%;\\n    max-height: 100%;\\n    text-align: left;\\n    background: transparent; }\\n  .cc-sdk.cc-popup-container .cc-message-box {\\n    position: absolute;\\n    bottom: 20%; }\\n  .cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text {\\n    font-size: 20px; }\\n  .cc-sdk.cc-popup-container .cc-message-box .submit-icon {\\n    position: absolute;\\n    bottom: -100%;\\n    top: auto;\\n    left: 0;\\n    margin: 0 14px; }\\n  .cc-sdk.cc-popup-container .cc-popup-container__close {\\n    margin: 20px;\\n    right: 0;\\n    top: 0; }\\n  .cc-sdk.cc-popup-container__back {\\n    background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);\\n    display: inline-block;\\n    width: 27px;\\n    height: 27px;\\n    background-size: 100%; }\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text p,\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text {\\n    width: 100% !important;\\n    text-align: center;\\n    margin: 0 !important;\\n    padding: 0;\\n    line-height: initial;\\n    height: auto; }\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text {\\n    max-width: 98%; } }\\n\\n.date-s,\\n.date-y {\\n  display: inline-block;\\n  margin: 0 12px !important;\\n  width: 80px !important; }\\n\\n.date-error {\\n  color: red;\\n  font-style: italic;\\n  visibility: hidden;\\n  margin-top: 12px; }\\n  .date-error.show-error {\\n    visibility: visible; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk ul {\\n  padding-right: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk.cc-popup-container .cc-popup-container__close {\\n  right: auto;\\n  left: 0;\\n  top: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text {\\n  text-align: right; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-popup-container__back {\\n  background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_rtl_.svg); }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-popup-container-2__icons.cc-right-icon {\\n  right: auto;\\n  left: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-popup-container-2__icons.cc-left-icon {\\n  right: 0;\\n  left: auto; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk.cc-question-container {\\n  margin-left: 0;\\n  margin-right: 0;\\n  right: 0;\\n  left: auto; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__required,\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__validation {\\n  right: 0%;\\n  left: auto; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__required-label {\\n  top: -2px;\\n  right: -2px;\\n  left: auto; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__list li {\\n  display: inline-block;\\n  padding-right: 15px !important;\\n  padding-left: 15px !important;\\n  vertical-align: middle; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"checkbox\\\"] .cc-question-container__list li {\\n  padding-right: 0 !important; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__list li span {\\n  padding-right: 15px;\\n  padding-left: 0;\\n  text-align: right; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container:before {\\n  margin-left: -4px;\\n  margin-right: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .multiline-box {\\n  margin: 0 50px 0 0px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .hl.dropdown {\\n  background-position: 97% center;\\n  text-align: right; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .drop-cc-question-container .cc-question-container__text {\\n  margin-left: 20px;\\n  margin-right: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .detail-box .cc-question-container__content {\\n  padding-right: 0;\\n  padding-left: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__content {\\n  text-align: right; }\\n\\n@media (min-width: 769px) and (max-width: 1024px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-big-list-container .cc-question-container__list,\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__list {\\n    text-align: right; }\\n  [dir=\\\"rtl\\\"].cc-sdk .multiline-box {\\n    margin: 0 0px 0 0px; } }\\n\\n@media (min-width: 769px) and (max-width: 992px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__text {\\n    padding-left: 20px;\\n    padding-right: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__content.rating-color {\\n    margin-left: 0px;\\n    margin-right: 0px; } }\\n\\n@media (max-width: 768px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-popup-container-2__icons.cc-right-icon {\\n    left: 0;\\n    right: auto; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-popup-container-2__icons.cc-left-icon {\\n    left: auto;\\n    right: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .radio-toggle--more-option li span {\\n    padding-right: 25px !important;\\n    padding-left: 0 !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .radio-toggle--more-option li {\\n    padding-right: 0 !important;\\n    padding-left: 0 !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .detail-box .cc-question-container__content {\\n    padding-left: 0px;\\n    padding-right: 0px; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container {\\n    left: auto;\\n    right: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .multiline-box {\\n    margin: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__text {\\n    text-align: right;\\n    width: 100%;\\n    margin-right: 5px;\\n    max-width: 100%; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__list li span {\\n    padding-right: 15px;\\n    padding-left: 0px; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__list li {\\n    padding-left: 0;\\n    padding-right: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-popup-container-2__icons.left-icon {\\n    left: 0;\\n    right: auto; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-popup-container-2__icons.right-icon {\\n    right: 0;\\n    left: auto; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__content.rating-color {\\n    margin-left: 0 !important;\\n    margin-right: 0 !important; } }\\n\\n/*cc-question-container color scale css*/\\n.cc-sdk .option-number-item {\\n  color: #fff;\\n  float: left;\\n  font-size: 13px;\\n  height: 38px;\\n  box-sizing: border-box;\\n  padding-top: 10px;\\n  text-align: center;\\n  width: 8.5%;\\n  margin-left: 1px;\\n  margin-right: 0;\\n  cursor: pointer; }\\n  .cc-sdk .option-number-item.option-zero {\\n    background: #853838; }\\n  .cc-sdk .option-number-item.option-zero.selected, .cc-sdk .option-number-item.option-zero:hover {\\n    background: #572526; }\\n  .cc-sdk .option-number-item.option-one {\\n    background: #9e4343; }\\n  .cc-sdk .option-number-item.option-one.selected, .cc-sdk .option-number-item.option-one:hover {\\n    background: #642728; }\\n  .cc-sdk .option-number-item.option-two {\\n    background: #c14d4d; }\\n  .cc-sdk .option-number-item.option-two.selected, .cc-sdk .option-number-item.option-two:hover {\\n    background: #712827; }\\n  .cc-sdk .option-number-item.option-three {\\n    background: #d94d4d; }\\n  .cc-sdk .option-number-item.option-three.selected, .cc-sdk .option-number-item.option-three:hover {\\n    background: #7c2828; }\\n  .cc-sdk .option-number-item.option-four {\\n    background: #ee4d4d; }\\n  .cc-sdk .option-number-item.option-four.selected, .cc-sdk .option-number-item.option-four:hover {\\n    background: #852828; }\\n  .cc-sdk .option-number-item.option-five {\\n    background: #ff4d4d; }\\n  .cc-sdk .option-number-item.option-five.selected, .cc-sdk .option-number-item.option-five:hover {\\n    background: #844828; }\\n  .cc-sdk .option-number-item.option-six {\\n    background: #ff8c4d; }\\n  .cc-sdk .option-number-item.option-six.selected, .cc-sdk .option-number-item.option-six:hover {\\n    background: #844828; }\\n  .cc-sdk .option-number-item.option-seven {\\n    background: #ffc74d; }\\n  .cc-sdk .option-number-item.option-seven.selected, .cc-sdk .option-number-item.option-seven:hover {\\n    background: #856728; }\\n  .cc-sdk .option-number-item.option-eight {\\n    background: #f5eb4d; }\\n  .cc-sdk .option-number-item.option-eight.selected, .cc-sdk .option-number-item.option-eight:hover {\\n    background: #7f7a28; }\\n  .cc-sdk .option-number-item.option-nine {\\n    background: #73ca81; }\\n  .cc-sdk .option-number-item.option-nine.selected, .cc-sdk .option-number-item.option-nine:hover {\\n    background: #3b6942; }\\n  .cc-sdk .option-number-item.option-ten {\\n    background: #4db47c; }\\n  .cc-sdk .option-number-item.option-ten.selected, .cc-sdk .option-number-item.option-ten:hover {\\n    background: #285e40; }\\n  .cc-sdk .option-number-item.option-7-scale-1 {\\n    background: #ed534f; }\\n  .cc-sdk .option-number-item.option-7-scale-2 {\\n    background: #ed534f; }\\n  .cc-sdk .option-number-item.option-7-scale-3 {\\n    background: #ed534f; }\\n  .cc-sdk .option-number-item.option-7-scale-4 {\\n    background: #ffbc00; }\\n  .cc-sdk .option-number-item.option-7-scale-5 {\\n    background: #ffbc00; }\\n  .cc-sdk .option-number-item.option-7-scale-6 {\\n    background: #4db47c; }\\n  .cc-sdk .option-number-item.option-7-scale-7 {\\n    background: #4db47c; }\\n  .cc-sdk .option-number-item.option-5-scale-1 {\\n    background: #ed534f; }\\n  .cc-sdk .option-number-item.option-5-scale-2 {\\n    background: #ed534f; }\\n  .cc-sdk .option-number-item.option-5-scale-3 {\\n    background: #ffbc00; }\\n  .cc-sdk .option-number-item.option-5-scale-4 {\\n    background: #4db47c; }\\n  .cc-sdk .option-number-item.option-5-scale-5 {\\n    background: #4db47c; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .option-number-item {\\n  width: calc(9.09% - 1px); }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"].scale-image-container\\n.option-number-item {\\n  width: 8.4%; }\\n\\n.cc-sdk .cc-question-container__content.rating-color {\\n  margin-left: 74px; }\\n\\n.cc-sdk .option-left-rating-text,\\n.cc-sdk .option-right-rating-text,\\n.cc-sdk .option-mid-rating-text,\\n.cc-sdk .option-midnps-rating-text {\\n  color: #424242;\\n  font-size: 13px;\\n  left: 0;\\n  position: absolute; }\\n\\n.cc-sdk .option-midnps-rating-text {\\n  left: calc(7 * 9.09% - 1px); }\\n\\n.cc-sdk .option-left-rating-text-small-container {\\n  max-width: 57px;\\n  text-align: left;\\n  overflow: hidden; }\\n\\n.cc-sdk .option-mid-rating-text-small-container {\\n  max-width: 57px;\\n  text-align: left;\\n  overflow: hidden; }\\n\\n.cc-sdk .option-right-rating-text-small-container {\\n  max-width: 57px;\\n  text-align: right;\\n  overflow: hidden; }\\n\\n.cc-sdk .option-left-rating-text-small-container-smile {\\n  width: 40%;\\n  text-align: left;\\n  max-height: 37px;\\n  overflow: hidden;\\n  bottom: auto !important;\\n  top: 57px; }\\n\\n.cc-sdk .option-right-rating-text-small-container-smile {\\n  width: 40%;\\n  text-align: right;\\n  max-height: 37px;\\n  overflow: hidden;\\n  bottom: auto !important;\\n  top: 57px; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-left-rating-text,\\n.cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-left-rating-text {\\n  left: 4px;\\n  width: 40%;\\n  text-align: left; }\\n\\n.cc-sdk .option-right-rating-text {\\n  left: auto;\\n  right: 0; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n.cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n  right: 4px;\\n  text-align: right;\\n  width: 40%; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-number-item {\\n  width: 38px;\\n  margin: 0 0.5px;\\n  cursor: pointer;\\n  display: inline-block;\\n  float: none; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .cc-question-container__list {\\n  display: inline-block;\\n  width: auto;\\n  position: relative; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"].scale-image-container\\n.cc-question-container__list {\\n  width: 100%; }\\n\\n.cc-sdk .rating-color {\\n  position: relative; }\\n\\n.cc-sdk .option-smile-box,\\n.cc-sdk .option-star-box {\\n  height: 60px;\\n  margin-right: 29px;\\n  width: 60px;\\n  cursor: pointer;\\n  box-sizing: border-box;\\n  border: solid 4px transparent;\\n  border-radius: 50%;\\n  display: inline-block;\\n  background-size: 100%; }\\n\\n.cc-sdk:not([dir=\\\"rtl\\\"]) .option-star-box:nth-child(5),\\n.cc-sdk:not([dir=\\\"rtl\\\"]) .option-smile-box:nth-child(5) {\\n  margin-right: 0; }\\n\\n.cc-sdk[dir=\\\"rtl\\\"] .option-star-box:nth-child(1),\\n.cc-sdk[dir=\\\"rtl\\\"] .option-smile-box:nth-child(1) {\\n  margin-right: 0; }\\n\\n.cc-sdk .option-smile-box.cc-one {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-two {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-three {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-four {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-five {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-one.selected, .cc-sdk .option-smile-box.cc-one:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-two.selected, .cc-sdk .option-smile-box.cc-two:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-three.selected, .cc-sdk .option-smile-box.cc-three:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-four.selected, .cc-sdk .option-smile-box.cc-four:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-five.selected, .cc-sdk .option-smile-box.cc-five:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .cc-csat.cc-question-container__content.rating-color {\\n  margin-left: 45px; }\\n\\n.cc-sdk .option-csat.option-smile-box.selected,\\n.cc-sdk .option-csat.option-smile-box:hover,\\n.cc-sdk .option-csat.option-smile-box {\\n  background-size: 25px;\\n  background-position: 18px center; }\\n\\n.cc-sdk .option-csat {\\n  height: 30px;\\n  margin-right: 68px;\\n  width: 30px;\\n  padding-left: 50px;\\n  font-size: 14px; }\\n\\n.cc-sdk .option-csat {\\n  height: 45px;\\n  margin-right: 0px;\\n  width: auto;\\n  padding-left: 0px;\\n  font-size: 14px;\\n  vertical-align: middle;\\n  display: inline-block;\\n  margin-right: 13px; }\\n  .cc-sdk .option-csat span {\\n    display: inline-block;\\n    vertical-align: top;\\n    font-size: 12px;\\n    padding-left: 25px;\\n    position: relative;\\n    text-align: left;\\n    /* min-height: 32px; */\\n    width: 100%; }\\n  .cc-sdk .option-csat .cc-checkbox label {\\n    pointer-events: none; }\\n\\n.cc-sdk .option-star-box {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-star-box:hover,\\n.cc-sdk .option-star-box.selected {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star_selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"slider\\\"] .option-left-rating-text {\\n  left: 4px;\\n  width: 40%;\\n  text-align: left; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"slider\\\"] .option-right-rating-text {\\n  width: 40%;\\n  text-align: right; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .cc-question-container__list,\\n.cc-sdk .cc-question-container[data-type=\\\"star\\\"] .cc-question-container__list {\\n  position: relative;\\n  width: auto;\\n  display: inline-block; }\\n\\n.cc-sdk .circle-image {\\n  margin: auto;\\n  width: 253px;\\n  overflow: hidden;\\n  height: 240px;\\n  position: relative; }\\n\\n.cc-sdk .circle-image-scale-010-neutral {\\n  width: 242px;\\n  overflow: hidden;\\n  height: 230px;\\n  margin: auto; }\\n\\n.cc-sdk .cc-nps-selected-rating {\\n  font-size: 100px;\\n  display: inline-block;\\n  position: absolute;\\n  top: 0;\\n  left: 0px;\\n  line-height: 100px;\\n  right: 0;\\n  margin: auto;\\n  bottom: 0;\\n  width: 110px;\\n  height: 100px;\\n  text-align: center;\\n  font-weight: 100;\\n  color: #bbb; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n.cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n  right: 4px; }\\n\\n.cc-sdk .option-number-item.option-scale {\\n  background: #4db47c; }\\n\\n.cc-sdk .option-number-item.option-scale.selected,\\n.cc-sdk .option-number-item.option-scale:hover {\\n  background: #712827; }\\n\\n.cc-sdk .cc-nps-image {\\n  cursor: pointer;\\n  position: relative;\\n  left: 0; }\\n\\n.cc-sdk .legend-container {\\n  position: relative; }\\n\\n@media (min-width: 769px) and (max-width: 992px) {\\n  .cc-sdk .option-smile-box,\\n  .cc-sdk .option-star-box {\\n    width: 50px;\\n    height: 50px;\\n    margin-right: 10px; }\\n  .cc-sdk .option-csat.option-smile-box.selected,\\n  .cc-sdk .option-csat.option-smile-box:hover,\\n  .cc-sdk .option-csat.option-smile-box {\\n    display: inline-block;\\n    width: 168px;\\n    background-position: 48px center; }\\n    .cc-sdk .option-csat.option-smile-box.selected span,\\n    .cc-sdk .option-csat.option-smile-box:hover span,\\n    .cc-sdk .option-csat.option-smile-box span {\\n      padding-left: 40px; } }\\n\\n@media screen and (min-width: 992px) {\\n  .cc-sdk span.option-csat.option-smile-box {\\n    background-position: 44px center; }\\n    .cc-sdk span.option-csat.option-smile-box:hover, .cc-sdk span.option-csat.option-smile-box.selected {\\n      background-position: 44px center; }\\n    .cc-sdk span.option-csat.option-smile-box span {\\n      padding-left: 40px; } }\\n\\n@media (max-width: 768px) {\\n  .cc-sdk .option-smile-box,\\n  .cc-sdk .option-star-box {\\n    display: inline-block;\\n    margin-right: 3px; }\\n  .cc-sdk .option-csat.option-smile-box.selected,\\n  .cc-sdk .option-csat.option-smile-box:hover,\\n  .cc-sdk .option-csat.option-smile-box {\\n    display: block;\\n    background-size: 40px;\\n    background-position: 45px center; }\\n  .cc-sdk .option-csat.option-smile-box {\\n    height: 65px;\\n    width: 100%; }\\n  .cc-sdk .option-csat.option-smile-box span {\\n    font-size: 15px;\\n    padding-left: 40px; }\\n  .cc-sdk .option-csat.option-smile-box .cc-checkbox {\\n    top: calc(50% - 12.5px);\\n    height: 57px; }\\n  .cc-sdk .option-csat.option-smile-box .cc-checkbox.cc-radio label:before {\\n    width: 25px;\\n    height: 25px; }\\n  .cc-sdk .option-csat.option-smile-box\\n.cc-checkbox\\ninput[type=\\\"radio\\\"]:checked\\n+ label:after {\\n    width: 25px;\\n    height: 25px; }\\n  .cc-sdk .option-number-item {\\n    color: #fff;\\n    float: left;\\n    font-size: 15px;\\n    height: 35px;\\n    box-sizing: border-box;\\n    margin-right: 1px;\\n    padding-top: 7px;\\n    text-align: center;\\n    width: 38px;\\n    cursor: pointer;\\n    vertical-align: middle; }\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] {\\n    bottom: 106px; }\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-left-rating-text,\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-right-rating-text,\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-mid-rating-text {\\n    width: auto; }\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-right-rating-text {\\n    text-align: right; }\\n  .cc-sdk .option-smile-box img,\\n  .cc-sdk .option-star-box img {\\n    padding-right: 5px;\\n    margin-right: 0; }\\n  .cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .cc-question-container__content {\\n    width: 100% !important; }\\n  .cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n  .cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n    right: 10px; }\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .cc-question-container__list {\\n    width: 100%; }\\n  .cc-sdk .cc-question-container[data-type=\\\"csat\\\"] .cc-question-container__list li {\\n    width: 100%; } }\\n\\n@media (max-width: 381px) {\\n  .cc-sdk .option-smile-box,\\n  .cc-sdk .option-star-box {\\n    display: inline-block;\\n    margin-right: 0;\\n    height: 50px;\\n    width: 50px; }\\n  .cc-sdk .option-smile-box img,\\n  .cc-sdk .option-star-box img {\\n    padding-right: 5px;\\n    margin-right: 0; } }\\n\\n@media screen and (max-width: 768px) {\\n  .cc-sdk .radial-legend-right,\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] span.radial-legend-right {\\n    text-align: left;\\n    width: 35%;\\n    right: 0; }\\n  .cc-sdk .radial-legend-mid {\\n    width: 35%;\\n    text-align: center;\\n    left: 0;\\n    right: 0;\\n    display: none; }\\n  .cc-sdk .radial-legend-left {\\n    width: 35%;\\n    text-align: right;\\n    left: 0; } }\\n\\n/*cc-question-container color scale css*/\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"csat\\\"] .cc-question-container__content.rating-color {\\n  margin-right: 45px;\\n  margin-left: 0px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"csat\\\"] .cc-checkbox input[type=\\\"radio\\\"] {\\n  margin-right: 0px;\\n  opacity: 0;\\n  outline: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-number-item {\\n  margin-right: 1px;\\n  margin-left: 0;\\n  float: right; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__content.rating-color {\\n  margin-right: 74px;\\n  margin-left: 0px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-right-rating-text {\\n  left: calc(100% - 418px);\\n  right: auto !important; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-left-rating-text {\\n  right: 0px;\\n  left: auto !important; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .option-right-rating-text {\\n  left: 0;\\n  right: auto !important; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-right-rating-text {\\n  left: 0;\\n  right: auto !important; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-left-rating-text {\\n  right: 2px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"slider\\\"] .option-right-rating-text {\\n  left: 0;\\n  width: 40%;\\n  text-align: left; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"slider\\\"] .option-left-rating-text {\\n  right: 0;\\n  text-align: right; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .rating-color {\\n  position: relative; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-smile-box img {\\n  margin-right: 29px;\\n  margin-left: 0px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-star-box img {\\n  margin-left: 19px;\\n  margin-right: 0px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box span {\\n  padding-right: 25px;\\n  text-align: right;\\n  padding-left: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n  left: 7px;\\n  right: auto !important;\\n  text-align: left; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-left-rating-text,\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-left-rating-text {\\n  right: 7px;\\n  left: auto !important;\\n  text-align: right; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-csat {\\n  width: auto;\\n  box-sizing: border-box;\\n  padding-left: 0;\\n  margin-right: 13px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box.selected,\\n[dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box:hover,\\n[dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box {\\n  background-position: calc( 100% - 44px) center;\\n  text-align: right; }\\n\\n@media (min-width: 769px) and (max-width: 992px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .option-smile-box img,\\n  [dir=\\\"rtl\\\"].cc-sdk .option-star-box img {\\n    margin-left: 0px;\\n    margin-right: 10px; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__content.rating-color {\\n    margin-right: 10px;\\n    margin-left: 86px !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .option-right-rating-text {\\n    left: 17px;\\n    right: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n    left: 7px;\\n    text-align: left;\\n    right: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-left-rating-text,\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-left-rating-text {\\n    right: 20px;\\n    left: auto !important;\\n    text-align: right; }\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box.selected,\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box:hover,\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box {\\n    width: auto; } }\\n\\n@media (max-width: 768px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .option-smile-box img,\\n  [dir=\\\"rtl\\\"].cc-sdk .option-star-box img {\\n    padding-right: 0px;\\n    padding-left: 5px;\\n    margin-right: 0;\\n    margin-left: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"csat\\\"] .cc-checkbox input[type=\\\"radio\\\"] {\\n    margin-right: 7px;\\n    opacity: 0;\\n    outline: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box.selected,\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box:hover,\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box {\\n    background-position: calc( 100% - 44px) center; }\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box span {\\n    padding-right: 39px;\\n    text-align: right;\\n    padding-left: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-left-rating-text,\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-left-rating-text {\\n    right: 10px;\\n    left: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .option-left-rating-text {\\n    right: 10px;\\n    left: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n    right: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .option-right-rating-text {\\n    left: calc(100% - 322px);\\n    right: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-right-rating-text {\\n    left: 13px;\\n    right: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .radial-legend-right, [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .radial-legend-right {\\n    left: auto !important;\\n    right: 10px !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .radial-legend-left, [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .radial-legend-left {\\n    right: auto !important;\\n    left: 10px !important; } }\\n\\n@media (max-width: 381px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .option-right-rating-text {\\n    left: calc(100% - 258px);\\n    right: auto !important; } }\\n\\n.cc-sdk .cc-select-wrapper {\\n  position: relative;\\n  display: inline-block;\\n  user-select: none;\\n  z-index: 11; }\\n\\n.cc-sdk .cc-select-wrapper select {\\n  display: none; }\\n\\n.cc-sdk .cc-select {\\n  position: relative;\\n  display: inline-block;\\n  margin-left: 70px; }\\n\\n.cc-sdk .cc-select-trigger {\\n  position: relative;\\n  display: block;\\n  width: 130px;\\n  padding: 0 84px 0 22px;\\n  font-size: 15px;\\n  font-style: italic;\\n  font-weight: 300;\\n  color: #222;\\n  line-height: 20px;\\n  background: transparent;\\n  border-radius: 0;\\n  cursor: pointer;\\n  width: 300px;\\n  border-bottom: 1px solid #6d6d6d;\\n  display: inline-block;\\n  text-align: left;\\n  padding: 5px 20px 5px 5px;\\n  position: relative;\\n  /*background-image: url(../images/arrow-down.black.svg);*/\\n  background-position: 97% center;\\n  background-repeat: no-repeat;\\n  max-height: 50px;\\n  overflow: hidden; }\\n\\n.cc-sdk .cc-select-trigger:after {\\n  position: absolute;\\n  display: block;\\n  content: '';\\n  width: 10px;\\n  height: 10px;\\n  top: 50%;\\n  right: 5px;\\n  margin-top: -3px;\\n  border-bottom: 1px solid #222;\\n  border-right: 1px solid #222;\\n  transform: rotate(45deg) translateY(-50%);\\n  transition: all .2s ease-in-out;\\n  transform-origin: 50% 0; }\\n\\n.cc-sdk .cc-select.cc-opened .cc-select-trigger:after {\\n  margin-top: 3px;\\n  transform: rotate(-135deg) translateY(-50%); }\\n\\n.cc-sdk .cc-select-options-container {\\n  position: absolute;\\n  display: block;\\n  top: 100%;\\n  left: 0;\\n  right: 0;\\n  min-width: 100%;\\n  margin: 15px 0;\\n  border: 1px solid #b5b5b5;\\n  border-radius: 4px;\\n  box-sizing: border-box;\\n  box-shadow: 0 2px 1px rgba(0, 0, 0, 0.07);\\n  background: #fff;\\n  transition: all .2s ease-in-out;\\n  opacity: 0;\\n  visibility: hidden;\\n  pointer-events: none;\\n  transform: translateY(calc( -100% - 65px));\\n  height: auto;\\n  max-height: 150px;\\n  overflow: hidden;\\n  overflow-y: scroll; }\\n\\n.cc-sdk .cc-select-options {\\n  /*  max-height: 150px;\\r\\n    overflow-y: scroll; */\\n  overflow-y: scroll;\\n  height: 100%;\\n  width: 110%; }\\n\\n.cc-sdk .cc-select.cc-opened .cc-select-options-container {\\n  opacity: 1;\\n  visibility: visible;\\n  pointer-events: all;\\n  transform: translateY(-100%) translateY(-65px); }\\n\\n@media (min-width: 769px) {\\n  .cc-sdk .cc-popup-container-2.top .cc-select-options-container,\\n  .cc-sdk .cc-popup-container-2.top .cc-select.cc-opened .cc-select-options-container {\\n    transform: translateY(-19px); } }\\n\\n.cc-sdk .cc-select-options:before {\\n  /*       position: absolute;\\r\\n    display: block;\\r\\n    content: '';\\r\\n    bottom: 100%; right: 25px;\\r\\n    width: 7px; height: 7px;\\r\\n    margin-bottom: -4px;\\r\\n    border-top: 1px solid #b5b5b5;\\r\\n    border-left: 1px solid #b5b5b5;\\r\\n    background: #fff;\\r\\n    transform: rotate(45deg);\\r\\n    transition: all .4s ease-in-out; */ }\\n\\n.cc-sdk .option-hover:before {\\n  background: #f9f9f9; }\\n\\n.cc-sdk .cc-select-option {\\n  position: relative;\\n  display: block;\\n  padding: 0 12px;\\n  border-bottom: 1px solid #e4e4e4;\\n  font-size: 12px;\\n  font-weight: 600;\\n  color: #222;\\n  line-height: 34px;\\n  cursor: pointer;\\n  transition: all .2s ease-in-out;\\n  text-align: left;\\n  margin: 0;\\n  width: 100%; }\\n\\n.cc-sdk .cc-select-option:first-of-type {\\n  border-radius: 4px 4px 0 0; }\\n\\n.cc-sdk .cc-select-option:last-of-type {\\n  border-bottom: 0;\\n  border-radius: 0 0 4px 4px; }\\n\\n.cc-sdk .cc-select-option:hover,\\n.cc-sdk .cc-select-option.selection {\\n  background: #eaeaea; }\\n\\n.cc-sdk .cc-select-wrapper.down .cc-select-options-container {\\n  transform: translateY(calc( 20px)); }\\n\\n.cc-sdk .cc-select-wrapper.down .cc-select.cc-opened .cc-select-options-container {\\n  transform: translateY(calc( 20px)); }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .cc-question-container__content,\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .cc-question-container__content {\\n  width: 40%; }\\n\\n@media (max-width: 768px) {\\n  .cc-sdk .cc-select,\\n  .cc-sdk .cc-select-wrapper {\\n    min-width: 100%; }\\n  .cc-sdk .cc-select {\\n    margin-left: 0px; }\\n  .cc-sdk .cc-select-trigger {\\n    min-width: 100%;\\n    width: auto; } }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-select-trigger {\\n  padding: 0 22px 0 84px;\\n  background-position: 97% center;\\n  background-repeat: no-repeat;\\n  text-align: right; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-select-trigger:after {\\n  top: 50%;\\n  left: 2px;\\n  right: auto; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-select-option {\\n  text-align: right; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-select-option:first-of-type {\\n  border-radius: 4px 0px 0 4px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-select-option:last-of-type {\\n  border-radius: 0 4px 4px 0px; }\\n\\n/** Checkbox **/\\n.cc-sdk .cc-checkbox {\\n  display: table-cell;\\n  vertical-align: middle;\\n  position: relative;\\n  text-align: center; }\\n\\n.cc-sdk .cc-checkbox label {\\n  cursor: pointer;\\n  display: block;\\n  height: 20px;\\n  width: 20px; }\\n\\n.cc-sdk .cc-checkbox + span label img {\\n  width: 40px;\\n  display: inline-block;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-checkbox label:before,\\n.cc-sdk .cc-checkbox label:after {\\n  content: \\\"\\\";\\n  left: 0;\\n  margin: auto;\\n  position: absolute;\\n  top: calc(50% - 12.5px); }\\n\\n.cc-sdk .cc-checkbox label:before {\\n  background: transparent;\\n  border-radius: 2px;\\n  border: 1px solid #424242;\\n  cursor: pointer;\\n  height: 20px;\\n  transition: background 0.3s;\\n  width: 20px; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"checkbox\\\"] {\\n  opacity: 0;\\n  outline: 0; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:before {\\n  background: #fdaf19;\\n  border: none; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:after {\\n  border: 3px solid #222;\\n  border-right-style: none;\\n  border-top-style: none;\\n  height: 7px;\\n  top: calc(50% - 8.5px);\\n  left: 4px;\\n  transform: rotate(-45deg);\\n  width: 12px; }\\n\\n/*radio*/\\n.cc-sdk .cc-checkbox.cc-radio label:before {\\n  background: transparent;\\n  border: 1px solid #424242;\\n  cursor: pointer;\\n  height: 25px;\\n  transition: background-color 0.3s;\\n  width: 25px; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"radio\\\"] {\\n  opacity: 0;\\n  outline: 0; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"radio\\\"]:checked + label:before {\\n  background: transparent;\\n  border-color: #fdaf19; }\\n\\n.cc-sdk .cc-question-container__list li {\\n  display: inline-table;\\n  margin-bottom: 0; }\\n  .cc-sdk .cc-question-container__list li .cc-sdk .cc-checkbox,\\n  .cc-sdk .cc-question-container__list li .cc-radio {\\n    width: 30px; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"radio\\\"]:checked + label:after {\\n  -moz-transform: scale(0.8);\\n  -ms-transform: scale(0.8);\\n  -o-transform: scale(0.8);\\n  -webkit-transform: scale(0.8);\\n  background: #fdaf19;\\n  border-radius: 30px;\\n  height: 25px;\\n  transform: scale(0.8);\\n  width: 25px; }\\n\\n.cc-sdk .cc-radio label:before {\\n  border-radius: 30px; }\\n\\n.cc-sdk .radio-toggle--more-option li span {\\n  padding-left: 25px !important;\\n  width: 125px !important; }\\n\\n.cc-sdk .radio-toggle .cc-question-container__list li {\\n  padding-left: 15px; }\\n\\n@media (min-width: 1000px) {\\n  .cc-sdk .radio-toggle .cc-question-container__list li span label {\\n    overflow: hidden;\\n    max-height: 100px;\\n    display: block; } }\\n\\n@media (min-width: 769px) and (max-width: 992px) {\\n  .cc-sdk .radio-toggle .cc-question-container__list li {\\n    padding-left: 10px; }\\n  .cc-sdk .radio-toggle .cc-question-container__list li span .label {\\n    display: block;\\n    max-height: 50px;\\n    overflow: hidden;\\n    text-overflow: ellipsis; }\\n  .cc-sdk .radio-toggle .cc-question-container__list li span label {\\n    overflow: hidden;\\n    max-height: 50px;\\n    display: block;\\n    text-overflow: ellipsis; } }\\n\\n@media (max-width: 768px) {\\n  .cc-sdk .radio-toggle .cc-question-container__list li {\\n    padding-left: 0; }\\n  .cc-sdk .radio-toggle .cc-question-container__list li {\\n    display: block;\\n    padding-right: 50px; } }\\n\\n.cc-sdk .progress-bar {\\n  width: 100%;\\n  position: absolute;\\n  background: #a47c2b;\\n  z-index: 1;\\n  height: 8px;\\n  left: 0; }\\n\\n.cc-sdk .progress-line {\\n  background: #fdaf19;\\n  height: 100%;\\n  display: block;\\n  width: 0%;\\n  transition: all .4s ease-in; }\\n\\n@media screen and (max-width: 768px) {\\n  .cc-sdk .progress-bar {\\n    bottom: unset;\\n    top: 0px; } }\\n\\n/** Scrollbar\\t**/\\n.cc-sdk .cc-scrollbar-wrapper {\\n  float: left;\\n  height: 100%;\\n  overflow: hidden;\\n  position: relative;\\n  width: 100%;\\n  z-index: 1; }\\n\\n.cc-sdk .cc-scrollbar-content {\\n  -moz-box-sizing: border-box;\\n  /* padding         : 0 32px 0 0; */\\n  /* right           : -18px; */\\n  box-sizing: border-box;\\n  height: 100%;\\n  overflow: auto;\\n  position: relative;\\n  width: 107%; }\\n\\n.cc-sdk .cc-scrollbar-scroll {\\n  background: #aaa;\\n  border-radius: 4px;\\n  cursor: pointer;\\n  opacity: 0;\\n  position: relative;\\n  top: 0;\\n  transition: opacity 0.25s linear;\\n  width: 9px;\\n  z-index: 2; }\\n\\n.cc-sdk .cc-scrollbar-container:hover .cc-scrollbar-scroll {\\n  opacity: 1; }\\n\\n.cc-sdk .cc-scrollbar-grabbed {\\n  -khtml-user-select: none;\\n  -moz-user-select: none;\\n  -o-user-select: none;\\n  -webkit-user-select: none;\\n  user-select: none; }\\n\\n.cc-sdk .cc-sdk-range {\\n  -webkit-appearance: none;\\n  -moz-appearance: none;\\n  width: 500px;\\n  height: 60px;\\n  background: transparent; }\\n\\n.cc-sdk input[type=range]::-webkit-slider-runnable-track {\\n  -webkit-appearance: none;\\n  background: #ff403d;\\n  background: -moz-linear-gradient(-45deg, #ff403d 0%, #992a28 100%);\\n  background: -webkit-linear-gradient(-45deg, #ff403d 0%, #992a28 100%);\\n  background: linear-gradient(135deg, #ff403d 0%, #992a28 100%);\\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ff403d ', endColorstr='#992a28 ', GradientType=1);\\n  height: 1px; }\\n\\n.cc-sdk input[type=range]:focus {\\n  outline: none; }\\n\\n.cc-sdk input[type=range]::-moz-range-track {\\n  -moz-appearance: none;\\n  background: #ff403d;\\n  background: -moz-linear-gradient(-45deg, #ff403d 0%, #992a28 100%);\\n  background: -webkit-linear-gradient(-45deg, #ff403d 0%, #992a28 100%);\\n  background: linear-gradient(135deg, #7a0806 0%, #992a28 100%);\\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ff403d ', endColorstr='#992a28 ', GradientType=1);\\n  height: 1px; }\\n\\n.cc-sdk input[type=range]::-ms-track {\\n  height: 1px;\\n  width: 500px;\\n  background-color: #ff403d; }\\n\\n.cc-sdk input[type=range]::-webkit-slider-thumb {\\n  -webkit-appearance: none;\\n  border: 1px solid #ff403d;\\n  border-radius: 50%;\\n  height: 32px;\\n  width: 32px;\\n  max-width: 80px;\\n  position: relative;\\n  bottom: 16px;\\n  background-color: #fff;\\n  cursor: -webkit-grab; }\\n\\n.cc-sdk input[type=range]::-ms-thumb {\\n  border: 1px solid #ff403d;\\n  border-radius: 50%;\\n  height: 32px;\\n  width: 32px;\\n  background: #e08692;\\n  box-sizing: border-box;\\n  cursor: pointer !important; }\\n\\n.cc-sdk input[type=range]::-moz-range-thumb {\\n  -moz-appearance: none;\\n  border: 1px solid #ff403d;\\n  border-radius: 50%;\\n  height: 32px;\\n  width: 32px;\\n  max-width: 80px;\\n  position: relative;\\n  bottom: 16px;\\n  background-color: #fff;\\n  cursor: -moz-grab; }\\n\\n.cc-sdk input[type=range]::-moz-range-thumb:before {\\n  content: 'asd'; }\\n\\n.cc-sdk input[type=range]::-webkit-slider-thumb:active {\\n  cursor: -webkit-grabbing; }\\n\\n.cc-sdk input[type=range]::-moz-range-thumb:active {\\n  cursor: -moz-grabbing; }\\n\\n.cc-sdk .cc-question-container__content.cc-sdk-range-slider {\\n  height: 50px; }\\n\\n.cc-sdk .slider-tip {\\n  background: #eb1c23;\\n  padding: 8px 9px 9px 9px;\\n  position: absolute;\\n  left: 0px;\\n  right: 0;\\n  margin: 0 auto;\\n  /* border-top-left-radius: 10px; */\\n  /* border-top-right-radius: 10px; */\\n  /* border-bottom-left-radius: 100%; */\\n  /* border-bottom-right-radius: 100%; */\\n  color: #fff;\\n  /* display: none !important; */\\n  background: none;\\n  color: #424242;\\n  font-size: 13px;\\n  width: 100px;\\n  display: inline-block;\\n  text-align: center;\\n  font-weight: bold; }\\n\\n.cc-sdk .slider-tip:after {\\n  border-width: 5px 5px 0;\\n  border-top-color: #000; }\\n\\n@media (max-width: 1024px) {\\n  .cc-sdk .cc-sdk-range {\\n    width: 100%; } }\\n\\n.cc-sdk input.cc-sdk-range.cc-blue::-moz-range-track,\\n.cc-sdk input.cc-sdk-range.cc-blue::-webkit-slider-runnable-track {\\n  background: blue; }\\n\\n.cc-sdk .chart {\\n  -moz-box-sizing: border-box;\\n  -webkit-box-sizing: border-box;\\n  box-sizing: border-box;\\n  display: inline-block;\\n  height: 21px;\\n  padding-top: 22px;\\n  position: relative;\\n  vertical-align: top;\\n  width: 21px; }\\n\\n.cc-sdk .cc-sdk-chart span {\\n  display: block;\\n  font-size: 2em;\\n  font-weight: normal; }\\n\\n.cc-sdk .cc-sdk-chart canvas {\\n  left: 0;\\n  position: absolute;\\n  top: 0; }\\n\\n.cc-sdk .cc-sdk-loader {\\n  height: 21px;\\n  left: 28px;\\n  position: absolute;\\n  top: 8px;\\n  width: 21px; }\\n\\n@media (min-width: 769px) {\\n  .cc-sdk .cc-sdk-chart canvas {\\n    margin-left: 10px; } }\\n\\n@media (max-width: 768px) {\\n  .cc-sdk .cc-sdk-loader {\\n    position: relative;\\n    left: auto;\\n    top: 0;\\n    right: auto; } }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-sdk-chart canvas {\\n  right: 0;\\n  left: auto; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-sdk-loader {\\n  right: 28px;\\n  left: auto; }\\n\\n@media (min-width: 768px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-sdk-chart canvas {\\n    margin-right: 10px;\\n    margin-left: 0; } }\\n\\n/** Utilities **/\\n.cc-sdk .show {\\n  display: block !important; }\\n\\n.cc-sdk .show-inline {\\n  display: inline-block !important; }\\n\\n.cc-sdk .hide {\\n  display: none !important; }\\n\\n.cc-sdk.bottom {\\n  bottom: 0; }\\n\\n.cc-sdk.right, .cc-sdk .right {\\n  right: 0; }\\n\\n.cc-sdk .left {\\n  left: 0; }\\n\\n.cc-sdk .top {\\n  top: 0; }\\n\\n.ccsdk-overlay {\\n  background: #fff;\\n  bottom: 0;\\n  height: 100%;\\n  left: 0;\\n  position: absolute;\\n  top: 0;\\n  width: 100%;\\n  z-index: 0; }\\n\\n.ccsdk-overlay.ccsdk-glass {\\n  background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/ww.png);\\n  background-repeat: no-repeat;\\n  background-size: cover; }\\n\\n.ccsdk-clearfix {\\n  clear: both;\\n  display: block; }\\n\\n.ccsdk-text-normal {\\n  font-weight: 400; }\\n\\n.cc-sdk ::-webkit-input-placeholder {\\n  /* Chrome/Opera/Safari */\\n  color: #4c4c4c;\\n  font-family: 'Open Sans';\\n  font-size: 13px;\\n  font-style: italic;\\n  font-weight: normal; }\\n\\n.cc-sdk .cc-sdk-form-control::-moz-placeholder {\\n  /* Firefox 19+ */\\n  font-style: italic;\\n  font-size: 13px;\\n  font-weight: normal;\\n  font-family: 'Open Sans';\\n  color: #4c4c4c; }\\n\\n.cc-sdk .cc-sdk-form-control:-ms-input-placeholder {\\n  /* IE 10+ */\\n  font-style: italic;\\n  font-size: 13px;\\n  font-weight: normal;\\n  font-family: 'Open Sans';\\n  color: #4c4c4c; }\\n\\n.cc-sdk .cc-sdk-form-control:-moz-placeholder {\\n  /* Firefox 18- */\\n  font-style: italic;\\n  font-size: 13px;\\n  font-weight: normal;\\n  font-family: 'Open Sans';\\n  color: #4c4c4c; }\\n\\n@media (min-width: 769px) {\\n  .desktop-hide {\\n    display: none; } }\\n\\n@media (max-width: 768px) {\\n  .mobile-hide {\\n    display: none; }\\n  .cc-sdk-loader {\\n    position: relative;\\n    left: auto;\\n    top: 0;\\n    right: auto; }\\n  .ccsdk-overlay.welcome-overlay {\\n    /*background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/ww.png);*/\\n    background: rgba(210, 42, 53, 0.87); } }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .submit-icon {\\n  left: 0;\\n  right: auto;\\n  margin-left: 75px; }\\n\\n@media (max-width: 768px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .submit-icon {\\n    position: absolute;\\n    left: auto;\\n    top: auto;\\n    bottom: 30px;\\n    padding-left: 0;\\n    right: 20px;\\n    margin: 0; } }\\n\\n/** Themes **/\\n/** Prefetch icons **/\\n.cc-sdk::before {\\n  width: 0px;\\n  height: 0px;\\n  overflow: hidden;\\n  position: absolute;\\n  z-index: -1; }\\n\\n.cc-sdk .yellow .progress-bar {\\n  background: #a47c2b; }\\n\\n.cc-sdk .yellow .progress-line {\\n  background: #fdaf19; }\\n\\n.cc-sdk .yellow .submit-icon {\\n  background-image: url(\\\"data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%2747px%27%20height%3D%2747px%27%20viewBox%3D%270%200%2047%2047%27%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%3E%3Ctitle%3EGroup%2016%3C%2Ftitle%3E%3Cdesc%3ECreated%20with%20Sketch.%3C%2Fdesc%3E%3Cdefs%3E%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%3Cfilter%20x%3D%27-18.1%25%27%20y%3D%27-12.9%25%27%20width%3D%27136.2%25%27%20height%3D%27136.2%25%27%20filterUnits%3D%27objectBoundingBox%27%20id%3D%27filter-2%27%3E%3CfeOffset%20dx%3D%270%27%20dy%3D%272%27%20in%3D%27SourceAlpha%27%20result%3D%27shadowOffsetOuter1%27%3E%3C%2FfeOffset%3E%3CfeGaussianBlur%20stdDeviation%3D%272%27%20in%3D%27shadowOffsetOuter1%27%20result%3D%27shadowBlurOuter1%27%3E%3C%2FfeGaussianBlur%3E%3CfeColorMatrix%20values%3D%270%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200.116423234%200%27%20type%3D%27matrix%27%20in%3D%27shadowBlurOuter1%27%3E%3C%2FfeColorMatrix%3E%3C%2Ffilter%3E%3C%2Fdefs%3E%3Cg%20id%3D%27Page-1%27%20stroke%3D%27none%27%20stroke-width%3D%271%27%20fill%3D%27none%27%20fill-rule%3D%27evenodd%27%3E%3Cg%20id%3D%271-copy-20%27%20transform%3D%27translate(-1246.000000%2C%20-664.000000)%27%3E%3Cg%20id%3D%27Group-16%27%20transform%3D%27translate(1250.000000%2C%20666.000000)%27%3E%3Cg%20id%3D%27Oval-4%27%3E%3Cuse%20fill%3D%27white%27%20fill-opacity%3D%271%27%20filter%3D%27url(%23filter-2)%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3Cuse%20fill%3D%27%23d04a49%27%20fill-rule%3D%27evenodd%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3C%2Fg%3E%3Cg%20id%3D%27Group-5%27%20transform%3D%27translate(12.000000%2C%2011.000000)%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23FFFFFF%27%3E%3Cg%20id%3D%27fast-forward-arrows%27%20transform%3D%27translate(6.173934%2C%200.000000)%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3Cg%20id%3D%27fast-forward-arrows-copy%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\\\"); }\\n\\n.cc-sdk .yellow .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:before {\\n  background: #fdaf19; }\\n\\n.cc-sdk .yellow .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:after {\\n  border-color: #222; }\\n\\n.cc-sdk .yellow .cc-checkbox input[type=\\\"radio\\\"]:checked + label:before {\\n  border-color: #fdaf19; }\\n\\n.cc-sdk .yellow .cc-checkbox input[type=\\\"radio\\\"]:checked + label:after {\\n  background: #fdaf19; }\\n\\n.cc-sdk .yellow .cc-sdk-form-control:focus {\\n  border-color: #fcaf18; }\\n\\n.cc-sdk .yellow .cc-message-box__btn {\\n  background: #fdaf19; }\\n\\n.cc-sdk .red .progress-bar {\\n  /*background: rgba(130, 17, 25, 0.87);*/\\n  background: #d22a35; }\\n\\n.cc-sdk .red .progress-line {\\n  background: #d22a35;\\n  filter: brightness(150%); }\\n\\n.cc-sdk .red .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:before {\\n  background: #d22a35; }\\n\\n.cc-sdk .red .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:after {\\n  border-color: #fff; }\\n\\n.cc-sdk .red .cc-checkbox input[type=\\\"radio\\\"]:checked + label:before {\\n  border-color: #d22a35; }\\n\\n.cc-sdk .red .cc-checkbox input[type=\\\"radio\\\"]:checked + label:after {\\n  background: #d22a35; }\\n\\n.cc-sdk .red .cc-sdk-form-control:focus {\\n  border-color: #d22a35; }\\n\\n.cc-sdk .red .cc-message-box__btn {\\n  background: #d22a35;\\n  color: #fff; }\\n\\n.cc-question-container, .hide-slide {\\n  -webkit-transform: translateX(5px);\\n  -moz-transform: translateX(5px);\\n  -ms-transform: translateX(5px);\\n  -o-transform: translateX(5px);\\n  transform: translateX(5px);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.hide-bottom-up {\\n  -webkit-transform: translateY(30px);\\n  -moz-transform: translateY(30px);\\n  -ms-transform: translateY(30px);\\n  -o-transform: translateY(30px);\\n  transform: translateY(30px);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.hide-up-bottom {\\n  -webkit-transform: translateY(100%);\\n  -moz-transform: translateY(100%);\\n  -ms-transform: translateY(100%);\\n  -o-transform: translateY(100%);\\n  transform: translateY(100%);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.hide-right-left {\\n  -webkit-transform: translateX(100%);\\n  -moz-transform: translateX(100%);\\n  -ms-transform: translateX(100%);\\n  -o-transform: translateX(100%);\\n  transform: translateX(100%);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.hide-left-right {\\n  -webkit-transform: translateX(-100%);\\n  -moz-transform: translateX(-100%);\\n  -ms-transform: translateX(-100%);\\n  -o-transform: translateX(-100%);\\n  transform: translateX(-100%);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.show-slide, .show-thankyou-slide {\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: visible;\\n  opacity: 1;\\n  -webkit-transform: translateX(0) translateY(0);\\n  -moz-transform: translateX(0) translateY(0);\\n  -ms-transform: translateX(0) translateY(0);\\n  -o-transform: translateX(0) translateY(0);\\n  transform: translateX(0) translateY(0); }\\n\\n.cc-sdk #timer {\\n  position: relative; }\\n\\n.cc-sdk svg.cc-sdk-timer {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 40px;\\n  height: 40px;\\n  transform: rotateY(-180deg) rotateZ(-90deg); }\\n\\n[dir=\\\"rtl\\\"].cc-sdk svg.cc-sdk-timer {\\n  right: 0;\\n  left: auto; }\\n\\n.cc-sdk svg.cc-sdk-timer circle {\\n  stroke-dasharray: 50px;\\n  stroke-dashoffset: 0px;\\n  stroke-linecap: round;\\n  stroke-width: 2px;\\n  stroke: red;\\n  fill: none;\\n  animation: countdown 10s linear 1 forwards; }\\n\\n@keyframes countdown {\\n  from {\\n    stroke-dashoffset: 0px; }\\n  to {\\n    stroke-dashoffset: 50px; } }\\n\\n.cc-sdk .cc-loaderimg {\\n  position: absolute;\\n  width: 100%;\\n  z-index: 1000;\\n  left: 0;\\n  right: 0;\\n  top: 0;\\n  height: 100%;\\n  background: rgba(255, 255, 255, 0.8); }\\n\\n.cc-sdk .cc-loaderimg svg {\\n  width: 100px; }\\n\", \"\"]);\n\n// exports\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function() {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\tvar result = [];\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar item = this[i];\n\t\t\tif(item[2]) {\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\n\t\t\t} else {\n\t\t\t\tresult.push(item[1]);\n\t\t\t}\n\t\t}\n\t\treturn result.join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(selector) {\n\t\tif (typeof memo[selector] === \"undefined\") {\n\t\t\tmemo[selector] = fn.call(this, selector);\n\t\t}\n\n\t\treturn memo[selector]\n\t};\n})(function (target) {\n\treturn document.querySelector(target)\n});\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton) options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n\tif (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\toptions.attrs.type = \"text/css\";\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\toptions.attrs.type = \"text/css\";\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","\r\nimport { LanguageTextFilter } from './LanguageTextFilter';\r\nimport { isAnd, doesSatisfy, isOr, checkLanguage } from './filter-utils';\r\n\r\nclass ConditionalTextFilter {\r\n  public static filterText(surveyHandler: any, question: any): string {\r\n    let conditionalText = question.text == null ? '' : LanguageTextFilter.translateQuestionText(surveyHandler, question);\r\n    if (question.text != null) {\r\n      let conditionalText: string = question.text.split(':');\r\n      if (question.setName && question.text.indexOf(\":\") !== -1) {\r\n        conditionalText = conditionalText[0] + ': <br><span class=\"text-normal\">' + conditionalText[1] + '</span>';\r\n      } else {\r\n        conditionalText = conditionalText[0];\r\n      }\r\n    }\r\n    if (question.leadingDisplayTexts == null) {\r\n      conditionalText = LanguageTextFilter.translateQuestionText(surveyHandler, question);\r\n      return conditionalText;\r\n    } else if (question.leadingDisplayTexts.length == 0) {\r\n      conditionalText = LanguageTextFilter.translateQuestionText(surveyHandler, question);\r\n      return conditionalText;\r\n    } else {\r\n      for (let fOption of question.leadingDisplayTexts) {\r\n        if (fOption != null && fOption.filter != null && fOption.filter.filterquestions != null) {\r\n          let iSatisfied: boolean = false;\r\n          let iFailed: boolean = false;\r\n          for (let filterByQuestion of fOption.filter.filterquestions) {\r\n            if (isAnd(filterByQuestion)) {\r\n              if (doesSatisfy(surveyHandler, filterByQuestion) && !iFailed) {\r\n                iSatisfied = true;\r\n              } else {\r\n                iFailed = true;\r\n                break;\r\n              }\r\n            } else if (isOr(filterByQuestion)) {\r\n              if (doesSatisfy(surveyHandler, filterByQuestion)) {\r\n                iSatisfied = true;\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          if (iSatisfied && !iFailed) {\r\n            if (checkLanguage(surveyHandler, fOption)\r\n              || (surveyHandler.ccsdk.config && surveyHandler.ccsdk.config.language\r\n                && surveyHandler.ccsdk.config.language.toLowerCase().indexOf('default') !== -1\r\n                && fOption.language === null)\r\n              || (surveyHandler.ccsdk.config && !surveyHandler.ccsdk.config.language && fOption.language === null)) {\r\n              let groupTitle;\r\n              if (question.setName && conditionalText.indexOf(':') !== -1) {\r\n                groupTitle = conditionalText.split(':')[0];\r\n                conditionalText = groupTitle + ': <br><span class=\"text-normal\">' + fOption.text + '</span>';\r\n              } else {\r\n                conditionalText = fOption.text;\r\n              }\r\n            }\r\n            conditionalText;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return conditionalText;\r\n  }\r\n}\r\n\r\nexport { ConditionalTextFilter };","const allLanguages: any[] = [\r\n  {\r\n    code: \"en-gb\",\r\n    name: \"English UK\",\r\n    text: \"English UK\",\r\n    locale: \"en-GB\",\r\n  },\r\n  {\r\n    code: \"fr\",\r\n    name: \"French\",\r\n    text: \"français\",\r\n    locale: \"fr-FR\",\r\n  },\r\n  {\r\n    code: \"de\",\r\n    name: \"German\",\r\n    text: \"Deutsch\",\r\n    locale: \"de-DE\",\r\n  },\r\n  {\r\n    code: \"zh\",\r\n    name: \"Chinese\",\r\n    text: \"中文\",\r\n    locale: \"zh-CN\",\r\n  },\r\n  {\r\n    code: \"ja\",\r\n    name: \"Japanese\",\r\n    text: \"日本語\",\r\n    locale: \"ja-JP\",\r\n  },\r\n  {\r\n    code: \"es\",\r\n    name: \"Spanish\",\r\n    text: \"español\",\r\n    locale: \"es-ES\",\r\n  },\r\n  {\r\n    code: \"it\",\r\n    name: \"Italian\",\r\n    text: \"italiano\",\r\n    locale: \"it-IT\",\r\n  },\r\n  {\r\n    code: \"nl\",\r\n    name: \"Dutch\",\r\n    text: \"Nederlands\",\r\n    locale: \"nl-NL\",\r\n  },\r\n  {\r\n    code: \"ko\",\r\n    name: \"Korean\",\r\n    text: \"한국어\",\r\n    locale: \"ko-KR\",\r\n  },\r\n  {\r\n    code: \"pt\",\r\n    name: \"Portuguese\",\r\n    text: \"português\",\r\n    locale: \"pt-PT\",\r\n  },\r\n  {\r\n    code: \"da\",\r\n    name: \"Danish\",\r\n    text: \"dansk\",\r\n    locale: \"da-DK\",\r\n  },\r\n  {\r\n    code: \"fi\",\r\n    name: \"Finnish\",\r\n    text: \"suomi\",\r\n    locale: \"fi-FI\",\r\n  },\r\n  {\r\n    code: \"no\",\r\n    name: \"Norwegian\",\r\n    text: \"Norsk\",\r\n    locale: \"nn-NO\",\r\n  },\r\n  {\r\n    code: \"sv\",\r\n    name: \"Swedish\",\r\n    text: \"svenska\",\r\n    locale: \"sv-SE\",\r\n  },\r\n  {\r\n    code: \"ru\",\r\n    name: \"Russian\",\r\n    text: \"Русский\",\r\n    locale: \"ru-RU\",\r\n  },\r\n  {\r\n    code: \"pl\",\r\n    name: \"Polish\",\r\n    text: \"język polski\",\r\n    locale: \"pl-PL\",\r\n  },\r\n  {\r\n    code: \"tr\",\r\n    name: \"Turkish\",\r\n    text: \"Türkçe\",\r\n    locale: \"tr-TR\",\r\n  },\r\n  {\r\n    code: \"ar\",\r\n    name: \"Arabic\",\r\n    text: \"العربية\",\r\n    locale: \"ar-AE\",\r\n  },\r\n  {\r\n    code: \"th\",\r\n    name: \"Thai\",\r\n    text: \"ไทย\",\r\n    locale: \"th-TH\",\r\n  },\r\n  {\r\n    code: \"hu\",\r\n    name: \"Hungarian\",\r\n    text: \"magyar\",\r\n    locale: \"hu-HU\",\r\n  },\r\n  {\r\n    code: \"he\",\r\n    name: \"Hebrew\",\r\n    text: \"עברית\",\r\n    locale: \"he-IL\",\r\n  },\r\n  {\r\n    code: \"id\",\r\n    name: \"Indonesian\",\r\n    text: \"Bahasa Indonesia\",\r\n    locale: \"id-ID\",\r\n  },\r\n  {\r\n    code: \"ms\",\r\n    name: \"Melayu\",\r\n    text: \"Bahasa Melayu\",\r\n    locale: \"ms-MY\",\r\n  },\r\n  {\r\n    code: \"bn\",\r\n    name: \"Bengali\",\r\n    text: \"বাংলা\",\r\n    locale: \"bn-IN\",\r\n  },\r\n  {\r\n    code: \"fa\",\r\n    name: \"Farsi\",\r\n    text: \"فارسی\",\r\n    locale: \"fa-IR\",\r\n  },\r\n  {\r\n    code: \"gu\",\r\n    name: \"Gujarati\",\r\n    text: \"ગુજરાતી\",\r\n    locale: \"gu-IN\",\r\n  },\r\n  {\r\n    code: \"hi\",\r\n    name: \"Hindi\",\r\n    text: \"हिन्दी\",\r\n    locale: \"hi-IN\",\r\n  },\r\n  {\r\n    code: \"kn\",\r\n    name: \"Kannada\",\r\n    text: \"ಕನ್ನಡ\",\r\n    locale: \"kn-IN\",\r\n  },\r\n  {\r\n    code: \"ml\",\r\n    name: \"Malayalam\",\r\n    text: \"മലയാളം\",\r\n    locale: \"ml-IN\",\r\n  },\r\n  {\r\n    code: \"mr\",\r\n    name: \"Marathi\",\r\n    text: \"मराठी\",\r\n    locale: \"mr-IN\",\r\n  },\r\n  {\r\n    code: \"pa\",\r\n    name: \"Punjabi\",\r\n    text: \"ਪੰਜਾਬੀ\",\r\n    locale: \"pa-IN\",\r\n  },\r\n  {\r\n    code: \"ta\",\r\n    name: \"Tamil\",\r\n    text: \"தமிழ்\",\r\n    locale: \"ta-IN\",\r\n  },\r\n  {\r\n    code: \"te\",\r\n    name: \"Telugu\",\r\n    text: \"తెలుగు\",\r\n    locale: \"te-IN\",\r\n  },\r\n  {\r\n    code: \"as\",\r\n    name: \"Assamese\",\r\n    text: \"অসমীয়া\",\r\n    locale: \"as-IN\",\r\n  },\r\n  {\r\n    code: \"ur\",\r\n    name: \"Urdu\",\r\n    text: \"اردو\",\r\n    locale: \"ur-PK\",\r\n  },\r\n  {\r\n    code: \"tl\",\r\n    name: \"Tagalog\",\r\n    text: \"Tagalog\",\r\n    locale: \"tl-PH\",\r\n  },\r\n  {\r\n    code: \"vi\",\r\n    name: \"Vietnamese\",\r\n    text: \"Tiếng Việt\",\r\n    locale: \"vi-VN\",\r\n  },\r\n  {\r\n    code: \"or\",\r\n    name: \"Odiya\",\r\n    text: \"ଓଡ଼ିଆ\",\r\n    locale: \"or-IN\",\r\n  },\r\n];\r\n\r\nclass LanguagesConfig {\r\n  constructor() {}\r\n  getLanguageText(languages: string[]) {\r\n    return languages.map((language) => {\r\n      let _lang = language.toLowerCase();\r\n      if (language === \"default\") {\r\n        return \"default\";\r\n      }\r\n      let languageObj = allLanguages.filter(\r\n        (allLanguage) =>\r\n          allLanguage.text.toLowerCase() === _lang ||\r\n          allLanguage.locale.toLowerCase() === _lang\r\n      );\r\n      if (languageObj && languageObj.length > 0) {\r\n        return languageObj[0].text;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport { LanguagesConfig };\r\n","import { DomUtilities } from \"./DomUtilities\";\r\n// import { ScrollBar } from './ScrollBar';\r\nimport { Select } from \"./Select\";\r\nimport { Theme } from \"./Theme\";\r\nimport { ConditionalFlowFilter } from \"../filters/ConditionalFlowFilter\";\r\nimport { Slider } from \"./Slider\";\r\nimport { Constants } from \"../../Constants\";\r\n\r\nclass DomSurvey {\r\n  util: DomUtilities;\r\n  // scrollbar : ScrollBar;\r\n  domListeners: any;\r\n  select: Select;\r\n  theme: Theme;\r\n  qIndex: number;\r\n  currentQuestionId: string;\r\n  $questionContainer: any;\r\n  $innerQuestionContainer: any;\r\n  $popupContainer: any;\r\n  $popupContainer2: any;\r\n  $body: any;\r\n  qResponse: any;\r\n  trackSelects: any = [];\r\n  trackRadios: any = [];\r\n  ccsdk: any;\r\n  currentQuestionListeners: any = [];\r\n  trackSetupListeners: any;\r\n  $startBtn: any;\r\n  bodyElement: any;\r\n\r\n  constructor(ccsdk: any) {\r\n    let self: DomSurvey = this;\r\n    this.domListeners = [];\r\n    this.ccsdk = ccsdk;\r\n    this.qIndex = 0;\r\n    this.qResponse = {};\r\n    this.domSelectElements();\r\n    this.util = new DomUtilities();\r\n    // self.scrollbar = new ScrollBar(\"data-cc-scrollbar\");\r\n    this.util.ready(function () {\r\n      // self.util.addClassAll(self.$popupContainer,'show-slide');\r\n    });\r\n  }\r\n\r\n  setTheme(brandColor, time) {\r\n    let self: DomSurvey = this;\r\n    this.util.ready(function () {\r\n      self.theme = new Theme(brandColor, time);\r\n    });\r\n  }\r\n\r\n  setQIndex(index: number) {\r\n    this.qIndex = index;\r\n  }\r\n\r\n  getQindex() {\r\n    return this.qIndex;\r\n  }\r\n\r\n  domSelectElements() {\r\n    this.$questionContainer = document.querySelectorAll(\r\n      \".cc-questions-container\"\r\n    );\r\n    this.$popupContainer = document.querySelectorAll(\".cc-popup-container\");\r\n    this.$popupContainer2 = document.querySelectorAll(\".cc-popup-container-2\");\r\n    this.$body = document.querySelectorAll(\"body\")[0];\r\n    // this.select = new Select();\r\n  }\r\n\r\n  removePrevListener(id: string): boolean {\r\n    for (let listener of this.domListeners) {\r\n      if (listener.id == id) {\r\n        let index = this.domListeners.indexOf(listener);\r\n        (window as any).ccsdkDebug ? console.log(\"removing listener\", id) : \"\";\r\n        (window as any).ccsdkDebug\r\n          ? console.log(\"removing listener index\", index)\r\n          : \"\";\r\n        this.util.removeListener(\r\n          this.$body,\r\n          listener.type,\r\n          listener.internalHandler\r\n        );\r\n        if (index > -1) {\r\n          this.domListeners.splice(index, 1);\r\n        }\r\n        (window as any).ccsdkDebug ? console.log(this.domListeners) : \"\";\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  setupListeners() {\r\n    let self = this;\r\n    let startSurvey = this.util.initListener(\r\n      \"click\",\r\n      \".act-cc-survey-start\",\r\n      function () {\r\n        if (\r\n          !self.util.hasClass(self.$startBtn, \"disabled\") &&\r\n          self.ccsdk.surveyStatus != \"minimized\"\r\n        ) {\r\n          let onSurveyClickEvent = new CustomEvent(\r\n            Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken\r\n          );\r\n          document.dispatchEvent(onSurveyClickEvent);\r\n          self.util.addClass(self.$startBtn, \"disabled\");\r\n          self.showLoader();\r\n          self.startSurvey();\r\n        } else {\r\n          self.initSurveyDom();\r\n        }\r\n      }\r\n    );\r\n    this.domListeners.push(startSurvey);\r\n\r\n    startSurvey.internalHandler = this.util.listener(\r\n      this.$body,\r\n      startSurvey.type,\r\n      startSurvey.id,\r\n      startSurvey.cb\r\n    );\r\n\r\n    let nextQue = this.util.initListener(\r\n      \"click\",\r\n      \".act-cc-button-next\",\r\n      function () {\r\n        // alert(\"working\");\r\n        let onSurveyClickEvent = new CustomEvent(\r\n          Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken\r\n        );\r\n        document.dispatchEvent(onSurveyClickEvent);\r\n        self.nextQuestion();\r\n      }\r\n    );\r\n    this.domListeners.push(nextQue);\r\n\r\n    nextQue.internalHandler = this.util.listener(\r\n      this.$body,\r\n      nextQue.type,\r\n      nextQue.id,\r\n      nextQue.cb\r\n    );\r\n\r\n    let prevQue = this.util.initListener(\r\n      \"click\",\r\n      \".act-cc-button-prev\",\r\n      function () {\r\n        let onSurveyClickEvent = new CustomEvent(\r\n          Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken\r\n        );\r\n        document.dispatchEvent(onSurveyClickEvent);\r\n        self.prevQuestion();\r\n      }\r\n    );\r\n    this.domListeners.push(prevQue);\r\n\r\n    prevQue.internalHandler = this.util.listener(\r\n      this.$body,\r\n      prevQue.type,\r\n      prevQue.id,\r\n      prevQue.cb\r\n    );\r\n\r\n    let closeSurvey = this.util.initListener(\r\n      \"click\",\r\n      \".act-cc-button-close\",\r\n      function () {\r\n        let onSurveyCloseEvent = new CustomEvent(\r\n          Constants.SURVEY_CLOSE_EVENT + \"-\" + self.ccsdk.surveyToken\r\n        );\r\n        document.dispatchEvent(onSurveyCloseEvent);\r\n        self.ccsdk.survey.answers = {};\r\n        self.trackSelects = [];\r\n        self.destroyListeners();\r\n        self.util.trigger(document, \"ccclose\", undefined);\r\n        self.bodyElement = <HTMLElement>(\r\n          document.getElementsByTagName(\"body\")[0]\r\n        );\r\n        self.util.removeClass(self.bodyElement, \"blurr\");\r\n        self.ccsdk.survey.destroy();\r\n      }\r\n    );\r\n    this.domListeners.push(closeSurvey);\r\n\r\n    closeSurvey.internalHandler = this.util.listener(\r\n      this.$body,\r\n      closeSurvey.type,\r\n      closeSurvey.id,\r\n      closeSurvey.cb\r\n    );\r\n\r\n    let minSurvey = this.util.initListener(\r\n      \"click\",\r\n      \".act-cc-button-minimize\",\r\n      function () {\r\n        self.minimizeSurvey();\r\n      }\r\n    );\r\n    this.domListeners.push(minSurvey);\r\n\r\n    minSurvey.internalHandler = this.util.listener(\r\n      self.$body,\r\n      minSurvey.type,\r\n      minSurvey.id,\r\n      minSurvey.cb\r\n    );\r\n  }\r\n\r\n  minimizeSurvey() {\r\n    // this.$popupContainer[0].removeClass('');\r\n    this.util.removeClass(this.$popupContainer2[0], \"hide-right-left\");\r\n    this.util.addClass(this.$popupContainer2[0], \"hide-right-left\");\r\n    setTimeout(() => {\r\n      this.util.removeClass(this.$popupContainer2[0], \"show-slide\");\r\n    }, 200);\r\n    this.util.removeClass(this.$popupContainer[0], \"hide-right-left\");\r\n    this.util.addClass(this.$popupContainer[0], \"hide-right-left\");\r\n    setTimeout(() => {\r\n      this.util.addClass(this.$popupContainer[0], \"show-slide\");\r\n    }, 200);\r\n    this.ccsdk.surveyStatus = \"minimized\";\r\n    let resumeText = this.ccsdk.config.resumeButtonText\r\n      ? this.ccsdk.config.resumeButtonText\r\n      : \"Resume\";\r\n    this.$startBtn.innerHTML = resumeText;\r\n    this.util.removeClass(this.$startBtn, \"disabled\");\r\n\r\n    //update all start btns\r\n    // Array.prototype.forEach.call($startBtn, (el, i) => {\r\n    //   el.innerHTML = resumeText;\r\n    // });\r\n  }\r\n\r\n  destroyListeners() {\r\n    // (window as any).ccsdkDebug?console.log(\"Removing all listeners\"):'';\r\n    for (let listener of this.domListeners) {\r\n      this.util.removeListener(\r\n        this.$body,\r\n        listener.type,\r\n        listener.internalHandler\r\n      );\r\n    }\r\n    for (let listener of this.ccsdk.survey.domListeners) {\r\n      this.util.removeListener(\r\n        this.$body,\r\n        listener.type,\r\n        listener.internalHandler\r\n      );\r\n    }\r\n    if (this.ccsdk.survey.languageSelect) {\r\n      this.ccsdk.survey.languageSelect.destroyListeners();\r\n    }\r\n    if (this.select) {\r\n      this.select.destroyListeners();\r\n    }\r\n  }\r\n\r\n  startSurvey() {\r\n    this.ccsdk.survey.cancelKillWelcomeQuestion();\r\n    this.ccsdk.getSurveyData();\r\n  }\r\n\r\n  initSurveyDom() {\r\n    this.domSelectElements();\r\n    // (window as any).ccsdkDebug?console.log(\"click in setup listener survey start\"):'';\r\n    this.util.addClassAll(this.$popupContainer2, \"show-slide\");\r\n    this.util.removeClass(this.$popupContainer[0], \"show-slide\");\r\n    if (this.ccsdk.surveyStatus == \"minimized\") {\r\n      //resume survey\r\n    } else {\r\n      //start survey\r\n      //check if only one language is configured\r\n      (window as any).ccsdkDebug ? console.log(this.ccsdk.surveyData) : \"\";\r\n      if (\r\n        this.ccsdk.surveyData.translated === null ||\r\n        (this.ccsdk.surveyData.translated &&\r\n          Object.keys(this.ccsdk.surveyData.translated).length < 1)\r\n      ) {\r\n        this.loadFirstQuestion();\r\n      } else {\r\n        this.ccsdk.survey.displayLanguageSelector();\r\n      }\r\n    }\r\n  }\r\n\r\n  updateProgress() {\r\n    let el = <HTMLElement>document.querySelectorAll(\"#progress-line\")[0];\r\n    if (this.ccsdk && this.ccsdk.tracking) {\r\n      this.ccsdk.tracking.trackEvent(\r\n        \"Questions Answered\",\r\n        {\r\n          token: this.ccsdk.surveyToken,\r\n          data: {\r\n            name: `${this.qIndex}/${\r\n              this.ccsdk.survey.questionsToDisplay.length\r\n              }`,\r\n            action: this.currentQuestionId\r\n          }\r\n        },\r\n        null,\r\n        null\r\n      );\r\n    }\r\n    el.style.width =\r\n      (this.qIndex / this.ccsdk.survey.questionsToDisplay.length) * 100 + \"%\";\r\n  }\r\n\r\n  loadFirstQuestion() {\r\n    // applyRuleToAllEl(this.$questionContainer, );\r\n    // this.util.removeClassAll(this.$questionContainer, 'show-slide');\r\n    // this.util.addClass(this.$questionContainer, 'show-slide');\r\n\r\n    this.loadQuestionSpecifics(this.$questionContainer, 0);\r\n    this.util.removeClassAll(\r\n      this.$questionContainer[0].firstChild,\r\n      \"show-slide\"\r\n    );\r\n    this.util.addClass(this.$questionContainer[0].firstChild, \"show-slide\");\r\n    let leftIcon: any = this.util.get(\".act-cc-button-prev\");\r\n    this.util.addClassAll(leftIcon, \"hide-slide\");\r\n    let onSurveyQuestionEvent = new CustomEvent(\r\n      Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken\r\n    );\r\n    document.dispatchEvent(onSurveyQuestionEvent);\r\n  }\r\n\r\n  nextQuestion() {\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"next question q response init\", this.qResponse)\r\n      : \"\";\r\n    // console.log('next question q response init',this.qResponse);\r\n    //empty the domListner\r\n    // this.util.removeAllListeners(this.domListeners);\r\n    let onSurveyQuestionEvent = new CustomEvent(\r\n      Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken\r\n    );\r\n    document.dispatchEvent(onSurveyQuestionEvent);\r\n    //submit the current response\r\n    // (window as any).ccsdkDebug?console.log('submit ',this.qResponse.type, this.qResponse):'';\r\n    let isRequired: boolean = false;\r\n    let q: HTMLElement = this.$questionContainer[0].firstChild;\r\n    // (window as any).ccsdkDebug?console.log(this.$questionContainer):'';\r\n    let span: Element = this.$questionContainer[0].firstChild.querySelectorAll(\r\n      \".cc-question-container__required\"\r\n    )[0];\r\n    let validationSpan: Element = this.$questionContainer[0].firstChild.querySelectorAll(\r\n      \".cc-question-container__validation\"\r\n    )[0];\r\n    if (span) this.util.removeClass(span, \"show\");\r\n    if (validationSpan) this.util.removeClass(validationSpan, \"show\");\r\n\r\n    //check if question is required\r\n    isRequired =\r\n      q.getAttribute(\"data-required\").toLowerCase() == \"true\" ? true : false;\r\n    // console.log('required check',Object.keys(this.qResponse).length, isRequired, this.qResponse);\r\n    // if (isRequired && Object.keys(this.qResponse).length === 0) {\r\n    if (isRequired && Object.keys(this.qResponse).length === 0) {\r\n      if (span) {\r\n        this.util.addClass(span, \"show\");\r\n        this.util.removeClass(span, \"hide\");\r\n      }\r\n      return;\r\n    } else if (isRequired && !this.qResponse.text && !this.qResponse.number) {\r\n      if (span) {\r\n        this.util.addClass(span, \"show\");\r\n        this.util.removeClass(span, \"hide\");\r\n      }\r\n      return;\r\n    } else {\r\n      if (span) {\r\n        this.util.removeClass(span, \"show\");\r\n        this.util.addClass(span, \"hide\");\r\n      }\r\n\r\n      //check if validationRegex is set and is fulfilled\r\n      let validationRegex = this.ccsdk.survey.questionsToDisplay[this.qIndex]\r\n        .validationRegex;\r\n      if (validationRegex) {\r\n        (window as any).ccsdkDebug\r\n          ? console.log(\"validationRegex\", validationRegex)\r\n          : \"\";\r\n        (window as any).ccsdkDebug\r\n          ? console.log(\"response\", this.qResponse)\r\n          : \"\";\r\n        let pattern = validationRegex.match(new RegExp(\"^/(.*?)/([gimy]*)$\"));\r\n        let regex = new RegExp(validationRegex);\r\n        if (this.qResponse.text) {\r\n          if (regex.test(this.qResponse.text)) {\r\n            this.util.removeClass(validationSpan, \"show\");\r\n            this.util.addClass(validationSpan, \"hide\");\r\n          } else {\r\n            if (validationSpan) {\r\n              this.util.addClass(validationSpan, \"show\");\r\n              this.util.removeClass(validationSpan, \"hide\");\r\n            }\r\n            return;\r\n          }\r\n        } else if (this.qResponse.number) {\r\n          (window as any).ccsdkDebug\r\n            ? console.log(\"test regex text\", regex.test(this.qResponse.number))\r\n            : \"\";\r\n\r\n          if (regex.test(this.qResponse.number)) {\r\n            this.util.removeClass(validationSpan, \"show\");\r\n            this.util.addClass(validationSpan, \"hide\");\r\n          } else {\r\n            if (validationSpan) {\r\n              this.util.addClass(validationSpan, \"show\");\r\n              this.util.removeClass(validationSpan, \"hide\");\r\n            }\r\n            return;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (this.qResponse !== \"undefined\") {\r\n        // (window as any).ccsdkDebug?console.log('qindex ' + this.qIndex):'';\r\n        if (\r\n          typeof this.ccsdk.survey.answers[this.currentQuestionId] !==\r\n          \"undefined\" &&\r\n          this.qResponse.type ==\r\n          this.ccsdk.survey.answers[this.currentQuestionId].type &&\r\n          this.qResponse.text ==\r\n          this.ccsdk.survey.answers[this.currentQuestionId].text &&\r\n          this.qResponse.number ==\r\n          this.ccsdk.survey.answers[this.currentQuestionId].number\r\n        ) {\r\n          // console.log('no submit');\r\n          //don't submit if already submitted.\r\n        } else if (\r\n          typeof this.ccsdk.survey.answers[this.currentQuestionId] !==\r\n          \"undefined\" &&\r\n          !this.qResponse.text &&\r\n          !this.qResponse.number\r\n        ) {\r\n          // console.log('no submit 2');\r\n          //previous entry filled\r\n        } else {\r\n          // (window as any).ccsdkDebug?console.log('submitting ' + this.currentQuestionId):'';\r\n          // console.log(this.qResponse);\r\n\r\n          let qId = this.qResponse.questionId\r\n            ? this.qResponse.questionId\r\n            : this.currentQuestionId;\r\n          this.submitQuestion(\r\n            this.qIndex,\r\n            this.qResponse,\r\n            this.qResponse.type,\r\n            qId\r\n          );\r\n          //save response\r\n          this.ccsdk.survey.answers[this.currentQuestionId] = JSON.parse(\r\n            JSON.stringify(this.qResponse)\r\n          );\r\n        }\r\n      }\r\n    }\r\n    ConditionalFlowFilter.filterQuestion(\r\n      this.ccsdk.survey,\r\n      this.ccsdk.survey.questionsToDisplay[this.qIndex]\r\n    );\r\n    // console.log(this.ccsdk.survey.questionsToDisplay);\r\n    //go to next question\r\n    this.qIndex++;\r\n    //reset the post parameters\r\n    // this.qResponse = typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined' ? JSON.parse(JSON.stringify(this.ccsdk.survey.answers[this.currentQuestionId])) : {};\r\n    // this.qResponse = {};\r\n    let nextButtonState: string = \"initial\";\r\n    // (window as any).ccsdkDebug?console.log(this.$questionContainer):'';\r\n    let nextQ: HTMLElement = this.$questionContainer;\r\n    // (window as any).ccsdkDebug?console.log(this.qIndex):'';\r\n    if (this.qIndex == this.ccsdk.survey.questionsToDisplay.length) {\r\n      //Last run to show thank you message\r\n      let leftIcon: any = this.util.get(\".act-cc-button-prev\");\r\n      let rightIcon: any = this.util.get(\".cc-icon-right\");\r\n      let nextIcon: any = this.util.get(\".act-cc-button-next\");\r\n      this.util.addClassAll(leftIcon, \"hide\");\r\n      this.util.addClassAll(rightIcon, \"hide\");\r\n      this.util.addClassAll(nextIcon, \"hide\");\r\n      this.util.trigger(document, \"ccdone\", undefined);\r\n      this.util.removeClass(\r\n        this.$questionContainer[0].firstChild,\r\n        \"show-slide\"\r\n      );\r\n      this.updateProgress();\r\n    } else {\r\n      if (this.qIndex > this.ccsdk.survey.questionsToDisplay.length) {\r\n        //reset the counter to show first question\r\n        this.qIndex = 0;\r\n      }\r\n      //repopulate qResponse based on answers.\r\n      // ( window as any ).ccsdkDebug ? console.log( 'previous answer', this.ccsdk.survey.answers[ this.currentQuestionId ] ) : '';\r\n      this.qResponse =\r\n        typeof this.ccsdk.survey.answers[this.currentQuestionId] !== \"undefined\"\r\n          ? JSON.parse(\r\n            JSON.stringify(this.ccsdk.survey.answers[this.currentQuestionId])\r\n          )\r\n          : {};\r\n      // this.util.removeClassAll(this.$questionContainer[0].firstChild, 'show-slide');\r\n      // this.util.addClass(nextQ, 'show-slide');\r\n      this.updateProgress();\r\n      this.loadQuestionSpecifics(nextQ, this.qIndex);\r\n      this.util.addClass(this.$questionContainer[0].firstChild, \"show-slide\");\r\n      // if(nextButtonState === 'dirty'){\r\n      // this.submitQuestion(this.qIndex, 'test', 'multiline');\r\n      // }\r\n    }\r\n    if (this.qIndex == 0) {\r\n      let leftIcon: any = this.util.get(\".act-cc-button-prev\");\r\n      this.util.addClassAll(leftIcon, \"hide-slide\");\r\n    } else {\r\n      let leftIcon: any = this.util.get(\".act-cc-button-prev\");\r\n      this.util.addClass(leftIcon[0], \"show-slide\");\r\n      this.util.removeClass(leftIcon[0], \"hide-slide\");\r\n    }\r\n    // ( window as any ).ccsdkDebug ? console.log( 'next question q response end', this.qResponse ) : '';\r\n    // this.qResponse = {};\r\n  }\r\n\r\n  prevQuestion() {\r\n    this.submitQuestion(\r\n      this.qIndex,\r\n      { ...this.qResponse },\r\n      this.qResponse.type,\r\n      this.currentQuestionId\r\n    );\r\n    this.ccsdk.survey.answers[this.currentQuestionId] = JSON.parse(\r\n      JSON.stringify(this.qResponse)\r\n    );\r\n\r\n    this.qIndex--;\r\n    if (!this.ccsdk.survey.questionsToDisplay.length || this.qIndex < 0) {\r\n      this.qIndex = 0;\r\n      return;\r\n      // this.qIndex = this.$questionContainer.length - 1;\r\n    }\r\n    // ( window as any ).ccsdkDebug ? console.log( this.qIndex ) : '';\r\n    let onSurveyQuestionEvent = new CustomEvent(\r\n      Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken\r\n    );\r\n    document.dispatchEvent(onSurveyQuestionEvent);\r\n    //re populate qResponse based on answers.\r\n    // this.util.removeClassAll(this.$questionContainer,'show-slide');\r\n    this.loadQuestionSpecifics(null, this.qIndex);\r\n    this.qResponse =\r\n      typeof this.ccsdk.survey.answers[this.currentQuestionId] !== \"undefined\"\r\n        ? JSON.parse(\r\n          JSON.stringify(this.ccsdk.survey.answers[this.currentQuestionId])\r\n        )\r\n        : {};\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"prevQuestion qResponse\", this.qResponse)\r\n      : \"\";\r\n    this.util.addClass(this.$questionContainer[0].firstChild, \"show-slide\");\r\n    this.updateProgress();\r\n    if (this.qIndex == 0) {\r\n      let leftIcon: any = this.util.get(\".act-cc-button-prev\");\r\n      this.util.addClassAll(leftIcon, \"hide-slide\");\r\n      this.util.removeClassAll(leftIcon, \"show-slide\");\r\n    }\r\n  }\r\n\r\n  showLoader() {\r\n    let $loader = document.querySelectorAll(\".cc-loaderimg\")[0];\r\n    this.util.addClass($loader, \"show\");\r\n    this.util.removeClass($loader, \"hide\");\r\n  }\r\n  hideLoader() {\r\n    let $loader = document.querySelectorAll(\".cc-loaderimg\")[0];\r\n    this.util.removeClass($loader, \"show\");\r\n    this.util.addClass($loader, \"hide\");\r\n  }\r\n\r\n  appendInBody(html) {\r\n    document.querySelectorAll(\"body\")[0].insertAdjacentHTML(\"afterbegin\", html);\r\n    //force update domSelect\r\n    this.domSelectElements();\r\n  }\r\n\r\n  replaceInQuestionsContainer(html) {\r\n    this.$questionContainer[0].innerHTML = html;\r\n    this.domSelectElements();\r\n  }\r\n\r\n  appendInQuestionsContainer(html) {\r\n    document\r\n      .querySelectorAll(\".cc-questions-container\")[0]\r\n      .insertAdjacentHTML(\"afterbegin\", html);\r\n    //force update domSelect\r\n    this.domSelectElements();\r\n  }\r\n\r\n  showWelcomeContainer() {\r\n    setTimeout(() => {\r\n      let startContainer = <HTMLElement>(\r\n        document.querySelectorAll(\".act-cc-welcome-question-box\")[0]\r\n      );\r\n      let bodyElement = <HTMLElement>document.getElementsByTagName(\"body\")[0];\r\n      this.util.addClass(startContainer, \"show-slide\");\r\n      // this.util.addClass( bodyElement, \"blurr\" );\r\n    }, 200);\r\n    // console.debug()\r\n    this.$startBtn = document.querySelectorAll(\".act-cc-survey-start\")[0];\r\n  }\r\n\r\n  showLanguageSelector() {\r\n    setTimeout(() => {\r\n      let startContainer = <HTMLElement>(\r\n        document.querySelectorAll(\".cc-language-selector\")[0]\r\n      );\r\n      let bodyElement = <HTMLElement>document.getElementsByTagName(\"body\")[0];\r\n      this.util.addClass(startContainer, \"show-slide\");\r\n      // this.util.addClass( bodyElement, \"blurr\" );\r\n    }, 200);\r\n    let self = this;\r\n    if (\r\n      this.util.checkIfListenerExists(\".cc-language-select\", this.domListeners)\r\n    ) {\r\n      // return;\r\n      // ( window as any ).ccsdkDebug ? console.log( \"language select - previous listeners exists\" ) : '';\r\n      this.removePrevListener(\".cc-language-select\");\r\n    }\r\n    let languageSelect = this.util.initListener(\r\n      \"click\",\r\n      \".cc-language-select\",\r\n      function () {\r\n        // let onSurveyClickEvent = new CustomEvent(Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n        // document.dispatchEvent(onSurveyClickEvent);\r\n        //select language show next question.\r\n        // self.startSurvey();\r\n        self.ccsdk.config.language = \"default\";\r\n        self.ccsdk.config.language = \"\"; //language selection from menu then show first question\r\n      }\r\n    );\r\n\r\n    languageSelect.internalHandler = this.util.listener(\r\n      this.$body,\r\n      languageSelect.type,\r\n      languageSelect.id,\r\n      languageSelect.cb\r\n    );\r\n  }\r\n\r\n  getSurveyContainer(token: string) {\r\n    return document.querySelectorAll(\"#\" + token + \"-survey\")[0];\r\n  }\r\n\r\n  getWelcomeContainer(token: string) {\r\n    return document.querySelectorAll(\"#\" + token + \"-welcome\")[0];\r\n  }\r\n\r\n  loadQuestionSpecifics(q: HTMLElement, index: number) {\r\n    let self: DomSurvey = this;\r\n    this.$questionContainer[0].innerHTML = \"\";\r\n    let compiledTemplate = this.ccsdk.survey.compileTemplate(\r\n      this.ccsdk.survey.questionsToDisplay[index]\r\n    );\r\n    this.$questionContainer[0].innerHTML += compiledTemplate;\r\n    let qType: string = this.$questionContainer[0].firstChild.getAttribute(\r\n      \"data-type\"\r\n    );\r\n    let qId: string = this.$questionContainer[0].firstChild.getAttribute(\r\n      \"data-id\"\r\n    );\r\n    this.qResponse = {};\r\n    // (window as any).ccsdkDebug?console.log(\"QTYIPE AND QID \" , qType, qId):'';\r\n    this.currentQuestionId = qId.substring(2, qId.length);\r\n    // console.log( 'qtype', qType )\r\n    switch (qType) {\r\n      case \"scale\":\r\n        let allOptions1: any = document.querySelectorAll(\r\n          \"#\" + qId + \" .option-number-item\"\r\n        );\r\n        let optionWidth1 = 100 / allOptions1.length - 0.6;\r\n        // (window as any).ccsdkDebug?console.log(\"Option width\", allOptions1, optionWidth1.toFixed(2)):'';\r\n        // self.util.css(allOptions1 , 'width',  optionWidth1.toFixed(1) + '%');\r\n        this.setupListenersQuestionScale(index, qId);\r\n        break;\r\n      case \"nps\":\r\n        this.setupListenersQuestionNPS(index, qId);\r\n        break;\r\n      case \"multiline\":\r\n        this.setupListenersQuestionMultiline(index, qId);\r\n        break;\r\n      case \"select\":\r\n        if (typeof this.select !== \"undefined\") {\r\n          this.select.destroyListeners();\r\n        }\r\n        this.setupListenersQuestionSelect(index, qId);\r\n        break;\r\n      case \"radio\":\r\n        this.setupListenersQuestionRadio(index, qId);\r\n        break;\r\n      case \"radioImage\":\r\n        this.setupListenersQuestionRadioImage(index, qId);\r\n        break;\r\n      case \"checkbox\":\r\n        this.setupListenersQuestionCheckbox(index, qId);\r\n        break;\r\n      case \"star\":\r\n        this.setupListenersQuestionStar(index, qId);\r\n        break;\r\n      case \"smile\":\r\n        this.setupListenersQuestionSmile(index, qId);\r\n        break;\r\n      case \"csat\":\r\n        this.setupListenersQuestionCsat(index, qId);\r\n        break;\r\n      case \"slider\":\r\n        this.setupListenersQuestionSlider(index, qId);\r\n        break;\r\n      case \"singleline\":\r\n        this.setupListenersQuestionSingleline(index, qId);\r\n        break;\r\n      case \"number\":\r\n        this.setupListenersQuestionNumber(index, qId);\r\n        break;\r\n      case \"date\":\r\n        this.setupListenersForDate(index, qId);\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  // question specific listeners\r\n\r\n  setupListenersQuestionScale(index: number, qId: string) {\r\n    var self: DomSurvey = this;\r\n    let selectedRating = <HTMLElement>(\r\n      document.querySelectorAll(\"#\" + qId + \" .cc-nps-selected-rating\")[0]\r\n    );\r\n    let selectedRating1 = <HTMLElement>(\r\n      document.querySelectorAll(\"#\" + qId + \" .cc-nps-selected-rating\")[1]\r\n    );\r\n    //add id too.\r\n    if (\r\n      this.util.checkIfListenerExists(\r\n        \"#\" + qId + \" .option-number-item\",\r\n        this.domListeners\r\n      )\r\n    ) {\r\n      // return;\r\n      // ( window as any ).ccsdkDebug ? console.log( \"scale question - previous listeners exists\" ) : '';\r\n      this.removePrevListener(\"#\" + qId + \" .option-number-item\");\r\n    }\r\n\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring(2, qId.length);\r\n    // ( window as any ).ccsdkDebug ? console.log( 'scale question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if (\r\n      typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n      this.ccsdk.survey.answers[questionId] !== \"\"\r\n    ) {\r\n      let previousValue = this.ccsdk.survey.answers[questionId].number;\r\n      let previousSelection = document.querySelectorAll(\r\n        \"#\" + qId + ' .option-number-item[data-rating=\"' + previousValue + '\"]'\r\n      )[0];\r\n      // ( window as any ).ccsdkDebug ? console.log( 'scale previous selection', previousSelection ) : '';\r\n      if (typeof previousSelection !== \"undefined\") {\r\n        this.util.addClass(previousSelection, \"selected\");\r\n        self.qResponse.type = \"scale\";\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n        selectedRating.innerHTML = previousValue;\r\n        selectedRating1.innerHTML = previousValue;\r\n      }\r\n    }\r\n\r\n    let ref = this.util.initListener(\r\n      \"click\",\r\n      \"#\" + qId + \" .option-number-item\",\r\n      function () {\r\n        let allOptions: any = document.querySelectorAll(\r\n          \"#\" + qId + \" .option-number-item\"\r\n        );\r\n\r\n        let rating: number = this.getAttribute(\"data-rating\");\r\n        self.util.removeClassAll(allOptions, \"selected\");\r\n        self.util.addClass(this, \"selected\");\r\n        // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n        // (window as any).ccsdkDebug?console.log('Scale selected',rating):'';\r\n        self.qResponse.type = \"scale\";\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = rating;\r\n        self.qResponse.questionId = qId;\r\n        selectedRating.innerHTML = \"\" + rating;\r\n        selectedRating1.innerHTML = \"\" + rating;\r\n\r\n        //move to next question automagically\r\n        // alert('calling next questions inside scale');\r\n        let onSurveyClickEvent = new CustomEvent(\r\n          Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken\r\n        );\r\n        document.dispatchEvent(onSurveyClickEvent);\r\n        setTimeout(() => {\r\n          self.nextQuestion();\r\n        }, 500);\r\n        // self.util.trigger(document,'q-answered', {\r\n        //   index : index,\r\n        //   rating : rating,\r\n        //   type : 'scale'\r\n        // });\r\n      }\r\n    );\r\n    this.domListeners.push(ref);\r\n\r\n    ref.internalHandler = this.util.listener(\r\n      this.$body,\r\n      ref.type,\r\n      ref.id,\r\n      ref.cb\r\n    );\r\n  }\r\n\r\n  setupListenersQuestionNPS(index: number, qId: string) {\r\n    var self: DomSurvey = this;\r\n    let selectedRating = <HTMLElement>(\r\n      document.querySelectorAll(\"#\" + qId + \" .cc-nps-selected-rating\")[0]\r\n    );\r\n    let allOptions: any = document.querySelectorAll(\r\n      \"#\" + qId + \" .option-number-item\"\r\n    );\r\n\r\n    //add id too.\r\n    if (\r\n      this.util.checkIfListenerExists(\r\n        \"#\" + qId + \" .option-number-item\",\r\n        this.domListeners\r\n      )\r\n    ) {\r\n      //remove listeners\r\n      // ( window as any ).ccsdkDebug ? console.log( \"nps question - previous listeners exists\" ) : '';\r\n      this.removePrevListener(\"#\" + qId + \" .option-number-item\");\r\n    }\r\n\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring(2, qId.length);\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"nps question\", this.ccsdk.survey.answers[questionId])\r\n      : \"\";\r\n    if (\r\n      typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n      this.ccsdk.survey.answers[questionId] !== \"\"\r\n    ) {\r\n      let previousValue = this.ccsdk.survey.answers[questionId].number;\r\n      let previousSelection = document.querySelectorAll(\r\n        \"#\" + qId + ' .option-number-item[data-rating=\"' + previousValue + '\"]'\r\n      )[0];\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"nps previous selection\", previousSelection)\r\n        : \"\";\r\n      if (typeof previousSelection !== \"undefined\") {\r\n        this.util.addClass(previousSelection, \"selected\");\r\n        let $mobileRating = document.querySelectorAll(\r\n          \".act-cc-nps-selected-rating\"\r\n        )[0];\r\n        $mobileRating.innerHTML = previousValue;\r\n        self.qResponse.type = \"nps\";\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n\r\n    // (window as any).ccsdkDebug?console.log(self.domListeners):'';\r\n    let ref = this.util.initListener(\r\n      \"click\",\r\n      \"#\" + qId + \" .option-number-item\",\r\n      function () {\r\n        let rating: number = this.getAttribute(\"data-rating\");\r\n        self.util.removeClassAll(allOptions, \"selected\");\r\n        self.util.addClass(this, \"selected\");\r\n        // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n        // (window as any).ccsdkDebug?console.log('Scale selected',rating):'';\r\n        self.qResponse.type = \"nps\";\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = rating;\r\n        self.qResponse.questionId = qId;\r\n        selectedRating.innerHTML = \"\" + rating;\r\n        //move to next question automagically\r\n\r\n        let onSurveyClickEvent = new CustomEvent(\r\n          Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken\r\n        );\r\n        document.dispatchEvent(onSurveyClickEvent);\r\n\r\n        // alert('calling next questions inside scale');\r\n        setTimeout(() => {\r\n          self.nextQuestion();\r\n        }, 500);\r\n        // self.util.trigger(document,'q-answered', {\r\n        //   index : index,\r\n        //   rating : rating,\r\n        //   type : 'scale'\r\n        // });\r\n      }\r\n    );\r\n    this.domListeners.push(ref);\r\n\r\n    ref.internalHandler = this.util.listener(\r\n      this.$body,\r\n      ref.type,\r\n      ref.id,\r\n      ref.cb\r\n    );\r\n  }\r\n\r\n  setupListenersQuestionCheckbox(index: number, qId: string) {\r\n    var self: DomSurvey = this;\r\n    if (\r\n      this.util.checkIfListenerExists(\r\n        \"#\" + qId + \" .cc-checkbox\",\r\n        this.domListeners\r\n      )\r\n    ) {\r\n      // return;\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"checkbox question - previous listeners exists\")\r\n        : \"\";\r\n      this.removePrevListener(\"#\" + qId + \" .cc-checkbox\");\r\n    }\r\n\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring(2, qId.length);\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"radio question\", this.ccsdk.survey.answers[questionId])\r\n      : \"\";\r\n    if (\r\n      typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n      this.ccsdk.survey.answers[questionId] !== \"\"\r\n    ) {\r\n      let previousValues = this.ccsdk.survey.answers[questionId].text;\r\n      if (previousValues) {\r\n        previousValues = previousValues.split(\",\");\r\n        for (let previousValue of previousValues) {\r\n          let previousSelection = document.querySelectorAll(\r\n            \"#\" + qId + ' input[value=\"' + previousValue + '\"]'\r\n          )[0];\r\n          (window as any).ccsdkDebug\r\n            ? console.log(\"radio previous selection\", previousSelection)\r\n            : \"\";\r\n          if (typeof previousSelection !== \"undefined\") {\r\n            this.util.addClass(previousSelection, \"selected\");\r\n            previousSelection.setAttribute(\"checked\", \"checked\");\r\n            self.qResponse.type = \"checkbox\";\r\n            self.qResponse.text = previousValue;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    let ref = this.util.initListener(\r\n      \"click\",\r\n      \"#\" + qId + \" .cc-checkbox\",\r\n      function () {\r\n        // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox input');\r\n        // let rating : number = this.querySelectorAll('input')[0].value;\r\n        let rating: string = [].filter\r\n          .call(\r\n            document.querySelectorAll(\"#\" + qId + \" .cc-checkbox input\"),\r\n            function (c) {\r\n              return c.checked;\r\n            }\r\n          )\r\n          .map(function (c) {\r\n            return c.value;\r\n          })\r\n          .join(\",\");\r\n\r\n        (window as any).ccsdkDebug\r\n          ? console.log(\"Checkbox selected\", rating)\r\n          : \"\";\r\n\r\n        self.qResponse.type = \"checkbox\";\r\n        self.qResponse.text = rating;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n        //move to next question automagically\r\n        // self.nextQuestion();\r\n      }\r\n    );\r\n    this.domListeners.push(ref);\r\n    let onSurveyClickEvent = new CustomEvent(\r\n      Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken\r\n    );\r\n    document.dispatchEvent(onSurveyClickEvent);\r\n    ref.internalHandler = this.util.listener(\r\n      this.$body,\r\n      ref.type,\r\n      ref.id,\r\n      ref.cb\r\n    );\r\n  }\r\n\r\n  setupListenersQuestionRadio(index: number, qId: string) {\r\n    var self: DomSurvey = this;\r\n    if (\r\n      this.util.checkIfListenerExists(\r\n        \"#\" + qId + \" .cc-checkbox input\",\r\n        this.domListeners\r\n      )\r\n    ) {\r\n      // return;\r\n      //remove listeners\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"radio question - previous listeners exists\")\r\n        : \"\";\r\n      this.removePrevListener(\"#\" + qId + \" .cc-checkbox input\");\r\n    }\r\n\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring(2, qId.length);\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"radio question\", this.ccsdk.survey.answers[questionId])\r\n      : \"\";\r\n    if (\r\n      typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n      this.ccsdk.survey.answers[questionId] !== \"\"\r\n    ) {\r\n      let previousValue = this.ccsdk.survey.answers[questionId].text;\r\n      let previousSelection = document.querySelectorAll(\r\n        \"#\" + qId + ' input[value=\"' + previousValue + '\"]'\r\n      )[0];\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"radio previous selection\", previousSelection)\r\n        : \"\";\r\n      if (typeof previousSelection !== \"undefined\") {\r\n        this.util.addClass(previousSelection, \"selected\");\r\n        previousSelection.setAttribute(\"checked\", \"checked\");\r\n        self.qResponse.type = \"radio\";\r\n        self.qResponse.text = previousValue;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n\r\n    let ref = this.util.initListener(\r\n      \"click\",\r\n      \"#\" + qId + \" .cc-checkbox input\",\r\n      function () {\r\n        // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox');\r\n        let rating: string = this.value;\r\n        // self.util.removeClassAll(allOptions, \"selected\");\r\n        // self.util.addClass(this, \"selected\");\r\n        // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n        // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\r\n        self.qResponse.type = \"radio\";\r\n        self.qResponse.text = rating;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n        let onSurveyClickEvent = new CustomEvent(\r\n          Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken\r\n        );\r\n        document.dispatchEvent(onSurveyClickEvent);\r\n        //move to next question automagically\r\n        setTimeout(() => {\r\n          self.nextQuestion();\r\n        }, 500);\r\n      }\r\n    );\r\n    this.domListeners.push(ref);\r\n\r\n    ref.internalHandler = this.util.listener(\r\n      this.$body,\r\n      ref.type,\r\n      ref.id,\r\n      ref.cb\r\n    );\r\n  }\r\n\r\n  setupListenersQuestionRadioImage(index: number, qId: string) {\r\n    var self: DomSurvey = this;\r\n    if (\r\n      this.util.checkIfListenerExists(\r\n        \"#\" + qId + \" .cc-checkbox input\",\r\n        this.domListeners\r\n      )\r\n    ) {\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"radio image question - previous listeners exists\")\r\n        : \"\";\r\n      this.removePrevListener(\"#\" + qId + \" .cc-checkbox input\");\r\n    }\r\n\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring(2, qId.length);\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\r\n        \"radio image question\",\r\n        this.ccsdk.survey.answers[questionId]\r\n      )\r\n      : \"\";\r\n    if (\r\n      typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n      this.ccsdk.survey.answers[questionId] !== \"\"\r\n    ) {\r\n      let previousValue = this.ccsdk.survey.answers[questionId].text;\r\n      let previousSelection = document.querySelectorAll(\r\n        \"#\" + qId + ' input[value=\"' + previousValue + '\"]'\r\n      )[0];\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"radio image previous selection\", previousSelection)\r\n        : \"\";\r\n      if (typeof previousSelection !== \"undefined\") {\r\n        this.util.addClass(previousSelection, \"selected\");\r\n        previousSelection.setAttribute(\"checked\", \"checked\");\r\n        self.qResponse.type = \"radioImage\";\r\n        self.qResponse.text = previousValue;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n\r\n    let ref = this.util.initListener(\r\n      \"click\",\r\n      \"#\" + qId + \" .cc-checkbox input\",\r\n      function () {\r\n        // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox');\r\n        let rating: string = this.value;\r\n        // self.util.removeClassAll(allOptions, \"selected\");\r\n        // self.util.addClass(this, \"selected\");\r\n        // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n        // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\r\n        self.qResponse.type = \"radioImage\";\r\n        self.qResponse.text = rating;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n        let onSurveyClickEvent = new CustomEvent(\r\n          Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken\r\n        );\r\n        document.dispatchEvent(onSurveyClickEvent);\r\n        //move to next question automagically\r\n        setTimeout(() => {\r\n          self.nextQuestion();\r\n        }, 500);\r\n      }\r\n    );\r\n    this.domListeners.push(ref);\r\n\r\n    ref.internalHandler = this.util.listener(\r\n      this.$body,\r\n      ref.type,\r\n      ref.id,\r\n      ref.cb\r\n    );\r\n  }\r\n\r\n  setupListenersQuestionStar(index: number, qId: string) {\r\n    var self: DomSurvey = this;\r\n    if (\r\n      this.util.checkIfListenerExists(\r\n        \"#\" + qId + \" .option-star-box\",\r\n        this.domListeners\r\n      )\r\n    ) {\r\n      //remove listeners\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"smile question - previous listeners exists\")\r\n        : \"\";\r\n      this.removePrevListener(\"#\" + qId + \" .option-star-box\");\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring(2, qId.length);\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"star question\", this.ccsdk.survey.answers[questionId])\r\n      : \"\";\r\n    if (\r\n      typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n      this.ccsdk.survey.answers[questionId] !== \"\"\r\n    ) {\r\n      let previousValue = this.ccsdk.survey.answers[questionId].number;\r\n      let previousSelection = document.querySelectorAll(\r\n        \"#\" + qId + ' .option-star-box[data-rating=\"' + previousValue + '\"]'\r\n      )[0];\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"star previous selection\", previousSelection)\r\n        : \"\";\r\n      if (\r\n        typeof previousSelection !== \"undefined\" &&\r\n        previousSelection != null\r\n      ) {\r\n        this.util.addClass(previousSelection, \"selected\");\r\n        self.qResponse.type = \"star\";\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n    let ref = this.util.initListener(\r\n      \"click\",\r\n      \"#\" + qId + \" .option-star-box\",\r\n      function () {\r\n        let allOptions: any = document.querySelectorAll(\r\n          \"#\" + qId + \" .option-star-box\"\r\n        );\r\n        let rating: number = this.getAttribute(\"data-rating\");\r\n        self.util.removeClassAll(allOptions, \"selected\");\r\n        self.util.addClass(this, \"selected\");\r\n\r\n        //select previous sibling\r\n        // let child : any = this.previousSibling;\r\n        // while( ( child = child.previousSibling) != null ){\r\n        //   self.util.addClass(child, \"selected\");\r\n        // }\r\n\r\n        // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n        // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\r\n        self.qResponse.type = \"star\";\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = rating;\r\n        self.qResponse.questionId = qId;\r\n\r\n        let onSurveyClickEvent = new CustomEvent(\r\n          Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken\r\n        );\r\n        document.dispatchEvent(onSurveyClickEvent);\r\n        //move to next question automagically\r\n        setTimeout(() => {\r\n          self.nextQuestion();\r\n        }, 500);\r\n      }\r\n    );\r\n    this.domListeners.push(ref);\r\n\r\n    ref.internalHandler = this.util.listener(\r\n      this.$body,\r\n      ref.type,\r\n      ref.id,\r\n      ref.cb\r\n    );\r\n  }\r\n\r\n  setupListenersQuestionSmile(index: number, qId: string) {\r\n    var self: DomSurvey = this;\r\n    if (\r\n      this.util.checkIfListenerExists(\r\n        \"#\" + qId + \" .option-smile-box\",\r\n        this.domListeners\r\n      )\r\n    ) {\r\n      //remove listeners\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"smile question - previous listeners exists\")\r\n        : \"\";\r\n      this.removePrevListener(\"#\" + qId + \" .option-smile-box\");\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring(2, qId.length);\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"smile question\", this.ccsdk.survey.answers[questionId])\r\n      : \"\";\r\n    if (\r\n      typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n      this.ccsdk.survey.answers[questionId] !== \"\"\r\n    ) {\r\n      let previousValue = this.ccsdk.survey.answers[questionId].number;\r\n      let previousSelection = document.querySelectorAll(\r\n        \"#\" + qId + ' .option-smile-box[data-rating=\"' + previousValue + '\"]'\r\n      )[0];\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"smile previous selection\", previousSelection)\r\n        : \"\";\r\n      if (\r\n        typeof previousSelection !== \"undefined\" &&\r\n        previousSelection != null\r\n      ) {\r\n        this.util.addClass(previousSelection, \"selected\");\r\n        self.qResponse.type = \"smile\";\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n\r\n    let ref = this.util.initListener(\r\n      \"click\",\r\n      \"#\" + qId + \" .option-smile-box\",\r\n      function () {\r\n        let allOptions: any = document.querySelectorAll(\r\n          \"#\" + qId + \" .option-smile-box\"\r\n        );\r\n        let rating: number = this.getAttribute(\"data-rating\");\r\n        self.util.removeClassAll(allOptions, \"selected\");\r\n        self.util.addClass(this, \"selected\");\r\n\r\n        //select previous siblings\r\n        // let child : any = this.previousSibling;\r\n        // while( ( child = child.previousSibling) != null ){\r\n        //   self.util.addClass(child, \"selected\");\r\n        // }\r\n        // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n        // (window as any).ccsdkDebug?console.log('Smile selected',rating):'';\r\n        self.qResponse.type = \"smile\";\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = rating;\r\n        self.qResponse.questionId = qId;\r\n\r\n        let onSurveyClickEvent = new CustomEvent(\r\n          Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken\r\n        );\r\n        document.dispatchEvent(onSurveyClickEvent);\r\n        //move to next question automagically\r\n        setTimeout(() => {\r\n          self.nextQuestion();\r\n        }, 500);\r\n      }\r\n    );\r\n    this.domListeners.push(ref);\r\n\r\n    ref.internalHandler = this.util.listener(\r\n      this.$body,\r\n      ref.type,\r\n      ref.id,\r\n      ref.cb\r\n    );\r\n  }\r\n\r\n  setupListenersQuestionCsat(index: number, qId: string) {\r\n    var self: DomSurvey = this;\r\n    if (\r\n      this.util.checkIfListenerExists(\r\n        \"#\" + qId + \" .option-smile-box\",\r\n        this.domListeners\r\n      )\r\n    ) {\r\n      //remove listeners\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"csat question - previous listeners exists\")\r\n        : \"\";\r\n      this.removePrevListener(\"#\" + qId + \" .option-smile-box\");\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring(2, qId.length);\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"csat question\", this.ccsdk.survey.answers[questionId])\r\n      : \"\";\r\n    if (\r\n      typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n      this.ccsdk.survey.answers[questionId] !== \"\"\r\n    ) {\r\n      let previousValue = this.ccsdk.survey.answers[questionId].number;\r\n      let previousSelection = document.querySelectorAll(\r\n        \"#\" + qId + ' .option-smile-box[data-rating=\"' + previousValue + '\"]'\r\n      )[0];\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"csat previous selection\", previousSelection)\r\n        : \"\";\r\n      if (\r\n        typeof previousSelection !== \"undefined\" &&\r\n        previousSelection != null\r\n      ) {\r\n        this.util.addClass(previousSelection, \"selected\");\r\n        previousSelection\r\n          .querySelectorAll(\"input\")[0]\r\n          .setAttribute(\"checked\", \"checked\");\r\n        self.qResponse.type = \"smile\";\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n\r\n    let ref = this.util.initListener(\r\n      \"click\",\r\n      \"#\" + qId + \" .option-smile-box\",\r\n      function () {\r\n        let allOptions: any = document.querySelectorAll(\r\n          \"#\" + qId + \" .option-smile-box\"\r\n        );\r\n        let rating: number = this.getAttribute(\"data-rating\");\r\n        self.util.removeClassAll(allOptions, \"selected\");\r\n        self.util.addClass(this, \"selected\");\r\n        this.querySelectorAll(\"input\")[0].setAttribute(\"checked\", \"checked\");\r\n        let child: any = this.previousSibling;\r\n        while ((child = child.previousSibling) != null) {\r\n          // (window as any).ccsdkDebug?console.log('questionscale', 'previousSiblings', child):'';\r\n          self.util.addClass(child, \"selected\");\r\n        }\r\n        // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n        // (window as any).ccsdkDebug?console.log('Smile selected',rating):'';\r\n        self.qResponse.type = \"smile\";\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = rating;\r\n        self.qResponse.questionId = qId;\r\n        console.log(\"dispatching event in csat\", this);\r\n        let onSurveyClickEvent = new CustomEvent(\r\n          Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken\r\n        );\r\n        document.dispatchEvent(onSurveyClickEvent);\r\n        //move to next question automagically\r\n        setTimeout(() => {\r\n          self.nextQuestion();\r\n        }, 500);\r\n      }\r\n    );\r\n    this.domListeners.push(ref);\r\n\r\n    ref.internalHandler = this.util.listener(\r\n      this.$body,\r\n      ref.type,\r\n      ref.id,\r\n      ref.cb\r\n    );\r\n  }\r\n\r\n  setupListenersQuestionMultiline(index: number, qId: string) {\r\n    let self: DomSurvey = this;\r\n    let multilineRes: string = \"\";\r\n    if (this.util.checkIfListenerExists(\"#\" + qId, this.domListeners)) {\r\n      //remove listeners\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"multiine question - previous listeners exists\")\r\n        : \"\";\r\n      this.removePrevListener(\"#\" + qId);\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring(2, qId.length);\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"multiine question\", this.ccsdk.survey.answers[questionId])\r\n      : \"\";\r\n    if (\r\n      typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n      this.ccsdk.survey.answers[questionId] !== \"\"\r\n    ) {\r\n      let previousValue = this.ccsdk.survey.answers[questionId].text;\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\r\n          \"multiine input box\",\r\n          document.querySelectorAll(\"#\" + qId)[0]\r\n        )\r\n        : \"\";\r\n      let previousSelection = <HTMLInputElement>(\r\n        document.querySelectorAll(\"#\" + qId)[0]\r\n      );\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"multiine previous selection\", previousSelection)\r\n        : \"\";\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"multiine previous value\", previousValue)\r\n        : \"\";\r\n      if (\r\n        typeof previousSelection !== \"undefined\" &&\r\n        previousSelection != null &&\r\n        typeof previousValue !== \"undefined\"\r\n      ) {\r\n        previousSelection.value = previousValue;\r\n        self.qResponse.type = \"multiline\";\r\n        self.qResponse.text = previousValue;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n    let ref = this.util.initListener(\"change\", \"#\" + qId, function () {\r\n      multilineRes = this.value;\r\n      self.qResponse.type = \"multiline\";\r\n      self.qResponse.text = multilineRes;\r\n      self.qResponse.number = null;\r\n      self.qResponse.questionId = qId;\r\n    });\r\n    this.domListeners.push(ref);\r\n\r\n    ref.internalHandler = this.util.listener(\r\n      this.$body,\r\n      ref.type,\r\n      ref.id,\r\n      ref.cb\r\n    );\r\n  }\r\n\r\n  setupListenersQuestionSingleline(index: number, qId: string) {\r\n    let self: DomSurvey = this;\r\n    let singlelineRes: string = \"\";\r\n    if (this.util.checkIfListenerExists(\"#\" + qId, this.domListeners)) {\r\n      //remove listeners\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"singleline question - previous listeners exists\")\r\n        : \"\";\r\n      this.removePrevListener(\"#\" + qId);\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring(2, qId.length);\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\r\n        \"singleline question\",\r\n        this.ccsdk.survey.answers[questionId]\r\n      )\r\n      : \"\";\r\n    if (\r\n      typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n      this.ccsdk.survey.answers[questionId] !== \"\"\r\n    ) {\r\n      let previousValue = this.ccsdk.survey.answers[questionId].text;\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\r\n          \"singleline input box\",\r\n          document.querySelectorAll(\"#\" + qId)[0]\r\n        )\r\n        : \"\";\r\n      let previousSelection = <HTMLInputElement>(\r\n        document.querySelectorAll(\"#\" + qId)[0]\r\n      );\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"singleline previous selection\", previousSelection)\r\n        : \"\";\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"singleline previous value\", previousValue)\r\n        : \"\";\r\n      if (\r\n        typeof previousSelection !== \"undefined\" &&\r\n        previousSelection != null &&\r\n        typeof previousValue !== \"undefined\"\r\n      ) {\r\n        previousSelection.value = previousValue;\r\n        self.qResponse.type = \"singleline\";\r\n        self.qResponse.text = previousValue;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n    let ref = this.util.initListener(\"change\", \"#\" + qId, function () {\r\n      singlelineRes = this.value;\r\n      self.qResponse.type = \"singleline\";\r\n      self.qResponse.text = singlelineRes;\r\n      self.qResponse.number = null;\r\n      self.qResponse.questionId = qId;\r\n    });\r\n    this.domListeners.push(ref);\r\n\r\n    ref.internalHandler = this.util.listener(\r\n      this.$body,\r\n      ref.type,\r\n      ref.id,\r\n      ref.cb\r\n    );\r\n\r\n    // console.log( 'singleline qResponse', self.qResponse );\r\n  }\r\n\r\n  setupListenersForDate(index: number, qId: string) {\r\n    if (this.util.checkIfListenerExists(\".date-container\", this.domListeners)) {\r\n      //remove listeners\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"date question - previous listeners exists\")\r\n        : \"\";\r\n      this.removePrevListener(\".date-container\");\r\n    }\r\n\r\n    let questionId: any;\r\n    let self = this;\r\n    questionId = qId.substring(2, qId.length);\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"date question\", this.ccsdk.survey.answers, questionId)\r\n      : \"\";\r\n    if (\r\n      this.ccsdk.survey.answers[questionId] &&\r\n      this.ccsdk.survey.answers[questionId].number\r\n    ) {\r\n      let model = this.ccsdk.survey.answers[questionId].number;\r\n      let dateQuestion = this.util.get(\".date-container\")[0];\r\n      let list = model.toString().match(/\\d\\d/g);\r\n\r\n      (<HTMLInputElement>dateQuestion.children[0]).value = list[3];\r\n      (<HTMLInputElement>dateQuestion.children[1]).value = list[2];\r\n      (<HTMLInputElement>dateQuestion.children[2]).value = list[0] + list[1];\r\n\r\n      this.qResponse.type = \"date\";\r\n      this.qResponse.text = null;\r\n      this.qResponse.number = model;\r\n      this.qResponse.questionId = qId;\r\n    }\r\n\r\n    let ref = this.util.initListener(\"change\", \".date-container\", function () {\r\n      let date = this.children[0].value;\r\n      let month = this.children[1].value;\r\n      let year = this.children[2].value;\r\n      if (!date && !month && !year) {\r\n        return;\r\n      }\r\n\r\n      if (!date.match(/^\\d\\d$/)) {\r\n        self.util.addClass(this.children[3], \"show-error\");\r\n        return;\r\n      } else if (!month.match(/^\\d\\d$/)) {\r\n        self.util.addClass(this.children[3], \"show-error\");\r\n        return;\r\n      } else if (!year.match(/^\\d\\d\\d\\d$/)) {\r\n        self.util.addClass(this.children[3], \"show-error\");\r\n        return;\r\n      } else {\r\n        self.util.removeClass(this.children[3], \"show-error\");\r\n        let numberRes = parseInt(year + month + date, 10);\r\n        self.qResponse.type = \"number\";\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = numberRes;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    });\r\n\r\n    this.domListeners.push(ref);\r\n\r\n    ref.internalHandler = this.util.listener(\r\n      this.$body,\r\n      ref.type,\r\n      ref.id,\r\n      ref.cb\r\n    );\r\n  }\r\n\r\n  setupListenersQuestionNumber(index: number, qId: string) {\r\n    let self: DomSurvey = this;\r\n    let numberRes: string = \"\";\r\n    if (this.util.checkIfListenerExists(\"#\" + qId, this.domListeners)) {\r\n      //remove listeners\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"number question - previous listeners exists\")\r\n        : \"\";\r\n      this.removePrevListener(\"#\" + qId);\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring(2, qId.length);\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"number question\", this.ccsdk.survey.answers[questionId])\r\n      : \"\";\r\n    if (\r\n      typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n      this.ccsdk.survey.answers[questionId] !== \"\"\r\n    ) {\r\n      let previousValue = this.ccsdk.survey.answers[questionId].number;\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\r\n          \"number input box\",\r\n          document.querySelectorAll(\"#\" + qId)[0]\r\n        )\r\n        : \"\";\r\n      let previousSelection = <HTMLInputElement>(\r\n        document.querySelectorAll(\"#\" + qId)[0]\r\n      );\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"number previous selection\", previousSelection)\r\n        : \"\";\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"number previous value\", previousValue)\r\n        : \"\";\r\n      if (\r\n        typeof previousSelection !== \"undefined\" &&\r\n        previousSelection != null &&\r\n        typeof previousValue !== \"undefined\"\r\n      ) {\r\n        previousSelection.value = previousValue;\r\n        self.qResponse.type = \"number\";\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n    let ref = this.util.initListener(\"change\", \"#\" + qId, function () {\r\n      numberRes = this.value;\r\n      self.qResponse.type = \"number\";\r\n      self.qResponse.text = null;\r\n      self.qResponse.number = numberRes;\r\n      self.qResponse.questionId = qId;\r\n    });\r\n    this.domListeners.push(ref);\r\n\r\n    ref.internalHandler = this.util.listener(\r\n      this.$body,\r\n      ref.type,\r\n      ref.id,\r\n      ref.cb\r\n    );\r\n  }\r\n\r\n  setupListenersQuestionSlider(index: number, qId: string) {\r\n    let self: DomSurvey = this;\r\n    let sliderRes: string = \"\";\r\n    let slider = new Slider();\r\n    let sliderInput = <HTMLInputElement>(\r\n      document.querySelectorAll(\"#\" + qId + \" input\")[0]\r\n    );\r\n\r\n    if (\r\n      this.util.checkIfListenerExists(\"#\" + qId + \" input\", this.domListeners)\r\n    ) {\r\n      // return;\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring(2, qId.length);\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"slider question\", this.ccsdk.survey.answers[questionId])\r\n      : \"\";\r\n    if (\r\n      typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n      this.ccsdk.survey.answers[questionId] !== \"\"\r\n    ) {\r\n      let previousValue = this.ccsdk.survey.answers[questionId].number;\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\r\n          \"slider input box\",\r\n          document.querySelectorAll(\"#\" + qId)[0]\r\n        )\r\n        : \"\";\r\n      let previousSelection = <HTMLInputElement>(\r\n        document.querySelectorAll(\"#\" + qId + \" .act-slider-tip\")[0]\r\n      );\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"slider previous selection\", previousSelection)\r\n        : \"\";\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"slider previous value\", previousValue)\r\n        : \"\";\r\n      if (\r\n        typeof previousSelection !== \"undefined\" &&\r\n        previousSelection != null &&\r\n        typeof previousValue !== \"undefined\"\r\n      ) {\r\n        previousSelection.innerHTML = previousValue;\r\n        sliderInput.value = previousValue;\r\n        self.qResponse.type = \"slider\";\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.text = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n    let ref = this.util.initListener(\r\n      \"change\",\r\n      \"#\" + qId + \" input\",\r\n      function () {\r\n        sliderRes = this.value;\r\n        self.qResponse.type = \"slider\";\r\n        self.qResponse.number = sliderRes;\r\n        self.qResponse.text = null;\r\n        self.qResponse.questionId = qId;\r\n        //move to next question automagically\r\n        // self.nextQuestion();\r\n      }\r\n    );\r\n    this.domListeners.push(ref);\r\n\r\n    ref.internalHandler = this.util.listener(\r\n      this.$body,\r\n      ref.type,\r\n      ref.id,\r\n      ref.cb\r\n    );\r\n  }\r\n\r\n  setupListenersQuestionSelect(index: number, qId: string) {\r\n    let self: DomSurvey = this;\r\n    let questionId: any;\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"select que\", this.domListeners)\r\n      : \"\";\r\n    questionId = qId.substring(2, qId.length);\r\n    // (window as any).ccsdkDebug?console.log(this.ccsdk.survey.answers[questionId]):'';\r\n    // (window as any).ccsdkDebug?console.log(this.ccsdk.survey.surveyAnswers[questionId]):'';\r\n    if (\r\n      this.util.checkIfListenerExists(\r\n        \"#\" + qId + \" .cc-select-options .cc-select-option\",\r\n        this.domListeners\r\n      )\r\n    ) {\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"select que listner exists\")\r\n        : \"\";\r\n      this.removePrevListener(\r\n        \"#\" + qId + \" .cc-select-options .cc-select-option\"\r\n      );\r\n\r\n      // return;\r\n    }\r\n    (window as any).ccsdkDebug ? console.log(\"select que\") : \"\";\r\n\r\n    // if(!self.util.arrayContains.call(self.trackSelects, qId)){\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"select que initialize select\")\r\n      : \"\";\r\n\r\n    self.select = new Select(qId);\r\n    self.select.destroyListeners();\r\n    self.select.init(qId);\r\n\r\n    if (\r\n      typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n      this.ccsdk.survey.answers[questionId] !== \"\"\r\n    ) {\r\n      if (this.ccsdk.survey.answers[questionId].text) {\r\n        let question = this.ccsdk.survey.getQuestionById(questionId);\r\n        self.select.setValue(\r\n          this.ccsdk.survey.answers[questionId].text,\r\n          question,\r\n          this.ccsdk.survey\r\n        );\r\n        self.select.selectOptions(this.ccsdk.survey.answers[questionId].text);\r\n        self.qResponse.type = \"select\";\r\n        self.qResponse.text = this.ccsdk.survey.answers[questionId].text;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n    self.trackSelects.push(qId);\r\n    // }\r\n    let selectRes: string = \"\";\r\n    let ref = this.util.initListener(\r\n      \"click\",\r\n      \"#\" + qId + \" .cc-select-options .cc-select-option\",\r\n      function () {\r\n        // selectRes = this.getAttribute('data-value');\r\n        selectRes = document\r\n          .querySelectorAll(\"#\" + qId + \" .cc-select-trigger\")[0]\r\n          .getAttribute(\"data-selection-value\");\r\n        // (window as any).ccsdkDebug?console.log(selectRes):'';\r\n        self.qResponse.type = \"select\";\r\n        self.qResponse.text = selectRes;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n        //move to next question automagically\r\n\r\n        let onSurveyClickEvent = new CustomEvent(\r\n          Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken\r\n        );\r\n        document.dispatchEvent(onSurveyClickEvent);\r\n\r\n        // self.nextQuestion();\r\n      }\r\n    );\r\n\r\n    // this.util.removeListener(this.$body, ref.type, listener.internalHandler);\r\n    this.domListeners.push(ref);\r\n\r\n    ref.internalHandler = this.util.listener(\r\n      this.$body,\r\n      ref.type,\r\n      ref.id,\r\n      ref.cb\r\n    );\r\n  }\r\n\r\n  // addListenersNextButtonSubmit(index : number, data : any, type : string){\r\n  //   let self : DomSurvey = this;\r\n  //   let btnNext = self.util.get('.act-cc-button-next')[0];\r\n  //   self.util.on('click', btnNext, this.submitQuestion(\r\n  //     index, data, type\r\n  //   ));\r\n  //\r\n  // }\r\n\r\n  // removeListenersNextButtonSubmit(index : number, data : any, type : string){\r\n  //   let self : DomSurvey = this;\r\n  //   let btnNext = self.util.get('.act-cc-button-next');\r\n  //   self.util.on('click', btnNext, this.submitQuestion(\r\n  //     index, data, type\r\n  //   ));\r\n  //   self.util.off('click', btnNext, this.submitQuestion(\r\n  //     index, data, type\r\n  //   ));\r\n  // }\r\n\r\n  submitQuestion(index: number, data: any, type: string, qId: string) {\r\n    (window as any).ccsdkDebug ? console.log(\"type\", type, \"res\", data) : \"\";\r\n    this.util.trigger(document, \"q-answered\", {\r\n      index: index,\r\n      data: data,\r\n      type: type,\r\n      questionId: qId.match(/^id/) ? qId.substring(2, qId.length) : qId\r\n    });\r\n  }\r\n}\r\n\r\nexport { DomSurvey };\r\n","import { DomUtilities } from './DomUtilities';\r\n\r\nclass Theme {\r\n\tutil: DomUtilities;\r\n\tbrandColorDark: string;\r\n\tbrandColorWhite: string;\r\n\tconstructor( brandColor, time ) {\r\n\t\tthis.util = new DomUtilities();\r\n\t\tthis.brandColorDark = this.util.shadeBlendConvert( -0.3, brandColor, undefined );\r\n\t\tthis.brandColorWhite = this.util.shadeBlendConvert( 0.1, brandColor, undefined );\r\n\t\tlet css: string = `\r\n\t\t.cc-sdk #progressBar{\r\n\t\t\tbackground : ${this.brandColorDark };\r\n\t\t}\r\n\t\t.cc-sdk #progress-line{ \r\n\t\t\tbackground: ${brandColor };\r\n\t\t}\r\n\t\t.cc-sdk .cc-checkbox input[type=\"checkbox\"]:checked + label:before {\r\n\t\t\tbackground:${brandColor };\r\n\t\t}\r\n\t\t.ccsdk-overlay.glass{\r\n\t\t\tbackground-color:${this.util.hexToRGB( brandColor, .5 ) };\r\n\t\t}\r\n\t\t.cc-sdk .cc-checkbox input[type=\"checkbox\"]:checked + label:after {\r\n\t\t\tborder-color: #fff;\r\n\t\t}\r\n\t\t.cc-sdk .cc-checkbox input[type=\"radio\"]:checked + label:before {\r\n\t\t\tborder-color: ${brandColor };\r\n\t\t}\r\n\t\t.cc-sdk .cc-checkbox input[type=\"radio\"]:checked + label:before {\r\n\t\t\tborder-color: ${brandColor };\r\n\t\t}\r\n\t\t.cc-sdk .cc-checkbox input[type=\"radio\"]:checked + label:after {\r\n\t\t\tbackground: ${brandColor };\r\n\t\t}\r\n\t\t.cc-sdk .cc-sdk-form-control:focus {\r\n\t\t\tborder-color: ${brandColor };\r\n\t\t}\r\n\t\t.cc-sdk .cc-message-box__btn{\r\n\t\t\tbackground: ${brandColor };\r\n\t\t\tcolor:#fff;\r\n\t\t}\r\n\t\t\t.cc-sdk .submit-icon{\r\n\t\t\t\tbackground-image: url(\"data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%2747px%27%20height%3D%2747px%27%20viewBox%3D%270%200%2047%2047%27%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%3E%3Ctitle%3EGroup%2016%3C%2Ftitle%3E%3Cdesc%3ECreated%20with%20Sketch.%3C%2Fdesc%3E%3Cdefs%3E%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%3Cfilter%20x%3D%27-18.1%25%27%20y%3D%27-12.9%25%27%20width%3D%27136.2%25%27%20height%3D%27136.2%25%27%20filterUnits%3D%27objectBoundingBox%27%20id%3D%27filter-2%27%3E%3CfeOffset%20dx%3D%270%27%20dy%3D%272%27%20in%3D%27SourceAlpha%27%20result%3D%27shadowOffsetOuter1%27%3E%3C%2FfeOffset%3E%3CfeGaussianBlur%20stdDeviation%3D%272%27%20in%3D%27shadowOffsetOuter1%27%20result%3D%27shadowBlurOuter1%27%3E%3C%2FfeGaussianBlur%3E%3CfeColorMatrix%20values%3D%270%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200.116423234%200%27%20type%3D%27matrix%27%20in%3D%27shadowBlurOuter1%27%3E%3C%2FfeColorMatrix%3E%3C%2Ffilter%3E%3C%2Fdefs%3E%3Cg%20id%3D%27Page-1%27%20stroke%3D%27none%27%20stroke-width%3D%271%27%20fill%3D%27none%27%20fill-rule%3D%27evenodd%27%3E%3Cg%20id%3D%271-copy-20%27%20transform%3D%27translate(-1246.000000%2C%20-664.000000)%27%3E%3Cg%20id%3D%27Group-16%27%20transform%3D%27translate(1250.000000%2C%20666.000000)%27%3E%3Cg%20id%3D%27Oval-4%27%3E%3Cuse%20fill%3D%27white%27%20fill-opacity%3D%271%27%20filter%3D%27url(%23filter-2)%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3Cuse%20fill%3D%27${encodeURIComponent( brandColor ) }%27%20fill-rule%3D%27evenodd%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3C%2Fg%3E%3Cg%20id%3D%27Group-5%27%20transform%3D%27translate(12.000000%2C%2011.000000)%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23FFFFFF%27%3E%3Cg%20id%3D%27fast-forward-arrows%27%20transform%3D%27translate(6.173934%2C%200.000000)%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3Cg%20id%3D%27fast-forward-arrows-copy%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\");\r\n\t\t\t}\r\n\t\t\t[dir=\"rtl\"].cc-sdk .submit-icon{\r\n\t\t\t\tbackground-image: url(\"data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%2747px%27%20height%3D%2747px%27%20viewBox%3D%270%200%2047%2047%27%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%3E%0A%20%20%20%20%3Cdesc%3ECreated%20with%20Sketch.%3C%2Fdesc%3E%0A%20%20%20%20%3Cdefs%3E%3C%2Fdefs%3E%0A%20%20%20%20%3Cg%20id%3D%27Page-1%27%20stroke%3D%27none%27%20stroke-width%3D%271%27%20fill%3D%27none%27%20fill-rule%3D%27evenodd%27%3E%0A%20%20%20%20%20%20%20%20%3Cg%20id%3D%27Submit_Icon%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27Oval-4%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27path-1-link%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23white%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27path-1-link%27%20fill%3D%27${encodeURIComponent( brandColor ) }%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27Group-5%27%20transform%3D%27translate(12.000000%2C%2011.000000)%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23ffffff%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27fast-forward-arrows%27%20transform%3D%27translate(11.173934%2C%208.500000)%20scale(-1%2C%201)%20translate(-11.173934%2C%20-8.500000)%20translate(6.173934%2C%200.000000)%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27fast-forward-arrows-copy%27%20transform%3D%27translate(5.000000%2C%208.500000)%20scale(-1%2C%201)%20translate(-5.000000%2C%20-8.500000)%20%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%3C%2Fg%3E%0A%3C%2Fsvg%3E\");\r\n\t\t\t}\r\n\t\t\t.cc-sdk .cc-question-container__required-label{\r\n\t\t\tcolor: ${brandColor };\r\n\t\t}\r\n\t\t.cc-sdk input[type=\"range\"]::-webkit-slider-runnable-track{\r\n\t\t\tbackground: ${brandColor } !important;\r\n\t\t\t   background: -moz-linear-gradient(-45deg, ${brandColor } 0%, ${ this.brandColorDark } 100%)!important;\r\n\t\t\t   background: -webkit-linear-gradient(-45deg, ${brandColor }' 0%,${ this.brandColorDark } 100%)!important;\r\n\t\t\t   background: linear-gradient(135deg, ${brandColor } 0%,${ this.brandColorDark } 100%)!important;\r\n\t\t\t   filter: progid:DXImageTransform.Microsoft.gradient( startColorstr=${brandColor }, endColorstr=${ this.brandColorDark },GradientType=1 );\r\n\t\t   }\r\n\t\t.cc-sdk input[type=\"range\"]::-moz-range-track {\r\n\t\t\tbackground: ${brandColor } !important;\r\n\t\t\tbackground: -moz-linear-gradient(-45deg, ${brandColor } 0%, ${ this.brandColorDark } 100%)!important;\r\n\t\t\tbackground: -webkit-linear-gradient(-45deg, ${brandColor } 0%, ${ this.brandColorDark } 100%)!important;\r\n\t\t\tbackground: linear-gradient(135deg, ${brandColor } 0%,${ this.brandColorDark } 100%)!important;\r\n\t\t\tfilter: progid:DXImageTransform.Microsoft.gradient( startColorstr=${brandColor }, endColorstr=${ this.brandColorDark },GradientType=1 );\r\n\t\t}\r\n\t\t   .cc-sdk input[type=\"range\"]::-webkit-slider-thumb{\r\n\t\t\tborder: 1px solid ${brandColor } ;\r\n\t\t\tbackground-color: #fff;\r\n\t\t   }\r\n\t\t   .cc-sdk input[type=\"range\"]::-moz-range-thumb {\r\n\t\t\tborder: 1px solid ${brandColor } ;\r\n\t\t\tbackground-color: #fff;\r\n\t\t   }\r\n\t\t   .cc-sdk svg.timer circle {\r\n\t\t\tanimation: countdown ${time }s linear 1 forwards;\r\n\t\t\tstroke: ${brandColor };\r\n\t\t   }\r\n\t\t   .cc-sdk input[type=range].selected::-webkit-slider-thumb {\r\n\t\t\t\tbackground-color: ${brandColor };\r\n\t\t\t}\r\n\t\t\t.cc-sdk input[type = range].selected::-moz - range - thumb {\r\n\t\t\t\tbackground-color: ${brandColor };\r\n\t\t\t}\r\n\t\t\t.cc-sdk .cc-checkbox label:hover:before{\r\n\t\t\t\tborder: solid 1px ${brandColor };\r\n\t\t\t}\r\n\t\t @media (max-width: 768px){\r\n\t \t\t\t.ccsdk-overlay.glass{\r\n\t \t\t\tbackground-color:rgba(255,255,255,.85);\r\n\t \t\t\tbackground-image:none;\r\n\t\t\t\t}\r\n\t\t\t\t.cc-sdk.cc-popup-container{\r\n\t\t\t\t\tbackground-color : transparent;\r\n\t\t\t\t}\r\n\t\t\t\t.cc-sdk.cc-popup-container .ccsdk-overlay.glass{\r\n\t\t\t\t\tbackground-color : ${this.util.hexToRGB( brandColor, .9 ) };\r\n\t\t\t\t}\r\n\t\t\t\t.cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text{\r\n\t\t\t\t\tcolor:#fff;\r\n\t\t\t\t}\r\n\t\t`;\r\n\t\tthis.util.appendStyle( css );\r\n\r\n\t}\r\n}\r\nexport { Theme }\r\n","import { DomUtilities } from './DomUtilities';\r\nclass Slider {\r\n  inputRange: any;\r\n  rangeTip: any;\r\n  maxValue: number;\r\n  speed: number;\r\n  currValue: number;\r\n  rafID: any;\r\n  timeout: any;\r\n  util: any\r\n\r\n  constructor() {\r\n    this.inputRange = document.getElementsByClassName( 'cc-sdk-range' )[ 0 ];\r\n    this.rangeTip = this.inputRange.parentNode.querySelectorAll( \".act-slider-tip\" )[ 0 ];\r\n    this.util = new DomUtilities();\r\n    //  this.maxValue = 100; // the higher the smoother when dragging\r\n    this.speed = 5;\r\n\r\n\r\n    // set min/max value\r\n    // this.inputRange.min = 0;\r\n    this.inputRange.min = this.inputRange.getAttribute( 'min' );\r\n    // this.inputRange.max = this.maxValue;\r\n    this.inputRange.max = this.inputRange.getAttribute( 'max' );\r\n    this.setupListeners();\r\n  }\r\n\r\n  setupListeners() {\r\n    let self: Slider = this;\r\n\r\n    // bind events\r\n    this.inputRange.addEventListener( 'mouseup', this.clearTo, false );\r\n\r\n    // move gradient\r\n    this.inputRange.addEventListener( 'input', function () {\r\n      self.updateRangeTip();\r\n      self.util.addClass( this, 'selected' );\r\n\r\n      //Change slide thumb color on way up\r\n      if ( this.value > 20 ) {\r\n        self.inputRange.classList.add( 'ltpurple' );\r\n      }\r\n      if ( this.value > 40 ) {\r\n        self.inputRange.classList.add( 'purple' );\r\n      }\r\n      if ( this.value > 60 ) {\r\n        self.inputRange.classList.add( 'pink' );\r\n      }\r\n\r\n      //Change slide thumb color on way down\r\n      if ( this.value < 20 ) {\r\n        self.inputRange.classList.remove( 'ltpurple' );\r\n      }\r\n      if ( this.value < 40 ) {\r\n        self.inputRange.classList.remove( 'purple' );\r\n      }\r\n      if ( this.value < 60 ) {\r\n        self.inputRange.classList.remove( 'pink' );\r\n      }\r\n    } );\r\n  }\r\n\r\n\r\n\r\n  updateRangeTip() {\r\n    let self: Slider = this;\r\n    this.rangeTip.style.display = 'block';\r\n    this.rangeTip.innerHTML = this.inputRange.value;\r\n  }\r\n\r\n  clearTo() {\r\n    clearTimeout( this.timeout );\r\n  }\r\n\r\n  // listen for unlock\r\n  // unlockStartHandler() {\r\n  //   let self : any = this;\r\n  //   // clear raf if trying again\r\n  //   window.cancelAnimationFrame(this.rafID);\r\n  //   // set to desired value\r\n  //   this.currValue = +self.value;\r\n  // }\r\n\r\n  // unlockEndHandler() {\r\n  //   // store current value\r\n  //   this.currValue = + this.value;\r\n  //   // determine if we have reached success or not\r\n  //   if(this.currValue >= this.maxValue) {\r\n  //      this.successHandler();\r\n  //   }\r\n  //   else {\r\n  //      this.rafID = window.requestAnimationFrame(this.animateHandler);\r\n  //   }\r\n  // }\r\n\r\n  // handle range animation\r\n  animateHandler() {\r\n    // calculate gradient transition\r\n    var transX = this.currValue - this.maxValue;\r\n\r\n    // update input range\r\n    this.inputRange.value = this.currValue;\r\n\r\n    //Change slide thumb color on mouse up\r\n    if ( this.currValue < 20 ) {\r\n      this.inputRange.classList.remove( 'ltpurple' );\r\n    }\r\n    if ( this.currValue < 40 ) {\r\n      this.inputRange.classList.remove( 'purple' );\r\n    }\r\n    if ( this.currValue < 60 ) {\r\n      this.inputRange.classList.remove( 'pink' );\r\n    }\r\n\r\n    // determine if we need to continue\r\n    if ( this.currValue > -1 ) {\r\n      window.requestAnimationFrame( this.animateHandler );\r\n    }\r\n\r\n    // decrement value\r\n    this.currValue = this.currValue - this.speed;\r\n  }\r\n\r\n  // handle successful unlock\r\n  successHandler() {\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\nexport { Slider };\r\n","//Manages trigger.\r\nimport { Cookie } from \"./helpers/Cookie\";\r\nimport { Constants } from \"./Constants\";\r\nimport { Triggers } from \"./Triggers\";\r\n//collect initial data\r\n//if on site time is null, add on site time\r\nif (Cookie.get(Constants.CCTriggerSiteStartTime) == null) {\r\n  Cookie.set(Constants.CCTriggerSiteStartTime, new Date(), undefined, undefined);\r\n}\r\n//always add on page Time\r\nCookie.set(Constants.CCTriggerPageStartTime, new Date(), undefined, undefined);\r\n\r\nlet sitePageViewCount = Cookie.get(Constants.CCTriggerSitePageViewCount);\r\nif (sitePageViewCount == null) {\r\n  Cookie.set(Constants.CCTriggerSitePageViewCount, 1, undefined, undefined);\r\n} else {\r\n  sitePageViewCount = (parseInt(sitePageViewCount) + 1).toString();\r\n  Cookie.set(Constants.CCTriggerSitePageViewCount, sitePageViewCount, undefined, undefined);\r\n}\r\n\r\nlet pathname = window.location.pathname;\r\nif (pathname.match(/\\./)) {\r\n  pathname = pathname.substring(0, pathname.lastIndexOf('/'));\r\n}\r\nlet individualPageViewCount = Cookie.get(Constants.CCTriggerIndividualPageViewCount);\r\nif (individualPageViewCount == null) {\r\n  Cookie.set(Constants.CCTriggerIndividualPageViewCount + pathname, 1, undefined, undefined);\r\n} else {\r\n  individualPageViewCount = (parseInt(individualPageViewCount) + 1).toString();\r\n  Cookie.set(Constants.CCTriggerIndividualPageViewCount + pathname, individualPageViewCount, undefined, undefined);\r\n}\r\n\r\n(window as any).click = 0;\r\n\r\nwindow.onscroll = function (e) {\r\n  // called when the window is scrolled.  \r\n  let doc = document.documentElement;\r\n  let left = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);\r\n  let top = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\r\n  (window as any).ccsdkTopOffset = top;\r\n  TriggerManager.processScrollTriggers(top);\r\n}\r\n\r\ndocument.onclick = function (e) {\r\n  (window as any).click++;\r\n}\r\n\r\n//TriggerManager adds to survey Queue\r\nclass TriggerManager {\r\n\r\n  static triggerInterval: any = null;\r\n  static triggerInstances: any = {};\r\n\r\n  constructor() {\r\n    //initialize triggers\r\n    //add those triggers which aren't completed yet.\r\n  }\r\n\r\n  static addSurvey(surveyId: any, trigger: Triggers) {\r\n    TriggerManager.triggerInstances[surveyId] = trigger;\r\n    if (Object.keys(TriggerManager.triggerInstances).length >= 1) {\r\n      (window as any).ccsdkDebug ? console.log(TriggerManager.triggerInterval) : '';\r\n      if (TriggerManager.triggerInterval == null) {\r\n        (window as any).ccsdkDebug ? console.log(\"TriggerHandler : Setting up Interval Trigger Handlers.\") : '';\r\n        TriggerManager.triggerInterval = setInterval(TriggerManager.processIntervalTriggers, 1000);\r\n      }\r\n      //processing sequential triggers if any.\r\n      // console.log(\"TriggerHandler : Processing sequential triggers for  \" + surveyId);\r\n      // TriggerManager.processTriggersBySurveyId(surveyId);\r\n    }\r\n  }\r\n\r\n  static removeSurvey(surveyId: string) {\r\n    delete TriggerManager.triggerInstances[surveyId];\r\n    if (Object.keys(TriggerManager.triggerInstances).length == 0) {\r\n      clearInterval(TriggerManager.triggerInterval);\r\n    }\r\n  }\r\n\r\n  static processIntervalTriggers() {\r\n    //if some survey is already running skip processing surveys for now?or queue it?.\r\n    let pathname = window.location.pathname;\r\n    if (pathname.match(/\\./)) {\r\n      pathname = pathname.substring(0, pathname.lastIndexOf('/'));\r\n    }\r\n    Cookie.set(Constants.CCTriggerPageElapsedTime + pathname, new Date(), undefined, undefined);\r\n    Cookie.set(Constants.CCTriggerSiteElapsedTime, new Date(), undefined, undefined);\r\n\r\n    for (let trigger in TriggerManager.triggerInstances) {\r\n      TriggerManager.triggerInstances[trigger].processIntervalTriggers();\r\n      TriggerManager.triggerInstances[trigger].processConditionalTriggers();\r\n    }\r\n  }\r\n\r\n  static processScrollTriggers(scrollNow) {\r\n    for (let trigger in TriggerManager.triggerInstances) {\r\n      //process all scroll triggers.\r\n      TriggerManager.triggerInstances[trigger].processScrollTriggers(scrollNow);\r\n    }\r\n  }\r\n\r\n  static disableTriggers(surveyId: string) {\r\n    TriggerManager.triggerInstances[surveyId].disableTriggers();\r\n  }\r\n\r\n};\r\n\r\n\r\n\r\nexport { TriggerManager };","import { Cookie } from \"./helpers/Cookie\";\r\nimport { Constants } from \"./Constants\";\r\nimport { SurveyManager } from \"./SurveyManager\";\r\nimport { TriggerUtils } from \"./helpers/TriggerUtils\";\r\nimport { CCSDKConfig } from \"./interfaces/CCSDKConfig\";\r\n\r\nclass Triggers {\r\n\r\n  ccsdk: any;\r\n  pageCountTrigger: boolean;\r\n  pageTimeTrigger: boolean;\r\n  siteCountTrigger: boolean;\r\n  siteTimeTrigger: boolean;\r\n  urlParamTrigger: boolean;\r\n  notUrlParamTrigger: boolean;\r\n  utmParamTrigger: boolean;\r\n  scrollPixelsTrigger: boolean;\r\n  minPageCount: number;\r\n  minSiteCount: number;\r\n  minPageTime: number;\r\n  minSiteTime: number;\r\n  minScrollPixels: number;\r\n  utm: string;\r\n  inUrl: RegExp;\r\n  notinUrl: RegExp;\r\n  pageCountTriggerEnabled: boolean;\r\n  siteCountTriggerEnabled: boolean;\r\n  pageTimeTriggerEnabled: boolean;\r\n  siteTimeTriggerEnabled: boolean;\r\n  urlParamTriggerEnabled: boolean;\r\n  notUrlParamTriggerEnabled: boolean;\r\n  utmParamTriggerEnabled: boolean;\r\n  scrollPixelsTriggerEnabled: boolean;\r\n\r\n  conditionalTriggers: any;\r\n\r\n  constructor(ccsdk) {\r\n    this.ccsdk = ccsdk;\r\n    this.pageCountTrigger = false;\r\n    this.siteCountTrigger = false;\r\n    this.pageTimeTrigger = false;\r\n    this.siteTimeTrigger = false;\r\n    this.urlParamTrigger = false;\r\n    this.notUrlParamTrigger = false;\r\n    this.utmParamTrigger = false;\r\n    this.scrollPixelsTrigger = false;\r\n\r\n    //disable all triggers.\r\n    this.pageCountTriggerEnabled = false;\r\n    this.siteCountTriggerEnabled = false;\r\n    this.pageTimeTriggerEnabled = false;\r\n    this.siteTimeTriggerEnabled = false;\r\n    this.urlParamTriggerEnabled = false;\r\n    this.notUrlParamTriggerEnabled = false;\r\n    this.utmParamTriggerEnabled = false;\r\n    this.scrollPixelsTriggerEnabled = false;\r\n    this.conditionalTriggers = {};\r\n  }\r\n\r\n\r\n  enableClickTrigger(target: string, cb: any) {\r\n    let item = document.querySelectorAll(target)[0];\r\n    if (typeof item !== 'undefined') {\r\n      item.addEventListener('click', cb);\r\n    } else {\r\n      console.log('selector does not match')\r\n    }\r\n  }\r\n\r\n  enablePageCountTrigger(minPageCount: number) {\r\n    this.minPageCount = minPageCount;\r\n    this.pageCountTriggerEnabled = true;\r\n    this.TriggerPopUpByPageCount();\r\n  }\r\n\r\n  enableSiteCountTrigger(minSiteCount: number) {\r\n    this.minSiteCount = minSiteCount;\r\n    this.pageCountTriggerEnabled = true;\r\n    this.TriggerPopUpByPageCount();\r\n  }\r\n\r\n  enablePageTimeTrigger(minPageTime: number) {\r\n    this.minPageTime = minPageTime;\r\n    this.pageTimeTriggerEnabled = true;\r\n    this.TriggerPopUpByTimeSpentOnPage();\r\n  }\r\n\r\n  enableSiteTimeTrigger(minSiteTime: number) {\r\n    this.minSiteTime = minSiteTime;\r\n    this.siteTimeTriggerEnabled = true;\r\n    this.TriggerPopUpByTimeSpentOnSite();\r\n  }\r\n\r\n  enablePopUpByURLPatternTrigger(urlPattern: RegExp) {\r\n    this.inUrl = urlPattern;\r\n    this.urlParamTriggerEnabled = true;\r\n    this.TriggerPopUpByURLPattern();\r\n  }\r\n\r\n  enablePopUpByNotURLPatternTrigger(urlPattern: RegExp) {\r\n    this.notinUrl = urlPattern;\r\n    this.notUrlParamTriggerEnabled = true;\r\n    this.TriggerPopUpByNotURLPattern();\r\n  }\r\n\r\n  enablePopUpByUTMPatternTrigger(urlPattern: string) {\r\n    this.utm = urlPattern;\r\n    this.utmParamTriggerEnabled = true;\r\n    this.TriggerPopUpByUTMParameter();\r\n  }\r\n\r\n  enableScrollPixelsTrigger(minScrollPixels: number) {\r\n    this.minScrollPixels = minScrollPixels;\r\n    this.scrollPixelsTriggerEnabled = true;\r\n\r\n  }\r\n\r\n  processIntervalTriggers() {\r\n    //if survey already launched\r\n    //skip processing.\r\n    if (this.ccsdk.surveyRunning || this.ccsdk.surveyDone) {\r\n      return;\r\n    }\r\n    this.TriggerPopUpByTimeSpentOnPage();\r\n    this.TriggerPopUpByTimeSpentOnSite();\r\n  }\r\n\r\n  setConditionalTriggers(config: CCSDKConfig) {\r\n    (window as any).ccsdkDebug ? console.log(config.grepURL) : '';\r\n    //\r\n    if ((typeof config.click !== 'undefined') && (config.click != 0)) {\r\n      this.conditionalTriggers.click = config.click;\r\n    }\r\n    if ((typeof config.onExitDetect !== 'undefined')) {\r\n      this.conditionalTriggers.onExitDetect = config.onExitDetect;\r\n    }\r\n    // if ((typeof config.cssSelector !== 'undefined')) {\r\n    //   this.conditionalTriggers.cssSelector = config.cssSelector;\r\n    // }\r\n    if ((typeof config.waitSeconds !== 'undefined') && (config.waitSeconds !== 0)) {\r\n      this.conditionalTriggers.waitSeconds = config.waitSeconds;\r\n    }\r\n    if ((typeof config.scrollPercent !== 'undefined') && (config.scrollPercent !== 0)) {\r\n      this.conditionalTriggers.scrollPercent = config.scrollPercent;\r\n    }\r\n    if ((typeof config.grepInvertURL !== 'undefined') && (config.grepInvertURL)) {\r\n      this.conditionalTriggers.grepInvertURL = config.grepInvertURL;\r\n    }\r\n    if ((typeof config.grepURL !== 'undefined') && (config.grepURL)) {\r\n      this.conditionalTriggers.grepURL = config.grepURL;\r\n    }\r\n\r\n  }\r\n\r\n  processConditionalTriggers() {\r\n    //gather all conditional triggers and process them.\r\n    let self = this;\r\n    let isEnabled = true;\r\n    if (this.ccsdk.surveyRunning || this.ccsdk.surveyDone) {\r\n      (window as any).ccsdkDebug ? console.log('returning') : '';\r\n      return;\r\n    }\r\n    if (typeof this.conditionalTriggers !== 'undefined') {\r\n      if (Object.keys(this.conditionalTriggers).length == 0) {\r\n        return false;\r\n      }\r\n      for (let conditionalTrigger in this.conditionalTriggers) {\r\n        if (this.conditionalTriggers[conditionalTrigger] != null) {\r\n          switch (conditionalTrigger) {\r\n            case \"onExitDetect\":\r\n              let onExitDetect = self.ccsdk.util.initListener(\"mouseout\", \"document\", function () {\r\n                (window as any).ccsdkDebug ? console.log(\"Mouse out\") : '';\r\n\r\n              });\r\n\r\n              onExitDetect.internalHandler = self.ccsdk.util.listener(document, onExitDetect.type, onExitDetect.id, onExitDetect.cb);\r\n\r\n              break;\r\n            case \"click\":\r\n              //find click count on screen\r\n              //calculate click count\r\n              // if((window as any).click > this.conditionalTriggers.click) {\r\n              //   return SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n              // }\r\n              isEnabled = isEnabled && ((window as any).click >= this.conditionalTriggers.click);\r\n              break;\r\n            case \"waitSeconds\":\r\n              let pageStartTime = new Date(Cookie.get(Constants.CCTriggerPageStartTime)).getTime();\r\n              let pathname = window.location.pathname;\r\n              if (pathname.match(/\\./)) {\r\n                pathname = pathname.substring(0, pathname.lastIndexOf('/'));\r\n              }\r\n              let pageTime = new Date(Cookie.get(Constants.CCTriggerPageElapsedTime + pathname)).getTime();\r\n              isEnabled = isEnabled && TriggerUtils.checkTimeCondition(pageTime, pageStartTime, this.conditionalTriggers[conditionalTrigger]);\r\n              (window as any).ccsdkDebug ? console.log('waitSeconds enabled', isEnabled) : '';\r\n              break;\r\n            case \"scrollPercent\":\r\n              //fill it with current scroll position\r\n              isEnabled = isEnabled && TriggerUtils.checkScroll((window as any).ccsdkTopOffset, this.conditionalTriggers[conditionalTrigger]);\r\n              (window as any).ccsdkDebug ? console.log('scrollPercent enabled', isEnabled) : '';\r\n\r\n              break;\r\n            case \"grepURL\":\r\n              isEnabled = isEnabled && TriggerUtils.checkInUrl(this.conditionalTriggers[conditionalTrigger]);\r\n              (window as any).ccsdkDebug ? console.log('grepURL enabled', isEnabled) : '';\r\n              break;\r\n            case \"grepInvertURL\":\r\n              isEnabled = isEnabled && !TriggerUtils.checkInUrl(this.conditionalTriggers[conditionalTrigger]);\r\n              (window as any).ccsdkDebug ? console.log('grepInvertURL enabled', isEnabled) : '';\r\n              break;\r\n          }\r\n        }\r\n      }\r\n      if (isEnabled) {\r\n        if (this.ccsdk && this.ccsdk.tracking) {\r\n          this.ccsdk.tracking.trackEvent('Popped Up', {\r\n            token: this.ccsdk.tracking.token,\r\n            data: {\r\n              name: null,\r\n              action: null\r\n            }\r\n          }, null, null)\r\n        }\r\n        SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n      }\r\n    } else {\r\n      //do nothing.\r\n    }\r\n  }\r\n\r\n  processNonConditionalTriggers() {\r\n    //process all non conditional one shot triggers here?\r\n  }\r\n\r\n  processScrollTriggers(scrollNow: number) {\r\n    this.TriggerPopUpByScrollPixels(scrollNow);\r\n  }\r\n\r\n  TriggerPopUpByPageCount() {\r\n    let pageCount = parseInt(Cookie.get(Constants.CCTriggerSitePageViewCount));\r\n    if (pageCount == NaN) {\r\n      pageCount = 0;\r\n    }\r\n    //!(window as any).globalSurveyRunning && \r\n    if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.pageCountTrigger && TriggerUtils.checkPageCount(pageCount, this.minPageCount)) {\r\n      this.pageCountTrigger = true;\r\n      //displayQuestion\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n    } else {\r\n      //already executed.\r\n      //or condition not satisified yet.\r\n    }\r\n  }\r\n\r\n\r\n  //minPageTime in seconds\r\n  TriggerPopUpByTimeSpentOnPage() {\r\n    let pageStartTime = new Date(Cookie.get(Constants.CCTriggerPageStartTime)).getTime();\r\n    let pathname = window.location.pathname;\r\n    if (pathname.match(/\\./)) {\r\n      pathname = pathname.substring(0, pathname.lastIndexOf('/'));\r\n    }\r\n\r\n    let pageTime = new Date(Cookie.get(Constants.CCTriggerPageElapsedTime + pathname)).getTime();\r\n\r\n    //!(window as any).globalSurveyRunning && \r\n    if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.pageTimeTrigger && TriggerUtils.checkTimeCondition(pageTime, pageStartTime, this.minPageTime)) {\r\n      this.pageTimeTrigger = true;\r\n      //displayQuestion\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n    } else {\r\n      //already executed.\r\n      //or condition not satisified yet.\r\n    }\r\n  }\r\n\r\n  TriggerPopUpByTimeSpentOnSite() {\r\n    let siteStartTime = new Date(Cookie.get(Constants.CCTriggerSiteStartTime)).getTime();\r\n    let siteTime = new Date(Cookie.get(Constants.CCTriggerSiteElapsedTime)).getTime();\r\n    //!(window as any).globalSurveyRunning && \r\n    if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.siteTimeTrigger && TriggerUtils.checkTimeCondition(siteTime, siteStartTime, this.minSiteTime)) {\r\n      this.siteTimeTrigger = true;\r\n      //displayQuestion\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n    } else {\r\n      //already executed.\r\n      //or condition not satisified yet.\r\n    }\r\n  }\r\n\r\n  TriggerPopUpByInactivity() {\r\n\r\n  }\r\n\r\n  TriggerPopUpByScrollPixels(scrollNow: number) {\r\n    //!(window as any).globalSurveyRunning && \r\n    if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.scrollPixelsTrigger && TriggerUtils.checkScroll(scrollNow, this.minScrollPixels)) {\r\n      this.scrollPixelsTrigger = true;\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n      // this.ccsdk.initSurvey();\r\n      // SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n    } else {\r\n      //already executed?\r\n      //or condition not satisified yet.\r\n    }\r\n  }\r\n\r\n  //run only once?\r\n  TriggerPopUpByURLPattern() {\r\n    //!(window as any).globalSurveyRunning && \r\n    if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.urlParamTrigger && TriggerUtils.checkInUrl(this.inUrl)) {\r\n      this.urlParamTrigger = true;\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n    } else {\r\n\r\n    }\r\n  }\r\n\r\n  TriggerPopUpByNotURLPattern() {\r\n    //!(window as any).globalSurveyRunning && \r\n    if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.notUrlParamTrigger && !TriggerUtils.checkInUrl(this.inUrl)) {\r\n      this.notUrlParamTrigger = true;\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n    } else {\r\n\r\n    }\r\n  }\r\n\r\n  TriggerPopUpByUTMParameter() {\r\n    let utmP = this.utm.split(\"=\");\r\n    let utmVal = Cookie.getParameterByName(utmP[0], undefined);\r\n    //!(window as any).globalSurveyRunning && \r\n    if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.utmParamTrigger && utmVal === utmP[1]) {\r\n      this.utmParamTrigger = true;\r\n\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n    }\r\n  }\r\n\r\n  resetTriggers() {\r\n    this.pageCountTrigger = false;\r\n    this.pageTimeTrigger = false;\r\n    this.siteTimeTrigger = false;\r\n    this.urlParamTrigger = false;\r\n    this.scrollPixelsTrigger = false;\r\n  }\r\n}\r\n\r\nexport { Triggers };","class TriggerUtils {\r\n\r\n\r\n    public static checkInUrl(inUrl : RegExp) {\r\n        return window.location.href.match(inUrl) != null && window.location.href.match(inUrl).length > 0;\r\n    }\r\n\r\n    public static checkTimeCondition(pageTime : number, pageStartTime : number, minPageTime : number) {\r\n        return Math.round((pageTime - pageStartTime) / 1000) > minPageTime;\r\n    }\r\n\r\n    public static checkScroll(scrollNow : number, minScrollPixels : number) {\r\n        return scrollNow > minScrollPixels;\r\n    }\r\n\r\n    public static checkPageCount(pageCount : number, minPageCount : number) {\r\n        return pageCount >= minPageCount;\r\n    }\r\n}\r\n\r\nexport { TriggerUtils };","import { RequestHelper } from \"./Request\";\r\n\r\nexport class MatomoTracker {\r\n  public username;\r\n  public token;\r\n\r\n  trackEvent(event, payload, successCb, errorCb) {\r\n    // removed matomo tracking\r\n    // let url\r\n    // try {\r\n    //   url = new URL('https://matomo.getcloudcherry.com/piwik.php');\r\n    // } catch (err) {\r\n    //   if (errorCb && typeof errorCb === 'function') {\r\n    //     errorCb();\r\n    //   }\r\n    //   return;\r\n    // }\r\n    // if (!url || !url.searchParams) {\r\n    //   if (errorCb && typeof errorCb === 'function') {\r\n    //     errorCb();\r\n    //     return;\r\n    //   } else {\r\n    //     return;\r\n    //   }\r\n    // }\r\n    // // constants for project\r\n    // const idsite = 4;\r\n    // const rec = 1;\r\n    // let searchParams = {\r\n    //   idsite,\r\n    //   rec,\r\n    //   action_name: event,\r\n    //   url: window.location.href,\r\n    //   action_url: window.location.href,\r\n    //   uid: this.username,\r\n    //   _cvar: { '1': ['Token', payload.token] },\r\n    //   new_visit: event === 'Welcome Pop up Position' ? 1 : 0,\r\n    //   e_c: event,\r\n    //   e_a: payload.data.action,\r\n    //   e_n: payload.data.name,\r\n    //   rand: Math.ceil(Math.random() * 100)\r\n    // };\r\n    // Object.keys(searchParams).forEach(x => {\r\n    //   let param;\r\n    //   if (typeof searchParams[x] === 'string') {\r\n    //     param = searchParams[x];\r\n    //   } else {\r\n    //     param = JSON.stringify(searchParams[x]);\r\n    //   }\r\n    //   url.searchParams.set(x, param);\r\n    // })\r\n    // return RequestHelper.post(url.toString(), null, successCb, errorCb);\r\n  }\r\n}\r\n"],"sourceRoot":""}