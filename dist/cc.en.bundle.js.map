{"version":3,"sources":["webpack:///cc.en.bundle.js","webpack:///webpack/bootstrap","webpack:///./src/helpers/dom/DomUtilities.ts","webpack:///./src/Constants.ts","webpack:///./src/helpers/Cookie.ts","webpack:///./src/SurveyManager.ts","webpack:///./src/helpers/Request.ts","webpack:///./src/helpers/filters/LanguageTextFilter.ts","webpack:///./src/Config.ts","webpack:///./src/helpers/templates.ts","webpack:///./src/helpers/filters/filter-utils.ts","webpack:///./src/helpers/dom/Select.ts","webpack:///./src/helpers/filters/ConditionalFlowFilter.ts","webpack:///./src/polyfills/ccsdk.polyfill.ts","webpack:///./src/CCSDKEntry.ts","webpack:///./src/Survey.ts","webpack:///./src/SurveyHandler.ts","webpack:///./src/css/main.scss?8357","webpack:///./src/css/main.scss","webpack:///./node_modules/rtl-css-loader/lib/css-base.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./src/helpers/filters/ConditionalTextFilter.ts","webpack:///./src/helpers/dom/DomSurvey.ts","webpack:///./src/helpers/dom/Theme.ts","webpack:///./src/helpers/dom/Slider.ts","webpack:///./src/TriggerManager.ts","webpack:///./src/Triggers.ts","webpack:///./src/helpers/TriggerUtils.ts","webpack:///./src/helpers/tracking.ts"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","default","object","property","prototype","hasOwnProperty","p","s","templates_1","DomUtilities","selector","document","querySelectorAll","appendStyle","css","head","getElementsByTagName","style","createElement","type","styleSheet","cssText","appendChild","createTextNode","remove","el","parentNode","removeChild","removeAll","elements","Array","forEach","removeClassAll","className","_this","this","removeClass","addClassAll","addClass","classList","replace","RegExp","split","join","add","toggleClass","contains","hasClass","test","ready","fn","attachEvent","readyState","addEventListener","getParents","parentSelector","parents","push","listener","evt","sel","handler","selectorMatches","Element","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","indexOf","internalHandler","event","target","initListener","id","cb","checkIfListenerExists","ar","_i","ar_1","length","on","off","removeEventListener","removeListener","removeAllListeners","ar_2","trigger","eventName","data","CustomEvent","detail","createEvent","initCustomEvent","dispatchEvent","removeTrigger","shadeBlendConvert","from","to","e","sbcRip","RGB","slice","parseFloat","parseInt","Math","round","h","b","f","toString","hexToRGB","hex","alpha","substr","map","g","arrayContains","needle","findNaN","index","item","generateSelectOptions","arr","translatedArr","isArray","res","translatedOpt","generateLanguageSelectOptions","checkOptionContainsImage","opt","generateRadioImageOptions","optHtml","templates","option_radio_image","generateRadioIgnoreImageOptions","option_radio","generateRadioOptions","generateCheckboxImageOptions","option_checkbox_image","generateCheckboxIgnoreImageOptions","option_checkbox","generateCheckboxOptions","Constants","CCTriggerPageStartTime","CCTriggerPageElapsedTime","CCTriggerSiteStartTime","CCTriggerSiteElapsedTime","CCTriggerSitePageViewCount","CCTriggerIndividualPageViewCount","SURVEY_IMPRESSION_EVENT","SURVEY_START_EVENT","SURVEY_DATA_EVENT","SURVEY_END_EVENT","SURVEY_CLOSE_EVENT","SURVEY_QUESTION_EVENT","SURVEY_ANSWER_EVENT","SURVEY_CLICK_EVENT","GRANT_TYPE","AUTHORIZATION","AUTHORIZATION_BEARER","SURVEY_CLIENT","Cookie","set","days","path","date","Date","setTime","getTime","expires","toUTCString","dir","cookie","nameEQ","ca","charAt","substring","delete","getParameterByName","url","window","location","href","results","exec","decodeURIComponent","SurveyManager","initializeSurvey","surveyId","surveyInstances","setupSurvey","console","error","addSurvey","ccsdkDebug","log","surveyQueue","processQueueInterval","setInterval","processQueueIntervalCB","removeSurvey","survey","splice","clearInterval","globalSurveyRunning","pop","setSurveyRunning","globalSurveyStartTime","unsetSurveyRunning","makeRequest","method","postParams","headers","successcb","errorcb","xhr","XMLHttpRequest","open","onload","status","response","match","JSON","parse","statusText","onerror","keys","setRequestHeader","send","RequestHelper","getWithHeaders","postWithHeaders","stringify","post","LanguageTextFilter","translateQuestionText","surveyHandler","question","ccsdk","config","language","translated","text","qText","translateMessages","surveyData","translateDisplayLegend","displayLegend","translateMultiSelect","multiSelect","translatedOptions_1","x","translateMultiSelectOption","option","effectiveMultiselect","Config","API_URL","SURVEY_BY_TOKEN","SURVEY_PARTIAL_RESPONSE","CDN_URL","CDN_ASSET_URL","POST_LOGIN_TOKEN","GET_SURVEY_THROTTLE_LOGIC","POST_THROTTLING","POST_THROTTLING_ADD_ENTRIES","POST_SURVEY_FINAL","GET_CAMPAIGN","QuestionSurvey","QuestionStart","QuestionSingleline","QuestionNumber","QuestionMultiline","QuestionCheckbox","QuestionRadio","QuestionRadioImage","QuestionScale","QuestionCSATAgreement5","QuestionCSATSatisfaction5","QuestionNPS","QuestionSelect","QuestionMultiSelect","QuestionSmile","QuestionSmileInverted","QuestionStar","QuestionSlider","OptionRadioImage","OptionRadio","OptionCheckbox","OptionCheckboxImage","ThankYou","question_survey","question_start","question_text","question_number","question_scale","question_csat_agreement_5","question_csat_satisfaction_5","question_nps","question_multi_line_text","question_multi_select","question_radio","question_radio_image","question_checkbox","question_select","question_smile_5","question_date","question_smile_5_inverted","question_star_5","question_slider","thankyou","language_selector","isNumberCheck","filterQuestion","answerCheck","isAnd","groupBy","toUpperCase","isOr","doesSatisfy","answer","getAnswerForQuestionId","questionId","toLowerCase","textInput","iFoundAll","getQuestionById","questionAnswerText","_a","aAnswer","displayType","numberInput","number","questionCompare","a","sequence","checkLanguage","fOption","DomUtilities_1","LanguageTextFilter_1","Select","qId","listeners","init","util","$body","$html","select","parent","getAttribute","self","classes","template","options","innerHTML","insertAdjacentHTML","setupListeners","ref2","selfOption","selectOptions","selectWrapper","selectionTrigger","selectedOptionText","textContent","selectedValueText","addOrRemoveFromList","setAttribute","ref","ccSelect","stopPropagation","destroyListeners","setValue","selectTrigger","translatedSelection","selectOption","removeOption","csv","allOptions_1","domOptions","listAsString","list","itemIndex","filter_utils_1","ConditionalFlowFilter","aAddedCount","aRemovedCount","getConditionalSurveyQuestions","aQuestion","conditionalFilter","iSatisfied","iFailed","_b","_c","filterquestions","aFilterByQuestion","surveyQuestions","getSurveyQuestions","removeAnswer","sort","toStr","isCallable","maxSafeInteger","pow","toLength","len","Number","isNaN","isFinite","floor","abs","toInteger","min","max","arrayLike","items","TypeError","T","mapFn","arguments","kValue","A","k","params","bubbles","cancelable","Event","includes","searchElement","fromIndex","y","surveyToken","trim","Cookie_1","isActive","SurveyManager_1","Survey_1","Survey","tracking","trackEvent","token","isMobile","action","destroy","dom","callback","prefill","restArgs","prefillByTag","questionTag","prefillByNote","questionNote","show","hide","localCCSDK","innerWidth","CCSDK","queue","q","args","functionName","apply","queue_1","eventCCReady","initEvent","SurveyHandler_1","DomSurvey_1","Constants_1","TriggerManager_1","Triggers_1","Request_1","Config_1","tracking_1","requester","isThrottled","surveyDone","surveyStatus","surveyRunning","thorttlingLogic","MatomoTracker","textDirection","triggers","Triggers","TriggerManager","SurveyHandler","brandColor","setHtmlTextDirection","setDisplayOptions","setTimeout","username","password","cssSelector","setConditionalTriggers","getSurveyThrottlingLogic","getThrottleUrl","loginData","access_token","checkThrottling","inputIds","uniqueIDQuestionIdOrTag","logics","filter","postThrottleUrl","throttleResponse","addThrottlingEntries","isOpen","addThrottleUrl","user","mobile","emailId","customId","surveySentDate","surveyOpenDate","channel","isOpened","debug","initSurvey","ccSDKElement","querySelector","ccSDKDir","direction","surveyDisplay","position","welcomePopupAnimation","surveyPosition","search","getSurveyData","fetchQuestions","skipWelcomePage","hideLoader","questions","preFill","initSurveyQuestions","displayWelcomeQuestion","DomSurvey","setTheme","keepAlive","onImpressionEvent","startSurvey","setCoolDownPeriod","surveyStartTime","acceptAnswers","attachSurvey","initSurveyDom","onSurveyStartEvent","restOfArgs","prefillObject","fillPrefillDirect","fillPrefill","fillPrefillByNote","enableClickTrigger","count","enablePageCountTrigger","count2","enableSiteCountTrigger","enablePageTimeTrigger","enableSiteTimeTrigger","enablePopUpByURLPatternTrigger","enablePopUpByNotURLPatternTrigger","enablePopUpByUTMPatternTrigger","enableScrollPixelsTrigger","ConditionalTextFilter_1","Select_1","ConditionalFlowFilter_1","answers","surveyAnswers","_prefillsPartiallyPosted","surveyPopupAnimation","domListeners","questionsToDisplay","prefillQuestions","conditionalQuestions","prefillResponses","prefillWithTags","prefillWithNote","prefillDirect","displayThankYouCb","finalPost","thankyouHtml","thankyouText","startText","startButtonText","branding","replaceInQuestionsContainer","thankyouContainer","onSurveyEndEvent","destroySurveyCb","acceptAnswersCb","postPartialAnswer","domSelectElements","setQIndex","randomNumber","String","random","surveyUrl","setupPrefill","setupSurveyContainer","cleanSurvey","displayQuestions","displayThankYou","destroySurvey","fillPrefillQuestionObject","surveyHtml","appendInBody","displayQuestionSelector","warningWelcomeText","onSurveyImpressionEvent","welcomeHtml","welcomeText","getElementById","showWelcomeContainer","welcomeQuestionDisplayTime","welcomeInterval","checkWelcomeQuestionDisplay","campaign","coolDownPeriod","now","killWelcomeQuestion","cancelKillWelcomeQuestion","displayLanguageSelector","options1","cTemplate1","concat","$questionContainer","firstChild","languageSelect","submitBtn","selectRes","removePrevListener","languageSelect2","languageQuestion","find","questionTags","fillPrefillQuestion","isRTL","loadFirstQuestion","filterQuestions","getElementsByClassName","checkConditionals","compiledTemplate","compileTemplate","isPrefillQuestion","getPrefillResponseById","updatePrefillResponseById","prefillObj","valueType","responseStored","questionText","getAnswerTypeFromDisplayType","postPrefillPartialAnswer","fullSubmission","partialResponseId","surveyPartialUrl","resp","complete","onSurveyAnswerEvent","postSurveyFinalUrl","lastAnswer","answersAll","timeAtPost","finalData","locationId","responses","nps","surveyClient","responseDuration","_lastAnswer","questionTemplate","optMin","optMax","ConditionalTextFilter","filterText","isRequired","tileColor","attributes","scaleColor","presentationMode","tileColorDark","startRange","endRange","startRangeLabel_1","endRangeLabel_1","midRangeLabel","anchorMetricName","metricName","optionsLength","customMetric","customMetrics","optionCategories","label","displayLegend_1","mobileImageUrl","imageVisibility010","imageVisibility110","scaleVisibility","scaleImageContainer","divider","optionStyle","legendDimension","dimension","leftWidth","initial_1","cmwidthstart","categoryRange","iterator","startRange_1","endRange_1","initial_2","color","initial_3","optionLeftExtraClass","optionMidExtraClass","optionRightExtraClass","optionMaxWidth","validationHint","characterLimit","acTemplate","multiSelect1","reverse","displayStyle","options2_1","options2_2","options3","acTemplate1","acTemplate2","options2","invertedMultiSelect","invertedMultiSelect_1","startRangeLabel","endRangeLabel","displayLegend2","startRangeLabel1","endRangeLabel1","displayLegend3","isRetired","isPrefillTags","isPrefillNote","isPrefillDirect","fillPrefillWithTags","fillPrefillWithNote","tag","innerHeight","note","apiFill","staffFill","isQuestionFilled","surveyContainer","getSurveyContainer","welcomeContainer","getWelcomeContainer","content","transform","locals","result","mediaQuery","alreadyImportedModules","addStylesToDom","styles","domStyle","stylesInDom","refs","j","parts","addStyle","listToStyles","newStyles","base","part","media","sourceMap","insertStyleElement","getElement","insertInto","Error","lastStyleElementInsertedAtTop","stylesInsertedAtTop","insertAt","nextSibling","insertBefore","removeStyleElement","idx","createStyleElement","attrs","addAttrs","createLinkElement","link","rel","obj","update","singleton","styleIndex","singletonCounter","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","btoa","autoFixUrls","convertToAbsoluteUrls","fixUrls","unescape","encodeURIComponent","blob","oldSrc","newObj","replaceText","cssNode","childNodes","isOldIE","memo","all","atob","DEBUG","newList","mayRemove","textStore","replacement","Boolean","baseUrl","protocol","host","currentDir","pathname","fullMatch","origUrl","newUrl","unquotedOrigUrl","$1","conditionalText","conditionalText_1","setName","leadingDisplayTexts","filterByQuestion","groupTitle","__assign","assign","Theme_1","Slider_1","trackSelects","trackRadios","currentQuestionListeners","qIndex","qResponse","time","theme","Theme","getQindex","$popupContainer","$popupContainer2","$startBtn","onSurveyClickEvent","showLoader","nextQue","nextQuestion","prevQue","prevQuestion","closeSurvey","onSurveyCloseEvent","bodyElement","minSurvey","minimizeSurvey","resumeText","resumeButtonText","updateProgress","currentQuestionId","width","loadQuestionSpecifics","leftIcon","onSurveyQuestionEvent","span","validationSpan","validationRegex","regex","submitQuestion","nextQ","rightIcon","nextIcon","$loader","html","appendInQuestionsContainer","startContainer","showLanguageSelector","qType","setupListenersQuestionScale","setupListenersQuestionNPS","setupListenersQuestionMultiline","setupListenersQuestionSelect","setupListenersQuestionRadio","setupListenersQuestionRadioImage","setupListenersQuestionCheckbox","setupListenersQuestionStar","setupListenersQuestionSmile","setupListenersQuestionCsat","setupListenersQuestionSlider","setupListenersQuestionSingleline","setupListenersQuestionNumber","setupListenersForDate","selectedRating","selectedRating1","previousValue","previousSelection","allOptions","rating","previousValues","previousValues_1","checked","child","previousSibling","multilineRes","singlelineRes","model","dateQuestion","children","month","year","numberRes","sliderRes","sliderInput","Slider","brandColorDark","brandColorWhite","inputRange","rangeTip","speed","clearTo","updateRangeTip","display","clearTimeout","timeout","animateHandler","currValue","maxValue","requestAnimationFrame","successHandler","undefined","sitePageViewCount","individualPageViewCount","click","onscroll","doc","documentElement","top","pageXOffset","scrollLeft","clientLeft","pageYOffset","scrollTop","clientTop","ccsdkTopOffset","processScrollTriggers","onclick","triggerInstances","triggerInterval","processIntervalTriggers","processConditionalTriggers","scrollNow","disableTriggers","TriggerUtils_1","pageCountTrigger","siteCountTrigger","pageTimeTrigger","siteTimeTrigger","urlParamTrigger","notUrlParamTrigger","utmParamTrigger","scrollPixelsTrigger","pageCountTriggerEnabled","siteCountTriggerEnabled","pageTimeTriggerEnabled","siteTimeTriggerEnabled","urlParamTriggerEnabled","notUrlParamTriggerEnabled","utmParamTriggerEnabled","scrollPixelsTriggerEnabled","conditionalTriggers","minPageCount","TriggerPopUpByPageCount","minSiteCount","minPageTime","TriggerPopUpByTimeSpentOnPage","minSiteTime","TriggerPopUpByTimeSpentOnSite","urlPattern","inUrl","TriggerPopUpByURLPattern","notinUrl","TriggerPopUpByNotURLPattern","utm","TriggerPopUpByUTMParameter","minScrollPixels","grepURL","onExitDetect","waitSeconds","scrollPercent","grepInvertURL","isEnabled","conditionalTrigger","pageStartTime","pageTime","TriggerUtils","checkTimeCondition","checkScroll","checkInUrl","processNonConditionalTriggers","TriggerPopUpByScrollPixels","pageCount","NaN","checkPageCount","siteStartTime","siteTime","TriggerPopUpByInactivity","utmP","utmVal","resetTriggers","payload","successCb","errorCb","searchParams","idsite","rec","action_name","action_url","uid","_cvar","1","new_visit","e_c","e_a","e_n","rand","ceil","param"],"mappings":"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","file":"cc.en.bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 11);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar templates_1 = __webpack_require__(7);\r\nvar DomUtilities = /** @class */ (function () {\r\n    function DomUtilities() {\r\n        // HTMLElement.prototype.matches = HTMLElement.prototype.matches ||\r\n        // HTMLElement.prototype.matchesSelector ||\r\n        // HTMLElement.prototype.webkitMatchesSelector ||\r\n        // HTMLElement.prototype.mozMatchesSelector ||\r\n        // HTMLElement.prototype.msMatchesSelector ||\r\n        // HTMLElement.prototype.oMatchesSelector;\r\n    }\r\n    DomUtilities.prototype.get = function (selector) {\r\n        return document.querySelectorAll(selector);\r\n    };\r\n    DomUtilities.prototype.appendStyle = function (css) {\r\n        var head = document.head || document.getElementsByTagName('head')[0];\r\n        var style = document.createElement('style');\r\n        style.type = 'text/css';\r\n        if (style.styleSheet) {\r\n            style.styleSheet.cssText = css;\r\n        }\r\n        else {\r\n            style.appendChild(document.createTextNode(css));\r\n        }\r\n        head.appendChild(style);\r\n    };\r\n    DomUtilities.prototype.remove = function (el) {\r\n        el.parentNode.removeChild(el);\r\n    };\r\n    DomUtilities.prototype.removeAll = function (elements) {\r\n        Array.prototype.forEach.call(elements, function (el, i) {\r\n            el.parentNode.removeChild(el);\r\n        });\r\n    };\r\n    DomUtilities.prototype.css = function (elements, property, value) {\r\n        Array.prototype.forEach.call(elements, function (el, i) {\r\n            el.style[property] = value;\r\n        });\r\n    };\r\n    DomUtilities.prototype.removeClassAll = function (elements, className) {\r\n        var _this = this;\r\n        Array.prototype.forEach.call(elements, function (el, i) {\r\n            _this.removeClass(el, className);\r\n        });\r\n    };\r\n    DomUtilities.prototype.addClassAll = function (elements, className) {\r\n        var _this = this;\r\n        Array.prototype.forEach.call(elements, function (el, i) {\r\n            _this.addClass(el, className);\r\n        });\r\n    };\r\n    DomUtilities.prototype.removeClass = function (el, className) {\r\n        // console.log(el);\r\n        if (!el) {\r\n            return;\r\n        }\r\n        if (el.classList)\r\n            el.classList.remove(className);\r\n        else\r\n            el.className = el.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\r\n    };\r\n    DomUtilities.prototype.addClass = function (el, className) {\r\n        if (!el) {\r\n            return;\r\n        }\r\n        if (el.classList)\r\n            el.classList.add(className);\r\n        else\r\n            el.className += ' ' + className;\r\n    };\r\n    DomUtilities.prototype.toggleClass = function (el, className) {\r\n        if (el.classList) {\r\n            if (el.classList.contains(className))\r\n                el.classList.remove(className);\r\n            else\r\n                el.classList.add(className);\r\n        }\r\n    };\r\n    DomUtilities.prototype.hasClass = function (el, className) {\r\n        if (el.classList)\r\n            return el.classList.contains(className);\r\n        else\r\n            return new RegExp('(^| )' + className + '( |$)', 'gi').test(el.className);\r\n    };\r\n    DomUtilities.prototype.ready = function (fn) {\r\n        if (document.attachEvent ? document.readyState === \"complete\" : document.readyState !== \"loading\") {\r\n            fn();\r\n        }\r\n        else {\r\n            document.addEventListener('DOMContentLoaded', fn);\r\n        }\r\n    };\r\n    DomUtilities.prototype.getParents = function (el, parentSelector) {\r\n        // If no parentSelector defined will bubble up all the way to *document*\r\n        if (parentSelector === undefined) {\r\n            parentSelector = document;\r\n        }\r\n        var parents = [];\r\n        var p = el.parentNode;\r\n        while (p !== parentSelector) {\r\n            var o = p;\r\n            parents.push(o);\r\n            p = o.parentNode;\r\n        }\r\n        parents.push(parentSelector); // Push that parentSelector you wanted to stop at\r\n        return parents;\r\n    };\r\n    DomUtilities.prototype.listener = function (el, evt, sel, handler) {\r\n        var selectorMatches = function (el, selector) {\r\n            var p = Element.prototype;\r\n            var f = p.matches || p.webkitMatchesSelector || p.mozMatchesSelector || p.msMatchesSelector || function (s) {\r\n                return [].indexOf.call(document.querySelectorAll(s), this) !== -1;\r\n            };\r\n            return f.call(el, selector);\r\n        };\r\n        var internalHandler = function (event) {\r\n            var t = event.target;\r\n            while (t && t !== this) {\r\n                if (selectorMatches(t, sel)) {\r\n                    handler.call(t, event);\r\n                }\r\n                t = t.parentNode;\r\n            }\r\n        };\r\n        el.addEventListener(evt, internalHandler);\r\n        return internalHandler;\r\n    };\r\n    DomUtilities.prototype.initListener = function (type, id, cb) {\r\n        var ref = {\r\n            id: id,\r\n            type: type,\r\n            cb: cb,\r\n            internalHandler: undefined,\r\n        };\r\n        return ref;\r\n    };\r\n    DomUtilities.prototype.checkIfListenerExists = function (id, ar) {\r\n        for (var _i = 0, ar_1 = ar; _i < ar_1.length; _i++) {\r\n            var listener = ar_1[_i];\r\n            if (listener.id == id) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    DomUtilities.prototype.on = function (evt, el, handler) {\r\n        el.addEventListener(evt, handler);\r\n    };\r\n    DomUtilities.prototype.off = function (evt, el, handler) {\r\n        el.removeEventListener(evt, handler);\r\n    };\r\n    DomUtilities.prototype.removeListener = function (el, evt, handler) {\r\n        el.removeEventListener(evt, handler);\r\n    };\r\n    DomUtilities.prototype.removeAllListeners = function (ar) {\r\n        for (var _i = 0, ar_2 = ar; _i < ar_2.length; _i++) {\r\n            var listener = ar_2[_i];\r\n            this.removeListener(document.querySelectorAll(\"body\")[0], listener.type, listener.internalHandler);\r\n        }\r\n        return true;\r\n    };\r\n    DomUtilities.prototype.trigger = function (el, eventName, data) {\r\n        if (typeof CustomEvent === 'function') {\r\n            var event = new CustomEvent(eventName, { detail: data });\r\n        }\r\n        else {\r\n            var event = document.createEvent('CustomEvent');\r\n            event.initCustomEvent(eventName, true, true, data);\r\n        }\r\n        el.dispatchEvent(event);\r\n    };\r\n    DomUtilities.prototype.removeTrigger = function (el, eventName) {\r\n        el.removeEventListener(eventName);\r\n    };\r\n    DomUtilities.prototype.shadeBlendConvert = function (p, from, to) {\r\n        if (typeof (p) != \"number\" || p < -1 || p > 1 || typeof (from) != \"string\" || (from[0] != 'r' && from[0] != '#') || (typeof (to) != \"string\" && typeof (to) != \"undefined\"))\r\n            return null; //ErrorCheck\r\n        if (!this.sbcRip)\r\n            this.sbcRip = function (d) {\r\n                var l = d.length, RGB = new Object();\r\n                if (l > 9) {\r\n                    d = d.split(\",\");\r\n                    if (d.length < 3 || d.length > 4)\r\n                        return null; //ErrorCheck\r\n                    RGB[0] = i(d[0].slice(4)), RGB[1] = i(d[1]), RGB[2] = i(d[2]), RGB[3] = d[3] ? parseFloat(d[3]) : -1;\r\n                }\r\n                else {\r\n                    if (l == 8 || l == 6 || l < 4)\r\n                        return null; //ErrorCheck\r\n                    if (l < 6)\r\n                        d = \"#\" + d[1] + d[1] + d[2] + d[2] + d[3] + d[3] + (l > 4 ? d[4] + \"\" + d[4] : \"\"); //3 digit\r\n                    d = i(d.slice(1), 16), RGB[0] = d >> 16 & 255, RGB[1] = d >> 8 & 255, RGB[2] = d & 255, RGB[3] = l == 9 || l == 5 ? r(((d >> 24 & 255) / 255) * 10000) / 10000 : -1;\r\n                }\r\n                return RGB;\r\n            };\r\n        var i = parseInt, r = Math.round, h = from.length > 9, h = typeof (to) == \"string\" ? to.length > 9 ? true : to == \"c\" ? !h : false : h, b = p < 0, p = b ? p * -1 : p, to = to && to != \"c\" ? to : b ? \"#000000\" : \"#FFFFFF\", f = this.sbcRip(from), t = this.sbcRip(to);\r\n        if (!f || !t)\r\n            return null; //ErrorCheck\r\n        if (h)\r\n            return \"rgb(\" + r((t[0] - f[0]) * p + f[0]) + \",\" + r((t[1] - f[1]) * p + f[1]) + \",\" + r((t[2] - f[2]) * p + f[2]) + (f[3] < 0 && t[3] < 0 ? \")\" : \",\" + (f[3] > -1 && t[3] > -1 ? r(((t[3] - f[3]) * p + f[3]) * 10000) / 10000 : t[3] < 0 ? f[3] : t[3]) + \")\");\r\n        else\r\n            return \"#\" + (0x100000000 + (f[3] > -1 && t[3] > -1 ? r(((t[3] - f[3]) * p + f[3]) * 255) : t[3] > -1 ? r(t[3] * 255) : f[3] > -1 ? r(f[3] * 255) : 255) * 0x1000000 + r((t[0] - f[0]) * p + f[0]) * 0x10000 + r((t[1] - f[1]) * p + f[1]) * 0x100 + r((t[2] - f[2]) * p + f[2])).toString(16).slice(f[3] > -1 || t[3] > -1 ? 1 : 3);\r\n    };\r\n    DomUtilities.prototype.hexToRGB = function (hex, alpha) {\r\n        if (!hex || [4, 7].indexOf(hex.length) === -1) {\r\n            return; // throw new Error('Bad Hex');\r\n        }\r\n        hex = hex.substr(1);\r\n        // if shortcuts (#F00) -> set to normal (#FF0000)\r\n        if (hex.length === 3) {\r\n            hex = hex.split('').map(function (el) {\r\n                return el + el + '';\r\n            }).join('');\r\n        }\r\n        var r = parseInt(hex.slice(0, 2), 16), g = parseInt(hex.slice(2, 4), 16), b = parseInt(hex.slice(4, 6), 16);\r\n        if (alpha) {\r\n            return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha + \")\";\r\n        }\r\n        else {\r\n            return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\r\n        }\r\n    };\r\n    DomUtilities.prototype.arrayContains = function (needle) {\r\n        // Per spec, the way to identify NaN is that it is not equal to itself\r\n        var findNaN = needle !== needle;\r\n        var indexOf;\r\n        if (!findNaN && typeof Array.prototype.indexOf === 'function') {\r\n            indexOf = Array.prototype.indexOf;\r\n        }\r\n        else {\r\n            indexOf = function (needle) {\r\n                var i = -1, index = -1;\r\n                for (i = 0; i < this.length; i++) {\r\n                    var item = this[i];\r\n                    if ((findNaN && item !== item) || item === needle) {\r\n                        index = i;\r\n                        break;\r\n                    }\r\n                }\r\n                return index;\r\n            };\r\n        }\r\n        return indexOf.call(this, needle) > -1;\r\n    };\r\n    DomUtilities.prototype.generateSelectOptions = function (arr, translatedArr) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var translatedOpt = (translatedArr[i] || arr[i]).split(';');\r\n                var arrOpt = arr[i].split(';');\r\n                res += '<option value=\"' + arrOpt[0] + '\">' + (translatedOpt[0]) + '</option>';\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateLanguageSelectOptions = function (arr) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                if (arr[i] == 'default') {\r\n                    res += '<option value=\"' + arr[i] + '\">English (Default)</option>';\r\n                }\r\n                else {\r\n                    res += '<option value=\"' + arr[i] + '\">' + arr[i] + '</option>';\r\n                }\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.checkOptionContainsImage = function (arr) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = true;\r\n            for (i = 0; i < arr.length; i++) {\r\n                var opt = arr[i];\r\n                res = res && (opt.indexOf(';') !== -1) && (opt.indexOf('.') !== -1);\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateRadioImageOptions = function (arr, translatedArr, id) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var optHtml = templates_1.templates.option_radio_image;\r\n                var opt = arr[i].split(';');\r\n                var translatedOpt = translatedArr[i].split(';');\r\n                //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n                //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n                optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[1]);\r\n                optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\r\n                optHtml = optHtml.replace(/{{label}}/g, translatedOpt[0]);\r\n                optHtml = optHtml.replace(/{{labelFor}}/g, translatedOpt[0].replace(/\\s+/g, '-'));\r\n                optHtml = optHtml.replace(/{{value}}/g, opt[0]);\r\n                res += optHtml;\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateRadioIgnoreImageOptions = function (arr, translatedArr, id) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var optHtml = templates_1.templates.option_radio;\r\n                var opt = arr[i].split(';');\r\n                var translatedOpt = translatedArr[i].split(';');\r\n                //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n                //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n                optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\r\n                optHtml = optHtml.replace(/{{label}}/g, translatedOpt[0]);\r\n                optHtml = optHtml.replace(/{{labelFor}}/g, translatedOpt[0].replace(/\\s+/g, '-'));\r\n                optHtml = optHtml.replace(/{{value}}/g, opt[0]);\r\n                res += optHtml;\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateRadioOptions = function (arr, translatedArr, id) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var optHtml = templates_1.templates.option_radio;\r\n                var opt = arr[i].split(';');\r\n                var translatedOpt = translatedArr[i].split(';');\r\n                optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\r\n                optHtml = optHtml.replace(/{{label}}/g, translatedOpt[0]);\r\n                optHtml = optHtml.replace(/{{labelFor}}/g, translatedOpt[0].replace(/\\s+/g, '-'));\r\n                optHtml = optHtml.replace(/{{value}}/g, opt[0]);\r\n                res += optHtml;\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateCheckboxImageOptions = function (arr, translatedArr, id) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var optHtml = templates_1.templates.option_checkbox_image;\r\n                var opt = arr[i].split(';');\r\n                var translatedOpt = translatedArr[i].split(';');\r\n                //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n                //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n                optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[1]);\r\n                optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\r\n                optHtml = optHtml.replace(/{{label}}/g, translatedOpt[0]);\r\n                optHtml = optHtml.replace(/{{labelFor}}/g, translatedOpt[0].replace(/\\s+/g, '-'));\r\n                optHtml = optHtml.replace(/{{value}}/g, opt[0]);\r\n                res += optHtml;\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateCheckboxIgnoreImageOptions = function (arr, translatedArr, id) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var optHtml = templates_1.templates.option_checkbox;\r\n                var opt = arr[i].split(';');\r\n                var translatedOpt = translatedArr[i].split(';');\r\n                //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n                //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n                optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\r\n                optHtml = optHtml.replace(/{{label}}/g, translatedOpt[0]);\r\n                optHtml = optHtml.replace(/{{labelFor}}/g, translatedOpt[0].replace(/\\s+/g, '-'));\r\n                optHtml = optHtml.replace(/{{value}}/g, opt[0]);\r\n                res += optHtml;\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateCheckboxOptions = function (arr, translatedArr, id) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var optHtml = templates_1.templates.option_checkbox;\r\n                var opt = arr[i].split(';');\r\n                var translatedOpt = translatedArr[i].split(';');\r\n                optHtml = optHtml.replace(/{{label}}/g, translatedOpt[0]);\r\n                optHtml = optHtml.replace(/{{labelFor}}/g, translatedOpt[0].replace(/\\s+/g, '-'));\r\n                optHtml = optHtml.replace(/{{value}}/g, opt[0]);\r\n                res += optHtml;\r\n            }\r\n            // console.log( res );\r\n            return res;\r\n        }\r\n    };\r\n    return DomUtilities;\r\n}());\r\nexports.DomUtilities = DomUtilities;\r\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Constants = /** @class */ (function () {\r\n    function Constants() {\r\n    }\r\n    Constants.CCTriggerPageStartTime = \"cc-trigger-page-start-time\";\r\n    Constants.CCTriggerPageElapsedTime = \"cc-trigger-page-elapsed-time\";\r\n    Constants.CCTriggerSiteStartTime = \"cc-trigger-site-start-time\";\r\n    Constants.CCTriggerSiteElapsedTime = \"cc-trigger-site-elapsed-time\";\r\n    Constants.CCTriggerSitePageViewCount = \"cc-trigger-site-page-count\";\r\n    Constants.CCTriggerIndividualPageViewCount = \"cc-trigger-individual-page-count\";\r\n    Constants.SURVEY_IMPRESSION_EVENT = \"onImpression\";\r\n    Constants.SURVEY_START_EVENT = \"onStart\";\r\n    Constants.SURVEY_DATA_EVENT = \"onData\";\r\n    Constants.SURVEY_END_EVENT = \"onEnd\";\r\n    Constants.SURVEY_CLOSE_EVENT = \"onClose\";\r\n    Constants.SURVEY_QUESTION_EVENT = \"onQuestion\";\r\n    Constants.SURVEY_ANSWER_EVENT = \"onAnswer\";\r\n    Constants.SURVEY_CLICK_EVENT = \"onClick\";\r\n    Constants.GRANT_TYPE = \"password\";\r\n    Constants.AUTHORIZATION = \"Authorization\";\r\n    Constants.AUTHORIZATION_BEARER = \"Bearer\";\r\n    Constants.SURVEY_CLIENT = \"JS-MicroWeb\";\r\n    return Constants;\r\n}());\r\nexports.Constants = Constants;\r\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Cookie = /** @class */ (function () {\r\n    function Cookie() {\r\n    }\r\n    /**\r\n     * Set/Overwrite a cookie value\r\n     *\r\n     * @param name\r\n     * @param value\r\n     * @param days      OPTIONAL Days till this cookie will stay valid. Default is current session\r\n     * @param path      OPTIONAL domain root will be used by default\r\n     */\r\n    Cookie.set = function (name, value, days, path) {\r\n        if (days) {\r\n            var date = new Date();\r\n            date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));\r\n            var expires = \"; expires=\" + date.toUTCString();\r\n        }\r\n        else\r\n            var expires = \"\";\r\n        var dir = path || '/';\r\n        document.cookie = name + \"=\" + value + expires + \"; path=\" + dir;\r\n    };\r\n    /**\r\n     * Retrieve a cookie value\r\n     *\r\n     * @param name\r\n     * @return String|null\r\n     */\r\n    Cookie.get = function (name) {\r\n        var nameEQ = name + \"=\";\r\n        var ca = document.cookie.split(';');\r\n        for (var i = 0; i < ca.length; i++) {\r\n            var c = ca[i];\r\n            while (c.charAt(0) == ' ')\r\n                c = c.substring(1, c.length);\r\n            if (c.indexOf(nameEQ) == 0)\r\n                return c.substring(nameEQ.length, c.length);\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Remove a cookie\r\n     *\r\n     * @param name\r\n     */\r\n    Cookie.delete = function (name) {\r\n        Cookie.set(name, \"\", -1, undefined);\r\n    };\r\n    Cookie.getParameterByName = function (name, url) {\r\n        if (!url)\r\n            url = window.location.href;\r\n        name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\r\n        var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"), results = regex.exec(url);\r\n        if (!results)\r\n            return null;\r\n        if (!results[2])\r\n            return '';\r\n        return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\r\n    };\r\n    return Cookie;\r\n}());\r\nexports.Cookie = Cookie;\r\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n//Survey Manager manages and queues survey.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar SurveyManager = /** @class */ (function () {\r\n    function SurveyManager() {\r\n    }\r\n    SurveyManager.initializeSurvey = function (surveyId) {\r\n        //check if survey ran?\r\n        //do survey initialization.\r\n        if (!SurveyManager.surveyInstances || !SurveyManager.surveyInstances[surveyId]) {\r\n            console.error('Microsurvey not properly set up. Contact Support.');\r\n            return;\r\n        }\r\n        SurveyManager.surveyInstances[surveyId].setupSurvey();\r\n    };\r\n    SurveyManager.addSurvey = function (surveyId) {\r\n        window.ccsdkDebug ? console.log(\"Adding survey ID : \" + surveyId) : '';\r\n        SurveyManager.surveyQueue.push(surveyId);\r\n        if (SurveyManager.processQueueInterval == null) {\r\n            SurveyManager.processQueueInterval = setInterval(SurveyManager.processQueueIntervalCB, 100);\r\n        }\r\n    };\r\n    SurveyManager.removeSurvey = function (surveyId) {\r\n        if (SurveyManager.surveyQueue.length > 0) {\r\n            for (var survey in SurveyManager.surveyQueue) {\r\n                if (SurveyManager.surveyQueue[survey].surveyId == surveyId) {\r\n                    SurveyManager.surveyQueue.splice(survey, 1);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (SurveyManager.surveyQueue.length == 0) {\r\n            clearInterval(SurveyManager.processQueueInterval);\r\n        }\r\n    };\r\n    SurveyManager.processQueueIntervalCB = function () {\r\n        if (window.globalSurveyRunning == true) {\r\n            return;\r\n        }\r\n        else {\r\n            var surveyId = SurveyManager.surveyQueue.pop();\r\n            window.ccsdkDebug ? console.log(\"Processing survey ID \" + surveyId) : '';\r\n            if (surveyId == undefined) {\r\n                clearInterval(SurveyManager.processQueueInterval);\r\n                SurveyManager.processQueueInterval = null;\r\n            }\r\n            else {\r\n                window.globalSurveyRunning = true;\r\n                SurveyManager.initializeSurvey(surveyId);\r\n            }\r\n        }\r\n    };\r\n    SurveyManager.setSurveyRunning = function () {\r\n        window.globalSurveyRunning = true;\r\n        window.globalSurveyStartTime = new Date();\r\n    };\r\n    SurveyManager.unsetSurveyRunning = function () {\r\n        window.globalSurveyRunning = false;\r\n    };\r\n    SurveyManager.surveyQueue = [];\r\n    SurveyManager.processQueueInterval = null;\r\n    SurveyManager.surveyInstances = {};\r\n    return SurveyManager;\r\n}());\r\nexports.SurveyManager = SurveyManager;\r\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n// import 'whatwg-fetch';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction makeRequest(method, url, postParams, headers, successcb, errorcb) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(method, url);\r\n    xhr.onload = function () {\r\n        if (this.status >= 200 && this.status < 300) {\r\n            if (xhr.response) {\r\n            }\r\n            var res = xhr.response && typeof xhr.response === 'string' && !xhr.response.match('GIF') ? JSON.parse(xhr.response) : '';\r\n            if (successcb)\r\n                successcb(res);\r\n        }\r\n        else {\r\n            if (errorcb) {\r\n                errorcb({\r\n                    status: this.status,\r\n                    statusText: xhr.statusText\r\n                });\r\n            }\r\n        }\r\n    };\r\n    xhr.onerror = function () {\r\n        if (errorcb) {\r\n            errorcb({\r\n                status: this.status,\r\n                statusText: xhr.statusText\r\n            });\r\n        }\r\n    };\r\n    if (headers) {\r\n        Object.keys(headers).forEach(function (key) {\r\n            xhr.setRequestHeader(key, headers[key]);\r\n        });\r\n    }\r\n    // var params : any = postParams;\r\n    // We'll need to stringify if we've been given an object\r\n    // If we have a string, this is skipped.\r\n    // if (params && typeof params === 'object') {\r\n    //   params = Object.keys(params).map(function (key) {\r\n    //     return encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\r\n    //   }).join('&');\r\n    // }\r\n    xhr.send(postParams);\r\n}\r\nvar RequestHelper = /** @class */ (function () {\r\n    function RequestHelper() {\r\n    }\r\n    RequestHelper.getWithHeaders = function (url, headers, successcb, errorcb) {\r\n        return makeRequest(\"GET\", url, null, headers, successcb, errorcb);\r\n    };\r\n    RequestHelper.postWithHeaders = function (url, data, headers, successcb, errorcb) {\r\n        headers[\"Content-Type\"] = \"application/json;charset=utf-8\";\r\n        return makeRequest(\"POST\", url, JSON.stringify(data), headers, successcb, errorcb);\r\n    };\r\n    RequestHelper.get = function (url, successcb, errorcb) {\r\n        return makeRequest(\"GET\", url, null, null, successcb, errorcb);\r\n        // let request : Request = new Request( (url as any) , new Object());\r\n        // return fetch(request).then( (response : Response) => {\r\n        //   if (response.status >= 200 && response.status < 300) {\r\n        //     return Promise.resolve(response);\r\n        //   } else {\r\n        //     var error = new Error(response.statusText);\r\n        //     // error.response = response;\r\n        //     throw error;\r\n        //   }\r\n        // }).then( (response : Response) => {\r\n        //   return response.json();\r\n        // }).catch( (error : Error) => {\r\n        //   (window as any).ccsdkDebug?console.log('Request failed ', error):'';\r\n        // });\r\n    };\r\n    /**\r\n     *\r\n     * var data = new FormData()\r\n     *  data.append('file', input.files[0])\r\n     *  data.append('user', 'hubot')\r\n     *\r\n     * @static\r\n     * @param {any} url\r\n     * @param {any} data\r\n     * @memberof Request\r\n     */\r\n    RequestHelper.post = function (url, data, successcb, errorcb) {\r\n        //consider, file upload?\r\n        // (window as any).ccsdkDebug?console.log(\"[\" + JSON.stringify(data) + \"]\"):'';\r\n        window.ccsdkDebug ? console.log(\"Sending : \" + data) : '';\r\n        return makeRequest(\"POST\", url, JSON.stringify(data), {}, successcb, errorcb);\r\n        // let request : Request = new Request( (url as any), {\r\n        //   method : \"POST\",\r\n        //   headers : {\r\n        //     \"Content-Type\" : \"application/json; charset=utf-8\"\r\n        //   },\r\n        //   body : JSON.stringify(data)\r\n        // });\r\n        // return fetch(request).then( (response : Response) => {\r\n        //   if (response.status >= 200 && response.status < 300) {\r\n        //     return Promise.resolve(response);\r\n        //   } else {\r\n        //     let error : Error = new Error(response.statusText);\r\n        //     // error.response = response;\r\n        //     throw error;\r\n        //   }\r\n        // }).then( (response : Response) => {\r\n        //   return response.json();\r\n        // }).catch( (error : Error) => {\r\n        //   (window as any).ccsdkDebug?console.log('Request failed ', error):'';\r\n        // });\r\n    };\r\n    return RequestHelper;\r\n}());\r\nexports.RequestHelper = RequestHelper;\r\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar LanguageTextFilter = /** @class */ (function () {\r\n    function LanguageTextFilter() {\r\n    }\r\n    LanguageTextFilter.translateQuestionText = function (surveyHandler, question) {\r\n        if (surveyHandler.ccsdk.config.language.indexOf('Default') === -1) {\r\n            if (question.translated != null &&\r\n                typeof question.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n                if (question.translated[surveyHandler.ccsdk.config.language].text) {\r\n                    var qText = question.translated[surveyHandler.ccsdk.config.language].text.split(':');\r\n                    if (question.translated[surveyHandler.ccsdk.config.language].text.indexOf(\":\") !== -1) {\r\n                        qText = qText[0] + ': <br><span class=\"text-normal\">' + qText[1] + '</span>';\r\n                    }\r\n                    return qText;\r\n                }\r\n                // else if ( question.translated[ surveyHandler.ccsdk.config.language ].text ) {\r\n                //     return question.translated[ surveyHandler.ccsdk.config.language ].text;\r\n                // }\r\n                // return question.translated[surveyHandler.ccsdk.config.language].text;\r\n            }\r\n        }\r\n        if (question.text) {\r\n            var qText = question.text.split(':');\r\n            if (question.text.indexOf(\":\") !== -1) {\r\n                qText = qText[0] + ': <br><span class=\"text-normal\">' + qText[1] + '</span>';\r\n            }\r\n            return qText;\r\n        }\r\n        else {\r\n            return question.text == null ? '' : question.text;\r\n        }\r\n    };\r\n    LanguageTextFilter.translateMessages = function (surveyHandler, type) {\r\n        if (surveyHandler.surveyData.translated != null && typeof surveyHandler.surveyData.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n            if (surveyHandler.ccsdk.config.language.indexOf('Default') === -1) {\r\n                if (surveyHandler.surveyData.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n                    if (surveyHandler.surveyData.translated[surveyHandler.ccsdk.config.language][type] != null) {\r\n                        return surveyHandler.surveyData.translated[surveyHandler.ccsdk.config.language][type];\r\n                    }\r\n                    else {\r\n                        return surveyHandler.surveyData[type];\r\n                    }\r\n                }\r\n                else {\r\n                    return surveyHandler.surveyData[type];\r\n                }\r\n            }\r\n            else {\r\n                return surveyHandler.surveyData[type];\r\n            }\r\n        }\r\n    };\r\n    LanguageTextFilter.translateDisplayLegend = function (surveyHandler, question) {\r\n        if (surveyHandler.ccsdk.config.language.indexOf('Default') === -1) {\r\n            if (question.translated != null &&\r\n                typeof question.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n                return question.translated[surveyHandler.ccsdk.config.language].displayLegend;\r\n            }\r\n            else {\r\n                return question.displayLegend;\r\n            }\r\n        }\r\n        else {\r\n            return question.displayLegend;\r\n        }\r\n    };\r\n    LanguageTextFilter.translateMultiSelect = function (surveyHandler, question) {\r\n        if (surveyHandler.ccsdk.config.language.indexOf('Default') === -1) {\r\n            if (question.translated != null &&\r\n                typeof question.translated[surveyHandler.ccsdk.config.language] !== 'undefined' &&\r\n                question.translated[surveyHandler.ccsdk.config.language].multiSelect) {\r\n                var translatedOptions_1 = question.translated[surveyHandler.ccsdk.config.language].multiSelect;\r\n                return question.multiSelect.map(function (x, i) {\r\n                    if (translatedOptions_1[i]) {\r\n                        return translatedOptions_1[i];\r\n                    }\r\n                    else {\r\n                        return x;\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                return question.multiSelect;\r\n            }\r\n        }\r\n        else {\r\n            return question.multiSelect;\r\n        }\r\n    };\r\n    LanguageTextFilter.translateMultiSelectOption = function (surveyHandler, question, option) {\r\n        var effectiveMultiselect = this.translateMultiSelect(surveyHandler, question);\r\n        if ((effectiveMultiselect instanceof Array) && effectiveMultiselect.length > 0) {\r\n            for (var i = 0; i < question.multiSelect.length; i++) {\r\n                var opt = question.multiSelect[i].split(';');\r\n                if (opt[0] == option) {\r\n                    return effectiveMultiselect[i].split(';')[0];\r\n                }\r\n                else {\r\n                }\r\n            }\r\n        }\r\n        return option;\r\n    };\r\n    return LanguageTextFilter;\r\n}());\r\nexports.LanguageTextFilter = LanguageTextFilter;\r\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Config = /** @class */ (function () {\r\n    function Config() {\r\n    }\r\n    Config.API_URL = \"https://api.getcloudcherry.com\";\r\n    Config.SURVEY_BY_TOKEN = \"/api/SurveyByToken/{token}/\";\r\n    // static SURVEY_BY_TOKEN : String  = \"/api/SurveyByToken/{token}/{tabletId}\";\r\n    Config.SURVEY_PARTIAL_RESPONSE = \"/api/PartialSurvey/{id}/{complete}/JS-MicroWeb\";\r\n    // static SURVEY_PARTIAL_RESPONSE : String =  \"/api/PartialSurvey/{id}/{complete}/JS-Web/{tabletId}\";\r\n    Config.CDN_URL = \"https://cx.getcloudcherry.com/\";\r\n    Config.CDN_ASSET_URL = \"https://cx.getcloudcherry.com/microsurvey-assets/\";\r\n    Config.POST_LOGIN_TOKEN = \"/api/LoginToken\";\r\n    Config.GET_SURVEY_THROTTLE_LOGIC = \"/api/SurveyThrottleLogic/{location}\";\r\n    Config.POST_THROTTLING = \"/api/Throttling\";\r\n    Config.POST_THROTTLING_ADD_ENTRIES = \"/api/Throttling/AddEntries\";\r\n    Config.POST_SURVEY_FINAL = \"/api/surveybytoken/{tokenId}\";\r\n    Config.GET_CAMPAIGN = \"/api/SurveyToken/Campaign/{token}/\";\r\n    return Config;\r\n}());\r\nexports.Config = Config;\r\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__webpack_require__(16);\r\nvar QuestionSurvey = __webpack_require__(21);\r\nvar QuestionStart = __webpack_require__(22);\r\nvar QuestionSingleline = __webpack_require__(23);\r\nvar QuestionNumber = __webpack_require__(24);\r\nvar QuestionMultiline = __webpack_require__(25);\r\nvar QuestionCheckbox = __webpack_require__(26);\r\nvar QuestionRadio = __webpack_require__(27);\r\nvar QuestionRadioImage = __webpack_require__(28);\r\nvar QuestionScale = __webpack_require__(29);\r\nvar QuestionCSATAgreement5 = __webpack_require__(30);\r\nvar QuestionCSATSatisfaction5 = __webpack_require__(31);\r\nvar QuestionNPS = __webpack_require__(32);\r\nvar QuestionSelect = __webpack_require__(33);\r\nvar QuestionMultiSelect = __webpack_require__(34);\r\nvar QuestionSmile = __webpack_require__(35);\r\nvar QuestionSmileInverted = __webpack_require__(36);\r\nvar QuestionStar = __webpack_require__(37);\r\nvar QuestionSlider = __webpack_require__(38);\r\nvar OptionRadioImage = __webpack_require__(39);\r\nvar OptionRadio = __webpack_require__(40);\r\nvar OptionCheckbox = __webpack_require__(41);\r\nvar OptionCheckboxImage = __webpack_require__(42);\r\nvar ThankYou = __webpack_require__(43);\r\nvar QuestionDate = __webpack_require__(44);\r\nvar LanguageSelector = __webpack_require__(45);\r\nvar templates = {\r\n    question_survey: QuestionSurvey,\r\n    question_start: QuestionStart,\r\n    question_text: QuestionSingleline,\r\n    question_number: QuestionNumber,\r\n    question_scale: QuestionScale,\r\n    question_csat_agreement_5: QuestionCSATAgreement5,\r\n    question_csat_satisfaction_5: QuestionCSATSatisfaction5,\r\n    question_nps: QuestionNPS,\r\n    question_multi_line_text: QuestionMultiline,\r\n    question_multi_select: QuestionMultiSelect,\r\n    question_radio: QuestionRadio,\r\n    question_radio_image: QuestionRadioImage,\r\n    question_checkbox: QuestionCheckbox,\r\n    question_select: QuestionSelect,\r\n    question_smile_5: QuestionSmile,\r\n    question_date: QuestionDate,\r\n    question_smile_5_inverted: QuestionSmileInverted,\r\n    question_star_5: QuestionStar,\r\n    question_slider: QuestionSlider,\r\n    option_radio_image: OptionRadioImage,\r\n    option_radio: OptionRadio,\r\n    option_checkbox: OptionCheckbox,\r\n    option_checkbox_image: OptionCheckboxImage,\r\n    thankyou: ThankYou,\r\n    language_selector: LanguageSelector\r\n};\r\nexports.templates = templates;\r\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction isAnd(filterQuestion) {\r\n    if (!filterQuestion) {\r\n        return false;\r\n    }\r\n    if (filterQuestion.groupBy == null || filterQuestion.groupBy.toUpperCase() == \"AND\") {\r\n        return true;\r\n    }\r\n}\r\nexports.isAnd = isAnd;\r\nfunction isOr(filterQuestion) {\r\n    if (!filterQuestion) {\r\n        return false;\r\n    }\r\n    if (filterQuestion.groupBy != null && filterQuestion.groupBy.toUpperCase() == \"OR\") {\r\n        return true;\r\n    }\r\n}\r\nexports.isOr = isOr;\r\nfunction isNumberCheck(filterQuestion) {\r\n    if (!filterQuestion) {\r\n        return false;\r\n    }\r\n    if (filterQuestion.answerCheck[0] === \"lt\" || filterQuestion.answerCheck[0] === \"gt\" || filterQuestion.answerCheck[0] === \"eq\") {\r\n        return true;\r\n    }\r\n}\r\nexports.isNumberCheck = isNumberCheck;\r\n/**\r\n  * Contains logic to control conditional flow and whether to show or hide the questions based on the user input\r\n  *\r\n  * @param filterQuestion\r\n  * @return\r\n  */\r\nfunction doesSatisfy(surveyHandler, filterQuestion) {\r\n    var answer = surveyHandler.getAnswerForQuestionId(filterQuestion.questionId);\r\n    if (isNumberCheck(filterQuestion)) {\r\n        if (filterQuestion.answerCheck[0].toLowerCase() == \"lt\") {\r\n            if (answer)\r\n                if (answer.numberInput != null && answer.numberInput < filterQuestion.number) {\r\n                    return true;\r\n                }\r\n        }\r\n        else if (filterQuestion.answerCheck[0].toLowerCase() == (\"gt\")) {\r\n            if (answer)\r\n                if (answer.numberInput != null && answer.numberInput > filterQuestion.number) {\r\n                    return true;\r\n                }\r\n        }\r\n        else if (filterQuestion.answerCheck[0].toLowerCase() == (\"eq\")) {\r\n            if (answer)\r\n                if (answer.numberInput != null && answer.numberInput == filterQuestion.number) {\r\n                    return true;\r\n                }\r\n        }\r\n    }\r\n    else {\r\n        // any text match for text answers\r\n        if (filterQuestion.answerCheck[0] && filterQuestion.answerCheck[0].toLowerCase() === 'any text') {\r\n            if (answer && answer.textInput && answer.textInput !== ' ') {\r\n                return true;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n        var iFoundAll = false;\r\n        var question = surveyHandler.getQuestionById(filterQuestion.questionId);\r\n        var questionAnswerText = answer != null && answer.textInput != null ? answer.textInput : '';\r\n        if (!answer) {\r\n            return false;\r\n        }\r\n        for (var _i = 0, _a = filterQuestion.answerCheck; _i < _a.length; _i++) {\r\n            var aAnswer = _a[_i];\r\n            if (question.displayType === 'MultiSelect') {\r\n                var selectedOptions = answer.textInput.split(',');\r\n                if (selectedOptions.indexOf(aAnswer) !== -1) {\r\n                    iFoundAll = true;\r\n                }\r\n            }\r\n            else if (questionAnswerText === aAnswer) {\r\n                iFoundAll = true;\r\n            }\r\n        }\r\n        return iFoundAll;\r\n    }\r\n    return false;\r\n}\r\nexports.doesSatisfy = doesSatisfy;\r\nfunction questionCompare(a, b) {\r\n    return a.sequence - b.sequence;\r\n}\r\nexports.questionCompare = questionCompare;\r\nfunction checkLanguage(surveyHandler, fOption) {\r\n    if (surveyHandler.ccsdk.config && surveyHandler.ccsdk.config.language) {\r\n        return fOption.language === surveyHandler.ccsdk.config.language;\r\n    }\r\n    return false;\r\n}\r\nexports.checkLanguage = checkLanguage;\r\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar DomUtilities_1 = __webpack_require__(0);\r\nvar LanguageTextFilter_1 = __webpack_require__(5);\r\nvar Select = /** @class */ (function () {\r\n    function Select(qId) {\r\n        this.listeners = [];\r\n        this.qId = qId;\r\n    }\r\n    Select.prototype.init = function (qId) {\r\n        this.util = new DomUtilities_1.DomUtilities();\r\n        this.$body = document.querySelectorAll(\"body\")[0];\r\n        this.$html = document.querySelectorAll(\"html\")[0];\r\n        var select = document.querySelectorAll(\"#\" + qId + \" .cc-select\");\r\n        // var divSelect = document.querySelectorAll(\"div.cc-select\");\r\n        // this.util.removeAll(divSelect);\r\n        var parent = this;\r\n        //Assumption: iterating over array but there will always be one select at a time\r\n        this.type = select[0].getAttribute('data-type');\r\n        Array.prototype.forEach.call(select, function (el, i) {\r\n            var self = el;\r\n            var $selectOptions = document.querySelectorAll(\"#\" + qId + \" .cc-select-options\");\r\n            var classes = self.getAttribute(\"class\"), id = self.getAttribute(\"id\"), name = self.getAttribute(\"name\");\r\n            var template = '<div class=\"' + classes + '\">';\r\n            template += '<span class=\"cc-select-trigger\">' + self.getAttribute(\"placeholder\") + '</span>';\r\n            template += '<div class=\"cc-select-options-container\" cc-scrollbar-container><div class=\"cc-select-options\">';\r\n            var options = self.querySelectorAll(\"option\");\r\n            Array.prototype.forEach.call(options, function (el, i) {\r\n                template += '<span class=\"cc-select-option ' + el.getAttribute(\"class\") + '\" data-value=\"' + el.getAttribute(\"value\") + '\">' + el.innerHTML + '</span>';\r\n            });\r\n            template += '</div></div></div>';\r\n            parent.util.addClass(self, 'hide');\r\n            self.insertAdjacentHTML('afterend', template);\r\n        });\r\n        this.setupListeners();\r\n    };\r\n    Select.prototype.setupListeners = function () {\r\n        var self = this;\r\n        var qId = self.qId;\r\n        var ref2 = this.util.initListener('click', \"#\" + qId + \" .cc-select-option\", function (e) {\r\n            // let ref2 = this.util.initListener(this.$body, \"click\", \"#\"+qId+\" .cc-select-option\", function(e) {\r\n            window.ccsdkDebug ? console.log('click cc-select-option', this) : '';\r\n            var selfOption = this;\r\n            var value = this.getAttribute('data-value');\r\n            //select cc-select-wrapper\r\n            //todo: write a function to directly select parent via selector\r\n            var selectOptions = this.parentNode;\r\n            var select = selectOptions.parentNode.parentNode;\r\n            this.select = select;\r\n            var selectWrapper = select.parentNode;\r\n            window.ccsdkDebug ? console.log(select) : '';\r\n            window.ccsdkDebug ? console.log(selectOptions) : '';\r\n            window.ccsdkDebug ? console.log(selectWrapper) : '';\r\n            var selectionTrigger = select.querySelectorAll('.cc-select-trigger')[0];\r\n            self.util.addClass(this, \"selection\");\r\n            var selectedOptionText = selectionTrigger.textContent;\r\n            var selectedValueText = selectionTrigger.getAttribute('data-selection-value') || '';\r\n            window.ccsdkDebug ? console.log('select type', self.type) : '';\r\n            if (self.type !== 'multiple') {\r\n                window.ccsdkDebug ? console.log('select type', self.type) : '';\r\n                selectedOptionText = selfOption.textContent;\r\n                window.ccsdkDebug ? console.log('selected option', selectedOptionText) : '';\r\n                self.util.removeClassAll(document.querySelectorAll(\".cc-select\"), \"opened\");\r\n                selectionTrigger.setAttribute('data-selection-value', value);\r\n                selectWrapper.querySelectorAll(\"select\")[0].value = value;\r\n                selectionTrigger.textContent = selectedOptionText;\r\n                self.util.removeClassAll(document.querySelectorAll(\"#\" + qId + \" .cc-select-option\"), 'selection');\r\n                self.util.addClass(self, 'selection');\r\n            }\r\n            else {\r\n                window.ccsdkDebug ? console.log(selectedOptionText) : '';\r\n                if (selectedOptionText != 'Select') {\r\n                    selectedOptionText = self.addOrRemoveFromList(selectedOptionText, selfOption.textContent);\r\n                    selectedValueText = self.addOrRemoveFromList(selectedValueText, value);\r\n                }\r\n                else {\r\n                    window.ccsdkDebug ? console.log(selfOption.textContent) : '';\r\n                    selectedOptionText = selfOption.textContent;\r\n                    selectedValueText = value;\r\n                }\r\n                selectWrapper.querySelectorAll(\"select\")[0].value = selectedValueText;\r\n                selectionTrigger.setAttribute('data-selection-value', selectedValueText);\r\n                self.util.removeClassAll(document.querySelectorAll(\"#\" + qId + \" .cc-select-option\"), 'selection');\r\n                self.selectOptions(selectedValueText);\r\n                selectedValueText;\r\n                if (selectedOptionText.length < 1) {\r\n                    selectionTrigger.textContent = 'Select';\r\n                }\r\n                else {\r\n                    selectionTrigger.textContent = selectedOptionText;\r\n                }\r\n                return false;\r\n            }\r\n        });\r\n        this.listeners.push(ref2);\r\n        ref2.internalHandler = this.util.listener(this.$body, ref2.type, ref2.id, ref2.cb);\r\n        var ref = this.util.initListener('click', \"#\" + qId + \" .cc-select-trigger\", function (e) {\r\n            self.$html.addEventListener('click', function (e) {\r\n                if (!self.util.hasClass(e.target, 'cc-select-option')) {\r\n                    self.util.removeClassAll(document.querySelectorAll(\".cc-select\"), \"opened\");\r\n                    self.$html.removeEventListener('click', function () {\r\n                    });\r\n                }\r\n            });\r\n            var ccSelect = this.parentNode;\r\n            window.ccsdkDebug ? console.log('click cc-select-trigger', ccSelect) : '';\r\n            self.util.toggleClass(ccSelect, \"opened\");\r\n            e.stopPropagation();\r\n        });\r\n        this.listeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    Select.prototype.destroyListeners = function () {\r\n        for (var _i = 0, _a = this.listeners; _i < _a.length; _i++) {\r\n            var listener = _a[_i];\r\n            this.util.removeListener(this.$body, listener.type, listener.internalHandler);\r\n        }\r\n        return true;\r\n    };\r\n    Select.prototype.setValue = function (value, question, surveyHandler) {\r\n        var self = this;\r\n        var qId = self.qId;\r\n        var select;\r\n        select = document.querySelectorAll(\"#\" + qId + \" select\")[0];\r\n        select.value = value;\r\n        var selectTrigger = document.querySelectorAll(\"#\" + qId + \" .cc-select-trigger\")[0];\r\n        var selectedValueList = value.split(',');\r\n        var translatedSelection = selectedValueList.map(function (x) { return LanguageTextFilter_1.LanguageTextFilter.translateMultiSelectOption(surveyHandler, question, x); });\r\n        selectTrigger.textContent = translatedSelection.join(',');\r\n        selectTrigger.setAttribute('data-selection-value', value);\r\n    };\r\n    Select.prototype.selectOption = function (el) {\r\n        this.util.addClass(el, 'selection');\r\n    };\r\n    Select.prototype.removeOption = function (el) {\r\n        this.util.removeClass(el, 'selection');\r\n    };\r\n    Select.prototype.selectOptions = function (csv) {\r\n        var self = this;\r\n        if (csv) {\r\n            var allOptions = csv.split(',');\r\n            var _loop_1 = function (option) {\r\n                var domOptions = document.querySelectorAll(\"#\" + self.qId + \" .cc-select-option\");\r\n                Array.prototype.forEach.call(domOptions, function (el, i) {\r\n                    if (el.getAttribute('data-value') == option) {\r\n                        self.selectOption(el);\r\n                    }\r\n                    else {\r\n                    }\r\n                });\r\n            };\r\n            for (var _i = 0, allOptions_1 = allOptions; _i < allOptions_1.length; _i++) {\r\n                var option = allOptions_1[_i];\r\n                _loop_1(option);\r\n            }\r\n        }\r\n    };\r\n    Select.prototype.addOrRemoveFromList = function (listAsString, item) {\r\n        var list = listAsString.split(',');\r\n        var itemIndex = list.indexOf(item);\r\n        if (itemIndex !== -1) {\r\n            list.splice(itemIndex, 1);\r\n        }\r\n        else {\r\n            list.push(item);\r\n        }\r\n        return list.join(',');\r\n    };\r\n    return Select;\r\n}());\r\nexports.Select = Select;\r\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar filter_utils_1 = __webpack_require__(8);\r\nvar ConditionalFlowFilter = /** @class */ (function () {\r\n    function ConditionalFlowFilter() {\r\n    }\r\n    ConditionalFlowFilter.filterQuestion = function (surveyHandler, question) {\r\n        var aAddedCount = 0;\r\n        var aRemovedCount = 0;\r\n        if (surveyHandler.getAnswerForQuestionId(question.id) != null) {\r\n            for (var _i = 0, _a = surveyHandler.getConditionalSurveyQuestions(); _i < _a.length; _i++) {\r\n                var aQuestion = _a[_i];\r\n                // console.log( aQuestion );\r\n                if (aQuestion.conditionalFilter != null) {\r\n                    var iSatisfied = false;\r\n                    var iFailed = false;\r\n                    for (var _b = 0, _c = aQuestion.conditionalFilter.filterquestions; _b < _c.length; _b++) {\r\n                        var aFilterByQuestion = _c[_b];\r\n                        if (filter_utils_1.isAnd(aFilterByQuestion)) {\r\n                            if (filter_utils_1.doesSatisfy(surveyHandler, aFilterByQuestion) && !iFailed) {\r\n                                iSatisfied = true;\r\n                            }\r\n                            else {\r\n                                iFailed = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                        else if (filter_utils_1.isOr(aFilterByQuestion)) {\r\n                            if (filter_utils_1.doesSatisfy(surveyHandler, aFilterByQuestion)) {\r\n                                iSatisfied = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    var surveyQuestions = surveyHandler.getSurveyQuestions();\r\n                    if (iSatisfied && !iFailed) {\r\n                        if (surveyQuestions.indexOf(aQuestion) === -1) {\r\n                            surveyQuestions.push(aQuestion);\r\n                            aAddedCount++;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (surveyQuestions.indexOf(aQuestion) !== -1) {\r\n                            aRemovedCount++;\r\n                            surveyQuestions.splice(surveyQuestions.indexOf(aQuestion), 1);\r\n                            // surveyHandler.removePartial(aQuestion.id);\r\n                            //removing from partial requires not posting partial after each question rather than posting them all at once.\r\n                            surveyHandler.removeAnswer(aQuestion.id);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (aAddedCount > 0 || aRemovedCount > 0) {\r\n            surveyHandler.getSurveyQuestions().sort(filter_utils_1.questionCompare);\r\n            // surveyHandler.sendConditionalFLowQuestionsData(surveyHandler.getSurveyQuestions().size());\r\n            return true;\r\n        }\r\n        else {\r\n            // return false;\r\n        }\r\n        // ( window as any ).ccsdkDebug ? console.log( surveyHandler.getSurveyQuestions() ) : '';\r\n    };\r\n    return ConditionalFlowFilter;\r\n}());\r\nexports.ConditionalFlowFilter = ConditionalFlowFilter;\r\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(12);\nmodule.exports = __webpack_require__(13);\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\n// Production steps of ECMA-262, Edition 6, 22.1.2.1\r\nif (!Array.from) {\r\n    Array.from = (function () {\r\n        var toStr = Object.prototype.toString;\r\n        var isCallable = function (fn) {\r\n            return typeof fn === 'function' || toStr.call(fn) === '[object Function]';\r\n        };\r\n        var toInteger = function (value) {\r\n            var number = Number(value);\r\n            if (isNaN(number)) {\r\n                return 0;\r\n            }\r\n            if (number === 0 || !isFinite(number)) {\r\n                return number;\r\n            }\r\n            return (number > 0 ? 1 : -1) * Math.floor(Math.abs(number));\r\n        };\r\n        var maxSafeInteger = Math.pow(2, 53) - 1;\r\n        var toLength = function (value) {\r\n            var len = toInteger(value);\r\n            return Math.min(Math.max(len, 0), maxSafeInteger);\r\n        };\r\n        // The length property of the from method is 1.\r\n        return function from(arrayLike /*, mapFn, thisArg */) {\r\n            // 1. Let C be the this value.\r\n            var C = this;\r\n            // 2. Let items be ToObject(arrayLike).\r\n            var items = Object(arrayLike);\r\n            // 3. ReturnIfAbrupt(items).\r\n            if (arrayLike == null) {\r\n                throw new TypeError('Array.from requires an array-like object - not null or undefined');\r\n            }\r\n            // 4. If mapfn is undefined, then let mapping be false.\r\n            var mapFn = arguments.length > 1 ? arguments[1] : void undefined;\r\n            var T;\r\n            if (typeof mapFn !== 'undefined') {\r\n                // 5. else\r\n                // 5. a If IsCallable(mapfn) is false, throw a TypeError exception.\r\n                if (!isCallable(mapFn)) {\r\n                    throw new TypeError('Array.from: when provided, the second argument must be a function');\r\n                }\r\n                // 5. b. If thisArg was supplied, let T be thisArg; else let T be undefined.\r\n                if (arguments.length > 2) {\r\n                    T = arguments[2];\r\n                }\r\n            }\r\n            // 10. Let lenValue be Get(items, \"length\").\r\n            // 11. Let len be ToLength(lenValue).\r\n            var len = toLength(items.length);\r\n            // 13. If IsConstructor(C) is true, then\r\n            // 13. a. Let A be the result of calling the [[Construct]] internal method \r\n            // of C with an argument list containing the single item len.\r\n            // 14. a. Else, Let A be ArrayCreate(len).\r\n            var A = isCallable(C) ? Object(new C(len)) : new Array(len);\r\n            // 16. Let k be 0.\r\n            var k = 0;\r\n            // 17. Repeat, while k < len… (also steps a - h)\r\n            var kValue;\r\n            while (k < len) {\r\n                kValue = items[k];\r\n                if (mapFn) {\r\n                    A[k] = typeof T === 'undefined' ? mapFn(kValue, k) : mapFn.call(T, kValue, k);\r\n                }\r\n                else {\r\n                    A[k] = kValue;\r\n                }\r\n                k += 1;\r\n            }\r\n            // 18. Let putStatus be Put(A, \"length\", len, true).\r\n            A.length = len;\r\n            // 20. Return A.\r\n            return A;\r\n        };\r\n    }());\r\n}\r\n// custom event polyfill\r\n(function () {\r\n    if (typeof window.CustomEvent === \"function\")\r\n        return false;\r\n    function CustomEvent(event, params) {\r\n        params = params || {\r\n            bubbles: false,\r\n            cancelable: false,\r\n            detail: undefined\r\n        };\r\n        var evt = document.createEvent('CustomEvent');\r\n        evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\r\n        return evt;\r\n    }\r\n    CustomEvent.prototype = window.Event.prototype;\r\n    window.CustomEvent = CustomEvent;\r\n})();\r\n// includes polyfill\r\nif (!Array.prototype.includes) {\r\n    Object.defineProperty(Array.prototype, 'includes', {\r\n        value: function (searchElement, fromIndex) {\r\n            if (this == null) {\r\n                throw new TypeError('\"this\" is null or not defined');\r\n            }\r\n            // 1. Let O be ? ToObject(this value).\r\n            var o = Object(this);\r\n            // 2. Let len be ? ToLength(? Get(O, \"length\")).\r\n            var len = o.length >>> 0;\r\n            // 3. If len is 0, return false.\r\n            if (len === 0) {\r\n                return false;\r\n            }\r\n            // 4. Let n be ? ToInteger(fromIndex).\r\n            //    (If fromIndex is undefined, this step produces the value 0.)\r\n            var n = fromIndex | 0;\r\n            // 5. If n ≥ 0, then\r\n            //  a. Let k be n.\r\n            // 6. Else n < 0,\r\n            //  a. Let k be len + n.\r\n            //  b. If k < 0, let k be 0.\r\n            var k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);\r\n            function sameValueZero(x, y) {\r\n                return x === y || (typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y));\r\n            }\r\n            // 7. Repeat, while k < len\r\n            while (k < len) {\r\n                // a. Let elementK be the result of ? Get(O, ! ToString(k)).\r\n                // b. If SameValueZero(searchElement, elementK) is true, return true.\r\n                if (sameValueZero(o[k], searchElement)) {\r\n                    return true;\r\n                }\r\n                // c. Increase k by 1. \r\n                k++;\r\n            }\r\n            // 8. Return false\r\n            return false;\r\n        }\r\n    });\r\n}\r\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Cookie_1 = __webpack_require__(2);\r\nvar SurveyManager_1 = __webpack_require__(3);\r\nvar Survey_1 = __webpack_require__(14);\r\n/**\r\n * functions that are exposed to SDK User are written here.\r\n * Entry point for CCSDK.\r\n */\r\n// declare var Sentry: any;\r\nvar localCCSDK = {\r\n    init: init,\r\n    destroy: destroy,\r\n    trigger: trigger,\r\n    hide: hide,\r\n    show: show,\r\n    on: on,\r\n    prefill: prefill,\r\n    prefillByTag: prefillByTag,\r\n    prefillByNote: prefillByNote\r\n};\r\n// let instances : any = {};\r\nwindow.globalSurveyRunning = false;\r\nwindow.ccsdkDebug = false;\r\nwindow.isMobile = window.innerWidth <= 768 ? true : false;\r\nif (typeof window.CCSDK !== 'undefined') {\r\n    var queue = window.CCSDK.q;\r\n    window.CCSDK = function () {\r\n        if (arguments && arguments.length == 0) {\r\n            var time = new Date();\r\n        }\r\n        else {\r\n            window.ccsdkDebug ? console.log(arguments) : '';\r\n            var args = Array.from(arguments);\r\n            //Call this functions as ccsdk('functionName', ['argument1', 'argument2']);\r\n            var functionName = args.splice(0, 1)[0];\r\n            window.ccsdkDebug ? console.log(functionName) : '';\r\n            return localCCSDK[functionName].apply(this, args);\r\n        }\r\n    };\r\n    if (queue) {\r\n        for (var _i = 0, queue_1 = queue; _i < queue_1.length; _i++) {\r\n            var q = queue_1[_i];\r\n            var args = Array.from(q);\r\n            var functionName = args.splice(0, 1)[0];\r\n            localCCSDK[functionName].apply(this, args);\r\n        }\r\n    }\r\n    var eventCCReady = document.createEvent('Event');\r\n    eventCCReady.initEvent('ccready', true, true);\r\n    document.dispatchEvent(eventCCReady);\r\n}\r\nfunction init(surveyToken) {\r\n    //config options can be set in arguments[1]\r\n    //available config options : themeColor\r\n    surveyToken = decodeURIComponent(surveyToken).trim();\r\n    var config = (typeof arguments[1] === 'object') ? arguments[1] : {};\r\n    //create survey instance\r\n    if (typeof Cookie_1.Cookie.get(surveyToken + '-finish') !== 'undefined' && Cookie_1.Cookie.get(surveyToken + '-finish')) {\r\n        return;\r\n    }\r\n    if (typeof Cookie_1.Cookie.get(surveyToken + '-coolDown') !== 'undefined' && Cookie_1.Cookie.get(surveyToken + '-coolDown')) {\r\n        return;\r\n    }\r\n    if (typeof config.isActive !== 'undefined' && config.isActive) {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken] = (SurveyManager_1.SurveyManager.surveyInstances[surveyToken]) ? SurveyManager_1.SurveyManager.surveyInstances[surveyToken] : new Survey_1.Survey(surveyToken, config);\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].tracking.trackEvent('Init MicroSurvey', {\r\n            token: surveyToken,\r\n            data: {\r\n                name: window.isMobile ? 'Mobile Mode' : 'Desktop Mode',\r\n                action: surveyToken\r\n            }\r\n        }, null, null);\r\n        return SurveyManager_1.SurveyManager.surveyInstances[surveyToken];\r\n    }\r\n    else {\r\n        //do nothing\r\n    }\r\n}\r\nexports.init = init;\r\nfunction destroy(surveyToken) {\r\n    //remove from trigger manager, delete instance.\r\n    if (!SurveyManager_1.SurveyManager ||\r\n        !SurveyManager_1.SurveyManager.surveyInstances ||\r\n        !SurveyManager_1.SurveyManager.surveyInstances[surveyToken] ||\r\n        !SurveyManager_1.SurveyManager.surveyInstances[surveyToken].dom) {\r\n        return;\r\n    }\r\n    SurveyManager_1.SurveyManager.surveyInstances[surveyToken].dom.destroyListeners();\r\n    SurveyManager_1.SurveyManager.surveyInstances[surveyToken].destroy();\r\n    delete SurveyManager_1.SurveyManager.surveyInstances[surveyToken];\r\n}\r\nexports.destroy = destroy;\r\n//\r\nfunction trigger(surveyToken, type, target) {\r\n    window.ccsdkDebug ? console.log(SurveyManager_1.SurveyManager.surveyInstances) : '';\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].tracking.trackEvent('Trigger Type', {\r\n            token: surveyToken,\r\n            data: {\r\n                name: type,\r\n                action: surveyToken\r\n            }\r\n        }, null, null);\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].trigger(type, target);\r\n    }\r\n    //tell trigger manager to register trigger.\r\n}\r\nexports.trigger = trigger;\r\nfunction on(surveyToken, type, callback) {\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].tracking.trackEvent('Event Listeners', {\r\n            token: surveyToken,\r\n            data: {\r\n                name: type,\r\n                action: surveyToken\r\n            }\r\n        }, null, null);\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].on(type, callback);\r\n    }\r\n}\r\nexports.on = on;\r\nfunction prefill(surveyToken) {\r\n    var restArgs = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        restArgs[_i - 1] = arguments[_i];\r\n    }\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        var questionId = void 0;\r\n        if (typeof restArgs[0] === 'string') {\r\n            questionId = restArgs[0];\r\n        }\r\n        else {\r\n            questionId = Object.keys(restArgs[0]).length + ' Questions';\r\n        }\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].tracking.trackEvent('Prefill', {\r\n            token: surveyToken,\r\n            data: {\r\n                name: questionId,\r\n                action: surveyToken\r\n            }\r\n        }, null, null);\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].prefill(restArgs, 'DIRECT');\r\n    }\r\n}\r\nexports.prefill = prefill;\r\nfunction prefillByTag(surveyToken) {\r\n    var restArgs = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        restArgs[_i - 1] = arguments[_i];\r\n    }\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        var questionTag = void 0;\r\n        if (typeof restArgs[0] === 'string') {\r\n            questionTag = restArgs[0];\r\n        }\r\n        else {\r\n            questionTag = Object.keys(restArgs[0]).length + ' Questions';\r\n        }\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].tracking.trackEvent('Prefill by tag', {\r\n            token: surveyToken,\r\n            data: {\r\n                name: questionTag,\r\n                action: surveyToken\r\n            }\r\n        }, null, null);\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].prefill(restArgs, 'BY_TAG');\r\n    }\r\n}\r\nexports.prefillByTag = prefillByTag;\r\nfunction prefillByNote(surveyToken) {\r\n    var restArgs = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        restArgs[_i - 1] = arguments[_i];\r\n    }\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        var questionNote = void 0;\r\n        if (typeof restArgs[0] === 'string') {\r\n            questionNote = restArgs[0];\r\n        }\r\n        else {\r\n            questionNote = Object.keys(restArgs[0]).length + ' Questions';\r\n        }\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].tracking.trackEvent('Prefill by Note', {\r\n            token: surveyToken,\r\n            data: {\r\n                name: questionNote,\r\n                action: surveyToken\r\n            }\r\n        }, null, null);\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].prefill(restArgs, 'BY_NOTE');\r\n    }\r\n}\r\nexports.prefillByNote = prefillByNote;\r\nfunction show(surveyToken) {\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].show();\r\n    }\r\n}\r\nexports.show = show;\r\nfunction hide(surveyToken) {\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].dom.destroyListeners();\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].destroy();\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].hide();\r\n    }\r\n}\r\nexports.hide = hide;\r\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar SurveyHandler_1 = __webpack_require__(15);\r\nvar DomSurvey_1 = __webpack_require__(47);\r\nvar DomUtilities_1 = __webpack_require__(0);\r\nvar Constants_1 = __webpack_require__(1);\r\nvar SurveyManager_1 = __webpack_require__(3);\r\nvar TriggerManager_1 = __webpack_require__(50);\r\nvar Triggers_1 = __webpack_require__(51);\r\nvar Request_1 = __webpack_require__(4);\r\nvar Config_1 = __webpack_require__(6);\r\nvar tracking_1 = __webpack_require__(53);\r\nvar Survey = /** @class */ (function () {\r\n    function Survey(surveyToken, config) {\r\n        var _this = this;\r\n        this.requester = new Request_1.RequestHelper();\r\n        this.isThrottled = true;\r\n        this.surveyDone = false;\r\n        this.surveyStatus = '';\r\n        this.surveyToken = surveyToken;\r\n        this.config = config;\r\n        this.surveyRunning = false;\r\n        this.thorttlingLogic = null;\r\n        this.tracking = new tracking_1.MatomoTracker();\r\n        this.tracking.token = surveyToken;\r\n        if (typeof this.config.textDirection === 'undefined') {\r\n            this.config.textDirection = \"ltr\";\r\n        }\r\n        this.triggers = new Triggers_1.Triggers(this);\r\n        TriggerManager_1.TriggerManager.addSurvey(this.surveyToken, this.triggers);\r\n        this.survey = new SurveyHandler_1.SurveyHandler(this);\r\n        this.util = new DomUtilities_1.DomUtilities;\r\n        //set themeColor of survey\r\n        this.config.brandColor = (this.config && this.config.brandColor) ?\r\n            this.config.brandColor : \"#db3c39\";\r\n        //use config variable textDirection and set dir\r\n        this.setHtmlTextDirection();\r\n        this.setDisplayOptions();\r\n        setTimeout(function () {\r\n            _this.util.trigger(document, _this.surveyToken + '-ready', { 'survey': _this });\r\n        }, 100);\r\n        //do login\r\n        this.config.username = \"test\";\r\n        this.config.password = \"test\";\r\n        this.config.location = \"location\";\r\n        this.config.language = \"English (Default)\";\r\n        //check trigger conditions and add itself to \r\n        //based on new config\r\n        //gotta and these.\r\n        this.trigger(\"click\", this.config.cssSelector);\r\n        this.triggers.setConditionalTriggers(this.config);\r\n    }\r\n    Survey.prototype.getSurveyThrottlingLogic = function (cb) {\r\n        var getThrottleUrl = Config_1.Config.API_URL + Config_1.Config.GET_SURVEY_THROTTLE_LOGIC.replace('{location}', this.config.location);\r\n        var headers = {};\r\n        headers[Constants_1.Constants.AUTHORIZATION] = Constants_1.Constants.AUTHORIZATION_BEARER + \" \" + this.loginData.access_token;\r\n        var self = this;\r\n        var successcb = function (data) {\r\n            self.thorttlingLogic = data;\r\n            self.checkThrottling(cb);\r\n        };\r\n        Request_1.RequestHelper.getWithHeaders(getThrottleUrl, headers, successcb, null);\r\n    };\r\n    Survey.prototype.checkThrottling = function (cb) {\r\n        if (this.thorttlingLogic != null) {\r\n            if (this.thorttlingLogic.inputIds == null) {\r\n                this.thorttlingLogic.inputIds = [];\r\n            }\r\n            this.thorttlingLogic.inputIds.push(this.thorttlingLogic[this.thorttlingLogic.uniqueIDQuestionIdOrTag.toLowerCase()]);\r\n            if (this.thorttlingLogic.logics != null && this.thorttlingLogic.logics.length > 0 && this.config != null) {\r\n                this.thorttlingLogic.logics[0].filter.location = [];\r\n                this.thorttlingLogic.logics[0].filter.location.push(this.config.location);\r\n            }\r\n        }\r\n        var self = this;\r\n        var postThrottleUrl = Config_1.Config.API_URL + Config_1.Config.POST_THROTTLING;\r\n        var headers = {};\r\n        headers[Constants_1.Constants.AUTHORIZATION] = Constants_1.Constants.AUTHORIZATION + \" \" + this.loginData.access_token;\r\n        var successcb = function (throttleResponse) {\r\n            if (typeof throttleResponse[0][self.thorttlingLogic.uniqueIDQuestionIdOrTag.toLowerCase()] && throttleResponse[0].value) {\r\n                //get survey data?  \r\n                cb();\r\n            }\r\n        };\r\n        Request_1.RequestHelper.postWithHeaders(postThrottleUrl, this.thorttlingLogic, headers, successcb, null);\r\n    };\r\n    Survey.prototype.addThrottlingEntries = function (isOpen) {\r\n        var _this = this;\r\n        var addThrottleUrl = Config_1.Config.API_URL + Config_1.Config.POST_THROTTLING_ADD_ENTRIES;\r\n        var headers = {};\r\n        this.loginData = { access_token: \"help\" };\r\n        headers[Constants_1.Constants.AUTHORIZATION] = Constants_1.Constants.AUTHORIZATION + \" \" + this.loginData.access_token;\r\n        //fill this from config and data.\r\n        var successcb = function (throttleResponse) {\r\n            _this.debug ? console.log(throttleResponse) : '';\r\n        };\r\n        Request_1.RequestHelper.postWithHeaders(addThrottleUrl, {\r\n            user: \"\",\r\n            mobile: \"\",\r\n            emailId: \"\",\r\n            customId: \"\",\r\n            surveySentDate: \"\",\r\n            surveyOpenDate: \"\",\r\n            channel: \"\",\r\n            isOpened: isOpen\r\n        }, headers, successcb, null);\r\n    };\r\n    Survey.prototype.setupSurvey = function () {\r\n        this.initSurvey();\r\n    };\r\n    Survey.prototype.setHtmlTextDirection = function () {\r\n        var ccSDKElement = document.querySelector('.cc-sdk');\r\n        if (!ccSDKElement) {\r\n            return;\r\n        }\r\n        var ccSDKDir = ccSDKElement.getAttribute('dir');\r\n        var direction = (this.config && this.config.textDirection) ?\r\n            this.config.textDirection : (ccSDKDir ? ccSDKDir : \"ltr\");\r\n        ccSDKElement.setAttribute('dir', direction);\r\n    };\r\n    Survey.prototype.setDisplayOptions = function () {\r\n        this.survey.surveyDisplay.position = this.config && this.config.position ?\r\n            this.config.position : \"bottom right\";\r\n        var welcomePopupAnimation = 'hide-right-left';\r\n        switch (this.survey.surveyDisplay.position) {\r\n            case 'bottom right':\r\n                welcomePopupAnimation = 'hide-right-left';\r\n                break;\r\n            case 'right bottom':\r\n                welcomePopupAnimation = 'hide-right-left';\r\n                break;\r\n            case 'top right':\r\n                welcomePopupAnimation = 'hide-right-left';\r\n                break;\r\n            case 'right top':\r\n                welcomePopupAnimation = 'hide-right-left';\r\n                break;\r\n            case 'bottom left':\r\n                welcomePopupAnimation = 'hide-left-right';\r\n                break;\r\n            case 'left bottom':\r\n                welcomePopupAnimation = 'hide-left-right';\r\n                break;\r\n            case 'top left':\r\n                welcomePopupAnimation = 'hide-left-right';\r\n                break;\r\n            case 'left top':\r\n                welcomePopupAnimation = 'hide-left-right';\r\n                break;\r\n            default:\r\n                welcomePopupAnimation = 'hide-right-left';\r\n                break;\r\n        }\r\n        this.survey.surveyDisplay.welcomePopupAnimation = welcomePopupAnimation;\r\n        this.tracking.trackEvent('Welcome Pop up Position', {\r\n            token: this.tracking.token,\r\n            data: {\r\n                name: this.survey.surveyDisplay.position,\r\n                action: null\r\n            }\r\n        }, null, null);\r\n        this.survey.surveyDisplay.surveyPosition = this.config.position.search(/bottom/gi) == -1 ? \"top\" : \"bottom\";\r\n    };\r\n    Survey.prototype.getSurveyData = function () {\r\n        var self = this;\r\n        var successcb = function (surveyData) {\r\n            self.debug ? console.log(surveyData) : '';\r\n            var event = new CustomEvent(Constants_1.Constants.SURVEY_DATA_EVENT + \"-\" + self.surveyToken, { detail: JSON.parse(JSON.stringify(surveyData)) });\r\n            document.dispatchEvent(event);\r\n            if (!self.config.skipWelcomePage) {\r\n                self.dom.hideLoader();\r\n            }\r\n            self.surveyData = surveyData;\r\n            if (surveyData && surveyData.questions && surveyData.questions[0]) {\r\n                self.tracking.username = surveyData.questions[0].user;\r\n            }\r\n            self.tracking.token = self.surveyToken;\r\n            if (self.surveyData) {\r\n                self.tracking.trackEvent('Login Success', {\r\n                    token: self.tracking.token,\r\n                    data: {\r\n                        name: 'Token',\r\n                        action: self.surveyToken\r\n                    }\r\n                }, console.log, console.error);\r\n                self.tracking.trackEvent('Survey Length', {\r\n                    token: self.tracking.token,\r\n                    data: {\r\n                        name: surveyData.questions.length + \" Questions\",\r\n                        action: (surveyData.preFill ? surveyData.preFill.length : 0) + \" Prefills\"\r\n                    }\r\n                }, null, null);\r\n                self.initSurveyQuestions();\r\n            }\r\n            else {\r\n                self.tracking.trackEvent('Expired Survey', {\r\n                    token: self.tracking.token,\r\n                    data: {\r\n                        name: null,\r\n                        action: null\r\n                    }\r\n                }, null, null);\r\n                self.survey.displayWelcomeQuestion(\"The Survey has been expired\");\r\n            }\r\n        };\r\n        var errorcb = null;\r\n        this.survey.fetchQuestions(successcb, errorcb);\r\n    };\r\n    Survey.prototype.initSurvey = function () {\r\n        //if survey already run don't run?\r\n        //if default trigger initiated and survey already run then don't run.\r\n        var self = this;\r\n        self.surveyRunning = true;\r\n        self.dom = new DomSurvey_1.DomSurvey(this);\r\n        self.dom.setTheme(self.config.brandColor, this.config.keepAlive ? this.config.keepAlive : 0);\r\n        self.config.language = \"default\";\r\n        if (self.surveyToken && decodeURIComponent(self.surveyToken).trim() !== '' && !self.config.skipWelcomePage) {\r\n            self.survey.displayWelcomeQuestion();\r\n        }\r\n        else if (self.config.skipWelcomePage) {\r\n            var onImpressionEvent = new CustomEvent(Constants_1.Constants.SURVEY_IMPRESSION_EVENT + \"-\" + this.surveyToken);\r\n            document.dispatchEvent(onImpressionEvent);\r\n            self.dom.startSurvey();\r\n            self.survey.setCoolDownPeriod(self.config, self.surveyToken);\r\n            this.surveyStartTime = new Date();\r\n            self.survey.acceptAnswers();\r\n        }\r\n        self.dom.setupListeners();\r\n    };\r\n    Survey.prototype.initSurveyQuestions = function () {\r\n        var self = this;\r\n        self.survey.attachSurvey(this.surveyData);\r\n        self.config.language = \"default\";\r\n        this.dom.initSurveyDom();\r\n        var onSurveyStartEvent = new CustomEvent(Constants_1.Constants.SURVEY_START_EVENT + \"-\" + this.surveyToken);\r\n        document.dispatchEvent(onSurveyStartEvent);\r\n    };\r\n    Survey.prototype.on = function (type, callback) {\r\n        document.addEventListener(type + \"-\" + this.surveyToken, function (e) {\r\n            callback(e.detail);\r\n        });\r\n    };\r\n    Survey.prototype.show = function () {\r\n        //do show and hide things.\r\n        SurveyManager_1.SurveyManager.setSurveyRunning();\r\n        //show survey\r\n        this.setupSurvey();\r\n    };\r\n    Survey.prototype.hide = function () {\r\n        SurveyManager_1.SurveyManager.unsetSurveyRunning();\r\n        this.survey.destroy();\r\n        this.tracking.trackEvent('Survey Destroyed', {\r\n            token: this.tracking.token,\r\n            data: {\r\n                name: (new Date() - window.globalSurveyStartTime) + 's',\r\n                action: null\r\n            }\r\n        }, null, null);\r\n    };\r\n    Survey.prototype.destroy = function () {\r\n        //remove all listeners?\r\n        SurveyManager_1.SurveyManager.unsetSurveyRunning();\r\n        this.survey.destroy();\r\n    };\r\n    Survey.prototype.prefill = function (restOfArgs, type) {\r\n        var _a;\r\n        var prefillObject;\r\n        if (typeof restOfArgs[0] !== 'object') {\r\n            prefillObject = (_a = {},\r\n                _a[restOfArgs[0]] = restOfArgs[1],\r\n                _a);\r\n        }\r\n        else {\r\n            prefillObject = restOfArgs[0];\r\n        }\r\n        //save this in this.surveyHandler\r\n        if (type === 'DIRECT') {\r\n            this.survey.fillPrefillDirect(prefillObject);\r\n        }\r\n        else if (type === 'BY_TAG') {\r\n            this.survey.fillPrefill(prefillObject);\r\n        }\r\n        else if (type === 'BY_NOTE') {\r\n            this.survey.fillPrefillByNote(prefillObject);\r\n        }\r\n    };\r\n    Survey.prototype.trigger = function (type, target) {\r\n        var self = this;\r\n        switch (type) {\r\n            case 'click':\r\n                // console.log( 'enable click trigger ##' )\r\n                this.triggers.enableClickTrigger(target, function () {\r\n                    SurveyManager_1.SurveyManager.addSurvey(self.surveyToken);\r\n                });\r\n                break;\r\n            case 'page-count':\r\n                var count = parseInt(target);\r\n                this.triggers.enablePageCountTrigger(count);\r\n                break;\r\n            case 'site-count':\r\n                var count2 = parseInt(target);\r\n                this.triggers.enableSiteCountTrigger(count2);\r\n                break;\r\n            case 'page-time':\r\n                this.triggers.enablePageTimeTrigger(parseInt(target));\r\n                break;\r\n            case 'site-time':\r\n                this.triggers.enableSiteTimeTrigger(parseInt(target));\r\n                break;\r\n            case 'url-match':\r\n                this.triggers.enablePopUpByURLPatternTrigger(target);\r\n                break;\r\n            case 'url-not-match':\r\n                this.triggers.enablePopUpByNotURLPatternTrigger(target);\r\n                break;\r\n            case 'utm-match':\r\n                this.triggers.enablePopUpByUTMPatternTrigger(target);\r\n                break;\r\n            case 'scroll-pixels':\r\n                this.triggers.enableScrollPixelsTrigger(parseInt(target));\r\n                break;\r\n            case 'launch':\r\n                SurveyManager_1.SurveyManager.addSurvey(self.surveyToken);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n    return Survey;\r\n}());\r\nexports.Survey = Survey;\r\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// import 'whatwg-fetch';\r\nvar Config_1 = __webpack_require__(6);\r\nvar Request_1 = __webpack_require__(4);\r\nvar templates_1 = __webpack_require__(7);\r\nvar DomUtilities_1 = __webpack_require__(0);\r\nvar ConditionalTextFilter_1 = __webpack_require__(46);\r\nvar Constants_1 = __webpack_require__(1);\r\nvar LanguageTextFilter_1 = __webpack_require__(5);\r\nvar Select_1 = __webpack_require__(9);\r\nvar Cookie_1 = __webpack_require__(2);\r\nvar ConditionalFlowFilter_1 = __webpack_require__(10);\r\nvar SurveyHandler = /** @class */ (function () {\r\n    // isPartialAvailable : Boolean;\r\n    function SurveyHandler(ccsdk) {\r\n        var _this = this;\r\n        this.answers = {};\r\n        this.surveyAnswers = {};\r\n        this._prefillsPartiallyPosted = false;\r\n        this.surveyToken = ccsdk.surveyToken;\r\n        this.surveyData = {};\r\n        this.surveyDisplay = {\r\n            position: \"\",\r\n            surveyPosition: \"\",\r\n            welcomePopupAnimation: \"\",\r\n            surveyPopupAnimation: \"\"\r\n        };\r\n        this.ccsdk = ccsdk;\r\n        this.domListeners = [];\r\n        this.questions = [];\r\n        this.questionsToDisplay = [];\r\n        this.prefillQuestions = [];\r\n        this.conditionalQuestions = [];\r\n        this.prefillResponses = [];\r\n        this.prefillWithTags = {};\r\n        this.prefillWithNote = {};\r\n        this.prefillDirect = {};\r\n        this.answers = {};\r\n        this.util = new DomUtilities_1.DomUtilities();\r\n        this.dom = ccsdk.dom;\r\n        this.displayThankYouCb = function (e) {\r\n            //perform final post\r\n            _this.finalPost(null, null);\r\n            if (_this.ccsdk && _this.ccsdk.tracking) {\r\n                _this.ccsdk.tracking.trackEvent(\"Completed Survey\", {\r\n                    token: _this.ccsdk.tracking.token,\r\n                    data: {\r\n                        name: null,\r\n                        action: null\r\n                    }\r\n                }, null, null);\r\n            }\r\n            var thankyouHtml = templates_1.templates.thankyou;\r\n            // thankyouHtml = thankyouHtml.replace(\"{{question}}\", this.surveyData.thankyouText);\r\n            // thankyouHtml = thankyouHtml.replace(\"{{question}}\", LanguageTextFilter.translateMessages(this, \"thankyouText\"));\r\n            var thankyouText = _this.ccsdk.config.thankyouText\r\n                ? _this.ccsdk.config.thankyouText\r\n                : _this.surveyData.thankyouText\r\n                    ? _this.surveyData.thankyouText\r\n                    : \"Thank You\";\r\n            var startText = _this.ccsdk.config.startButtonText\r\n                ? _this.ccsdk.config.startButtonText\r\n                : \"Start\";\r\n            thankyouHtml = thankyouHtml.replace(\"{{question}}\", thankyouText);\r\n            thankyouHtml = thankyouHtml.replace(\"{{button}}\", startText);\r\n            thankyouHtml = thankyouHtml.replace(\"{{branding}}\", _this.surveyData.branding &&\r\n                _this.surveyData.branding.toUpperCase() === \"NONE\"\r\n                ? \"no-branding\"\r\n                : \"full-branding\");\r\n            _this.ccsdk.dom.replaceInQuestionsContainer(thankyouHtml);\r\n            //TODO : Fix this Add class not working???\r\n            var thankyouContainer = _this.util.get(\"#cc-thankyou-container\");\r\n            window.ccsdkDebug ? console.log(thankyouContainer) : \"\";\r\n            _this.util.addClass(thankyouContainer[0], \"show-thankyou-slide\");\r\n            var onSurveyEndEvent = new CustomEvent(Constants_1.Constants.SURVEY_END_EVENT + \"-\" + _this.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyEndEvent);\r\n            //set done cookie for 30 days.\r\n            Cookie_1.Cookie.set(_this.surveyToken + \"-finish\", \"true\", 30, \"/\");\r\n            setTimeout(function () {\r\n                _this.ccsdk.dom.destroyListeners();\r\n                _this.destroy();\r\n            }, 2000);\r\n        };\r\n        this.destroySurveyCb = function (e) {\r\n            var self = _this;\r\n            //send end survey event.\r\n            var onSurveyEndEvent = new CustomEvent(Constants_1.Constants.SURVEY_END_EVENT + \"-\" + _this.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyEndEvent);\r\n            self.destroy();\r\n        };\r\n        this.acceptAnswersCb = function (e) {\r\n            var self = _this;\r\n            // (window as any).ccsdkDebug?console.log(self):'';\r\n            // (window as any).ccsdkDebug?console.log('question answered',e:'')\r\n            var data = e.detail;\r\n            var response = {};\r\n            response.questionId = data.questionId;\r\n            switch (data.type) {\r\n                case \"scale\":\r\n                    response.text = null;\r\n                    response.number = Number(data.data.number);\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case \"nps\":\r\n                    response.text = null;\r\n                    response.number = Number(data.data.number);\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case \"radio\":\r\n                    response.text = data.data.text;\r\n                    response.number = null;\r\n                    // response.number = Number(data.data.number);\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case \"radioImage\":\r\n                    response.text = data.data.text;\r\n                    response.number = null;\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case \"smile\":\r\n                    response.text = null;\r\n                    response.number = Number(data.data.number);\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case \"star\":\r\n                    response.text = null;\r\n                    response.number = Number(data.data.number);\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case \"multiline\":\r\n                    response.text = data.data.text;\r\n                    response.number = null;\r\n                    // (window as any).ccsdkDebug?console.log(data):'';\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    self.ccsdk.dom.setQIndex(data.index);\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case \"singleline\":\r\n                    response.text = data.data.text;\r\n                    response.number = null;\r\n                    // (window as any).ccsdkDebug?console.log(data):'';\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    self.ccsdk.dom.setQIndex(data.index);\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case \"number\":\r\n                    response.text = null;\r\n                    response.number = Number(data.data.number);\r\n                    // (window as any).ccsdkDebug?console.log(data):'';\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    self.ccsdk.dom.setQIndex(data.index);\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case \"checkbox\":\r\n                    response.text = data.data.text;\r\n                    response.number = null;\r\n                    // (window as any).ccsdkDebug?console.log(data):'';\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    self.ccsdk.dom.setQIndex(data.index);\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case \"select\":\r\n                    response.text = data.data.text;\r\n                    response.number = null;\r\n                    // (window as any).ccsdkDebug?console.log(data):'';\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    self.ccsdk.dom.setQIndex(data.index);\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case \"slider\":\r\n                    response.text = data.data.text;\r\n                    response.number = Number(data.data.number);\r\n                    // (window as any).ccsdkDebug?console.log(data):'';\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    self.ccsdk.dom.setQIndex(data.index);\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        };\r\n    }\r\n    SurveyHandler.prototype.fetchQuestions = function (successcb, errorcb) {\r\n        this.randomNumber = parseInt(String(Math.random() * 1000));\r\n        var surveyUrl = Config_1.Config.SURVEY_BY_TOKEN.replace(\"{token}\", \"\" + this.surveyToken);\r\n        // surveyUrl = surveyUrl.replace(\"{tabletId}\", \"\" + this.randomNumber);\r\n        surveyUrl = Config_1.Config.API_URL + surveyUrl;\r\n        Request_1.RequestHelper.get(surveyUrl, successcb, errorcb);\r\n        // (window as any).ccsdkDebug?console.log(data):'';\r\n        // this.surveyData = data.then(function();\r\n        // (window as any).ccsdkDebug?console.log(this.surveyData):'';\r\n    };\r\n    SurveyHandler.prototype.removeAnswer = function (questionId) {\r\n        delete this.answers[questionId];\r\n        delete this.surveyAnswers[questionId];\r\n    };\r\n    SurveyHandler.prototype.attachSurvey = function (surveyData) {\r\n        this.surveyData = surveyData;\r\n        this.setupPrefill();\r\n        this.setupSurveyContainer();\r\n        //clean survey\r\n        this.cleanSurvey();\r\n        this.displayQuestions();\r\n        this.displayThankYou();\r\n        this.destroySurvey();\r\n    };\r\n    SurveyHandler.prototype.setupPrefill = function () {\r\n        var _this = this;\r\n        if (this.surveyData &&\r\n            this.surveyData.preFill &&\r\n            this.surveyData.preFill.length > 0) {\r\n            this.surveyData.preFill.map(function (response) {\r\n                _this.fillPrefillQuestionObject(response.questionId, response);\r\n            });\r\n        }\r\n    };\r\n    SurveyHandler.prototype.cleanSurvey = function () {\r\n        this.questionsToDisplay = [];\r\n        this.answers = {};\r\n        this.surveyAnswers = {};\r\n        this.conditionalQuestions = [];\r\n    };\r\n    SurveyHandler.prototype.setupSurveyContainer = function () {\r\n        var surveyHtml = templates_1.templates.question_survey;\r\n        surveyHtml = surveyHtml.replace(\"{{surveyToken}}\", this.surveyToken);\r\n        surveyHtml = surveyHtml.replace(\"{{animation}}\", this.surveyDisplay.surveyPopupAnimation);\r\n        surveyHtml = surveyHtml.replace(/{{location}}/g, this.surveyDisplay.surveyPosition);\r\n        this.ccsdk.dom.appendInBody(surveyHtml);\r\n    };\r\n    SurveyHandler.prototype.displayQuestionSelector = function () { };\r\n    SurveyHandler.prototype.displayWelcomeQuestion = function (warningWelcomeText) {\r\n        //call this with true when welcome container is clicked.\r\n        // this.ccsdk.addThrottlingEntries(false);\r\n        var onSurveyImpressionEvent = new CustomEvent(Constants_1.Constants.SURVEY_IMPRESSION_EVENT + \"-\" + this.surveyToken);\r\n        document.dispatchEvent(onSurveyImpressionEvent);\r\n        this.ccsdk.surveyStartTime = new Date();\r\n        var self = this;\r\n        var welcomeHtml = templates_1.templates.question_start;\r\n        welcomeHtml = welcomeHtml.replace(\"{{surveyToken}}\", this.surveyToken);\r\n        // welcomeHtml = welcomeHtml.replace(\"{{question}}\", this.surveyData.welcomeText);\r\n        var welcomeText = this.ccsdk.config.welcomeText\r\n            ? this.ccsdk.config.welcomeText\r\n            : \"Welcome\";\r\n        // welcomeHtml = welcomeHtml.replace(\"{{question}}\", LanguageTextFilter.translateMessages(this, \"welcomeText\"));\r\n        var startText = this.ccsdk.config.startButtonText\r\n            ? this.ccsdk.config.startButtonText\r\n            : \"Start\";\r\n        if (warningWelcomeText) {\r\n            document.getElementById(this.surveyToken + \"-welcome\").remove();\r\n            welcomeHtml = welcomeHtml.replace(\"{{question}}\", warningWelcomeText);\r\n            welcomeHtml = welcomeHtml.replace(\"{{button}}\", \"Close\");\r\n            welcomeHtml = welcomeHtml.replace(\"{{action}}\", \"button-close\");\r\n        }\r\n        else {\r\n            welcomeHtml = welcomeHtml.replace(\"{{question}}\", welcomeText);\r\n            welcomeHtml = welcomeHtml.replace(\"{{button}}\", startText);\r\n            welcomeHtml = welcomeHtml.replace(\"{{action}}\", \"survey-start\");\r\n        }\r\n        welcomeHtml = welcomeHtml.replace(\"{{location}}\", this.surveyDisplay.position);\r\n        welcomeHtml = welcomeHtml.replace(\"{{animation}}\", this.surveyDisplay.welcomePopupAnimation);\r\n        // (window as any).ccsdkDebug?console.log(\"Appending in body\"):'';\r\n        this.ccsdk.dom.appendInBody(welcomeHtml);\r\n        this.ccsdk.dom.showWelcomeContainer();\r\n        this.setCoolDownPeriod(this.ccsdk.config, this.surveyToken);\r\n        if (typeof this.ccsdk.config.keepAlive != undefined &&\r\n            this.ccsdk.config.keepAlive > 0) {\r\n            this.welcomeQuestionDisplayTime = new Date();\r\n            this.welcomeInterval = setInterval(function () {\r\n                self.checkWelcomeQuestionDisplay(self.ccsdk.config.keepAlive);\r\n            }, 1000);\r\n        }\r\n        this.acceptAnswers();\r\n        // self.survey.displayLanguageSelector();\r\n    };\r\n    SurveyHandler.prototype.setCoolDownPeriod = function (campaign, surveyToken) {\r\n        if (campaign && campaign.coolDownPeriod && campaign.coolDownPeriod != 0) {\r\n            Cookie_1.Cookie.set(surveyToken + \"-coolDown\", \"true\", campaign.coolDownPeriod / 86400, \"/\");\r\n        }\r\n        else {\r\n            Cookie_1.Cookie.set(surveyToken + \"-coolDown\", \"true\", 1, \"/\");\r\n        }\r\n    };\r\n    SurveyHandler.prototype.checkWelcomeQuestionDisplay = function (keepAlive) {\r\n        var self = this;\r\n        var now = new Date();\r\n        if (keepAlive) {\r\n            // console.log((now.getTime() - this.welcomeQuestionDisplayTime.getTime()) / 1000);\r\n            if (keepAlive <=\r\n                (now.getTime() - this.welcomeQuestionDisplayTime.getTime()) / 1000) {\r\n                self.killWelcomeQuestion();\r\n            }\r\n        }\r\n    };\r\n    SurveyHandler.prototype.killWelcomeQuestion = function () {\r\n        this.destroy();\r\n        clearInterval(this.welcomeInterval);\r\n    };\r\n    SurveyHandler.prototype.cancelKillWelcomeQuestion = function () {\r\n        clearInterval(this.welcomeInterval);\r\n    };\r\n    SurveyHandler.prototype.displayLanguageSelector = function () {\r\n        var self = this;\r\n        var options1;\r\n        var qId = \"languageSelector\";\r\n        var cTemplate1 = templates_1.templates.language_selector;\r\n        options1 = this.util.generateLanguageSelectOptions([\"default\"]);\r\n        if (this.surveyData.translated) {\r\n            options1 = this.util.generateLanguageSelectOptions([\"default\"].concat(Object.keys(this.surveyData.translated)));\r\n        }\r\n        cTemplate1 = cTemplate1.replace(/{{questionId}}/g, qId);\r\n        cTemplate1 = cTemplate1.replace(\"{{options}}\", options1);\r\n        cTemplate1 = cTemplate1.replace(\"{{requiredLabel}}\", true ? \"*\" : undefined);\r\n        this.ccsdk.dom.replaceInQuestionsContainer(cTemplate1);\r\n        var $questionContainer = document.querySelectorAll(\".cc-questions-container\");\r\n        var $body = document.getElementsByTagName(\"body\")[0];\r\n        this.util.addClass($questionContainer[0].firstChild, \"show-slide\");\r\n        this.languageSelect = new Select_1.Select(qId);\r\n        var submitBtn = document.querySelectorAll(\".submit-icon\");\r\n        this.util.removeClassAll(submitBtn, \"act-cc-button-next\");\r\n        this.util.addClassAll(submitBtn, \"act-cc-button-lang-next\");\r\n        if (this.languageSelect) {\r\n            this.languageSelect.destroyListeners();\r\n        }\r\n        this.languageSelect.init(qId);\r\n        var selectRes = \"\";\r\n        if (this.util.checkIfListenerExists(\"#\" + qId + \" .cc-select-options .cc-select-option\", this.domListeners)) {\r\n            // return;\r\n            window.ccsdkDebug\r\n                ? console.log(\"display language select - previous listeners exists\")\r\n                : \"\";\r\n            this.removePrevListener(\"#\" + qId + \" .cc-select-options .cc-select-option\");\r\n        }\r\n        var ref = this.util.initListener(\"click\", \"#\" + qId + \" .cc-select-options .cc-select-option\", function () {\r\n            self.ccsdk.debug ? console.log(\"languageSelectOption\") : \"\";\r\n            selectRes = document.querySelectorAll(\"#\" + qId + \" .cc-select-trigger\")[0].innerHTML;\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener($body, ref.type, ref.id, ref.cb);\r\n        var languageSelect2 = this.util.initListener(\"click\", \".act-cc-button-lang-next\", function () {\r\n            self.ccsdk.debug ? console.log(\"languageNext\") : \"\";\r\n            self.ccsdk.config.language = \"default\";\r\n            self.ccsdk.config.language = selectRes; //language selection from menu then show first question\r\n            //set config rtl or ltr\r\n            var languageQuestion = self.surveyData.questions.find(function (x) { return x.questionTags.indexOf('cc_language') !== -1; });\r\n            if (languageQuestion) {\r\n                self.fillPrefillQuestion(languageQuestion.id, selectRes, 'text');\r\n            }\r\n            var isRTL = /[\\u0600-\\u06FF]/.test(selectRes);\r\n            self.ccsdk.config.textDirection = isRTL ? \"rtl\" : \"ltr\";\r\n            self.ccsdk.setHtmlTextDirection();\r\n            self.util.removeClassAll(submitBtn, \"act-cc-button-lang-next\");\r\n            self.util.addClassAll(submitBtn, \"act-cc-button-next\");\r\n            self.ccsdk.dom.loadFirstQuestion(); // this.loadFirstQuestion();\r\n            // self.postPrefillPartialAnswer( false, null, null );\r\n        });\r\n        this.domListeners.push(languageSelect2);\r\n        languageSelect2.internalHandler = this.util.listener($body, languageSelect2.type, languageSelect2.id, languageSelect2.cb);\r\n        // this.util.addClass(thankyouContainer[0], 'show-thankyou-slide');\r\n        // this.ccsdk.dom.appendInBody(cTemplate1);\r\n        // this.ccsdk.dom.showLanguageSelector();\r\n        window.ccsdkDebug ? console.log(cTemplate1) : \"\";\r\n    };\r\n    SurveyHandler.prototype.displayThankYou = function () {\r\n        var self = this;\r\n        document.addEventListener(\"ccdone\", this.displayThankYouCb);\r\n    };\r\n    SurveyHandler.prototype.displayQuestions = function () {\r\n        //check question is supported, based on question types.\r\n        //filter pre fill questions.\r\n        this.questions = this.surveyData.questions;\r\n        // this.questionsToDisplay = (this.surveyData.questions as any[]).filter(this.filterQuestions);\r\n        this.filterQuestions();\r\n        //sort questions and display them?\r\n        this.questionsToDisplay = this.questionsToDisplay.sort(this.questionCompare);\r\n        var ccSurvey;\r\n        ccSurvey = document.getElementsByClassName(\"cc-questions-container\");\r\n        // ccSurvey = ccSurvey[0];\r\n        var surveyObject = ccSurvey[0];\r\n        // (window as any).ccsdkDebug?console.log(this.questionsToDisplay):'';\r\n        //chec\r\n        //for now just do 1st question.\r\n        for (var _i = 0, _a = this.questionsToDisplay; _i < _a.length; _i++) {\r\n            var question = _a[_i];\r\n            if (this.checkConditionals(question)) {\r\n                var compiledTemplate = this.compileTemplate(question);\r\n                question.compiledTemplate = compiledTemplate;\r\n                // surveyObject.innerHTML += compiledTemplate;\r\n                //register handlers for onclick?\r\n            }\r\n            else {\r\n                if (this.isPrefillQuestion(question)) {\r\n                    this.prefillQuestions.push(question);\r\n                }\r\n            }\r\n            //else don't display it.\r\n        }\r\n        // (window as any).ccsdkDebug?console.log(surveyObject.innerHTML):'';\r\n        // this.postPartialAnswer(this.questionsToDisplay[0], \"test\");\r\n    };\r\n    SurveyHandler.prototype.getSurveyQuestions = function () {\r\n        return this.questionsToDisplay;\r\n    };\r\n    SurveyHandler.prototype.getAnswerForQuestionId = function (questionId) {\r\n        var answer = this.surveyAnswers[questionId];\r\n        if (typeof answer === \"undefined\") {\r\n            for (var _i = 0, _a = this.prefillResponses; _i < _a.length; _i++) {\r\n                var response = _a[_i];\r\n                if (response.questionId == questionId) {\r\n                    return response;\r\n                }\r\n            }\r\n        }\r\n        return this.surveyAnswers[questionId];\r\n    };\r\n    SurveyHandler.prototype.acceptAnswers = function () {\r\n        var self = this;\r\n        // (window as any).ccsdkDebug?console.log('add question answered listener':'')\r\n        document.addEventListener(\"q-answered\", this.acceptAnswersCb);\r\n    };\r\n    SurveyHandler.prototype.fillPrefillQuestionObject = function (id, response) {\r\n        var question = this.getQuestionById(id);\r\n        var responseStored = this.getPrefillResponseById(id);\r\n        if (responseStored != null) {\r\n            this.updatePrefillResponseById(id, response);\r\n        }\r\n        else {\r\n            this.prefillResponses.push(response);\r\n        }\r\n    };\r\n    SurveyHandler.prototype.fillPrefill = function (prefillObj) {\r\n        var _this = this;\r\n        Object.keys(prefillObj).map(function (x) {\r\n            _this.prefillWithTags[x.toLowerCase()] = prefillObj[x];\r\n        });\r\n        window.ccsdkDebug\r\n            ? console.log(\"prefillByTag\", this.prefillWithTags)\r\n            : \"\";\r\n    };\r\n    SurveyHandler.prototype.fillPrefillByNote = function (prefillObj) {\r\n        var _this = this;\r\n        Object.keys(prefillObj).map(function (x) {\r\n            _this.prefillWithNote[x.toLowerCase()] = prefillObj[x];\r\n        });\r\n        window.ccsdkDebug\r\n            ? console.log(\"prefillByNote\", this.prefillWithNote)\r\n            : \"\";\r\n    };\r\n    SurveyHandler.prototype.fillPrefillDirect = function (prefillObj) {\r\n        var _this = this;\r\n        Object.keys(prefillObj).forEach(function (x) {\r\n            _this.prefillDirect[x] = prefillObj[x];\r\n        });\r\n        window.ccsdkDebug\r\n            ? console.log(\"prefillDirect\", this.prefillDirect)\r\n            : \"\";\r\n    };\r\n    SurveyHandler.prototype.fillPrefillQuestion = function (id, value, valueType) {\r\n        var question = this.getQuestionById(id);\r\n        var response;\r\n        var responseStored = this.getPrefillResponseById(id);\r\n        if (responseStored != null) {\r\n            response = responseStored;\r\n        }\r\n        else {\r\n            response = {\r\n                questionId: question.id,\r\n                questionText: question.text,\r\n                textInput: null,\r\n                numberInput: null\r\n            };\r\n        }\r\n        valueType = this.getAnswerTypeFromDisplayType(question.displayType);\r\n        if (valueType.toLowerCase() == \"number\") {\r\n            response.numberInput = value;\r\n        }\r\n        if (valueType.toLowerCase() == \"text\") {\r\n            response.textInput = value;\r\n        }\r\n        if (responseStored != null) {\r\n            this.updatePrefillResponseById(id, response);\r\n        }\r\n        else {\r\n            this.prefillResponses.push(response);\r\n        }\r\n    };\r\n    SurveyHandler.prototype.postPrefillPartialAnswer = function (fullSubmission, successcb, errorcb) {\r\n        if (fullSubmission === void 0) { fullSubmission = false; }\r\n        if (!fullSubmission && this._prefillsPartiallyPosted) {\r\n            return;\r\n        }\r\n        this._prefillsPartiallyPosted = true;\r\n        if (!this.surveyData.partialResponseId) {\r\n            return;\r\n        }\r\n        var surveyPartialUrl = Config_1.Config.SURVEY_PARTIAL_RESPONSE.replace(\"{id}\", this.surveyData.partialResponseId);\r\n        surveyPartialUrl = surveyPartialUrl.replace(\"{complete}\", \"false\");\r\n        surveyPartialUrl = Config_1.Config.API_URL + surveyPartialUrl;\r\n        window.ccsdkDebug\r\n            ? console.log(\"Posting Prefill Responses to Server\")\r\n            : \"\";\r\n        window.ccsdkDebug ? console.log(this.prefillResponses) : \"\";\r\n        if (!this.surveyData.partialResponseId) {\r\n            // run successCB if there is one.\r\n            if (successcb) {\r\n                successcb();\r\n            }\r\n            return;\r\n        }\r\n        if (typeof this.prefillResponses !== \"undefined\" &&\r\n            this.prefillResponses.length > 0) {\r\n            Request_1.RequestHelper.postWithHeaders(surveyPartialUrl, this.prefillResponses, {}, successcb, errorcb);\r\n        }\r\n        else {\r\n            // console.log('No Prefill data');\r\n            return;\r\n        }\r\n    };\r\n    SurveyHandler.prototype.updatePrefillResponseById = function (id, resp) {\r\n        for (var _i = 0, _a = this.prefillResponses; _i < _a.length; _i++) {\r\n            var response = _a[_i];\r\n            if (response.questionId == id) {\r\n                response = resp;\r\n                break;\r\n            }\r\n        }\r\n    };\r\n    SurveyHandler.prototype.getPrefillResponseById = function (id) {\r\n        return this.prefillResponses.find(function (x) { return x.id === id; });\r\n    };\r\n    SurveyHandler.prototype.getQuestionById = function (id) {\r\n        return this.questions.find(function (x) { return x.id === id; });\r\n    };\r\n    SurveyHandler.prototype.postPartialAnswer = function (index, response, complete, successcb, errorcb) {\r\n        if (complete === void 0) { complete = false; }\r\n        this.postPrefillPartialAnswer(complete, null, null);\r\n        var question = this.questionsToDisplay[index];\r\n        var data = {\r\n            questionId: question.id,\r\n            questionText: question.text,\r\n            textInput: response.text,\r\n            numberInput: response.number\r\n        };\r\n        var surveyPartialUrl = Config_1.Config.SURVEY_PARTIAL_RESPONSE.replace(\"{id}\", this.surveyData.partialResponseId);\r\n        window.ccsdkDebug\r\n            ? console.log(\"partial response\", question.id ==\r\n                this.questionsToDisplay[this.questionsToDisplay.length - 1].id)\r\n            : \"\";\r\n        surveyPartialUrl = surveyPartialUrl.replace(\"{complete}\", \"\" + complete);\r\n        surveyPartialUrl = Config_1.Config.API_URL + surveyPartialUrl;\r\n        //add partial answer to main answer\r\n        this.surveyAnswers[question.id] = data;\r\n        data = [data];\r\n        var onSurveyAnswerEvent = new CustomEvent(Constants_1.Constants.SURVEY_ANSWER_EVENT + \"-\" + this.surveyToken);\r\n        document.dispatchEvent(onSurveyAnswerEvent);\r\n        if (!this.surveyData.partialResponseId) {\r\n            // run success callback and return\r\n            if (successcb) {\r\n                successcb();\r\n            }\r\n            return;\r\n        }\r\n        console.log(data);\r\n        if (question.id ==\r\n            this.questionsToDisplay[this.questionsToDisplay.length - 1].id) {\r\n            //last question post moved to separate function\r\n            Request_1.RequestHelper.postWithHeaders(surveyPartialUrl, data, {}, successcb, errorcb);\r\n        }\r\n        else {\r\n            Request_1.RequestHelper.postWithHeaders(surveyPartialUrl, data, {}, successcb, errorcb);\r\n        }\r\n    };\r\n    SurveyHandler.prototype.finalPost = function (successcb, errorcb) {\r\n        //last question\r\n        var postSurveyFinalUrl = Config_1.Config.POST_SURVEY_FINAL.replace(\"{tokenId}\", this.ccsdk.surveyToken);\r\n        postSurveyFinalUrl = Config_1.Config.API_URL + postSurveyFinalUrl;\r\n        var answersAll = [];\r\n        // hack for partial flushing\r\n        var lastAnswer;\r\n        if (Object.keys(this.surveyAnswers).length == 0) {\r\n            return;\r\n        }\r\n        for (var answer in this.surveyAnswers) {\r\n            var response = this.surveyAnswers[answer];\r\n            if (response &&\r\n                (response.textInput !== null || response.numberInput !== null)) {\r\n                answersAll.push(response);\r\n                lastAnswer = response;\r\n            }\r\n        }\r\n        for (var answer in this.prefillResponses) {\r\n            answersAll.push(this.prefillResponses[answer]);\r\n        }\r\n        var timeAtPost = new Date().getTime();\r\n        var finalData = {\r\n            id: this.ccsdk.surveyToken,\r\n            user: this.ccsdk.config.username,\r\n            locationId: null,\r\n            responses: answersAll,\r\n            nps: 0,\r\n            surveyClient: Constants_1.Constants.SURVEY_CLIENT,\r\n            responseDuration: Math.floor((timeAtPost - this.ccsdk.surveyStartTime.getTime()) / 1000)\r\n        };\r\n        if (lastAnswer) {\r\n            var _lastAnswer = {\r\n                text: lastAnswer.textInput,\r\n                number: lastAnswer.numberInput\r\n            };\r\n            this.postPartialAnswer(this.questionsToDisplay.length - 1, _lastAnswer, true, null, null);\r\n        }\r\n        if (finalData.responses && finalData.responses.length > 0) {\r\n            Request_1.RequestHelper.postWithHeaders(postSurveyFinalUrl, finalData, {}, successcb, errorcb);\r\n        }\r\n        else {\r\n            successcb();\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * check if conditions are satsified which are required to display question?\r\n     *\r\n     * @param {any} question\r\n     * @memberof Survey\r\n     */\r\n    SurveyHandler.prototype.checkConditionals = function (question) {\r\n        return true;\r\n    };\r\n    SurveyHandler.prototype.compileTemplate = function (question) {\r\n        var self = this;\r\n        //get question type\r\n        var questionTemplate;\r\n        // (window as any).ccsdkDebug?console.log(question):'';\r\n        if (question != \"undefined\") {\r\n            switch (question.displayType) {\r\n                case \"Slider\":\r\n                    var displayLegend = question.displayLegend;\r\n                    var opt = question.multiSelect[0].split(\"-\");\r\n                    var optMin = opt[0].split(\";\");\r\n                    var optMax = opt[1].split(\";\");\r\n                    //get text question template and compile it.\r\n                    questionTemplate = templates_1.templates.question_slider;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{min}}/g, optMin[0]);\r\n                    if (displayLegend[0]) {\r\n                        questionTemplate = questionTemplate.replace(/{{minLabel}}/g, displayLegend[0] + \"-\");\r\n                    }\r\n                    else {\r\n                        questionTemplate = questionTemplate.replace(/{{minLabel}}/g, \"\");\r\n                    }\r\n                    questionTemplate = questionTemplate.replace(/{{max}}/g, optMax[0]);\r\n                    if (displayLegend[1]) {\r\n                        questionTemplate = questionTemplate.replace(/{{maxLabel}}/g, displayLegend[1] + \"-\");\r\n                    }\r\n                    else {\r\n                        questionTemplate = questionTemplate.replace(/{{maxLabel}}/g, \"\");\r\n                    }\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    break;\r\n                case \"Scale\":\r\n                    //get text question template and compile it.\r\n                    window.ccsdkDebug ? console.log(question.questionTags) : \"\";\r\n                    if (question.questionTags.includes(\"NPS\")) {\r\n                        questionTemplate = templates_1.templates.question_nps;\r\n                        questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                        questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                        questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                        questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    }\r\n                    else if (question.questionTags.includes(\"CSAT\")) {\r\n                        if (question.questionTags.includes(\"csat_satisfaction_5\")) {\r\n                            questionTemplate = templates_1.templates.question_csat_satisfaction_5;\r\n                        }\r\n                        else if (question.questionTags.includes(\"csat_agreement_5\")) {\r\n                            questionTemplate = templates_1.templates.question_csat_agreement_5;\r\n                        }\r\n                        questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                        questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                        questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                        questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    }\r\n                    else {\r\n                        var tileColor = \"\";\r\n                        var style = \"\";\r\n                        if (question.attributes != null &&\r\n                            question.attributes.scaleColor &&\r\n                            question.attributes.scaleColor.length > 0) {\r\n                            if (question.attributes.scaleColor !== \"Gradient\") {\r\n                                tileColor = question.attributes.scaleColor;\r\n                            }\r\n                            else {\r\n                                tileColor = \"#02BAEE\";\r\n                            }\r\n                        }\r\n                        else if (question.presentationMode != null &&\r\n                            question.presentationMode.indexOf(\"Color\") !== -1) {\r\n                            tileColor = question.presentationMode.split(\":\")[1];\r\n                        }\r\n                        if (tileColor.length > 0) {\r\n                            var tileColorDark = this.util.shadeBlendConvert(-0.3, tileColor, undefined);\r\n                            style =\r\n                                \"\\\r\n                <style>\\\r\n                #id\" +\r\n                                    question.id +\r\n                                    \" .option-number-item.option-scale{\\\r\n                  background-color : \" +\r\n                                    tileColor +\r\n                                    \";\\\r\n                }\\\r\n                #id\" +\r\n                                    question.id +\r\n                                    \" .option-number-item.option-scale:hover,\\\r\n                #id\" +\r\n                                    question.id +\r\n                                    \" .option-number-item.option-scale.selected{\\\r\n                  background-color : \" +\r\n                                    tileColorDark +\r\n                                    \";\\\r\n                }\\\r\n                </style>\\\r\n              \";\r\n                        }\r\n                        questionTemplate = templates_1.templates.question_scale;\r\n                        questionTemplate = questionTemplate.replace(/{{style}}/g, style);\r\n                        questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                        questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                        questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                        questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                        //construct NPS scale here....\r\n                        var startRange = 0.0;\r\n                        var endRange = 10.0;\r\n                        var options = \"\";\r\n                        var startRangeLabel_1 = \"\";\r\n                        // let startRangeLabel = \"\";\r\n                        // let endRangeLabel = \"Very likely\";\r\n                        var endRangeLabel_1 = \"\";\r\n                        var midRangeLabel = \"\";\r\n                        if (question.questionTags.includes(\"ces_agree_5\") ||\r\n                            question.questionTags.includes(\"ces_agree_7\")) {\r\n                            startRangeLabel_1 = \"Strongly Disagree\";\r\n                            endRangeLabel_1 = \"Strongly Agree\";\r\n                            if (question.questionTags.includes(\"ces_agree_7\")) {\r\n                                midRangeLabel = \"Somewhat Agree\";\r\n                            }\r\n                        }\r\n                        else if (question.questionTags.includes(\"ces_effort_5\") ||\r\n                            question.questionTags.includes(\"ces_effort_7\")) {\r\n                            startRangeLabel_1 = \"High Effort\";\r\n                            endRangeLabel_1 = \"Low Effort\";\r\n                            if (question.questionTags.includes(\"ces_effort_7\")) {\r\n                                midRangeLabel = \"Moderate Effort\";\r\n                            }\r\n                        }\r\n                        else if (question.anchorMetricName != null) {\r\n                            var metricName = question.anchorMetricName;\r\n                            var customMetric = this.surveyData.customMetrics[metricName];\r\n                            var optionsLength = customMetric.optionCategories.length;\r\n                            startRangeLabel_1 = customMetric.optionCategories[0].label;\r\n                            if (optionsLength > 2) {\r\n                                midRangeLabel = customMetric.optionCategories[1].label;\r\n                            }\r\n                            else {\r\n                                midRangeLabel = null;\r\n                            }\r\n                            endRangeLabel_1 =\r\n                                customMetric.optionCategories[optionsLength - 1].label;\r\n                        }\r\n                        var displayLegend_1 = LanguageTextFilter_1.LanguageTextFilter.translateDisplayLegend(this, question);\r\n                        if (displayLegend_1) {\r\n                            if (displayLegend_1.length > 0) {\r\n                                startRangeLabel_1 = displayLegend_1[0] ? displayLegend_1[0] : null;\r\n                                endRangeLabel_1 = displayLegend_1[1] ? displayLegend_1[1] : null;\r\n                            }\r\n                        }\r\n                        if (question.multiSelect.length > 0) {\r\n                            startRange = parseFloat(question.multiSelect[0].split(\"-\")[0]);\r\n                            if (startRangeLabel_1 == null) {\r\n                                startRangeLabel_1 = question.multiSelect[0]\r\n                                    .split(\"-\")[0]\r\n                                    .split(\";\")[1];\r\n                            }\r\n                            endRange = parseFloat(question.multiSelect[0].split(\"-\")[1]);\r\n                            if (endRangeLabel_1 == null) {\r\n                                endRangeLabel_1 = question.multiSelect[0]\r\n                                    .split(\"-\")[1]\r\n                                    .split(\";\")[1];\r\n                            }\r\n                        }\r\n                        startRangeLabel_1 = startRangeLabel_1 == null ? \"\" : startRangeLabel_1;\r\n                        endRangeLabel_1 = endRangeLabel_1 == null ? \"\" : endRangeLabel_1;\r\n                        var mobileImageUrl = \"\";\r\n                        var imageVisibility010 = \"hide\";\r\n                        var imageVisibility110 = \"hide\";\r\n                        var scaleVisibility = \"show-inline\";\r\n                        var scaleImageContainer = \"\";\r\n                        if (startRange == 0 && endRange == 10) {\r\n                            mobileImageUrl =\r\n                                \"https://cx.getcloudcherry.com/microsurvey-assets/scale-0-10-neutral.svg\";\r\n                            imageVisibility010 = \"show\";\r\n                            imageVisibility110 = \"hide\";\r\n                            scaleVisibility = \"hide\";\r\n                            scaleImageContainer = \"scale-image-container\";\r\n                        }\r\n                        else if (startRange == 1 && endRange == 10) {\r\n                            mobileImageUrl =\r\n                                \"https://cx.getcloudcherry.com/microsurvey-assets/scale-1-10-neutral.svg\";\r\n                            imageVisibility010 = \"hide\";\r\n                            imageVisibility110 = \"show\";\r\n                            scaleVisibility = \"hide\";\r\n                            scaleImageContainer = \"scale-image-container\";\r\n                        }\r\n                        // console.log('scale', startRange, endRange);\r\n                        var divider = 1;\r\n                        if (endRange < 11) {\r\n                        }\r\n                        else {\r\n                            divider = (endRange - startRange) / 10.0;\r\n                        }\r\n                        var initial = 0.0;\r\n                        var optionStyle = \"\";\r\n                        var legendDimension = void 0;\r\n                        if (window.isMobile) {\r\n                            if (endRange < 11) {\r\n                                var parentContainer = window.innerWidth - 40;\r\n                                var dimension = ((100 / (endRange - startRange + 1) - 0.5) *\r\n                                    parentContainer) /\r\n                                    100;\r\n                                dimension = dimension > 48 ? 48 : dimension;\r\n                                legendDimension = (endRange - startRange + 1) * (dimension + 1);\r\n                                optionStyle = \"width:\" + dimension + \"px;height:\" + dimension + \"px;padding:\" + (dimension -\r\n                                    15) /\r\n                                    2 + \"px;\";\r\n                            }\r\n                        }\r\n                        else {\r\n                            imageVisibility010 = \"hide\";\r\n                            imageVisibility110 = \"hide\";\r\n                            scaleVisibility = \"show-inline\";\r\n                            scaleImageContainer = \"\";\r\n                            mobileImageUrl = \"\";\r\n                        }\r\n                        if (question.questionTags.includes(\"CES\")) {\r\n                            var leftWidth = 38 * 3 + \"px\";\r\n                            for (var initial_1 = startRange; initial_1 <= endRange; initial_1 += divider) {\r\n                                options +=\r\n                                    '<span data-rating=\"' +\r\n                                        initial_1 +\r\n                                        '\" class=\"option-number-item option-' +\r\n                                        endRange +\r\n                                        \"-scale-\" +\r\n                                        initial_1 +\r\n                                        \" \" +\r\n                                        scaleVisibility +\r\n                                        '\" style=\"' +\r\n                                        optionStyle +\r\n                                        '\">' +\r\n                                        initial_1 +\r\n                                        \"</span>\";\r\n                            }\r\n                        }\r\n                        else if (question.anchorMetricName != null) {\r\n                            var metricName = question.anchorMetricName;\r\n                            var customMetric = this.surveyData.customMetrics[metricName];\r\n                            var cmwidthstart = customMetric.optionCategories[0].categoryRange.split(\",\")[0];\r\n                            var cmwidthend = customMetric.optionCategories[1].categoryRange.split(\",\")[0];\r\n                            var leftWidth = (cmwidthend - cmwidthstart) * 39 + \"px\";\r\n                            for (var iterator in customMetric.optionCategories) {\r\n                                var startRange_1 = parseFloat(customMetric.optionCategories[iterator].categoryRange.split(\",\")[0]);\r\n                                var endRange_1 = parseFloat(customMetric.optionCategories[iterator].categoryRange.split(\",\")[1]);\r\n                                imageVisibility010 = 'hide';\r\n                                imageVisibility110 = 'hide';\r\n                                scaleVisibility = 'show-inline';\r\n                                scaleImageContainer = \"\";\r\n                                mobileImageUrl = \"\";\r\n                                for (var initial_2 = startRange_1; initial_2 <= endRange_1; initial_2 += divider) {\r\n                                    options +=\r\n                                        '<span data-rating=\"' +\r\n                                            initial_2 +\r\n                                            '\" class=\"option-number-item option-scale\"' +\r\n                                            scaleVisibility +\r\n                                            '\" style=\"background:' +\r\n                                            customMetric.optionCategories[iterator].color +\r\n                                            '\">' +\r\n                                            initial_2 +\r\n                                            \"</span>\";\r\n                                }\r\n                            }\r\n                            legendDimension = (endRange - startRange + 1) * 39;\r\n                        }\r\n                        else {\r\n                            for (var initial_3 = startRange; initial_3 <= endRange; initial_3 += divider) {\r\n                                options +=\r\n                                    '<span data-rating=\"' +\r\n                                        initial_3 +\r\n                                        '\" class=\"option-number-item option-scale ' +\r\n                                        scaleVisibility +\r\n                                        '\" style=\"' +\r\n                                        optionStyle +\r\n                                        '\">' +\r\n                                        initial_3 +\r\n                                        \"</span>\";\r\n                            }\r\n                            legendDimension = (endRange - startRange + 1) * 39;\r\n                        }\r\n                        if (endRange - startRange + 1 <= 11) {\r\n                            var optionLeftExtraClass = \"option-left-rating-text-small-container\";\r\n                            var optionMidExtraClass = \"option-mid-rating-text-small-container\";\r\n                            var optionRightExtraClass = \"option-right-rating-text-small-container\";\r\n                            var optionMaxWidth = ((endRange - startRange + 1) * 38) / 2 - 5 + \"px\";\r\n                            // console.log(optionMaxWidth);\r\n                        }\r\n                        questionTemplate = questionTemplate.replace(\"{{legendStyle}}\", \"style=\\\"position:relative;width:\" + (mobileImageUrl ? \"100%\" : legendDimension + \"px\") + \";min-height: 20px;\\\"\");\r\n                        questionTemplate = questionTemplate.replace(/\\{\\{radialLegend\\}\\}/g, mobileImageUrl ? \"radial-legend\" : \"unknown-class\");\r\n                        questionTemplate = questionTemplate.replace(\"{{optionsRange}}\", options);\r\n                        // questionTemplate = questionTemplate.replace(\"{{maxWidth}}\", optionMaxWidth);\r\n                        questionTemplate = questionTemplate.replace(/maxWidth/g, mobileImageUrl ? \"35%;width:35%\" : optionMaxWidth);\r\n                        questionTemplate = questionTemplate.replace(/leftWidth/g, leftWidth);\r\n                        questionTemplate = questionTemplate.replace(/{{optionLeftExtraClass}}/g, optionLeftExtraClass);\r\n                        questionTemplate = questionTemplate.replace(/{{optionMidExtraClass}}/g, optionMidExtraClass);\r\n                        questionTemplate = questionTemplate.replace(/{{optionRightExtraClass}}/g, optionRightExtraClass);\r\n                        questionTemplate = questionTemplate.replace(\"{{leftLabel}}\", startRangeLabel_1);\r\n                        questionTemplate = questionTemplate.replace(\"{{midLabel}}\", midRangeLabel || \"\");\r\n                        questionTemplate = questionTemplate.replace(\"{{rightLabel}}\", endRangeLabel_1);\r\n                        questionTemplate = questionTemplate.replace(/{{mobileImageUrl}}/g, '\"' + mobileImageUrl + '\"');\r\n                        questionTemplate = questionTemplate.replace(\"{{imageVisibility010}}\", imageVisibility010);\r\n                        questionTemplate = questionTemplate.replace(\"{{imageVisibility110}}\", imageVisibility110);\r\n                        questionTemplate = questionTemplate.replace(\"{{scaleImageContainer}}\", scaleImageContainer);\r\n                    }\r\n                    break;\r\n                case \"Text\":\r\n                    //get text question template and compile it.\r\n                    questionTemplate = templates_1.templates.question_text;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    questionTemplate = questionTemplate.replace(\"{{validationHint}}\", question.validationHint ? question.validationHint : \"\");\r\n                    break;\r\n                case \"Number\":\r\n                    //get text question template and compile it.\r\n                    questionTemplate = templates_1.templates.question_number;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    questionTemplate = questionTemplate.replace(\"{{validationHint}}\", question.validationHint ? question.validationHint : \"\");\r\n                    break;\r\n                case \"Date\":\r\n                    questionTemplate = templates_1.templates.question_date;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    questionTemplate = questionTemplate.replace(\"{{validationHint}}\", question.validationHint ? question.validationHint : \"\");\r\n                    break;\r\n                case \"MultilineText\":\r\n                    //get text question template and compile it.\r\n                    questionTemplate = templates_1.templates.question_multi_line_text;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    questionTemplate = questionTemplate.replace(\"{{characterLimit}}\", question.attributes && question.attributes.characterLimit\r\n                        ? question.attributes.characterLimit\r\n                        : \"\");\r\n                    questionTemplate = questionTemplate.replace(\"{{validationHint}}\", question.validationHint ? question.validationHint : \"\");\r\n                    break;\r\n                case \"MultiSelect\":\r\n                    var acTemplate = void 0;\r\n                    var multiSelect1 = void 0;\r\n                    //get text question template and compile it.\r\n                    multiSelect1 = Array.prototype.slice.call(LanguageTextFilter_1.LanguageTextFilter.translateMultiSelect(this, question));\r\n                    if (question.presentationMode == \"Invert\") {\r\n                        // console.log('selection option before reverse', multiSelect1);\r\n                        multiSelect1.reverse();\r\n                        // console.log('selection option after reverse', multiSelect1);\r\n                        // console.log('selection api option', question.multiSelect);\r\n                    }\r\n                    //get text question template and compile it.\r\n                    if ((question.displayStyle == \"radiobutton/checkbox\" ||\r\n                        question.displayStyle == \"icon\") &&\r\n                        multiSelect1.length < 6) {\r\n                        // (window as any).ccsdkDebug?console.log(question.displayStyle):'';\r\n                        var checkOptionContainsImage = self.util.checkOptionContainsImage(multiSelect1);\r\n                        // (window as any).ccsdkDebug?console.log('select radio image',checkOptionContainsImage):'';\r\n                        if (checkOptionContainsImage &&\r\n                            ((multiSelect1.length > 0 &&\r\n                                multiSelect1[0].indexOf(\"Male\") !== -1) ||\r\n                                (multiSelect1.length > 0 &&\r\n                                    multiSelect1[0].indexOf(\"Yes\") !== -1) ||\r\n                                (multiSelect1.length > 1 &&\r\n                                    multiSelect1[1].indexOf(\"Yes\") !== -1))) {\r\n                            // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n                            acTemplate = templates_1.templates.question_checkbox;\r\n                            var options2_1 = self.util.generateCheckboxImageOptions(question.multiSelect, multiSelect1, question.id);\r\n                            // (window as any).ccsdkDebug?console.log(options2):'';\r\n                            questionTemplate = acTemplate;\r\n                            questionTemplate = questionTemplate.replace(/{{options}}/g, options2_1);\r\n                            acTemplate = questionTemplate;\r\n                        }\r\n                        else if (checkOptionContainsImage) {\r\n                            // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n                            acTemplate = templates_1.templates.question_checkbox;\r\n                            var options2_2 = self.util.generateCheckboxIgnoreImageOptions(question.multiSelect, multiSelect1, question.id);\r\n                            // (window as any).ccsdkDebug?console.log(options2):'';\r\n                            questionTemplate = acTemplate;\r\n                            questionTemplate = questionTemplate.replace(/{{options}}/g, options2_2);\r\n                            acTemplate = questionTemplate;\r\n                        }\r\n                        else {\r\n                            var options3 = self.util.generateCheckboxOptions(question.multiSelect, multiSelect1, question.id);\r\n                            // (window as any).ccsdkDebug?console.log(options2):'';\r\n                            acTemplate = templates_1.templates.question_checkbox;\r\n                            questionTemplate = acTemplate.replace(/{{options}}/g, options3);\r\n                            acTemplate = questionTemplate;\r\n                        }\r\n                    }\r\n                    else {\r\n                        // (window as any).ccsdkDebug?console.log('select type 3'):'';\r\n                        acTemplate = templates_1.templates.question_multi_select;\r\n                        // acTemplate = templates.question_select;\r\n                        var options3 = self.util.generateSelectOptions(question.multiSelect, multiSelect1);\r\n                        if (self.ccsdk.config.language.indexOf(\"Default\") === -1) {\r\n                            if (typeof question.translated !== \"undefined\" &&\r\n                                question.translated != null &&\r\n                                typeof question.translated[self.ccsdk.config.language] !==\r\n                                    \"undefined\" &&\r\n                                question.translated[self.ccsdk.config.language].multiSelect !==\r\n                                    \"undefined\" &&\r\n                                question.translated[self.ccsdk.config.language].multiSelect\r\n                                    .length > 0) {\r\n                                multiSelect1 = Array.prototype.slice.call(question.translated[self.ccsdk.config.language].multiSelect);\r\n                                if (question.presentationMode == \"Invert\") {\r\n                                    multiSelect1.reverse();\r\n                                }\r\n                                options3 = self.util.generateSelectOptions(question.multiSelect, multiSelect1);\r\n                            }\r\n                        }\r\n                        // questionTemplate = acTemplate;\r\n                        self.ccsdk.debug ? console.log(options3) : \"\";\r\n                        questionTemplate = acTemplate.replace(/{{options}}/g, options3);\r\n                        acTemplate = questionTemplate;\r\n                    }\r\n                    questionTemplate = acTemplate;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    break;\r\n                case \"Select\":\r\n                    var acTemplate1 = void 0;\r\n                    var acTemplate2 = void 0;\r\n                    var options1 = void 0;\r\n                    var options2 = void 0;\r\n                    var multiSelect = void 0;\r\n                    //get text question template and compile it.\r\n                    multiSelect = Array.prototype.slice.call(LanguageTextFilter_1.LanguageTextFilter.translateMultiSelect(this, question));\r\n                    var invertedMultiSelect = void 0;\r\n                    if (question.presentationMode == \"Invert\") {\r\n                        // console.log('selection option before reverse', multiSelect);\r\n                        invertedMultiSelect = question.multiSelect\r\n                            ? question.multiSelect.slice().reverse()\r\n                            : [];\r\n                        multiSelect.reverse();\r\n                        // console.log('selection option after reverse', multiSelect);\r\n                        // console.log('selection api option', question.multiSelect);\r\n                    }\r\n                    else {\r\n                        invertedMultiSelect = question.multiSelect;\r\n                    }\r\n                    if (question.displayStyle == \"radiobutton/checkbox\" &&\r\n                        multiSelect.length < 6) {\r\n                        // if(question.displayStyle == 'radiobutton/checkbox'){\r\n                        // (window as any).ccsdkDebug?console.log('select type 1'):'';\r\n                        // (window as any).ccsdkDebug?console.log(question.displayStyle):'';\r\n                        // acTemplate1 = templates.question_radio;\r\n                        // questionTemplate = acTemplate1;\r\n                        var checkOptionContainsImage = self.util.checkOptionContainsImage(multiSelect);\r\n                        window.ccsdkDebug\r\n                            ? console.log(\"select radio image\", checkOptionContainsImage)\r\n                            : \"\";\r\n                        if (checkOptionContainsImage &&\r\n                            ((multiSelect.length > 0 &&\r\n                                multiSelect[0].indexOf(\"Male\") !== -1) ||\r\n                                (multiSelect.length > 0 &&\r\n                                    multiSelect[0].indexOf(\"Yes\") !== -1) ||\r\n                                (multiSelect.length > 1 &&\r\n                                    multiSelect[1].indexOf(\"Yes\") !== -1))) {\r\n                            // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n                            acTemplate2 = templates_1.templates.question_radio_image;\r\n                            options2 = self.util.generateRadioImageOptions(invertedMultiSelect, multiSelect, question.id);\r\n                            window.ccsdkDebug ? console.log({ options2: options2 }) : \"\";\r\n                            questionTemplate = acTemplate2;\r\n                            questionTemplate = questionTemplate.replace(/{{options}}/g, options2);\r\n                        }\r\n                        else if (checkOptionContainsImage) {\r\n                            // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n                            acTemplate2 = templates_1.templates.question_radio_image;\r\n                            options2 = self.util.generateRadioIgnoreImageOptions(invertedMultiSelect, multiSelect, question.id);\r\n                            // (window as any).ccsdkDebug?console.log(options2):'';\r\n                            questionTemplate = acTemplate2;\r\n                            questionTemplate = questionTemplate.replace(/{{options}}/g, options2);\r\n                        }\r\n                        else {\r\n                            acTemplate1 = templates_1.templates.question_radio;\r\n                            questionTemplate = acTemplate1;\r\n                            options1 = self.util.generateRadioOptions(invertedMultiSelect, multiSelect, question.id);\r\n                            questionTemplate = questionTemplate.replace(\"{{options}}\", options1);\r\n                        }\r\n                    }\r\n                    else if (question.displayStyle == \"icon\" &&\r\n                        multiSelect.length < 6) {\r\n                        acTemplate1 = templates_1.templates.question_radio;\r\n                        questionTemplate = acTemplate1;\r\n                        var invertedMultiSelect_1;\r\n                        if (question.presentationMode == \"Invert\") {\r\n                            invertedMultiSelect_1 = question.multiSelect\r\n                                ? question.multiSelect.slice().reverse()\r\n                                : [];\r\n                        }\r\n                        else {\r\n                            invertedMultiSelect_1 = question.multiSelect;\r\n                        }\r\n                        options1 = self.util.generateRadioOptions(invertedMultiSelect_1, multiSelect, question.id);\r\n                        questionTemplate = questionTemplate.replace(\"{{options}}\", options1);\r\n                    }\r\n                    else {\r\n                        window.ccsdkDebug ? console.log(\"select type 3\") : \"\";\r\n                        acTemplate1 = templates_1.templates.question_select;\r\n                        options1 = self.util.generateSelectOptions(invertedMultiSelect, multiSelect);\r\n                        if (self.ccsdk.config.language.indexOf(\"Default\") === -1) {\r\n                            if (typeof question.translated !== \"undefined\" &&\r\n                                question.translated != null &&\r\n                                typeof question.translated[self.ccsdk.config.language] !==\r\n                                    \"undefined\" &&\r\n                                question.translated[self.ccsdk.config.language].multiSelect !==\r\n                                    \"undefined\" &&\r\n                                question.translated[self.ccsdk.config.language].multiSelect\r\n                                    .length > 0) {\r\n                                multiSelect = Array.prototype.slice.call(question.translated[self.ccsdk.config.language].multiSelect);\r\n                                if (question.presentationMode == \"Invert\") {\r\n                                    multiSelect.reverse();\r\n                                }\r\n                                options1 = self.util.generateSelectOptions(invertedMultiSelect, multiSelect);\r\n                            }\r\n                        }\r\n                        questionTemplate = acTemplate1;\r\n                        questionTemplate = questionTemplate.replace(\"{{options}}\", options1);\r\n                    }\r\n                    // console.log( questionTemplate );\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    // (window as any).ccsdkDebug?console.log(questionTemplate):'';\r\n                    break;\r\n                case \"Smile-5\":\r\n                    //get text question template and compile it.\r\n                    if (question.presentationMode == \"Invert\") {\r\n                        questionTemplate = templates_1.templates.question_smile_5_inverted;\r\n                    }\r\n                    else {\r\n                        questionTemplate = templates_1.templates.question_smile_5;\r\n                    }\r\n                    // let startRangeLabel = \"Very unlikely\";\r\n                    // let endRangeLabel = \"Very likely\";\r\n                    var startRangeLabel = \"\";\r\n                    var endRangeLabel = \"\";\r\n                    var displayLegend2 = LanguageTextFilter_1.LanguageTextFilter.translateDisplayLegend(this, question);\r\n                    if (displayLegend2) {\r\n                        if (displayLegend2.length > 0) {\r\n                            startRangeLabel = displayLegend2[0] ? displayLegend2[0] : null;\r\n                            endRangeLabel = displayLegend2[1] ? displayLegend2[1] : null;\r\n                        }\r\n                    }\r\n                    startRangeLabel = startRangeLabel == null ? \"\" : startRangeLabel;\r\n                    endRangeLabel = endRangeLabel == null ? \"\" : endRangeLabel;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    questionTemplate = questionTemplate.replace(\"{{leftLabel}}\", startRangeLabel);\r\n                    questionTemplate = questionTemplate.replace(\"{{rightLabel}}\", endRangeLabel);\r\n                    break;\r\n                case \"Star-5\":\r\n                    //get text question template and compile it.\r\n                    var startRangeLabel1 = \"\";\r\n                    var endRangeLabel1 = \"\";\r\n                    var displayLegend3 = LanguageTextFilter_1.LanguageTextFilter.translateDisplayLegend(this, question);\r\n                    if (displayLegend3) {\r\n                        if (displayLegend3.length > 0) {\r\n                            startRangeLabel1 = displayLegend3[0] ? displayLegend3[0] : null;\r\n                            endRangeLabel1 = displayLegend3[1] ? displayLegend3[1] : null;\r\n                        }\r\n                    }\r\n                    startRangeLabel1 = startRangeLabel1 == null ? \"\" : startRangeLabel1;\r\n                    endRangeLabel1 = endRangeLabel1 == null ? \"\" : endRangeLabel1;\r\n                    questionTemplate = templates_1.templates.question_star_5;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    questionTemplate = questionTemplate.replace(\"{{leftLabel}}\", startRangeLabel1);\r\n                    questionTemplate = questionTemplate.replace(\"{{rightLabel}}\", endRangeLabel1);\r\n                    break;\r\n            }\r\n        }\r\n        return questionTemplate;\r\n    };\r\n    SurveyHandler.prototype.questionCompare = function (a, b) {\r\n        return a.sequence - b.sequence;\r\n    };\r\n    SurveyHandler.prototype.getAnswerTypeFromDisplayType = function (displayType) {\r\n        // console.log('question type',displayType);\r\n        var type;\r\n        switch (displayType) {\r\n            case \"Slider\":\r\n                type = \"number\";\r\n                break;\r\n            case \"Scale\":\r\n                type = \"number\";\r\n                break;\r\n            case \"Text\":\r\n                type = \"text\";\r\n                break;\r\n            case \"Number\":\r\n                type = \"number\";\r\n                break;\r\n            case \"MultilineText\":\r\n                type = \"text\";\r\n                break;\r\n            case \"MultiSelect\":\r\n                type = \"text\";\r\n                break;\r\n            case \"Select\":\r\n                type = \"text\";\r\n                break;\r\n            case \"Dropdown\":\r\n                type = \"text\";\r\n                break;\r\n            case \"Smile-5\":\r\n                type = \"number\";\r\n                break;\r\n            case \"Star-5\":\r\n                type = \"number\";\r\n                break;\r\n            case \"Date\":\r\n                type = \"number\";\r\n                break;\r\n            default:\r\n                type = \"text\";\r\n                break;\r\n        }\r\n        return type;\r\n    };\r\n    /**\r\n     *\r\n     * filterQuestions - filters questions so that we don't display the one which satisifes any of the following condition\r\n     *  isRetired = true\r\n     *  statffFill = true\r\n     *  apiFill = true\r\n     *  preFill = true\r\n     *\r\n     * @param {any} question\r\n     * @returns\r\n     * @memberof Survey\r\n     */\r\n    SurveyHandler.prototype.filterQuestions = function () {\r\n        var self = this;\r\n        for (var _i = 0, _a = this.questions; _i < _a.length; _i++) {\r\n            var question = _a[_i];\r\n            if (!question.isRetired) {\r\n                //filter out prefill question only if it is filled?.\r\n                // if(!this.isQuestionFilled(question)){\r\n                if (this.isPrefillTags(question)) {\r\n                    self.ccsdk.debug\r\n                        ? console.log(\"prefillTags\", this.prefillResponses)\r\n                        : \"\";\r\n                    continue;\r\n                }\r\n                if (this.isPrefillNote(question)) {\r\n                    self.ccsdk.debug ? console.log(this.prefillResponses) : \"\";\r\n                    continue;\r\n                }\r\n                if (this.isPrefillDirect(question)) {\r\n                    self.ccsdk.debug ? console.log(this.prefillResponses) : \"\";\r\n                    continue;\r\n                }\r\n                if (!this.isPrefillQuestion(question)) {\r\n                    if (question.conditionalFilter === null ||\r\n                        (question.conditionalFilter != null &&\r\n                            (question.conditionalFilter.filterquestions == null ||\r\n                                question.conditionalFilter.filterquestions.length == 0))) {\r\n                        //check supported display types\r\n                        var supportedDisplayTypes = \"Slider, Scale, Text, Number, MultilineText, MultiSelect, Smile-5, Star-5, Date\";\r\n                        if (supportedDisplayTypes.indexOf(question.displayType) > -1) {\r\n                            this.questionsToDisplay.push(question);\r\n                        }\r\n                    }\r\n                    else {\r\n                        //if conditions full filled, fill it in questionsToDisplay\r\n                        if (ConditionalFlowFilter_1.ConditionalFlowFilter.filterQuestion(this, question)) {\r\n                            //auto does that\r\n                        }\r\n                        else {\r\n                            this.conditionalQuestions.push(question);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    this.fillPrefillWithTags(question);\r\n                    this.fillPrefillWithNote(question);\r\n                    ConditionalFlowFilter_1.ConditionalFlowFilter.filterQuestion(this, question);\r\n                }\r\n                // }\r\n            }\r\n        }\r\n        //re condition questions.\r\n        for (var _b = 0, _c = this.questions; _b < _c.length; _b++) {\r\n            var question = _c[_b];\r\n            // console.log(this.questionsToDisplay);\r\n            ConditionalFlowFilter_1.ConditionalFlowFilter.filterQuestion(this, question);\r\n        }\r\n        // console.log(this.conditionalQuestions);\r\n    };\r\n    SurveyHandler.prototype.isPrefillTags = function (question) {\r\n        if (typeof question.questionTags !== \"undefined\" &&\r\n            question.questionTags &&\r\n            question.questionTags.length > 0) {\r\n            for (var _i = 0, _a = question.questionTags; _i < _a.length; _i++) {\r\n                var tag = _a[_i];\r\n                switch (tag.toLowerCase()) {\r\n                    case \"screensize\":\r\n                        //add size to prefill array\r\n                        this.fillPrefillQuestion(question.id, \"Width:\" +\r\n                            window.innerWidth +\r\n                            \"px / Height:\" +\r\n                            window.innerHeight +\r\n                            \"px\", \"text\");\r\n                        return true;\r\n                    // Token prefill\r\n                    case 'cc_token':\r\n                        this.fillPrefillQuestion(question.id, this.surveyToken, 'text');\r\n                        return true;\r\n                    // Channel prefill\r\n                    case 'cc_channel':\r\n                        this.fillPrefillQuestion(question.id, 'MicroSurvey', 'text');\r\n                        return true;\r\n                    // currentURL\r\n                    case 'cc_currenturl':\r\n                        this.fillPrefillQuestion(question.id, window.location.href, 'text');\r\n                        return true;\r\n                    // partial response\r\n                    case 'cc_partialresponseid':\r\n                        this.fillPrefillQuestion(question.id, this.surveyData.partialResponseId, 'text');\r\n                        return true;\r\n                    default:\r\n                        if (typeof this.prefillWithTags[tag.toLowerCase()] != \"undefined\") {\r\n                            var type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n                            this.fillPrefillQuestion(question.id, this.prefillWithTags[tag.toLowerCase()], type);\r\n                            return true;\r\n                        }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    SurveyHandler.prototype.isPrefillNote = function (question) {\r\n        if (typeof question.note !== \"undefined\" &&\r\n            question.note != null &&\r\n            question.note.length > 0 &&\r\n            this.prefillWithNote[question.note.toLowerCase()]) {\r\n            var type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n            this.fillPrefillQuestion(question.id, this.prefillWithNote[question.note.toLowerCase()], type);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    SurveyHandler.prototype.isPrefillDirect = function (question) {\r\n        if (typeof question !== \"undefined\" && this.prefillDirect[question.id]) {\r\n            var type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n            this.fillPrefillQuestion(question.id, this.prefillDirect[question.id], type);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    SurveyHandler.prototype.fillPrefillWithTags = function (question) {\r\n        window.ccsdkDebug\r\n            ? console.log(\"fillprefillwithtags\", this.prefillWithTags)\r\n            : \"\";\r\n        if (typeof question.questionTags !== \"undefined\" &&\r\n            question.questionTags.length > 0) {\r\n            for (var _i = 0, _a = question.questionTags; _i < _a.length; _i++) {\r\n                var tag = _a[_i];\r\n                window.ccsdkDebug\r\n                    ? console.log(\"fillprefillwithtags\", tag)\r\n                    : \"\";\r\n                if (typeof this.prefillWithTags[tag.toLowerCase()] !== \"undefined\") {\r\n                    window.ccsdkDebug\r\n                        ? console.log(\"prefil \", tag.toLowerCase(), this.prefillWithTags[tag.toLowerCase()], this.prefillWithTags)\r\n                        : \"\";\r\n                    var type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n                    this.fillPrefillQuestion(question.id, this.prefillWithTags[tag.toLowerCase()], type);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    SurveyHandler.prototype.fillPrefillWithNote = function (question) {\r\n        if (typeof question.note !== \"undefined\" &&\r\n            question.note != null &&\r\n            question.note.length > 0) {\r\n            if (typeof this.prefillWithNote[question.note.toLowerCase()] !== \"undefined\") {\r\n                var type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n                this.fillPrefillQuestion(question.id, this.prefillWithNote[question.note.toLowerCase()], type);\r\n            }\r\n        }\r\n    };\r\n    SurveyHandler.prototype.getConditionalSurveyQuestions = function () {\r\n        return this.conditionalQuestions;\r\n    };\r\n    SurveyHandler.prototype.isPrefillQuestion = function (question) {\r\n        if (question.apiFill == true) {\r\n            return true;\r\n        }\r\n        if (question.staffFill == true) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    SurveyHandler.prototype.isQuestionFilled = function (question) {\r\n        for (var _i = 0, _a = this.prefillResponses; _i < _a.length; _i++) {\r\n            var response = _a[_i];\r\n            if (response.questionId == question.questionId) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    SurveyHandler.prototype.removePrevListener = function (id) {\r\n        for (var _i = 0, _a = this.domListeners; _i < _a.length; _i++) {\r\n            var listener = _a[_i];\r\n            if (listener.id == id) {\r\n                var index = this.domListeners.indexOf(listener);\r\n                window.ccsdkDebug ? console.log(\"removing listener\", id) : \"\";\r\n                window.ccsdkDebug\r\n                    ? console.log(\"removing listener index\", index)\r\n                    : \"\";\r\n                this.util.removeListener(document.querySelectorAll(\"body\")[0], listener.type, listener.internalHandler);\r\n                if (index > -1) {\r\n                    this.domListeners.splice(index, 1);\r\n                }\r\n                window.ccsdkDebug ? console.log(this.domListeners) : \"\";\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    SurveyHandler.prototype.destroySurvey = function () {\r\n        var self = this;\r\n        document.addEventListener(\"ccclose\", this.destroySurveyCb);\r\n    };\r\n    SurveyHandler.prototype.destroy = function () {\r\n        var surveyContainer = this.ccsdk.dom.getSurveyContainer(this.surveyToken);\r\n        var welcomeContainer = this.ccsdk.dom.getWelcomeContainer(this.surveyToken);\r\n        if (typeof surveyContainer != \"undefined\") {\r\n            this.util.remove(surveyContainer);\r\n        }\r\n        if (typeof welcomeContainer != \"undefined\") {\r\n            this.util.remove(welcomeContainer);\r\n        }\r\n        document.removeEventListener(\"ccclose\", this.destroySurveyCb);\r\n        document.removeEventListener(\"ccdone\", this.displayThankYouCb);\r\n        document.removeEventListener(\"q-answered\", this.acceptAnswersCb);\r\n        window.globalSurveyRunning = false;\r\n        // let bodyElement = <HTMLElement>document.\r\n        //   getElementsByTagName( \"body\" )[ 0 ];\r\n        // this.util.removeClass( bodyElement, \"blurr\" );\r\n    };\r\n    return SurveyHandler;\r\n}());\r\nexports.SurveyHandler = SurveyHandler;\r\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(17);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = __webpack_require__(19)(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {}\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(18)();\n// imports\n\n\n// module\nexports.push([module.i, typeof document !== 'undefined' && document.getElementsByTagName('html')[0].getAttribute('dir') === 'rtl' ? \".cc-sdk ul{padding-right:0;list-style-type:none;margin:0}.cc-sdk a,.cc-sdk a:focus,.cc-sdk a:hover{text-decoration:none;color:inherit}.cc-sdk *,.cc-sdk :after,.cc-sdk :before{box-sizing:border-box}.cc-sdk p{color:inherit;margin:0}.cc-sdk map area{outline:0;cursor:pointer}.cc-sdk map area.selected{outline:0;outline-color:#0a2135;outline-width:0;outline-style:solid}.cc-sdk map area:hover{outline:1}.cc-sdk.cc-popup-container{background:#fff;box-shadow:0 0 4px 5px rgba(0,0,0,.05);font-family:open sans,sans-serif;position:fixed;text-align:center;max-width:500px;max-height:500px;z-index:1111}@media (min-width:768px){.cc-sdk.cc-popup-container{padding:10px}}.cc-sdk.cc-popup-container.bottom{margin-bottom:9px}.cc-sdk.cc-popup-container.top{margin-top:9px}.cc-sdk #cc-thankyou-container .cc-question-container__text p{word-break:break-word}.cc-sdk #cc-thankyou-container .cc-question-container__text,.cc-sdk #cc-thankyou-container .cc-question-container__text p{width:400px;max-width:none;font-size:17px;color:#424242}.cc-sdk .cc-message-box{position:relative;z-index:11}.cc-sdk .cc-message-box__text{color:#424242;font-size:14px;font-weight:600;margin:0;padding:29px 14px 20px;vertical-align:middle}.cc-sdk .cc-message-box__btn{background:#fdaf19;border-radius:100px;display:inline-block;font-size:15px;font-weight:700;height:32px;padding:6px 0;width:124px;text-align:center}.cc-sdk.cc-popup-container .cc-popup-container__close{cursor:pointer;margin:4px;position:absolute;left:0;top:0;z-index:111}.cc-sdk .cc-popup-container-2{height:144px;position:fixed;width:100%;z-index:1111}.cc-sdk .cc-popup-container-2.bottom{bottom:0}.cc-sdk .cc-popup-container-2__icons{cursor:pointer;padding:8px;position:absolute;top:0;z-index:111}.cc-sdk .top.cc-popup-container-2 .cc-popup-container-2__icons{padding-top:15px}.cc-sdk .cc-popup-container-2__icons.cc-right-icon{left:0}.cc-sdk .cc-popup-container-2__icons.cc-left-icon{right:0}.cc-sdk .cc-popup-container__back{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);display:inline-block;width:21px;height:21px}.cc-sdk .cc-question-container{padding:20px 20px 25px;position:absolute;text-align:center;width:100%;z-index:11;top:0;right:0}.cc-sdk .cc-question-container__text{color:#424242;display:inline-block;font-size:15px;font-weight:600;max-width:230px;padding:8px 0;text-align:center;vertical-align:middle;width:20%;position:relative}.cc-sdk .cc-question-container__text p{word-break:break-word}.cc-sdk .cc-question-container[data-type=csat] .cc-question-container__text{width:11em}.cc-sdk .cc-question-container[data-type=csat] .cc-question-container__list{width:64vw}.cc-sdk .cc-question-container__required,.cc-sdk .cc-question-container__validation{position:absolute;top:-14px;font-size:11px;right:0;width:100%;left:0;font-weight:400;color:#c1272d;display:none}.cc-sdk .cc-question-container__required-label{display:inline-block;position:relative;top:-2px;right:-2px}.cc-sdk .cc-question-container__content{display:inline-block;max-width:78%;vertical-align:middle;width:auto}.cc-sdk .cc-question-container__list li{display:inline-block;padding-right:29px;vertical-align:middle}.cc-sdk .cc-question-container__list li span{display:table-cell;font-size:15px;padding-right:15px;text-align:right;vertical-align:middle;width:125px}.cc-sdk .cc-question-container__list li input{vertical-align:middle}.cc-sdk .cc-question-container:before{content:\\\"\\\";display:inline-block;height:100%;margin-left:-4px;vertical-align:middle}.cc-sdk .cc-question-container{height:100%;vertical-align:middle}.cc-sdk .cc-questions-container{height:100%}.cc-sdk p.cc-thankyou-powered{font-size:13px!important;color:#404040!important;font-style:italic;margin-top:4px}.cc-sdk p.cc-thankyou-powered.no-branding{display:none}.cc-sdk .cc-thankyou-powered .cc-thankyou-logo{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/cc-thankyou-logo.svg\\\");background-size:cover;margin-left:8px;display:inline-block;width:16px;height:16px}.cc-sdk .multiline-box{background:#fff;border-radius:2px;border:1px solid #6d6d6d;font-family:Open Sans;font-size:15px;height:70px;margin:0 50px 0 0;min-width:600px;padding:2px 5px;resize:none}.cc-sdk .multiline-box:focus{outline:0}.cc-sdk .detail-box .cc-question-container__text p{font-size:13px;font-weight:700}.cc-sdk .detail-box .cc-question-container__text span{display:inline-block;font-size:15px;font-weight:400}.cc-sdk .detail-box .cc-question-container__text{height:56px}.cc-sdk .detail-box[data-type=singleline] .cc-question-container__text{margin-left:20px}.cc-sdk .detail-box .cc-question-container__content .cc-sdk-form-control,.cc-sdk .single-line .cc-question-container__content .cc-sdk-form-control{background:transparent;border:none;border-bottom:1px solid #6d6d6d;font-family:open sans;font-size:15px;line-height:26px;outline:0;width:300px;margin-right:70px}.cc-sdk .d-star-box.detail-box .cc-question-container__text{height:92px}.cc-sdk .hl.dropdown{background-image:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/arrow-down.black.svg\\\");background-position:3%;background-repeat:no-repeat;border-bottom:1px solid #6d6d6d;display:inline-block;padding:5px;position:relative;text-align:right;width:300px}.cc-sdk .drop-cc-question-container .cc-question-container__text{margin-left:20px}.cc-sdk .cc-sdk-form-control:focus{border-color:#fcaf18}.cc-sdk .detail-box .cc-question-container__content{padding-right:0}.cc-sdk .cc-big-list-container .cc-question-container__list{display:table;width:100%}.cc-sdk .cc-big-list-container .cc-question-container__list li{display:table-cell;vertical-align:middle}.cc-sdk .cc-thankyou-container{width:100%!important}.cc-sdk .submit-icon{direction:rtl;position:absolute;left:0;top:0;bottom:0;margin:auto 0;z-index:11;margin-left:75px;font-size:16px;cursor:pointer;width:47px;height:47px}@media (min-width:1000px){.cc-sdk .cc-big-list-container .cc-question-container__list li span label{overflow:hidden;max-height:100px;display:block}}@media (min-width:769px) and (max-width:875px){.cc-sdk .cc-question-container__list li{padding-right:0!important}}@media (min-width:769px) and (max-width:1024px){.cc-sdk .cc-popup-container-2{height:200px}.cc-sdk .cc-big-list-container .cc-question-container__list,.cc-sdk .cc-question-container__list{text-align:right}.cc-sdk .cc-big-list-container .cc-question-container__list li,.cc-sdk .cc-question-container__list li{display:inline-block;margin-bottom:15px;vertical-align:middle;width:49%}.cc-sdk .cc-question-container__content{display:inline-block;width:45%}.cc-sdk .multiline-box{min-width:100%;margin:0}.cc-sdk .option-smile-box img,.cc-sdk .option-star-box img{margin-left:11px!important}.cc-sdk .cc-thankyou-container .cc-question-container__text,.cc-sdk .cc-thankyou-container .cc-question-container__text p{width:100%!important;text-align:center;margin:0!important;padding:0;line-height:normal;height:auto}.cc-sdk .cc-thankyou-container .cc-question-container__text{max-width:98%}}@media (min-width:1000px){.cc-sdk .cc-question-container__text p{max-height:100px;overflow:hidden;max-width:140ch}.cc-sdk .cc-question-container__text p.ellipsis:after{content:\\\"...\\\";text-align:left;bottom:9px;left:-3px;width:12px;display:block;position:absolute;height:1.2em}}@media (min-width:769px) and (max-width:992px){.cc-sdk .cc-question-container{width:100%;margin:auto}.cc-sdk .cc-question-container__text{width:24%;padding-left:20px}.cc-sdk .cc-question-container__text p{max-height:110px;overflow:hidden}.cc-sdk .cc-question-container__content.rating-color{margin-right:0}.cc-sdk .submit-icon{margin-left:40px!important}.cc-sdk .cc-question-container__content.rating-color{margin-right:0!important}.cc-sdk .cc-question-container__content{width:50%!important}}@media (max-width:768px){.cc-sdk .cc-survey-container,.cc-sdk .cc-survey-content{height:100%}.cc-sdk .cc-popup-container-2{bottom:auto;height:100%;top:0}.cc-sdk .cc-popup-container-2__icons.cc-right-icon{right:auto;left:0;padding:0}.cc-sdk .cc-popup-container-2__icons.cc-left-icon{right:0;left:auto;padding:0}.cc-sdk .cc-big-list-container .cc-question-container__list li,.cc-sdk[dir=rtl] .cc-big-list-container .cc-question-container__list li{display:block}.cc-sdk .radio-toggle--more-option li span{width:84%!important;padding-right:25px!important}.cc-sdk .radio-toggle--more-option li{padding-left:0!important;display:block!important;padding-top:10px}.cc-sdk .detail-box .cc-question-container__content{padding-right:0}.cc-sdk .cc-question-container{bottom:75px;height:auto;right:0;padding:40px 20px;position:absolute;text-align:right;top:auto;width:100%}.cc-sdk .cc-question-container__text{font-size:18px;margin-bottom:20px;max-width:400px;text-align:right;width:100%}.cc-sdk .cc-question-container__content{display:block;max-width:100%;width:100%}.cc-sdk .cc-question-container__list label{display:block}.cc-sdk .cc-question-container__list li span{width:auto;padding-right:15px}.cc-sdk .cc-question-container__list li{padding-right:0;margin-bottom:10px;display:block}.cc-sdk .cc-popup-container-2__icons{margin:20px}.cc-sdk .cc-popup-container-2__icons.left-icon{right:auto;left:0}.cc-sdk .cc-popup-container-2__icons.right-icon{left:auto;right:0}.cc-sdk .cc-popup-container__close{width:27px}.cc-sdk .cc-question-container__content.rating-color{margin-right:0!important}.cc-sdk .cc-question-container[data-type=nps] .cc-question-container__content,.cc-sdk .cc-question-container[data-type=scale] .cc-question-container__content{width:100%!important}.cc-sdk .multiline-box{height:150px;margin:0;min-width:100%;width:100%}.cc-sdk .detail-box .cc-question-container__content .cc-sdk-form-control,.cc-sdk .hl.dropdown{width:100%}.cc-sdk .detail-box .cc-question-container__text p{font-size:18px}.cc-sdk .mobile-detail-box .cc-question-container__text{height:auto}.cc-sdk .cc-question-container__text p{max-height:auto}.cc-sdk .welcome-box .cc-question-container__text p{color:#fff}.cc-sdk .cc-questions-container{height:100%;position:relative}.cc-sdk .cc-message-box__btn{margin-right:20px}}@media (max-width:768px){.cc-sdk .detail-box .cc-question-container__content .cc-sdk-form-control,.cc-sdk .single-line .cc-question-container__content .cc-sdk-form-control{margin-right:0}.cc-sdk .submit-icon{position:absolute;right:20px;top:auto;bottom:30px;padding-left:0}.cc-sdk.cc-popup-container{position:fixed;bottom:0;right:0;left:0;margin:0!important;width:100%;height:13em;max-width:100%;max-height:100%;text-align:right;background:transparent}.cc-sdk.cc-popup-container .cc-message-box{position:absolute;bottom:20%}.cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text{font-size:20px}.cc-sdk.cc-popup-container .cc-message-box .submit-icon{position:absolute;bottom:-100%;top:auto;right:0;margin:0 14px}.cc-sdk.cc-popup-container .cc-popup-container__close{margin:20px;left:0;top:0}.cc-sdk.cc-popup-container__back{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);display:inline-block;width:27px;height:27px;background-size:100%}.cc-sdk .cc-thankyou-container .cc-question-container__text,.cc-sdk .cc-thankyou-container .cc-question-container__text p{width:100%!important;text-align:center;margin:0!important;padding:0;line-height:normal;height:auto}.cc-sdk .cc-thankyou-container .cc-question-container__text{max-width:98%}}.date-s,.date-y{display:inline-block;margin:0 12px!important;width:80px!important}.date-error{color:red;font-style:italic;visibility:hidden;margin-top:12px}.date-error.show-error{visibility:visible}[dir=rtl].cc-sdk ul{padding-left:0}[dir=rtl].cc-sdk.cc-popup-container .cc-popup-container__close{left:auto;right:0;top:0}[dir=rtl].cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text{text-align:left}[dir=rtl].cc-sdk .cc-popup-container__back{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_rtl_.svg)}[dir=rtl].cc-sdk .cc-popup-container-2__icons.cc-right-icon{left:auto;right:0}[dir=rtl].cc-sdk .cc-popup-container-2__icons.cc-left-icon{left:0;right:auto}[dir=rtl].cc-sdk.cc-question-container{margin-right:0;margin-left:0;left:0;right:auto}[dir=rtl].cc-sdk .cc-question-container__required,[dir=rtl].cc-sdk .cc-question-container__validation{left:0;right:auto}[dir=rtl].cc-sdk .cc-question-container__required-label{top:-2px;left:-2px;right:auto}[dir=rtl].cc-sdk .cc-question-container__list li{display:inline-block;padding-left:15px!important;padding-right:15px!important;vertical-align:middle}[dir=rtl].cc-sdk .cc-question-container[data-type=checkbox] .cc-question-container__list li{padding-left:0!important}[dir=rtl].cc-sdk .cc-question-container__list li span{padding-left:15px;padding-right:0;text-align:left}[dir=rtl].cc-sdk .cc-question-container:before{margin-right:-4px;margin-left:0}[dir=rtl].cc-sdk .multiline-box{margin:0 0 0 50px}[dir=rtl].cc-sdk .hl.dropdown{background-position:3%;text-align:left}[dir=rtl].cc-sdk .drop-cc-question-container .cc-question-container__text{margin-right:20px;margin-left:0}[dir=rtl].cc-sdk .detail-box .cc-question-container__content{padding-left:0;padding-right:0}[dir=rtl].cc-sdk .cc-question-container__content{text-align:left}@media (min-width:769px) and (max-width:1024px){[dir=rtl].cc-sdk .cc-big-list-container .cc-question-container__list,[dir=rtl].cc-sdk .cc-question-container__list{text-align:left}[dir=rtl].cc-sdk .multiline-box{margin:0}}@media (min-width:769px) and (max-width:992px){[dir=rtl].cc-sdk .cc-question-container__text{padding-right:20px;padding-left:0}[dir=rtl].cc-sdk .cc-question-container__content.rating-color{margin-right:0;margin-left:0}}@media (max-width:768px){[dir=rtl].cc-sdk .cc-popup-container-2__icons.cc-right-icon{right:0;left:auto}[dir=rtl].cc-sdk .cc-popup-container-2__icons.cc-left-icon{right:auto;left:0}[dir=rtl].cc-sdk .radio-toggle--more-option li span{padding-left:25px!important;padding-right:0!important}[dir=rtl].cc-sdk .radio-toggle--more-option li{padding-left:0!important;padding-right:0!important}[dir=rtl].cc-sdk .detail-box .cc-question-container__content{padding-right:0;padding-left:0}[dir=rtl].cc-sdk .cc-question-container{right:auto;left:0}[dir=rtl].cc-sdk .multiline-box{margin:0}[dir=rtl].cc-sdk .cc-question-container__text{text-align:left;width:100%;margin-left:5px;max-width:100%}[dir=rtl].cc-sdk .cc-question-container__list li span{padding-left:15px;padding-right:0}[dir=rtl].cc-sdk .cc-question-container__list li{padding-right:0;padding-left:0}[dir=rtl].cc-sdk .cc-popup-container-2__icons.left-icon{right:0;left:auto}[dir=rtl].cc-sdk .cc-popup-container-2__icons.right-icon{left:0;right:auto}[dir=rtl].cc-sdk .cc-question-container__content.rating-color{margin-right:0!important;margin-left:0!important}}.cc-sdk .option-number-item{color:#fff;float:right;font-size:13px;height:38px;box-sizing:border-box;padding-top:10px;text-align:center;width:8.5%;margin-right:1px;margin-left:0;cursor:pointer}.cc-sdk .option-number-item.option-zero{background:#853838}.cc-sdk .option-number-item.option-zero.selected,.cc-sdk .option-number-item.option-zero:hover{background:#572526}.cc-sdk .option-number-item.option-one{background:#9e4343}.cc-sdk .option-number-item.option-one.selected,.cc-sdk .option-number-item.option-one:hover{background:#642728}.cc-sdk .option-number-item.option-two{background:#c14d4d}.cc-sdk .option-number-item.option-two.selected,.cc-sdk .option-number-item.option-two:hover{background:#712827}.cc-sdk .option-number-item.option-three{background:#d94d4d}.cc-sdk .option-number-item.option-three.selected,.cc-sdk .option-number-item.option-three:hover{background:#7c2828}.cc-sdk .option-number-item.option-four{background:#ee4d4d}.cc-sdk .option-number-item.option-four.selected,.cc-sdk .option-number-item.option-four:hover{background:#852828}.cc-sdk .option-number-item.option-five{background:#ff4d4d}.cc-sdk .option-number-item.option-five.selected,.cc-sdk .option-number-item.option-five:hover{background:#844828}.cc-sdk .option-number-item.option-six{background:#ff8c4d}.cc-sdk .option-number-item.option-six.selected,.cc-sdk .option-number-item.option-six:hover{background:#844828}.cc-sdk .option-number-item.option-seven{background:#ffc74d}.cc-sdk .option-number-item.option-seven.selected,.cc-sdk .option-number-item.option-seven:hover{background:#856728}.cc-sdk .option-number-item.option-eight{background:#f5eb4d}.cc-sdk .option-number-item.option-eight.selected,.cc-sdk .option-number-item.option-eight:hover{background:#7f7a28}.cc-sdk .option-number-item.option-nine{background:#73ca81}.cc-sdk .option-number-item.option-nine.selected,.cc-sdk .option-number-item.option-nine:hover{background:#3b6942}.cc-sdk .option-number-item.option-ten{background:#4db47c}.cc-sdk .option-number-item.option-ten.selected,.cc-sdk .option-number-item.option-ten:hover{background:#285e40}.cc-sdk .option-number-item.option-7-scale-1,.cc-sdk .option-number-item.option-7-scale-2,.cc-sdk .option-number-item.option-7-scale-3{background:#ed534f}.cc-sdk .option-number-item.option-7-scale-4,.cc-sdk .option-number-item.option-7-scale-5{background:#ffbc00}.cc-sdk .option-number-item.option-7-scale-6,.cc-sdk .option-number-item.option-7-scale-7{background:#4db47c}.cc-sdk .option-number-item.option-5-scale-1,.cc-sdk .option-number-item.option-5-scale-2{background:#ed534f}.cc-sdk .option-number-item.option-5-scale-3{background:#ffbc00}.cc-sdk .option-number-item.option-5-scale-4,.cc-sdk .option-number-item.option-5-scale-5{background:#4db47c}.cc-sdk .cc-question-container[data-type=nps] .option-number-item{width:calc(9.09% - 1px)}.cc-sdk .cc-question-container[data-type=scale].scale-image-container .option-number-item{width:8.4%}.cc-sdk .cc-question-container__content.rating-color{margin-right:74px}.cc-sdk .option-left-rating-text,.cc-sdk .option-mid-rating-text,.cc-sdk .option-midnps-rating-text,.cc-sdk .option-right-rating-text{color:#424242;font-size:13px;right:0;position:absolute}.cc-sdk .option-midnps-rating-text{right:calc(7 * 9.09% - 1px)}.cc-sdk .option-left-rating-text-small-container{max-width:57px;text-align:right;max-height:37px;overflow:hidden}.cc-sdk .option-mid-rating-text-small-container,.cc-sdk .option-right-rating-text-small-container{max-width:57px;text-align:left;max-height:37px;overflow:hidden}.cc-sdk .option-left-rating-text-small-container-smile{width:40%;text-align:right;max-height:37px;overflow:hidden;bottom:auto!important;top:57px}.cc-sdk .option-right-rating-text-small-container-smile{width:40%;text-align:left;max-height:37px;overflow:hidden;bottom:auto!important;top:57px}.cc-sdk .cc-question-container[data-type=smile] .option-left-rating-text,.cc-sdk .cc-question-container[data-type=star] .option-left-rating-text{right:4px;width:40%;text-align:right}.cc-sdk .option-right-rating-text{right:auto;left:0}.cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,.cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{text-align:left;width:40%}.cc-sdk .cc-question-container[data-type=scale] .option-number-item{width:38px;margin:0 .5px;cursor:pointer;display:inline-block;float:none}.cc-sdk .cc-question-container[data-type=scale] .cc-question-container__list{display:inline-block;width:auto;position:relative}.cc-sdk .cc-question-container[data-type=scale].scale-image-container .cc-question-container__list{width:100%}.cc-sdk .rating-color{position:relative}.cc-sdk .option-smile-box,.cc-sdk .option-star-box{height:60px;margin-left:29px;width:60px;cursor:pointer;box-sizing:border-box;border:4px solid transparent;border-radius:50%;display:inline-block;background-size:100%}.cc-sdk:not([dir=rtl]) .option-smile-box:nth-child(5),.cc-sdk:not([dir=rtl]) .option-star-box:nth-child(5),.cc-sdk[dir=rtl] .option-smile-box:first-child,.cc-sdk[dir=rtl] .option-star-box:first-child{margin-left:0}.cc-sdk .option-smile-box.cc-one{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-two{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-three{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-four{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-five{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-one.selected,.cc-sdk .option-smile-box.cc-one:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-two.selected,.cc-sdk .option-smile-box.cc-two:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-three.selected,.cc-sdk .option-smile-box.cc-three:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-four.selected,.cc-sdk .option-smile-box.cc-four:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-five.selected,.cc-sdk .option-smile-box.cc-five:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .cc-csat.cc-question-container__content.rating-color{margin-right:45px}.cc-sdk .option-csat.option-smile-box,.cc-sdk .option-csat.option-smile-box.selected,.cc-sdk .option-csat.option-smile-box:hover{background-size:25px;background-position:18px}.cc-sdk .option-csat{height:30px;margin-left:68px;width:30px;padding-right:50px;height:45px;margin-left:0;width:auto;padding-right:0;font-size:14px;vertical-align:middle;display:inline-block;margin-left:13px}.cc-sdk .option-csat span{display:inline-block;vertical-align:top;font-size:12px;padding-right:25px;position:relative;text-align:right;width:100%}.cc-sdk .option-csat .cc-checkbox label{pointer-events:none}.cc-sdk .option-star-box{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-star-box.selected,.cc-sdk .option-star-box:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star_selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .cc-question-container[data-type=slider] .option-left-rating-text{right:4px;width:40%;text-align:right}.cc-sdk .cc-question-container[data-type=slider] .option-right-rating-text{width:40%;text-align:left}.cc-sdk .cc-question-container[data-type=smile] .cc-question-container__list,.cc-sdk .cc-question-container[data-type=star] .cc-question-container__list{position:relative;width:auto;display:inline-block}.cc-sdk .circle-image{margin:auto;width:253px;overflow:hidden;height:240px;position:relative}.cc-sdk .circle-image-scale-010-neutral{width:242px;overflow:hidden;height:230px;margin:auto}.cc-sdk .cc-nps-selected-rating{font-size:100px;display:inline-block;position:absolute;top:0;right:0;line-height:100px;left:0;margin:auto;bottom:0;width:110px;height:100px;text-align:center;font-weight:100;color:#bbb}.cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,.cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{left:4px}.cc-sdk .option-number-item.option-scale{background:#4db47c}.cc-sdk .option-number-item.option-scale.selected,.cc-sdk .option-number-item.option-scale:hover{background:#712827}.cc-sdk .cc-nps-image{cursor:pointer;position:relative;right:0}.cc-sdk .legend-container{position:relative}@media (min-width:769px) and (max-width:992px){.cc-sdk .option-smile-box,.cc-sdk .option-star-box{width:50px;height:50px;margin-left:10px}.cc-sdk .option-csat.option-smile-box,.cc-sdk .option-csat.option-smile-box.selected,.cc-sdk .option-csat.option-smile-box:hover{display:inline-block;width:168px;background-position:48px}.cc-sdk .option-csat.option-smile-box.selected span,.cc-sdk .option-csat.option-smile-box:hover span,.cc-sdk .option-csat.option-smile-box span{padding-right:40px}}@media screen and (min-width:992px){.cc-sdk span.option-csat.option-smile-box,.cc-sdk span.option-csat.option-smile-box.selected,.cc-sdk span.option-csat.option-smile-box:hover{background-position:44px}.cc-sdk span.option-csat.option-smile-box span{padding-right:40px}}@media (max-width:768px){.cc-sdk .option-smile-box,.cc-sdk .option-star-box{display:inline-block;margin-left:3px}.cc-sdk .option-csat.option-smile-box,.cc-sdk .option-csat.option-smile-box.selected,.cc-sdk .option-csat.option-smile-box:hover{display:block;background-size:40px;background-position:45px}.cc-sdk .option-csat.option-smile-box{height:65px;width:100%}.cc-sdk .option-csat.option-smile-box span{font-size:15px;padding-right:40px}.cc-sdk .option-csat.option-smile-box .cc-checkbox{top:calc(50% - 12.5px);height:57px}.cc-sdk .option-csat.option-smile-box .cc-checkbox.cc-radio label:before,.cc-sdk .option-csat.option-smile-box .cc-checkbox input[type=radio]:checked+label:after{width:25px;height:25px}.cc-sdk .option-number-item{color:#fff;float:right;font-size:15px;height:35px;box-sizing:border-box;margin-left:1px;padding-top:7px;text-align:center;width:38px;cursor:pointer;vertical-align:middle}.cc-sdk .cc-question-container[data-type=scale]{bottom:106px}.cc-sdk .cc-question-container[data-type=scale] .option-left-rating-text,.cc-sdk .cc-question-container[data-type=scale] .option-mid-rating-text,.cc-sdk .cc-question-container[data-type=scale] .option-right-rating-text{width:auto}.cc-sdk .cc-question-container[data-type=scale] .option-right-rating-text{text-align:left}.cc-sdk .option-smile-box img,.cc-sdk .option-star-box img{padding-left:5px;margin-left:0}.cc-sdk .cc-question-container[data-type=nps] .cc-question-container__content{width:100%!important}.cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,.cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{left:10px}.cc-sdk .cc-question-container[data-type=csat] .cc-question-container__list li,.cc-sdk .cc-question-container[data-type=scale] .cc-question-container__list{width:100%}}@media (max-width:381px){.cc-sdk .option-smile-box,.cc-sdk .option-star-box{display:inline-block;margin-left:0;height:50px;width:50px}.cc-sdk .option-smile-box img,.cc-sdk .option-star-box img{padding-left:5px;margin-left:0}}@media screen and (max-width:768px){.cc-sdk .cc-question-container[data-type=scale] span.radial-legend-right,.cc-sdk .radial-legend-right{text-align:right;width:35%;left:0}.cc-sdk .radial-legend-mid{width:35%;text-align:center;right:0;left:0;display:none}.cc-sdk .radial-legend-left{width:35%;text-align:left;right:0}}[dir=rtl].cc-sdk .cc-question-container[data-type=csat] .cc-question-container__content.rating-color{margin-left:45px;margin-right:0}[dir=rtl].cc-sdk .cc-question-container[data-type=csat] .cc-checkbox input[type=radio]{margin-left:0;opacity:0;outline:0}[dir=rtl].cc-sdk .option-number-item{margin-left:1px;margin-right:0;float:left}[dir=rtl].cc-sdk .cc-question-container__content.rating-color{margin-left:74px;margin-right:0}[dir=rtl].cc-sdk .option-right-rating-text{right:calc(100% - 418px);left:auto!important}[dir=rtl].cc-sdk .option-left-rating-text{left:0;right:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=nps] .option-right-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=scale] .option-right-rating-text{right:0;left:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=scale] .option-left-rating-text{left:2px}[dir=rtl].cc-sdk .cc-question-container[data-type=slider] .option-right-rating-text{right:0;width:40%;text-align:right}[dir=rtl].cc-sdk .cc-question-container[data-type=slider] .option-left-rating-text{left:0;text-align:left}[dir=rtl].cc-sdk .rating-color{position:relative}[dir=rtl].cc-sdk .option-smile-box img{margin-left:29px;margin-right:0}[dir=rtl].cc-sdk .option-star-box img{margin-right:19px;margin-left:0}[dir=rtl].cc-sdk .option-csat.option-smile-box span{padding-left:25px;text-align:left;padding-right:0}[dir=rtl].cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{right:7px;left:auto!important;text-align:right}[dir=rtl].cc-sdk .cc-question-container[data-type=smile] .option-left-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=star] .option-left-rating-text{left:7px;right:auto!important;text-align:left}[dir=rtl].cc-sdk .option-csat{width:auto;box-sizing:border-box;padding-right:0;margin-left:13px}[dir=rtl].cc-sdk .option-csat.option-smile-box,[dir=rtl].cc-sdk .option-csat.option-smile-box.selected,[dir=rtl].cc-sdk .option-csat.option-smile-box:hover{background-position:calc(100% - (100% - 44px)) 50%;text-align:left}@media (min-width:769px) and (max-width:992px){[dir=rtl].cc-sdk .option-smile-box img,[dir=rtl].cc-sdk .option-star-box img{margin-right:0;margin-left:10px}[dir=rtl].cc-sdk .cc-question-container__content.rating-color{margin-left:10px;margin-right:86px!important}[dir=rtl].cc-sdk .cc-question-container[data-type=nps] .option-right-rating-text{right:17px;left:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{right:7px;text-align:right;left:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=smile] .option-left-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=star] .option-left-rating-text{left:20px;right:auto!important;text-align:left}[dir=rtl].cc-sdk .option-csat.option-smile-box,[dir=rtl].cc-sdk .option-csat.option-smile-box.selected,[dir=rtl].cc-sdk .option-csat.option-smile-box:hover{width:auto}}@media (max-width:768px){[dir=rtl].cc-sdk .option-smile-box img,[dir=rtl].cc-sdk .option-star-box img{padding-left:0;padding-right:5px;margin-left:0;margin-right:0}[dir=rtl].cc-sdk .cc-question-container[data-type=csat] .cc-checkbox input[type=radio]{margin-left:7px;opacity:0;outline:0}[dir=rtl].cc-sdk .option-csat.option-smile-box,[dir=rtl].cc-sdk .option-csat.option-smile-box.selected,[dir=rtl].cc-sdk .option-csat.option-smile-box:hover{background-position:calc(100% - (100% - 44px)) 50%}[dir=rtl].cc-sdk .option-csat.option-smile-box span{padding-left:39px;text-align:left;padding-right:0}[dir=rtl].cc-sdk .cc-question-container[data-type=smile] .option-left-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=star] .option-left-rating-text,[dir=rtl].cc-sdk .option-left-rating-text{left:10px;right:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{left:auto!important}[dir=rtl].cc-sdk .option-right-rating-text{right:calc(100% - 322px);left:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=scale] .option-right-rating-text{right:13px;left:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=nps] .radial-legend-right,[dir=rtl].cc-sdk .cc-question-container[data-type=scale] .radial-legend-right{right:auto!important;left:10px!important}[dir=rtl].cc-sdk .cc-question-container[data-type=nps] .radial-legend-left,[dir=rtl].cc-sdk .cc-question-container[data-type=scale] .radial-legend-left{left:auto!important;right:10px!important}}@media (max-width:381px){[dir=rtl].cc-sdk .option-right-rating-text{right:calc(100% - 258px);left:auto!important}}.cc-sdk .cc-select-wrapper{position:relative;display:inline-block;user-select:none;z-index:11}.cc-sdk .cc-select-wrapper select{display:none}.cc-sdk .cc-select{position:relative;display:inline-block;margin-right:70px}.cc-sdk .cc-select-trigger{display:block;width:130px;padding:0 22px 0 84px;font-size:15px;font-style:italic;font-weight:300;color:#222;line-height:20px;background:transparent;border-radius:0;cursor:pointer;width:300px;border-bottom:1px solid #6d6d6d;display:inline-block;text-align:right;padding:5px 5px 5px 20px;position:relative;background-position:3%;background-repeat:no-repeat;max-height:50px;overflow:hidden}.cc-sdk .cc-select-trigger:after{position:absolute;display:block;content:\\\"\\\";width:10px;height:10px;top:50%;left:5px;margin-top:-3px;border-bottom:1px solid #222;border-left:1px solid #222;transform:rotate(-45deg) translateY(-50%);transition:all .2s ease-in-out;transform-origin:50% 0}.cc-sdk .cc-select.opened .cc-select-trigger:after{margin-top:3px;transform:rotate(135deg) translateY(-50%)}.cc-sdk .cc-select-options-container{position:absolute;display:block;top:100%;right:0;left:0;min-width:100%;margin:15px 0;border:1px solid #b5b5b5;border-radius:4px;box-sizing:border-box;box-shadow:0 2px 1px rgba(0,0,0,.07);background:#fff;transition:all .2s ease-in-out;opacity:0;visibility:hidden;pointer-events:none;transform:translateY(calc(-100% - 65px));height:auto;max-height:150px;overflow:hidden;overflow-y:scroll}.cc-sdk .cc-select-options{overflow-y:scroll;height:100%;width:110%}.cc-sdk .cc-select.opened .cc-select-options-container{opacity:1;visibility:visible;pointer-events:all;transform:translateY(-100%) translateY(-65px)}@media (min-width:769px){.cc-sdk .cc-popup-container-2.top .cc-select-options-container,.cc-sdk .cc-popup-container-2.top .cc-select.opened .cc-select-options-container{transform:translateY(-19px)}}.cc-sdk .option-hover:before{background:#f9f9f9}.cc-sdk .cc-select-option{position:relative;display:block;padding:0 12px;border-bottom:1px solid #e4e4e4;font-size:12px;font-weight:600;color:#222;line-height:34px;cursor:pointer;transition:all .2s ease-in-out;text-align:right;margin:0;width:100%}.cc-sdk .cc-select-option:first-of-type{border-radius:4px 4px 0 0}.cc-sdk .cc-select-option:last-of-type{border-bottom:0;border-radius:0 0 4px 4px}.cc-sdk .cc-select-option.selection,.cc-sdk .cc-select-option:hover{background:#eaeaea}.cc-sdk .cc-select-wrapper.down .cc-select-options-container,.cc-sdk .cc-select-wrapper.down .cc-select.opened .cc-select-options-container{transform:translateY(20px)}.cc-sdk .cc-question-container[data-type=nps] .cc-question-container__content,.cc-sdk .cc-question-container[data-type=scale] .cc-question-container__content{width:40%}@media (max-width:768px){.cc-sdk .cc-select,.cc-sdk .cc-select-wrapper{min-width:100%}.cc-sdk .cc-select{margin-right:0}.cc-sdk .cc-select-trigger{min-width:100%;width:auto}}[dir=rtl].cc-sdk .cc-select-trigger{padding:0 84px 0 22px;background-position:3%;background-repeat:no-repeat;text-align:left}[dir=rtl].cc-sdk .cc-select-trigger:after{top:50%;right:2px;left:auto}[dir=rtl].cc-sdk .cc-select-option{text-align:left}[dir=rtl].cc-sdk .cc-select-option:first-of-type{border-radius:0 4px 4px 0}[dir=rtl].cc-sdk .cc-select-option:last-of-type{border-radius:4px 0 0 4px}.cc-sdk .cc-checkbox{display:table-cell;vertical-align:middle;position:relative;text-align:center}.cc-sdk .cc-checkbox label{cursor:pointer;display:block;height:25px}.cc-sdk .cc-checkbox+span label img{width:40px;display:inline-block;vertical-align:middle}.cc-sdk .cc-checkbox label:after,.cc-sdk .cc-checkbox label:before{content:\\\"\\\";right:0;margin:auto;position:absolute;top:calc(50% - 12.5px)}.cc-sdk .cc-checkbox label:before{background:transparent;border-radius:2px;border:1px solid #424242;cursor:pointer;height:20px;transition:background .3s;width:20px}.cc-sdk .cc-checkbox input[type=checkbox]{opacity:0;outline:0}.cc-sdk .cc-checkbox input[type=checkbox]:checked+label:before{background:#fdaf19;border:none}.cc-sdk .cc-checkbox input[type=checkbox]:checked+label:after{border:3px solid #222;border-left-style:none;border-top-style:none;height:7px;top:calc(50% - 8.5px);right:4px;transform:rotate(45deg);width:12px}.cc-sdk .cc-checkbox.cc-radio label:before{background:transparent;border:1px solid #424242;cursor:pointer;height:25px;transition:background-color .3s;width:25px}.cc-sdk .cc-checkbox input[type=radio]{opacity:0;outline:0}.cc-sdk .cc-checkbox input[type=radio]:checked+label:before{background:transparent;border-color:#fdaf19}.cc-sdk .cc-question-container__list li{display:inline-table;margin-bottom:0}.cc-sdk .cc-question-container__list li .cc-radio,.cc-sdk .cc-question-container__list li .cc-sdk .cc-checkbox{width:30px}.cc-sdk .cc-checkbox input[type=radio]:checked+label:after{-moz-transform:scale(.8);-ms-transform:scale(.8);-o-transform:scale(.8);-webkit-transform:scale(.8);background:#fdaf19;border-radius:30px;height:25px;transform:scale(.8);width:25px}.cc-sdk .cc-radio label:before{border-radius:30px}.cc-sdk .radio-toggle--more-option li span{padding-right:25px!important;width:125px!important}.cc-sdk .radio-toggle .cc-question-container__list li{padding-right:15px}@media (min-width:1000px){.cc-sdk .radio-toggle .cc-question-container__list li span label{overflow:hidden;max-height:100px;display:block}}@media (min-width:769px) and (max-width:992px){.cc-sdk .radio-toggle .cc-question-container__list li{padding-right:10px}.cc-sdk .radio-toggle .cc-question-container__list li span .label,.cc-sdk .radio-toggle .cc-question-container__list li span label{display:block;max-height:50px;overflow:hidden;text-overflow:ellipsis}}@media (max-width:768px){.cc-sdk .radio-toggle .cc-question-container__list li{padding-right:0;display:block;padding-left:50px}}.cc-sdk .progress-bar{width:100%;position:absolute;background:#a47c2b;z-index:1;height:8px;right:0}.cc-sdk .progress-line{background:#fdaf19;height:100%;display:block;width:0;transition:all .4s ease-in}@media screen and (max-width:768px){.cc-sdk .progress-bar{bottom:unset;top:0}}.cc-sdk .cc-scrollbar-wrapper{float:right;height:100%;overflow:hidden;position:relative;width:100%;z-index:1}.cc-sdk .cc-scrollbar-content{box-sizing:border-box;height:100%;overflow:auto;position:relative;width:107%}.cc-sdk .cc-scrollbar-scroll{background:#aaa;border-radius:4px;cursor:pointer;opacity:0;position:relative;top:0;transition:opacity .25s linear;width:9px;z-index:2}.cc-sdk .cc-scrollbar-container:hover .cc-scrollbar-scroll{opacity:1}.cc-sdk .cc-scrollbar-grabbed{-moz-user-select:none;-o-user-select:none;-webkit-user-select:none;user-select:none}.cc-sdk .cc-sdk-range{-webkit-appearance:none;-moz-appearance:none;width:500px;height:60px;background:transparent}.cc-sdk input[type=range]::-webkit-slider-runnable-track{-webkit-appearance:none;background:#ff403d;background:linear-gradient(-135deg,#ff403d,#992a28);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=\\\"#ff403d \\\",endColorstr=\\\"#992a28 \\\",GradientType=1);height:1px}.cc-sdk input[type=range]:focus{outline:none}.cc-sdk input[type=range]::-moz-range-track{-moz-appearance:none;background:#ff403d;background:linear-gradient(-135deg,#7a0806,#992a28);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=\\\"#ff403d \\\",endColorstr=\\\"#992a28 \\\",GradientType=1);height:1px}.cc-sdk input[type=range]::-ms-track{height:1px;width:500px;background-color:#ff403d}.cc-sdk input[type=range]::-webkit-slider-thumb{-webkit-appearance:none;border:1px solid #ff403d;border-radius:50%;height:32px;width:32px;max-width:80px;position:relative;bottom:16px;background-color:#fff;cursor:-webkit-grab}.cc-sdk input[type=range]::-ms-thumb{border:1px solid #ff403d;border-radius:50%;height:32px;width:32px;background:#e08692;box-sizing:border-box;cursor:pointer!important}.cc-sdk input[type=range]::-moz-range-thumb{-moz-appearance:none;border:1px solid #ff403d;border-radius:50%;height:32px;width:32px;max-width:80px;position:relative;bottom:16px;background-color:#fff;cursor:-moz-grab}.cc-sdk input[type=range]::-moz-range-thumb:before{content:\\\"asd\\\"}.cc-sdk input[type=range]::-webkit-slider-thumb:active{cursor:-webkit-grabbing}.cc-sdk input[type=range]::-moz-range-thumb:active{cursor:-moz-grabbing}.cc-sdk .cc-question-container__content.cc-sdk-range-slider{height:50px}.cc-sdk .slider-tip{background:#eb1c23;padding:8px 9px 9px;position:absolute;right:0;left:0;margin:0 auto;color:#fff;background:none;color:#424242;font-size:13px;width:100px;display:inline-block;text-align:center;font-weight:700}.cc-sdk .slider-tip:after{border-width:5px 5px 0;border-top-color:#000}@media (max-width:1024px){.cc-sdk .cc-sdk-range{width:100%}}.cc-sdk input.cc-sdk-range.cc-blue::-moz-range-track,.cc-sdk input.cc-sdk-range.cc-blue::-webkit-slider-runnable-track{background:blue}.cc-sdk .chart{box-sizing:border-box;display:inline-block;height:21px;padding-top:22px;position:relative;vertical-align:top;width:21px}.cc-sdk .cc-sdk-chart span{display:block;font-size:2em;font-weight:400}.cc-sdk .cc-sdk-chart canvas{right:0;position:absolute;top:0}.cc-sdk .cc-sdk-loader{height:21px;right:28px;position:absolute;top:8px;width:21px}@media (min-width:769px){.cc-sdk .cc-sdk-chart canvas{margin-right:10px}}@media (max-width:768px){.cc-sdk .cc-sdk-loader{position:relative;right:auto;top:0;left:auto}}[dir=rtl].cc-sdk .cc-sdk-chart canvas{left:0;right:auto}[dir=rtl].cc-sdk .cc-sdk-loader{left:28px;right:auto}@media (min-width:768px){[dir=rtl].cc-sdk .cc-sdk-chart canvas{margin-left:10px;margin-right:0}}.cc-sdk .show{display:block!important}.cc-sdk .show-inline{display:inline-block!important}.cc-sdk .hide{display:none!important}.cc-sdk.bottom{bottom:0}.cc-sdk.right,.cc-sdk .right{left:0}.cc-sdk .left{right:0}.cc-sdk .top{top:0}.ccsdk-overlay{background:#fff;bottom:0;height:100%;right:0;position:absolute;top:0;width:100%;z-index:0}.ccsdk-overlay.ccsdk-glass{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/ww.png);background-repeat:no-repeat;background-size:cover}.ccsdk-clearfix{clear:both;display:block}.ccsdk-text-normal{font-weight:400}.cc-sdk ::-webkit-input-placeholder{color:#4c4c4c;font-family:Open Sans;font-size:13px;font-style:italic;font-weight:400}.cc-sdk .cc-sdk-form-control::-moz-placeholder{font-style:italic;font-size:13px;font-weight:400;font-family:Open Sans;color:#4c4c4c}.cc-sdk .cc-sdk-form-control:-ms-input-placeholder{font-style:italic;font-size:13px;font-weight:400;font-family:Open Sans;color:#4c4c4c}.cc-sdk .cc-sdk-form-control:-moz-placeholder{font-style:italic;font-size:13px;font-weight:400;font-family:Open Sans;color:#4c4c4c}@media (min-width:769px){.desktop-hide{display:none}}@media (max-width:768px){.mobile-hide{display:none}.cc-sdk-loader{position:relative;right:auto;top:0;left:auto}.ccsdk-overlay.welcome-overlay{background:rgba(210,42,53,.87)}}[dir=rtl].cc-sdk .submit-icon{right:0;left:auto;margin-right:75px}@media (max-width:768px){[dir=rtl].cc-sdk .submit-icon{position:absolute;right:auto;top:auto;bottom:30px;padding-right:0;left:20px;margin:0}}.cc-sdk:before{width:0;height:0;overflow:hidden;position:absolute;z-index:-1}.cc-sdk .yellow .progress-bar{background:#a47c2b}.cc-sdk .yellow .progress-line{background:#fdaf19}.cc-sdk .yellow .submit-icon{background-image:url(\\\"data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%2747px%27%20height%3D%2747px%27%20viewBox%3D%270%200%2047%2047%27%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%3E%3Ctitle%3EGroup%2016%3C%2Ftitle%3E%3Cdesc%3ECreated%20with%20Sketch.%3C%2Fdesc%3E%3Cdefs%3E%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%3Cfilter%20x%3D%27-18.1%25%27%20y%3D%27-12.9%25%27%20width%3D%27136.2%25%27%20height%3D%27136.2%25%27%20filterUnits%3D%27objectBoundingBox%27%20id%3D%27filter-2%27%3E%3CfeOffset%20dx%3D%270%27%20dy%3D%272%27%20in%3D%27SourceAlpha%27%20result%3D%27shadowOffsetOuter1%27%3E%3C%2FfeOffset%3E%3CfeGaussianBlur%20stdDeviation%3D%272%27%20in%3D%27shadowOffsetOuter1%27%20result%3D%27shadowBlurOuter1%27%3E%3C%2FfeGaussianBlur%3E%3CfeColorMatrix%20values%3D%270%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200.116423234%200%27%20type%3D%27matrix%27%20in%3D%27shadowBlurOuter1%27%3E%3C%2FfeColorMatrix%3E%3C%2Ffilter%3E%3C%2Fdefs%3E%3Cg%20id%3D%27Page-1%27%20stroke%3D%27none%27%20stroke-width%3D%271%27%20fill%3D%27none%27%20fill-rule%3D%27evenodd%27%3E%3Cg%20id%3D%271-copy-20%27%20transform%3D%27translate(-1246.000000%2C%20-664.000000)%27%3E%3Cg%20id%3D%27Group-16%27%20transform%3D%27translate(1250.000000%2C%20666.000000)%27%3E%3Cg%20id%3D%27Oval-4%27%3E%3Cuse%20fill%3D%27white%27%20fill-opacity%3D%271%27%20filter%3D%27url(%23filter-2)%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3Cuse%20fill%3D%27%23d04a49%27%20fill-rule%3D%27evenodd%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3C%2Fg%3E%3Cg%20id%3D%27Group-5%27%20transform%3D%27translate(12.000000%2C%2011.000000)%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23FFFFFF%27%3E%3Cg%20id%3D%27fast-forward-arrows%27%20transform%3D%27translate(6.173934%2C%200.000000)%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3Cg%20id%3D%27fast-forward-arrows-copy%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\\\")}.cc-sdk .yellow .cc-checkbox input[type=checkbox]:checked+label:before{background:#fdaf19}.cc-sdk .yellow .cc-checkbox input[type=checkbox]:checked+label:after{border-color:#222}.cc-sdk .yellow .cc-checkbox input[type=radio]:checked+label:before{border-color:#fdaf19}.cc-sdk .yellow .cc-checkbox input[type=radio]:checked+label:after{background:#fdaf19}.cc-sdk .yellow .cc-sdk-form-control:focus{border-color:#fcaf18}.cc-sdk .yellow .cc-message-box__btn{background:#fdaf19}.cc-sdk .red .progress-bar{background:#d22a35}.cc-sdk .red .progress-line{background:#d22a35;filter:brightness(150%)}.cc-sdk .red .cc-checkbox input[type=checkbox]:checked+label:before{background:#d22a35}.cc-sdk .red .cc-checkbox input[type=checkbox]:checked+label:after{border-color:#fff}.cc-sdk .red .cc-checkbox input[type=radio]:checked+label:before{border-color:#d22a35}.cc-sdk .red .cc-checkbox input[type=radio]:checked+label:after{background:#d22a35}.cc-sdk .red .cc-sdk-form-control:focus{border-color:#d22a35}.cc-sdk .red .cc-message-box__btn{background:#d22a35;color:#fff}.cc-question-container,.hide-slide{transform:translateX(-5px)}.cc-question-container,.hide-bottom-up,.hide-slide{transition:transform .3s ease,opacity .3s ease,visibility .3s ease;visibility:hidden;opacity:0}.hide-bottom-up{transform:translateY(30px)}.hide-up-bottom{transform:translateY(100%)}.hide-right-left,.hide-up-bottom{transition:transform .3s ease,opacity .3s ease,visibility .3s ease;visibility:hidden;opacity:0}.hide-right-left{transform:translateX(-100%)}.hide-left-right{transform:translateX(100%);visibility:hidden;opacity:0}.hide-left-right,.show-slide,.show-thankyou-slide{transition:transform .3s ease,opacity .3s ease,visibility .3s ease}.show-slide,.show-thankyou-slide{visibility:visible;opacity:1;transform:translateX(0) translateY(0)}.cc-sdk #timer{position:relative}.cc-sdk svg.cc-sdk-timer{position:absolute;top:0;right:0;width:40px;height:40px;transform:rotateY(-180deg) rotate(90deg)}[dir=rtl].cc-sdk svg.cc-sdk-timer{left:0;right:auto}.cc-sdk svg.cc-sdk-timer circle{stroke-dasharray:50px;stroke-dashoffset:0px;stroke-linecap:round;stroke-width:2px;stroke:red;fill:none;animation:countdown 10s linear 1 forwards}@keyframes countdown{0%{stroke-dashoffset:0px}to{stroke-dashoffset:50px}}.cc-sdk .cc-loaderimg{position:absolute;width:100%;z-index:1000;right:0;left:0;top:0;height:100%;background:hsla(0,0%,100%,.8)}.cc-sdk .cc-loaderimg svg{width:100px}\" : \".cc-sdk ul{padding-left:0;list-style-type:none;margin:0}.cc-sdk a,.cc-sdk a:focus,.cc-sdk a:hover{text-decoration:none;color:inherit}.cc-sdk *,.cc-sdk :after,.cc-sdk :before{box-sizing:border-box}.cc-sdk p{color:inherit;margin:0}.cc-sdk map area{outline:0;cursor:pointer}.cc-sdk map area.selected{outline:0;outline-color:#0a2135;outline-width:0;outline-style:solid}.cc-sdk map area:hover{outline:1}.cc-sdk.cc-popup-container{background:#fff;box-shadow:0 0 4px 5px rgba(0,0,0,.05);font-family:open sans,sans-serif;position:fixed;text-align:center;max-width:500px;max-height:500px;z-index:1111}@media (min-width:768px){.cc-sdk.cc-popup-container{padding:10px}}.cc-sdk.cc-popup-container.bottom{margin-bottom:9px}.cc-sdk.cc-popup-container.top{margin-top:9px}.cc-sdk #cc-thankyou-container .cc-question-container__text p{word-break:break-word}.cc-sdk #cc-thankyou-container .cc-question-container__text,.cc-sdk #cc-thankyou-container .cc-question-container__text p{width:400px;max-width:none;font-size:17px;color:#424242}.cc-sdk .cc-message-box{position:relative;z-index:11}.cc-sdk .cc-message-box__text{color:#424242;font-size:14px;font-weight:600;margin:0;padding:29px 14px 20px;vertical-align:middle}.cc-sdk .cc-message-box__btn{background:#fdaf19;border-radius:100px;display:inline-block;font-size:15px;font-weight:700;height:32px;padding:6px 0;width:124px;text-align:center}.cc-sdk.cc-popup-container .cc-popup-container__close{cursor:pointer;margin:4px;position:absolute;right:0;top:0;z-index:111}.cc-sdk .cc-popup-container-2{height:144px;position:fixed;width:100%;z-index:1111}.cc-sdk .cc-popup-container-2.bottom{bottom:0}.cc-sdk .cc-popup-container-2__icons{cursor:pointer;padding:8px;position:absolute;top:0;z-index:111}.cc-sdk .top.cc-popup-container-2 .cc-popup-container-2__icons{padding-top:15px}.cc-sdk .cc-popup-container-2__icons.cc-right-icon{right:0}.cc-sdk .cc-popup-container-2__icons.cc-left-icon{left:0}.cc-sdk .cc-popup-container__back{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);display:inline-block;width:21px;height:21px}.cc-sdk .cc-question-container{padding:20px 20px 25px;position:absolute;text-align:center;width:100%;z-index:11;top:0;left:0}.cc-sdk .cc-question-container__text{color:#424242;display:inline-block;font-size:15px;font-weight:600;max-width:230px;padding:8px 0;text-align:center;vertical-align:middle;width:20%;position:relative}.cc-sdk .cc-question-container__text p{word-break:break-word}.cc-sdk .cc-question-container[data-type=csat] .cc-question-container__text{width:11em}.cc-sdk .cc-question-container[data-type=csat] .cc-question-container__list{width:64vw}.cc-sdk .cc-question-container__required,.cc-sdk .cc-question-container__validation{position:absolute;top:-14px;font-size:11px;left:0;width:100%;right:0;font-weight:400;color:#c1272d;display:none}.cc-sdk .cc-question-container__required-label{display:inline-block;position:relative;top:-2px;left:-2px}.cc-sdk .cc-question-container__content{display:inline-block;max-width:78%;vertical-align:middle;width:auto}.cc-sdk .cc-question-container__list li{display:inline-block;padding-left:29px;vertical-align:middle}.cc-sdk .cc-question-container__list li span{display:table-cell;font-size:15px;padding-left:15px;text-align:left;vertical-align:middle;width:125px}.cc-sdk .cc-question-container__list li input{vertical-align:middle}.cc-sdk .cc-question-container:before{content:\\\"\\\";display:inline-block;height:100%;margin-right:-4px;vertical-align:middle}.cc-sdk .cc-question-container{height:100%;vertical-align:middle}.cc-sdk .cc-questions-container{height:100%}.cc-sdk p.cc-thankyou-powered{font-size:13px!important;color:#404040!important;font-style:italic;margin-top:4px}.cc-sdk p.cc-thankyou-powered.no-branding{display:none}.cc-sdk .cc-thankyou-powered .cc-thankyou-logo{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/cc-thankyou-logo.svg\\\");background-size:cover;margin-right:8px;display:inline-block;width:16px;height:16px}.cc-sdk .multiline-box{background:#fff;border-radius:2px;border:1px solid #6d6d6d;font-family:Open Sans;font-size:15px;height:70px;margin:0 0 0 50px;min-width:600px;padding:2px 5px;resize:none}.cc-sdk .multiline-box:focus{outline:0}.cc-sdk .detail-box .cc-question-container__text p{font-size:13px;font-weight:700}.cc-sdk .detail-box .cc-question-container__text span{display:inline-block;font-size:15px;font-weight:400}.cc-sdk .detail-box .cc-question-container__text{height:56px}.cc-sdk .detail-box[data-type=singleline] .cc-question-container__text{margin-right:20px}.cc-sdk .detail-box .cc-question-container__content .cc-sdk-form-control,.cc-sdk .single-line .cc-question-container__content .cc-sdk-form-control{background:transparent;border:none;border-bottom:1px solid #6d6d6d;font-family:open sans;font-size:15px;line-height:26px;outline:0;width:300px;margin-left:70px}.cc-sdk .d-star-box.detail-box .cc-question-container__text{height:92px}.cc-sdk .hl.dropdown{background-image:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/arrow-down.black.svg\\\");background-position:97%;background-repeat:no-repeat;border-bottom:1px solid #6d6d6d;display:inline-block;padding:5px;position:relative;text-align:left;width:300px}.cc-sdk .drop-cc-question-container .cc-question-container__text{margin-right:20px}.cc-sdk .cc-sdk-form-control:focus{border-color:#fcaf18}.cc-sdk .detail-box .cc-question-container__content{padding-left:0}.cc-sdk .cc-big-list-container .cc-question-container__list{display:table;width:100%}.cc-sdk .cc-big-list-container .cc-question-container__list li{display:table-cell;vertical-align:middle}.cc-sdk .cc-thankyou-container{width:100%!important}.cc-sdk .submit-icon{direction:ltr;position:absolute;right:0;top:0;bottom:0;margin:auto 0;z-index:11;margin-right:75px;font-size:16px;cursor:pointer;width:47px;height:47px}@media (min-width:1000px){.cc-sdk .cc-big-list-container .cc-question-container__list li span label{overflow:hidden;max-height:100px;display:block}}@media (min-width:769px) and (max-width:875px){.cc-sdk .cc-question-container__list li{padding-left:0!important}}@media (min-width:769px) and (max-width:1024px){.cc-sdk .cc-popup-container-2{height:200px}.cc-sdk .cc-big-list-container .cc-question-container__list,.cc-sdk .cc-question-container__list{text-align:left}.cc-sdk .cc-big-list-container .cc-question-container__list li,.cc-sdk .cc-question-container__list li{display:inline-block;margin-bottom:15px;vertical-align:middle;width:49%}.cc-sdk .cc-question-container__content{display:inline-block;width:45%}.cc-sdk .multiline-box{min-width:100%;margin:0}.cc-sdk .option-smile-box img,.cc-sdk .option-star-box img{margin-right:11px!important}.cc-sdk .cc-thankyou-container .cc-question-container__text,.cc-sdk .cc-thankyou-container .cc-question-container__text p{width:100%!important;text-align:center;margin:0!important;padding:0;line-height:normal;height:auto}.cc-sdk .cc-thankyou-container .cc-question-container__text{max-width:98%}}@media (min-width:1000px){.cc-sdk .cc-question-container__text p{max-height:100px;overflow:hidden;max-width:140ch}.cc-sdk .cc-question-container__text p.ellipsis:after{content:\\\"...\\\";text-align:right;bottom:9px;right:-3px;width:12px;display:block;position:absolute;height:1.2em}}@media (min-width:769px) and (max-width:992px){.cc-sdk .cc-question-container{width:100%;margin:auto}.cc-sdk .cc-question-container__text{width:24%;padding-right:20px}.cc-sdk .cc-question-container__text p{max-height:110px;overflow:hidden}.cc-sdk .cc-question-container__content.rating-color{margin-left:0}.cc-sdk .submit-icon{margin-right:40px!important}.cc-sdk .cc-question-container__content.rating-color{margin-left:0!important}.cc-sdk .cc-question-container__content{width:50%!important}}@media (max-width:768px){.cc-sdk .cc-survey-container,.cc-sdk .cc-survey-content{height:100%}.cc-sdk .cc-popup-container-2{bottom:auto;height:100%;top:0}.cc-sdk .cc-popup-container-2__icons.cc-right-icon{left:auto;right:0;padding:0}.cc-sdk .cc-popup-container-2__icons.cc-left-icon{left:0;right:auto;padding:0}.cc-sdk .cc-big-list-container .cc-question-container__list li,.cc-sdk[dir=rtl] .cc-big-list-container .cc-question-container__list li{display:block}.cc-sdk .radio-toggle--more-option li span{width:84%!important;padding-left:25px!important}.cc-sdk .radio-toggle--more-option li{padding-right:0!important;display:block!important;padding-top:10px}.cc-sdk .detail-box .cc-question-container__content{padding-left:0}.cc-sdk .cc-question-container{bottom:75px;height:auto;left:0;padding:40px 20px;position:absolute;text-align:left;top:auto;width:100%}.cc-sdk .cc-question-container__text{font-size:18px;margin-bottom:20px;max-width:400px;text-align:left;width:100%}.cc-sdk .cc-question-container__content{display:block;max-width:100%;width:100%}.cc-sdk .cc-question-container__list label{display:block}.cc-sdk .cc-question-container__list li span{width:auto;padding-left:15px}.cc-sdk .cc-question-container__list li{padding-left:0;margin-bottom:10px;display:block}.cc-sdk .cc-popup-container-2__icons{margin:20px}.cc-sdk .cc-popup-container-2__icons.left-icon{left:auto;right:0}.cc-sdk .cc-popup-container-2__icons.right-icon{right:auto;left:0}.cc-sdk .cc-popup-container__close{width:27px}.cc-sdk .cc-question-container__content.rating-color{margin-left:0!important}.cc-sdk .cc-question-container[data-type=nps] .cc-question-container__content,.cc-sdk .cc-question-container[data-type=scale] .cc-question-container__content{width:100%!important}.cc-sdk .multiline-box{height:150px;margin:0;min-width:100%;width:100%}.cc-sdk .detail-box .cc-question-container__content .cc-sdk-form-control,.cc-sdk .hl.dropdown{width:100%}.cc-sdk .detail-box .cc-question-container__text p{font-size:18px}.cc-sdk .mobile-detail-box .cc-question-container__text{height:auto}.cc-sdk .cc-question-container__text p{max-height:auto}.cc-sdk .welcome-box .cc-question-container__text p{color:#fff}.cc-sdk .cc-questions-container{height:100%;position:relative}.cc-sdk .cc-message-box__btn{margin-left:20px}}@media (max-width:768px){.cc-sdk .detail-box .cc-question-container__content .cc-sdk-form-control,.cc-sdk .single-line .cc-question-container__content .cc-sdk-form-control{margin-left:0}.cc-sdk .submit-icon{position:absolute;left:20px;top:auto;bottom:30px;padding-right:0}.cc-sdk.cc-popup-container{position:fixed;bottom:0;left:0;right:0;margin:0!important;width:100%;height:13em;max-width:100%;max-height:100%;text-align:left;background:transparent}.cc-sdk.cc-popup-container .cc-message-box{position:absolute;bottom:20%}.cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text{font-size:20px}.cc-sdk.cc-popup-container .cc-message-box .submit-icon{position:absolute;bottom:-100%;top:auto;left:0;margin:0 14px}.cc-sdk.cc-popup-container .cc-popup-container__close{margin:20px;right:0;top:0}.cc-sdk.cc-popup-container__back{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);display:inline-block;width:27px;height:27px;background-size:100%}.cc-sdk .cc-thankyou-container .cc-question-container__text,.cc-sdk .cc-thankyou-container .cc-question-container__text p{width:100%!important;text-align:center;margin:0!important;padding:0;line-height:normal;height:auto}.cc-sdk .cc-thankyou-container .cc-question-container__text{max-width:98%}}.date-s,.date-y{display:inline-block;margin:0 12px!important;width:80px!important}.date-error{color:red;font-style:italic;visibility:hidden;margin-top:12px}.date-error.show-error{visibility:visible}[dir=rtl].cc-sdk ul{padding-right:0}[dir=rtl].cc-sdk.cc-popup-container .cc-popup-container__close{right:auto;left:0;top:0}[dir=rtl].cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text{text-align:right}[dir=rtl].cc-sdk .cc-popup-container__back{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_rtl_.svg)}[dir=rtl].cc-sdk .cc-popup-container-2__icons.cc-right-icon{right:auto;left:0}[dir=rtl].cc-sdk .cc-popup-container-2__icons.cc-left-icon{right:0;left:auto}[dir=rtl].cc-sdk.cc-question-container{margin-left:0;margin-right:0;right:0;left:auto}[dir=rtl].cc-sdk .cc-question-container__required,[dir=rtl].cc-sdk .cc-question-container__validation{right:0;left:auto}[dir=rtl].cc-sdk .cc-question-container__required-label{top:-2px;right:-2px;left:auto}[dir=rtl].cc-sdk .cc-question-container__list li{display:inline-block;padding-right:15px!important;padding-left:15px!important;vertical-align:middle}[dir=rtl].cc-sdk .cc-question-container[data-type=checkbox] .cc-question-container__list li{padding-right:0!important}[dir=rtl].cc-sdk .cc-question-container__list li span{padding-right:15px;padding-left:0;text-align:right}[dir=rtl].cc-sdk .cc-question-container:before{margin-left:-4px;margin-right:0}[dir=rtl].cc-sdk .multiline-box{margin:0 50px 0 0}[dir=rtl].cc-sdk .hl.dropdown{background-position:97%;text-align:right}[dir=rtl].cc-sdk .drop-cc-question-container .cc-question-container__text{margin-left:20px;margin-right:0}[dir=rtl].cc-sdk .detail-box .cc-question-container__content{padding-right:0;padding-left:0}[dir=rtl].cc-sdk .cc-question-container__content{text-align:right}@media (min-width:769px) and (max-width:1024px){[dir=rtl].cc-sdk .cc-big-list-container .cc-question-container__list,[dir=rtl].cc-sdk .cc-question-container__list{text-align:right}[dir=rtl].cc-sdk .multiline-box{margin:0}}@media (min-width:769px) and (max-width:992px){[dir=rtl].cc-sdk .cc-question-container__text{padding-left:20px;padding-right:0}[dir=rtl].cc-sdk .cc-question-container__content.rating-color{margin-left:0;margin-right:0}}@media (max-width:768px){[dir=rtl].cc-sdk .cc-popup-container-2__icons.cc-right-icon{left:0;right:auto}[dir=rtl].cc-sdk .cc-popup-container-2__icons.cc-left-icon{left:auto;right:0}[dir=rtl].cc-sdk .radio-toggle--more-option li span{padding-right:25px!important;padding-left:0!important}[dir=rtl].cc-sdk .radio-toggle--more-option li{padding-right:0!important;padding-left:0!important}[dir=rtl].cc-sdk .detail-box .cc-question-container__content{padding-left:0;padding-right:0}[dir=rtl].cc-sdk .cc-question-container{left:auto;right:0}[dir=rtl].cc-sdk .multiline-box{margin:0}[dir=rtl].cc-sdk .cc-question-container__text{text-align:right;width:100%;margin-right:5px;max-width:100%}[dir=rtl].cc-sdk .cc-question-container__list li span{padding-right:15px;padding-left:0}[dir=rtl].cc-sdk .cc-question-container__list li{padding-left:0;padding-right:0}[dir=rtl].cc-sdk .cc-popup-container-2__icons.left-icon{left:0;right:auto}[dir=rtl].cc-sdk .cc-popup-container-2__icons.right-icon{right:0;left:auto}[dir=rtl].cc-sdk .cc-question-container__content.rating-color{margin-left:0!important;margin-right:0!important}}.cc-sdk .option-number-item{color:#fff;float:left;font-size:13px;height:38px;box-sizing:border-box;padding-top:10px;text-align:center;width:8.5%;margin-left:1px;margin-right:0;cursor:pointer}.cc-sdk .option-number-item.option-zero{background:#853838}.cc-sdk .option-number-item.option-zero.selected,.cc-sdk .option-number-item.option-zero:hover{background:#572526}.cc-sdk .option-number-item.option-one{background:#9e4343}.cc-sdk .option-number-item.option-one.selected,.cc-sdk .option-number-item.option-one:hover{background:#642728}.cc-sdk .option-number-item.option-two{background:#c14d4d}.cc-sdk .option-number-item.option-two.selected,.cc-sdk .option-number-item.option-two:hover{background:#712827}.cc-sdk .option-number-item.option-three{background:#d94d4d}.cc-sdk .option-number-item.option-three.selected,.cc-sdk .option-number-item.option-three:hover{background:#7c2828}.cc-sdk .option-number-item.option-four{background:#ee4d4d}.cc-sdk .option-number-item.option-four.selected,.cc-sdk .option-number-item.option-four:hover{background:#852828}.cc-sdk .option-number-item.option-five{background:#ff4d4d}.cc-sdk .option-number-item.option-five.selected,.cc-sdk .option-number-item.option-five:hover{background:#844828}.cc-sdk .option-number-item.option-six{background:#ff8c4d}.cc-sdk .option-number-item.option-six.selected,.cc-sdk .option-number-item.option-six:hover{background:#844828}.cc-sdk .option-number-item.option-seven{background:#ffc74d}.cc-sdk .option-number-item.option-seven.selected,.cc-sdk .option-number-item.option-seven:hover{background:#856728}.cc-sdk .option-number-item.option-eight{background:#f5eb4d}.cc-sdk .option-number-item.option-eight.selected,.cc-sdk .option-number-item.option-eight:hover{background:#7f7a28}.cc-sdk .option-number-item.option-nine{background:#73ca81}.cc-sdk .option-number-item.option-nine.selected,.cc-sdk .option-number-item.option-nine:hover{background:#3b6942}.cc-sdk .option-number-item.option-ten{background:#4db47c}.cc-sdk .option-number-item.option-ten.selected,.cc-sdk .option-number-item.option-ten:hover{background:#285e40}.cc-sdk .option-number-item.option-7-scale-1,.cc-sdk .option-number-item.option-7-scale-2,.cc-sdk .option-number-item.option-7-scale-3{background:#ed534f}.cc-sdk .option-number-item.option-7-scale-4,.cc-sdk .option-number-item.option-7-scale-5{background:#ffbc00}.cc-sdk .option-number-item.option-7-scale-6,.cc-sdk .option-number-item.option-7-scale-7{background:#4db47c}.cc-sdk .option-number-item.option-5-scale-1,.cc-sdk .option-number-item.option-5-scale-2{background:#ed534f}.cc-sdk .option-number-item.option-5-scale-3{background:#ffbc00}.cc-sdk .option-number-item.option-5-scale-4,.cc-sdk .option-number-item.option-5-scale-5{background:#4db47c}.cc-sdk .cc-question-container[data-type=nps] .option-number-item{width:calc(9.09% - 1px)}.cc-sdk .cc-question-container[data-type=scale].scale-image-container .option-number-item{width:8.4%}.cc-sdk .cc-question-container__content.rating-color{margin-left:74px}.cc-sdk .option-left-rating-text,.cc-sdk .option-mid-rating-text,.cc-sdk .option-midnps-rating-text,.cc-sdk .option-right-rating-text{color:#424242;font-size:13px;left:0;position:absolute}.cc-sdk .option-midnps-rating-text{left:calc(7 * 9.09% - 1px)}.cc-sdk .option-left-rating-text-small-container{max-width:57px;text-align:left;max-height:37px;overflow:hidden}.cc-sdk .option-mid-rating-text-small-container,.cc-sdk .option-right-rating-text-small-container{max-width:57px;text-align:right;max-height:37px;overflow:hidden}.cc-sdk .option-left-rating-text-small-container-smile{width:40%;text-align:left;max-height:37px;overflow:hidden;bottom:auto!important;top:57px}.cc-sdk .option-right-rating-text-small-container-smile{width:40%;text-align:right;max-height:37px;overflow:hidden;bottom:auto!important;top:57px}.cc-sdk .cc-question-container[data-type=smile] .option-left-rating-text,.cc-sdk .cc-question-container[data-type=star] .option-left-rating-text{left:4px;width:40%;text-align:left}.cc-sdk .option-right-rating-text{left:auto;right:0}.cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,.cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{text-align:right;width:40%}.cc-sdk .cc-question-container[data-type=scale] .option-number-item{width:38px;margin:0 .5px;cursor:pointer;display:inline-block;float:none}.cc-sdk .cc-question-container[data-type=scale] .cc-question-container__list{display:inline-block;width:auto;position:relative}.cc-sdk .cc-question-container[data-type=scale].scale-image-container .cc-question-container__list{width:100%}.cc-sdk .rating-color{position:relative}.cc-sdk .option-smile-box,.cc-sdk .option-star-box{height:60px;margin-right:29px;width:60px;cursor:pointer;box-sizing:border-box;border:4px solid transparent;border-radius:50%;display:inline-block;background-size:100%}.cc-sdk:not([dir=rtl]) .option-smile-box:nth-child(5),.cc-sdk:not([dir=rtl]) .option-star-box:nth-child(5),.cc-sdk[dir=rtl] .option-smile-box:first-child,.cc-sdk[dir=rtl] .option-star-box:first-child{margin-right:0}.cc-sdk .option-smile-box.cc-one{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-two{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-three{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-four{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-five{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-one.selected,.cc-sdk .option-smile-box.cc-one:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-two.selected,.cc-sdk .option-smile-box.cc-two:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-three.selected,.cc-sdk .option-smile-box.cc-three:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-four.selected,.cc-sdk .option-smile-box.cc-four:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-five.selected,.cc-sdk .option-smile-box.cc-five:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .cc-csat.cc-question-container__content.rating-color{margin-left:45px}.cc-sdk .option-csat.option-smile-box,.cc-sdk .option-csat.option-smile-box.selected,.cc-sdk .option-csat.option-smile-box:hover{background-size:25px;background-position:18px}.cc-sdk .option-csat{height:30px;margin-right:68px;width:30px;padding-left:50px;height:45px;margin-right:0;width:auto;padding-left:0;font-size:14px;vertical-align:middle;display:inline-block;margin-right:13px}.cc-sdk .option-csat span{display:inline-block;vertical-align:top;font-size:12px;padding-left:25px;position:relative;text-align:left;width:100%}.cc-sdk .option-csat .cc-checkbox label{pointer-events:none}.cc-sdk .option-star-box{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-star-box.selected,.cc-sdk .option-star-box:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star_selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .cc-question-container[data-type=slider] .option-left-rating-text{left:4px;width:40%;text-align:left}.cc-sdk .cc-question-container[data-type=slider] .option-right-rating-text{width:40%;text-align:right}.cc-sdk .cc-question-container[data-type=smile] .cc-question-container__list,.cc-sdk .cc-question-container[data-type=star] .cc-question-container__list{position:relative;width:auto;display:inline-block}.cc-sdk .circle-image{margin:auto;width:253px;overflow:hidden;height:240px;position:relative}.cc-sdk .circle-image-scale-010-neutral{width:242px;overflow:hidden;height:230px;margin:auto}.cc-sdk .cc-nps-selected-rating{font-size:100px;display:inline-block;position:absolute;top:0;left:0;line-height:100px;right:0;margin:auto;bottom:0;width:110px;height:100px;text-align:center;font-weight:100;color:#bbb}.cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,.cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{right:4px}.cc-sdk .option-number-item.option-scale{background:#4db47c}.cc-sdk .option-number-item.option-scale.selected,.cc-sdk .option-number-item.option-scale:hover{background:#712827}.cc-sdk .cc-nps-image{cursor:pointer;position:relative;left:0}.cc-sdk .legend-container{position:relative}@media (min-width:769px) and (max-width:992px){.cc-sdk .option-smile-box,.cc-sdk .option-star-box{width:50px;height:50px;margin-right:10px}.cc-sdk .option-csat.option-smile-box,.cc-sdk .option-csat.option-smile-box.selected,.cc-sdk .option-csat.option-smile-box:hover{display:inline-block;width:168px;background-position:48px}.cc-sdk .option-csat.option-smile-box.selected span,.cc-sdk .option-csat.option-smile-box:hover span,.cc-sdk .option-csat.option-smile-box span{padding-left:40px}}@media screen and (min-width:992px){.cc-sdk span.option-csat.option-smile-box,.cc-sdk span.option-csat.option-smile-box.selected,.cc-sdk span.option-csat.option-smile-box:hover{background-position:44px}.cc-sdk span.option-csat.option-smile-box span{padding-left:40px}}@media (max-width:768px){.cc-sdk .option-smile-box,.cc-sdk .option-star-box{display:inline-block;margin-right:3px}.cc-sdk .option-csat.option-smile-box,.cc-sdk .option-csat.option-smile-box.selected,.cc-sdk .option-csat.option-smile-box:hover{display:block;background-size:40px;background-position:45px}.cc-sdk .option-csat.option-smile-box{height:65px;width:100%}.cc-sdk .option-csat.option-smile-box span{font-size:15px;padding-left:40px}.cc-sdk .option-csat.option-smile-box .cc-checkbox{top:calc(50% - 12.5px);height:57px}.cc-sdk .option-csat.option-smile-box .cc-checkbox.cc-radio label:before,.cc-sdk .option-csat.option-smile-box .cc-checkbox input[type=radio]:checked+label:after{width:25px;height:25px}.cc-sdk .option-number-item{color:#fff;float:left;font-size:15px;height:35px;box-sizing:border-box;margin-right:1px;padding-top:7px;text-align:center;width:38px;cursor:pointer;vertical-align:middle}.cc-sdk .cc-question-container[data-type=scale]{bottom:106px}.cc-sdk .cc-question-container[data-type=scale] .option-left-rating-text,.cc-sdk .cc-question-container[data-type=scale] .option-mid-rating-text,.cc-sdk .cc-question-container[data-type=scale] .option-right-rating-text{width:auto}.cc-sdk .cc-question-container[data-type=scale] .option-right-rating-text{text-align:right}.cc-sdk .option-smile-box img,.cc-sdk .option-star-box img{padding-right:5px;margin-right:0}.cc-sdk .cc-question-container[data-type=nps] .cc-question-container__content{width:100%!important}.cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,.cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{right:10px}.cc-sdk .cc-question-container[data-type=csat] .cc-question-container__list li,.cc-sdk .cc-question-container[data-type=scale] .cc-question-container__list{width:100%}}@media (max-width:381px){.cc-sdk .option-smile-box,.cc-sdk .option-star-box{display:inline-block;margin-right:0;height:50px;width:50px}.cc-sdk .option-smile-box img,.cc-sdk .option-star-box img{padding-right:5px;margin-right:0}}@media screen and (max-width:768px){.cc-sdk .cc-question-container[data-type=scale] span.radial-legend-right,.cc-sdk .radial-legend-right{text-align:left;width:35%;right:0}.cc-sdk .radial-legend-mid{width:35%;text-align:center;left:0;right:0;display:none}.cc-sdk .radial-legend-left{width:35%;text-align:right;left:0}}[dir=rtl].cc-sdk .cc-question-container[data-type=csat] .cc-question-container__content.rating-color{margin-right:45px;margin-left:0}[dir=rtl].cc-sdk .cc-question-container[data-type=csat] .cc-checkbox input[type=radio]{margin-right:0;opacity:0;outline:0}[dir=rtl].cc-sdk .option-number-item{margin-right:1px;margin-left:0;float:right}[dir=rtl].cc-sdk .cc-question-container__content.rating-color{margin-right:74px;margin-left:0}[dir=rtl].cc-sdk .option-right-rating-text{left:calc(100% - 418px);right:auto!important}[dir=rtl].cc-sdk .option-left-rating-text{right:0;left:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=nps] .option-right-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=scale] .option-right-rating-text{left:0;right:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=scale] .option-left-rating-text{right:2px}[dir=rtl].cc-sdk .cc-question-container[data-type=slider] .option-right-rating-text{left:0;width:40%;text-align:left}[dir=rtl].cc-sdk .cc-question-container[data-type=slider] .option-left-rating-text{right:0;text-align:right}[dir=rtl].cc-sdk .rating-color{position:relative}[dir=rtl].cc-sdk .option-smile-box img{margin-right:29px;margin-left:0}[dir=rtl].cc-sdk .option-star-box img{margin-left:19px;margin-right:0}[dir=rtl].cc-sdk .option-csat.option-smile-box span{padding-right:25px;text-align:right;padding-left:0}[dir=rtl].cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{left:7px;right:auto!important;text-align:left}[dir=rtl].cc-sdk .cc-question-container[data-type=smile] .option-left-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=star] .option-left-rating-text{right:7px;left:auto!important;text-align:right}[dir=rtl].cc-sdk .option-csat{width:auto;box-sizing:border-box;padding-left:0;margin-right:13px}[dir=rtl].cc-sdk .option-csat.option-smile-box,[dir=rtl].cc-sdk .option-csat.option-smile-box.selected,[dir=rtl].cc-sdk .option-csat.option-smile-box:hover{background-position:calc(100% - 44px) 50%;text-align:right}@media (min-width:769px) and (max-width:992px){[dir=rtl].cc-sdk .option-smile-box img,[dir=rtl].cc-sdk .option-star-box img{margin-left:0;margin-right:10px}[dir=rtl].cc-sdk .cc-question-container__content.rating-color{margin-right:10px;margin-left:86px!important}[dir=rtl].cc-sdk .cc-question-container[data-type=nps] .option-right-rating-text{left:17px;right:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{left:7px;text-align:left;right:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=smile] .option-left-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=star] .option-left-rating-text{right:20px;left:auto!important;text-align:right}[dir=rtl].cc-sdk .option-csat.option-smile-box,[dir=rtl].cc-sdk .option-csat.option-smile-box.selected,[dir=rtl].cc-sdk .option-csat.option-smile-box:hover{width:auto}}@media (max-width:768px){[dir=rtl].cc-sdk .option-smile-box img,[dir=rtl].cc-sdk .option-star-box img{padding-right:0;padding-left:5px;margin-right:0;margin-left:0}[dir=rtl].cc-sdk .cc-question-container[data-type=csat] .cc-checkbox input[type=radio]{margin-right:7px;opacity:0;outline:0}[dir=rtl].cc-sdk .option-csat.option-smile-box,[dir=rtl].cc-sdk .option-csat.option-smile-box.selected,[dir=rtl].cc-sdk .option-csat.option-smile-box:hover{background-position:calc(100% - 44px) 50%}[dir=rtl].cc-sdk .option-csat.option-smile-box span{padding-right:39px;text-align:right;padding-left:0}[dir=rtl].cc-sdk .cc-question-container[data-type=smile] .option-left-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=star] .option-left-rating-text,[dir=rtl].cc-sdk .option-left-rating-text{right:10px;left:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{right:auto!important}[dir=rtl].cc-sdk .option-right-rating-text{left:calc(100% - 322px);right:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=scale] .option-right-rating-text{left:13px;right:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=nps] .radial-legend-right,[dir=rtl].cc-sdk .cc-question-container[data-type=scale] .radial-legend-right{left:auto!important;right:10px!important}[dir=rtl].cc-sdk .cc-question-container[data-type=nps] .radial-legend-left,[dir=rtl].cc-sdk .cc-question-container[data-type=scale] .radial-legend-left{right:auto!important;left:10px!important}}@media (max-width:381px){[dir=rtl].cc-sdk .option-right-rating-text{left:calc(100% - 258px);right:auto!important}}.cc-sdk .cc-select-wrapper{position:relative;display:inline-block;user-select:none;z-index:11}.cc-sdk .cc-select-wrapper select{display:none}.cc-sdk .cc-select{position:relative;display:inline-block;margin-left:70px}.cc-sdk .cc-select-trigger{display:block;width:130px;padding:0 84px 0 22px;font-size:15px;font-style:italic;font-weight:300;color:#222;line-height:20px;background:transparent;border-radius:0;cursor:pointer;width:300px;border-bottom:1px solid #6d6d6d;display:inline-block;text-align:left;padding:5px 20px 5px 5px;position:relative;background-position:97%;background-repeat:no-repeat;max-height:50px;overflow:hidden}.cc-sdk .cc-select-trigger:after{position:absolute;display:block;content:\\\"\\\";width:10px;height:10px;top:50%;right:5px;margin-top:-3px;border-bottom:1px solid #222;border-right:1px solid #222;transform:rotate(45deg) translateY(-50%);transition:all .2s ease-in-out;transform-origin:50% 0}.cc-sdk .cc-select.opened .cc-select-trigger:after{margin-top:3px;transform:rotate(-135deg) translateY(-50%)}.cc-sdk .cc-select-options-container{position:absolute;display:block;top:100%;left:0;right:0;min-width:100%;margin:15px 0;border:1px solid #b5b5b5;border-radius:4px;box-sizing:border-box;box-shadow:0 2px 1px rgba(0,0,0,.07);background:#fff;transition:all .2s ease-in-out;opacity:0;visibility:hidden;pointer-events:none;transform:translateY(calc(-100% - 65px));height:auto;max-height:150px;overflow:hidden;overflow-y:scroll}.cc-sdk .cc-select-options{overflow-y:scroll;height:100%;width:110%}.cc-sdk .cc-select.opened .cc-select-options-container{opacity:1;visibility:visible;pointer-events:all;transform:translateY(-100%) translateY(-65px)}@media (min-width:769px){.cc-sdk .cc-popup-container-2.top .cc-select-options-container,.cc-sdk .cc-popup-container-2.top .cc-select.opened .cc-select-options-container{transform:translateY(-19px)}}.cc-sdk .option-hover:before{background:#f9f9f9}.cc-sdk .cc-select-option{position:relative;display:block;padding:0 12px;border-bottom:1px solid #e4e4e4;font-size:12px;font-weight:600;color:#222;line-height:34px;cursor:pointer;transition:all .2s ease-in-out;text-align:left;margin:0;width:100%}.cc-sdk .cc-select-option:first-of-type{border-radius:4px 4px 0 0}.cc-sdk .cc-select-option:last-of-type{border-bottom:0;border-radius:0 0 4px 4px}.cc-sdk .cc-select-option.selection,.cc-sdk .cc-select-option:hover{background:#eaeaea}.cc-sdk .cc-select-wrapper.down .cc-select-options-container,.cc-sdk .cc-select-wrapper.down .cc-select.opened .cc-select-options-container{transform:translateY(20px)}.cc-sdk .cc-question-container[data-type=nps] .cc-question-container__content,.cc-sdk .cc-question-container[data-type=scale] .cc-question-container__content{width:40%}@media (max-width:768px){.cc-sdk .cc-select,.cc-sdk .cc-select-wrapper{min-width:100%}.cc-sdk .cc-select{margin-left:0}.cc-sdk .cc-select-trigger{min-width:100%;width:auto}}[dir=rtl].cc-sdk .cc-select-trigger{padding:0 22px 0 84px;background-position:97%;background-repeat:no-repeat;text-align:right}[dir=rtl].cc-sdk .cc-select-trigger:after{top:50%;left:2px;right:auto}[dir=rtl].cc-sdk .cc-select-option{text-align:right}[dir=rtl].cc-sdk .cc-select-option:first-of-type{border-radius:4px 0 0 4px}[dir=rtl].cc-sdk .cc-select-option:last-of-type{border-radius:0 4px 4px 0}.cc-sdk .cc-checkbox{display:table-cell;vertical-align:middle;position:relative;text-align:center}.cc-sdk .cc-checkbox label{cursor:pointer;display:block;height:25px}.cc-sdk .cc-checkbox+span label img{width:40px;display:inline-block;vertical-align:middle}.cc-sdk .cc-checkbox label:after,.cc-sdk .cc-checkbox label:before{content:\\\"\\\";left:0;margin:auto;position:absolute;top:calc(50% - 12.5px)}.cc-sdk .cc-checkbox label:before{background:transparent;border-radius:2px;border:1px solid #424242;cursor:pointer;height:20px;transition:background .3s;width:20px}.cc-sdk .cc-checkbox input[type=checkbox]{opacity:0;outline:0}.cc-sdk .cc-checkbox input[type=checkbox]:checked+label:before{background:#fdaf19;border:none}.cc-sdk .cc-checkbox input[type=checkbox]:checked+label:after{border:3px solid #222;border-right-style:none;border-top-style:none;height:7px;top:calc(50% - 8.5px);left:4px;transform:rotate(-45deg);width:12px}.cc-sdk .cc-checkbox.cc-radio label:before{background:transparent;border:1px solid #424242;cursor:pointer;height:25px;transition:background-color .3s;width:25px}.cc-sdk .cc-checkbox input[type=radio]{opacity:0;outline:0}.cc-sdk .cc-checkbox input[type=radio]:checked+label:before{background:transparent;border-color:#fdaf19}.cc-sdk .cc-question-container__list li{display:inline-table;margin-bottom:0}.cc-sdk .cc-question-container__list li .cc-radio,.cc-sdk .cc-question-container__list li .cc-sdk .cc-checkbox{width:30px}.cc-sdk .cc-checkbox input[type=radio]:checked+label:after{-moz-transform:scale(.8);-ms-transform:scale(.8);-o-transform:scale(.8);-webkit-transform:scale(.8);background:#fdaf19;border-radius:30px;height:25px;transform:scale(.8);width:25px}.cc-sdk .cc-radio label:before{border-radius:30px}.cc-sdk .radio-toggle--more-option li span{padding-left:25px!important;width:125px!important}.cc-sdk .radio-toggle .cc-question-container__list li{padding-left:15px}@media (min-width:1000px){.cc-sdk .radio-toggle .cc-question-container__list li span label{overflow:hidden;max-height:100px;display:block}}@media (min-width:769px) and (max-width:992px){.cc-sdk .radio-toggle .cc-question-container__list li{padding-left:10px}.cc-sdk .radio-toggle .cc-question-container__list li span .label,.cc-sdk .radio-toggle .cc-question-container__list li span label{display:block;max-height:50px;overflow:hidden;text-overflow:ellipsis}}@media (max-width:768px){.cc-sdk .radio-toggle .cc-question-container__list li{padding-left:0;display:block;padding-right:50px}}.cc-sdk .progress-bar{width:100%;position:absolute;background:#a47c2b;z-index:1;height:8px;left:0}.cc-sdk .progress-line{background:#fdaf19;height:100%;display:block;width:0;transition:all .4s ease-in}@media screen and (max-width:768px){.cc-sdk .progress-bar{bottom:unset;top:0}}.cc-sdk .cc-scrollbar-wrapper{float:left;height:100%;overflow:hidden;position:relative;width:100%;z-index:1}.cc-sdk .cc-scrollbar-content{box-sizing:border-box;height:100%;overflow:auto;position:relative;width:107%}.cc-sdk .cc-scrollbar-scroll{background:#aaa;border-radius:4px;cursor:pointer;opacity:0;position:relative;top:0;transition:opacity .25s linear;width:9px;z-index:2}.cc-sdk .cc-scrollbar-container:hover .cc-scrollbar-scroll{opacity:1}.cc-sdk .cc-scrollbar-grabbed{-moz-user-select:none;-o-user-select:none;-webkit-user-select:none;user-select:none}.cc-sdk .cc-sdk-range{-webkit-appearance:none;-moz-appearance:none;width:500px;height:60px;background:transparent}.cc-sdk input[type=range]::-webkit-slider-runnable-track{-webkit-appearance:none;background:#ff403d;background:linear-gradient(135deg,#ff403d,#992a28);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=\\\"#ff403d \\\",endColorstr=\\\"#992a28 \\\",GradientType=1);height:1px}.cc-sdk input[type=range]:focus{outline:none}.cc-sdk input[type=range]::-moz-range-track{-moz-appearance:none;background:#ff403d;background:linear-gradient(135deg,#7a0806,#992a28);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=\\\"#ff403d \\\",endColorstr=\\\"#992a28 \\\",GradientType=1);height:1px}.cc-sdk input[type=range]::-ms-track{height:1px;width:500px;background-color:#ff403d}.cc-sdk input[type=range]::-webkit-slider-thumb{-webkit-appearance:none;border:1px solid #ff403d;border-radius:50%;height:32px;width:32px;max-width:80px;position:relative;bottom:16px;background-color:#fff;cursor:-webkit-grab}.cc-sdk input[type=range]::-ms-thumb{border:1px solid #ff403d;border-radius:50%;height:32px;width:32px;background:#e08692;box-sizing:border-box;cursor:pointer!important}.cc-sdk input[type=range]::-moz-range-thumb{-moz-appearance:none;border:1px solid #ff403d;border-radius:50%;height:32px;width:32px;max-width:80px;position:relative;bottom:16px;background-color:#fff;cursor:-moz-grab}.cc-sdk input[type=range]::-moz-range-thumb:before{content:\\\"asd\\\"}.cc-sdk input[type=range]::-webkit-slider-thumb:active{cursor:-webkit-grabbing}.cc-sdk input[type=range]::-moz-range-thumb:active{cursor:-moz-grabbing}.cc-sdk .cc-question-container__content.cc-sdk-range-slider{height:50px}.cc-sdk .slider-tip{background:#eb1c23;padding:8px 9px 9px;position:absolute;left:0;right:0;margin:0 auto;color:#fff;background:none;color:#424242;font-size:13px;width:100px;display:inline-block;text-align:center;font-weight:700}.cc-sdk .slider-tip:after{border-width:5px 5px 0;border-top-color:#000}@media (max-width:1024px){.cc-sdk .cc-sdk-range{width:100%}}.cc-sdk input.cc-sdk-range.cc-blue::-moz-range-track,.cc-sdk input.cc-sdk-range.cc-blue::-webkit-slider-runnable-track{background:blue}.cc-sdk .chart{box-sizing:border-box;display:inline-block;height:21px;padding-top:22px;position:relative;vertical-align:top;width:21px}.cc-sdk .cc-sdk-chart span{display:block;font-size:2em;font-weight:400}.cc-sdk .cc-sdk-chart canvas{left:0;position:absolute;top:0}.cc-sdk .cc-sdk-loader{height:21px;left:28px;position:absolute;top:8px;width:21px}@media (min-width:769px){.cc-sdk .cc-sdk-chart canvas{margin-left:10px}}@media (max-width:768px){.cc-sdk .cc-sdk-loader{position:relative;left:auto;top:0;right:auto}}[dir=rtl].cc-sdk .cc-sdk-chart canvas{right:0;left:auto}[dir=rtl].cc-sdk .cc-sdk-loader{right:28px;left:auto}@media (min-width:768px){[dir=rtl].cc-sdk .cc-sdk-chart canvas{margin-right:10px;margin-left:0}}.cc-sdk .show{display:block!important}.cc-sdk .show-inline{display:inline-block!important}.cc-sdk .hide{display:none!important}.cc-sdk.bottom{bottom:0}.cc-sdk.right,.cc-sdk .right{right:0}.cc-sdk .left{left:0}.cc-sdk .top{top:0}.ccsdk-overlay{background:#fff;bottom:0;height:100%;left:0;position:absolute;top:0;width:100%;z-index:0}.ccsdk-overlay.ccsdk-glass{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/ww.png);background-repeat:no-repeat;background-size:cover}.ccsdk-clearfix{clear:both;display:block}.ccsdk-text-normal{font-weight:400}.cc-sdk ::-webkit-input-placeholder{color:#4c4c4c;font-family:Open Sans;font-size:13px;font-style:italic;font-weight:400}.cc-sdk .cc-sdk-form-control::-moz-placeholder{font-style:italic;font-size:13px;font-weight:400;font-family:Open Sans;color:#4c4c4c}.cc-sdk .cc-sdk-form-control:-ms-input-placeholder{font-style:italic;font-size:13px;font-weight:400;font-family:Open Sans;color:#4c4c4c}.cc-sdk .cc-sdk-form-control:-moz-placeholder{font-style:italic;font-size:13px;font-weight:400;font-family:Open Sans;color:#4c4c4c}@media (min-width:769px){.desktop-hide{display:none}}@media (max-width:768px){.mobile-hide{display:none}.cc-sdk-loader{position:relative;left:auto;top:0;right:auto}.ccsdk-overlay.welcome-overlay{background:rgba(210,42,53,.87)}}[dir=rtl].cc-sdk .submit-icon{left:0;right:auto;margin-left:75px}@media (max-width:768px){[dir=rtl].cc-sdk .submit-icon{position:absolute;left:auto;top:auto;bottom:30px;padding-left:0;right:20px;margin:0}}.cc-sdk:before{width:0;height:0;overflow:hidden;position:absolute;z-index:-1}.cc-sdk .yellow .progress-bar{background:#a47c2b}.cc-sdk .yellow .progress-line{background:#fdaf19}.cc-sdk .yellow .submit-icon{background-image:url(\\\"data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%2747px%27%20height%3D%2747px%27%20viewBox%3D%270%200%2047%2047%27%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%3E%3Ctitle%3EGroup%2016%3C%2Ftitle%3E%3Cdesc%3ECreated%20with%20Sketch.%3C%2Fdesc%3E%3Cdefs%3E%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%3Cfilter%20x%3D%27-18.1%25%27%20y%3D%27-12.9%25%27%20width%3D%27136.2%25%27%20height%3D%27136.2%25%27%20filterUnits%3D%27objectBoundingBox%27%20id%3D%27filter-2%27%3E%3CfeOffset%20dx%3D%270%27%20dy%3D%272%27%20in%3D%27SourceAlpha%27%20result%3D%27shadowOffsetOuter1%27%3E%3C%2FfeOffset%3E%3CfeGaussianBlur%20stdDeviation%3D%272%27%20in%3D%27shadowOffsetOuter1%27%20result%3D%27shadowBlurOuter1%27%3E%3C%2FfeGaussianBlur%3E%3CfeColorMatrix%20values%3D%270%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200.116423234%200%27%20type%3D%27matrix%27%20in%3D%27shadowBlurOuter1%27%3E%3C%2FfeColorMatrix%3E%3C%2Ffilter%3E%3C%2Fdefs%3E%3Cg%20id%3D%27Page-1%27%20stroke%3D%27none%27%20stroke-width%3D%271%27%20fill%3D%27none%27%20fill-rule%3D%27evenodd%27%3E%3Cg%20id%3D%271-copy-20%27%20transform%3D%27translate(-1246.000000%2C%20-664.000000)%27%3E%3Cg%20id%3D%27Group-16%27%20transform%3D%27translate(1250.000000%2C%20666.000000)%27%3E%3Cg%20id%3D%27Oval-4%27%3E%3Cuse%20fill%3D%27white%27%20fill-opacity%3D%271%27%20filter%3D%27url(%23filter-2)%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3Cuse%20fill%3D%27%23d04a49%27%20fill-rule%3D%27evenodd%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3C%2Fg%3E%3Cg%20id%3D%27Group-5%27%20transform%3D%27translate(12.000000%2C%2011.000000)%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23FFFFFF%27%3E%3Cg%20id%3D%27fast-forward-arrows%27%20transform%3D%27translate(6.173934%2C%200.000000)%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3Cg%20id%3D%27fast-forward-arrows-copy%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\\\")}.cc-sdk .yellow .cc-checkbox input[type=checkbox]:checked+label:before{background:#fdaf19}.cc-sdk .yellow .cc-checkbox input[type=checkbox]:checked+label:after{border-color:#222}.cc-sdk .yellow .cc-checkbox input[type=radio]:checked+label:before{border-color:#fdaf19}.cc-sdk .yellow .cc-checkbox input[type=radio]:checked+label:after{background:#fdaf19}.cc-sdk .yellow .cc-sdk-form-control:focus{border-color:#fcaf18}.cc-sdk .yellow .cc-message-box__btn{background:#fdaf19}.cc-sdk .red .progress-bar{background:#d22a35}.cc-sdk .red .progress-line{background:#d22a35;filter:brightness(150%)}.cc-sdk .red .cc-checkbox input[type=checkbox]:checked+label:before{background:#d22a35}.cc-sdk .red .cc-checkbox input[type=checkbox]:checked+label:after{border-color:#fff}.cc-sdk .red .cc-checkbox input[type=radio]:checked+label:before{border-color:#d22a35}.cc-sdk .red .cc-checkbox input[type=radio]:checked+label:after{background:#d22a35}.cc-sdk .red .cc-sdk-form-control:focus{border-color:#d22a35}.cc-sdk .red .cc-message-box__btn{background:#d22a35;color:#fff}.cc-question-container,.hide-slide{transform:translateX(5px)}.cc-question-container,.hide-bottom-up,.hide-slide{transition:transform .3s ease,opacity .3s ease,visibility .3s ease;visibility:hidden;opacity:0}.hide-bottom-up{transform:translateY(30px)}.hide-up-bottom{transform:translateY(100%)}.hide-right-left,.hide-up-bottom{transition:transform .3s ease,opacity .3s ease,visibility .3s ease;visibility:hidden;opacity:0}.hide-right-left{transform:translateX(100%)}.hide-left-right{transform:translateX(-100%);visibility:hidden;opacity:0}.hide-left-right,.show-slide,.show-thankyou-slide{transition:transform .3s ease,opacity .3s ease,visibility .3s ease}.show-slide,.show-thankyou-slide{visibility:visible;opacity:1;transform:translateX(0) translateY(0)}.cc-sdk #timer{position:relative}.cc-sdk svg.cc-sdk-timer{position:absolute;top:0;left:0;width:40px;height:40px;transform:rotateY(-180deg) rotate(-90deg)}[dir=rtl].cc-sdk svg.cc-sdk-timer{right:0;left:auto}.cc-sdk svg.cc-sdk-timer circle{stroke-dasharray:50px;stroke-dashoffset:0px;stroke-linecap:round;stroke-width:2px;stroke:red;fill:none;animation:countdown 10s linear 1 forwards}@keyframes countdown{0%{stroke-dashoffset:0px}to{stroke-dashoffset:50px}}.cc-sdk .cc-loaderimg{position:absolute;width:100%;z-index:1000;left:0;right:0;top:0;height:100%;background:hsla(0,0%,100%,.8)}.cc-sdk .cc-loaderimg svg{width:100px}\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function() {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\tvar result = [];\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar item = this[i];\n\t\t\tif(item[2]) {\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\n\t\t\t} else {\n\t\t\t\tresult.push(item[1]);\n\t\t\t}\n\t\t}\n\t\treturn result.join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(selector) {\n\t\tif (typeof memo[selector] === \"undefined\") {\n\t\t\tmemo[selector] = fn.call(this, selector);\n\t\t}\n\n\t\treturn memo[selector]\n\t};\n})(function (target) {\n\treturn document.querySelector(target)\n});\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = __webpack_require__(20);\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton) options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n\tif (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\toptions.attrs.type = \"text/css\";\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\toptions.attrs.type = \"text/css\";\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports) {\n\n\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-survey cc-sdk\\\" id={{surveyToken}}-survey> <div class=\\\"cc-popup-container-2 {{animation}} {{location}}\\\"> <div class=\\\"ccsdk-overlay ccsdk-glass\\\"></div> <div class=\\\"cc-popup-container-2__icons cc-left-icon\\\"> <span class=\\\"is-cc-popup-container-back cc-popup-container__back act-cc-button-prev\\\"></span> <ul class=cc-sdk-loader> <li class=cc-sdk-chart data-percent=75></li> </ul> </div> <div class=\\\"cc-popup-container-2__icons cc-right-icon\\\"> <img src=https://cx.getcloudcherry.com/microsurvey-assets/Collapse_Icon.svg class=\\\"is-cc-popup-container-minimize cc-popup-container__minimize act-cc-button-minimize mobile-hide\\\"> <img src=https://cx.getcloudcherry.com/microsurvey-assets/Close_Icon.svg class=\\\"is-cc-popup-container-close cc-popup-container__close act-cc-button-close mobile-hide\\\"> <img src=https://cx.getcloudcherry.com/microsurvey-assets/Close_Icon2.svg class=\\\"is-cc-popup-container-close cc-popup-container__close cc-popup-container__close2 act-cc-button-close desktop-hide\\\"> </div> <div class=cc-survey-container> <div class=cc-survey-content> <div class=cc-questions-container> </div> </div> <div class=\\\"submit-icon act-cc-button-next\\\"></div> <div class=\\\"{{location}} progress-bar\\\" id=progressBar> <span class=progress-line id=progress-line></span> </div> </div> </div> </div>\";\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-sdk act-cc-welcome-question-box cc-popup-container {{location}} {{animation}}\\\" id={{surveyToken}}-welcome> <div class=\\\"ccsdk-overlay ccsdk-glass\\\"></div> <div class=\\\"cc-loaderimg hide\\\"> <svg version=1.1 id=L9 xmlns=http://www.w3.org/2000/svg xmlns:xlink=http://www.w3.org/1999/xlink x=0px y=0px viewBox=\\\"0 0 100 100\\\" enable-background=\\\"new 0 0 0 0\\\" xml:space=preserve> <path fill=red d=\\\"M73,50c0-12.7-10.3-23-23-23S27,37.3,27,50 M30.9,50c0-10.5,8.5-19.1,19.1-19.1S69.1,39.5,69.1,50\\\"> <animateTransform attributeName=transform attributeType=XML type=rotate dur=1s from=\\\"0 50 50\\\" to=\\\"360 50 50\\\" repeatCount=indefinite /> </path> </svg> </div> <img src=https://cx.getcloudcherry.com/microsurvey-assets/Close_Icon.svg class=\\\"is-cc-popup-container-close cc-popup-container__close act-cc-button-close\\\"> <div class=cc-message-box> <h2 class=cc-message-box__text>{{question}}</h2> <a href=javascript:void(0) class=\\\"cc-message-box__btn act-cc-{{action}} mobile-hide\\\" id=\\\"\\\">{{button}}</a> </div> </div>\";\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container single-line\\\" data-required={{isRequired}} data-type=singleline data-id={{questionId}}> <div class=cc-question-container__text> <p> <span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> <span class=cc-question-container__validation>{{validationHint}}</span> </div> <div class=cc-question-container__content> <input type=text name=\\\"\\\" id={{questionId}} placeholder=Enter.. class=cc-sdk-form-control> </div> </div>\";\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container single-line\\\" data-required={{isRequired}} data-type=number data-id={{questionId}}> <div class=cc-question-container__text> <p> <span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> <span class=cc-question-container__validation>{{validationHint}}</span> </div> <div class=cc-question-container__content> <input type=text name=\\\"\\\" id={{questionId}} placeholder=Enter.. class=cc-sdk-form-control> </div> </div>\";\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=cc-question-container data-type=multiline data-id={{questionId}} data-required={{isRequired}}> <div class=cc-question-container__text> <p> <span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> <span class=cc-question-container__validation>{{validationHint}}</span> </div> <div class=cc-question-container__content> <textarea class=\\\"multiline-box cc-sdk-form-control\\\" maxlength={{characterLimit}} id={{questionId}} placeholder=\\\"Share your thoughts...\\\"></textarea> </div> </div>\";\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=cc-question-container data-type=checkbox data-id={{questionId}} data-required={{isRequired}}> <div class=cc-question-container__text> <p> <span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=\\\"cc-question-container__content cc-big-list-container\\\" id={{questionId}}> <ul class=cc-question-container__list> {{options}} </ul> </div> </div>\";\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container radio-toggle\\\" data-type=radio data-id={{questionId}} data-required={{isRequired}}> <div class=cc-question-container__text> <p class=\\\"\\\"> <span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=cc-question-container__content id={{questionId}}> <ul class=cc-question-container__list> {{options}} </ul> </div> </div>\";\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container radio-toggle radio-toggle--image-toggle\\\" data-required={{isRequired}} data-type=radioImage data-id={{questionId}}> <div class=cc-question-container__text> <p> <span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=cc-question-container__content id={{questionId}}> <ul class=cc-question-container__list> {{options}} </ul> </div> </div>\";\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container {{scaleImageContainer}}\\\" data-type=scale data-id={{questionId}} data-required={{isRequired}}> <div class=cc-question-container__text> <p> <span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=\\\"cc-question-container__content rating-color act-cc-question-nps\\\" id={{questionId}}> <div class=cc-question-container__list> {{optionsRange}} <div class=\\\"circle-image circle-image-scale-010-neutral desktop-hide {{imageVisibility010}}\\\"> <img src={{mobileImageUrl}} class=cc-nps-image alt=\\\"\\\" usemap=#Map /> <map name=Map id=Map> <area target=\\\"\\\" alt=0 title=0 href=# class=option-number-item data-rating=0 coords=83,193,62,228,38,212,23,193,57,167 shape=poly> <area target=\\\"\\\" alt=1 title=1 href=# class=option-number-item data-rating=1 coords=54,165,21,189,11,173,4,154,2,140,43,134 shape=poly> <area target=\\\"\\\" alt=2 title=2 href=# class=option-number-item data-rating=2 coords=43,131,2,135,1,118,5,93,8,83,45,97 shape=poly> <area target=\\\"\\\" alt=3 title=3 href=# class=option-number-item data-rating=3 coords=48,92,10,78,17,61,28,44,39,32,66,66 shape=poly> <area target=\\\"\\\" alt=4 title=4 href=# class=option-number-item data-rating=4 coords=70,61,42,30,55,20,70,14,91,5,101,45 shape=poly> <area target=\\\"\\\" alt=5 title=5 href=# class=option-number-item data-rating=5 coords=105,44,92,5,113,2,134,3,147,5,139,46 shape=poly> <area target=\\\"\\\" alt=6 title=6 href=# class=option-number-item data-rating=6 coords=141,46,150,6,169,11,184,19,200,30,172,63 shape=poly> <area target=\\\"\\\" alt=7 title=7 href=# class=option-number-item data-rating=7 coords=175,63,202,34,218,48,227,66,232,78,194,93 shape=poly> <area target=\\\"\\\" alt=8 title=8 href=# class=option-number-item data-rating=8 coords=196,97,233,81,239,103,240,118,240,135,199,130 shape=poly> <area target=\\\"\\\" alt=9 title=9 href=# class=option-number-item data-rating=9 coords=199,135,240,140,236,159,229,175,221,189,187,167 shape=poly> <area target=\\\"\\\" alt=10 title=10 href=# class=option-number-item data-rating=10 coords=183,169,217,191,204,212,178,229,158,192 shape=poly> </map> <span class=\\\"cc-nps-selected-rating act-cc-nps-selected-rating desktop-hide\\\">0</span> </div> <div class=\\\"circle-image circle-image-scale-010-neutral desktop-hide {{imageVisibility110}}\\\"> <img src={{mobileImageUrl}} class=cc-nps-image alt=\\\"\\\" usemap=#Map2 /> <map name=Map2 id=Map2> <area target=\\\"\\\" alt=1 title=1 href=# class=option-number-item data-rating=1 coords=67,180,40,210,26,195,15,176,11,169,47,152 shape=poly> <area target=\\\"\\\" alt=2 title=2 href=# class=option-number-item data-rating=2 coords=48,149,9,163,2,140,1,124,3,110,45,115 shape=poly> <area target=\\\"\\\" alt=3 title=3 href=# class=option-number-item data-rating=3 coords=44,110,4,105,8,79,17,67,22,57,58,79 shape=poly> <area target=\\\"\\\" alt=4 title=4 href=# class=option-number-item data-rating=4 coords=58,76,24,54,33,39,48,29,65,18,85,54 shape=poly> <area target=\\\"\\\" alt=5 title=5 href=# class=option-number-item data-rating=5 coords=87,51,68,15,85,7,106,3,120,3,122,45 shape=poly> <area target=\\\"\\\" alt=6 title=6 href=# class=option-number-item data-rating=6 coords=123,42,123,0,141,2,163,8,176,14,157,52 shape=poly> <area target=\\\"\\\" alt=7 title=7 href=# class=option-number-item data-rating=7 coords=159,53,180,16,201,30,212,44,220,54,186,77 shape=poly> <area target=\\\"\\\" alt=8 title=8 href=# class=option-number-item data-rating=8 coords=188,80,222,55,229,69,236,83,241,108,199,111 shape=poly> <area target=\\\"\\\" alt=9 title=9 href=# class=option-number-item data-rating=9 coords=200,116,239,112,241,128,240,146,234,165,196,150 shape=poly> <area target=\\\"\\\" alt=10 title=10 href=# class=option-number-item data-rating=10 coords=193,153,233,168,225,187,212,202,202,212,175,181 shape=poly> </map> <span class=\\\"cc-nps-selected-rating act-cc-nps-selected-rating desktop-hide\\\">0</span> </div> <div class=legend-container {{legendstyle}}> <span class=\\\"option-left-rating-text {{optionLeftExtraClass}} {{radialLegend}}-left\\\" style=max-width:maxWidth>{{leftLabel}}</span> <span class=\\\"option-mid-rating-text {{optionMidExtraClass}} {{radialLegend}}-mid\\\" style=max-width:maxWidth;left:leftWidth>{{midLabel}}</span> <span class=\\\"option-right-rating-text {{optionRightExtraClass}} {{radialLegend}}-right\\\" style=max-width:maxWidth>{{rightLabel}}</span> </div> <input type=hidden value=\\\"\\\" class=option-number-input> </div> </div> </div> {{style}} \";\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=cc-question-container data-type=csat data-required={{isRequired}} data-id={{questionId}}> <div class=cc-question-container__text> <p> <span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=\\\"cc-question-container__content rating-color\\\" id={{questionId}}> <ul class=cc-question-container__list> <li> <span class=\\\"option-csat option-smile-box one\\\" data-rating=1> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-0> <label for=service-0></label> </div> <span>Completely Disagree</span> </span> </li> <li> <span class=\\\"option-csat option-smile-box two\\\" data-rating=2> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-1> <label for=service-1></label> </div> <span>Somewhat Disagree</span> </span> </li> <li> <span class=\\\"option-csat option-smile-box three\\\" data-rating=3> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-2> <label for=service-2></label> </div> <span>Agree</span> </span> </li> <li> <span class=\\\"option-csat option-smile-box four\\\" data-rating=4> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-3> <label for=service-3></label> </div> <span>Somewhat Agree</span> </span> </li> <li> <span class=\\\"option-csat option-smile-box five\\\" data-rating=5> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-4> <label for=service-4></label> </div> <span>Completely Agree</span> </span> </li> </ul> </div> </div>\";\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=cc-question-container data-type=csat data-required={{isRequired}} data-id={{questionId}}> <div class=cc-question-container__text> <p> <span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=\\\"cc-question-container__content cc-csat rating-color\\\" id={{questionId}}> <ul class=cc-question-container__list> <li> <span class=\\\"option-csat option-smile-box cc-one\\\" data-rating=1> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-0> <label for=service-0></label> </div> <span>Very Unsatisfied</span> </span> </li> <li> <span class=\\\"option-csat option-smile-box cc-two\\\" data-rating=2> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-1> <label for=service-1></label> </div> <span>Unsatisfied</span> </span> </li> <li> <span class=\\\"option-csat option-smile-box cc-three\\\" data-rating=3> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-2> <label for=service-2></label> </div> <span>Neutral</span> </span> </li> <li> <span class=\\\"option-csat option-smile-box cc-four\\\" data-rating=4> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-3> <label for=service-3></label> </div> <span>Satisfied</span> </span> </li> <li> <span class=\\\"option-csat option-smile-box cc-five\\\" data-rating=5> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-4> <label for=service-4></label> </div> <span>Very Satisfied</span> </span> </li> </ul> </div> </div>\";\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=cc-question-container data-type=nps data-id={{questionId}} data-required={{isRequired}}> <div class=cc-question-container__text> <p class=\\\"\\\"> <span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=\\\"cc-question-container__content rating-color act-cc-question-scale\\\" id={{questionId}}> <div class=cc-question-container__list> <div class=cc-options-container> <span data-rating=0 class=\\\"option-number-item mobile-hide option-zero\\\">0</span> <span data-rating=1 class=\\\"option-number-item mobile-hide option-one\\\">1</span> <span data-rating=2 class=\\\"option-number-item mobile-hide option-two\\\">2</span> <span data-rating=3 class=\\\"option-number-item mobile-hide option-three\\\">3</span> <span data-rating=4 class=\\\"option-number-item mobile-hide option-four\\\">4</span> <span data-rating=5 class=\\\"option-number-item mobile-hide option-five\\\">5</span> <span data-rating=6 class=\\\"option-number-item mobile-hide option-six\\\">6</span> <span data-rating=7 class=\\\"option-number-item mobile-hide option-seven\\\">7</span> <span data-rating=8 class=\\\"option-number-item mobile-hide option-eight\\\">8</span> <span data-rating=9 class=\\\"option-number-item mobile-hide option-nine\\\">9</span> <span data-rating=10 class=\\\"option-number-item mobile-hide option-ten\\\">10</span> <div class=\\\"circle-image desktop-hide\\\"> <img src=https://cx.getcloudcherry.com/microsurvey-assets/circle.svg class=cc-nps-image alt=\\\"\\\" usemap=#Map /> <map name=Map id=Map> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=0 coords=86,199,61,177,25,201,38,219,52,230,66,238 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=1 coords=59,173,22,198,12,180,5,160,4,146,44,138 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=2 coords=44,134,49,101,8,84,3,98,0,116,2,141 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=3 coords=49,97,71,68,42,33,25,54,14,71,10,81 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=4 coords=74,65,106,47,94,5,70,14,46,31 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=5 coords=144,47,154,4,135,1,114,1,98,4,108,48 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=6 coords=149,48,157,5,183,15,209,30,180,65 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=7 coords=183,67,211,34,231,56,243,79,204,97 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=8 coords=203,100,245,85,251,106,252,124,251,141,207,135 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=9 coords=208,140,251,146,245,169,231,197,194,172 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=10 coords=193,179,229,201,218,218,202,230,185,238,166,200 shape=poly> </map> <span class=\\\"cc-nps-selected-rating act-cc-nps-selected-rating desktop-hide\\\">0</span> </div> <span class=ccsdk-clearfix></span> <span class=\\\"option-left-rating-text radial-legend-left\\\">Not at all likely</span> <span class=\\\"option-midnps-rating-text radial-legend-mid\\\">Maybe</span> <span class=\\\"option-right-rating-text radial-legend-right\\\">Very likely</span> <input type=hidden value=\\\"\\\" class=option-number-input> </div> </div> </div> </div> \";\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container drop-cc-question-container\\\" data-required={{isRequired}} data-type=select data-id={{questionId}}> <div class=cc-question-container__text> <p> <span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=cc-question-container__content id={{questionId}}> <div class=cc-select-wrapper> <select name=sources id=sources class=\\\"cc-select cc-sdk-sources\\\" data-selection-value={{model}} placeholder=Select> {{options}} </select> </div> </div> </div>\";\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container drop-cc-question-container\\\" data-required={{isRequired}} data-type=select data-id={{questionId}}> <div class=cc-question-container__text> <p class=\\\"\\\"> <span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=cc-question-container__content id={{questionId}}> <div class=cc-select-wrapper> <select name=sources id=sources class=\\\"cc-select cc-sdk-sources\\\" placeholder=Select data-type=multiple> {{options}} </select> </div> </div> </div>\";\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=cc-question-container data-type=smile data-required={{isRequired}} data-id={{questionId}}> <div class=cc-question-container__text> <p> <span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=\\\"cc-question-container__content rating-color\\\" id={{questionId}}> <div class=cc-question-container__list> <div> <span class=\\\"option-smile-box cc-one\\\" data-rating=1></span> <span class=\\\"option-smile-box cc-two\\\" data-rating=2></span> <span class=\\\"option-smile-box cc-three\\\" data-rating=3></span> <span class=\\\"option-smile-box cc-four\\\" data-rating=4></span> <span class=\\\"option-smile-box cc-five\\\" data-rating=5></span> </div> <span class=\\\"option-left-rating-text option-left-rating-text-small-container-smile\\\">{{leftLabel}}</span> <span class=\\\"option-right-rating-text option-right-rating-text-small-container-smile\\\">{{rightLabel}}</span> </div> </div> </div>\";\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=cc-question-container data-type=smile data-required={{isRequired}} data-id={{questionId}}> <div class=cc-question-container__text> <p> <span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=\\\"cc-question-container__content rating-color\\\" id={{questionId}}> <div class=cc-question-container__list> <div> <span class=\\\"option-smile-box cc-five\\\" data-rating=5></span> <span class=\\\"option-smile-box cc-four\\\" data-rating=4></span> <span class=\\\"option-smile-box cc-three\\\" data-rating=3></span> <span class=\\\"option-smile-box cc-two\\\" data-rating=2></span> <span class=\\\"option-smile-box cc-one\\\" data-rating=1></span> </div> <span class=option-right-rating-text>{{leftLabel}}</span> <span class=option-left-rating-text>{{rightLabel}}</span> </div> </div> </div>\";\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=cc-question-container data-type=star data-required={{isRequired}} data-id={{questionId}}> <div class=cc-question-container__text> <p class=\\\"\\\"> <span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=\\\"cc-question-container__content rating-color\\\" id={{questionId}}> <div class=cc-question-container__list> <div> <span class=option-star-box data-rating=1></span> <span class=option-star-box data-rating=2></span> <span class=option-star-box data-rating=3></span> <span class=option-star-box data-rating=4></span> <span class=option-star-box data-rating=5></span> </div> <span class=\\\"option-left-rating-text option-left-rating-text-small-container-smile\\\">{{leftLabel}}</span> <span class=\\\"option-right-rating-text option-right-rating-text-small-container-smile\\\">{{rightLabel}}</span> </div> </div> </div>\";\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=cc-question-container data-required={{isRequired}} data-type=slider data-id={{questionId}}> <div class=cc-question-container__text> <p> <span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=\\\"cc-question-container__content rating-color cc-sdk-range-slider\\\" id={{questionId}}> <div class=cc-question-container__slider> <input type=range value={{min}} min={{min}} max={{max}} class=\\\"cc-sdk-range cc-blue\\\"> <div class=legend-container {{legendstyle}}> <span class=option-left-rating-text>{{minLabel}}{{min}}</span> <span class=option-right-rating-text>{{maxLabel}}{{max}}</span> <span class=\\\"slider-tip act-slider-tip\\\"></span> </div> </div> </div> </div>\";\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<li> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name={{qId}} id={{qId}}-img-service-{{labelFor}} value={{value}}> <label for={{qId}}-img-service-{{labelFor}}></label> </div> <span> <label for={{qId}}-img-service-{{labelFor}} class=\\\"option-yes-no {{labelFor}}\\\"> <img src={{image}} /> {{label}}</label> </span> </li>\";\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<li> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name={{qId}} id={{qId}}-service-{{labelFor}} value={{value}}> <label for={{qId}}-service-{{labelFor}}></label> </div> <span> <label for={{qId}}-service-{{labelFor}} class=\\\"option-yes-no {{labelFor}}\\\">{{label}}</label> </span> </li>\";\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<li> <div class=cc-checkbox> <input type=checkbox value={{value}} name=\\\"\\\" id=check-{{labelFor}}> <label for=check-{{labelFor}}> </label> </div> <span> <label for=check-{{labelFor}}>{{label}}</label> </span> </li>\";\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<li> <div class=cc-checkbox> <input type=checkbox value={{value}} name=\\\"\\\" id=check-{{labelFor}}> <label for=check-{{labelFor}}> </label> </div> <span> <label for=check-{{labelFor}}> <img src={{image}} /> {{label}}</label> </span> </li>\";\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container detail-box mobile-detail-box cc-thankyou-container\\\" id=cc-thankyou-container> <div class=cc-question-container__text> <p>{{question}}</p> <p class=\\\"cc-thankyou-powered {{branding}}\\\"><span class=cc-thankyou-logo></span>Delight powered by Cloudcherry</p> </div> <div class=cc-question-container__content> </div> </div>\";\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container single-line\\\" data-required={{isRequired}} data-type=date data-id={{questionId}}> <div class=cc-question-container__text> <p> <span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> <span class=cc-question-container__validation>{{validationHint}}</span> </div> <div class=\\\"cc-question-container__content date-container\\\"> <input type=text name=\\\"\\\" maxlength=2 id={{questionId}}-date placeholder=\\\"Date (DD)\\\" class=\\\"cc-sdk-form-control date-s\\\"> <input type=text name=\\\"\\\" maxlength=2 id={{questionId}}-month placeholder=\\\"Month (MM)\\\" class=\\\"cc-sdk-form-control date-s\\\"> <input type=text name=\\\"\\\" maxlength=4 id={{questionId}}-year placeholder=\\\"Year (YYYY)\\\" class=\\\"cc-sdk-form-control date-y\\\"> <div class=date-error>Invalid date</div> </div> </div>\";\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container drop-cc-question-container cc-language-selector\\\" data-required={{isRequired}} data-type=select data-id={{questionId}}> <div class=cc-question-container__text> <p> <span class=cc-question-container__required-label></span>Select language</p> <span class=cc-question-container__required>* Mandatory</span> </div> <div class=cc-question-container__content id={{questionId}}> <div class=cc-select-wrapper> <select name=sources id=sources class=\\\"cc-select cc-sdk-sources\\\" placeholder=Select> {{options}} </select> </div> </div> </div>\";\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar LanguageTextFilter_1 = __webpack_require__(5);\r\nvar filter_utils_1 = __webpack_require__(8);\r\nvar ConditionalTextFilter = /** @class */ (function () {\r\n    function ConditionalTextFilter() {\r\n    }\r\n    ConditionalTextFilter.filterText = function (surveyHandler, question) {\r\n        var conditionalText = question.text == null ? '' : LanguageTextFilter_1.LanguageTextFilter.translateQuestionText(surveyHandler, question);\r\n        if (question.text != null) {\r\n            var conditionalText_1 = question.text.split(':');\r\n            if (question.setName && question.text.indexOf(\":\") !== -1) {\r\n                conditionalText_1 = conditionalText_1[0] + ': <br><span class=\"text-normal\">' + conditionalText_1[1] + '</span>';\r\n            }\r\n            else {\r\n                conditionalText_1 = conditionalText_1[0];\r\n            }\r\n        }\r\n        if (question.leadingDisplayTexts == null) {\r\n            conditionalText = LanguageTextFilter_1.LanguageTextFilter.translateQuestionText(surveyHandler, question);\r\n            return conditionalText;\r\n        }\r\n        else if (question.leadingDisplayTexts.length == 0) {\r\n            conditionalText = LanguageTextFilter_1.LanguageTextFilter.translateQuestionText(surveyHandler, question);\r\n            return conditionalText;\r\n        }\r\n        else {\r\n            for (var _i = 0, _a = question.leadingDisplayTexts; _i < _a.length; _i++) {\r\n                var fOption = _a[_i];\r\n                if (fOption != null && fOption.filter != null && fOption.filter.filterquestions != null) {\r\n                    var iSatisfied = false;\r\n                    var iFailed = false;\r\n                    for (var _b = 0, _c = fOption.filter.filterquestions; _b < _c.length; _b++) {\r\n                        var filterByQuestion = _c[_b];\r\n                        if (filter_utils_1.isAnd(filterByQuestion)) {\r\n                            if (filter_utils_1.doesSatisfy(surveyHandler, filterByQuestion) && !iFailed) {\r\n                                iSatisfied = true;\r\n                            }\r\n                            else {\r\n                                iFailed = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                        else if (filter_utils_1.isOr(filterByQuestion)) {\r\n                            if (filter_utils_1.doesSatisfy(surveyHandler, filterByQuestion)) {\r\n                                iSatisfied = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (iSatisfied && !iFailed) {\r\n                        if (filter_utils_1.checkLanguage(surveyHandler, fOption)\r\n                            || (surveyHandler.ccsdk.config && surveyHandler.ccsdk.config.language\r\n                                && surveyHandler.ccsdk.config.language.toLowerCase().includes('default')\r\n                                && fOption.language === null)\r\n                            || (surveyHandler.ccsdk.config && !surveyHandler.ccsdk.config.language && fOption.language === null)) {\r\n                            var groupTitle = void 0;\r\n                            if (question.setName && conditionalText.indexOf(':') !== -1) {\r\n                                groupTitle = conditionalText.split(':')[0];\r\n                                conditionalText = groupTitle + ': <br><span class=\"text-normal\">' + fOption.text + '</span>';\r\n                            }\r\n                            else {\r\n                                conditionalText = fOption.text;\r\n                            }\r\n                        }\r\n                        conditionalText;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return conditionalText;\r\n    };\r\n    return ConditionalTextFilter;\r\n}());\r\nexports.ConditionalTextFilter = ConditionalTextFilter;\r\n\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n            t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar DomUtilities_1 = __webpack_require__(0);\r\n// import { ScrollBar } from './ScrollBar';\r\nvar Select_1 = __webpack_require__(9);\r\nvar Theme_1 = __webpack_require__(48);\r\nvar ConditionalFlowFilter_1 = __webpack_require__(10);\r\nvar Slider_1 = __webpack_require__(49);\r\nvar Constants_1 = __webpack_require__(1);\r\nvar DomSurvey = /** @class */ (function () {\r\n    function DomSurvey(ccsdk) {\r\n        this.trackSelects = [];\r\n        this.trackRadios = [];\r\n        this.currentQuestionListeners = [];\r\n        var self = this;\r\n        this.domListeners = [];\r\n        this.ccsdk = ccsdk;\r\n        this.qIndex = 0;\r\n        this.qResponse = {};\r\n        this.domSelectElements();\r\n        this.util = new DomUtilities_1.DomUtilities();\r\n        // self.scrollbar = new ScrollBar(\"data-cc-scrollbar\");\r\n        this.util.ready(function () {\r\n            // self.util.addClassAll(self.$popupContainer,'show-slide');\r\n        });\r\n    }\r\n    DomSurvey.prototype.setTheme = function (brandColor, time) {\r\n        var self = this;\r\n        this.util.ready(function () {\r\n            self.theme = new Theme_1.Theme(brandColor, time);\r\n        });\r\n    };\r\n    DomSurvey.prototype.setQIndex = function (index) {\r\n        this.qIndex = index;\r\n    };\r\n    DomSurvey.prototype.getQindex = function () {\r\n        return this.qIndex;\r\n    };\r\n    DomSurvey.prototype.domSelectElements = function () {\r\n        this.$questionContainer = document.querySelectorAll(\".cc-questions-container\");\r\n        this.$popupContainer = document.querySelectorAll(\".cc-popup-container\");\r\n        this.$popupContainer2 = document.querySelectorAll(\".cc-popup-container-2\");\r\n        this.$body = document.querySelectorAll(\"body\")[0];\r\n        // this.select = new Select();\r\n    };\r\n    DomSurvey.prototype.removePrevListener = function (id) {\r\n        for (var _i = 0, _a = this.domListeners; _i < _a.length; _i++) {\r\n            var listener = _a[_i];\r\n            if (listener.id == id) {\r\n                var index = this.domListeners.indexOf(listener);\r\n                window.ccsdkDebug ? console.log(\"removing listener\", id) : \"\";\r\n                window.ccsdkDebug\r\n                    ? console.log(\"removing listener index\", index)\r\n                    : \"\";\r\n                this.util.removeListener(this.$body, listener.type, listener.internalHandler);\r\n                if (index > -1) {\r\n                    this.domListeners.splice(index, 1);\r\n                }\r\n                window.ccsdkDebug ? console.log(this.domListeners) : \"\";\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    DomSurvey.prototype.setupListeners = function () {\r\n        var self = this;\r\n        var startSurvey = this.util.initListener(\"click\", \".act-cc-survey-start\", function () {\r\n            if (!self.util.hasClass(self.$startBtn, \"disabled\") &&\r\n                self.ccsdk.surveyStatus != \"minimized\") {\r\n                var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n                document.dispatchEvent(onSurveyClickEvent);\r\n                self.util.addClass(self.$startBtn, \"disabled\");\r\n                self.showLoader();\r\n                self.startSurvey();\r\n            }\r\n            else {\r\n                self.initSurveyDom();\r\n            }\r\n        });\r\n        this.domListeners.push(startSurvey);\r\n        startSurvey.internalHandler = this.util.listener(this.$body, startSurvey.type, startSurvey.id, startSurvey.cb);\r\n        var nextQue = this.util.initListener(\"click\", \".act-cc-button-next\", function () {\r\n            // alert(\"working\");\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            self.nextQuestion();\r\n        });\r\n        this.domListeners.push(nextQue);\r\n        nextQue.internalHandler = this.util.listener(this.$body, nextQue.type, nextQue.id, nextQue.cb);\r\n        var prevQue = this.util.initListener(\"click\", \".act-cc-button-prev\", function () {\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            self.prevQuestion();\r\n        });\r\n        this.domListeners.push(prevQue);\r\n        prevQue.internalHandler = this.util.listener(this.$body, prevQue.type, prevQue.id, prevQue.cb);\r\n        var closeSurvey = this.util.initListener(\"click\", \".act-cc-button-close\", function () {\r\n            var onSurveyCloseEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLOSE_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyCloseEvent);\r\n            self.ccsdk.survey.answers = {};\r\n            self.trackSelects = [];\r\n            self.destroyListeners();\r\n            self.util.trigger(document, \"ccclose\", undefined);\r\n            self.bodyElement = (document.getElementsByTagName(\"body\")[0]);\r\n            self.util.removeClass(self.bodyElement, \"blurr\");\r\n            self.ccsdk.survey.destroy();\r\n        });\r\n        this.domListeners.push(closeSurvey);\r\n        closeSurvey.internalHandler = this.util.listener(this.$body, closeSurvey.type, closeSurvey.id, closeSurvey.cb);\r\n        var minSurvey = this.util.initListener(\"click\", \".act-cc-button-minimize\", function () {\r\n            self.minimizeSurvey();\r\n        });\r\n        this.domListeners.push(minSurvey);\r\n        minSurvey.internalHandler = this.util.listener(self.$body, minSurvey.type, minSurvey.id, minSurvey.cb);\r\n    };\r\n    DomSurvey.prototype.minimizeSurvey = function () {\r\n        var _this = this;\r\n        // this.$popupContainer[0].removeClass('');\r\n        this.util.removeClass(this.$popupContainer2[0], \"hide-right-left\");\r\n        this.util.addClass(this.$popupContainer2[0], \"hide-right-left\");\r\n        setTimeout(function () {\r\n            _this.util.removeClass(_this.$popupContainer2[0], \"show-slide\");\r\n        }, 200);\r\n        this.util.removeClass(this.$popupContainer[0], \"hide-right-left\");\r\n        this.util.addClass(this.$popupContainer[0], \"hide-right-left\");\r\n        setTimeout(function () {\r\n            _this.util.addClass(_this.$popupContainer[0], \"show-slide\");\r\n        }, 200);\r\n        this.ccsdk.surveyStatus = \"minimized\";\r\n        var resumeText = this.ccsdk.config.resumeButtonText\r\n            ? this.ccsdk.config.resumeButtonText\r\n            : \"Resume\";\r\n        this.$startBtn.innerHTML = resumeText;\r\n        this.util.removeClass(this.$startBtn, \"disabled\");\r\n        //update all start btns\r\n        // Array.prototype.forEach.call($startBtn, (el, i) => {\r\n        //   el.innerHTML = resumeText;\r\n        // });\r\n    };\r\n    DomSurvey.prototype.destroyListeners = function () {\r\n        // (window as any).ccsdkDebug?console.log(\"Removing all listeners\"):'';\r\n        for (var _i = 0, _a = this.domListeners; _i < _a.length; _i++) {\r\n            var listener = _a[_i];\r\n            this.util.removeListener(this.$body, listener.type, listener.internalHandler);\r\n        }\r\n        for (var _b = 0, _c = this.ccsdk.survey.domListeners; _b < _c.length; _b++) {\r\n            var listener = _c[_b];\r\n            this.util.removeListener(this.$body, listener.type, listener.internalHandler);\r\n        }\r\n        if (this.ccsdk.survey.languageSelect) {\r\n            this.ccsdk.survey.languageSelect.destroyListeners();\r\n        }\r\n        if (this.select) {\r\n            this.select.destroyListeners();\r\n        }\r\n    };\r\n    DomSurvey.prototype.startSurvey = function () {\r\n        this.ccsdk.survey.cancelKillWelcomeQuestion();\r\n        this.ccsdk.getSurveyData();\r\n    };\r\n    DomSurvey.prototype.initSurveyDom = function () {\r\n        this.domSelectElements();\r\n        // (window as any).ccsdkDebug?console.log(\"click in setup listener survey start\"):'';\r\n        this.util.addClassAll(this.$popupContainer2, \"show-slide\");\r\n        this.util.removeClass(this.$popupContainer[0], \"show-slide\");\r\n        if (this.ccsdk.surveyStatus == \"minimized\") {\r\n            //resume survey\r\n        }\r\n        else {\r\n            //start survey\r\n            //check if only one language is configured\r\n            window.ccsdkDebug ? console.log(this.ccsdk.surveyData) : \"\";\r\n            if (this.ccsdk.surveyData.translated === null ||\r\n                (this.ccsdk.surveyData.translated &&\r\n                    Object.keys(this.ccsdk.surveyData.translated).length < 1)) {\r\n                this.loadFirstQuestion();\r\n            }\r\n            else {\r\n                this.ccsdk.survey.displayLanguageSelector();\r\n            }\r\n        }\r\n    };\r\n    DomSurvey.prototype.updateProgress = function () {\r\n        var el = document.querySelectorAll(\"#progress-line\")[0];\r\n        if (this.ccsdk && this.ccsdk.tracking) {\r\n            this.ccsdk.tracking.trackEvent(\"Questions Answered\", {\r\n                token: this.ccsdk.surveyToken,\r\n                data: {\r\n                    name: this.qIndex + \"/\" + this.ccsdk.survey.questionsToDisplay.length,\r\n                    action: this.currentQuestionId\r\n                }\r\n            }, null, null);\r\n        }\r\n        el.style.width =\r\n            (this.qIndex / this.ccsdk.survey.questionsToDisplay.length) * 100 + \"%\";\r\n    };\r\n    DomSurvey.prototype.loadFirstQuestion = function () {\r\n        // applyRuleToAllEl(this.$questionContainer, );\r\n        // this.util.removeClassAll(this.$questionContainer, 'show-slide');\r\n        // this.util.addClass(this.$questionContainer, 'show-slide');\r\n        this.loadQuestionSpecifics(this.$questionContainer, 0);\r\n        this.util.removeClassAll(this.$questionContainer[0].firstChild, \"show-slide\");\r\n        this.util.addClass(this.$questionContainer[0].firstChild, \"show-slide\");\r\n        var leftIcon = this.util.get(\".act-cc-button-prev\");\r\n        this.util.addClassAll(leftIcon, \"hide-slide\");\r\n        var onSurveyQuestionEvent = new CustomEvent(Constants_1.Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken);\r\n        document.dispatchEvent(onSurveyQuestionEvent);\r\n    };\r\n    DomSurvey.prototype.nextQuestion = function () {\r\n        window.ccsdkDebug\r\n            ? console.log(\"next question q response init\", this.qResponse)\r\n            : \"\";\r\n        // console.log('next question q response init',this.qResponse);\r\n        //empty the domListner\r\n        // this.util.removeAllListeners(this.domListeners);\r\n        var onSurveyQuestionEvent = new CustomEvent(Constants_1.Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken);\r\n        document.dispatchEvent(onSurveyQuestionEvent);\r\n        //submit the current response\r\n        // (window as any).ccsdkDebug?console.log('submit ',this.qResponse.type, this.qResponse):'';\r\n        var isRequired = false;\r\n        var q = this.$questionContainer[0].firstChild;\r\n        // (window as any).ccsdkDebug?console.log(this.$questionContainer):'';\r\n        var span = this.$questionContainer[0].firstChild.querySelectorAll(\".cc-question-container__required\")[0];\r\n        var validationSpan = this.$questionContainer[0].firstChild.querySelectorAll(\".cc-question-container__validation\")[0];\r\n        if (span)\r\n            this.util.removeClass(span, \"show\");\r\n        if (validationSpan)\r\n            this.util.removeClass(validationSpan, \"show\");\r\n        //check if question is required\r\n        isRequired =\r\n            q.getAttribute(\"data-required\").toLowerCase() == \"true\" ? true : false;\r\n        // console.log('required check',Object.keys(this.qResponse).length, isRequired, this.qResponse);\r\n        // if (isRequired && Object.keys(this.qResponse).length === 0) {\r\n        if (isRequired && Object.keys(this.qResponse).length === 0) {\r\n            if (span) {\r\n                this.util.addClass(span, \"show\");\r\n                this.util.removeClass(span, \"hide\");\r\n            }\r\n            return;\r\n        }\r\n        else if (isRequired && !this.qResponse.text && !this.qResponse.number) {\r\n            if (span) {\r\n                this.util.addClass(span, \"show\");\r\n                this.util.removeClass(span, \"hide\");\r\n            }\r\n            return;\r\n        }\r\n        else {\r\n            if (span) {\r\n                this.util.removeClass(span, \"show\");\r\n                this.util.addClass(span, \"hide\");\r\n            }\r\n            //check if validationRegex is set and is fulfilled\r\n            var validationRegex = this.ccsdk.survey.questionsToDisplay[this.qIndex]\r\n                .validationRegex;\r\n            if (validationRegex) {\r\n                window.ccsdkDebug\r\n                    ? console.log(\"validationRegex\", validationRegex)\r\n                    : \"\";\r\n                window.ccsdkDebug\r\n                    ? console.log(\"response\", this.qResponse)\r\n                    : \"\";\r\n                var pattern = validationRegex.match(new RegExp(\"^/(.*?)/([gimy]*)$\"));\r\n                var regex = new RegExp(validationRegex);\r\n                if (this.qResponse.text) {\r\n                    if (regex.test(this.qResponse.text)) {\r\n                        this.util.removeClass(validationSpan, \"show\");\r\n                        this.util.addClass(validationSpan, \"hide\");\r\n                    }\r\n                    else {\r\n                        if (validationSpan) {\r\n                            this.util.addClass(validationSpan, \"show\");\r\n                            this.util.removeClass(validationSpan, \"hide\");\r\n                        }\r\n                        return;\r\n                    }\r\n                }\r\n                else if (this.qResponse.number) {\r\n                    window.ccsdkDebug\r\n                        ? console.log(\"test regex text\", regex.test(this.qResponse.number))\r\n                        : \"\";\r\n                    if (regex.test(this.qResponse.number)) {\r\n                        this.util.removeClass(validationSpan, \"show\");\r\n                        this.util.addClass(validationSpan, \"hide\");\r\n                    }\r\n                    else {\r\n                        if (validationSpan) {\r\n                            this.util.addClass(validationSpan, \"show\");\r\n                            this.util.removeClass(validationSpan, \"hide\");\r\n                        }\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            if (this.qResponse !== \"undefined\") {\r\n                // (window as any).ccsdkDebug?console.log('qindex ' + this.qIndex):'';\r\n                if (typeof this.ccsdk.survey.answers[this.currentQuestionId] !==\r\n                    \"undefined\" &&\r\n                    this.qResponse.type ==\r\n                        this.ccsdk.survey.answers[this.currentQuestionId].type &&\r\n                    this.qResponse.text ==\r\n                        this.ccsdk.survey.answers[this.currentQuestionId].text &&\r\n                    this.qResponse.number ==\r\n                        this.ccsdk.survey.answers[this.currentQuestionId].number) {\r\n                    // console.log('no submit');\r\n                    //don't submit if already submitted.\r\n                }\r\n                else if (typeof this.ccsdk.survey.answers[this.currentQuestionId] !==\r\n                    \"undefined\" &&\r\n                    !this.qResponse.text &&\r\n                    !this.qResponse.number) {\r\n                    // console.log('no submit 2');\r\n                    //previous entry filled\r\n                }\r\n                else {\r\n                    // (window as any).ccsdkDebug?console.log('submitting ' + this.currentQuestionId):'';\r\n                    // console.log(this.qResponse);\r\n                    var qId = this.qResponse.questionId\r\n                        ? this.qResponse.questionId\r\n                        : this.currentQuestionId;\r\n                    this.submitQuestion(this.qIndex, this.qResponse, this.qResponse.type, qId);\r\n                    //save response\r\n                    this.ccsdk.survey.answers[this.currentQuestionId] = JSON.parse(JSON.stringify(this.qResponse));\r\n                }\r\n            }\r\n        }\r\n        ConditionalFlowFilter_1.ConditionalFlowFilter.filterQuestion(this.ccsdk.survey, this.ccsdk.survey.questionsToDisplay[this.qIndex]);\r\n        // console.log(this.ccsdk.survey.questionsToDisplay);\r\n        //go to next question\r\n        this.qIndex++;\r\n        //reset the post parameters\r\n        // this.qResponse = typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined' ? JSON.parse(JSON.stringify(this.ccsdk.survey.answers[this.currentQuestionId])) : {};\r\n        // this.qResponse = {};\r\n        var nextButtonState = \"initial\";\r\n        // (window as any).ccsdkDebug?console.log(this.$questionContainer):'';\r\n        var nextQ = this.$questionContainer;\r\n        // (window as any).ccsdkDebug?console.log(this.qIndex):'';\r\n        if (this.qIndex == this.ccsdk.survey.questionsToDisplay.length) {\r\n            //Last run to show thank you message\r\n            var leftIcon = this.util.get(\".act-cc-button-prev\");\r\n            var rightIcon = this.util.get(\".cc-icon-right\");\r\n            var nextIcon = this.util.get(\".act-cc-button-next\");\r\n            this.util.addClassAll(leftIcon, \"hide\");\r\n            this.util.addClassAll(rightIcon, \"hide\");\r\n            this.util.addClassAll(nextIcon, \"hide\");\r\n            this.util.trigger(document, \"ccdone\", undefined);\r\n            this.util.removeClass(this.$questionContainer[0].firstChild, \"show-slide\");\r\n            this.updateProgress();\r\n        }\r\n        else {\r\n            if (this.qIndex > this.ccsdk.survey.questionsToDisplay.length) {\r\n                //reset the counter to show first question\r\n                this.qIndex = 0;\r\n            }\r\n            //repopulate qResponse based on answers.\r\n            // ( window as any ).ccsdkDebug ? console.log( 'previous answer', this.ccsdk.survey.answers[ this.currentQuestionId ] ) : '';\r\n            this.qResponse =\r\n                typeof this.ccsdk.survey.answers[this.currentQuestionId] !== \"undefined\"\r\n                    ? JSON.parse(JSON.stringify(this.ccsdk.survey.answers[this.currentQuestionId]))\r\n                    : {};\r\n            // this.util.removeClassAll(this.$questionContainer[0].firstChild, 'show-slide');\r\n            // this.util.addClass(nextQ, 'show-slide');\r\n            this.updateProgress();\r\n            this.loadQuestionSpecifics(nextQ, this.qIndex);\r\n            this.util.addClass(this.$questionContainer[0].firstChild, \"show-slide\");\r\n            // if(nextButtonState === 'dirty'){\r\n            // this.submitQuestion(this.qIndex, 'test', 'multiline');\r\n            // }\r\n        }\r\n        if (this.qIndex == 0) {\r\n            var leftIcon = this.util.get(\".act-cc-button-prev\");\r\n            this.util.addClassAll(leftIcon, \"hide-slide\");\r\n        }\r\n        else {\r\n            var leftIcon = this.util.get(\".act-cc-button-prev\");\r\n            this.util.addClass(leftIcon[0], \"show-slide\");\r\n            this.util.removeClass(leftIcon[0], \"hide-slide\");\r\n        }\r\n        // ( window as any ).ccsdkDebug ? console.log( 'next question q response end', this.qResponse ) : '';\r\n        // this.qResponse = {};\r\n    };\r\n    DomSurvey.prototype.prevQuestion = function () {\r\n        this.submitQuestion(this.qIndex, __assign({}, this.qResponse), this.qResponse.type, this.currentQuestionId);\r\n        this.ccsdk.survey.answers[this.currentQuestionId] = JSON.parse(JSON.stringify(this.qResponse));\r\n        this.qIndex--;\r\n        if (!this.ccsdk.survey.questionsToDisplay.length || this.qIndex < 0) {\r\n            this.qIndex = 0;\r\n            return;\r\n            // this.qIndex = this.$questionContainer.length - 1;\r\n        }\r\n        // ( window as any ).ccsdkDebug ? console.log( this.qIndex ) : '';\r\n        var onSurveyQuestionEvent = new CustomEvent(Constants_1.Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken);\r\n        document.dispatchEvent(onSurveyQuestionEvent);\r\n        //re populate qResponse based on answers.\r\n        // this.util.removeClassAll(this.$questionContainer,'show-slide');\r\n        this.loadQuestionSpecifics(null, this.qIndex);\r\n        this.qResponse =\r\n            typeof this.ccsdk.survey.answers[this.currentQuestionId] !== \"undefined\"\r\n                ? JSON.parse(JSON.stringify(this.ccsdk.survey.answers[this.currentQuestionId]))\r\n                : {};\r\n        window.ccsdkDebug\r\n            ? console.log(\"prevQuestion qResponse\", this.qResponse)\r\n            : \"\";\r\n        this.util.addClass(this.$questionContainer[0].firstChild, \"show-slide\");\r\n        this.updateProgress();\r\n        if (this.qIndex == 0) {\r\n            var leftIcon = this.util.get(\".act-cc-button-prev\");\r\n            this.util.addClassAll(leftIcon, \"hide-slide\");\r\n            this.util.removeClassAll(leftIcon, \"show-slide\");\r\n        }\r\n    };\r\n    DomSurvey.prototype.showLoader = function () {\r\n        var $loader = document.querySelectorAll(\".cc-loaderimg\")[0];\r\n        this.util.addClass($loader, \"show\");\r\n        this.util.removeClass($loader, \"hide\");\r\n    };\r\n    DomSurvey.prototype.hideLoader = function () {\r\n        var $loader = document.querySelectorAll(\".cc-loaderimg\")[0];\r\n        this.util.removeClass($loader, \"show\");\r\n        this.util.addClass($loader, \"hide\");\r\n    };\r\n    DomSurvey.prototype.appendInBody = function (html) {\r\n        document.querySelectorAll(\"body\")[0].insertAdjacentHTML(\"afterbegin\", html);\r\n        //force update domSelect\r\n        this.domSelectElements();\r\n    };\r\n    DomSurvey.prototype.replaceInQuestionsContainer = function (html) {\r\n        this.$questionContainer[0].innerHTML = html;\r\n        this.domSelectElements();\r\n    };\r\n    DomSurvey.prototype.appendInQuestionsContainer = function (html) {\r\n        document\r\n            .querySelectorAll(\".cc-questions-container\")[0]\r\n            .insertAdjacentHTML(\"afterbegin\", html);\r\n        //force update domSelect\r\n        this.domSelectElements();\r\n    };\r\n    DomSurvey.prototype.showWelcomeContainer = function () {\r\n        var _this = this;\r\n        setTimeout(function () {\r\n            var startContainer = (document.querySelectorAll(\".act-cc-welcome-question-box\")[0]);\r\n            var bodyElement = document.getElementsByTagName(\"body\")[0];\r\n            _this.util.addClass(startContainer, \"show-slide\");\r\n            // this.util.addClass( bodyElement, \"blurr\" );\r\n        }, 200);\r\n        // console.debug()\r\n        this.$startBtn = document.querySelectorAll(\".act-cc-survey-start\")[0];\r\n    };\r\n    DomSurvey.prototype.showLanguageSelector = function () {\r\n        var _this = this;\r\n        setTimeout(function () {\r\n            var startContainer = (document.querySelectorAll(\".cc-language-selector\")[0]);\r\n            var bodyElement = document.getElementsByTagName(\"body\")[0];\r\n            _this.util.addClass(startContainer, \"show-slide\");\r\n            // this.util.addClass( bodyElement, \"blurr\" );\r\n        }, 200);\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists(\".cc-language-select\", this.domListeners)) {\r\n            // return;\r\n            // ( window as any ).ccsdkDebug ? console.log( \"language select - previous listeners exists\" ) : '';\r\n            this.removePrevListener(\".cc-language-select\");\r\n        }\r\n        var languageSelect = this.util.initListener(\"click\", \".cc-language-select\", function () {\r\n            // let onSurveyClickEvent = new CustomEvent(Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            // document.dispatchEvent(onSurveyClickEvent);\r\n            //select language show next question.\r\n            // self.startSurvey();\r\n            self.ccsdk.config.language = \"default\";\r\n            self.ccsdk.config.language = \"\"; //language selection from menu then show first question\r\n        });\r\n        languageSelect.internalHandler = this.util.listener(this.$body, languageSelect.type, languageSelect.id, languageSelect.cb);\r\n    };\r\n    DomSurvey.prototype.getSurveyContainer = function (token) {\r\n        return document.querySelectorAll(\"#\" + token + \"-survey\")[0];\r\n    };\r\n    DomSurvey.prototype.getWelcomeContainer = function (token) {\r\n        return document.querySelectorAll(\"#\" + token + \"-welcome\")[0];\r\n    };\r\n    DomSurvey.prototype.loadQuestionSpecifics = function (q, index) {\r\n        var self = this;\r\n        this.$questionContainer[0].innerHTML = \"\";\r\n        var compiledTemplate = this.ccsdk.survey.compileTemplate(this.ccsdk.survey.questionsToDisplay[index]);\r\n        this.$questionContainer[0].innerHTML += compiledTemplate;\r\n        var qType = this.$questionContainer[0].firstChild.getAttribute(\"data-type\");\r\n        var qId = this.$questionContainer[0].firstChild.getAttribute(\"data-id\");\r\n        this.qResponse = {};\r\n        // (window as any).ccsdkDebug?console.log(\"QTYIPE AND QID \" , qType, qId):'';\r\n        this.currentQuestionId = qId.substring(2, qId.length);\r\n        // console.log( 'qtype', qType )\r\n        switch (qType) {\r\n            case \"scale\":\r\n                var allOptions1 = document.querySelectorAll(\"#\" + qId + \" .option-number-item\");\r\n                var optionWidth1 = 100 / allOptions1.length - 0.6;\r\n                // (window as any).ccsdkDebug?console.log(\"Option width\", allOptions1, optionWidth1.toFixed(2)):'';\r\n                // self.util.css(allOptions1 , 'width',  optionWidth1.toFixed(1) + '%');\r\n                this.setupListenersQuestionScale(index, qId);\r\n                break;\r\n            case \"nps\":\r\n                this.setupListenersQuestionNPS(index, qId);\r\n                break;\r\n            case \"multiline\":\r\n                this.setupListenersQuestionMultiline(index, qId);\r\n                break;\r\n            case \"select\":\r\n                if (typeof this.select !== \"undefined\") {\r\n                    this.select.destroyListeners();\r\n                }\r\n                this.setupListenersQuestionSelect(index, qId);\r\n                break;\r\n            case \"radio\":\r\n                this.setupListenersQuestionRadio(index, qId);\r\n                break;\r\n            case \"radioImage\":\r\n                this.setupListenersQuestionRadioImage(index, qId);\r\n                break;\r\n            case \"checkbox\":\r\n                this.setupListenersQuestionCheckbox(index, qId);\r\n                break;\r\n            case \"star\":\r\n                this.setupListenersQuestionStar(index, qId);\r\n                break;\r\n            case \"smile\":\r\n                this.setupListenersQuestionSmile(index, qId);\r\n                break;\r\n            case \"csat\":\r\n                this.setupListenersQuestionCsat(index, qId);\r\n                break;\r\n            case \"slider\":\r\n                this.setupListenersQuestionSlider(index, qId);\r\n                break;\r\n            case \"singleline\":\r\n                this.setupListenersQuestionSingleline(index, qId);\r\n                break;\r\n            case \"number\":\r\n                this.setupListenersQuestionNumber(index, qId);\r\n                break;\r\n            case \"date\":\r\n                this.setupListenersForDate(index, qId);\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n    // question specific listeners\r\n    DomSurvey.prototype.setupListenersQuestionScale = function (index, qId) {\r\n        var self = this;\r\n        var selectedRating = (document.querySelectorAll(\"#\" + qId + \" .cc-nps-selected-rating\")[0]);\r\n        var selectedRating1 = (document.querySelectorAll(\"#\" + qId + \" .cc-nps-selected-rating\")[1]);\r\n        //add id too.\r\n        if (this.util.checkIfListenerExists(\"#\" + qId + \" .option-number-item\", this.domListeners)) {\r\n            // return;\r\n            // ( window as any ).ccsdkDebug ? console.log( \"scale question - previous listeners exists\" ) : '';\r\n            this.removePrevListener(\"#\" + qId + \" .option-number-item\");\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        // ( window as any ).ccsdkDebug ? console.log( 'scale question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n            this.ccsdk.survey.answers[questionId] !== \"\") {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            var previousSelection = document.querySelectorAll(\"#\" + qId + ' .option-number-item[data-rating=\"' + previousValue + '\"]')[0];\r\n            // ( window as any ).ccsdkDebug ? console.log( 'scale previous selection', previousSelection ) : '';\r\n            if (typeof previousSelection !== \"undefined\") {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                self.qResponse.type = \"scale\";\r\n                self.qResponse.text = null;\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.questionId = qId;\r\n                selectedRating.innerHTML = previousValue;\r\n                selectedRating1.innerHTML = previousValue;\r\n            }\r\n        }\r\n        var ref = this.util.initListener(\"click\", \"#\" + qId + \" .option-number-item\", function () {\r\n            var allOptions = document.querySelectorAll(\"#\" + qId + \" .option-number-item\");\r\n            var rating = this.getAttribute(\"data-rating\");\r\n            self.util.removeClassAll(allOptions, \"selected\");\r\n            self.util.addClass(this, \"selected\");\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Scale selected',rating):'';\r\n            self.qResponse.type = \"scale\";\r\n            self.qResponse.text = null;\r\n            self.qResponse.number = rating;\r\n            self.qResponse.questionId = qId;\r\n            selectedRating.innerHTML = \"\" + rating;\r\n            selectedRating1.innerHTML = \"\" + rating;\r\n            //move to next question automagically\r\n            // alert('calling next questions inside scale');\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n            // self.util.trigger(document,'q-answered', {\r\n            //   index : index,\r\n            //   rating : rating,\r\n            //   type : 'scale'\r\n            // });\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionNPS = function (index, qId) {\r\n        var self = this;\r\n        var selectedRating = (document.querySelectorAll(\"#\" + qId + \" .cc-nps-selected-rating\")[0]);\r\n        var allOptions = document.querySelectorAll(\"#\" + qId + \" .option-number-item\");\r\n        //add id too.\r\n        if (this.util.checkIfListenerExists(\"#\" + qId + \" .option-number-item\", this.domListeners)) {\r\n            //remove listeners\r\n            // ( window as any ).ccsdkDebug ? console.log( \"nps question - previous listeners exists\" ) : '';\r\n            this.removePrevListener(\"#\" + qId + \" .option-number-item\");\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug\r\n            ? console.log(\"nps question\", this.ccsdk.survey.answers[questionId])\r\n            : \"\";\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n            this.ccsdk.survey.answers[questionId] !== \"\") {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            var previousSelection = document.querySelectorAll(\"#\" + qId + ' .option-number-item[data-rating=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug\r\n                ? console.log(\"nps previous selection\", previousSelection)\r\n                : \"\";\r\n            if (typeof previousSelection !== \"undefined\") {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                var $mobileRating = document.querySelectorAll(\".act-cc-nps-selected-rating\")[0];\r\n                $mobileRating.innerHTML = previousValue;\r\n                self.qResponse.type = \"nps\";\r\n                self.qResponse.text = null;\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        // (window as any).ccsdkDebug?console.log(self.domListeners):'';\r\n        var ref = this.util.initListener(\"click\", \"#\" + qId + \" .option-number-item\", function () {\r\n            var rating = this.getAttribute(\"data-rating\");\r\n            self.util.removeClassAll(allOptions, \"selected\");\r\n            self.util.addClass(this, \"selected\");\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Scale selected',rating):'';\r\n            self.qResponse.type = \"nps\";\r\n            self.qResponse.text = null;\r\n            self.qResponse.number = rating;\r\n            self.qResponse.questionId = qId;\r\n            selectedRating.innerHTML = \"\" + rating;\r\n            //move to next question automagically\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            // alert('calling next questions inside scale');\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n            // self.util.trigger(document,'q-answered', {\r\n            //   index : index,\r\n            //   rating : rating,\r\n            //   type : 'scale'\r\n            // });\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionCheckbox = function (index, qId) {\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists(\"#\" + qId + \" .cc-checkbox\", this.domListeners)) {\r\n            // return;\r\n            window.ccsdkDebug\r\n                ? console.log(\"checkbox question - previous listeners exists\")\r\n                : \"\";\r\n            this.removePrevListener(\"#\" + qId + \" .cc-checkbox\");\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug\r\n            ? console.log(\"radio question\", this.ccsdk.survey.answers[questionId])\r\n            : \"\";\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n            this.ccsdk.survey.answers[questionId] !== \"\") {\r\n            var previousValues = this.ccsdk.survey.answers[questionId].text;\r\n            if (previousValues) {\r\n                previousValues = previousValues.split(\",\");\r\n                for (var _i = 0, previousValues_1 = previousValues; _i < previousValues_1.length; _i++) {\r\n                    var previousValue = previousValues_1[_i];\r\n                    var previousSelection = document.querySelectorAll(\"#\" + qId + ' input[value=\"' + previousValue + '\"]')[0];\r\n                    window.ccsdkDebug\r\n                        ? console.log(\"radio previous selection\", previousSelection)\r\n                        : \"\";\r\n                    if (typeof previousSelection !== \"undefined\") {\r\n                        this.util.addClass(previousSelection, \"selected\");\r\n                        previousSelection.setAttribute(\"checked\", \"checked\");\r\n                        self.qResponse.type = \"checkbox\";\r\n                        self.qResponse.text = previousValue;\r\n                        self.qResponse.number = null;\r\n                        self.qResponse.questionId = qId;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        var ref = this.util.initListener(\"click\", \"#\" + qId + \" .cc-checkbox\", function () {\r\n            // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox input');\r\n            // let rating : number = this.querySelectorAll('input')[0].value;\r\n            var rating = [].filter\r\n                .call(document.querySelectorAll(\"#\" + qId + \" .cc-checkbox input\"), function (c) {\r\n                return c.checked;\r\n            })\r\n                .map(function (c) {\r\n                return c.value;\r\n            })\r\n                .join(\",\");\r\n            window.ccsdkDebug\r\n                ? console.log(\"Checkbox selected\", rating)\r\n                : \"\";\r\n            self.qResponse.type = \"checkbox\";\r\n            self.qResponse.text = rating;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n            //move to next question automagically\r\n            // self.nextQuestion();\r\n        });\r\n        this.domListeners.push(ref);\r\n        var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n        document.dispatchEvent(onSurveyClickEvent);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionRadio = function (index, qId) {\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists(\"#\" + qId + \" .cc-checkbox input\", this.domListeners)) {\r\n            // return;\r\n            //remove listeners\r\n            window.ccsdkDebug\r\n                ? console.log(\"radio question - previous listeners exists\")\r\n                : \"\";\r\n            this.removePrevListener(\"#\" + qId + \" .cc-checkbox input\");\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug\r\n            ? console.log(\"radio question\", this.ccsdk.survey.answers[questionId])\r\n            : \"\";\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n            this.ccsdk.survey.answers[questionId] !== \"\") {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].text;\r\n            var previousSelection = document.querySelectorAll(\"#\" + qId + ' input[value=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug\r\n                ? console.log(\"radio previous selection\", previousSelection)\r\n                : \"\";\r\n            if (typeof previousSelection !== \"undefined\") {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                previousSelection.setAttribute(\"checked\", \"checked\");\r\n                self.qResponse.type = \"radio\";\r\n                self.qResponse.text = previousValue;\r\n                self.qResponse.number = null;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener(\"click\", \"#\" + qId + \" .cc-checkbox input\", function () {\r\n            // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox');\r\n            var rating = this.value;\r\n            // self.util.removeClassAll(allOptions, \"selected\");\r\n            // self.util.addClass(this, \"selected\");\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\r\n            self.qResponse.type = \"radio\";\r\n            self.qResponse.text = rating;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            //move to next question automagically\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionRadioImage = function (index, qId) {\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists(\"#\" + qId + \" .cc-checkbox input\", this.domListeners)) {\r\n            window.ccsdkDebug\r\n                ? console.log(\"radio image question - previous listeners exists\")\r\n                : \"\";\r\n            this.removePrevListener(\"#\" + qId + \" .cc-checkbox input\");\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug\r\n            ? console.log(\"radio image question\", this.ccsdk.survey.answers[questionId])\r\n            : \"\";\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n            this.ccsdk.survey.answers[questionId] !== \"\") {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].text;\r\n            var previousSelection = document.querySelectorAll(\"#\" + qId + ' input[value=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug\r\n                ? console.log(\"radio image previous selection\", previousSelection)\r\n                : \"\";\r\n            if (typeof previousSelection !== \"undefined\") {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                previousSelection.setAttribute(\"checked\", \"checked\");\r\n                self.qResponse.type = \"radioImage\";\r\n                self.qResponse.text = previousValue;\r\n                self.qResponse.number = null;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener(\"click\", \"#\" + qId + \" .cc-checkbox input\", function () {\r\n            // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox');\r\n            var rating = this.value;\r\n            // self.util.removeClassAll(allOptions, \"selected\");\r\n            // self.util.addClass(this, \"selected\");\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\r\n            self.qResponse.type = \"radioImage\";\r\n            self.qResponse.text = rating;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            //move to next question automagically\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionStar = function (index, qId) {\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists(\"#\" + qId + \" .option-star-box\", this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug\r\n                ? console.log(\"smile question - previous listeners exists\")\r\n                : \"\";\r\n            this.removePrevListener(\"#\" + qId + \" .option-star-box\");\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug\r\n            ? console.log(\"star question\", this.ccsdk.survey.answers[questionId])\r\n            : \"\";\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n            this.ccsdk.survey.answers[questionId] !== \"\") {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            var previousSelection = document.querySelectorAll(\"#\" + qId + ' .option-star-box[data-rating=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug\r\n                ? console.log(\"star previous selection\", previousSelection)\r\n                : \"\";\r\n            if (typeof previousSelection !== \"undefined\" &&\r\n                previousSelection != null) {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                self.qResponse.type = \"star\";\r\n                self.qResponse.text = null;\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener(\"click\", \"#\" + qId + \" .option-star-box\", function () {\r\n            var allOptions = document.querySelectorAll(\"#\" + qId + \" .option-star-box\");\r\n            var rating = this.getAttribute(\"data-rating\");\r\n            self.util.removeClassAll(allOptions, \"selected\");\r\n            self.util.addClass(this, \"selected\");\r\n            //select previous sibling\r\n            // let child : any = this.previousSibling;\r\n            // while( ( child = child.previousSibling) != null ){\r\n            //   self.util.addClass(child, \"selected\");\r\n            // }\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\r\n            self.qResponse.type = \"star\";\r\n            self.qResponse.text = null;\r\n            self.qResponse.number = rating;\r\n            self.qResponse.questionId = qId;\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            //move to next question automagically\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionSmile = function (index, qId) {\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists(\"#\" + qId + \" .option-smile-box\", this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug\r\n                ? console.log(\"smile question - previous listeners exists\")\r\n                : \"\";\r\n            this.removePrevListener(\"#\" + qId + \" .option-smile-box\");\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug\r\n            ? console.log(\"smile question\", this.ccsdk.survey.answers[questionId])\r\n            : \"\";\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n            this.ccsdk.survey.answers[questionId] !== \"\") {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            var previousSelection = document.querySelectorAll(\"#\" + qId + ' .option-smile-box[data-rating=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug\r\n                ? console.log(\"smile previous selection\", previousSelection)\r\n                : \"\";\r\n            if (typeof previousSelection !== \"undefined\" &&\r\n                previousSelection != null) {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                self.qResponse.type = \"smile\";\r\n                self.qResponse.text = null;\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener(\"click\", \"#\" + qId + \" .option-smile-box\", function () {\r\n            var allOptions = document.querySelectorAll(\"#\" + qId + \" .option-smile-box\");\r\n            var rating = this.getAttribute(\"data-rating\");\r\n            self.util.removeClassAll(allOptions, \"selected\");\r\n            self.util.addClass(this, \"selected\");\r\n            //select previous siblings\r\n            // let child : any = this.previousSibling;\r\n            // while( ( child = child.previousSibling) != null ){\r\n            //   self.util.addClass(child, \"selected\");\r\n            // }\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Smile selected',rating):'';\r\n            self.qResponse.type = \"smile\";\r\n            self.qResponse.text = null;\r\n            self.qResponse.number = rating;\r\n            self.qResponse.questionId = qId;\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            //move to next question automagically\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionCsat = function (index, qId) {\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists(\"#\" + qId + \" .option-smile-box\", this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug\r\n                ? console.log(\"csat question - previous listeners exists\")\r\n                : \"\";\r\n            this.removePrevListener(\"#\" + qId + \" .option-smile-box\");\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug\r\n            ? console.log(\"csat question\", this.ccsdk.survey.answers[questionId])\r\n            : \"\";\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n            this.ccsdk.survey.answers[questionId] !== \"\") {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            var previousSelection = document.querySelectorAll(\"#\" + qId + ' .option-smile-box[data-rating=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug\r\n                ? console.log(\"csat previous selection\", previousSelection)\r\n                : \"\";\r\n            if (typeof previousSelection !== \"undefined\" &&\r\n                previousSelection != null) {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                previousSelection\r\n                    .querySelectorAll(\"input\")[0]\r\n                    .setAttribute(\"checked\", \"checked\");\r\n                self.qResponse.type = \"smile\";\r\n                self.qResponse.text = null;\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener(\"click\", \"#\" + qId + \" .option-smile-box\", function () {\r\n            var allOptions = document.querySelectorAll(\"#\" + qId + \" .option-smile-box\");\r\n            var rating = this.getAttribute(\"data-rating\");\r\n            self.util.removeClassAll(allOptions, \"selected\");\r\n            self.util.addClass(this, \"selected\");\r\n            this.querySelectorAll(\"input\")[0].setAttribute(\"checked\", \"checked\");\r\n            var child = this.previousSibling;\r\n            while ((child = child.previousSibling) != null) {\r\n                // (window as any).ccsdkDebug?console.log('questionscale', 'previousSiblings', child):'';\r\n                self.util.addClass(child, \"selected\");\r\n            }\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Smile selected',rating):'';\r\n            self.qResponse.type = \"smile\";\r\n            self.qResponse.text = null;\r\n            self.qResponse.number = rating;\r\n            self.qResponse.questionId = qId;\r\n            console.log(\"dispatching event in csat\", this);\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            //move to next question automagically\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionMultiline = function (index, qId) {\r\n        var self = this;\r\n        var multilineRes = \"\";\r\n        if (this.util.checkIfListenerExists(\"#\" + qId, this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug\r\n                ? console.log(\"multiine question - previous listeners exists\")\r\n                : \"\";\r\n            this.removePrevListener(\"#\" + qId);\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug\r\n            ? console.log(\"multiine question\", this.ccsdk.survey.answers[questionId])\r\n            : \"\";\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n            this.ccsdk.survey.answers[questionId] !== \"\") {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].text;\r\n            window.ccsdkDebug\r\n                ? console.log(\"multiine input box\", document.querySelectorAll(\"#\" + qId)[0])\r\n                : \"\";\r\n            var previousSelection = (document.querySelectorAll(\"#\" + qId)[0]);\r\n            window.ccsdkDebug\r\n                ? console.log(\"multiine previous selection\", previousSelection)\r\n                : \"\";\r\n            window.ccsdkDebug\r\n                ? console.log(\"multiine previous value\", previousValue)\r\n                : \"\";\r\n            if (typeof previousSelection !== \"undefined\" &&\r\n                previousSelection != null &&\r\n                typeof previousValue !== \"undefined\") {\r\n                previousSelection.value = previousValue;\r\n                self.qResponse.type = \"multiline\";\r\n                self.qResponse.text = previousValue;\r\n                self.qResponse.number = null;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener(\"change\", \"#\" + qId, function () {\r\n            multilineRes = this.value;\r\n            self.qResponse.type = \"multiline\";\r\n            self.qResponse.text = multilineRes;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionSingleline = function (index, qId) {\r\n        var self = this;\r\n        var singlelineRes = \"\";\r\n        if (this.util.checkIfListenerExists(\"#\" + qId, this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug\r\n                ? console.log(\"singleline question - previous listeners exists\")\r\n                : \"\";\r\n            this.removePrevListener(\"#\" + qId);\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug\r\n            ? console.log(\"singleline question\", this.ccsdk.survey.answers[questionId])\r\n            : \"\";\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n            this.ccsdk.survey.answers[questionId] !== \"\") {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].text;\r\n            window.ccsdkDebug\r\n                ? console.log(\"singleline input box\", document.querySelectorAll(\"#\" + qId)[0])\r\n                : \"\";\r\n            var previousSelection = (document.querySelectorAll(\"#\" + qId)[0]);\r\n            window.ccsdkDebug\r\n                ? console.log(\"singleline previous selection\", previousSelection)\r\n                : \"\";\r\n            window.ccsdkDebug\r\n                ? console.log(\"singleline previous value\", previousValue)\r\n                : \"\";\r\n            if (typeof previousSelection !== \"undefined\" &&\r\n                previousSelection != null &&\r\n                typeof previousValue !== \"undefined\") {\r\n                previousSelection.value = previousValue;\r\n                self.qResponse.type = \"singleline\";\r\n                self.qResponse.text = previousValue;\r\n                self.qResponse.number = null;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener(\"change\", \"#\" + qId, function () {\r\n            singlelineRes = this.value;\r\n            self.qResponse.type = \"singleline\";\r\n            self.qResponse.text = singlelineRes;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n        // console.log( 'singleline qResponse', self.qResponse );\r\n    };\r\n    DomSurvey.prototype.setupListenersForDate = function (index, qId) {\r\n        if (this.util.checkIfListenerExists(\".date-container\", this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug\r\n                ? console.log(\"date question - previous listeners exists\")\r\n                : \"\";\r\n            this.removePrevListener(\".date-container\");\r\n        }\r\n        var questionId;\r\n        var self = this;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug\r\n            ? console.log(\"date question\", this.ccsdk.survey.answers, questionId)\r\n            : \"\";\r\n        if (this.ccsdk.survey.answers[questionId] &&\r\n            this.ccsdk.survey.answers[questionId].number) {\r\n            var model = this.ccsdk.survey.answers[questionId].number;\r\n            var dateQuestion = this.util.get(\".date-container\")[0];\r\n            var list = model.toString().match(/\\d\\d/g);\r\n            dateQuestion.children[0].value = list[3];\r\n            dateQuestion.children[1].value = list[2];\r\n            dateQuestion.children[2].value = list[0] + list[1];\r\n            this.qResponse.type = \"date\";\r\n            this.qResponse.text = null;\r\n            this.qResponse.number = model;\r\n            this.qResponse.questionId = qId;\r\n        }\r\n        var ref = this.util.initListener(\"change\", \".date-container\", function () {\r\n            var date = this.children[0].value;\r\n            var month = this.children[1].value;\r\n            var year = this.children[2].value;\r\n            if (!date && !month && !year) {\r\n                return;\r\n            }\r\n            if (!date.match(/^\\d\\d$/)) {\r\n                self.util.addClass(this.children[3], \"show-error\");\r\n                return;\r\n            }\r\n            else if (!month.match(/^\\d\\d$/)) {\r\n                self.util.addClass(this.children[3], \"show-error\");\r\n                return;\r\n            }\r\n            else if (!year.match(/^\\d\\d\\d\\d$/)) {\r\n                self.util.addClass(this.children[3], \"show-error\");\r\n                return;\r\n            }\r\n            else {\r\n                self.util.removeClass(this.children[3], \"show-error\");\r\n                var numberRes = parseInt(year + month + date, 10);\r\n                self.qResponse.type = \"number\";\r\n                self.qResponse.text = null;\r\n                self.qResponse.number = numberRes;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionNumber = function (index, qId) {\r\n        var self = this;\r\n        var numberRes = \"\";\r\n        if (this.util.checkIfListenerExists(\"#\" + qId, this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug\r\n                ? console.log(\"number question - previous listeners exists\")\r\n                : \"\";\r\n            this.removePrevListener(\"#\" + qId);\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug\r\n            ? console.log(\"number question\", this.ccsdk.survey.answers[questionId])\r\n            : \"\";\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n            this.ccsdk.survey.answers[questionId] !== \"\") {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            window.ccsdkDebug\r\n                ? console.log(\"number input box\", document.querySelectorAll(\"#\" + qId)[0])\r\n                : \"\";\r\n            var previousSelection = (document.querySelectorAll(\"#\" + qId)[0]);\r\n            window.ccsdkDebug\r\n                ? console.log(\"number previous selection\", previousSelection)\r\n                : \"\";\r\n            window.ccsdkDebug\r\n                ? console.log(\"number previous value\", previousValue)\r\n                : \"\";\r\n            if (typeof previousSelection !== \"undefined\" &&\r\n                previousSelection != null &&\r\n                typeof previousValue !== \"undefined\") {\r\n                previousSelection.value = previousValue;\r\n                self.qResponse.type = \"number\";\r\n                self.qResponse.text = null;\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener(\"change\", \"#\" + qId, function () {\r\n            numberRes = this.value;\r\n            self.qResponse.type = \"number\";\r\n            self.qResponse.text = null;\r\n            self.qResponse.number = numberRes;\r\n            self.qResponse.questionId = qId;\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionSlider = function (index, qId) {\r\n        var self = this;\r\n        var sliderRes = \"\";\r\n        var slider = new Slider_1.Slider();\r\n        var sliderInput = (document.querySelectorAll(\"#\" + qId + \" input\")[0]);\r\n        if (this.util.checkIfListenerExists(\"#\" + qId + \" input\", this.domListeners)) {\r\n            // return;\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug\r\n            ? console.log(\"slider question\", this.ccsdk.survey.answers[questionId])\r\n            : \"\";\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n            this.ccsdk.survey.answers[questionId] !== \"\") {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            window.ccsdkDebug\r\n                ? console.log(\"slider input box\", document.querySelectorAll(\"#\" + qId)[0])\r\n                : \"\";\r\n            var previousSelection = (document.querySelectorAll(\"#\" + qId + \" .act-slider-tip\")[0]);\r\n            window.ccsdkDebug\r\n                ? console.log(\"slider previous selection\", previousSelection)\r\n                : \"\";\r\n            window.ccsdkDebug\r\n                ? console.log(\"slider previous value\", previousValue)\r\n                : \"\";\r\n            if (typeof previousSelection !== \"undefined\" &&\r\n                previousSelection != null &&\r\n                typeof previousValue !== \"undefined\") {\r\n                previousSelection.innerHTML = previousValue;\r\n                sliderInput.value = previousValue;\r\n                self.qResponse.type = \"slider\";\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.text = null;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener(\"change\", \"#\" + qId + \" input\", function () {\r\n            sliderRes = this.value;\r\n            self.qResponse.type = \"slider\";\r\n            self.qResponse.number = sliderRes;\r\n            self.qResponse.text = null;\r\n            self.qResponse.questionId = qId;\r\n            //move to next question automagically\r\n            // self.nextQuestion();\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionSelect = function (index, qId) {\r\n        var self = this;\r\n        var questionId;\r\n        window.ccsdkDebug\r\n            ? console.log(\"select que\", this.domListeners)\r\n            : \"\";\r\n        questionId = qId.substring(2, qId.length);\r\n        // (window as any).ccsdkDebug?console.log(this.ccsdk.survey.answers[questionId]):'';\r\n        // (window as any).ccsdkDebug?console.log(this.ccsdk.survey.surveyAnswers[questionId]):'';\r\n        if (this.util.checkIfListenerExists(\"#\" + qId + \" .cc-select-options .cc-select-option\", this.domListeners)) {\r\n            window.ccsdkDebug\r\n                ? console.log(\"select que listner exists\")\r\n                : \"\";\r\n            this.removePrevListener(\"#\" + qId + \" .cc-select-options .cc-select-option\");\r\n            // return;\r\n        }\r\n        window.ccsdkDebug ? console.log(\"select que\") : \"\";\r\n        // if(!self.util.arrayContains.call(self.trackSelects, qId)){\r\n        window.ccsdkDebug\r\n            ? console.log(\"select que initialize select\")\r\n            : \"\";\r\n        self.select = new Select_1.Select(qId);\r\n        self.select.destroyListeners();\r\n        self.select.init(qId);\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n            this.ccsdk.survey.answers[questionId] !== \"\") {\r\n            if (this.ccsdk.survey.answers[questionId].text) {\r\n                var question = this.ccsdk.survey.getQuestionById(questionId);\r\n                self.select.setValue(this.ccsdk.survey.answers[questionId].text, question, this.ccsdk.survey);\r\n                self.select.selectOptions(this.ccsdk.survey.answers[questionId].text);\r\n                self.qResponse.type = \"select\";\r\n                self.qResponse.text = this.ccsdk.survey.answers[questionId].text;\r\n                self.qResponse.number = null;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        self.trackSelects.push(qId);\r\n        // }\r\n        var selectRes = \"\";\r\n        var ref = this.util.initListener(\"click\", \"#\" + qId + \" .cc-select-options .cc-select-option\", function () {\r\n            // selectRes = this.getAttribute('data-value');\r\n            selectRes = document\r\n                .querySelectorAll(\"#\" + qId + \" .cc-select-trigger\")[0]\r\n                .getAttribute(\"data-selection-value\");\r\n            // (window as any).ccsdkDebug?console.log(selectRes):'';\r\n            self.qResponse.type = \"select\";\r\n            self.qResponse.text = selectRes;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n            //move to next question automagically\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            // self.nextQuestion();\r\n        });\r\n        // this.util.removeListener(this.$body, ref.type, listener.internalHandler);\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    // addListenersNextButtonSubmit(index : number, data : any, type : string){\r\n    //   let self : DomSurvey = this;\r\n    //   let btnNext = self.util.get('.act-cc-button-next')[0];\r\n    //   self.util.on('click', btnNext, this.submitQuestion(\r\n    //     index, data, type\r\n    //   ));\r\n    //\r\n    // }\r\n    // removeListenersNextButtonSubmit(index : number, data : any, type : string){\r\n    //   let self : DomSurvey = this;\r\n    //   let btnNext = self.util.get('.act-cc-button-next');\r\n    //   self.util.on('click', btnNext, this.submitQuestion(\r\n    //     index, data, type\r\n    //   ));\r\n    //   self.util.off('click', btnNext, this.submitQuestion(\r\n    //     index, data, type\r\n    //   ));\r\n    // }\r\n    DomSurvey.prototype.submitQuestion = function (index, data, type, qId) {\r\n        window.ccsdkDebug ? console.log(\"type\", type, \"res\", data) : \"\";\r\n        this.util.trigger(document, \"q-answered\", {\r\n            index: index,\r\n            data: data,\r\n            type: type,\r\n            questionId: qId.match(/^id/) ? qId.substring(2, qId.length) : qId\r\n        });\r\n    };\r\n    return DomSurvey;\r\n}());\r\nexports.DomSurvey = DomSurvey;\r\n\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar DomUtilities_1 = __webpack_require__(0);\r\nvar Theme = /** @class */ (function () {\r\n    function Theme(brandColor, time) {\r\n        this.util = new DomUtilities_1.DomUtilities();\r\n        this.brandColorDark = this.util.shadeBlendConvert(-0.3, brandColor, undefined);\r\n        this.brandColorWhite = this.util.shadeBlendConvert(0.1, brandColor, undefined);\r\n        var css = \"\\n\\t\\t.cc-sdk #progressBar{\\n\\t\\t\\tbackground : \" + this.brandColorDark + \";\\n\\t\\t}\\n\\t\\t.cc-sdk #progress-line{ \\n\\t\\t\\tbackground: \" + brandColor + \";\\n\\t\\t}\\n\\t\\t.cc-sdk .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:before {\\n\\t\\t\\tbackground:\" + brandColor + \";\\n\\t\\t}\\n\\t\\t.ccsdk-overlay.glass{\\n\\t\\t\\tbackground-color:\" + this.util.hexToRGB(brandColor, .5) + \";\\n\\t\\t}\\n\\t\\t.cc-sdk .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:after {\\n\\t\\t\\tborder-color: #fff;\\n\\t\\t}\\n\\t\\t.cc-sdk .cc-checkbox input[type=\\\"radio\\\"]:checked + label:before {\\n\\t\\t\\tborder-color: \" + brandColor + \";\\n\\t\\t}\\n\\t\\t.cc-sdk .cc-checkbox input[type=\\\"radio\\\"]:checked + label:before {\\n\\t\\t\\tborder-color: \" + brandColor + \";\\n\\t\\t}\\n\\t\\t.cc-sdk .cc-checkbox input[type=\\\"radio\\\"]:checked + label:after {\\n\\t\\t\\tbackground: \" + brandColor + \";\\n\\t\\t}\\n\\t\\t.cc-sdk .cc-sdk-form-control:focus {\\n\\t\\t\\tborder-color: \" + brandColor + \";\\n\\t\\t}\\n\\t\\t.cc-sdk .cc-message-box__btn{\\n\\t\\t\\tbackground: \" + brandColor + \";\\n\\t\\t\\tcolor:#fff;\\n\\t\\t}\\n\\t\\t\\t.cc-sdk .submit-icon{\\n\\t\\t\\t\\tbackground-image: url(\\\"data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%2747px%27%20height%3D%2747px%27%20viewBox%3D%270%200%2047%2047%27%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%3E%3Ctitle%3EGroup%2016%3C%2Ftitle%3E%3Cdesc%3ECreated%20with%20Sketch.%3C%2Fdesc%3E%3Cdefs%3E%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%3Cfilter%20x%3D%27-18.1%25%27%20y%3D%27-12.9%25%27%20width%3D%27136.2%25%27%20height%3D%27136.2%25%27%20filterUnits%3D%27objectBoundingBox%27%20id%3D%27filter-2%27%3E%3CfeOffset%20dx%3D%270%27%20dy%3D%272%27%20in%3D%27SourceAlpha%27%20result%3D%27shadowOffsetOuter1%27%3E%3C%2FfeOffset%3E%3CfeGaussianBlur%20stdDeviation%3D%272%27%20in%3D%27shadowOffsetOuter1%27%20result%3D%27shadowBlurOuter1%27%3E%3C%2FfeGaussianBlur%3E%3CfeColorMatrix%20values%3D%270%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200.116423234%200%27%20type%3D%27matrix%27%20in%3D%27shadowBlurOuter1%27%3E%3C%2FfeColorMatrix%3E%3C%2Ffilter%3E%3C%2Fdefs%3E%3Cg%20id%3D%27Page-1%27%20stroke%3D%27none%27%20stroke-width%3D%271%27%20fill%3D%27none%27%20fill-rule%3D%27evenodd%27%3E%3Cg%20id%3D%271-copy-20%27%20transform%3D%27translate(-1246.000000%2C%20-664.000000)%27%3E%3Cg%20id%3D%27Group-16%27%20transform%3D%27translate(1250.000000%2C%20666.000000)%27%3E%3Cg%20id%3D%27Oval-4%27%3E%3Cuse%20fill%3D%27white%27%20fill-opacity%3D%271%27%20filter%3D%27url(%23filter-2)%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3Cuse%20fill%3D%27\" + encodeURIComponent(brandColor) + \"%27%20fill-rule%3D%27evenodd%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3C%2Fg%3E%3Cg%20id%3D%27Group-5%27%20transform%3D%27translate(12.000000%2C%2011.000000)%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23FFFFFF%27%3E%3Cg%20id%3D%27fast-forward-arrows%27%20transform%3D%27translate(6.173934%2C%200.000000)%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3Cg%20id%3D%27fast-forward-arrows-copy%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\\\");\\n\\t\\t\\t}\\n\\t\\t\\t[dir=\\\"rtl\\\"].cc-sdk .submit-icon{\\n\\t\\t\\t\\tbackground-image: url(\\\"data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%2747px%27%20height%3D%2747px%27%20viewBox%3D%270%200%2047%2047%27%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%3E%0A%20%20%20%20%3Cdesc%3ECreated%20with%20Sketch.%3C%2Fdesc%3E%0A%20%20%20%20%3Cdefs%3E%3C%2Fdefs%3E%0A%20%20%20%20%3Cg%20id%3D%27Page-1%27%20stroke%3D%27none%27%20stroke-width%3D%271%27%20fill%3D%27none%27%20fill-rule%3D%27evenodd%27%3E%0A%20%20%20%20%20%20%20%20%3Cg%20id%3D%27Submit_Icon%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27Oval-4%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27path-1-link%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23white%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27path-1-link%27%20fill%3D%27\" + encodeURIComponent(brandColor) + \"%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27Group-5%27%20transform%3D%27translate(12.000000%2C%2011.000000)%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23ffffff%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27fast-forward-arrows%27%20transform%3D%27translate(11.173934%2C%208.500000)%20scale(-1%2C%201)%20translate(-11.173934%2C%20-8.500000)%20translate(6.173934%2C%200.000000)%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27fast-forward-arrows-copy%27%20transform%3D%27translate(5.000000%2C%208.500000)%20scale(-1%2C%201)%20translate(-5.000000%2C%20-8.500000)%20%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%3C%2Fg%3E%0A%3C%2Fsvg%3E\\\");\\n\\t\\t\\t}\\n\\t\\t\\t.cc-sdk .cc-question-container__required-label{\\n\\t\\t\\tcolor: \" + brandColor + \";\\n\\t\\t}\\n\\t\\t.cc-sdk input[type=\\\"range\\\"]::-webkit-slider-runnable-track{\\n\\t\\t\\tbackground: \" + brandColor + \" !important;\\n\\t\\t\\t   background: -moz-linear-gradient(-45deg, \" + brandColor + \" 0%, \" + this.brandColorDark + \" 100%)!important;\\n\\t\\t\\t   background: -webkit-linear-gradient(-45deg, \" + brandColor + \"' 0%,\" + this.brandColorDark + \" 100%)!important;\\n\\t\\t\\t   background: linear-gradient(135deg, \" + brandColor + \" 0%,\" + this.brandColorDark + \" 100%)!important;\\n\\t\\t\\t   filter: progid:DXImageTransform.Microsoft.gradient( startColorstr=\" + brandColor + \", endColorstr=\" + this.brandColorDark + \",GradientType=1 );\\n\\t\\t   }\\n\\t\\t.cc-sdk input[type=\\\"range\\\"]::-moz-range-track {\\n\\t\\t\\tbackground: \" + brandColor + \" !important;\\n\\t\\t\\tbackground: -moz-linear-gradient(-45deg, \" + brandColor + \" 0%, \" + this.brandColorDark + \" 100%)!important;\\n\\t\\t\\tbackground: -webkit-linear-gradient(-45deg, \" + brandColor + \" 0%, \" + this.brandColorDark + \" 100%)!important;\\n\\t\\t\\tbackground: linear-gradient(135deg, \" + brandColor + \" 0%,\" + this.brandColorDark + \" 100%)!important;\\n\\t\\t\\tfilter: progid:DXImageTransform.Microsoft.gradient( startColorstr=\" + brandColor + \", endColorstr=\" + this.brandColorDark + \",GradientType=1 );\\n\\t\\t}\\n\\t\\t   .cc-sdk input[type=\\\"range\\\"]::-webkit-slider-thumb{\\n\\t\\t\\tborder: 1px solid \" + brandColor + \" ;\\n\\t\\t\\tbackground-color: #fff;\\n\\t\\t   }\\n\\t\\t   .cc-sdk input[type=\\\"range\\\"]::-moz-range-thumb {\\n\\t\\t\\tborder: 1px solid \" + brandColor + \" ;\\n\\t\\t\\tbackground-color: #fff;\\n\\t\\t   }\\n\\t\\t   .cc-sdk svg.timer circle {\\n\\t\\t\\tanimation: countdown \" + time + \"s linear 1 forwards;\\n\\t\\t\\tstroke: \" + brandColor + \";\\n\\t\\t   }\\n\\t\\t   .cc-sdk input[type=range].selected::-webkit-slider-thumb {\\n\\t\\t\\t\\tbackground-color: \" + brandColor + \";\\n\\t\\t\\t}\\n\\t\\t\\t.cc-sdk input[type = range].selected::-moz - range - thumb {\\n\\t\\t\\t\\tbackground-color: \" + brandColor + \";\\n\\t\\t\\t}\\n\\t\\t\\t.cc-sdk .cc-checkbox label:hover:before{\\n\\t\\t\\t\\tborder: solid 1px \" + brandColor + \";\\n\\t\\t\\t}\\n\\t\\t @media (max-width: 768px){\\n\\t \\t\\t\\t.ccsdk-overlay.glass{\\n\\t \\t\\t\\tbackground-color:rgba(255,255,255,.85);\\n\\t \\t\\t\\tbackground-image:none;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t.cc-sdk.cc-popup-container{\\n\\t\\t\\t\\t\\tbackground-color : transparent;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t.cc-sdk.cc-popup-container .ccsdk-overlay.glass{\\n\\t\\t\\t\\t\\tbackground-color : \" + this.util.hexToRGB(brandColor, .9) + \";\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t.cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text{\\n\\t\\t\\t\\t\\tcolor:#fff;\\n\\t\\t\\t\\t}\\n\\t\\t\";\r\n        this.util.appendStyle(css);\r\n    }\r\n    return Theme;\r\n}());\r\nexports.Theme = Theme;\r\n\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar DomUtilities_1 = __webpack_require__(0);\r\nvar Slider = /** @class */ (function () {\r\n    function Slider() {\r\n        this.inputRange = document.getElementsByClassName('cc-sdk-range')[0];\r\n        this.rangeTip = this.inputRange.parentNode.querySelectorAll(\".act-slider-tip\")[0];\r\n        this.util = new DomUtilities_1.DomUtilities();\r\n        //  this.maxValue = 100; // the higher the smoother when dragging\r\n        this.speed = 5;\r\n        // set min/max value\r\n        // this.inputRange.min = 0;\r\n        this.inputRange.min = this.inputRange.getAttribute('min');\r\n        // this.inputRange.max = this.maxValue;\r\n        this.inputRange.max = this.inputRange.getAttribute('max');\r\n        this.setupListeners();\r\n    }\r\n    Slider.prototype.setupListeners = function () {\r\n        var self = this;\r\n        // bind events\r\n        this.inputRange.addEventListener('mouseup', this.clearTo, false);\r\n        // move gradient\r\n        this.inputRange.addEventListener('input', function () {\r\n            self.updateRangeTip();\r\n            self.util.addClass(this, 'selected');\r\n            //Change slide thumb color on way up\r\n            if (this.value > 20) {\r\n                self.inputRange.classList.add('ltpurple');\r\n            }\r\n            if (this.value > 40) {\r\n                self.inputRange.classList.add('purple');\r\n            }\r\n            if (this.value > 60) {\r\n                self.inputRange.classList.add('pink');\r\n            }\r\n            //Change slide thumb color on way down\r\n            if (this.value < 20) {\r\n                self.inputRange.classList.remove('ltpurple');\r\n            }\r\n            if (this.value < 40) {\r\n                self.inputRange.classList.remove('purple');\r\n            }\r\n            if (this.value < 60) {\r\n                self.inputRange.classList.remove('pink');\r\n            }\r\n        });\r\n    };\r\n    Slider.prototype.updateRangeTip = function () {\r\n        var self = this;\r\n        this.rangeTip.style.display = 'block';\r\n        this.rangeTip.innerHTML = this.inputRange.value;\r\n    };\r\n    Slider.prototype.clearTo = function () {\r\n        clearTimeout(this.timeout);\r\n    };\r\n    // listen for unlock\r\n    // unlockStartHandler() {\r\n    //   let self : any = this;\r\n    //   // clear raf if trying again\r\n    //   window.cancelAnimationFrame(this.rafID);\r\n    //   // set to desired value\r\n    //   this.currValue = +self.value;\r\n    // }\r\n    // unlockEndHandler() {\r\n    //   // store current value\r\n    //   this.currValue = + this.value;\r\n    //   // determine if we have reached success or not\r\n    //   if(this.currValue >= this.maxValue) {\r\n    //      this.successHandler();\r\n    //   }\r\n    //   else {\r\n    //      this.rafID = window.requestAnimationFrame(this.animateHandler);\r\n    //   }\r\n    // }\r\n    // handle range animation\r\n    Slider.prototype.animateHandler = function () {\r\n        // calculate gradient transition\r\n        var transX = this.currValue - this.maxValue;\r\n        // update input range\r\n        this.inputRange.value = this.currValue;\r\n        //Change slide thumb color on mouse up\r\n        if (this.currValue < 20) {\r\n            this.inputRange.classList.remove('ltpurple');\r\n        }\r\n        if (this.currValue < 40) {\r\n            this.inputRange.classList.remove('purple');\r\n        }\r\n        if (this.currValue < 60) {\r\n            this.inputRange.classList.remove('pink');\r\n        }\r\n        // determine if we need to continue\r\n        if (this.currValue > -1) {\r\n            window.requestAnimationFrame(this.animateHandler);\r\n        }\r\n        // decrement value\r\n        this.currValue = this.currValue - this.speed;\r\n    };\r\n    // handle successful unlock\r\n    Slider.prototype.successHandler = function () {\r\n    };\r\n    return Slider;\r\n}());\r\nexports.Slider = Slider;\r\n\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n//Manages trigger.\r\nvar Cookie_1 = __webpack_require__(2);\r\nvar Constants_1 = __webpack_require__(1);\r\n//collect initial data\r\n//if on site time is null, add on site time\r\nif (Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerSiteStartTime) == null) {\r\n    Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerSiteStartTime, new Date(), undefined, undefined);\r\n}\r\n//always add on page Time\r\nCookie_1.Cookie.set(Constants_1.Constants.CCTriggerPageStartTime, new Date(), undefined, undefined);\r\nvar sitePageViewCount = Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerSitePageViewCount);\r\nif (sitePageViewCount == null) {\r\n    Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerSitePageViewCount, 1, undefined, undefined);\r\n}\r\nelse {\r\n    sitePageViewCount = (parseInt(sitePageViewCount) + 1).toString();\r\n    Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerSitePageViewCount, sitePageViewCount, undefined, undefined);\r\n}\r\nvar individualPageViewCount = Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerIndividualPageViewCount);\r\nif (individualPageViewCount == null) {\r\n    Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerIndividualPageViewCount, 1, undefined, window.location.href);\r\n}\r\nelse {\r\n    individualPageViewCount = (parseInt(individualPageViewCount) + 1).toString();\r\n    Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerIndividualPageViewCount, individualPageViewCount, undefined, window.location.href);\r\n}\r\nwindow.click = 0;\r\nwindow.onscroll = function (e) {\r\n    // called when the window is scrolled.  \r\n    var doc = document.documentElement;\r\n    var left = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);\r\n    var top = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\r\n    window.ccsdkTopOffset = top;\r\n    TriggerManager.processScrollTriggers(top);\r\n};\r\ndocument.onclick = function (e) {\r\n    window.click++;\r\n};\r\n//TriggerManager adds to survey Queue\r\nvar TriggerManager = /** @class */ (function () {\r\n    function TriggerManager() {\r\n        //initialize triggers\r\n        //add those triggers which aren't completed yet.\r\n    }\r\n    TriggerManager.addSurvey = function (surveyId, trigger) {\r\n        TriggerManager.triggerInstances[surveyId] = trigger;\r\n        if (Object.keys(TriggerManager.triggerInstances).length >= 1) {\r\n            window.ccsdkDebug ? console.log(TriggerManager.triggerInterval) : '';\r\n            if (TriggerManager.triggerInterval == null) {\r\n                window.ccsdkDebug ? console.log(\"TriggerHandler : Setting up Interval Trigger Handlers.\") : '';\r\n                TriggerManager.triggerInterval = setInterval(TriggerManager.processIntervalTriggers, 1000);\r\n            }\r\n            //processing sequential triggers if any.\r\n            // console.log(\"TriggerHandler : Processing sequential triggers for  \" + surveyId);\r\n            // TriggerManager.processTriggersBySurveyId(surveyId);\r\n        }\r\n    };\r\n    TriggerManager.removeSurvey = function (surveyId) {\r\n        delete TriggerManager.triggerInstances[surveyId];\r\n        if (Object.keys(TriggerManager.triggerInstances).length == 0) {\r\n            clearInterval(TriggerManager.triggerInterval);\r\n        }\r\n    };\r\n    TriggerManager.processIntervalTriggers = function () {\r\n        //if some survey is already running skip processing surveys for now?or queue it?.\r\n        Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerPageElapsedTime, new Date(), undefined, window.location.href);\r\n        Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerSiteElapsedTime, new Date(), undefined, undefined);\r\n        //set cookies and call every process Interval Triggers.\r\n        for (var trigger in TriggerManager.triggerInstances) {\r\n            TriggerManager.triggerInstances[trigger].processIntervalTriggers();\r\n            TriggerManager.triggerInstances[trigger].processConditionalTriggers();\r\n        }\r\n    };\r\n    TriggerManager.processScrollTriggers = function (scrollNow) {\r\n        for (var trigger in TriggerManager.triggerInstances) {\r\n            //process all scroll triggers.\r\n            TriggerManager.triggerInstances[trigger].processScrollTriggers(scrollNow);\r\n        }\r\n    };\r\n    TriggerManager.disableTriggers = function (surveyId) {\r\n        TriggerManager.triggerInstances[surveyId].disableTriggers();\r\n    };\r\n    TriggerManager.triggerInterval = null;\r\n    TriggerManager.triggerInstances = {};\r\n    return TriggerManager;\r\n}());\r\nexports.TriggerManager = TriggerManager;\r\n;\r\n\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Cookie_1 = __webpack_require__(2);\r\nvar Constants_1 = __webpack_require__(1);\r\nvar SurveyManager_1 = __webpack_require__(3);\r\nvar TriggerUtils_1 = __webpack_require__(52);\r\nvar Triggers = /** @class */ (function () {\r\n    function Triggers(ccsdk) {\r\n        this.ccsdk = ccsdk;\r\n        this.pageCountTrigger = false;\r\n        this.siteCountTrigger = false;\r\n        this.pageTimeTrigger = false;\r\n        this.siteTimeTrigger = false;\r\n        this.urlParamTrigger = false;\r\n        this.notUrlParamTrigger = false;\r\n        this.utmParamTrigger = false;\r\n        this.scrollPixelsTrigger = false;\r\n        //disable all triggers.\r\n        this.pageCountTriggerEnabled = false;\r\n        this.siteCountTriggerEnabled = false;\r\n        this.pageTimeTriggerEnabled = false;\r\n        this.siteTimeTriggerEnabled = false;\r\n        this.urlParamTriggerEnabled = false;\r\n        this.notUrlParamTriggerEnabled = false;\r\n        this.utmParamTriggerEnabled = false;\r\n        this.scrollPixelsTriggerEnabled = false;\r\n        this.conditionalTriggers = {};\r\n    }\r\n    Triggers.prototype.enableClickTrigger = function (target, cb) {\r\n        var item = document.querySelectorAll(target)[0];\r\n        if (typeof item !== 'undefined') {\r\n            item.addEventListener('click', cb);\r\n        }\r\n    };\r\n    Triggers.prototype.enablePageCountTrigger = function (minPageCount) {\r\n        this.minPageCount = minPageCount;\r\n        this.pageCountTriggerEnabled = true;\r\n        this.TriggerPopUpByPageCount();\r\n    };\r\n    Triggers.prototype.enableSiteCountTrigger = function (minSiteCount) {\r\n        this.minSiteCount = minSiteCount;\r\n        this.pageCountTriggerEnabled = true;\r\n        this.TriggerPopUpByPageCount();\r\n    };\r\n    Triggers.prototype.enablePageTimeTrigger = function (minPageTime) {\r\n        this.minPageTime = minPageTime;\r\n        this.pageTimeTriggerEnabled = true;\r\n        this.TriggerPopUpByTimeSpentOnPage();\r\n    };\r\n    Triggers.prototype.enableSiteTimeTrigger = function (minSiteTime) {\r\n        this.minSiteTime = minSiteTime;\r\n        this.siteTimeTriggerEnabled = true;\r\n        this.TriggerPopUpByTimeSpentOnSite();\r\n    };\r\n    Triggers.prototype.enablePopUpByURLPatternTrigger = function (urlPattern) {\r\n        this.inUrl = urlPattern;\r\n        this.urlParamTriggerEnabled = true;\r\n        this.TriggerPopUpByURLPattern();\r\n    };\r\n    Triggers.prototype.enablePopUpByNotURLPatternTrigger = function (urlPattern) {\r\n        this.notinUrl = urlPattern;\r\n        this.notUrlParamTriggerEnabled = true;\r\n        this.TriggerPopUpByNotURLPattern();\r\n    };\r\n    Triggers.prototype.enablePopUpByUTMPatternTrigger = function (urlPattern) {\r\n        this.utm = urlPattern;\r\n        this.utmParamTriggerEnabled = true;\r\n        this.TriggerPopUpByUTMParameter();\r\n    };\r\n    Triggers.prototype.enableScrollPixelsTrigger = function (minScrollPixels) {\r\n        this.minScrollPixels = minScrollPixels;\r\n        this.scrollPixelsTriggerEnabled = true;\r\n    };\r\n    Triggers.prototype.processIntervalTriggers = function () {\r\n        //if survey already launched\r\n        //skip processing.\r\n        if (this.ccsdk.surveyRunning || this.ccsdk.surveyDone) {\r\n            return;\r\n        }\r\n        this.TriggerPopUpByTimeSpentOnPage();\r\n        this.TriggerPopUpByTimeSpentOnSite();\r\n    };\r\n    Triggers.prototype.setConditionalTriggers = function (config) {\r\n        window.ccsdkDebug ? console.log(config.grepURL) : '';\r\n        //\r\n        if ((typeof config.click !== 'undefined') && (config.click != 0)) {\r\n            this.conditionalTriggers.click = config.click;\r\n        }\r\n        if ((typeof config.onExitDetect !== 'undefined')) {\r\n            this.conditionalTriggers.onExitDetect = config.onExitDetect;\r\n        }\r\n        // if ((typeof config.cssSelector !== 'undefined')) {\r\n        //   this.conditionalTriggers.cssSelector = config.cssSelector;\r\n        // }\r\n        if ((typeof config.waitSeconds !== 'undefined') && (config.waitSeconds !== 0)) {\r\n            this.conditionalTriggers.waitSeconds = config.waitSeconds;\r\n        }\r\n        if ((typeof config.scrollPercent !== 'undefined') && (config.scrollPercent !== 0)) {\r\n            this.conditionalTriggers.scrollPercent = config.scrollPercent;\r\n        }\r\n        if ((typeof config.grepInvertURL !== 'undefined') && (config.grepInvertURL)) {\r\n            this.conditionalTriggers.grepInvertURL = config.grepInvertURL;\r\n        }\r\n        if ((typeof config.grepURL !== 'undefined') && (config.grepURL)) {\r\n            this.conditionalTriggers.grepURL = config.grepURL;\r\n        }\r\n    };\r\n    Triggers.prototype.processConditionalTriggers = function () {\r\n        //gather all conditional triggers and process them.\r\n        var self = this;\r\n        var isEnabled = true;\r\n        if (this.ccsdk.surveyRunning || this.ccsdk.surveyDone) {\r\n            window.ccsdkDebug ? console.log('returning') : '';\r\n            return;\r\n        }\r\n        if (typeof this.conditionalTriggers !== 'undefined') {\r\n            if (Object.keys(this.conditionalTriggers).length == 0) {\r\n                return false;\r\n            }\r\n            for (var conditionalTrigger in this.conditionalTriggers) {\r\n                if (this.conditionalTriggers[conditionalTrigger] != null) {\r\n                    switch (conditionalTrigger) {\r\n                        case \"onExitDetect\":\r\n                            var onExitDetect = self.ccsdk.util.initListener(\"mouseout\", \"document\", function () {\r\n                                window.ccsdkDebug ? console.log(\"Mouse out\") : '';\r\n                            });\r\n                            onExitDetect.internalHandler = self.ccsdk.util.listener(document, onExitDetect.type, onExitDetect.id, onExitDetect.cb);\r\n                            break;\r\n                        case \"click\":\r\n                            //find click count on screen\r\n                            //calculate click count\r\n                            // if((window as any).click > this.conditionalTriggers.click) {\r\n                            //   return SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n                            // }\r\n                            isEnabled = isEnabled && (window.click >= this.conditionalTriggers.click);\r\n                            break;\r\n                        case \"waitSeconds\":\r\n                            var pageStartTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerPageStartTime)).getTime();\r\n                            var pageTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerPageElapsedTime)).getTime();\r\n                            isEnabled = isEnabled && TriggerUtils_1.TriggerUtils.checkTimeCondition(pageTime, pageStartTime, this.conditionalTriggers[conditionalTrigger]);\r\n                            window.ccsdkDebug ? console.log('waitSeconds enabled', isEnabled) : '';\r\n                            break;\r\n                        case \"scrollPercent\":\r\n                            //fill it with current scroll position\r\n                            isEnabled = isEnabled && TriggerUtils_1.TriggerUtils.checkScroll(window.ccsdkTopOffset, this.conditionalTriggers[conditionalTrigger]);\r\n                            window.ccsdkDebug ? console.log('scrollPercent enabled', isEnabled) : '';\r\n                            break;\r\n                        case \"grepURL\":\r\n                            isEnabled = isEnabled && TriggerUtils_1.TriggerUtils.checkInUrl(this.conditionalTriggers[conditionalTrigger]);\r\n                            window.ccsdkDebug ? console.log('grepURL enabled', isEnabled) : '';\r\n                            break;\r\n                        case \"grepInvertURL\":\r\n                            isEnabled = isEnabled && !TriggerUtils_1.TriggerUtils.checkInUrl(this.conditionalTriggers[conditionalTrigger]);\r\n                            window.ccsdkDebug ? console.log('grepInvertURL enabled', isEnabled) : '';\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            if (isEnabled) {\r\n                if (this.ccsdk && this.ccsdk.tracking) {\r\n                    this.ccsdk.tracking.trackEvent('Popped Up', {\r\n                        token: this.ccsdk.tracking.token,\r\n                        data: {\r\n                            name: null,\r\n                            action: null\r\n                        }\r\n                    }, null, null);\r\n                }\r\n                SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n            }\r\n        }\r\n        else {\r\n            //do nothing.\r\n        }\r\n    };\r\n    Triggers.prototype.processNonConditionalTriggers = function () {\r\n        //process all non conditional one shot triggers here?\r\n    };\r\n    Triggers.prototype.processScrollTriggers = function (scrollNow) {\r\n        this.TriggerPopUpByScrollPixels(scrollNow);\r\n    };\r\n    Triggers.prototype.TriggerPopUpByPageCount = function () {\r\n        var pageCount = parseInt(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerSitePageViewCount));\r\n        if (pageCount == NaN) {\r\n            pageCount = 0;\r\n        }\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.pageCountTrigger && TriggerUtils_1.TriggerUtils.checkPageCount(pageCount, this.minPageCount)) {\r\n            this.pageCountTrigger = true;\r\n            //displayQuestion\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n        else {\r\n            //already executed.\r\n            //or condition not satisified yet.\r\n        }\r\n    };\r\n    //minPageTime in seconds\r\n    Triggers.prototype.TriggerPopUpByTimeSpentOnPage = function () {\r\n        var pageStartTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerPageStartTime)).getTime();\r\n        var pageTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerPageElapsedTime)).getTime();\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.pageTimeTrigger && TriggerUtils_1.TriggerUtils.checkTimeCondition(pageTime, pageStartTime, this.minPageTime)) {\r\n            this.pageTimeTrigger = true;\r\n            //displayQuestion\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n        else {\r\n            //already executed.\r\n            //or condition not satisified yet.\r\n        }\r\n    };\r\n    Triggers.prototype.TriggerPopUpByTimeSpentOnSite = function () {\r\n        var siteStartTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerSiteStartTime)).getTime();\r\n        var siteTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerSiteElapsedTime)).getTime();\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.siteTimeTrigger && TriggerUtils_1.TriggerUtils.checkTimeCondition(siteTime, siteStartTime, this.minSiteTime)) {\r\n            this.siteTimeTrigger = true;\r\n            //displayQuestion\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n        else {\r\n            //already executed.\r\n            //or condition not satisified yet.\r\n        }\r\n    };\r\n    Triggers.prototype.TriggerPopUpByInactivity = function () {\r\n    };\r\n    Triggers.prototype.TriggerPopUpByScrollPixels = function (scrollNow) {\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.scrollPixelsTrigger && TriggerUtils_1.TriggerUtils.checkScroll(scrollNow, this.minScrollPixels)) {\r\n            this.scrollPixelsTrigger = true;\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n            // this.ccsdk.initSurvey();\r\n            // SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n        else {\r\n            //already executed?\r\n            //or condition not satisified yet.\r\n        }\r\n    };\r\n    //run only once?\r\n    Triggers.prototype.TriggerPopUpByURLPattern = function () {\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.urlParamTrigger && TriggerUtils_1.TriggerUtils.checkInUrl(this.inUrl)) {\r\n            this.urlParamTrigger = true;\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n        else {\r\n        }\r\n    };\r\n    Triggers.prototype.TriggerPopUpByNotURLPattern = function () {\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.notUrlParamTrigger && !TriggerUtils_1.TriggerUtils.checkInUrl(this.inUrl)) {\r\n            this.notUrlParamTrigger = true;\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n        else {\r\n        }\r\n    };\r\n    Triggers.prototype.TriggerPopUpByUTMParameter = function () {\r\n        var utmP = this.utm.split(\"=\");\r\n        var utmVal = Cookie_1.Cookie.getParameterByName(utmP[0], undefined);\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.utmParamTrigger && utmVal === utmP[1]) {\r\n            this.utmParamTrigger = true;\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n    };\r\n    Triggers.prototype.resetTriggers = function () {\r\n        this.pageCountTrigger = false;\r\n        this.pageTimeTrigger = false;\r\n        this.siteTimeTrigger = false;\r\n        this.urlParamTrigger = false;\r\n        this.scrollPixelsTrigger = false;\r\n    };\r\n    return Triggers;\r\n}());\r\nexports.Triggers = Triggers;\r\n// function triggerHandler(surveyHandler) {\r\n//   //survey specific Trigger Handlers\r\n//   // self.surveyRunning = self.util.get('#' + self.surveyToken  + \"-survey\").length == 1;\r\n// Cookie.set(Constants.CCTriggerPageElapsedTime, new Date(), undefined, window.location.href);\r\n// Cookie.set(Constants.CCTriggerSiteElapsedTime, new Date(), undefined, undefined);\r\n//   surveyHandler.triggers.TriggerPopUpByTimeSpentOnSite(surveyHandler.siteInterval);\r\n//   // surveyHandler.surveyRunning = surveyHandler.util.get('#' + self.surveyToken  + \"-survey\").length == 1;\r\n//   surveyHandler.triggers.TriggerPopUpByTimeSpentOnPage(surveyHandler.pageInterval);\r\n// }\r\n//call below functions when survey is locked and loaded.\r\n// self.triggers.TriggerPopUpByURLPattern(/xyz=33/);\r\n// self.triggers.TriggerPopUpByUTMParameter();\r\n// self.triggerInterval = setInterval(self.triggerHandler, 1000, self);\r\n\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar TriggerUtils = /** @class */ (function () {\r\n    function TriggerUtils() {\r\n    }\r\n    TriggerUtils.checkInUrl = function (inUrl) {\r\n        return window.location.href.match(inUrl) != null && window.location.href.match(inUrl).length > 0;\r\n    };\r\n    TriggerUtils.checkTimeCondition = function (pageTime, pageStartTime, minPageTime) {\r\n        return Math.round((pageTime - pageStartTime) / 1000) > minPageTime;\r\n    };\r\n    TriggerUtils.checkScroll = function (scrollNow, minScrollPixels) {\r\n        return scrollNow > minScrollPixels;\r\n    };\r\n    TriggerUtils.checkPageCount = function (pageCount, minPageCount) {\r\n        return pageCount >= minPageCount;\r\n    };\r\n    return TriggerUtils;\r\n}());\r\nexports.TriggerUtils = TriggerUtils;\r\n\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Request_1 = __webpack_require__(4);\r\nvar MatomoTracker = /** @class */ (function () {\r\n    function MatomoTracker() {\r\n    }\r\n    MatomoTracker.prototype.trackEvent = function (event, payload, successCb, errorCb) {\r\n        var url = new URL('https://matomo.getcloudcherry.com/piwik.php');\r\n        // constants for project\r\n        var idsite = 4;\r\n        var rec = 1;\r\n        var searchParams = {\r\n            idsite: idsite,\r\n            rec: rec,\r\n            action_name: event,\r\n            url: window.location.href,\r\n            action_url: window.location.href,\r\n            uid: this.username,\r\n            _cvar: { '1': ['Token', payload.token] },\r\n            new_visit: event === 'Welcome Pop up Position' ? 1 : 0,\r\n            e_c: event,\r\n            e_a: payload.data.action,\r\n            e_n: payload.data.name,\r\n            rand: Math.ceil(Math.random() * 100)\r\n        };\r\n        Object.keys(searchParams).forEach(function (x) {\r\n            var param;\r\n            if (typeof searchParams[x] === 'string') {\r\n                param = searchParams[x];\r\n            }\r\n            else {\r\n                param = JSON.stringify(searchParams[x]);\r\n            }\r\n            url.searchParams.set(x, param);\r\n        });\r\n        return Request_1.RequestHelper.post(url.toString(), null, successCb, errorCb);\r\n    };\r\n    return MatomoTracker;\r\n}());\r\nexports.MatomoTracker = MatomoTracker;\r\n\n\n/***/ })\n/******/ ]);"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n","import { templates } from '../templates';\r\nimport { Config } from '../../Config';\r\n\r\nclass DomUtilities {\r\n\r\n  sbcRip: any;\r\n\r\n  constructor() {\r\n    // HTMLElement.prototype.matches = HTMLElement.prototype.matches ||\r\n    // HTMLElement.prototype.matchesSelector ||\r\n    // HTMLElement.prototype.webkitMatchesSelector ||\r\n    // HTMLElement.prototype.mozMatchesSelector ||\r\n    // HTMLElement.prototype.msMatchesSelector ||\r\n    // HTMLElement.prototype.oMatchesSelector;\r\n  }\r\n\r\n  get( selector: string ) {\r\n    return document.querySelectorAll( selector );\r\n  }\r\n\r\n  appendStyle( css: string ): void {\r\n    let head: any = document.head || document.getElementsByTagName( 'head' )[ 0 ];\r\n    let style: any = document.createElement( 'style' );\r\n    style.type = 'text/css';\r\n    if ( style.styleSheet ) {\r\n      style.styleSheet.cssText = css;\r\n    } else {\r\n      style.appendChild( document.createTextNode( css ) );\r\n    }\r\n    head.appendChild( style );\r\n  }\r\n\r\n  remove( el: any ) {\r\n    el.parentNode.removeChild( el );\r\n  }\r\n\r\n  removeAll( elements: any ): void {\r\n    Array.prototype.forEach.call( elements, ( el, i ) => {\r\n      el.parentNode.removeChild( el );\r\n    } );\r\n  }\r\n\r\n  css( elements: any, property: string, value: any ) {\r\n    Array.prototype.forEach.call( elements, ( el, i ) => {\r\n      el.style[ property ] = value;\r\n    } );\r\n  }\r\n\r\n  removeClassAll( elements: any, className: string ): void {\r\n    Array.prototype.forEach.call( elements, ( el, i ) => {\r\n      this.removeClass( el, className );\r\n    } );\r\n  }\r\n\r\n  addClassAll( elements: any, className: string ): void {\r\n    Array.prototype.forEach.call( elements, ( el, i ) => {\r\n      this.addClass( el, className );\r\n    } );\r\n  }\r\n\r\n  removeClass( el: any, className: string ): void {\r\n    // console.log(el);\r\n    if ( !el ) {\r\n      return;\r\n    }\r\n    if ( el.classList )\r\n      el.classList.remove( className );\r\n    else\r\n      el.className = el.className.replace( new RegExp( '(^|\\\\b)' + className.split( ' ' ).join( '|' ) + '(\\\\b|$)', 'gi' ), ' ' );\r\n  }\r\n  addClass( el: any, className: string ) {\r\n    if ( !el ) {\r\n      return;\r\n    }\r\n    if ( el.classList )\r\n      el.classList.add( className );\r\n    else\r\n      el.className += ' ' + className;\r\n  }\r\n  toggleClass( el: any, className: string ): void {\r\n    if ( el.classList ) {\r\n      if ( el.classList.contains( className ) )\r\n        el.classList.remove( className );\r\n      else\r\n        el.classList.add( className );\r\n    }\r\n\r\n\r\n  }\r\n  hasClass( el: any, className: string ) {\r\n    if ( el.classList )\r\n      return el.classList.contains( className );\r\n    else\r\n      return new RegExp( '(^| )' + className + '( |$)', 'gi' ).test( el.className );\r\n  }\r\n  ready( fn: any ): void {\r\n    if ( ( <any>document ).attachEvent ? document.readyState === \"complete\" : document.readyState !== \"loading\" ) {\r\n      fn();\r\n    } else {\r\n      document.addEventListener( 'DOMContentLoaded', fn );\r\n    }\r\n  }\r\n\r\n  getParents( el: any, parentSelector: any ): any {\r\n    // If no parentSelector defined will bubble up all the way to *document*\r\n    if ( parentSelector === undefined ) {\r\n      parentSelector = document;\r\n    }\r\n\r\n    var parents = [];\r\n    var p = el.parentNode;\r\n\r\n    while ( p !== parentSelector ) {\r\n      var o = p;\r\n      parents.push( o );\r\n      p = o.parentNode;\r\n    }\r\n    parents.push( parentSelector ); // Push that parentSelector you wanted to stop at\r\n\r\n    return parents;\r\n  }\r\n\r\n  listener( el: any, evt: any, sel: any, handler: any ): any {\r\n    let selectorMatches = function ( el, selector ) {\r\n      var p = Element.prototype;\r\n      var f = p.matches || p.webkitMatchesSelector || ( <any>p ).mozMatchesSelector || ( <any>p ).msMatchesSelector || function ( s ) {\r\n        return [].indexOf.call( document.querySelectorAll( s ), this ) !== -1;\r\n      };\r\n      return f.call( el, selector );\r\n    }\r\n    let internalHandler = function ( event ) {\r\n      var t = event.target;\r\n      while ( t && t !== this ) {\r\n        if ( selectorMatches( t, sel ) ) {\r\n          handler.call( t, event );\r\n        }\r\n        t = t.parentNode;\r\n      }\r\n    };\r\n    el.addEventListener( evt, internalHandler );\r\n    return internalHandler;\r\n  }\r\n\r\n\r\n\r\n\r\n  initListener( type: string, id: string, cb: any ) {\r\n    let ref: any = {\r\n      id: id,\r\n      type: type,\r\n      cb: cb,\r\n      internalHandler: undefined,\r\n    };\r\n    return ref;\r\n  }\r\n\r\n  checkIfListenerExists( id: string, ar: any ): boolean {\r\n    for ( let listener of ar ) {\r\n      if ( listener.id == id ) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  on( evt: any, el: any, handler: any ) {\r\n    el.addEventListener( evt, handler );\r\n  }\r\n  off( evt: any, el: any, handler: any ) {\r\n    el.removeEventListener( evt, handler );\r\n  }\r\n  removeListener( el: any, evt: any, handler: any ) {\r\n    el.removeEventListener( evt, handler );\r\n  }\r\n  removeAllListeners( ar: any ): boolean {\r\n    for ( let listener of ar ) {\r\n      this.removeListener( document.querySelectorAll( \"body\" )[ 0 ], listener.type, listener.internalHandler );\r\n    }\r\n    return true;\r\n  }\r\n\r\n  trigger( el: any, eventName: string, data: Object ) {\r\n    if ( typeof CustomEvent === 'function' ) {\r\n      var event = <any>new CustomEvent( eventName, { detail: data } );\r\n    } else {\r\n      var event = <any>document.createEvent( 'CustomEvent' );\r\n      event.initCustomEvent( eventName, true, true, data );\r\n    }\r\n\r\n    el.dispatchEvent( event );\r\n  }\r\n\r\n  removeTrigger( el: any, eventName: string ) {\r\n    el.removeEventListener( eventName );\r\n  }\r\n\r\n  shadeBlendConvert( p: number, from: any, to: string ): string {\r\n    if ( typeof ( p ) != \"number\" || p < -1 || p > 1 || typeof ( from ) != \"string\" || ( from[ 0 ] != 'r' && from[ 0 ] != '#' ) || ( typeof ( to ) != \"string\" && typeof ( to ) != \"undefined\" ) ) return null; //ErrorCheck\r\n    if ( !this.sbcRip ) this.sbcRip = function ( d ) {\r\n      var l = d.length, RGB = new Object();\r\n      if ( l > 9 ) {\r\n        d = d.split( \",\" );\r\n        if ( d.length < 3 || d.length > 4 ) return null;//ErrorCheck\r\n        RGB[ 0 ] = i( d[ 0 ].slice( 4 ) ), RGB[ 1 ] = i( d[ 1 ] ), RGB[ 2 ] = i( d[ 2 ] ), RGB[ 3 ] = d[ 3 ] ? parseFloat( d[ 3 ] ) : -1;\r\n      } else {\r\n        if ( l == 8 || l == 6 || l < 4 ) return null; //ErrorCheck\r\n        if ( l < 6 ) d = \"#\" + d[ 1 ] + d[ 1 ] + d[ 2 ] + d[ 2 ] + d[ 3 ] + d[ 3 ] + ( l > 4 ? d[ 4 ] + \"\" + d[ 4 ] : \"\" ); //3 digit\r\n        d = i( d.slice( 1 ), 16 ), RGB[ 0 ] = d >> 16 & 255, RGB[ 1 ] = d >> 8 & 255, RGB[ 2 ] = d & 255, RGB[ 3 ] = l == 9 || l == 5 ? r( ( ( d >> 24 & 255 ) / 255 ) * 10000 ) / 10000 : -1;\r\n      }\r\n      return RGB;\r\n    }\r\n    var i = parseInt, r = Math.round, h = from.length > 9, h = typeof ( to ) == \"string\" ? to.length > 9 ? true : to == \"c\" ? !h : false : h, b = p < 0, p = b ? p * -1 : p, to = to && to != \"c\" ? to : b ? \"#000000\" : \"#FFFFFF\", f = this.sbcRip( from ), t = this.sbcRip( to );\r\n    if ( !f || !t ) return null; //ErrorCheck\r\n    if ( h ) return \"rgb(\" + r( ( t[ 0 ] - f[ 0 ] ) * p + f[ 0 ] ) + \",\" + r( ( t[ 1 ] - f[ 1 ] ) * p + f[ 1 ] ) + \",\" + r( ( t[ 2 ] - f[ 2 ] ) * p + f[ 2 ] ) + ( f[ 3 ] < 0 && t[ 3 ] < 0 ? \")\" : \",\" + ( f[ 3 ] > -1 && t[ 3 ] > -1 ? r( ( ( t[ 3 ] - f[ 3 ] ) * p + f[ 3 ] ) * 10000 ) / 10000 : t[ 3 ] < 0 ? f[ 3 ] : t[ 3 ] ) + \")\" );\r\n    else return \"#\" + ( 0x100000000 + ( f[ 3 ] > -1 && t[ 3 ] > -1 ? r( ( ( t[ 3 ] - f[ 3 ] ) * p + f[ 3 ] ) * 255 ) : t[ 3 ] > -1 ? r( t[ 3 ] * 255 ) : f[ 3 ] > -1 ? r( f[ 3 ] * 255 ) : 255 ) * 0x1000000 + r( ( t[ 0 ] - f[ 0 ] ) * p + f[ 0 ] ) * 0x10000 + r( ( t[ 1 ] - f[ 1 ] ) * p + f[ 1 ] ) * 0x100 + r( ( t[ 2 ] - f[ 2 ] ) * p + f[ 2 ] ) ).toString( 16 ).slice( f[ 3 ] > -1 || t[ 3 ] > -1 ? 1 : 3 );\r\n  }\r\n\r\n  hexToRGB( hex: string, alpha: any ): string {\r\n    if ( !hex || [ 4, 7 ].indexOf( hex.length ) === -1 ) {\r\n      return; // throw new Error('Bad Hex');\r\n    }\r\n\r\n    hex = hex.substr( 1 );\r\n    // if shortcuts (#F00) -> set to normal (#FF0000)\r\n    if ( hex.length === 3 ) {\r\n      hex = hex.split( '' ).map( function ( el ) {\r\n        return el + el + '';\r\n      } ).join( '' );\r\n    }\r\n\r\n    var r = parseInt( hex.slice( 0, 2 ), 16 ),\r\n      g = parseInt( hex.slice( 2, 4 ), 16 ),\r\n      b = parseInt( hex.slice( 4, 6 ), 16 );\r\n\r\n    if ( alpha ) {\r\n      return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha + \")\";\r\n    } else {\r\n      return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\r\n    }\r\n  }\r\n\r\n\r\n  arrayContains( needle ) {\r\n    // Per spec, the way to identify NaN is that it is not equal to itself\r\n    var findNaN = needle !== needle;\r\n    var indexOf;\r\n\r\n    if ( !findNaN && typeof Array.prototype.indexOf === 'function' ) {\r\n      indexOf = Array.prototype.indexOf;\r\n    } else {\r\n      indexOf = function ( needle ) {\r\n        var i = -1, index = -1;\r\n\r\n        for ( i = 0; i < this.length; i++ ) {\r\n          var item = this[ i ];\r\n\r\n          if ( ( findNaN && item !== item ) || item === needle ) {\r\n            index = i;\r\n            break;\r\n          }\r\n        }\r\n\r\n        return index;\r\n      };\r\n    }\r\n\r\n    return indexOf.call( this, needle ) > -1;\r\n  }\r\n\r\n  generateSelectOptions( arr: string[], translatedArr: string[] ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let translatedOpt = ( translatedArr[ i ] || arr[ i ] ).split( ';' );\r\n        let arrOpt = arr[ i ].split( ';' );\r\n        res += '<option value=\"' + arrOpt[ 0 ] + '\">' + ( translatedOpt[ 0 ] ) + '</option>';\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n  generateLanguageSelectOptions( arr: any ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        if ( arr[ i ] == 'default' ) {\r\n          res += '<option value=\"' + arr[ i ] + '\">English (Default)</option>';\r\n        } else {\r\n          res += '<option value=\"' + arr[ i ] + '\">' + arr[ i ] + '</option>';\r\n        }\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n  checkOptionContainsImage( arr: any ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: boolean = true;\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let opt: any = arr[ i ];\r\n        res = res && ( opt.indexOf( ';' ) !== -1 ) && ( opt.indexOf( '.' ) !== -1 );\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n\r\n  generateRadioImageOptions( arr: string[], translatedArr: string[], id: string ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let optHtml: string = templates.option_radio_image;\r\n        let opt: any = arr[ i ].split( ';' )\r\n        let translatedOpt = translatedArr[ i ].split( ';' )\r\n        //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n        //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n        optHtml = optHtml.replace( /{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[ 1 ] );\r\n        optHtml = optHtml.replace( /{{qId}}/g, \"nm\" + id );\r\n        optHtml = optHtml.replace( /{{label}}/g, translatedOpt[ 0 ] );\r\n        optHtml = optHtml.replace( /{{labelFor}}/g, translatedOpt[ 0 ].replace( /\\s+/g, '-' ) );\r\n        optHtml = optHtml.replace( /{{value}}/g, opt[ 0 ] );\r\n        res += optHtml;\r\n\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n  generateRadioIgnoreImageOptions( arr: string[], translatedArr: string[], id: string ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let optHtml: string = templates.option_radio;\r\n        let opt: any = arr[ i ].split( ';' );\r\n        let translatedOpt = translatedArr[ i ].split( ';' );\r\n        //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n        //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n        optHtml = optHtml.replace( /{{qId}}/g, \"nm\" + id );\r\n        optHtml = optHtml.replace( /{{label}}/g, translatedOpt[ 0 ] );\r\n        optHtml = optHtml.replace( /{{labelFor}}/g, translatedOpt[ 0 ].replace( /\\s+/g, '-' ) );\r\n        optHtml = optHtml.replace( /{{value}}/g, opt[ 0 ] );\r\n        res += optHtml;\r\n\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n\r\n\r\n  generateRadioOptions( arr: string, translatedArr: string[], id: string ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let optHtml: string = templates.option_radio;\r\n        let opt: any = arr[ i ].split( ';' );\r\n        let translatedOpt = translatedArr[ i ].split( ';' );\r\n        optHtml = optHtml.replace( /{{qId}}/g, \"nm\" + id );\r\n        optHtml = optHtml.replace( /{{label}}/g, translatedOpt[ 0 ] );\r\n        optHtml = optHtml.replace( /{{labelFor}}/g, translatedOpt[ 0 ].replace( /\\s+/g, '-' ) );\r\n        optHtml = optHtml.replace( /{{value}}/g, opt[ 0 ] );\r\n        res += optHtml;\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n  generateCheckboxImageOptions( arr: string[], translatedArr: string[], id: string ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let optHtml: string = templates.option_checkbox_image;\r\n        let opt: any = arr[ i ].split( ';' );\r\n        let translatedOpt = translatedArr[ i ].split( ';' );\r\n        //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n        //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n        optHtml = optHtml.replace( /{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[ 1 ] );\r\n        optHtml = optHtml.replace( /{{qId}}/g, \"nm\" + id );\r\n        optHtml = optHtml.replace( /{{label}}/g, translatedOpt[ 0 ] );\r\n        optHtml = optHtml.replace( /{{labelFor}}/g, translatedOpt[ 0 ].replace( /\\s+/g, '-' ) );\r\n        optHtml = optHtml.replace( /{{value}}/g, opt[ 0 ] );\r\n        res += optHtml;\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n\r\n  generateCheckboxIgnoreImageOptions( arr: string[], translatedArr: string[], id: string ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let optHtml: string = templates.option_checkbox;\r\n        let opt: any = arr[ i ].split( ';' );\r\n        let translatedOpt = translatedArr[ i ].split( ';' );\r\n\r\n        //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n        //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n        optHtml = optHtml.replace( /{{qId}}/g, \"nm\" + id );\r\n        optHtml = optHtml.replace( /{{label}}/g, translatedOpt[ 0 ] );\r\n        optHtml = optHtml.replace( /{{labelFor}}/g, translatedOpt[ 0 ].replace( /\\s+/g, '-' ) );\r\n        optHtml = optHtml.replace( /{{value}}/g, opt[ 0 ] );\r\n        res += optHtml;\r\n\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n\r\n  generateCheckboxOptions( arr: string[], translatedArr: string[], id: string ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let optHtml: string = templates.option_checkbox;\r\n        let opt: any = arr[ i ].split( ';' );\r\n        let translatedOpt = translatedArr[ i ].split( ';' );\r\n        optHtml = optHtml.replace( /{{label}}/g, translatedOpt[ 0 ] );\r\n        optHtml = optHtml.replace( /{{labelFor}}/g, translatedOpt[ 0 ].replace( /\\s+/g, '-' ) );\r\n        optHtml = optHtml.replace( /{{value}}/g, opt[ 0 ] );\r\n\r\n        res += optHtml;\r\n\r\n      }\r\n      // console.log( res );\r\n      return res;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n//add Math.round\r\n\r\n\r\nexport { DomUtilities };\r\n","class Constants {\r\n  static CCTriggerPageStartTime = \"cc-trigger-page-start-time\";\r\n  static CCTriggerPageElapsedTime = \"cc-trigger-page-elapsed-time\";\r\n  static CCTriggerSiteStartTime = \"cc-trigger-site-start-time\";\r\n  static CCTriggerSiteElapsedTime = \"cc-trigger-site-elapsed-time\";\r\n  static CCTriggerSitePageViewCount = \"cc-trigger-site-page-count\";\r\n  static CCTriggerIndividualPageViewCount = \"cc-trigger-individual-page-count\";\r\n  static SURVEY_IMPRESSION_EVENT = \"onImpression\";\r\n  static SURVEY_START_EVENT = \"onStart\";\r\n  static SURVEY_DATA_EVENT = \"onData\";\r\n  static SURVEY_END_EVENT = \"onEnd\";\r\n  static SURVEY_CLOSE_EVENT = \"onClose\";\r\n  static SURVEY_QUESTION_EVENT = \"onQuestion\";\r\n  static SURVEY_ANSWER_EVENT = \"onAnswer\";\r\n  static SURVEY_CLICK_EVENT = \"onClick\";\r\n  static GRANT_TYPE = \"password\";\r\n  static AUTHORIZATION = \"Authorization\";\r\n  static AUTHORIZATION_BEARER = \"Bearer\";\r\n  static SURVEY_CLIENT = \"JS-MicroWeb\";\r\n}\r\n\r\nexport { Constants };","class Cookie {\r\n    /**\r\n     * Set/Overwrite a cookie value\r\n     *\r\n     * @param name\r\n     * @param value\r\n     * @param days      OPTIONAL Days till this cookie will stay valid. Default is current session\r\n     * @param path      OPTIONAL domain root will be used by default\r\n     */\r\n    static set(name : any, value : any, days : any, path : any) {\r\n      if (days) {\r\n          var date = new Date();\r\n              date.setTime(date.getTime()+(days*24*60*60*1000));\r\n          var expires = \"; expires=\"+date.toUTCString();\r\n      } else var expires = \"\";\r\n\r\n      var dir = path || '/';\r\n      document.cookie = name+\"=\"+value+expires+\"; path=\"+dir;\r\n  }\r\n\r\n  /**\r\n   * Retrieve a cookie value\r\n   *\r\n   * @param name\r\n   * @return String|null\r\n   */\r\n  static get(name) {\r\n      var nameEQ = name + \"=\";\r\n      var ca = document.cookie.split(';');\r\n      for(var i=0;i < ca.length;i++) {\r\n          var c = ca[i];\r\n          while (c.charAt(0)==' ') c = c.substring(1,c.length);\r\n          if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);\r\n      }\r\n      return null;\r\n  }\r\n\r\n  /**\r\n   * Remove a cookie\r\n   *\r\n   * @param name\r\n   */\r\n  static delete(name) {\r\n    Cookie.set(name,\"\",-1, undefined);\r\n  }\r\n\r\n  static getParameterByName(name : string, url : any) {\r\n    if (!url) url = window.location.href;\r\n    name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\r\n    var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\r\n        results = regex.exec(url);\r\n    if (!results) return null;\r\n    if (!results[2]) return '';\r\n    return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\r\n  }\r\n}\r\n\r\nexport { Cookie };\r\n","\r\n//Survey Manager manages and queues survey.\r\n\r\nclass SurveyManager {\r\n\r\n  static surveyQueue: any = [];\r\n  static processQueueInterval: any = null;\r\n\r\n  static surveyInstances: any = {};\r\n\r\n  static initializeSurvey( surveyId: string ) {\r\n    //check if survey ran?\r\n    //do survey initialization.\r\n    if ( !SurveyManager.surveyInstances || !SurveyManager.surveyInstances[ surveyId ] ) {\r\n      console.error( 'Microsurvey not properly set up. Contact Support.' );\r\n      return;\r\n    }\r\n\r\n    SurveyManager.surveyInstances[ surveyId ].setupSurvey();\r\n  }\r\n\r\n  static addSurvey( surveyId ) {\r\n    ( window as any ).ccsdkDebug ? console.log( \"Adding survey ID : \" + surveyId ) : '';\r\n    SurveyManager.surveyQueue.push( surveyId );\r\n    if ( SurveyManager.processQueueInterval == null ) {\r\n      SurveyManager.processQueueInterval = setInterval( SurveyManager.processQueueIntervalCB, 100 );\r\n    }\r\n  }\r\n\r\n  static removeSurvey( surveyId ) {\r\n    if ( SurveyManager.surveyQueue.length > 0 ) {\r\n      for ( let survey in SurveyManager.surveyQueue ) {\r\n        if ( SurveyManager.surveyQueue[ survey ].surveyId == surveyId ) {\r\n          SurveyManager.surveyQueue.splice( survey, 1 );\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    if ( SurveyManager.surveyQueue.length == 0 ) {\r\n      clearInterval( SurveyManager.processQueueInterval );\r\n    }\r\n  }\r\n\r\n  static processQueueIntervalCB() {\r\n    if ( ( window as any ).globalSurveyRunning == true ) {\r\n      return;\r\n    } else {\r\n      let surveyId = SurveyManager.surveyQueue.pop();\r\n      ( window as any ).ccsdkDebug ? console.log( \"Processing survey ID \" + surveyId ) : '';\r\n      if ( surveyId == undefined ) {\r\n        clearInterval( SurveyManager.processQueueInterval );\r\n        SurveyManager.processQueueInterval = null;\r\n      } else {\r\n        ( window as any ).globalSurveyRunning = true;\r\n        SurveyManager.initializeSurvey( surveyId );\r\n      }\r\n    }\r\n  }\r\n\r\n  public static setSurveyRunning() {\r\n    ( window as any ).globalSurveyRunning = true;\r\n    ( window as any ).globalSurveyStartTime = new Date();\r\n  }\r\n\r\n  public static unsetSurveyRunning() {\r\n    ( window as any ).globalSurveyRunning = false;\r\n  }\r\n}\r\n\r\nexport { SurveyManager };","// import 'whatwg-fetch';\r\n\r\nfunction makeRequest( method: string, url: string, postParams: string, headers: any, successcb: any, errorcb: any ): any {\r\n  var xhr = new XMLHttpRequest();\r\n  xhr.open( method, url );\r\n  xhr.onload = function () {\r\n    if ( ( this as any ).status >= 200 && ( this as any ).status < 300 ) {\r\n      if ( xhr.response ) {\r\n      }\r\n      let res: any = xhr.response && typeof xhr.response === 'string' && !xhr.response.match( 'GIF' ) ? JSON.parse( xhr.response ) : '';\r\n      if ( successcb ) successcb( res );\r\n    } else {\r\n      if ( errorcb ) {\r\n        errorcb( {\r\n          status: ( this as any ).status,\r\n          statusText: xhr.statusText\r\n        } );\r\n      }\r\n    }\r\n  };\r\n  xhr.onerror = function () {\r\n    if ( errorcb ) {\r\n      errorcb( {\r\n        status: ( this as any ).status,\r\n        statusText: xhr.statusText\r\n      } );\r\n    }\r\n  };\r\n  if ( headers ) {\r\n    Object.keys( headers ).forEach( function ( key ) {\r\n      xhr.setRequestHeader( key, headers[ key ] );\r\n    } );\r\n  }\r\n  // var params : any = postParams;\r\n  // We'll need to stringify if we've been given an object\r\n  // If we have a string, this is skipped.\r\n  // if (params && typeof params === 'object') {\r\n  //   params = Object.keys(params).map(function (key) {\r\n  //     return encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\r\n  //   }).join('&');\r\n  // }\r\n  xhr.send( postParams );\r\n}\r\n\r\nclass RequestHelper {\r\n\r\n  static getWithHeaders( url: string, headers: any, successcb: any, errorcb: any ) {\r\n    return makeRequest( \"GET\", url, null, headers, successcb, errorcb );\r\n  }\r\n\r\n  static postWithHeaders( url: string, data: Object, headers: any, successcb: any, errorcb: any ) {\r\n    headers[ \"Content-Type\" ] = \"application/json;charset=utf-8\";\r\n    return makeRequest( \"POST\", url, JSON.stringify( data ), headers, successcb, errorcb );\r\n\r\n  }\r\n\r\n  static get( url: string, successcb: any, errorcb: any ) {\r\n    return makeRequest( \"GET\", url, null, null, successcb, errorcb );\r\n    // let request : Request = new Request( (url as any) , new Object());\r\n    // return fetch(request).then( (response : Response) => {\r\n    //   if (response.status >= 200 && response.status < 300) {\r\n    //     return Promise.resolve(response);\r\n    //   } else {\r\n    //     var error = new Error(response.statusText);\r\n    //     // error.response = response;\r\n    //     throw error;\r\n    //   }\r\n    // }).then( (response : Response) => {\r\n    //   return response.json();\r\n    // }).catch( (error : Error) => {\r\n    //   (window as any).ccsdkDebug?console.log('Request failed ', error):'';\r\n    // });\r\n  }\r\n\r\n  /**\r\n   *\r\n   * var data = new FormData()\r\n   *  data.append('file', input.files[0])\r\n   *  data.append('user', 'hubot')\r\n   *\r\n   * @static\r\n   * @param {any} url\r\n   * @param {any} data\r\n   * @memberof Request\r\n   */\r\n  static post( url: string, data: Object, successcb: any, errorcb: any ) {\r\n    //consider, file upload?\r\n    // (window as any).ccsdkDebug?console.log(\"[\" + JSON.stringify(data) + \"]\"):'';\r\n    ( window as any ).ccsdkDebug ? console.log( \"Sending : \" + data ) : '';\r\n    return makeRequest( \"POST\", url, JSON.stringify( data ), {}, successcb, errorcb );\r\n    // let request : Request = new Request( (url as any), {\r\n    //   method : \"POST\",\r\n    //   headers : {\r\n    //     \"Content-Type\" : \"application/json; charset=utf-8\"\r\n    //   },\r\n    //   body : JSON.stringify(data)\r\n    // });\r\n    // return fetch(request).then( (response : Response) => {\r\n    //   if (response.status >= 200 && response.status < 300) {\r\n    //     return Promise.resolve(response);\r\n    //   } else {\r\n    //     let error : Error = new Error(response.statusText);\r\n    //     // error.response = response;\r\n    //     throw error;\r\n    //   }\r\n    // }).then( (response : Response) => {\r\n    //   return response.json();\r\n    // }).catch( (error : Error) => {\r\n    //   (window as any).ccsdkDebug?console.log('Request failed ', error):'';\r\n    // });\r\n  }\r\n\r\n}\r\n\r\nexport { RequestHelper };\r\n","class LanguageTextFilter {\r\n\r\n    public static translateQuestionText( surveyHandler: any, question: any ) {\r\n        if ( surveyHandler.ccsdk.config.language.indexOf( 'Default' ) === -1 ) {\r\n            if ( question.translated != null &&\r\n                typeof question.translated[ surveyHandler.ccsdk.config.language ] !== 'undefined' ) {\r\n                if ( question.translated[ surveyHandler.ccsdk.config.language ].text ) {\r\n                    let qText = question.translated[ surveyHandler.ccsdk.config.language ].text.split( ':' );\r\n                    if ( question.translated[ surveyHandler.ccsdk.config.language ].text.indexOf( \":\" ) !== -1 ) {\r\n                        qText = qText[ 0 ] + ': <br><span class=\"text-normal\">' + qText[ 1 ] + '</span>';\r\n                    }\r\n                    return qText;\r\n                }\r\n                // else if ( question.translated[ surveyHandler.ccsdk.config.language ].text ) {\r\n                //     return question.translated[ surveyHandler.ccsdk.config.language ].text;\r\n                // }\r\n                // return question.translated[surveyHandler.ccsdk.config.language].text;\r\n            }\r\n        }\r\n        if ( question.text ) {\r\n            let qText = question.text.split( ':' );\r\n            if ( question.text.indexOf( \":\" ) !== -1 ) {\r\n                qText = qText[ 0 ] + ': <br><span class=\"text-normal\">' + qText[ 1 ] + '</span>';\r\n            }\r\n            return qText;\r\n        } else {\r\n            return question.text == null ? '' : question.text;\r\n        }\r\n    }\r\n\r\n    public static translateMessages( surveyHandler: any, type: string ) {\r\n        if ( surveyHandler.surveyData.translated != null && typeof surveyHandler.surveyData.translated[ surveyHandler.ccsdk.config.language ] !== 'undefined' ) {\r\n            if ( surveyHandler.ccsdk.config.language.indexOf( 'Default' ) === -1 ) {\r\n                if ( surveyHandler.surveyData.translated[ surveyHandler.ccsdk.config.language ] !== 'undefined' ) {\r\n                    if ( surveyHandler.surveyData.translated[ surveyHandler.ccsdk.config.language ][ type ] != null ) {\r\n                        return surveyHandler.surveyData.translated[ surveyHandler.ccsdk.config.language ][ type ];\r\n                    } else {\r\n                        return surveyHandler.surveyData[ type ];\r\n                    }\r\n                } else {\r\n                    return surveyHandler.surveyData[ type ];\r\n                }\r\n            } else {\r\n                return surveyHandler.surveyData[ type ];\r\n            }\r\n        }\r\n    }\r\n\r\n    public static translateDisplayLegend( surveyHandler: any, question: any ) {\r\n        if ( surveyHandler.ccsdk.config.language.indexOf( 'Default' ) === -1 ) {\r\n            if ( question.translated != null &&\r\n                typeof question.translated[ surveyHandler.ccsdk.config.language ] !== 'undefined' ) {\r\n                return question.translated[ surveyHandler.ccsdk.config.language ].displayLegend;\r\n            } else {\r\n                return question.displayLegend;\r\n            }\r\n        } else {\r\n            return question.displayLegend;\r\n        }\r\n    }\r\n\r\n    public static translateMultiSelect( surveyHandler: any, question: any ) {\r\n        if ( surveyHandler.ccsdk.config.language.indexOf( 'Default' ) === -1 ) {\r\n            if ( question.translated != null &&\r\n                typeof question.translated[ surveyHandler.ccsdk.config.language ] !== 'undefined' &&\r\n                question.translated[ surveyHandler.ccsdk.config.language ].multiSelect\r\n            ) {\r\n                let translatedOptions = question.translated[ surveyHandler.ccsdk.config.language ].multiSelect;\r\n                return question.multiSelect.map( ( x, i ) => {\r\n                    if ( translatedOptions[ i ] ) {\r\n                        return translatedOptions[ i ];\r\n                    } else {\r\n                        return x;\r\n                    }\r\n                } );\r\n            } else {\r\n                return question.multiSelect;\r\n            }\r\n        } else {\r\n            return question.multiSelect;\r\n        }\r\n    }\r\n\r\n    public static translateMultiSelectOption( surveyHandler: any, question: any, option: any ) {\r\n        let effectiveMultiselect = this.translateMultiSelect( surveyHandler, question );\r\n        if ( ( effectiveMultiselect instanceof Array ) && effectiveMultiselect.length > 0 ) {\r\n            for ( let i = 0; i < question.multiSelect.length; i++ ) {\r\n                let opt: any = question.multiSelect[ i ].split( ';' )\r\n                if ( opt[ 0 ] == option ) {\r\n                    return effectiveMultiselect[ i ].split( ';' )[ 0 ];\r\n                } else {\r\n\r\n                }\r\n            }\r\n        }\r\n        return option;\r\n    }\r\n\r\n}\r\n\r\nexport { LanguageTextFilter };","class Config {\r\n  static API_URL: String = \"https://api.getcloudcherry.com\";\r\n  static SURVEY_BY_TOKEN: String = \"/api/SurveyByToken/{token}/\";\r\n  // static SURVEY_BY_TOKEN : String  = \"/api/SurveyByToken/{token}/{tabletId}\";\r\n  static SURVEY_PARTIAL_RESPONSE: String = \"/api/PartialSurvey/{id}/{complete}/JS-MicroWeb\";\r\n  // static SURVEY_PARTIAL_RESPONSE : String =  \"/api/PartialSurvey/{id}/{complete}/JS-Web/{tabletId}\";\r\n  static CDN_URL: string = \"https://cx.getcloudcherry.com/\";\r\n  static CDN_ASSET_URL: string = \"https://cx.getcloudcherry.com/microsurvey-assets/\";\r\n  static POST_LOGIN_TOKEN = \"/api/LoginToken\";\r\n  static GET_SURVEY_THROTTLE_LOGIC = \"/api/SurveyThrottleLogic/{location}\";\r\n  static POST_THROTTLING = \"/api/Throttling\";\r\n  static POST_THROTTLING_ADD_ENTRIES = \"/api/Throttling/AddEntries\";\r\n  static POST_SURVEY_FINAL = \"/api/surveybytoken/{tokenId}\"\r\n  static GET_CAMPAIGN = \"/api/SurveyToken/Campaign/{token}/\"\r\n}\r\n\r\nexport { Config };\r\n","import '../css/main.scss';\r\nimport * as QuestionSurvey from '../templates/Survey.html';\r\nimport * as QuestionStart from '../templates/QuestionStart.html';\r\nimport * as QuestionSingleline from '../templates/QuestionSingleline.html';\r\nimport * as QuestionNumber from '../templates/QuestionNumber.html';\r\nimport * as QuestionMultiline from '../templates/QuestionMultiline.html';\r\nimport * as QuestionCheckbox from '../templates/QuestionCheckbox.html';\r\nimport * as QuestionRadio from '../templates/QuestionRadio.html';\r\nimport * as QuestionRadioImage from '../templates/QuestionRadioImage.html';\r\nimport * as QuestionScale from '../templates/QuestionScale.html';\r\nimport * as QuestionCSATAgreement5 from '../templates/QuestionCSATAgreement5.html';\r\nimport * as QuestionCSATSatisfaction5 from '../templates/QuestionCSATSatisfaction5.html';\r\nimport * as QuestionNPS from '../templates/QuestionNPS.html';\r\nimport * as QuestionSelect from '../templates/QuestionSelect.html';\r\nimport * as QuestionMultiSelect from '../templates/QuestionMultiSelect.html';\r\nimport * as QuestionSmile from '../templates/QuestionSmile.html';\r\nimport * as QuestionSmileInverted from '../templates/QuestionSmileInverted.html';\r\nimport * as QuestionStar from '../templates/QuestionStar.html';\r\nimport * as QuestionSlider from '../templates/QuestionSlider.html';\r\nimport * as OptionRadioImage from '../templates/OptionRadioImage.html';\r\nimport * as OptionRadio from '../templates/OptionRadio.html';\r\nimport * as OptionCheckbox from '../templates/OptionCheckbox.html';\r\nimport * as OptionCheckboxImage from '../templates/OptionCheckboxImage.html';\r\nimport * as ThankYou from '../templates/ThankYou.html';\r\nimport * as QuestionDate from '../templates/QuestionDate.html';\r\nimport * as LanguageSelector from '../templates/LanguageSelector.html';\r\n\r\nlet templates = {\r\n  question_survey: QuestionSurvey,\r\n  question_start: QuestionStart,\r\n  question_text: QuestionSingleline,\r\n  question_number: QuestionNumber,\r\n  question_scale: QuestionScale,\r\n  question_csat_agreement_5: QuestionCSATAgreement5,\r\n  question_csat_satisfaction_5: QuestionCSATSatisfaction5,\r\n  question_nps: QuestionNPS,\r\n  question_multi_line_text: QuestionMultiline,\r\n  question_multi_select: QuestionMultiSelect,\r\n  question_radio: QuestionRadio,\r\n  question_radio_image: QuestionRadioImage,\r\n  question_checkbox: QuestionCheckbox,\r\n  question_select: QuestionSelect,\r\n  question_smile_5: QuestionSmile,\r\n  question_date: QuestionDate,\r\n  question_smile_5_inverted: QuestionSmileInverted,\r\n  question_star_5: QuestionStar,\r\n  question_slider: QuestionSlider,\r\n  option_radio_image: OptionRadioImage,\r\n  option_radio: OptionRadio,\r\n  option_checkbox: OptionCheckbox,\r\n  option_checkbox_image: OptionCheckboxImage,\r\n  thankyou: ThankYou,\r\n  language_selector: LanguageSelector\r\n};\r\n\r\nexport { templates };\r\n","export function isAnd(filterQuestion: any): boolean {\r\n  if (!filterQuestion) {\r\n    return false;\r\n  }\r\n  if (filterQuestion.groupBy == null || filterQuestion.groupBy.toUpperCase() == \"AND\") {\r\n    return true;\r\n  }\r\n}\r\n\r\nexport function isOr(filterQuestion: any): boolean {\r\n  if (!filterQuestion) {\r\n    return false;\r\n  }\r\n  if (filterQuestion.groupBy != null && filterQuestion.groupBy.toUpperCase() == \"OR\") {\r\n    return true;\r\n  }\r\n}\r\n\r\nexport function isNumberCheck(filterQuestion: any): boolean {\r\n  if (!filterQuestion) {\r\n    return false;\r\n  }\r\n  if (filterQuestion.answerCheck[0] === \"lt\" || filterQuestion.answerCheck[0] === \"gt\" || filterQuestion.answerCheck[0] === \"eq\") {\r\n    return true;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n  * Contains logic to control conditional flow and whether to show or hide the questions based on the user input\r\n  *\r\n  * @param filterQuestion\r\n  * @return\r\n  */\r\nexport function doesSatisfy(surveyHandler: any, filterQuestion: any): boolean {\r\n  const answer = surveyHandler.getAnswerForQuestionId(filterQuestion.questionId);\r\n  if (isNumberCheck(filterQuestion)) {\r\n    if (filterQuestion.answerCheck[0].toLowerCase() == \"lt\") {\r\n      if (answer)\r\n        if (answer.numberInput != null && answer.numberInput < filterQuestion.number) {\r\n          return true;\r\n        }\r\n    } else if (filterQuestion.answerCheck[0].toLowerCase() == (\"gt\")) {\r\n      if (answer)\r\n        if (answer.numberInput != null && answer.numberInput > filterQuestion.number) {\r\n          return true;\r\n        }\r\n    } else if (filterQuestion.answerCheck[0].toLowerCase() == (\"eq\")) {\r\n      if (answer)\r\n        if (answer.numberInput != null && answer.numberInput == filterQuestion.number) {\r\n          return true;\r\n        }\r\n    }\r\n  } else {\r\n    // any text match for text answers\r\n    if (filterQuestion.answerCheck[0] && filterQuestion.answerCheck[0].toLowerCase() === 'any text') {\r\n      if (answer && answer.textInput && answer.textInput !== ' ') {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    let iFoundAll = false;\r\n    let question = surveyHandler.getQuestionById(filterQuestion.questionId);\r\n    let questionAnswerText = answer != null && answer.textInput != null ? answer.textInput : '';\r\n    if (!answer) {\r\n      return false;\r\n    }\r\n    for (let aAnswer of filterQuestion.answerCheck) {\r\n      if (question.displayType === 'MultiSelect') {\r\n        let selectedOptions = answer.textInput.split(',');\r\n        if (selectedOptions.indexOf(aAnswer) !== -1) {\r\n          iFoundAll = true;\r\n        }\r\n      } else if (questionAnswerText === aAnswer) {\r\n        iFoundAll = true;\r\n      }\r\n    }\r\n    return iFoundAll;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function questionCompare(a: any, b: any) {\r\n  return a.sequence - b.sequence;\r\n}\r\n\r\nexport function checkLanguage(surveyHandler, fOption) {\r\n  if (surveyHandler.ccsdk.config && surveyHandler.ccsdk.config.language) {\r\n    return fOption.language === surveyHandler.ccsdk.config.language\r\n  }\r\n  return false;\r\n}\r\n","import { DomUtilities } from \"./DomUtilities\";\r\nimport {LanguageTextFilter} from '../filters/LanguageTextFilter';\r\n\r\nclass Select {\r\n  util: DomUtilities;\r\n  $body: any;\r\n  $html: any;\r\n  qId: any;\r\n  select: any;\r\n  type: string;\r\n  listeners: any = [];\r\n  constructor( qId: string ) {\r\n    this.qId = qId;\r\n  }\r\n  init( qId: string ) {\r\n    this.util = new DomUtilities();\r\n    this.$body = document.querySelectorAll( \"body\" )[ 0 ];\r\n    this.$html = document.querySelectorAll( \"html\" )[ 0 ];\r\n    var select = document.querySelectorAll( \"#\" + qId + \" .cc-select\" );\r\n\r\n    // var divSelect = document.querySelectorAll(\"div.cc-select\");\r\n    // this.util.removeAll(divSelect);\r\n    let parent = this;\r\n\r\n    //Assumption: iterating over array but there will always be one select at a time\r\n    this.type = select[ 0 ].getAttribute( 'data-type' );\r\n    Array.prototype.forEach.call( select, function ( el, i ) {\r\n      var self = el;\r\n      var $selectOptions = document.querySelectorAll( \"#\" + qId + \" .cc-select-options\" );\r\n      var classes = self.getAttribute( \"class\" ),\r\n        id = self.getAttribute( \"id\" ),\r\n        name = self.getAttribute( \"name\" );\r\n      var template = '<div class=\"' + classes + '\">';\r\n      template += '<span class=\"cc-select-trigger\">' + self.getAttribute( \"placeholder\" ) + '</span>';\r\n      template += '<div class=\"cc-select-options-container\" cc-scrollbar-container><div class=\"cc-select-options\">';\r\n      var options = self.querySelectorAll( \"option\" );\r\n      Array.prototype.forEach.call( options, function ( el, i ) {\r\n        template += '<span class=\"cc-select-option ' + el.getAttribute( \"class\" ) + '\" data-value=\"' + el.getAttribute( \"value\" ) + '\">' + el.innerHTML + '</span>';\r\n      } );\r\n      template += '</div></div></div>';\r\n      parent.util.addClass( self, 'hide' );\r\n      self.insertAdjacentHTML( 'afterend', template );\r\n    } );\r\n    this.setupListeners();\r\n  }\r\n\r\n\r\n  setupListeners() {\r\n    var self = this;\r\n    var qId = self.qId;\r\n    let ref2 = this.util.initListener( 'click', \"#\" + qId + \" .cc-select-option\", function ( e ) {\r\n      // let ref2 = this.util.initListener(this.$body, \"click\", \"#\"+qId+\" .cc-select-option\", function(e) {\r\n      ( window as any ).ccsdkDebug ? console.log( 'click cc-select-option', this ) : '';\r\n      let selfOption = this;\r\n      let value = this.getAttribute( 'data-value' );\r\n      //select cc-select-wrapper\r\n      //todo: write a function to directly select parent via selector\r\n      let selectOptions = this.parentNode;\r\n      let select = selectOptions.parentNode.parentNode;\r\n      this.select = select;\r\n      let selectWrapper = select.parentNode;\r\n      ( window as any ).ccsdkDebug ? console.log( select ) : '';\r\n      ( window as any ).ccsdkDebug ? console.log( selectOptions ) : '';\r\n      ( window as any ).ccsdkDebug ? console.log( selectWrapper ) : '';\r\n      let selectionTrigger = select.querySelectorAll( '.cc-select-trigger' )[ 0 ];\r\n\r\n      self.util.addClass( this, \"selection\" );\r\n      let selectedOptionText = selectionTrigger.textContent;\r\n      let selectedValueText = selectionTrigger.getAttribute( 'data-selection-value' ) || '';\r\n\r\n      ( window as any ).ccsdkDebug ? console.log( 'select type', self.type ) : '';\r\n      if ( self.type !== 'multiple' ) {\r\n        ( window as any ).ccsdkDebug ? console.log( 'select type', self.type ) : '';\r\n        selectedOptionText = selfOption.textContent;\r\n        ( window as any ).ccsdkDebug ? console.log( 'selected option', selectedOptionText ) : '';\r\n        self.util.removeClassAll( document.querySelectorAll( \".cc-select\" ), \"opened\" );\r\n        selectionTrigger.setAttribute( 'data-selection-value', value );\r\n        selectWrapper.querySelectorAll( \"select\" )[ 0 ].value = value;\r\n        selectionTrigger.textContent = selectedOptionText;\r\n        self.util.removeClassAll( document.querySelectorAll( \"#\" + qId + \" .cc-select-option\" ), 'selection' );\r\n        self.util.addClass( self, 'selection' );\r\n      } else {\r\n        ( window as any ).ccsdkDebug ? console.log( selectedOptionText ) : '';\r\n        if ( selectedOptionText != 'Select' ) {\r\n            selectedOptionText = self.addOrRemoveFromList(selectedOptionText, selfOption.textContent);\r\n            selectedValueText = self.addOrRemoveFromList(selectedValueText, value);\r\n        } else {\r\n          ( window as any ).ccsdkDebug ? console.log( selfOption.textContent ) : '';\r\n          selectedOptionText = selfOption.textContent;\r\n          selectedValueText = value;\r\n        }\r\n\r\n        selectWrapper.querySelectorAll( \"select\" )[ 0 ].value = selectedValueText;\r\n        selectionTrigger.setAttribute( 'data-selection-value', selectedValueText );\r\n        self.util.removeClassAll( document.querySelectorAll( \"#\" + qId + \" .cc-select-option\" ), 'selection' );        \r\n        self.selectOptions(selectedValueText);\r\n        \r\n        selectedValueText\r\n        if ( selectedOptionText.length < 1 ) {\r\n          selectionTrigger.textContent = 'Select';\r\n        } else {\r\n          selectionTrigger.textContent = selectedOptionText;\r\n        }\r\n        return false;\r\n\r\n      }\r\n\r\n    } );\r\n    this.listeners.push( ref2 );\r\n    ref2.internalHandler = this.util.listener( this.$body, ref2.type, ref2.id, ref2.cb );\r\n    let ref = this.util.initListener( 'click', \"#\" + qId + \" .cc-select-trigger\", function ( e ) {\r\n      self.$html.addEventListener( 'click', function ( e ) {\r\n        if ( !self.util.hasClass( e.target, 'cc-select-option' ) ) {\r\n          self.util.removeClassAll( document.querySelectorAll( \".cc-select\" ), \"opened\" );\r\n          self.$html.removeEventListener( 'click', function () {\r\n          } );\r\n        }\r\n      } )\r\n      var ccSelect = this.parentNode;\r\n      ( window as any ).ccsdkDebug ? console.log( 'click cc-select-trigger', ccSelect ) : '';\r\n      self.util.toggleClass( ccSelect, \"opened\" );\r\n      e.stopPropagation();\r\n    } );\r\n    this.listeners.push( ref );\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n\r\n  }\r\n\r\n  destroyListeners() {\r\n    for ( let listener of this.listeners ) {\r\n      this.util.removeListener( this.$body, listener.type, listener.internalHandler );\r\n    }\r\n    return true;\r\n  }\r\n\r\n\r\n  setValue( value: string, question, surveyHandler ) {\r\n    let self = this;\r\n    let qId = self.qId;\r\n    let select: any;\r\n\r\n    select = document.querySelectorAll( \"#\" + qId + \" select\" )[ 0 ];\r\n    select.value = value;\r\n    let selectTrigger = document.querySelectorAll( \"#\" + qId + \" .cc-select-trigger\" )[ 0 ];\r\n    let selectedValueList = value.split(',');\r\n    let translatedSelection = selectedValueList.map(x => LanguageTextFilter.translateMultiSelectOption(surveyHandler, question, x) );\r\n    selectTrigger.textContent = translatedSelection.join(',');\r\n    selectTrigger.setAttribute('data-selection-value', value);\r\n  }\r\n\r\n  selectOption( el: any ) {\r\n    this.util.addClass( el, 'selection' );\r\n  }\r\n\r\n  removeOption(el){\r\n    this.util.removeClass(el, 'selection');\r\n  }\r\n\r\n  selectOptions( csv: string ) {\r\n    let self = this;\r\n    if ( csv ) {\r\n      let allOptions = csv.split( ',' );\r\n      for ( let option of allOptions ) {\r\n        let domOptions = document.querySelectorAll( \"#\" + self.qId + \" .cc-select-option\" );\r\n        Array.prototype.forEach.call( domOptions, function ( el, i ) {\r\n          if ( el.getAttribute( 'data-value' ) == option ) {\r\n            self.selectOption( el );\r\n          } else {\r\n            \r\n          }\r\n        } );\r\n      }\r\n    }\r\n  }\r\n\r\n  addOrRemoveFromList(listAsString: string, item: string){\r\n    let list = listAsString.split(',');\r\n    let itemIndex = list.indexOf(item);\r\n    if(itemIndex !== -1){\r\n      list.splice(itemIndex, 1);\r\n    } else {\r\n      list.push(item);\r\n    }\r\n    return list.join(',');\r\n  }\r\n\r\n}\r\nexport { Select }\r\n","import { isArray } from \"util\";\r\nimport { LanguageTextFilter } from \"./LanguageTextFilter\";\r\nimport { isAnd, isOr, doesSatisfy, questionCompare } from './filter-utils';\r\n\r\nclass ConditionalFlowFilter {\r\n  public static filterQuestion( surveyHandler: any, question: any ) {\r\n    let aAddedCount = 0;\r\n    let aRemovedCount = 0;\r\n\r\n    if ( surveyHandler.getAnswerForQuestionId( question.id ) != null ) {\r\n      for ( let aQuestion of surveyHandler.getConditionalSurveyQuestions() ) {\r\n        // console.log( aQuestion );\r\n        if ( aQuestion.conditionalFilter != null ) {\r\n          let iSatisfied = false;\r\n          let iFailed = false;\r\n          for ( let aFilterByQuestion of aQuestion.conditionalFilter.filterquestions ) {\r\n            if ( isAnd( aFilterByQuestion ) ) {\r\n              if ( doesSatisfy( surveyHandler, aFilterByQuestion ) && !iFailed ) {\r\n                iSatisfied = true;\r\n              } else {\r\n                iFailed = true;\r\n                break;\r\n              }\r\n            } else if ( isOr( aFilterByQuestion ) ) {\r\n              if ( doesSatisfy( surveyHandler, aFilterByQuestion ) ) {\r\n                iSatisfied = true;\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          const surveyQuestions = surveyHandler.getSurveyQuestions();\r\n          if ( iSatisfied && !iFailed ) {\r\n            if ( surveyQuestions.indexOf( aQuestion ) === -1 ) {\r\n              surveyQuestions.push( aQuestion );\r\n              aAddedCount++;\r\n            }\r\n          } else {\r\n            if ( surveyQuestions.indexOf( aQuestion ) !== -1 ) {\r\n              aRemovedCount++;\r\n              surveyQuestions.splice( surveyQuestions.indexOf( aQuestion ), 1 );\r\n              // surveyHandler.removePartial(aQuestion.id);\r\n              //removing from partial requires not posting partial after each question rather than posting them all at once.\r\n              surveyHandler.removeAnswer( aQuestion.id );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if ( aAddedCount > 0 || aRemovedCount > 0 ) {\r\n      surveyHandler.getSurveyQuestions().sort( questionCompare );\r\n      // surveyHandler.sendConditionalFLowQuestionsData(surveyHandler.getSurveyQuestions().size());\r\n      return true;\r\n    } else {\r\n      // return false;\r\n    }\r\n    // ( window as any ).ccsdkDebug ? console.log( surveyHandler.getSurveyQuestions() ) : '';\r\n  }\r\n}\r\n\r\nexport { ConditionalFlowFilter };","// Production steps of ECMA-262, Edition 6, 22.1.2.1\r\nif ( !( <any>Array ).from ) {\r\n  ( <any>Array ).from = ( function () {\r\n    var toStr = Object.prototype.toString;\r\n    var isCallable = function ( fn ) {\r\n      return typeof fn === 'function' || toStr.call( fn ) === '[object Function]';\r\n    };\r\n    var toInteger = function ( value ) {\r\n      var number = Number( value );\r\n      if ( isNaN( number ) ) {\r\n        return 0;\r\n      }\r\n      if ( number === 0 || !isFinite( number ) ) {\r\n        return number;\r\n      }\r\n      return ( number > 0 ? 1 : -1 ) * Math.floor( Math.abs( number ) );\r\n    };\r\n    var maxSafeInteger = Math.pow( 2, 53 ) - 1;\r\n    var toLength = function ( value ) {\r\n      var len = toInteger( value );\r\n      return Math.min( Math.max( len, 0 ), maxSafeInteger );\r\n    };\r\n\r\n    // The length property of the from method is 1.\r\n    return function from( arrayLike /*, mapFn, thisArg */ ) {\r\n      // 1. Let C be the this value.\r\n      var C = this;\r\n\r\n      // 2. Let items be ToObject(arrayLike).\r\n      var items = Object( arrayLike );\r\n\r\n      // 3. ReturnIfAbrupt(items).\r\n      if ( arrayLike == null ) {\r\n        throw new TypeError( 'Array.from requires an array-like object - not null or undefined' );\r\n      }\r\n\r\n      // 4. If mapfn is undefined, then let mapping be false.\r\n      var mapFn = arguments.length > 1 ? arguments[ 1 ] : void undefined;\r\n      var T;\r\n      if ( typeof mapFn !== 'undefined' ) {\r\n        // 5. else\r\n        // 5. a If IsCallable(mapfn) is false, throw a TypeError exception.\r\n        if ( !isCallable( mapFn ) ) {\r\n          throw new TypeError( 'Array.from: when provided, the second argument must be a function' );\r\n        }\r\n\r\n        // 5. b. If thisArg was supplied, let T be thisArg; else let T be undefined.\r\n        if ( arguments.length > 2 ) {\r\n          T = arguments[ 2 ];\r\n        }\r\n      }\r\n\r\n      // 10. Let lenValue be Get(items, \"length\").\r\n      // 11. Let len be ToLength(lenValue).\r\n      var len = toLength( items.length );\r\n\r\n      // 13. If IsConstructor(C) is true, then\r\n      // 13. a. Let A be the result of calling the [[Construct]] internal method \r\n      // of C with an argument list containing the single item len.\r\n      // 14. a. Else, Let A be ArrayCreate(len).\r\n      var A = isCallable( C ) ? Object( new C( len ) ) : new Array( len );\r\n\r\n      // 16. Let k be 0.\r\n      var k = 0;\r\n      // 17. Repeat, while k < len… (also steps a - h)\r\n      var kValue;\r\n      while ( k < len ) {\r\n        kValue = items[ k ];\r\n        if ( mapFn ) {\r\n          A[ k ] = typeof T === 'undefined' ? mapFn( kValue, k ) : mapFn.call( T, kValue, k );\r\n        } else {\r\n          A[ k ] = kValue;\r\n        }\r\n        k += 1;\r\n      }\r\n      // 18. Let putStatus be Put(A, \"length\", len, true).\r\n      A.length = len;\r\n      // 20. Return A.\r\n      return A;\r\n    };\r\n  }() );\r\n}\r\n\r\n// custom event polyfill\r\n( function () {\r\n\r\n  if ( typeof ( <any>window ).CustomEvent === \"function\" ) return false;\r\n\r\n  function CustomEvent( event, params ) {\r\n    params = params || {\r\n      bubbles: false,\r\n      cancelable: false,\r\n      detail: undefined\r\n    };\r\n    var evt = document.createEvent( 'CustomEvent' );\r\n    evt.initCustomEvent( event, params.bubbles, params.cancelable, params.detail );\r\n    return evt;\r\n  }\r\n\r\n  CustomEvent.prototype = ( <any>window ).Event.prototype;\r\n\r\n  ( <any>window ).CustomEvent = CustomEvent;\r\n} )();\r\n\r\n// includes polyfill\r\nif ( !( <any>Array.prototype ).includes ) {\r\n  Object.defineProperty( Array.prototype, 'includes', {\r\n    value: function ( searchElement, fromIndex ) {\r\n\r\n      if ( this == null ) {\r\n        throw new TypeError( '\"this\" is null or not defined' );\r\n      }\r\n\r\n      // 1. Let O be ? ToObject(this value).\r\n      var o = Object( this );\r\n\r\n      // 2. Let len be ? ToLength(? Get(O, \"length\")).\r\n      var len = o.length >>> 0;\r\n\r\n      // 3. If len is 0, return false.\r\n      if ( len === 0 ) {\r\n        return false;\r\n      }\r\n\r\n      // 4. Let n be ? ToInteger(fromIndex).\r\n      //    (If fromIndex is undefined, this step produces the value 0.)\r\n      var n = fromIndex | 0;\r\n\r\n      // 5. If n ≥ 0, then\r\n      //  a. Let k be n.\r\n      // 6. Else n < 0,\r\n      //  a. Let k be len + n.\r\n      //  b. If k < 0, let k be 0.\r\n      var k = Math.max( n >= 0 ? n : len - Math.abs( n ), 0 );\r\n\r\n      function sameValueZero( x, y ) {\r\n        return x === y || ( typeof x === 'number' && typeof y === 'number' && isNaN( x ) && isNaN( y ) );\r\n      }\r\n\r\n      // 7. Repeat, while k < len\r\n      while ( k < len ) {\r\n        // a. Let elementK be the result of ? Get(O, ! ToString(k)).\r\n        // b. If SameValueZero(searchElement, elementK) is true, return true.\r\n        if ( sameValueZero( o[ k ], searchElement ) ) {\r\n          return true;\r\n        }\r\n        // c. Increase k by 1. \r\n        k++;\r\n      }\r\n\r\n      // 8. Return false\r\n      return false;\r\n    }\r\n  } );\r\n}","import { Cookie } from './helpers/Cookie';\r\nimport { SurveyManager } from \"./SurveyManager\";\r\nimport { Survey } from \"./Survey\";\r\nimport { PrefillsBatchOrSingle, PrefillDictionary } from './types';\r\n\r\n/**\r\n * functions that are exposed to SDK User are written here.\r\n * Entry point for CCSDK.\r\n */\r\n// declare var Sentry: any;\r\n\r\nlet localCCSDK = {\r\n  init: init,\r\n  destroy: destroy,\r\n  trigger: trigger,\r\n  hide: hide,\r\n  show: show,\r\n  on: on,\r\n  prefill: prefill,\r\n  prefillByTag: prefillByTag,\r\n  prefillByNote: prefillByNote\r\n};\r\n\r\n// let instances : any = {};\r\n\r\n(window as any).globalSurveyRunning = false;\r\n(window as any).ccsdkDebug = false;\r\n(window as any).isMobile = window.innerWidth <= 768 ? true : false;\r\n\r\nif (typeof (window as any).CCSDK !== 'undefined') {\r\n  var queue = (window as any).CCSDK.q;\r\n  (window as any).CCSDK = function () {\r\n    if (arguments && arguments.length == 0) {\r\n      var time = new Date();\r\n    } else {\r\n      (window as any).ccsdkDebug ? console.log(arguments) : '';\r\n      var args = (Array as any).from(arguments);\r\n      //Call this functions as ccsdk('functionName', ['argument1', 'argument2']);\r\n      var functionName = args.splice(0, 1)[0];\r\n      (window as any).ccsdkDebug ? console.log(functionName) : '';\r\n      return localCCSDK[functionName].apply(this, args);\r\n    }\r\n  };\r\n  if (queue) {\r\n    for (var q of queue) {\r\n      var args = (Array as any).from(q);\r\n      var functionName = args.splice(0, 1)[0];\r\n      localCCSDK[functionName].apply(this, args);\r\n    }\r\n  }\r\n  let eventCCReady: Event = document.createEvent('Event');\r\n  eventCCReady.initEvent('ccready', true, true);\r\n  document.dispatchEvent(eventCCReady);\r\n}\r\n\r\nexport function init(surveyToken: any) {\r\n  //config options can be set in arguments[1]\r\n  //available config options : themeColor\r\n  surveyToken = decodeURIComponent(surveyToken).trim();\r\n  let config = (typeof arguments[1] === 'object') ? arguments[1] : {};\r\n  //create survey instance\r\n  if (typeof Cookie.get(surveyToken + '-finish') !== 'undefined' && Cookie.get(surveyToken + '-finish')) {\r\n    return;\r\n  }\r\n  if (typeof Cookie.get(surveyToken + '-coolDown') !== 'undefined' && Cookie.get(surveyToken + '-coolDown')) {\r\n    return;\r\n  }\r\n\r\n  if (typeof config.isActive !== 'undefined' && config.isActive) {\r\n    SurveyManager.surveyInstances[surveyToken] = (SurveyManager.surveyInstances[surveyToken]) ? SurveyManager.surveyInstances[surveyToken] : new Survey(surveyToken, config);\r\n    SurveyManager.surveyInstances[surveyToken].tracking.trackEvent('Init MicroSurvey', {\r\n      token: surveyToken,\r\n      data: {\r\n        name: (<any>window).isMobile ? 'Mobile Mode' : 'Desktop Mode',\r\n        action: surveyToken\r\n      }\r\n    }, null, null);\r\n    return SurveyManager.surveyInstances[surveyToken];\r\n  } else {\r\n    //do nothing\r\n  }\r\n\r\n}\r\n\r\nexport function destroy(surveyToken: string) {\r\n  //remove from trigger manager, delete instance.\r\n  if (!SurveyManager ||\r\n    !SurveyManager.surveyInstances ||\r\n    !SurveyManager.surveyInstances[surveyToken] ||\r\n    !SurveyManager.surveyInstances[surveyToken].dom) {\r\n    return;\r\n  }\r\n  SurveyManager.surveyInstances[surveyToken].dom.destroyListeners();\r\n  SurveyManager.surveyInstances[surveyToken].destroy();\r\n  delete SurveyManager.surveyInstances[surveyToken];\r\n}\r\n//\r\nexport function trigger(surveyToken: string, type: string, target: string) {\r\n  (window as any).ccsdkDebug ? console.log(SurveyManager.surveyInstances) : '';\r\n\r\n  if (typeof SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n    SurveyManager.surveyInstances[surveyToken].tracking.trackEvent('Trigger Type', {\r\n      token: surveyToken,\r\n      data: {\r\n        name: type,\r\n        action: surveyToken\r\n      }\r\n    }, null, null);\r\n    SurveyManager.surveyInstances[surveyToken].trigger(type, target);\r\n  }\r\n  //tell trigger manager to register trigger.\r\n}\r\n\r\nexport function on(surveyToken: string, type: string, callback: any) {\r\n  if (typeof SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n    SurveyManager.surveyInstances[surveyToken].tracking.trackEvent('Event Listeners', {\r\n      token: surveyToken,\r\n      data: {\r\n        name: type,\r\n        action: surveyToken\r\n      }\r\n    }, null, null);\r\n    SurveyManager.surveyInstances[surveyToken].on(type, callback);\r\n  }\r\n}\r\n\r\nexport function prefill(surveyToken: string, ...restArgs: PrefillsBatchOrSingle) {\r\n  if (typeof SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n    let questionId;\r\n    if (typeof restArgs[0] === 'string') {\r\n      questionId = restArgs[0];\r\n    } else {\r\n      questionId = Object.keys((<PrefillDictionary>restArgs[0])).length + ' Questions';\r\n    }\r\n    SurveyManager.surveyInstances[surveyToken].tracking.trackEvent('Prefill', {\r\n      token: surveyToken,\r\n      data: {\r\n        name: questionId,\r\n        action: surveyToken\r\n      }\r\n    }, null, null);\r\n    SurveyManager.surveyInstances[surveyToken].prefill(restArgs, 'DIRECT');\r\n  }\r\n}\r\n\r\nexport function prefillByTag(surveyToken: string, ...restArgs: PrefillsBatchOrSingle) {\r\n  if (typeof SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n    let questionTag;\r\n    if (typeof restArgs[0] === 'string') {\r\n      questionTag = restArgs[0];\r\n    } else {\r\n      questionTag = Object.keys((<PrefillDictionary>restArgs[0])).length + ' Questions';\r\n    }\r\n    SurveyManager.surveyInstances[surveyToken].tracking.trackEvent('Prefill by tag', {\r\n      token: surveyToken,\r\n      data: {\r\n        name: questionTag,\r\n        action: surveyToken\r\n      }\r\n    }, null, null);\r\n    SurveyManager.surveyInstances[surveyToken].prefill(restArgs, 'BY_TAG');\r\n  }\r\n}\r\n\r\nexport function prefillByNote(surveyToken: string, ...restArgs: PrefillsBatchOrSingle) {\r\n  if (typeof SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n    let questionNote;\r\n    if (typeof restArgs[0] === 'string') {\r\n      questionNote = restArgs[0];\r\n    } else {\r\n      questionNote = Object.keys((<PrefillDictionary>restArgs[0])).length + ' Questions';\r\n    }\r\n    SurveyManager.surveyInstances[surveyToken].tracking.trackEvent('Prefill by Note', {\r\n      token: surveyToken,\r\n      data: {\r\n        name: questionNote,\r\n        action: surveyToken\r\n      }\r\n    }, null, null);\r\n    SurveyManager.surveyInstances[surveyToken].prefill(restArgs, 'BY_NOTE');\r\n  }\r\n}\r\n\r\nexport function show(surveyToken: string) {\r\n  if (typeof SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n    SurveyManager.surveyInstances[surveyToken].show();\r\n  }\r\n}\r\n\r\nexport function hide(surveyToken: string) {\r\n  if (typeof SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n    SurveyManager.surveyInstances[surveyToken].dom.destroyListeners();\r\n    SurveyManager.surveyInstances[surveyToken].destroy();\r\n    SurveyManager.surveyInstances[surveyToken].hide();\r\n  }\r\n}","import { CCSDKConfig } from \"./interfaces/CCSDKConfig\";\r\nimport { DisplayConfig } from \"./interfaces/DisplayConfig\";\r\nimport { SurveyHandler } from \"./SurveyHandler\";\r\nimport { DomSurvey } from \"./helpers/dom/DomSurvey\";\r\nimport { DomUtilities } from \"./helpers/dom/DomUtilities\";\r\nimport { Scrollbar } from \"./helpers/dom/ScrollBar\";\r\nimport { Cookie } from './helpers/Cookie';\r\nimport { Constants } from './Constants';\r\nimport { Slider } from \"./helpers/dom/Slider\";\r\nimport { SurveyManager } from \"./SurveyManager\";\r\nimport { TriggerManager } from \"./TriggerManager\";\r\nimport { Triggers } from './Triggers';\r\nimport { RequestHelper } from './helpers/Request';\r\nimport { Config } from './Config';\r\nimport { MatomoTracker } from './helpers/tracking';\r\nimport { templates } from \"./helpers/templates\";\r\nimport { PrefillsBatchOrSingle, PrefillType } from \"./types\";\r\n\r\nclass Survey {\r\n  survey: SurveyHandler;\r\n  dom: DomSurvey;\r\n  surveyData: any;\r\n  util: DomUtilities;\r\n  scrollbar: Scrollbar;\r\n  slider: Slider;\r\n  config: CCSDKConfig;\r\n  surveyToken: string;\r\n  triggers: Triggers;\r\n  surveyRunning: boolean;\r\n  surveyDone: boolean;\r\n  surveyStatus: string;\r\n  isThrottled: boolean;\r\n  thorttlingLogic: any;\r\n  loginData: any;\r\n  debug: false;\r\n  surveyStartTime: any;\r\n  requester = new RequestHelper();\r\n  tracking: MatomoTracker;\r\n\r\n  constructor(surveyToken: string, config: CCSDKConfig) {\r\n    this.isThrottled = true;\r\n    this.surveyDone = false;\r\n    this.surveyStatus = '';\r\n    this.surveyToken = surveyToken;\r\n    this.config = config;\r\n    this.surveyRunning = false;\r\n    this.thorttlingLogic = null;\r\n    this.tracking = new MatomoTracker();\r\n    this.tracking.token = surveyToken;\r\n    if (typeof this.config.textDirection === 'undefined') {\r\n      this.config.textDirection = \"ltr\";\r\n    }\r\n\r\n    this.triggers = new Triggers(this);\r\n    TriggerManager.addSurvey(this.surveyToken, this.triggers);\r\n    this.survey = new SurveyHandler(this);\r\n    this.util = new DomUtilities;\r\n    //set themeColor of survey\r\n    this.config.brandColor = (this.config && this.config.brandColor) ?\r\n      this.config.brandColor : \"#db3c39\";\r\n    //use config variable textDirection and set dir\r\n    this.setHtmlTextDirection();\r\n    this.setDisplayOptions();\r\n    setTimeout(() => {\r\n      this.util.trigger(document, this.surveyToken + '-ready', { 'survey': this });\r\n    }, 100)\r\n    //do login\r\n    this.config.username = \"test\";\r\n    this.config.password = \"test\";\r\n    this.config.location = \"location\";\r\n    this.config.language = \"English (Default)\";\r\n    //check trigger conditions and add itself to \r\n    //based on new config\r\n    //gotta and these.\r\n    this.trigger(\"click\", this.config.cssSelector);\r\n    this.triggers.setConditionalTriggers(this.config);\r\n  }\r\n\r\n  getSurveyThrottlingLogic(cb) {\r\n    let getThrottleUrl = Config.API_URL + Config.GET_SURVEY_THROTTLE_LOGIC.replace('{location}', this.config.location);\r\n    let headers = {};\r\n    headers[Constants.AUTHORIZATION] = Constants.AUTHORIZATION_BEARER + \" \" + this.loginData.access_token;\r\n    let self = this;\r\n    let successcb = function (data) {\r\n      self.thorttlingLogic = data;\r\n      self.checkThrottling(cb);\r\n    };\r\n\r\n    RequestHelper.getWithHeaders(getThrottleUrl, headers, successcb, null);\r\n  }\r\n\r\n  checkThrottling(cb) {\r\n    if (this.thorttlingLogic != null) {\r\n      if (this.thorttlingLogic.inputIds == null) {\r\n        this.thorttlingLogic.inputIds = [];\r\n      }\r\n      this.thorttlingLogic.inputIds.push(this.thorttlingLogic[this.thorttlingLogic.uniqueIDQuestionIdOrTag.toLowerCase()]);\r\n      if (this.thorttlingLogic.logics != null && this.thorttlingLogic.logics.length > 0 && this.config != null) {\r\n        this.thorttlingLogic.logics[0].filter.location = [];\r\n        this.thorttlingLogic.logics[0].filter.location.push(this.config.location);\r\n      }\r\n    }\r\n    let self = this;\r\n    let postThrottleUrl = Config.API_URL + Config.POST_THROTTLING;\r\n    let headers = {};\r\n    headers[Constants.AUTHORIZATION] = Constants.AUTHORIZATION + \" \" + this.loginData.access_token;\r\n    let successcb = function (throttleResponse) {\r\n\r\n      if (typeof throttleResponse[0][self.thorttlingLogic.uniqueIDQuestionIdOrTag.toLowerCase()] && throttleResponse[0].value) {\r\n        //get survey data?  \r\n        cb();\r\n      }\r\n    };\r\n\r\n    RequestHelper.postWithHeaders(postThrottleUrl, this.thorttlingLogic, headers, successcb, null);\r\n  }\r\n\r\n  addThrottlingEntries(isOpen: boolean) {\r\n    let addThrottleUrl = Config.API_URL + Config.POST_THROTTLING_ADD_ENTRIES;\r\n    let headers = {};\r\n    this.loginData = { access_token: \"help\" };\r\n    headers[Constants.AUTHORIZATION] = Constants.AUTHORIZATION + \" \" + this.loginData.access_token;\r\n    //fill this from config and data.\r\n    let successcb = (throttleResponse) => {\r\n      this.debug ? console.log(throttleResponse) : '';\r\n    }\r\n\r\n    RequestHelper.postWithHeaders(addThrottleUrl, {\r\n      user: \"\",\r\n      mobile: \"\",\r\n      emailId: \"\",\r\n      customId: \"\",\r\n      surveySentDate: \"\",\r\n      surveyOpenDate: \"\",\r\n      channel: \"\",\r\n      isOpened: isOpen\r\n    }, headers, successcb, null);\r\n\r\n  }\r\n\r\n  setupSurvey() {\r\n    this.initSurvey();\r\n  }\r\n\r\n  setHtmlTextDirection() {\r\n    let ccSDKElement = document.querySelector('.cc-sdk');\r\n    if (!ccSDKElement) {\r\n      return;\r\n    }\r\n    let ccSDKDir: string = ccSDKElement.getAttribute('dir');\r\n    let direction: string = (this.config && this.config.textDirection) ?\r\n      this.config.textDirection : (ccSDKDir ? ccSDKDir : \"ltr\");\r\n    ccSDKElement.setAttribute('dir', direction);\r\n  }\r\n\r\n  setDisplayOptions() {\r\n    this.survey.surveyDisplay.position = this.config && this.config.position ?\r\n      this.config.position : \"bottom right\";\r\n    let welcomePopupAnimation = 'hide-right-left';\r\n\r\n\r\n    switch (this.survey.surveyDisplay.position) {\r\n      case 'bottom right':\r\n        welcomePopupAnimation = 'hide-right-left';\r\n        break;\r\n      case 'right bottom':\r\n        welcomePopupAnimation = 'hide-right-left';\r\n        break;\r\n      case 'top right':\r\n        welcomePopupAnimation = 'hide-right-left';\r\n        break;\r\n      case 'right top':\r\n        welcomePopupAnimation = 'hide-right-left';\r\n        break;\r\n      case 'bottom left':\r\n        welcomePopupAnimation = 'hide-left-right';\r\n        break;\r\n      case 'left bottom':\r\n        welcomePopupAnimation = 'hide-left-right';\r\n        break;\r\n      case 'top left':\r\n        welcomePopupAnimation = 'hide-left-right';\r\n        break;\r\n      case 'left top':\r\n        welcomePopupAnimation = 'hide-left-right';\r\n        break;\r\n      default:\r\n        welcomePopupAnimation = 'hide-right-left';\r\n        break;\r\n    }\r\n    this.survey.surveyDisplay.welcomePopupAnimation = welcomePopupAnimation;\r\n    this.tracking.trackEvent('Welcome Pop up Position', {\r\n      token: this.tracking.token,\r\n      data: {\r\n        name: this.survey.surveyDisplay.position,\r\n        action: null\r\n      }\r\n    }, null, null);\r\n\r\n    this.survey.surveyDisplay.surveyPosition = this.config.position.search(/bottom/gi) == -1 ? \"top\" : \"bottom\";\r\n  }\r\n\r\n  getSurveyData() {\r\n    let self: Survey = this;\r\n    let successcb = function (surveyData) {\r\n      self.debug ? console.log(surveyData) : '';\r\n\r\n      let event = new CustomEvent(Constants.SURVEY_DATA_EVENT + \"-\" + self.surveyToken, { detail: JSON.parse(JSON.stringify(surveyData)) });\r\n      document.dispatchEvent(event);\r\n      if (!self.config.skipWelcomePage) {\r\n        self.dom.hideLoader();\r\n      }\r\n\r\n      self.surveyData = surveyData;\r\n      if (surveyData && surveyData.questions && surveyData.questions[0]) {\r\n        self.tracking.username = surveyData.questions[0].user;\r\n      }\r\n\r\n      self.tracking.token = self.surveyToken;\r\n\r\n      if (self.surveyData) {\r\n        self.tracking.trackEvent('Login Success', {\r\n          token: self.tracking.token,\r\n          data: {\r\n            name: 'Token',\r\n            action: self.surveyToken\r\n          }\r\n        }, console.log, console.error)\r\n        self.tracking.trackEvent('Survey Length', {\r\n          token: self.tracking.token,\r\n          data: {\r\n            name: `${surveyData.questions.length} Questions`,\r\n            action: `${surveyData.preFill ? surveyData.preFill.length : 0} Prefills`\r\n          }\r\n        }, null, null);\r\n\r\n        self.initSurveyQuestions();\r\n      } else {\r\n        self.tracking.trackEvent('Expired Survey', {\r\n          token: self.tracking.token,\r\n          data: {\r\n            name: null,\r\n            action: null\r\n          }\r\n        }, null, null);\r\n        self.survey.displayWelcomeQuestion(\"The Survey has been expired\");\r\n      }\r\n    };\r\n    let errorcb = null;\r\n    this.survey.fetchQuestions(successcb, errorcb);\r\n  }\r\n\r\n  initSurvey() {\r\n    //if survey already run don't run?\r\n    //if default trigger initiated and survey already run then don't run.\r\n    let self: Survey = this;\r\n\r\n    self.surveyRunning = true;\r\n    self.dom = new DomSurvey(this);\r\n    self.dom.setTheme(self.config.brandColor, this.config.keepAlive ? this.config.keepAlive : 0);\r\n    self.config.language = \"default\";\r\n    if (self.surveyToken && decodeURIComponent(self.surveyToken).trim() !== '' && !self.config.skipWelcomePage) {\r\n      self.survey.displayWelcomeQuestion();\r\n    } else if (self.config.skipWelcomePage) {\r\n      let onImpressionEvent = new CustomEvent(Constants.SURVEY_IMPRESSION_EVENT + \"-\" + this.surveyToken);\r\n      document.dispatchEvent(onImpressionEvent);\r\n      self.dom.startSurvey();\r\n      self.survey.setCoolDownPeriod(self.config, self.surveyToken);\r\n      this.surveyStartTime = new Date();\r\n      self.survey.acceptAnswers();\r\n    }\r\n    self.dom.setupListeners();\r\n\r\n  }\r\n\r\n  initSurveyQuestions() {\r\n    let self: Survey = this;\r\n    self.survey.attachSurvey(this.surveyData);\r\n\r\n    self.config.language = \"default\";\r\n\r\n    this.dom.initSurveyDom();\r\n    let onSurveyStartEvent = new CustomEvent(Constants.SURVEY_START_EVENT + \"-\" + this.surveyToken);\r\n    document.dispatchEvent(onSurveyStartEvent);\r\n  }\r\n\r\n  public on(type: string, callback: any) {\r\n    document.addEventListener(type + \"-\" + this.surveyToken, function (e: any) {\r\n      callback(e.detail);\r\n    });\r\n  }\r\n\r\n  public show() {\r\n    //do show and hide things.\r\n    SurveyManager.setSurveyRunning();\r\n    //show survey\r\n    this.setupSurvey();\r\n\r\n  }\r\n\r\n  public hide() {\r\n    SurveyManager.unsetSurveyRunning();\r\n    this.survey.destroy();\r\n    this.tracking.trackEvent('Survey Destroyed', {\r\n      token: this.tracking.token,\r\n      data: {\r\n        name: (<any>new Date() - (<any>window).globalSurveyStartTime) + 's',\r\n        action: null\r\n      }\r\n    }, null, null);\r\n  }\r\n\r\n  public destroy() {\r\n    //remove all listeners?\r\n    SurveyManager.unsetSurveyRunning();\r\n    this.survey.destroy();\r\n  }\r\n\r\n\r\n  public prefill(restOfArgs: PrefillsBatchOrSingle, type: PrefillType) {\r\n    let prefillObject;\r\n    if (typeof restOfArgs[0] !== 'object') {\r\n      prefillObject = {\r\n        [<string>restOfArgs[0]]: restOfArgs[1]\r\n      };\r\n    } else {\r\n      prefillObject = restOfArgs[0];\r\n    }\r\n    //save this in this.surveyHandler\r\n    if (type === 'DIRECT') {\r\n      this.survey.fillPrefillDirect(prefillObject);\r\n    } else if (type === 'BY_TAG') {\r\n      this.survey.fillPrefill(prefillObject);\r\n    } else if (type === 'BY_NOTE') {\r\n      this.survey.fillPrefillByNote(prefillObject);\r\n    }\r\n  }\r\n\r\n\r\n  public trigger(type: string, target: any) {\r\n    let self: Survey = this;\r\n    switch (type) {\r\n      case 'click':\r\n        // console.log( 'enable click trigger ##' )\r\n        this.triggers.enableClickTrigger(target, function () {\r\n          SurveyManager.addSurvey(self.surveyToken);\r\n\r\n        });\r\n        break;\r\n      case 'page-count':\r\n        let count: number = parseInt(target);\r\n        this.triggers.enablePageCountTrigger(count);\r\n\r\n        break;\r\n      case 'site-count':\r\n        let count2: number = parseInt(target);\r\n        this.triggers.enableSiteCountTrigger(count2);\r\n        break;\r\n      case 'page-time':\r\n        this.triggers.enablePageTimeTrigger(parseInt(target));\r\n        break;\r\n      case 'site-time':\r\n        this.triggers.enableSiteTimeTrigger(parseInt(target));\r\n        break;\r\n      case 'url-match':\r\n        this.triggers.enablePopUpByURLPatternTrigger(target);\r\n        break;\r\n      case 'url-not-match':\r\n        this.triggers.enablePopUpByNotURLPatternTrigger(target);\r\n        break;\r\n      case 'utm-match':\r\n        this.triggers.enablePopUpByUTMPatternTrigger(target);\r\n        break;\r\n      case 'scroll-pixels':\r\n        this.triggers.enableScrollPixelsTrigger(parseInt(target));\r\n        break;\r\n      case 'launch':\r\n        SurveyManager.addSurvey(self.surveyToken);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nexport { Survey };","// import 'whatwg-fetch';\r\nimport { Config } from \"./Config\";\r\nimport { DisplayConfig } from \"./interfaces/DisplayConfig\";\r\nimport { RequestHelper } from \"./helpers/Request\";\r\nimport { templates } from \"./helpers/templates\";\r\nimport { DomUtilities } from \"./helpers/dom/DomUtilities\";\r\nimport { DomSurvey } from \"./helpers/dom/DomSurvey\";\r\nimport { ConditionalTextFilter } from \"./helpers/filters/ConditionalTextFilter\";\r\nimport { Constants } from \"./Constants\";\r\nimport { LanguageTextFilter } from \"./helpers/filters/LanguageTextFilter\";\r\nimport { Select } from \"./helpers/dom/Select\";\r\nimport { Cookie } from \"./helpers/Cookie\";\r\nimport { ConditionalFlowFilter } from \"./helpers/filters/ConditionalFlowFilter\";\r\nimport { PrefillDictionary } from \"./types\";\r\nimport { start } from \"repl\";\r\n\r\nclass SurveyHandler {\r\n  surveyToken: string;\r\n  surveyData: any;\r\n  questions: any;\r\n  prefillQuestions: any;\r\n  questionsToDisplay: any;\r\n  randomNumber: Number;\r\n  welcomeQuestion: any;\r\n  welcomeQuestionButtonText: any;\r\n  prefillResponses: any;\r\n  prefillDirect: any;\r\n  prefillWithTags: any;\r\n  prefillWithNote: any;\r\n  questionResponses: any;\r\n  answers: any = {};\r\n  surveyAnswers: any = {};\r\n  util: DomUtilities;\r\n  dom: DomSurvey;\r\n  displayThankYouCb: any;\r\n  destroySurveyCb: any;\r\n  acceptAnswersCb: any;\r\n  surveyDisplay: DisplayConfig;\r\n  currentQuestion: any;\r\n  conditionalQuestions: any;\r\n  ccsdk: any;\r\n  welcomeInterval: any;\r\n  welcomeQuestionDisplayTime: any;\r\n  domListeners: any;\r\n  languageSelect: any;\r\n  private _prefillsPartiallyPosted = false;\r\n  // isPartialAvailable : Boolean;\r\n\r\n  constructor(ccsdk) {\r\n    this.surveyToken = ccsdk.surveyToken;\r\n    this.surveyData = {};\r\n    this.surveyDisplay = {\r\n      position: \"\",\r\n      surveyPosition: \"\",\r\n      welcomePopupAnimation: \"\",\r\n      surveyPopupAnimation: \"\"\r\n    };\r\n    this.ccsdk = ccsdk;\r\n    this.domListeners = [];\r\n    this.questions = [];\r\n    this.questionsToDisplay = [];\r\n    this.prefillQuestions = [];\r\n    this.conditionalQuestions = [];\r\n    this.prefillResponses = [];\r\n    this.prefillWithTags = {};\r\n    this.prefillWithNote = {};\r\n    this.prefillDirect = {};\r\n    this.answers = {};\r\n    this.util = new DomUtilities();\r\n    this.dom = ccsdk.dom;\r\n    this.displayThankYouCb = (e: any) => {\r\n      //perform final post\r\n      this.finalPost(null, null);\r\n      if (this.ccsdk && this.ccsdk.tracking) {\r\n        this.ccsdk.tracking.trackEvent(\r\n          \"Completed Survey\",\r\n          {\r\n            token: this.ccsdk.tracking.token,\r\n            data: {\r\n              name: null,\r\n              action: null\r\n            }\r\n          },\r\n          null,\r\n          null\r\n        );\r\n      }\r\n\r\n      let thankyouHtml: any = templates.thankyou;\r\n      // thankyouHtml = thankyouHtml.replace(\"{{question}}\", this.surveyData.thankyouText);\r\n      // thankyouHtml = thankyouHtml.replace(\"{{question}}\", LanguageTextFilter.translateMessages(this, \"thankyouText\"));\r\n      let thankyouText = this.ccsdk.config.thankyouText\r\n        ? this.ccsdk.config.thankyouText\r\n        : this.surveyData.thankyouText\r\n          ? this.surveyData.thankyouText\r\n          : \"Thank You\";\r\n      let startText = this.ccsdk.config.startButtonText\r\n        ? this.ccsdk.config.startButtonText\r\n        : \"Start\";\r\n      thankyouHtml = thankyouHtml.replace(\"{{question}}\", thankyouText);\r\n      thankyouHtml = thankyouHtml.replace(\"{{button}}\", startText);\r\n      thankyouHtml = thankyouHtml.replace(\r\n        \"{{branding}}\",\r\n        this.surveyData.branding &&\r\n          this.surveyData.branding.toUpperCase() === \"NONE\"\r\n          ? \"no-branding\"\r\n          : \"full-branding\"\r\n      );\r\n      this.ccsdk.dom.replaceInQuestionsContainer(thankyouHtml);\r\n      //TODO : Fix this Add class not working???\r\n      let thankyouContainer: any = this.util.get(\"#cc-thankyou-container\");\r\n      (window as any).ccsdkDebug ? console.log(thankyouContainer) : \"\";\r\n      this.util.addClass(thankyouContainer[0], \"show-thankyou-slide\");\r\n      let onSurveyEndEvent = new CustomEvent(\r\n        Constants.SURVEY_END_EVENT + \"-\" + this.ccsdk.surveyToken\r\n      );\r\n      document.dispatchEvent(onSurveyEndEvent);\r\n      //set done cookie for 30 days.\r\n      Cookie.set(this.surveyToken + \"-finish\", \"true\", 30, \"/\");\r\n      setTimeout(() => {\r\n        this.ccsdk.dom.destroyListeners();\r\n        this.destroy();\r\n      }, 2000);\r\n    };\r\n\r\n    this.destroySurveyCb = (e: any) => {\r\n      let self: SurveyHandler = this;\r\n      //send end survey event.\r\n      let onSurveyEndEvent = new CustomEvent(\r\n        Constants.SURVEY_END_EVENT + \"-\" + this.ccsdk.surveyToken\r\n      );\r\n      document.dispatchEvent(onSurveyEndEvent);\r\n      self.destroy();\r\n    };\r\n\r\n    this.acceptAnswersCb = (e: any) => {\r\n      let self: SurveyHandler = this;\r\n      // (window as any).ccsdkDebug?console.log(self):'';\r\n      // (window as any).ccsdkDebug?console.log('question answered',e:'')\r\n      let data: any = <any>e.detail;\r\n      let response: any = {};\r\n      response.questionId = data.questionId;\r\n\r\n      switch (data.type) {\r\n        case \"scale\":\r\n          response.text = null;\r\n          response.number = Number(data.data.number);\r\n          self.postPartialAnswer(data.index, response, false, null, null);\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case \"nps\":\r\n          response.text = null;\r\n          response.number = Number(data.data.number);\r\n          self.postPartialAnswer(data.index, response, false, null, null);\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case \"radio\":\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          // response.number = Number(data.data.number);\r\n          self.postPartialAnswer(data.index, response, false, null, null);\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case \"radioImage\":\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          self.postPartialAnswer(data.index, response, false, null, null);\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case \"smile\":\r\n          response.text = null;\r\n          response.number = Number(data.data.number);\r\n          self.postPartialAnswer(data.index, response, false, null, null);\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case \"star\":\r\n          response.text = null;\r\n          response.number = Number(data.data.number);\r\n          self.postPartialAnswer(data.index, response, false, null, null);\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case \"multiline\":\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer(data.index, response, false, null, null);\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex(data.index);\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case \"singleline\":\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer(data.index, response, false, null, null);\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex(data.index);\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case \"number\":\r\n          response.text = null;\r\n          response.number = Number(data.data.number);\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer(data.index, response, false, null, null);\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex(data.index);\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case \"checkbox\":\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer(data.index, response, false, null, null);\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex(data.index);\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case \"select\":\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer(data.index, response, false, null, null);\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex(data.index);\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case \"slider\":\r\n          response.text = data.data.text;\r\n          response.number = Number(data.data.number);\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer(data.index, response, false, null, null);\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex(data.index);\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    };\r\n  }\r\n\r\n  fetchQuestions(successcb, errorcb) {\r\n    this.randomNumber = parseInt(String(Math.random() * 1000));\r\n    let surveyUrl = Config.SURVEY_BY_TOKEN.replace(\r\n      \"{token}\",\r\n      \"\" + this.surveyToken\r\n    );\r\n    // surveyUrl = surveyUrl.replace(\"{tabletId}\", \"\" + this.randomNumber);\r\n    surveyUrl = Config.API_URL + surveyUrl;\r\n    RequestHelper.get(surveyUrl, successcb, errorcb);\r\n\r\n    // (window as any).ccsdkDebug?console.log(data):'';\r\n    // this.surveyData = data.then(function();\r\n    // (window as any).ccsdkDebug?console.log(this.surveyData):'';\r\n  }\r\n\r\n  removeAnswer(questionId) {\r\n    delete this.answers[questionId];\r\n    delete this.surveyAnswers[questionId];\r\n  }\r\n\r\n  attachSurvey(surveyData: any) {\r\n    this.surveyData = surveyData;\r\n    this.setupPrefill();\r\n    this.setupSurveyContainer();\r\n    //clean survey\r\n    this.cleanSurvey();\r\n    this.displayQuestions();\r\n    this.displayThankYou();\r\n    this.destroySurvey();\r\n  }\r\n\r\n  setupPrefill() {\r\n    if (\r\n      this.surveyData &&\r\n      this.surveyData.preFill &&\r\n      this.surveyData.preFill.length > 0\r\n    ) {\r\n      this.surveyData.preFill.map(response => {\r\n        this.fillPrefillQuestionObject(response.questionId, response);\r\n      });\r\n    }\r\n  }\r\n\r\n  cleanSurvey() {\r\n    this.questionsToDisplay = [];\r\n    this.answers = {};\r\n    this.surveyAnswers = {};\r\n    this.conditionalQuestions = [];\r\n  }\r\n\r\n  setupSurveyContainer() {\r\n    let surveyHtml: any = templates.question_survey;\r\n    surveyHtml = surveyHtml.replace(\"{{surveyToken}}\", this.surveyToken);\r\n    surveyHtml = surveyHtml.replace(\r\n      \"{{animation}}\",\r\n      this.surveyDisplay.surveyPopupAnimation\r\n    );\r\n    surveyHtml = surveyHtml.replace(\r\n      /{{location}}/g,\r\n      this.surveyDisplay.surveyPosition\r\n    );\r\n    this.ccsdk.dom.appendInBody(surveyHtml);\r\n  }\r\n\r\n  displayQuestionSelector() { }\r\n\r\n  displayWelcomeQuestion(warningWelcomeText?: string) {\r\n    //call this with true when welcome container is clicked.\r\n    // this.ccsdk.addThrottlingEntries(false);\r\n    let onSurveyImpressionEvent = new CustomEvent(\r\n      Constants.SURVEY_IMPRESSION_EVENT + \"-\" + this.surveyToken\r\n    );\r\n    document.dispatchEvent(onSurveyImpressionEvent);\r\n    this.ccsdk.surveyStartTime = new Date();\r\n    let self = this;\r\n    let welcomeHtml: any = templates.question_start;\r\n    welcomeHtml = welcomeHtml.replace(\"{{surveyToken}}\", this.surveyToken);\r\n    // welcomeHtml = welcomeHtml.replace(\"{{question}}\", this.surveyData.welcomeText);\r\n    let welcomeText = this.ccsdk.config.welcomeText\r\n      ? this.ccsdk.config.welcomeText\r\n      : \"Welcome\";\r\n    // welcomeHtml = welcomeHtml.replace(\"{{question}}\", LanguageTextFilter.translateMessages(this, \"welcomeText\"));\r\n    let startText = this.ccsdk.config.startButtonText\r\n      ? this.ccsdk.config.startButtonText\r\n      : \"Start\";\r\n    if (warningWelcomeText) {\r\n      document.getElementById(this.surveyToken + \"-welcome\").remove();\r\n      welcomeHtml = welcomeHtml.replace(\"{{question}}\", warningWelcomeText);\r\n      welcomeHtml = welcomeHtml.replace(\"{{button}}\", \"Close\");\r\n      welcomeHtml = welcomeHtml.replace(\"{{action}}\", \"button-close\");\r\n    } else {\r\n      welcomeHtml = welcomeHtml.replace(\"{{question}}\", welcomeText);\r\n      welcomeHtml = welcomeHtml.replace(\"{{button}}\", startText);\r\n      welcomeHtml = welcomeHtml.replace(\"{{action}}\", \"survey-start\");\r\n    }\r\n    welcomeHtml = welcomeHtml.replace(\r\n      \"{{location}}\",\r\n      this.surveyDisplay.position\r\n    );\r\n    welcomeHtml = welcomeHtml.replace(\r\n      \"{{animation}}\",\r\n      this.surveyDisplay.welcomePopupAnimation\r\n    );\r\n    // (window as any).ccsdkDebug?console.log(\"Appending in body\"):'';\r\n    this.ccsdk.dom.appendInBody(welcomeHtml);\r\n    this.ccsdk.dom.showWelcomeContainer();\r\n    this.setCoolDownPeriod(this.ccsdk.config, this.surveyToken);\r\n    if (\r\n      typeof this.ccsdk.config.keepAlive != undefined &&\r\n      this.ccsdk.config.keepAlive > 0\r\n    ) {\r\n      this.welcomeQuestionDisplayTime = new Date();\r\n      this.welcomeInterval = setInterval(() => {\r\n        self.checkWelcomeQuestionDisplay(self.ccsdk.config.keepAlive);\r\n      }, 1000);\r\n    }\r\n\r\n    this.acceptAnswers();\r\n    // self.survey.displayLanguageSelector();\r\n  }\r\n\r\n  setCoolDownPeriod(campaign, surveyToken) {\r\n    if (campaign && campaign.coolDownPeriod && campaign.coolDownPeriod != 0) {\r\n      Cookie.set(\r\n        surveyToken + \"-coolDown\",\r\n        \"true\",\r\n        campaign.coolDownPeriod / 86400,\r\n        \"/\"\r\n      );\r\n    } else {\r\n      Cookie.set(surveyToken + \"-coolDown\", \"true\", 1, \"/\");\r\n    }\r\n  }\r\n\r\n  checkWelcomeQuestionDisplay(keepAlive) {\r\n    let self = this;\r\n    let now = new Date();\r\n    if (keepAlive) {\r\n      // console.log((now.getTime() - this.welcomeQuestionDisplayTime.getTime()) / 1000);\r\n      if (\r\n        keepAlive <=\r\n        (now.getTime() - this.welcomeQuestionDisplayTime.getTime()) / 1000\r\n      ) {\r\n        self.killWelcomeQuestion();\r\n      }\r\n    }\r\n  }\r\n\r\n  killWelcomeQuestion() {\r\n    this.destroy();\r\n    clearInterval(this.welcomeInterval);\r\n  }\r\n  cancelKillWelcomeQuestion() {\r\n    clearInterval(this.welcomeInterval);\r\n  }\r\n\r\n  displayLanguageSelector() {\r\n    let self = this;\r\n    let options1: string;\r\n    let qId = \"languageSelector\";\r\n    let cTemplate1 = templates.language_selector;\r\n    options1 = this.util.generateLanguageSelectOptions([\"default\"]);\r\n    if (this.surveyData.translated) {\r\n      options1 = this.util.generateLanguageSelectOptions(\r\n        [\"default\"].concat(Object.keys(this.surveyData.translated))\r\n      );\r\n    }\r\n    cTemplate1 = cTemplate1.replace(/{{questionId}}/g, qId);\r\n    cTemplate1 = cTemplate1.replace(\"{{options}}\", options1);\r\n    cTemplate1 = cTemplate1.replace(\"{{requiredLabel}}\", true ? \"*\" : \"\");\r\n    this.ccsdk.dom.replaceInQuestionsContainer(cTemplate1);\r\n    let $questionContainer = document.querySelectorAll(\r\n      \".cc-questions-container\"\r\n    );\r\n    let $body = document.getElementsByTagName(\"body\")[0];\r\n\r\n    this.util.addClass($questionContainer[0].firstChild, \"show-slide\");\r\n    this.languageSelect = new Select(qId);\r\n    let submitBtn = document.querySelectorAll(\".submit-icon\");\r\n    this.util.removeClassAll(submitBtn, \"act-cc-button-next\");\r\n    this.util.addClassAll(submitBtn, \"act-cc-button-lang-next\");\r\n    if (this.languageSelect) {\r\n      this.languageSelect.destroyListeners();\r\n    }\r\n    this.languageSelect.init(qId);\r\n    let selectRes = \"\";\r\n    if (\r\n      this.util.checkIfListenerExists(\r\n        \"#\" + qId + \" .cc-select-options .cc-select-option\",\r\n        this.domListeners\r\n      )\r\n    ) {\r\n      // return;\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"display language select - previous listeners exists\")\r\n        : \"\";\r\n      this.removePrevListener(\r\n        \"#\" + qId + \" .cc-select-options .cc-select-option\"\r\n      );\r\n    }\r\n    let ref = this.util.initListener(\r\n      \"click\",\r\n      \"#\" + qId + \" .cc-select-options .cc-select-option\",\r\n      function () {\r\n        self.ccsdk.debug ? console.log(\"languageSelectOption\") : \"\";\r\n        selectRes = document.querySelectorAll(\r\n          \"#\" + qId + \" .cc-select-trigger\"\r\n        )[0].innerHTML;\r\n      }\r\n    );\r\n    this.domListeners.push(ref);\r\n    ref.internalHandler = this.util.listener($body, ref.type, ref.id, ref.cb);\r\n\r\n    let languageSelect2 = this.util.initListener(\r\n      \"click\",\r\n      \".act-cc-button-lang-next\",\r\n      function () {\r\n        self.ccsdk.debug ? console.log(\"languageNext\") : \"\";\r\n        self.ccsdk.config.language = \"default\";\r\n        self.ccsdk.config.language = selectRes; //language selection from menu then show first question\r\n        //set config rtl or ltr\r\n\r\n        var languageQuestion = self.surveyData.questions.find(x => x.questionTags.indexOf('cc_language') !== -1);\r\n\r\n        if (languageQuestion) {\r\n          self.fillPrefillQuestion(\r\n            languageQuestion.id,\r\n            selectRes,\r\n            'text'\r\n          );\r\n        }\r\n        let isRTL = /[\\u0600-\\u06FF]/.test(selectRes);\r\n        self.ccsdk.config.textDirection = isRTL ? \"rtl\" : \"ltr\";\r\n        self.ccsdk.setHtmlTextDirection();\r\n        self.util.removeClassAll(submitBtn, \"act-cc-button-lang-next\");\r\n        self.util.addClassAll(submitBtn, \"act-cc-button-next\");\r\n        self.ccsdk.dom.loadFirstQuestion(); // this.loadFirstQuestion();\r\n        // self.postPrefillPartialAnswer( false, null, null );\r\n      }\r\n    );\r\n    this.domListeners.push(languageSelect2);\r\n\r\n    languageSelect2.internalHandler = this.util.listener(\r\n      $body,\r\n      languageSelect2.type,\r\n      languageSelect2.id,\r\n      languageSelect2.cb\r\n    );\r\n\r\n    // this.util.addClass(thankyouContainer[0], 'show-thankyou-slide');\r\n\r\n    // this.ccsdk.dom.appendInBody(cTemplate1);\r\n    // this.ccsdk.dom.showLanguageSelector();\r\n    (window as any).ccsdkDebug ? console.log(cTemplate1) : \"\";\r\n  }\r\n\r\n  displayThankYou() {\r\n    let self: SurveyHandler = this;\r\n    document.addEventListener(\"ccdone\", this.displayThankYouCb);\r\n  }\r\n\r\n  displayQuestions() {\r\n    //check question is supported, based on question types.\r\n    //filter pre fill questions.\r\n    this.questions = this.surveyData.questions;\r\n\r\n    // this.questionsToDisplay = (this.surveyData.questions as any[]).filter(this.filterQuestions);\r\n    this.filterQuestions();\r\n    //sort questions and display them?\r\n    this.questionsToDisplay = this.questionsToDisplay.sort(\r\n      this.questionCompare\r\n    );\r\n    let ccSurvey: any;\r\n    ccSurvey = document.getElementsByClassName(\"cc-questions-container\");\r\n    // ccSurvey = ccSurvey[0];\r\n    let surveyObject = ccSurvey[0];\r\n    // (window as any).ccsdkDebug?console.log(this.questionsToDisplay):'';\r\n    //chec\r\n    //for now just do 1st question.\r\n    for (let question of this.questionsToDisplay) {\r\n      if (this.checkConditionals(question)) {\r\n        let compiledTemplate = this.compileTemplate(question);\r\n        question.compiledTemplate = compiledTemplate;\r\n        // surveyObject.innerHTML += compiledTemplate;\r\n        //register handlers for onclick?\r\n      } else {\r\n        if (this.isPrefillQuestion(question)) {\r\n          this.prefillQuestions.push(question);\r\n        }\r\n      }\r\n      //else don't display it.\r\n    }\r\n    // (window as any).ccsdkDebug?console.log(surveyObject.innerHTML):'';\r\n    // this.postPartialAnswer(this.questionsToDisplay[0], \"test\");\r\n  }\r\n\r\n  getSurveyQuestions(): any {\r\n    return this.questionsToDisplay;\r\n  }\r\n\r\n  getAnswerForQuestionId(questionId: string) {\r\n    let answer = this.surveyAnswers[questionId];\r\n    if (typeof answer === \"undefined\") {\r\n      for (let response of this.prefillResponses) {\r\n        if (response.questionId == questionId) {\r\n          return response;\r\n        }\r\n      }\r\n    }\r\n    return this.surveyAnswers[questionId];\r\n  }\r\n\r\n  acceptAnswers() {\r\n    let self: SurveyHandler = this;\r\n    // (window as any).ccsdkDebug?console.log('add question answered listener':'')\r\n    document.addEventListener(\"q-answered\", this.acceptAnswersCb);\r\n  }\r\n\r\n  fillPrefillQuestionObject(id: any, response: any) {\r\n    let question: any = this.getQuestionById(id);\r\n    let responseStored = this.getPrefillResponseById(id);\r\n    if (responseStored != null) {\r\n      this.updatePrefillResponseById(id, response);\r\n    } else {\r\n      this.prefillResponses.push(response);\r\n    }\r\n  }\r\n\r\n  fillPrefill(prefillObj: PrefillDictionary) {\r\n    Object.keys(prefillObj).map(x => {\r\n      this.prefillWithTags[x.toLowerCase()] = prefillObj[x];\r\n    });\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"prefillByTag\", this.prefillWithTags)\r\n      : \"\";\r\n  }\r\n\r\n  fillPrefillByNote(prefillObj: PrefillDictionary) {\r\n    Object.keys(prefillObj).map(x => {\r\n      this.prefillWithNote[x.toLowerCase()] = prefillObj[x];\r\n    });\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"prefillByNote\", this.prefillWithNote)\r\n      : \"\";\r\n  }\r\n\r\n  fillPrefillDirect(prefillObj: PrefillDictionary) {\r\n    Object.keys(prefillObj).forEach(x => {\r\n      this.prefillDirect[x] = prefillObj[x];\r\n    });\r\n\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"prefillDirect\", this.prefillDirect)\r\n      : \"\";\r\n  }\r\n\r\n  fillPrefillQuestion(id: any, value: any, valueType: string) {\r\n    let question: any = this.getQuestionById(id);\r\n\r\n    let response: any;\r\n    let responseStored = this.getPrefillResponseById(id);\r\n    if (responseStored != null) {\r\n      response = responseStored;\r\n    } else {\r\n      response = {\r\n        questionId: question.id,\r\n        questionText: question.text,\r\n        textInput: null,\r\n        numberInput: null\r\n      };\r\n    }\r\n    valueType = this.getAnswerTypeFromDisplayType(question.displayType);\r\n\r\n    if (valueType.toLowerCase() == \"number\") {\r\n      response.numberInput = value;\r\n    }\r\n    if (valueType.toLowerCase() == \"text\") {\r\n      response.textInput = value;\r\n    }\r\n    if (responseStored != null) {\r\n      this.updatePrefillResponseById(id, response);\r\n    } else {\r\n      this.prefillResponses.push(response);\r\n    }\r\n  }\r\n\r\n  postPrefillPartialAnswer(fullSubmission = false, successcb, errorcb) {\r\n    if (!fullSubmission && this._prefillsPartiallyPosted) {\r\n      return;\r\n    }\r\n    this._prefillsPartiallyPosted = true;\r\n    if (!this.surveyData.partialResponseId) {\r\n      return;\r\n    }\r\n    let surveyPartialUrl = Config.SURVEY_PARTIAL_RESPONSE.replace(\r\n      \"{id}\",\r\n      this.surveyData.partialResponseId\r\n    );\r\n    surveyPartialUrl = surveyPartialUrl.replace(\"{complete}\", \"false\");\r\n    surveyPartialUrl = Config.API_URL + surveyPartialUrl;\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"Posting Prefill Responses to Server\")\r\n      : \"\";\r\n    (window as any).ccsdkDebug ? console.log(this.prefillResponses) : \"\";\r\n\r\n    if (!this.surveyData.partialResponseId) {\r\n      // run successCB if there is one.\r\n      if (successcb) {\r\n        successcb();\r\n      }\r\n      return;\r\n    }\r\n    if (\r\n      typeof this.prefillResponses !== \"undefined\" &&\r\n      this.prefillResponses.length > 0\r\n    ) {\r\n      RequestHelper.postWithHeaders(\r\n        surveyPartialUrl,\r\n        this.prefillResponses,\r\n        {},\r\n        successcb,\r\n        errorcb\r\n      );\r\n    } else {\r\n      // console.log('No Prefill data');\r\n      return;\r\n    }\r\n  }\r\n\r\n  updatePrefillResponseById(id: any, resp: any) {\r\n    for (let response of this.prefillResponses) {\r\n      if (response.questionId == id) {\r\n        response = resp;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  getPrefillResponseById(id: any) {\r\n    return this.prefillResponses.find(x => x.id === id);\r\n  }\r\n\r\n  getQuestionById(id: any) {\r\n    return this.questions.find(x => x.id === id);\r\n  }\r\n\r\n  postPartialAnswer(\r\n    index: any,\r\n    response: any,\r\n    complete = false,\r\n    successcb,\r\n    errorcb\r\n  ) {\r\n    this.postPrefillPartialAnswer(complete, null, null);\r\n\r\n    let question: any = this.questionsToDisplay[index];\r\n\r\n    let data: any = {\r\n      questionId: question.id,\r\n      questionText: question.text,\r\n      textInput: response.text,\r\n      numberInput: response.number\r\n    };\r\n\r\n    let surveyPartialUrl = Config.SURVEY_PARTIAL_RESPONSE.replace(\r\n      \"{id}\",\r\n      this.surveyData.partialResponseId\r\n    );\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\r\n        \"partial response\",\r\n        question.id ==\r\n        this.questionsToDisplay[this.questionsToDisplay.length - 1].id\r\n      )\r\n      : \"\";\r\n    surveyPartialUrl = surveyPartialUrl.replace(\"{complete}\", `${complete}`);\r\n    surveyPartialUrl = Config.API_URL + surveyPartialUrl;\r\n\r\n    //add partial answer to main answer\r\n    this.surveyAnswers[question.id] = data;\r\n\r\n    data = [data];\r\n\r\n    let onSurveyAnswerEvent = new CustomEvent(\r\n      Constants.SURVEY_ANSWER_EVENT + \"-\" + this.surveyToken\r\n    );\r\n    document.dispatchEvent(onSurveyAnswerEvent);\r\n\r\n    if (!this.surveyData.partialResponseId) {\r\n      // run success callback and return\r\n      if (successcb) {\r\n        successcb();\r\n      }\r\n      return;\r\n    }\r\n    console.log(data);\r\n    if (\r\n      question.id ==\r\n      this.questionsToDisplay[this.questionsToDisplay.length - 1].id\r\n    ) {\r\n      //last question post moved to separate function\r\n      RequestHelper.postWithHeaders(\r\n        surveyPartialUrl,\r\n        data,\r\n        {},\r\n        successcb,\r\n        errorcb\r\n      );\r\n    } else {\r\n      RequestHelper.postWithHeaders(\r\n        surveyPartialUrl,\r\n        data,\r\n        {},\r\n        successcb,\r\n        errorcb\r\n      );\r\n    }\r\n  }\r\n\r\n  finalPost(successcb, errorcb) {\r\n    //last question\r\n    let postSurveyFinalUrl = Config.POST_SURVEY_FINAL.replace(\r\n      \"{tokenId}\",\r\n      this.ccsdk.surveyToken\r\n    );\r\n    postSurveyFinalUrl = Config.API_URL + postSurveyFinalUrl;\r\n    let answersAll = [];\r\n    // hack for partial flushing\r\n    let lastAnswer;\r\n\r\n    if (Object.keys(this.surveyAnswers).length == 0) {\r\n      return;\r\n    }\r\n    for (let answer in this.surveyAnswers) {\r\n      let response = this.surveyAnswers[answer];\r\n      if (\r\n        response &&\r\n        (response.textInput !== null || response.numberInput !== null)\r\n      ) {\r\n        answersAll.push(response);\r\n        lastAnswer = response;\r\n      }\r\n    }\r\n    for (let answer in this.prefillResponses) {\r\n      answersAll.push(this.prefillResponses[answer]);\r\n    }\r\n    let timeAtPost = new Date().getTime();\r\n    let finalData = {\r\n      id: this.ccsdk.surveyToken,\r\n      user: this.ccsdk.config.username,\r\n      locationId: null,\r\n      responses: answersAll,\r\n      nps: 0,\r\n      surveyClient: Constants.SURVEY_CLIENT,\r\n      responseDuration: Math.floor(\r\n        (timeAtPost - this.ccsdk.surveyStartTime.getTime()) / 1000\r\n      )\r\n    };\r\n    if (lastAnswer) {\r\n      let _lastAnswer = {\r\n        text: lastAnswer.textInput,\r\n        number: lastAnswer.numberInput\r\n      };\r\n      this.postPartialAnswer(\r\n        this.questionsToDisplay.length - 1,\r\n        _lastAnswer,\r\n        true,\r\n        null,\r\n        null\r\n      );\r\n    }\r\n\r\n    if (finalData.responses && finalData.responses.length > 0) {\r\n      RequestHelper.postWithHeaders(\r\n        postSurveyFinalUrl,\r\n        finalData,\r\n        {},\r\n        successcb,\r\n        errorcb\r\n      );\r\n    } else {\r\n      successcb();\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * check if conditions are satsified which are required to display question?\r\n   *\r\n   * @param {any} question\r\n   * @memberof Survey\r\n   */\r\n  checkConditionals(question: any) {\r\n    return true;\r\n  }\r\n\r\n  compileTemplate(question: any) {\r\n    let self: SurveyHandler = this;\r\n    //get question type\r\n    let questionTemplate;\r\n    // (window as any).ccsdkDebug?console.log(question):'';\r\n    if (question != \"undefined\") {\r\n      switch (question.displayType) {\r\n        case \"Slider\":\r\n          let displayLegend = question.displayLegend;\r\n          let opt: any = question.multiSelect[0].split(\"-\");\r\n          let optMin: any = opt[0].split(\";\");\r\n          let optMax: any = opt[1].split(\";\");\r\n          //get text question template and compile it.\r\n          questionTemplate = templates.question_slider;\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{question}}\",\r\n            ConditionalTextFilter.filterText(this, question)\r\n          );\r\n          questionTemplate = questionTemplate.replace(/{{min}}/g, optMin[0]);\r\n          if (displayLegend[0]) {\r\n            questionTemplate = questionTemplate.replace(\r\n              /{{minLabel}}/g,\r\n              displayLegend[0] + \"-\"\r\n            );\r\n          } else {\r\n            questionTemplate = questionTemplate.replace(/{{minLabel}}/g, \"\");\r\n          }\r\n          questionTemplate = questionTemplate.replace(/{{max}}/g, optMax[0]);\r\n          if (displayLegend[1]) {\r\n            questionTemplate = questionTemplate.replace(\r\n              /{{maxLabel}}/g,\r\n              displayLegend[1] + \"-\"\r\n            );\r\n          } else {\r\n            questionTemplate = questionTemplate.replace(/{{maxLabel}}/g, \"\");\r\n          }\r\n          questionTemplate = questionTemplate.replace(\r\n            /{{questionId}}/g,\r\n            \"id\" + question.id\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{isRequired}}\",\r\n            question.isRequired ? \"true\" : \"false\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{requiredLabel}}\",\r\n            question.isRequired ? \"*\" : \"\"\r\n          );\r\n          break;\r\n        case \"Scale\":\r\n          //get text question template and compile it.\r\n          (window as any).ccsdkDebug ? console.log(question.questionTags) : \"\";\r\n          if (question.questionTags.includes(\"NPS\")) {\r\n            questionTemplate = templates.question_nps;\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{question}}\",\r\n              ConditionalTextFilter.filterText(this, question)\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              /{{questionId}}/g,\r\n              \"id\" + question.id\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{isRequired}}\",\r\n              question.isRequired ? \"true\" : \"false\"\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{requiredLabel}}\",\r\n              question.isRequired ? \"*\" : \"\"\r\n            );\r\n          } else if (question.questionTags.includes(\"CSAT\")) {\r\n            if (question.questionTags.includes(\"csat_satisfaction_5\")) {\r\n              questionTemplate = templates.question_csat_satisfaction_5;\r\n            } else if (question.questionTags.includes(\"csat_agreement_5\")) {\r\n              questionTemplate = templates.question_csat_agreement_5;\r\n            }\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{question}}\",\r\n              ConditionalTextFilter.filterText(this, question)\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              /{{questionId}}/g,\r\n              \"id\" + question.id\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{isRequired}}\",\r\n              question.isRequired ? \"true\" : \"false\"\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{requiredLabel}}\",\r\n              question.isRequired ? \"*\" : \"\"\r\n            );\r\n          } else {\r\n            let tileColor = \"\";\r\n            let style = \"\";\r\n            if (\r\n              question.attributes != null &&\r\n              question.attributes.scaleColor &&\r\n              question.attributes.scaleColor.length > 0\r\n            ) {\r\n              if (question.attributes.scaleColor !== \"Gradient\") {\r\n                tileColor = question.attributes.scaleColor;\r\n              } else {\r\n                tileColor = \"#02BAEE\";\r\n              }\r\n            } else if (\r\n              question.presentationMode != null &&\r\n              question.presentationMode.indexOf(\"Color\") !== -1\r\n            ) {\r\n              tileColor = question.presentationMode.split(\":\")[1];\r\n            }\r\n            if (tileColor.length > 0) {\r\n              let tileColorDark = this.util.shadeBlendConvert(\r\n                -0.3,\r\n                tileColor,\r\n                undefined\r\n              );\r\n              style =\r\n                \"\\\r\n                <style>\\\r\n                #id\" +\r\n                question.id +\r\n                \" .option-number-item.option-scale{\\\r\n                  background-color : \" +\r\n                tileColor +\r\n                \";\\\r\n                }\\\r\n                #id\" +\r\n                question.id +\r\n                \" .option-number-item.option-scale:hover,\\\r\n                #id\" +\r\n                question.id +\r\n                \" .option-number-item.option-scale.selected{\\\r\n                  background-color : \" +\r\n                tileColorDark +\r\n                \";\\\r\n                }\\\r\n                </style>\\\r\n              \";\r\n            }\r\n\r\n            questionTemplate = templates.question_scale;\r\n            questionTemplate = questionTemplate.replace(/{{style}}/g, style);\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{question}}\",\r\n              ConditionalTextFilter.filterText(this, question)\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              /{{questionId}}/g,\r\n              \"id\" + question.id\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{isRequired}}\",\r\n              question.isRequired ? \"true\" : \"false\"\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{requiredLabel}}\",\r\n              question.isRequired ? \"*\" : \"\"\r\n            );\r\n            //construct NPS scale here....\r\n            let startRange = 0.0;\r\n            let endRange = 10.0;\r\n            let options = \"\";\r\n            let startRangeLabel = \"\";\r\n            // let startRangeLabel = \"\";\r\n            // let endRangeLabel = \"Very likely\";\r\n            let endRangeLabel = \"\";\r\n            let midRangeLabel = \"\";\r\n\r\n            if (\r\n              question.questionTags.includes(\"ces_agree_5\") ||\r\n              question.questionTags.includes(\"ces_agree_7\")\r\n            ) {\r\n              startRangeLabel = \"Strongly Disagree\";\r\n              endRangeLabel = \"Strongly Agree\";\r\n              if (question.questionTags.includes(\"ces_agree_7\")) {\r\n                midRangeLabel = \"Somewhat Agree\";\r\n              }\r\n            } else if (\r\n              question.questionTags.includes(\"ces_effort_5\") ||\r\n              question.questionTags.includes(\"ces_effort_7\")\r\n            ) {\r\n              startRangeLabel = \"High Effort\";\r\n              endRangeLabel = \"Low Effort\";\r\n              if (question.questionTags.includes(\"ces_effort_7\")) {\r\n                midRangeLabel = \"Moderate Effort\";\r\n              }\r\n            } else if (question.anchorMetricName != null) {\r\n              let metricName = question.anchorMetricName;\r\n              let customMetric = this.surveyData.customMetrics[metricName];\r\n              let optionsLength = customMetric.optionCategories.length;\r\n              startRangeLabel = customMetric.optionCategories[0].label;\r\n              if (optionsLength > 2) {\r\n                midRangeLabel = customMetric.optionCategories[1].label;\r\n              } else {\r\n                midRangeLabel = null;\r\n              }\r\n              endRangeLabel =\r\n                customMetric.optionCategories[optionsLength - 1].label;\r\n            }\r\n\r\n            let displayLegend = LanguageTextFilter.translateDisplayLegend(\r\n              this,\r\n              question\r\n            );\r\n            if (displayLegend) {\r\n              if (displayLegend.length > 0) {\r\n                startRangeLabel = displayLegend[0] ? displayLegend[0] : null;\r\n                endRangeLabel = displayLegend[1] ? displayLegend[1] : null;\r\n              }\r\n            }\r\n            if (question.multiSelect.length > 0) {\r\n              startRange = parseFloat(question.multiSelect[0].split(\"-\")[0]);\r\n              if (startRangeLabel == null) {\r\n                startRangeLabel = question.multiSelect[0]\r\n                  .split(\"-\")[0]\r\n                  .split(\";\")[1];\r\n              }\r\n              endRange = parseFloat(question.multiSelect[0].split(\"-\")[1]);\r\n              if (endRangeLabel == null) {\r\n                endRangeLabel = question.multiSelect[0]\r\n                  .split(\"-\")[1]\r\n                  .split(\";\")[1];\r\n              }\r\n            }\r\n            startRangeLabel = startRangeLabel == null ? \"\" : startRangeLabel;\r\n            endRangeLabel = endRangeLabel == null ? \"\" : endRangeLabel;\r\n            let mobileImageUrl = \"\";\r\n            let imageVisibility010 = \"hide\";\r\n            let imageVisibility110 = \"hide\";\r\n            let scaleVisibility = \"show-inline\";\r\n            let scaleImageContainer = \"\";\r\n            if (startRange == 0 && endRange == 10) {\r\n              mobileImageUrl =\r\n                \"https://cx.getcloudcherry.com/microsurvey-assets/scale-0-10-neutral.svg\";\r\n              imageVisibility010 = \"show\";\r\n              imageVisibility110 = \"hide\";\r\n              scaleVisibility = \"hide\";\r\n              scaleImageContainer = \"scale-image-container\";\r\n            } else if (startRange == 1 && endRange == 10) {\r\n              mobileImageUrl =\r\n                \"https://cx.getcloudcherry.com/microsurvey-assets/scale-1-10-neutral.svg\";\r\n              imageVisibility010 = \"hide\";\r\n              imageVisibility110 = \"show\";\r\n              scaleVisibility = \"hide\";\r\n              scaleImageContainer = \"scale-image-container\";\r\n            }\r\n            // console.log('scale', startRange, endRange);\r\n            let divider: any = 1;\r\n            if (endRange < 11) {\r\n            } else {\r\n              divider = (endRange - startRange) / 10.0;\r\n            }\r\n            let initial = 0.0;\r\n            let optionStyle = \"\";\r\n            let legendDimension;\r\n            if ((window as any).isMobile) {\r\n              if (endRange < 11) {\r\n                let parentContainer = window.innerWidth - 40;\r\n                let dimension =\r\n                  ((100 / (endRange - startRange + 1) - 0.5) *\r\n                    parentContainer) /\r\n                  100;\r\n                dimension = dimension > 48 ? 48 : dimension;\r\n                legendDimension = (endRange - startRange + 1) * (dimension + 1);\r\n                optionStyle = `width:${dimension}px;height:${dimension}px;padding:${(dimension -\r\n                  15) /\r\n                  2}px;`;\r\n              }\r\n            } else {\r\n              imageVisibility010 = \"hide\";\r\n              imageVisibility110 = \"hide\";\r\n              scaleVisibility = \"show-inline\";\r\n              scaleImageContainer = \"\";\r\n              mobileImageUrl = \"\";\r\n            }\r\n\r\n            if (question.questionTags.includes(\"CES\")) {\r\n              var leftWidth = 38 * 3 + \"px\";\r\n              for (\r\n                let initial = startRange;\r\n                initial <= endRange;\r\n                initial += divider\r\n              ) {\r\n                options +=\r\n                  '<span data-rating=\"' +\r\n                  initial +\r\n                  '\" class=\"option-number-item option-' +\r\n                  endRange +\r\n                  \"-scale-\" +\r\n                  initial +\r\n                  \" \" +\r\n                  scaleVisibility +\r\n                  '\" style=\"' +\r\n                  optionStyle +\r\n                  '\">' +\r\n                  initial +\r\n                  \"</span>\";\r\n              }\r\n            } else if (question.anchorMetricName != null) {\r\n              let metricName = question.anchorMetricName;\r\n              let customMetric = this.surveyData.customMetrics[metricName];\r\n\r\n              var cmwidthstart = customMetric.optionCategories[0].categoryRange.split(\r\n                \",\"\r\n              )[0];\r\n              var cmwidthend = customMetric.optionCategories[1].categoryRange.split(\r\n                \",\"\r\n              )[0];\r\n              var leftWidth = (cmwidthend - cmwidthstart) * 39 + \"px\";\r\n\r\n              for (var iterator in customMetric.optionCategories) {\r\n                let startRange = parseFloat(\r\n                  customMetric.optionCategories[iterator].categoryRange.split(\r\n                    \",\"\r\n                  )[0]\r\n                );\r\n                let endRange = parseFloat(\r\n                  customMetric.optionCategories[iterator].categoryRange.split(\r\n                    \",\"\r\n                  )[1]\r\n                );\r\n\r\n                imageVisibility010 = 'hide';\r\n                imageVisibility110 = 'hide';\r\n                scaleVisibility = 'show-inline';\r\n                scaleImageContainer = \"\";\r\n                mobileImageUrl = \"\";\r\n\r\n                for (\r\n                  let initial = startRange;\r\n                  initial <= endRange;\r\n                  initial += divider\r\n                ) {\r\n                  options +=\r\n                    '<span data-rating=\"' +\r\n                    initial +\r\n                    '\" class=\"option-number-item option-scale\"' +\r\n                    scaleVisibility +\r\n                    '\" style=\"background:' +\r\n                    customMetric.optionCategories[iterator].color +\r\n                    '\">' +\r\n                    initial +\r\n                    \"</span>\";\r\n                }\r\n              }\r\n              legendDimension = (endRange - startRange + 1) * 39;\r\n\r\n            } else {\r\n              for (\r\n                let initial = startRange;\r\n                initial <= endRange;\r\n                initial += divider\r\n              ) {\r\n                options +=\r\n                  '<span data-rating=\"' +\r\n                  initial +\r\n                  '\" class=\"option-number-item option-scale ' +\r\n                  scaleVisibility +\r\n                  '\" style=\"' +\r\n                  optionStyle +\r\n                  '\">' +\r\n                  initial +\r\n                  \"</span>\";\r\n              }\r\n              legendDimension = (endRange - startRange + 1) * 39;\r\n            }\r\n\r\n            if (endRange - startRange + 1 <= 11) {\r\n              var optionLeftExtraClass =\r\n                \"option-left-rating-text-small-container\";\r\n              var optionMidExtraClass =\r\n                \"option-mid-rating-text-small-container\";\r\n              var optionRightExtraClass =\r\n                \"option-right-rating-text-small-container\";\r\n              var optionMaxWidth =\r\n                ((endRange - startRange + 1) * 38) / 2 - 5 + \"px\";\r\n              // console.log(optionMaxWidth);\r\n            }\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{legendStyle}}\",\r\n              `style=\"position:relative;width:${\r\n              mobileImageUrl ? \"100%\" : legendDimension + \"px\"\r\n              };min-height: 20px;\"`\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              /\\{\\{radialLegend\\}\\}/g,\r\n              mobileImageUrl ? \"radial-legend\" : \"unknown-class\"\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{optionsRange}}\",\r\n              options\r\n            );\r\n            // questionTemplate = questionTemplate.replace(\"{{maxWidth}}\", optionMaxWidth);\r\n            questionTemplate = questionTemplate.replace(\r\n              /maxWidth/g,\r\n              mobileImageUrl ? \"35%;width:35%\" : optionMaxWidth\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              /leftWidth/g,\r\n              leftWidth\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              /{{optionLeftExtraClass}}/g,\r\n              optionLeftExtraClass\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              /{{optionMidExtraClass}}/g,\r\n              optionMidExtraClass\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              /{{optionRightExtraClass}}/g,\r\n              optionRightExtraClass\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{leftLabel}}\",\r\n              startRangeLabel\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{midLabel}}\",\r\n              midRangeLabel || \"\"\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{rightLabel}}\",\r\n              endRangeLabel\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              /{{mobileImageUrl}}/g,\r\n              '\"' + mobileImageUrl + '\"'\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{imageVisibility010}}\",\r\n              imageVisibility010\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{imageVisibility110}}\",\r\n              imageVisibility110\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{scaleImageContainer}}\",\r\n              scaleImageContainer\r\n            );\r\n          }\r\n\r\n          break;\r\n        case \"Text\":\r\n          //get text question template and compile it.\r\n          questionTemplate = templates.question_text;\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{question}}\",\r\n            ConditionalTextFilter.filterText(this, question)\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            /{{questionId}}/g,\r\n            \"id\" + question.id\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{isRequired}}\",\r\n            question.isRequired ? \"true\" : \"false\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{requiredLabel}}\",\r\n            question.isRequired ? \"*\" : \"\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{validationHint}}\",\r\n            question.validationHint ? question.validationHint : \"\"\r\n          );\r\n\r\n          break;\r\n        case \"Number\":\r\n          //get text question template and compile it.\r\n          questionTemplate = templates.question_number;\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{question}}\",\r\n            ConditionalTextFilter.filterText(this, question)\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            /{{questionId}}/g,\r\n            \"id\" + question.id\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{isRequired}}\",\r\n            question.isRequired ? \"true\" : \"false\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{requiredLabel}}\",\r\n            question.isRequired ? \"*\" : \"\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{validationHint}}\",\r\n            question.validationHint ? question.validationHint : \"\"\r\n          );\r\n          break;\r\n\r\n        case \"Date\":\r\n          questionTemplate = templates.question_date;\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{question}}\",\r\n            ConditionalTextFilter.filterText(this, question)\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            /{{questionId}}/g,\r\n            \"id\" + question.id\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{isRequired}}\",\r\n            question.isRequired ? \"true\" : \"false\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{requiredLabel}}\",\r\n            question.isRequired ? \"*\" : \"\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{validationHint}}\",\r\n            question.validationHint ? question.validationHint : \"\"\r\n          );\r\n          break;\r\n\r\n        case \"MultilineText\":\r\n          //get text question template and compile it.\r\n          questionTemplate = templates.question_multi_line_text;\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{question}}\",\r\n            ConditionalTextFilter.filterText(this, question)\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            /{{questionId}}/g,\r\n            \"id\" + question.id\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{isRequired}}\",\r\n            question.isRequired ? \"true\" : \"false\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{requiredLabel}}\",\r\n            question.isRequired ? \"*\" : \"\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{characterLimit}}\",\r\n            question.attributes && question.attributes.characterLimit\r\n              ? question.attributes.characterLimit\r\n              : \"\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{validationHint}}\",\r\n            question.validationHint ? question.validationHint : \"\"\r\n          );\r\n          break;\r\n\r\n        case \"MultiSelect\":\r\n          let acTemplate: string;\r\n          let multiSelect1;\r\n          //get text question template and compile it.\r\n          multiSelect1 = Array.prototype.slice.call(\r\n            LanguageTextFilter.translateMultiSelect(this, question)\r\n          );\r\n          if (question.presentationMode == \"Invert\") {\r\n            // console.log('selection option before reverse', multiSelect1);\r\n            multiSelect1.reverse();\r\n            // console.log('selection option after reverse', multiSelect1);\r\n            // console.log('selection api option', question.multiSelect);\r\n          }\r\n          //get text question template and compile it.\r\n          if (\r\n            (question.displayStyle == \"radiobutton/checkbox\" ||\r\n              question.displayStyle == \"icon\") &&\r\n            multiSelect1.length < 6\r\n          ) {\r\n            // (window as any).ccsdkDebug?console.log(question.displayStyle):'';\r\n            let checkOptionContainsImage: boolean = self.util.checkOptionContainsImage(\r\n              multiSelect1\r\n            );\r\n            // (window as any).ccsdkDebug?console.log('select radio image',checkOptionContainsImage):'';\r\n            if (\r\n              checkOptionContainsImage &&\r\n              ((multiSelect1.length > 0 &&\r\n                multiSelect1[0].indexOf(\"Male\") !== -1) ||\r\n                (multiSelect1.length > 0 &&\r\n                  multiSelect1[0].indexOf(\"Yes\") !== -1) ||\r\n                (multiSelect1.length > 1 &&\r\n                  multiSelect1[1].indexOf(\"Yes\") !== -1))\r\n            ) {\r\n              // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n              acTemplate = templates.question_checkbox;\r\n              let options2 = self.util.generateCheckboxImageOptions(\r\n                question.multiSelect,\r\n                multiSelect1,\r\n                question.id\r\n              );\r\n              // (window as any).ccsdkDebug?console.log(options2):'';\r\n              questionTemplate = acTemplate;\r\n              questionTemplate = questionTemplate.replace(\r\n                /{{options}}/g,\r\n                options2\r\n              );\r\n              acTemplate = questionTemplate;\r\n            } else if (checkOptionContainsImage) {\r\n              // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n              acTemplate = templates.question_checkbox;\r\n              let options2 = self.util.generateCheckboxIgnoreImageOptions(\r\n                question.multiSelect,\r\n                multiSelect1,\r\n                question.id\r\n              );\r\n              // (window as any).ccsdkDebug?console.log(options2):'';\r\n              questionTemplate = acTemplate;\r\n              questionTemplate = questionTemplate.replace(\r\n                /{{options}}/g,\r\n                options2\r\n              );\r\n              acTemplate = questionTemplate;\r\n            } else {\r\n              let options3: string = self.util.generateCheckboxOptions(\r\n                question.multiSelect,\r\n                multiSelect1,\r\n                question.id\r\n              );\r\n              // (window as any).ccsdkDebug?console.log(options2):'';\r\n              acTemplate = templates.question_checkbox;\r\n              questionTemplate = acTemplate.replace(/{{options}}/g, options3);\r\n              acTemplate = questionTemplate;\r\n            }\r\n          } else {\r\n            // (window as any).ccsdkDebug?console.log('select type 3'):'';\r\n            acTemplate = templates.question_multi_select;\r\n\r\n            // acTemplate = templates.question_select;\r\n            let options3 = self.util.generateSelectOptions(\r\n              question.multiSelect,\r\n              multiSelect1\r\n            );\r\n\r\n            if (self.ccsdk.config.language.indexOf(\"Default\") === -1) {\r\n              if (\r\n                typeof question.translated !== \"undefined\" &&\r\n                question.translated != null &&\r\n                typeof question.translated[self.ccsdk.config.language] !==\r\n                \"undefined\" &&\r\n                question.translated[self.ccsdk.config.language].multiSelect !==\r\n                \"undefined\" &&\r\n                question.translated[self.ccsdk.config.language].multiSelect\r\n                  .length > 0\r\n              ) {\r\n                multiSelect1 = Array.prototype.slice.call(\r\n                  question.translated[self.ccsdk.config.language].multiSelect\r\n                );\r\n                if (question.presentationMode == \"Invert\") {\r\n                  multiSelect1.reverse();\r\n                }\r\n                options3 = self.util.generateSelectOptions(\r\n                  question.multiSelect,\r\n                  multiSelect1\r\n                );\r\n              }\r\n            }\r\n            // questionTemplate = acTemplate;\r\n            self.ccsdk.debug ? console.log(options3) : \"\";\r\n            questionTemplate = acTemplate.replace(/{{options}}/g, options3);\r\n            acTemplate = questionTemplate;\r\n          }\r\n          questionTemplate = acTemplate;\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{question}}\",\r\n            ConditionalTextFilter.filterText(this, question)\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            /{{questionId}}/g,\r\n            \"id\" + question.id\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{isRequired}}\",\r\n            question.isRequired ? \"true\" : \"false\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{requiredLabel}}\",\r\n            question.isRequired ? \"*\" : \"\"\r\n          );\r\n\r\n          break;\r\n        case \"Select\":\r\n          let acTemplate1: string;\r\n          let acTemplate2: string;\r\n          let options1: string;\r\n          let options2: string;\r\n          let multiSelect;\r\n          //get text question template and compile it.\r\n          multiSelect = Array.prototype.slice.call(\r\n            LanguageTextFilter.translateMultiSelect(this, question)\r\n          );\r\n          let invertedMultiSelect;\r\n          if (question.presentationMode == \"Invert\") {\r\n            // console.log('selection option before reverse', multiSelect);\r\n            invertedMultiSelect = question.multiSelect\r\n              ? question.multiSelect.slice().reverse()\r\n              : [];\r\n            multiSelect.reverse();\r\n            // console.log('selection option after reverse', multiSelect);\r\n            // console.log('selection api option', question.multiSelect);\r\n          } else {\r\n            invertedMultiSelect = question.multiSelect;\r\n          }\r\n          if (\r\n            question.displayStyle == \"radiobutton/checkbox\" &&\r\n            multiSelect.length < 6\r\n          ) {\r\n            // if(question.displayStyle == 'radiobutton/checkbox'){\r\n            // (window as any).ccsdkDebug?console.log('select type 1'):'';\r\n            // (window as any).ccsdkDebug?console.log(question.displayStyle):'';\r\n            // acTemplate1 = templates.question_radio;\r\n            // questionTemplate = acTemplate1;\r\n\r\n            let checkOptionContainsImage: boolean = self.util.checkOptionContainsImage(\r\n              multiSelect\r\n            );\r\n            (window as any).ccsdkDebug\r\n              ? console.log(\"select radio image\", checkOptionContainsImage)\r\n              : \"\";\r\n            if (\r\n              checkOptionContainsImage &&\r\n              ((multiSelect.length > 0 &&\r\n                multiSelect[0].indexOf(\"Male\") !== -1) ||\r\n                (multiSelect.length > 0 &&\r\n                  multiSelect[0].indexOf(\"Yes\") !== -1) ||\r\n                (multiSelect.length > 1 &&\r\n                  multiSelect[1].indexOf(\"Yes\") !== -1))\r\n            ) {\r\n              // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n              acTemplate2 = templates.question_radio_image;\r\n\r\n              options2 = self.util.generateRadioImageOptions(\r\n                invertedMultiSelect,\r\n                multiSelect,\r\n                question.id\r\n              );\r\n              (window as any).ccsdkDebug ? console.log({ options2 }) : \"\";\r\n              questionTemplate = acTemplate2;\r\n              questionTemplate = questionTemplate.replace(\r\n                /{{options}}/g,\r\n                options2\r\n              );\r\n            } else if (checkOptionContainsImage) {\r\n              // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n              acTemplate2 = templates.question_radio_image;\r\n              options2 = self.util.generateRadioIgnoreImageOptions(\r\n                invertedMultiSelect,\r\n                multiSelect,\r\n                question.id\r\n              );\r\n              // (window as any).ccsdkDebug?console.log(options2):'';\r\n              questionTemplate = acTemplate2;\r\n              questionTemplate = questionTemplate.replace(\r\n                /{{options}}/g,\r\n                options2\r\n              );\r\n            } else {\r\n              acTemplate1 = templates.question_radio;\r\n              questionTemplate = acTemplate1;\r\n\r\n              options1 = self.util.generateRadioOptions(\r\n                invertedMultiSelect,\r\n                multiSelect,\r\n                question.id\r\n              );\r\n              questionTemplate = questionTemplate.replace(\r\n                \"{{options}}\",\r\n                options1\r\n              );\r\n            }\r\n          } else if (\r\n            question.displayStyle == \"icon\" &&\r\n            multiSelect.length < 6\r\n          ) {\r\n            acTemplate1 = templates.question_radio;\r\n            questionTemplate = acTemplate1;\r\n            let invertedMultiSelect;\r\n            if (question.presentationMode == \"Invert\") {\r\n              invertedMultiSelect = question.multiSelect\r\n                ? question.multiSelect.slice().reverse()\r\n                : [];\r\n            } else {\r\n              invertedMultiSelect = question.multiSelect;\r\n            }\r\n            options1 = self.util.generateRadioOptions(\r\n              invertedMultiSelect,\r\n              multiSelect,\r\n              question.id\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{options}}\",\r\n              options1\r\n            );\r\n          } else {\r\n            (window as any).ccsdkDebug ? console.log(\"select type 3\") : \"\";\r\n            acTemplate1 = templates.question_select;\r\n            options1 = self.util.generateSelectOptions(\r\n              invertedMultiSelect,\r\n              multiSelect\r\n            );\r\n            if (self.ccsdk.config.language.indexOf(\"Default\") === -1) {\r\n              if (\r\n                typeof question.translated !== \"undefined\" &&\r\n                question.translated != null &&\r\n                typeof question.translated[self.ccsdk.config.language] !==\r\n                \"undefined\" &&\r\n                question.translated[self.ccsdk.config.language].multiSelect !==\r\n                \"undefined\" &&\r\n                question.translated[self.ccsdk.config.language].multiSelect\r\n                  .length > 0\r\n              ) {\r\n                multiSelect = Array.prototype.slice.call(\r\n                  question.translated[self.ccsdk.config.language].multiSelect\r\n                );\r\n                if (question.presentationMode == \"Invert\") {\r\n                  multiSelect.reverse();\r\n                }\r\n                options1 = self.util.generateSelectOptions(\r\n                  invertedMultiSelect,\r\n                  multiSelect\r\n                );\r\n              }\r\n            }\r\n            questionTemplate = acTemplate1;\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{options}}\",\r\n              options1\r\n            );\r\n          }\r\n          // console.log( questionTemplate );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{question}}\",\r\n            ConditionalTextFilter.filterText(this, question)\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            /{{questionId}}/g,\r\n            \"id\" + question.id\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{isRequired}}\",\r\n            question.isRequired ? \"true\" : \"false\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{requiredLabel}}\",\r\n            question.isRequired ? \"*\" : \"\"\r\n          );\r\n          // (window as any).ccsdkDebug?console.log(questionTemplate):'';\r\n\r\n          break;\r\n        case \"Smile-5\":\r\n          //get text question template and compile it.\r\n          if (question.presentationMode == \"Invert\") {\r\n            questionTemplate = templates.question_smile_5_inverted;\r\n          } else {\r\n            questionTemplate = templates.question_smile_5;\r\n          }\r\n          // let startRangeLabel = \"Very unlikely\";\r\n          // let endRangeLabel = \"Very likely\";\r\n          let startRangeLabel = \"\";\r\n          let endRangeLabel = \"\";\r\n          let displayLegend2 = LanguageTextFilter.translateDisplayLegend(\r\n            this,\r\n            question\r\n          );\r\n\r\n          if (displayLegend2) {\r\n            if (displayLegend2.length > 0) {\r\n              startRangeLabel = displayLegend2[0] ? displayLegend2[0] : null;\r\n              endRangeLabel = displayLegend2[1] ? displayLegend2[1] : null;\r\n            }\r\n          }\r\n          startRangeLabel = startRangeLabel == null ? \"\" : startRangeLabel;\r\n          endRangeLabel = endRangeLabel == null ? \"\" : endRangeLabel;\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{question}}\",\r\n            ConditionalTextFilter.filterText(this, question)\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            /{{questionId}}/g,\r\n            \"id\" + question.id\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{isRequired}}\",\r\n            question.isRequired ? \"true\" : \"false\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{requiredLabel}}\",\r\n            question.isRequired ? \"*\" : \"\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{leftLabel}}\",\r\n            startRangeLabel\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{rightLabel}}\",\r\n            endRangeLabel\r\n          );\r\n          break;\r\n        case \"Star-5\":\r\n          //get text question template and compile it.\r\n          let startRangeLabel1 = \"\";\r\n          let endRangeLabel1 = \"\";\r\n          let displayLegend3 = LanguageTextFilter.translateDisplayLegend(\r\n            this,\r\n            question\r\n          );\r\n\r\n          if (displayLegend3) {\r\n            if (displayLegend3.length > 0) {\r\n              startRangeLabel1 = displayLegend3[0] ? displayLegend3[0] : null;\r\n              endRangeLabel1 = displayLegend3[1] ? displayLegend3[1] : null;\r\n            }\r\n          }\r\n          startRangeLabel1 = startRangeLabel1 == null ? \"\" : startRangeLabel1;\r\n          endRangeLabel1 = endRangeLabel1 == null ? \"\" : endRangeLabel1;\r\n          questionTemplate = templates.question_star_5;\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{question}}\",\r\n            ConditionalTextFilter.filterText(this, question)\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            /{{questionId}}/g,\r\n            \"id\" + question.id\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{isRequired}}\",\r\n            question.isRequired ? \"true\" : \"false\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{requiredLabel}}\",\r\n            question.isRequired ? \"*\" : \"\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{leftLabel}}\",\r\n            startRangeLabel1\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{rightLabel}}\",\r\n            endRangeLabel1\r\n          );\r\n          break;\r\n      }\r\n    }\r\n    return questionTemplate;\r\n  }\r\n\r\n  questionCompare(a: any, b: any) {\r\n    return a.sequence - b.sequence;\r\n  }\r\n\r\n  getAnswerTypeFromDisplayType(displayType: string) {\r\n    // console.log('question type',displayType);\r\n    let type: string;\r\n    switch (displayType) {\r\n      case \"Slider\":\r\n        type = \"number\";\r\n        break;\r\n      case \"Scale\":\r\n        type = \"number\";\r\n        break;\r\n      case \"Text\":\r\n        type = \"text\";\r\n        break;\r\n      case \"Number\":\r\n        type = \"number\";\r\n        break;\r\n      case \"MultilineText\":\r\n        type = \"text\";\r\n        break;\r\n      case \"MultiSelect\":\r\n        type = \"text\";\r\n        break;\r\n      case \"Select\":\r\n        type = \"text\";\r\n        break;\r\n      case \"Dropdown\":\r\n        type = \"text\";\r\n        break;\r\n      case \"Smile-5\":\r\n        type = \"number\";\r\n        break;\r\n      case \"Star-5\":\r\n        type = \"number\";\r\n        break;\r\n      case \"Date\":\r\n        type = \"number\";\r\n        break;\r\n      default:\r\n        type = \"text\";\r\n        break;\r\n    }\r\n\r\n    return type;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * filterQuestions - filters questions so that we don't display the one which satisifes any of the following condition\r\n   *  isRetired = true\r\n   *  statffFill = true\r\n   *  apiFill = true\r\n   *  preFill = true\r\n   *\r\n   * @param {any} question\r\n   * @returns\r\n   * @memberof Survey\r\n   */\r\n  filterQuestions() {\r\n    let self = this;\r\n    for (let question of this.questions) {\r\n      if (!question.isRetired) {\r\n        //filter out prefill question only if it is filled?.\r\n        // if(!this.isQuestionFilled(question)){\r\n        if (this.isPrefillTags(question)) {\r\n          self.ccsdk.debug\r\n            ? console.log(\"prefillTags\", this.prefillResponses)\r\n            : \"\";\r\n          continue;\r\n        }\r\n        if (this.isPrefillNote(question)) {\r\n          self.ccsdk.debug ? console.log(this.prefillResponses) : \"\";\r\n          continue;\r\n        }\r\n        if (this.isPrefillDirect(question)) {\r\n          self.ccsdk.debug ? console.log(this.prefillResponses) : \"\";\r\n          continue;\r\n        }\r\n        if (!this.isPrefillQuestion(question)) {\r\n          if (\r\n            question.conditionalFilter === null ||\r\n            (question.conditionalFilter != null &&\r\n              (question.conditionalFilter.filterquestions == null ||\r\n                question.conditionalFilter.filterquestions.length == 0))\r\n          ) {\r\n            //check supported display types\r\n            let supportedDisplayTypes =\r\n              \"Slider, Scale, Text, Number, MultilineText, MultiSelect, Smile-5, Star-5, Date\";\r\n            if (supportedDisplayTypes.indexOf(question.displayType) > -1) {\r\n              this.questionsToDisplay.push(question);\r\n            }\r\n          } else {\r\n            //if conditions full filled, fill it in questionsToDisplay\r\n            if (ConditionalFlowFilter.filterQuestion(this, question)) {\r\n              //auto does that\r\n            } else {\r\n              this.conditionalQuestions.push(question);\r\n            }\r\n          }\r\n        } else {\r\n          this.fillPrefillWithTags(question);\r\n          this.fillPrefillWithNote(question);\r\n          ConditionalFlowFilter.filterQuestion(this, question);\r\n        }\r\n        // }\r\n      }\r\n    }\r\n    //re condition questions.\r\n    for (let question of this.questions) {\r\n      // console.log(this.questionsToDisplay);\r\n      ConditionalFlowFilter.filterQuestion(this, question);\r\n    }\r\n\r\n    // console.log(this.conditionalQuestions);\r\n  }\r\n\r\n  isPrefillTags(question: any) {\r\n    if (\r\n      typeof question.questionTags !== \"undefined\" &&\r\n      question.questionTags &&\r\n      question.questionTags.length > 0\r\n    ) {\r\n      for (let tag of question.questionTags) {\r\n        switch (tag.toLowerCase()) {\r\n          case \"screensize\":\r\n            //add size to prefill array\r\n            this.fillPrefillQuestion(\r\n              question.id,\r\n              \"Width:\" +\r\n              window.innerWidth +\r\n              \"px / Height:\" +\r\n              window.innerHeight +\r\n              \"px\",\r\n              \"text\"\r\n            );\r\n            return true;\r\n          // Token prefill\r\n          case 'cc_token':\r\n            this.fillPrefillQuestion(\r\n              question.id,\r\n              this.surveyToken,\r\n              'text'\r\n            );\r\n            return true;\r\n          // Channel prefill\r\n          case 'cc_channel':\r\n            this.fillPrefillQuestion(\r\n              question.id,\r\n              'MicroSurvey',\r\n              'text'\r\n            );\r\n            return true;\r\n          // currentURL\r\n          case 'cc_currenturl':\r\n            this.fillPrefillQuestion(\r\n              question.id,\r\n              window.location.href,\r\n              'text'\r\n            );\r\n            return true;\r\n          // partial response\r\n          case 'cc_partialresponseid':\r\n            this.fillPrefillQuestion(\r\n              question.id,\r\n              this.surveyData.partialResponseId,\r\n              'text'\r\n            );\r\n            return true;\r\n          default:\r\n            if (typeof this.prefillWithTags[tag.toLowerCase()] != \"undefined\") {\r\n              let type = this.getAnswerTypeFromDisplayType(\r\n                question.displayType\r\n              );\r\n              this.fillPrefillQuestion(\r\n                question.id,\r\n                this.prefillWithTags[tag.toLowerCase()],\r\n                type\r\n              );\r\n              return true;\r\n            }\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  isPrefillNote(question: any) {\r\n    if (\r\n      typeof question.note !== \"undefined\" &&\r\n      question.note != null &&\r\n      question.note.length > 0 &&\r\n      this.prefillWithNote[question.note.toLowerCase()]\r\n    ) {\r\n      let type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n      this.fillPrefillQuestion(\r\n        question.id,\r\n        this.prefillWithNote[question.note.toLowerCase()],\r\n        type\r\n      );\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  isPrefillDirect(question: any) {\r\n    if (typeof question !== \"undefined\" && this.prefillDirect[question.id]) {\r\n      let type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n      this.fillPrefillQuestion(\r\n        question.id,\r\n        this.prefillDirect[question.id],\r\n        type\r\n      );\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  fillPrefillWithTags(question: any) {\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"fillprefillwithtags\", this.prefillWithTags)\r\n      : \"\";\r\n    if (\r\n      typeof question.questionTags !== \"undefined\" &&\r\n      question.questionTags.length > 0\r\n    ) {\r\n      for (let tag of question.questionTags) {\r\n        (window as any).ccsdkDebug\r\n          ? console.log(\"fillprefillwithtags\", tag)\r\n          : \"\";\r\n        if (typeof this.prefillWithTags[tag.toLowerCase()] !== \"undefined\") {\r\n          (window as any).ccsdkDebug\r\n            ? console.log(\r\n              \"prefil \",\r\n              tag.toLowerCase(),\r\n              this.prefillWithTags[tag.toLowerCase()],\r\n              this.prefillWithTags\r\n            )\r\n            : \"\";\r\n\r\n          let type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n          this.fillPrefillQuestion(\r\n            question.id,\r\n            this.prefillWithTags[tag.toLowerCase()],\r\n            type\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  fillPrefillWithNote(question: any) {\r\n    if (\r\n      typeof question.note !== \"undefined\" &&\r\n      question.note != null &&\r\n      question.note.length > 0\r\n    ) {\r\n      if (\r\n        typeof this.prefillWithNote[question.note.toLowerCase()] !== \"undefined\"\r\n      ) {\r\n        let type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n        this.fillPrefillQuestion(\r\n          question.id,\r\n          this.prefillWithNote[question.note.toLowerCase()],\r\n          type\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  getConditionalSurveyQuestions(): any {\r\n    return this.conditionalQuestions;\r\n  }\r\n\r\n  isPrefillQuestion(question: any) {\r\n    if (question.apiFill == true) {\r\n      return true;\r\n    }\r\n    if (question.staffFill == true) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  isQuestionFilled(question: any) {\r\n    for (let response of this.prefillResponses) {\r\n      if (response.questionId == question.questionId) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  removePrevListener(id: string): boolean {\r\n    for (let listener of this.domListeners) {\r\n      if (listener.id == id) {\r\n        let index = this.domListeners.indexOf(listener);\r\n        (window as any).ccsdkDebug ? console.log(\"removing listener\", id) : \"\";\r\n        (window as any).ccsdkDebug\r\n          ? console.log(\"removing listener index\", index)\r\n          : \"\";\r\n        this.util.removeListener(\r\n          document.querySelectorAll(\"body\")[0],\r\n          listener.type,\r\n          listener.internalHandler\r\n        );\r\n        if (index > -1) {\r\n          this.domListeners.splice(index, 1);\r\n        }\r\n        (window as any).ccsdkDebug ? console.log(this.domListeners) : \"\";\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  destroySurvey() {\r\n    let self: SurveyHandler = this;\r\n    document.addEventListener(\"ccclose\", this.destroySurveyCb);\r\n  }\r\n\r\n  destroy() {\r\n    let surveyContainer = this.ccsdk.dom.getSurveyContainer(this.surveyToken);\r\n    let welcomeContainer = this.ccsdk.dom.getWelcomeContainer(this.surveyToken);\r\n    if (typeof surveyContainer != \"undefined\") {\r\n      this.util.remove(surveyContainer);\r\n    }\r\n    if (typeof welcomeContainer != \"undefined\") {\r\n      this.util.remove(welcomeContainer);\r\n    }\r\n    document.removeEventListener(\"ccclose\", this.destroySurveyCb);\r\n    document.removeEventListener(\"ccdone\", this.displayThankYouCb);\r\n    document.removeEventListener(\"q-answered\", this.acceptAnswersCb);\r\n    (window as any).globalSurveyRunning = false;\r\n    // let bodyElement = <HTMLElement>document.\r\n    //   getElementsByTagName( \"body\" )[ 0 ];\r\n    // this.util.removeClass( bodyElement, \"blurr\" );\r\n  }\r\n}\r\n\r\nexport { SurveyHandler };\r\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/rtl-css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./main.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../node_modules/rtl-css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./main.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../node_modules/rtl-css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./main.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../node_modules/rtl-css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, typeof document !== 'undefined' && document.getElementsByTagName('html')[0].getAttribute('dir') === 'rtl' ? \".cc-sdk ul{padding-right:0;list-style-type:none;margin:0}.cc-sdk a,.cc-sdk a:focus,.cc-sdk a:hover{text-decoration:none;color:inherit}.cc-sdk *,.cc-sdk :after,.cc-sdk :before{box-sizing:border-box}.cc-sdk p{color:inherit;margin:0}.cc-sdk map area{outline:0;cursor:pointer}.cc-sdk map area.selected{outline:0;outline-color:#0a2135;outline-width:0;outline-style:solid}.cc-sdk map area:hover{outline:1}.cc-sdk.cc-popup-container{background:#fff;box-shadow:0 0 4px 5px rgba(0,0,0,.05);font-family:open sans,sans-serif;position:fixed;text-align:center;max-width:500px;max-height:500px;z-index:1111}@media (min-width:768px){.cc-sdk.cc-popup-container{padding:10px}}.cc-sdk.cc-popup-container.bottom{margin-bottom:9px}.cc-sdk.cc-popup-container.top{margin-top:9px}.cc-sdk #cc-thankyou-container .cc-question-container__text p{word-break:break-word}.cc-sdk #cc-thankyou-container .cc-question-container__text,.cc-sdk #cc-thankyou-container .cc-question-container__text p{width:400px;max-width:none;font-size:17px;color:#424242}.cc-sdk .cc-message-box{position:relative;z-index:11}.cc-sdk .cc-message-box__text{color:#424242;font-size:14px;font-weight:600;margin:0;padding:29px 14px 20px;vertical-align:middle}.cc-sdk .cc-message-box__btn{background:#fdaf19;border-radius:100px;display:inline-block;font-size:15px;font-weight:700;height:32px;padding:6px 0;width:124px;text-align:center}.cc-sdk.cc-popup-container .cc-popup-container__close{cursor:pointer;margin:4px;position:absolute;left:0;top:0;z-index:111}.cc-sdk .cc-popup-container-2{height:144px;position:fixed;width:100%;z-index:1111}.cc-sdk .cc-popup-container-2.bottom{bottom:0}.cc-sdk .cc-popup-container-2__icons{cursor:pointer;padding:8px;position:absolute;top:0;z-index:111}.cc-sdk .top.cc-popup-container-2 .cc-popup-container-2__icons{padding-top:15px}.cc-sdk .cc-popup-container-2__icons.cc-right-icon{left:0}.cc-sdk .cc-popup-container-2__icons.cc-left-icon{right:0}.cc-sdk .cc-popup-container__back{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);display:inline-block;width:21px;height:21px}.cc-sdk .cc-question-container{padding:20px 20px 25px;position:absolute;text-align:center;width:100%;z-index:11;top:0;right:0}.cc-sdk .cc-question-container__text{color:#424242;display:inline-block;font-size:15px;font-weight:600;max-width:230px;padding:8px 0;text-align:center;vertical-align:middle;width:20%;position:relative}.cc-sdk .cc-question-container__text p{word-break:break-word}.cc-sdk .cc-question-container[data-type=csat] .cc-question-container__text{width:11em}.cc-sdk .cc-question-container[data-type=csat] .cc-question-container__list{width:64vw}.cc-sdk .cc-question-container__required,.cc-sdk .cc-question-container__validation{position:absolute;top:-14px;font-size:11px;right:0;width:100%;left:0;font-weight:400;color:#c1272d;display:none}.cc-sdk .cc-question-container__required-label{display:inline-block;position:relative;top:-2px;right:-2px}.cc-sdk .cc-question-container__content{display:inline-block;max-width:78%;vertical-align:middle;width:auto}.cc-sdk .cc-question-container__list li{display:inline-block;padding-right:29px;vertical-align:middle}.cc-sdk .cc-question-container__list li span{display:table-cell;font-size:15px;padding-right:15px;text-align:right;vertical-align:middle;width:125px}.cc-sdk .cc-question-container__list li input{vertical-align:middle}.cc-sdk .cc-question-container:before{content:\\\"\\\";display:inline-block;height:100%;margin-left:-4px;vertical-align:middle}.cc-sdk .cc-question-container{height:100%;vertical-align:middle}.cc-sdk .cc-questions-container{height:100%}.cc-sdk p.cc-thankyou-powered{font-size:13px!important;color:#404040!important;font-style:italic;margin-top:4px}.cc-sdk p.cc-thankyou-powered.no-branding{display:none}.cc-sdk .cc-thankyou-powered .cc-thankyou-logo{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/cc-thankyou-logo.svg\\\");background-size:cover;margin-left:8px;display:inline-block;width:16px;height:16px}.cc-sdk .multiline-box{background:#fff;border-radius:2px;border:1px solid #6d6d6d;font-family:Open Sans;font-size:15px;height:70px;margin:0 50px 0 0;min-width:600px;padding:2px 5px;resize:none}.cc-sdk .multiline-box:focus{outline:0}.cc-sdk .detail-box .cc-question-container__text p{font-size:13px;font-weight:700}.cc-sdk .detail-box .cc-question-container__text span{display:inline-block;font-size:15px;font-weight:400}.cc-sdk .detail-box .cc-question-container__text{height:56px}.cc-sdk .detail-box[data-type=singleline] .cc-question-container__text{margin-left:20px}.cc-sdk .detail-box .cc-question-container__content .cc-sdk-form-control,.cc-sdk .single-line .cc-question-container__content .cc-sdk-form-control{background:transparent;border:none;border-bottom:1px solid #6d6d6d;font-family:open sans;font-size:15px;line-height:26px;outline:0;width:300px;margin-right:70px}.cc-sdk .d-star-box.detail-box .cc-question-container__text{height:92px}.cc-sdk .hl.dropdown{background-image:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/arrow-down.black.svg\\\");background-position:3%;background-repeat:no-repeat;border-bottom:1px solid #6d6d6d;display:inline-block;padding:5px;position:relative;text-align:right;width:300px}.cc-sdk .drop-cc-question-container .cc-question-container__text{margin-left:20px}.cc-sdk .cc-sdk-form-control:focus{border-color:#fcaf18}.cc-sdk .detail-box .cc-question-container__content{padding-right:0}.cc-sdk .cc-big-list-container .cc-question-container__list{display:table;width:100%}.cc-sdk .cc-big-list-container .cc-question-container__list li{display:table-cell;vertical-align:middle}.cc-sdk .cc-thankyou-container{width:100%!important}.cc-sdk .submit-icon{direction:rtl;position:absolute;left:0;top:0;bottom:0;margin:auto 0;z-index:11;margin-left:75px;font-size:16px;cursor:pointer;width:47px;height:47px}@media (min-width:1000px){.cc-sdk .cc-big-list-container .cc-question-container__list li span label{overflow:hidden;max-height:100px;display:block}}@media (min-width:769px) and (max-width:875px){.cc-sdk .cc-question-container__list li{padding-right:0!important}}@media (min-width:769px) and (max-width:1024px){.cc-sdk .cc-popup-container-2{height:200px}.cc-sdk .cc-big-list-container .cc-question-container__list,.cc-sdk .cc-question-container__list{text-align:right}.cc-sdk .cc-big-list-container .cc-question-container__list li,.cc-sdk .cc-question-container__list li{display:inline-block;margin-bottom:15px;vertical-align:middle;width:49%}.cc-sdk .cc-question-container__content{display:inline-block;width:45%}.cc-sdk .multiline-box{min-width:100%;margin:0}.cc-sdk .option-smile-box img,.cc-sdk .option-star-box img{margin-left:11px!important}.cc-sdk .cc-thankyou-container .cc-question-container__text,.cc-sdk .cc-thankyou-container .cc-question-container__text p{width:100%!important;text-align:center;margin:0!important;padding:0;line-height:normal;height:auto}.cc-sdk .cc-thankyou-container .cc-question-container__text{max-width:98%}}@media (min-width:1000px){.cc-sdk .cc-question-container__text p{max-height:100px;overflow:hidden;max-width:140ch}.cc-sdk .cc-question-container__text p.ellipsis:after{content:\\\"...\\\";text-align:left;bottom:9px;left:-3px;width:12px;display:block;position:absolute;height:1.2em}}@media (min-width:769px) and (max-width:992px){.cc-sdk .cc-question-container{width:100%;margin:auto}.cc-sdk .cc-question-container__text{width:24%;padding-left:20px}.cc-sdk .cc-question-container__text p{max-height:110px;overflow:hidden}.cc-sdk .cc-question-container__content.rating-color{margin-right:0}.cc-sdk .submit-icon{margin-left:40px!important}.cc-sdk .cc-question-container__content.rating-color{margin-right:0!important}.cc-sdk .cc-question-container__content{width:50%!important}}@media (max-width:768px){.cc-sdk .cc-survey-container,.cc-sdk .cc-survey-content{height:100%}.cc-sdk .cc-popup-container-2{bottom:auto;height:100%;top:0}.cc-sdk .cc-popup-container-2__icons.cc-right-icon{right:auto;left:0;padding:0}.cc-sdk .cc-popup-container-2__icons.cc-left-icon{right:0;left:auto;padding:0}.cc-sdk .cc-big-list-container .cc-question-container__list li,.cc-sdk[dir=rtl] .cc-big-list-container .cc-question-container__list li{display:block}.cc-sdk .radio-toggle--more-option li span{width:84%!important;padding-right:25px!important}.cc-sdk .radio-toggle--more-option li{padding-left:0!important;display:block!important;padding-top:10px}.cc-sdk .detail-box .cc-question-container__content{padding-right:0}.cc-sdk .cc-question-container{bottom:75px;height:auto;right:0;padding:40px 20px;position:absolute;text-align:right;top:auto;width:100%}.cc-sdk .cc-question-container__text{font-size:18px;margin-bottom:20px;max-width:400px;text-align:right;width:100%}.cc-sdk .cc-question-container__content{display:block;max-width:100%;width:100%}.cc-sdk .cc-question-container__list label{display:block}.cc-sdk .cc-question-container__list li span{width:auto;padding-right:15px}.cc-sdk .cc-question-container__list li{padding-right:0;margin-bottom:10px;display:block}.cc-sdk .cc-popup-container-2__icons{margin:20px}.cc-sdk .cc-popup-container-2__icons.left-icon{right:auto;left:0}.cc-sdk .cc-popup-container-2__icons.right-icon{left:auto;right:0}.cc-sdk .cc-popup-container__close{width:27px}.cc-sdk .cc-question-container__content.rating-color{margin-right:0!important}.cc-sdk .cc-question-container[data-type=nps] .cc-question-container__content,.cc-sdk .cc-question-container[data-type=scale] .cc-question-container__content{width:100%!important}.cc-sdk .multiline-box{height:150px;margin:0;min-width:100%;width:100%}.cc-sdk .detail-box .cc-question-container__content .cc-sdk-form-control,.cc-sdk .hl.dropdown{width:100%}.cc-sdk .detail-box .cc-question-container__text p{font-size:18px}.cc-sdk .mobile-detail-box .cc-question-container__text{height:auto}.cc-sdk .cc-question-container__text p{max-height:auto}.cc-sdk .welcome-box .cc-question-container__text p{color:#fff}.cc-sdk .cc-questions-container{height:100%;position:relative}.cc-sdk .cc-message-box__btn{margin-right:20px}}@media (max-width:768px){.cc-sdk .detail-box .cc-question-container__content .cc-sdk-form-control,.cc-sdk .single-line .cc-question-container__content .cc-sdk-form-control{margin-right:0}.cc-sdk .submit-icon{position:absolute;right:20px;top:auto;bottom:30px;padding-left:0}.cc-sdk.cc-popup-container{position:fixed;bottom:0;right:0;left:0;margin:0!important;width:100%;height:13em;max-width:100%;max-height:100%;text-align:right;background:transparent}.cc-sdk.cc-popup-container .cc-message-box{position:absolute;bottom:20%}.cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text{font-size:20px}.cc-sdk.cc-popup-container .cc-message-box .submit-icon{position:absolute;bottom:-100%;top:auto;right:0;margin:0 14px}.cc-sdk.cc-popup-container .cc-popup-container__close{margin:20px;left:0;top:0}.cc-sdk.cc-popup-container__back{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);display:inline-block;width:27px;height:27px;background-size:100%}.cc-sdk .cc-thankyou-container .cc-question-container__text,.cc-sdk .cc-thankyou-container .cc-question-container__text p{width:100%!important;text-align:center;margin:0!important;padding:0;line-height:normal;height:auto}.cc-sdk .cc-thankyou-container .cc-question-container__text{max-width:98%}}.date-s,.date-y{display:inline-block;margin:0 12px!important;width:80px!important}.date-error{color:red;font-style:italic;visibility:hidden;margin-top:12px}.date-error.show-error{visibility:visible}[dir=rtl].cc-sdk ul{padding-left:0}[dir=rtl].cc-sdk.cc-popup-container .cc-popup-container__close{left:auto;right:0;top:0}[dir=rtl].cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text{text-align:left}[dir=rtl].cc-sdk .cc-popup-container__back{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_rtl_.svg)}[dir=rtl].cc-sdk .cc-popup-container-2__icons.cc-right-icon{left:auto;right:0}[dir=rtl].cc-sdk .cc-popup-container-2__icons.cc-left-icon{left:0;right:auto}[dir=rtl].cc-sdk.cc-question-container{margin-right:0;margin-left:0;left:0;right:auto}[dir=rtl].cc-sdk .cc-question-container__required,[dir=rtl].cc-sdk .cc-question-container__validation{left:0;right:auto}[dir=rtl].cc-sdk .cc-question-container__required-label{top:-2px;left:-2px;right:auto}[dir=rtl].cc-sdk .cc-question-container__list li{display:inline-block;padding-left:15px!important;padding-right:15px!important;vertical-align:middle}[dir=rtl].cc-sdk .cc-question-container[data-type=checkbox] .cc-question-container__list li{padding-left:0!important}[dir=rtl].cc-sdk .cc-question-container__list li span{padding-left:15px;padding-right:0;text-align:left}[dir=rtl].cc-sdk .cc-question-container:before{margin-right:-4px;margin-left:0}[dir=rtl].cc-sdk .multiline-box{margin:0 0 0 50px}[dir=rtl].cc-sdk .hl.dropdown{background-position:3%;text-align:left}[dir=rtl].cc-sdk .drop-cc-question-container .cc-question-container__text{margin-right:20px;margin-left:0}[dir=rtl].cc-sdk .detail-box .cc-question-container__content{padding-left:0;padding-right:0}[dir=rtl].cc-sdk .cc-question-container__content{text-align:left}@media (min-width:769px) and (max-width:1024px){[dir=rtl].cc-sdk .cc-big-list-container .cc-question-container__list,[dir=rtl].cc-sdk .cc-question-container__list{text-align:left}[dir=rtl].cc-sdk .multiline-box{margin:0}}@media (min-width:769px) and (max-width:992px){[dir=rtl].cc-sdk .cc-question-container__text{padding-right:20px;padding-left:0}[dir=rtl].cc-sdk .cc-question-container__content.rating-color{margin-right:0;margin-left:0}}@media (max-width:768px){[dir=rtl].cc-sdk .cc-popup-container-2__icons.cc-right-icon{right:0;left:auto}[dir=rtl].cc-sdk .cc-popup-container-2__icons.cc-left-icon{right:auto;left:0}[dir=rtl].cc-sdk .radio-toggle--more-option li span{padding-left:25px!important;padding-right:0!important}[dir=rtl].cc-sdk .radio-toggle--more-option li{padding-left:0!important;padding-right:0!important}[dir=rtl].cc-sdk .detail-box .cc-question-container__content{padding-right:0;padding-left:0}[dir=rtl].cc-sdk .cc-question-container{right:auto;left:0}[dir=rtl].cc-sdk .multiline-box{margin:0}[dir=rtl].cc-sdk .cc-question-container__text{text-align:left;width:100%;margin-left:5px;max-width:100%}[dir=rtl].cc-sdk .cc-question-container__list li span{padding-left:15px;padding-right:0}[dir=rtl].cc-sdk .cc-question-container__list li{padding-right:0;padding-left:0}[dir=rtl].cc-sdk .cc-popup-container-2__icons.left-icon{right:0;left:auto}[dir=rtl].cc-sdk .cc-popup-container-2__icons.right-icon{left:0;right:auto}[dir=rtl].cc-sdk .cc-question-container__content.rating-color{margin-right:0!important;margin-left:0!important}}.cc-sdk .option-number-item{color:#fff;float:right;font-size:13px;height:38px;box-sizing:border-box;padding-top:10px;text-align:center;width:8.5%;margin-right:1px;margin-left:0;cursor:pointer}.cc-sdk .option-number-item.option-zero{background:#853838}.cc-sdk .option-number-item.option-zero.selected,.cc-sdk .option-number-item.option-zero:hover{background:#572526}.cc-sdk .option-number-item.option-one{background:#9e4343}.cc-sdk .option-number-item.option-one.selected,.cc-sdk .option-number-item.option-one:hover{background:#642728}.cc-sdk .option-number-item.option-two{background:#c14d4d}.cc-sdk .option-number-item.option-two.selected,.cc-sdk .option-number-item.option-two:hover{background:#712827}.cc-sdk .option-number-item.option-three{background:#d94d4d}.cc-sdk .option-number-item.option-three.selected,.cc-sdk .option-number-item.option-three:hover{background:#7c2828}.cc-sdk .option-number-item.option-four{background:#ee4d4d}.cc-sdk .option-number-item.option-four.selected,.cc-sdk .option-number-item.option-four:hover{background:#852828}.cc-sdk .option-number-item.option-five{background:#ff4d4d}.cc-sdk .option-number-item.option-five.selected,.cc-sdk .option-number-item.option-five:hover{background:#844828}.cc-sdk .option-number-item.option-six{background:#ff8c4d}.cc-sdk .option-number-item.option-six.selected,.cc-sdk .option-number-item.option-six:hover{background:#844828}.cc-sdk .option-number-item.option-seven{background:#ffc74d}.cc-sdk .option-number-item.option-seven.selected,.cc-sdk .option-number-item.option-seven:hover{background:#856728}.cc-sdk .option-number-item.option-eight{background:#f5eb4d}.cc-sdk .option-number-item.option-eight.selected,.cc-sdk .option-number-item.option-eight:hover{background:#7f7a28}.cc-sdk .option-number-item.option-nine{background:#73ca81}.cc-sdk .option-number-item.option-nine.selected,.cc-sdk .option-number-item.option-nine:hover{background:#3b6942}.cc-sdk .option-number-item.option-ten{background:#4db47c}.cc-sdk .option-number-item.option-ten.selected,.cc-sdk .option-number-item.option-ten:hover{background:#285e40}.cc-sdk .option-number-item.option-7-scale-1,.cc-sdk .option-number-item.option-7-scale-2,.cc-sdk .option-number-item.option-7-scale-3{background:#ed534f}.cc-sdk .option-number-item.option-7-scale-4,.cc-sdk .option-number-item.option-7-scale-5{background:#ffbc00}.cc-sdk .option-number-item.option-7-scale-6,.cc-sdk .option-number-item.option-7-scale-7{background:#4db47c}.cc-sdk .option-number-item.option-5-scale-1,.cc-sdk .option-number-item.option-5-scale-2{background:#ed534f}.cc-sdk .option-number-item.option-5-scale-3{background:#ffbc00}.cc-sdk .option-number-item.option-5-scale-4,.cc-sdk .option-number-item.option-5-scale-5{background:#4db47c}.cc-sdk .cc-question-container[data-type=nps] .option-number-item{width:calc(9.09% - 1px)}.cc-sdk .cc-question-container[data-type=scale].scale-image-container .option-number-item{width:8.4%}.cc-sdk .cc-question-container__content.rating-color{margin-right:74px}.cc-sdk .option-left-rating-text,.cc-sdk .option-mid-rating-text,.cc-sdk .option-midnps-rating-text,.cc-sdk .option-right-rating-text{color:#424242;font-size:13px;right:0;position:absolute}.cc-sdk .option-midnps-rating-text{right:calc(7 * 9.09% - 1px)}.cc-sdk .option-left-rating-text-small-container{max-width:57px;text-align:right;max-height:37px;overflow:hidden}.cc-sdk .option-mid-rating-text-small-container,.cc-sdk .option-right-rating-text-small-container{max-width:57px;text-align:left;max-height:37px;overflow:hidden}.cc-sdk .option-left-rating-text-small-container-smile{width:40%;text-align:right;max-height:37px;overflow:hidden;bottom:auto!important;top:57px}.cc-sdk .option-right-rating-text-small-container-smile{width:40%;text-align:left;max-height:37px;overflow:hidden;bottom:auto!important;top:57px}.cc-sdk .cc-question-container[data-type=smile] .option-left-rating-text,.cc-sdk .cc-question-container[data-type=star] .option-left-rating-text{right:4px;width:40%;text-align:right}.cc-sdk .option-right-rating-text{right:auto;left:0}.cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,.cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{text-align:left;width:40%}.cc-sdk .cc-question-container[data-type=scale] .option-number-item{width:38px;margin:0 .5px;cursor:pointer;display:inline-block;float:none}.cc-sdk .cc-question-container[data-type=scale] .cc-question-container__list{display:inline-block;width:auto;position:relative}.cc-sdk .cc-question-container[data-type=scale].scale-image-container .cc-question-container__list{width:100%}.cc-sdk .rating-color{position:relative}.cc-sdk .option-smile-box,.cc-sdk .option-star-box{height:60px;margin-left:29px;width:60px;cursor:pointer;box-sizing:border-box;border:4px solid transparent;border-radius:50%;display:inline-block;background-size:100%}.cc-sdk:not([dir=rtl]) .option-smile-box:nth-child(5),.cc-sdk:not([dir=rtl]) .option-star-box:nth-child(5),.cc-sdk[dir=rtl] .option-smile-box:first-child,.cc-sdk[dir=rtl] .option-star-box:first-child{margin-left:0}.cc-sdk .option-smile-box.cc-one{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-two{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-three{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-four{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-five{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-one.selected,.cc-sdk .option-smile-box.cc-one:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-two.selected,.cc-sdk .option-smile-box.cc-two:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-three.selected,.cc-sdk .option-smile-box.cc-three:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-four.selected,.cc-sdk .option-smile-box.cc-four:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-five.selected,.cc-sdk .option-smile-box.cc-five:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .cc-csat.cc-question-container__content.rating-color{margin-right:45px}.cc-sdk .option-csat.option-smile-box,.cc-sdk .option-csat.option-smile-box.selected,.cc-sdk .option-csat.option-smile-box:hover{background-size:25px;background-position:18px}.cc-sdk .option-csat{height:30px;margin-left:68px;width:30px;padding-right:50px;height:45px;margin-left:0;width:auto;padding-right:0;font-size:14px;vertical-align:middle;display:inline-block;margin-left:13px}.cc-sdk .option-csat span{display:inline-block;vertical-align:top;font-size:12px;padding-right:25px;position:relative;text-align:right;width:100%}.cc-sdk .option-csat .cc-checkbox label{pointer-events:none}.cc-sdk .option-star-box{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-star-box.selected,.cc-sdk .option-star-box:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star_selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .cc-question-container[data-type=slider] .option-left-rating-text{right:4px;width:40%;text-align:right}.cc-sdk .cc-question-container[data-type=slider] .option-right-rating-text{width:40%;text-align:left}.cc-sdk .cc-question-container[data-type=smile] .cc-question-container__list,.cc-sdk .cc-question-container[data-type=star] .cc-question-container__list{position:relative;width:auto;display:inline-block}.cc-sdk .circle-image{margin:auto;width:253px;overflow:hidden;height:240px;position:relative}.cc-sdk .circle-image-scale-010-neutral{width:242px;overflow:hidden;height:230px;margin:auto}.cc-sdk .cc-nps-selected-rating{font-size:100px;display:inline-block;position:absolute;top:0;right:0;line-height:100px;left:0;margin:auto;bottom:0;width:110px;height:100px;text-align:center;font-weight:100;color:#bbb}.cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,.cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{left:4px}.cc-sdk .option-number-item.option-scale{background:#4db47c}.cc-sdk .option-number-item.option-scale.selected,.cc-sdk .option-number-item.option-scale:hover{background:#712827}.cc-sdk .cc-nps-image{cursor:pointer;position:relative;right:0}.cc-sdk .legend-container{position:relative}@media (min-width:769px) and (max-width:992px){.cc-sdk .option-smile-box,.cc-sdk .option-star-box{width:50px;height:50px;margin-left:10px}.cc-sdk .option-csat.option-smile-box,.cc-sdk .option-csat.option-smile-box.selected,.cc-sdk .option-csat.option-smile-box:hover{display:inline-block;width:168px;background-position:48px}.cc-sdk .option-csat.option-smile-box.selected span,.cc-sdk .option-csat.option-smile-box:hover span,.cc-sdk .option-csat.option-smile-box span{padding-right:40px}}@media screen and (min-width:992px){.cc-sdk span.option-csat.option-smile-box,.cc-sdk span.option-csat.option-smile-box.selected,.cc-sdk span.option-csat.option-smile-box:hover{background-position:44px}.cc-sdk span.option-csat.option-smile-box span{padding-right:40px}}@media (max-width:768px){.cc-sdk .option-smile-box,.cc-sdk .option-star-box{display:inline-block;margin-left:3px}.cc-sdk .option-csat.option-smile-box,.cc-sdk .option-csat.option-smile-box.selected,.cc-sdk .option-csat.option-smile-box:hover{display:block;background-size:40px;background-position:45px}.cc-sdk .option-csat.option-smile-box{height:65px;width:100%}.cc-sdk .option-csat.option-smile-box span{font-size:15px;padding-right:40px}.cc-sdk .option-csat.option-smile-box .cc-checkbox{top:calc(50% - 12.5px);height:57px}.cc-sdk .option-csat.option-smile-box .cc-checkbox.cc-radio label:before,.cc-sdk .option-csat.option-smile-box .cc-checkbox input[type=radio]:checked+label:after{width:25px;height:25px}.cc-sdk .option-number-item{color:#fff;float:right;font-size:15px;height:35px;box-sizing:border-box;margin-left:1px;padding-top:7px;text-align:center;width:38px;cursor:pointer;vertical-align:middle}.cc-sdk .cc-question-container[data-type=scale]{bottom:106px}.cc-sdk .cc-question-container[data-type=scale] .option-left-rating-text,.cc-sdk .cc-question-container[data-type=scale] .option-mid-rating-text,.cc-sdk .cc-question-container[data-type=scale] .option-right-rating-text{width:auto}.cc-sdk .cc-question-container[data-type=scale] .option-right-rating-text{text-align:left}.cc-sdk .option-smile-box img,.cc-sdk .option-star-box img{padding-left:5px;margin-left:0}.cc-sdk .cc-question-container[data-type=nps] .cc-question-container__content{width:100%!important}.cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,.cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{left:10px}.cc-sdk .cc-question-container[data-type=csat] .cc-question-container__list li,.cc-sdk .cc-question-container[data-type=scale] .cc-question-container__list{width:100%}}@media (max-width:381px){.cc-sdk .option-smile-box,.cc-sdk .option-star-box{display:inline-block;margin-left:0;height:50px;width:50px}.cc-sdk .option-smile-box img,.cc-sdk .option-star-box img{padding-left:5px;margin-left:0}}@media screen and (max-width:768px){.cc-sdk .cc-question-container[data-type=scale] span.radial-legend-right,.cc-sdk .radial-legend-right{text-align:right;width:35%;left:0}.cc-sdk .radial-legend-mid{width:35%;text-align:center;right:0;left:0;display:none}.cc-sdk .radial-legend-left{width:35%;text-align:left;right:0}}[dir=rtl].cc-sdk .cc-question-container[data-type=csat] .cc-question-container__content.rating-color{margin-left:45px;margin-right:0}[dir=rtl].cc-sdk .cc-question-container[data-type=csat] .cc-checkbox input[type=radio]{margin-left:0;opacity:0;outline:0}[dir=rtl].cc-sdk .option-number-item{margin-left:1px;margin-right:0;float:left}[dir=rtl].cc-sdk .cc-question-container__content.rating-color{margin-left:74px;margin-right:0}[dir=rtl].cc-sdk .option-right-rating-text{right:calc(100% - 418px);left:auto!important}[dir=rtl].cc-sdk .option-left-rating-text{left:0;right:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=nps] .option-right-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=scale] .option-right-rating-text{right:0;left:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=scale] .option-left-rating-text{left:2px}[dir=rtl].cc-sdk .cc-question-container[data-type=slider] .option-right-rating-text{right:0;width:40%;text-align:right}[dir=rtl].cc-sdk .cc-question-container[data-type=slider] .option-left-rating-text{left:0;text-align:left}[dir=rtl].cc-sdk .rating-color{position:relative}[dir=rtl].cc-sdk .option-smile-box img{margin-left:29px;margin-right:0}[dir=rtl].cc-sdk .option-star-box img{margin-right:19px;margin-left:0}[dir=rtl].cc-sdk .option-csat.option-smile-box span{padding-left:25px;text-align:left;padding-right:0}[dir=rtl].cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{right:7px;left:auto!important;text-align:right}[dir=rtl].cc-sdk .cc-question-container[data-type=smile] .option-left-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=star] .option-left-rating-text{left:7px;right:auto!important;text-align:left}[dir=rtl].cc-sdk .option-csat{width:auto;box-sizing:border-box;padding-right:0;margin-left:13px}[dir=rtl].cc-sdk .option-csat.option-smile-box,[dir=rtl].cc-sdk .option-csat.option-smile-box.selected,[dir=rtl].cc-sdk .option-csat.option-smile-box:hover{background-position:calc(100% - (100% - 44px)) 50%;text-align:left}@media (min-width:769px) and (max-width:992px){[dir=rtl].cc-sdk .option-smile-box img,[dir=rtl].cc-sdk .option-star-box img{margin-right:0;margin-left:10px}[dir=rtl].cc-sdk .cc-question-container__content.rating-color{margin-left:10px;margin-right:86px!important}[dir=rtl].cc-sdk .cc-question-container[data-type=nps] .option-right-rating-text{right:17px;left:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{right:7px;text-align:right;left:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=smile] .option-left-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=star] .option-left-rating-text{left:20px;right:auto!important;text-align:left}[dir=rtl].cc-sdk .option-csat.option-smile-box,[dir=rtl].cc-sdk .option-csat.option-smile-box.selected,[dir=rtl].cc-sdk .option-csat.option-smile-box:hover{width:auto}}@media (max-width:768px){[dir=rtl].cc-sdk .option-smile-box img,[dir=rtl].cc-sdk .option-star-box img{padding-left:0;padding-right:5px;margin-left:0;margin-right:0}[dir=rtl].cc-sdk .cc-question-container[data-type=csat] .cc-checkbox input[type=radio]{margin-left:7px;opacity:0;outline:0}[dir=rtl].cc-sdk .option-csat.option-smile-box,[dir=rtl].cc-sdk .option-csat.option-smile-box.selected,[dir=rtl].cc-sdk .option-csat.option-smile-box:hover{background-position:calc(100% - (100% - 44px)) 50%}[dir=rtl].cc-sdk .option-csat.option-smile-box span{padding-left:39px;text-align:left;padding-right:0}[dir=rtl].cc-sdk .cc-question-container[data-type=smile] .option-left-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=star] .option-left-rating-text,[dir=rtl].cc-sdk .option-left-rating-text{left:10px;right:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{left:auto!important}[dir=rtl].cc-sdk .option-right-rating-text{right:calc(100% - 322px);left:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=scale] .option-right-rating-text{right:13px;left:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=nps] .radial-legend-right,[dir=rtl].cc-sdk .cc-question-container[data-type=scale] .radial-legend-right{right:auto!important;left:10px!important}[dir=rtl].cc-sdk .cc-question-container[data-type=nps] .radial-legend-left,[dir=rtl].cc-sdk .cc-question-container[data-type=scale] .radial-legend-left{left:auto!important;right:10px!important}}@media (max-width:381px){[dir=rtl].cc-sdk .option-right-rating-text{right:calc(100% - 258px);left:auto!important}}.cc-sdk .cc-select-wrapper{position:relative;display:inline-block;user-select:none;z-index:11}.cc-sdk .cc-select-wrapper select{display:none}.cc-sdk .cc-select{position:relative;display:inline-block;margin-right:70px}.cc-sdk .cc-select-trigger{display:block;width:130px;padding:0 22px 0 84px;font-size:15px;font-style:italic;font-weight:300;color:#222;line-height:20px;background:transparent;border-radius:0;cursor:pointer;width:300px;border-bottom:1px solid #6d6d6d;display:inline-block;text-align:right;padding:5px 5px 5px 20px;position:relative;background-position:3%;background-repeat:no-repeat;max-height:50px;overflow:hidden}.cc-sdk .cc-select-trigger:after{position:absolute;display:block;content:\\\"\\\";width:10px;height:10px;top:50%;left:5px;margin-top:-3px;border-bottom:1px solid #222;border-left:1px solid #222;transform:rotate(-45deg) translateY(-50%);transition:all .2s ease-in-out;transform-origin:50% 0}.cc-sdk .cc-select.opened .cc-select-trigger:after{margin-top:3px;transform:rotate(135deg) translateY(-50%)}.cc-sdk .cc-select-options-container{position:absolute;display:block;top:100%;right:0;left:0;min-width:100%;margin:15px 0;border:1px solid #b5b5b5;border-radius:4px;box-sizing:border-box;box-shadow:0 2px 1px rgba(0,0,0,.07);background:#fff;transition:all .2s ease-in-out;opacity:0;visibility:hidden;pointer-events:none;transform:translateY(calc(-100% - 65px));height:auto;max-height:150px;overflow:hidden;overflow-y:scroll}.cc-sdk .cc-select-options{overflow-y:scroll;height:100%;width:110%}.cc-sdk .cc-select.opened .cc-select-options-container{opacity:1;visibility:visible;pointer-events:all;transform:translateY(-100%) translateY(-65px)}@media (min-width:769px){.cc-sdk .cc-popup-container-2.top .cc-select-options-container,.cc-sdk .cc-popup-container-2.top .cc-select.opened .cc-select-options-container{transform:translateY(-19px)}}.cc-sdk .option-hover:before{background:#f9f9f9}.cc-sdk .cc-select-option{position:relative;display:block;padding:0 12px;border-bottom:1px solid #e4e4e4;font-size:12px;font-weight:600;color:#222;line-height:34px;cursor:pointer;transition:all .2s ease-in-out;text-align:right;margin:0;width:100%}.cc-sdk .cc-select-option:first-of-type{border-radius:4px 4px 0 0}.cc-sdk .cc-select-option:last-of-type{border-bottom:0;border-radius:0 0 4px 4px}.cc-sdk .cc-select-option.selection,.cc-sdk .cc-select-option:hover{background:#eaeaea}.cc-sdk .cc-select-wrapper.down .cc-select-options-container,.cc-sdk .cc-select-wrapper.down .cc-select.opened .cc-select-options-container{transform:translateY(20px)}.cc-sdk .cc-question-container[data-type=nps] .cc-question-container__content,.cc-sdk .cc-question-container[data-type=scale] .cc-question-container__content{width:40%}@media (max-width:768px){.cc-sdk .cc-select,.cc-sdk .cc-select-wrapper{min-width:100%}.cc-sdk .cc-select{margin-right:0}.cc-sdk .cc-select-trigger{min-width:100%;width:auto}}[dir=rtl].cc-sdk .cc-select-trigger{padding:0 84px 0 22px;background-position:3%;background-repeat:no-repeat;text-align:left}[dir=rtl].cc-sdk .cc-select-trigger:after{top:50%;right:2px;left:auto}[dir=rtl].cc-sdk .cc-select-option{text-align:left}[dir=rtl].cc-sdk .cc-select-option:first-of-type{border-radius:0 4px 4px 0}[dir=rtl].cc-sdk .cc-select-option:last-of-type{border-radius:4px 0 0 4px}.cc-sdk .cc-checkbox{display:table-cell;vertical-align:middle;position:relative;text-align:center}.cc-sdk .cc-checkbox label{cursor:pointer;display:block;height:25px}.cc-sdk .cc-checkbox+span label img{width:40px;display:inline-block;vertical-align:middle}.cc-sdk .cc-checkbox label:after,.cc-sdk .cc-checkbox label:before{content:\\\"\\\";right:0;margin:auto;position:absolute;top:calc(50% - 12.5px)}.cc-sdk .cc-checkbox label:before{background:transparent;border-radius:2px;border:1px solid #424242;cursor:pointer;height:20px;transition:background .3s;width:20px}.cc-sdk .cc-checkbox input[type=checkbox]{opacity:0;outline:0}.cc-sdk .cc-checkbox input[type=checkbox]:checked+label:before{background:#fdaf19;border:none}.cc-sdk .cc-checkbox input[type=checkbox]:checked+label:after{border:3px solid #222;border-left-style:none;border-top-style:none;height:7px;top:calc(50% - 8.5px);right:4px;transform:rotate(45deg);width:12px}.cc-sdk .cc-checkbox.cc-radio label:before{background:transparent;border:1px solid #424242;cursor:pointer;height:25px;transition:background-color .3s;width:25px}.cc-sdk .cc-checkbox input[type=radio]{opacity:0;outline:0}.cc-sdk .cc-checkbox input[type=radio]:checked+label:before{background:transparent;border-color:#fdaf19}.cc-sdk .cc-question-container__list li{display:inline-table;margin-bottom:0}.cc-sdk .cc-question-container__list li .cc-radio,.cc-sdk .cc-question-container__list li .cc-sdk .cc-checkbox{width:30px}.cc-sdk .cc-checkbox input[type=radio]:checked+label:after{-moz-transform:scale(.8);-ms-transform:scale(.8);-o-transform:scale(.8);-webkit-transform:scale(.8);background:#fdaf19;border-radius:30px;height:25px;transform:scale(.8);width:25px}.cc-sdk .cc-radio label:before{border-radius:30px}.cc-sdk .radio-toggle--more-option li span{padding-right:25px!important;width:125px!important}.cc-sdk .radio-toggle .cc-question-container__list li{padding-right:15px}@media (min-width:1000px){.cc-sdk .radio-toggle .cc-question-container__list li span label{overflow:hidden;max-height:100px;display:block}}@media (min-width:769px) and (max-width:992px){.cc-sdk .radio-toggle .cc-question-container__list li{padding-right:10px}.cc-sdk .radio-toggle .cc-question-container__list li span .label,.cc-sdk .radio-toggle .cc-question-container__list li span label{display:block;max-height:50px;overflow:hidden;text-overflow:ellipsis}}@media (max-width:768px){.cc-sdk .radio-toggle .cc-question-container__list li{padding-right:0;display:block;padding-left:50px}}.cc-sdk .progress-bar{width:100%;position:absolute;background:#a47c2b;z-index:1;height:8px;right:0}.cc-sdk .progress-line{background:#fdaf19;height:100%;display:block;width:0;transition:all .4s ease-in}@media screen and (max-width:768px){.cc-sdk .progress-bar{bottom:unset;top:0}}.cc-sdk .cc-scrollbar-wrapper{float:right;height:100%;overflow:hidden;position:relative;width:100%;z-index:1}.cc-sdk .cc-scrollbar-content{box-sizing:border-box;height:100%;overflow:auto;position:relative;width:107%}.cc-sdk .cc-scrollbar-scroll{background:#aaa;border-radius:4px;cursor:pointer;opacity:0;position:relative;top:0;transition:opacity .25s linear;width:9px;z-index:2}.cc-sdk .cc-scrollbar-container:hover .cc-scrollbar-scroll{opacity:1}.cc-sdk .cc-scrollbar-grabbed{-moz-user-select:none;-o-user-select:none;-webkit-user-select:none;user-select:none}.cc-sdk .cc-sdk-range{-webkit-appearance:none;-moz-appearance:none;width:500px;height:60px;background:transparent}.cc-sdk input[type=range]::-webkit-slider-runnable-track{-webkit-appearance:none;background:#ff403d;background:linear-gradient(-135deg,#ff403d,#992a28);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=\\\"#ff403d \\\",endColorstr=\\\"#992a28 \\\",GradientType=1);height:1px}.cc-sdk input[type=range]:focus{outline:none}.cc-sdk input[type=range]::-moz-range-track{-moz-appearance:none;background:#ff403d;background:linear-gradient(-135deg,#7a0806,#992a28);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=\\\"#ff403d \\\",endColorstr=\\\"#992a28 \\\",GradientType=1);height:1px}.cc-sdk input[type=range]::-ms-track{height:1px;width:500px;background-color:#ff403d}.cc-sdk input[type=range]::-webkit-slider-thumb{-webkit-appearance:none;border:1px solid #ff403d;border-radius:50%;height:32px;width:32px;max-width:80px;position:relative;bottom:16px;background-color:#fff;cursor:-webkit-grab}.cc-sdk input[type=range]::-ms-thumb{border:1px solid #ff403d;border-radius:50%;height:32px;width:32px;background:#e08692;box-sizing:border-box;cursor:pointer!important}.cc-sdk input[type=range]::-moz-range-thumb{-moz-appearance:none;border:1px solid #ff403d;border-radius:50%;height:32px;width:32px;max-width:80px;position:relative;bottom:16px;background-color:#fff;cursor:-moz-grab}.cc-sdk input[type=range]::-moz-range-thumb:before{content:\\\"asd\\\"}.cc-sdk input[type=range]::-webkit-slider-thumb:active{cursor:-webkit-grabbing}.cc-sdk input[type=range]::-moz-range-thumb:active{cursor:-moz-grabbing}.cc-sdk .cc-question-container__content.cc-sdk-range-slider{height:50px}.cc-sdk .slider-tip{background:#eb1c23;padding:8px 9px 9px;position:absolute;right:0;left:0;margin:0 auto;color:#fff;background:none;color:#424242;font-size:13px;width:100px;display:inline-block;text-align:center;font-weight:700}.cc-sdk .slider-tip:after{border-width:5px 5px 0;border-top-color:#000}@media (max-width:1024px){.cc-sdk .cc-sdk-range{width:100%}}.cc-sdk input.cc-sdk-range.cc-blue::-moz-range-track,.cc-sdk input.cc-sdk-range.cc-blue::-webkit-slider-runnable-track{background:blue}.cc-sdk .chart{box-sizing:border-box;display:inline-block;height:21px;padding-top:22px;position:relative;vertical-align:top;width:21px}.cc-sdk .cc-sdk-chart span{display:block;font-size:2em;font-weight:400}.cc-sdk .cc-sdk-chart canvas{right:0;position:absolute;top:0}.cc-sdk .cc-sdk-loader{height:21px;right:28px;position:absolute;top:8px;width:21px}@media (min-width:769px){.cc-sdk .cc-sdk-chart canvas{margin-right:10px}}@media (max-width:768px){.cc-sdk .cc-sdk-loader{position:relative;right:auto;top:0;left:auto}}[dir=rtl].cc-sdk .cc-sdk-chart canvas{left:0;right:auto}[dir=rtl].cc-sdk .cc-sdk-loader{left:28px;right:auto}@media (min-width:768px){[dir=rtl].cc-sdk .cc-sdk-chart canvas{margin-left:10px;margin-right:0}}.cc-sdk .show{display:block!important}.cc-sdk .show-inline{display:inline-block!important}.cc-sdk .hide{display:none!important}.cc-sdk.bottom{bottom:0}.cc-sdk.right,.cc-sdk .right{left:0}.cc-sdk .left{right:0}.cc-sdk .top{top:0}.ccsdk-overlay{background:#fff;bottom:0;height:100%;right:0;position:absolute;top:0;width:100%;z-index:0}.ccsdk-overlay.ccsdk-glass{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/ww.png);background-repeat:no-repeat;background-size:cover}.ccsdk-clearfix{clear:both;display:block}.ccsdk-text-normal{font-weight:400}.cc-sdk ::-webkit-input-placeholder{color:#4c4c4c;font-family:Open Sans;font-size:13px;font-style:italic;font-weight:400}.cc-sdk .cc-sdk-form-control::-moz-placeholder{font-style:italic;font-size:13px;font-weight:400;font-family:Open Sans;color:#4c4c4c}.cc-sdk .cc-sdk-form-control:-ms-input-placeholder{font-style:italic;font-size:13px;font-weight:400;font-family:Open Sans;color:#4c4c4c}.cc-sdk .cc-sdk-form-control:-moz-placeholder{font-style:italic;font-size:13px;font-weight:400;font-family:Open Sans;color:#4c4c4c}@media (min-width:769px){.desktop-hide{display:none}}@media (max-width:768px){.mobile-hide{display:none}.cc-sdk-loader{position:relative;right:auto;top:0;left:auto}.ccsdk-overlay.welcome-overlay{background:rgba(210,42,53,.87)}}[dir=rtl].cc-sdk .submit-icon{right:0;left:auto;margin-right:75px}@media (max-width:768px){[dir=rtl].cc-sdk .submit-icon{position:absolute;right:auto;top:auto;bottom:30px;padding-right:0;left:20px;margin:0}}.cc-sdk:before{width:0;height:0;overflow:hidden;position:absolute;z-index:-1}.cc-sdk .yellow .progress-bar{background:#a47c2b}.cc-sdk .yellow .progress-line{background:#fdaf19}.cc-sdk .yellow .submit-icon{background-image:url(\\\"data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%2747px%27%20height%3D%2747px%27%20viewBox%3D%270%200%2047%2047%27%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%3E%3Ctitle%3EGroup%2016%3C%2Ftitle%3E%3Cdesc%3ECreated%20with%20Sketch.%3C%2Fdesc%3E%3Cdefs%3E%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%3Cfilter%20x%3D%27-18.1%25%27%20y%3D%27-12.9%25%27%20width%3D%27136.2%25%27%20height%3D%27136.2%25%27%20filterUnits%3D%27objectBoundingBox%27%20id%3D%27filter-2%27%3E%3CfeOffset%20dx%3D%270%27%20dy%3D%272%27%20in%3D%27SourceAlpha%27%20result%3D%27shadowOffsetOuter1%27%3E%3C%2FfeOffset%3E%3CfeGaussianBlur%20stdDeviation%3D%272%27%20in%3D%27shadowOffsetOuter1%27%20result%3D%27shadowBlurOuter1%27%3E%3C%2FfeGaussianBlur%3E%3CfeColorMatrix%20values%3D%270%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200.116423234%200%27%20type%3D%27matrix%27%20in%3D%27shadowBlurOuter1%27%3E%3C%2FfeColorMatrix%3E%3C%2Ffilter%3E%3C%2Fdefs%3E%3Cg%20id%3D%27Page-1%27%20stroke%3D%27none%27%20stroke-width%3D%271%27%20fill%3D%27none%27%20fill-rule%3D%27evenodd%27%3E%3Cg%20id%3D%271-copy-20%27%20transform%3D%27translate(-1246.000000%2C%20-664.000000)%27%3E%3Cg%20id%3D%27Group-16%27%20transform%3D%27translate(1250.000000%2C%20666.000000)%27%3E%3Cg%20id%3D%27Oval-4%27%3E%3Cuse%20fill%3D%27white%27%20fill-opacity%3D%271%27%20filter%3D%27url(%23filter-2)%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3Cuse%20fill%3D%27%23d04a49%27%20fill-rule%3D%27evenodd%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3C%2Fg%3E%3Cg%20id%3D%27Group-5%27%20transform%3D%27translate(12.000000%2C%2011.000000)%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23FFFFFF%27%3E%3Cg%20id%3D%27fast-forward-arrows%27%20transform%3D%27translate(6.173934%2C%200.000000)%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3Cg%20id%3D%27fast-forward-arrows-copy%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\\\")}.cc-sdk .yellow .cc-checkbox input[type=checkbox]:checked+label:before{background:#fdaf19}.cc-sdk .yellow .cc-checkbox input[type=checkbox]:checked+label:after{border-color:#222}.cc-sdk .yellow .cc-checkbox input[type=radio]:checked+label:before{border-color:#fdaf19}.cc-sdk .yellow .cc-checkbox input[type=radio]:checked+label:after{background:#fdaf19}.cc-sdk .yellow .cc-sdk-form-control:focus{border-color:#fcaf18}.cc-sdk .yellow .cc-message-box__btn{background:#fdaf19}.cc-sdk .red .progress-bar{background:#d22a35}.cc-sdk .red .progress-line{background:#d22a35;filter:brightness(150%)}.cc-sdk .red .cc-checkbox input[type=checkbox]:checked+label:before{background:#d22a35}.cc-sdk .red .cc-checkbox input[type=checkbox]:checked+label:after{border-color:#fff}.cc-sdk .red .cc-checkbox input[type=radio]:checked+label:before{border-color:#d22a35}.cc-sdk .red .cc-checkbox input[type=radio]:checked+label:after{background:#d22a35}.cc-sdk .red .cc-sdk-form-control:focus{border-color:#d22a35}.cc-sdk .red .cc-message-box__btn{background:#d22a35;color:#fff}.cc-question-container,.hide-slide{transform:translateX(-5px)}.cc-question-container,.hide-bottom-up,.hide-slide{transition:transform .3s ease,opacity .3s ease,visibility .3s ease;visibility:hidden;opacity:0}.hide-bottom-up{transform:translateY(30px)}.hide-up-bottom{transform:translateY(100%)}.hide-right-left,.hide-up-bottom{transition:transform .3s ease,opacity .3s ease,visibility .3s ease;visibility:hidden;opacity:0}.hide-right-left{transform:translateX(-100%)}.hide-left-right{transform:translateX(100%);visibility:hidden;opacity:0}.hide-left-right,.show-slide,.show-thankyou-slide{transition:transform .3s ease,opacity .3s ease,visibility .3s ease}.show-slide,.show-thankyou-slide{visibility:visible;opacity:1;transform:translateX(0) translateY(0)}.cc-sdk #timer{position:relative}.cc-sdk svg.cc-sdk-timer{position:absolute;top:0;right:0;width:40px;height:40px;transform:rotateY(-180deg) rotate(90deg)}[dir=rtl].cc-sdk svg.cc-sdk-timer{left:0;right:auto}.cc-sdk svg.cc-sdk-timer circle{stroke-dasharray:50px;stroke-dashoffset:0px;stroke-linecap:round;stroke-width:2px;stroke:red;fill:none;animation:countdown 10s linear 1 forwards}@keyframes countdown{0%{stroke-dashoffset:0px}to{stroke-dashoffset:50px}}.cc-sdk .cc-loaderimg{position:absolute;width:100%;z-index:1000;right:0;left:0;top:0;height:100%;background:hsla(0,0%,100%,.8)}.cc-sdk .cc-loaderimg svg{width:100px}\" : \".cc-sdk ul{padding-left:0;list-style-type:none;margin:0}.cc-sdk a,.cc-sdk a:focus,.cc-sdk a:hover{text-decoration:none;color:inherit}.cc-sdk *,.cc-sdk :after,.cc-sdk :before{box-sizing:border-box}.cc-sdk p{color:inherit;margin:0}.cc-sdk map area{outline:0;cursor:pointer}.cc-sdk map area.selected{outline:0;outline-color:#0a2135;outline-width:0;outline-style:solid}.cc-sdk map area:hover{outline:1}.cc-sdk.cc-popup-container{background:#fff;box-shadow:0 0 4px 5px rgba(0,0,0,.05);font-family:open sans,sans-serif;position:fixed;text-align:center;max-width:500px;max-height:500px;z-index:1111}@media (min-width:768px){.cc-sdk.cc-popup-container{padding:10px}}.cc-sdk.cc-popup-container.bottom{margin-bottom:9px}.cc-sdk.cc-popup-container.top{margin-top:9px}.cc-sdk #cc-thankyou-container .cc-question-container__text p{word-break:break-word}.cc-sdk #cc-thankyou-container .cc-question-container__text,.cc-sdk #cc-thankyou-container .cc-question-container__text p{width:400px;max-width:none;font-size:17px;color:#424242}.cc-sdk .cc-message-box{position:relative;z-index:11}.cc-sdk .cc-message-box__text{color:#424242;font-size:14px;font-weight:600;margin:0;padding:29px 14px 20px;vertical-align:middle}.cc-sdk .cc-message-box__btn{background:#fdaf19;border-radius:100px;display:inline-block;font-size:15px;font-weight:700;height:32px;padding:6px 0;width:124px;text-align:center}.cc-sdk.cc-popup-container .cc-popup-container__close{cursor:pointer;margin:4px;position:absolute;right:0;top:0;z-index:111}.cc-sdk .cc-popup-container-2{height:144px;position:fixed;width:100%;z-index:1111}.cc-sdk .cc-popup-container-2.bottom{bottom:0}.cc-sdk .cc-popup-container-2__icons{cursor:pointer;padding:8px;position:absolute;top:0;z-index:111}.cc-sdk .top.cc-popup-container-2 .cc-popup-container-2__icons{padding-top:15px}.cc-sdk .cc-popup-container-2__icons.cc-right-icon{right:0}.cc-sdk .cc-popup-container-2__icons.cc-left-icon{left:0}.cc-sdk .cc-popup-container__back{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);display:inline-block;width:21px;height:21px}.cc-sdk .cc-question-container{padding:20px 20px 25px;position:absolute;text-align:center;width:100%;z-index:11;top:0;left:0}.cc-sdk .cc-question-container__text{color:#424242;display:inline-block;font-size:15px;font-weight:600;max-width:230px;padding:8px 0;text-align:center;vertical-align:middle;width:20%;position:relative}.cc-sdk .cc-question-container__text p{word-break:break-word}.cc-sdk .cc-question-container[data-type=csat] .cc-question-container__text{width:11em}.cc-sdk .cc-question-container[data-type=csat] .cc-question-container__list{width:64vw}.cc-sdk .cc-question-container__required,.cc-sdk .cc-question-container__validation{position:absolute;top:-14px;font-size:11px;left:0;width:100%;right:0;font-weight:400;color:#c1272d;display:none}.cc-sdk .cc-question-container__required-label{display:inline-block;position:relative;top:-2px;left:-2px}.cc-sdk .cc-question-container__content{display:inline-block;max-width:78%;vertical-align:middle;width:auto}.cc-sdk .cc-question-container__list li{display:inline-block;padding-left:29px;vertical-align:middle}.cc-sdk .cc-question-container__list li span{display:table-cell;font-size:15px;padding-left:15px;text-align:left;vertical-align:middle;width:125px}.cc-sdk .cc-question-container__list li input{vertical-align:middle}.cc-sdk .cc-question-container:before{content:\\\"\\\";display:inline-block;height:100%;margin-right:-4px;vertical-align:middle}.cc-sdk .cc-question-container{height:100%;vertical-align:middle}.cc-sdk .cc-questions-container{height:100%}.cc-sdk p.cc-thankyou-powered{font-size:13px!important;color:#404040!important;font-style:italic;margin-top:4px}.cc-sdk p.cc-thankyou-powered.no-branding{display:none}.cc-sdk .cc-thankyou-powered .cc-thankyou-logo{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/cc-thankyou-logo.svg\\\");background-size:cover;margin-right:8px;display:inline-block;width:16px;height:16px}.cc-sdk .multiline-box{background:#fff;border-radius:2px;border:1px solid #6d6d6d;font-family:Open Sans;font-size:15px;height:70px;margin:0 0 0 50px;min-width:600px;padding:2px 5px;resize:none}.cc-sdk .multiline-box:focus{outline:0}.cc-sdk .detail-box .cc-question-container__text p{font-size:13px;font-weight:700}.cc-sdk .detail-box .cc-question-container__text span{display:inline-block;font-size:15px;font-weight:400}.cc-sdk .detail-box .cc-question-container__text{height:56px}.cc-sdk .detail-box[data-type=singleline] .cc-question-container__text{margin-right:20px}.cc-sdk .detail-box .cc-question-container__content .cc-sdk-form-control,.cc-sdk .single-line .cc-question-container__content .cc-sdk-form-control{background:transparent;border:none;border-bottom:1px solid #6d6d6d;font-family:open sans;font-size:15px;line-height:26px;outline:0;width:300px;margin-left:70px}.cc-sdk .d-star-box.detail-box .cc-question-container__text{height:92px}.cc-sdk .hl.dropdown{background-image:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/arrow-down.black.svg\\\");background-position:97%;background-repeat:no-repeat;border-bottom:1px solid #6d6d6d;display:inline-block;padding:5px;position:relative;text-align:left;width:300px}.cc-sdk .drop-cc-question-container .cc-question-container__text{margin-right:20px}.cc-sdk .cc-sdk-form-control:focus{border-color:#fcaf18}.cc-sdk .detail-box .cc-question-container__content{padding-left:0}.cc-sdk .cc-big-list-container .cc-question-container__list{display:table;width:100%}.cc-sdk .cc-big-list-container .cc-question-container__list li{display:table-cell;vertical-align:middle}.cc-sdk .cc-thankyou-container{width:100%!important}.cc-sdk .submit-icon{direction:ltr;position:absolute;right:0;top:0;bottom:0;margin:auto 0;z-index:11;margin-right:75px;font-size:16px;cursor:pointer;width:47px;height:47px}@media (min-width:1000px){.cc-sdk .cc-big-list-container .cc-question-container__list li span label{overflow:hidden;max-height:100px;display:block}}@media (min-width:769px) and (max-width:875px){.cc-sdk .cc-question-container__list li{padding-left:0!important}}@media (min-width:769px) and (max-width:1024px){.cc-sdk .cc-popup-container-2{height:200px}.cc-sdk .cc-big-list-container .cc-question-container__list,.cc-sdk .cc-question-container__list{text-align:left}.cc-sdk .cc-big-list-container .cc-question-container__list li,.cc-sdk .cc-question-container__list li{display:inline-block;margin-bottom:15px;vertical-align:middle;width:49%}.cc-sdk .cc-question-container__content{display:inline-block;width:45%}.cc-sdk .multiline-box{min-width:100%;margin:0}.cc-sdk .option-smile-box img,.cc-sdk .option-star-box img{margin-right:11px!important}.cc-sdk .cc-thankyou-container .cc-question-container__text,.cc-sdk .cc-thankyou-container .cc-question-container__text p{width:100%!important;text-align:center;margin:0!important;padding:0;line-height:normal;height:auto}.cc-sdk .cc-thankyou-container .cc-question-container__text{max-width:98%}}@media (min-width:1000px){.cc-sdk .cc-question-container__text p{max-height:100px;overflow:hidden;max-width:140ch}.cc-sdk .cc-question-container__text p.ellipsis:after{content:\\\"...\\\";text-align:right;bottom:9px;right:-3px;width:12px;display:block;position:absolute;height:1.2em}}@media (min-width:769px) and (max-width:992px){.cc-sdk .cc-question-container{width:100%;margin:auto}.cc-sdk .cc-question-container__text{width:24%;padding-right:20px}.cc-sdk .cc-question-container__text p{max-height:110px;overflow:hidden}.cc-sdk .cc-question-container__content.rating-color{margin-left:0}.cc-sdk .submit-icon{margin-right:40px!important}.cc-sdk .cc-question-container__content.rating-color{margin-left:0!important}.cc-sdk .cc-question-container__content{width:50%!important}}@media (max-width:768px){.cc-sdk .cc-survey-container,.cc-sdk .cc-survey-content{height:100%}.cc-sdk .cc-popup-container-2{bottom:auto;height:100%;top:0}.cc-sdk .cc-popup-container-2__icons.cc-right-icon{left:auto;right:0;padding:0}.cc-sdk .cc-popup-container-2__icons.cc-left-icon{left:0;right:auto;padding:0}.cc-sdk .cc-big-list-container .cc-question-container__list li,.cc-sdk[dir=rtl] .cc-big-list-container .cc-question-container__list li{display:block}.cc-sdk .radio-toggle--more-option li span{width:84%!important;padding-left:25px!important}.cc-sdk .radio-toggle--more-option li{padding-right:0!important;display:block!important;padding-top:10px}.cc-sdk .detail-box .cc-question-container__content{padding-left:0}.cc-sdk .cc-question-container{bottom:75px;height:auto;left:0;padding:40px 20px;position:absolute;text-align:left;top:auto;width:100%}.cc-sdk .cc-question-container__text{font-size:18px;margin-bottom:20px;max-width:400px;text-align:left;width:100%}.cc-sdk .cc-question-container__content{display:block;max-width:100%;width:100%}.cc-sdk .cc-question-container__list label{display:block}.cc-sdk .cc-question-container__list li span{width:auto;padding-left:15px}.cc-sdk .cc-question-container__list li{padding-left:0;margin-bottom:10px;display:block}.cc-sdk .cc-popup-container-2__icons{margin:20px}.cc-sdk .cc-popup-container-2__icons.left-icon{left:auto;right:0}.cc-sdk .cc-popup-container-2__icons.right-icon{right:auto;left:0}.cc-sdk .cc-popup-container__close{width:27px}.cc-sdk .cc-question-container__content.rating-color{margin-left:0!important}.cc-sdk .cc-question-container[data-type=nps] .cc-question-container__content,.cc-sdk .cc-question-container[data-type=scale] .cc-question-container__content{width:100%!important}.cc-sdk .multiline-box{height:150px;margin:0;min-width:100%;width:100%}.cc-sdk .detail-box .cc-question-container__content .cc-sdk-form-control,.cc-sdk .hl.dropdown{width:100%}.cc-sdk .detail-box .cc-question-container__text p{font-size:18px}.cc-sdk .mobile-detail-box .cc-question-container__text{height:auto}.cc-sdk .cc-question-container__text p{max-height:auto}.cc-sdk .welcome-box .cc-question-container__text p{color:#fff}.cc-sdk .cc-questions-container{height:100%;position:relative}.cc-sdk .cc-message-box__btn{margin-left:20px}}@media (max-width:768px){.cc-sdk .detail-box .cc-question-container__content .cc-sdk-form-control,.cc-sdk .single-line .cc-question-container__content .cc-sdk-form-control{margin-left:0}.cc-sdk .submit-icon{position:absolute;left:20px;top:auto;bottom:30px;padding-right:0}.cc-sdk.cc-popup-container{position:fixed;bottom:0;left:0;right:0;margin:0!important;width:100%;height:13em;max-width:100%;max-height:100%;text-align:left;background:transparent}.cc-sdk.cc-popup-container .cc-message-box{position:absolute;bottom:20%}.cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text{font-size:20px}.cc-sdk.cc-popup-container .cc-message-box .submit-icon{position:absolute;bottom:-100%;top:auto;left:0;margin:0 14px}.cc-sdk.cc-popup-container .cc-popup-container__close{margin:20px;right:0;top:0}.cc-sdk.cc-popup-container__back{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);display:inline-block;width:27px;height:27px;background-size:100%}.cc-sdk .cc-thankyou-container .cc-question-container__text,.cc-sdk .cc-thankyou-container .cc-question-container__text p{width:100%!important;text-align:center;margin:0!important;padding:0;line-height:normal;height:auto}.cc-sdk .cc-thankyou-container .cc-question-container__text{max-width:98%}}.date-s,.date-y{display:inline-block;margin:0 12px!important;width:80px!important}.date-error{color:red;font-style:italic;visibility:hidden;margin-top:12px}.date-error.show-error{visibility:visible}[dir=rtl].cc-sdk ul{padding-right:0}[dir=rtl].cc-sdk.cc-popup-container .cc-popup-container__close{right:auto;left:0;top:0}[dir=rtl].cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text{text-align:right}[dir=rtl].cc-sdk .cc-popup-container__back{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_rtl_.svg)}[dir=rtl].cc-sdk .cc-popup-container-2__icons.cc-right-icon{right:auto;left:0}[dir=rtl].cc-sdk .cc-popup-container-2__icons.cc-left-icon{right:0;left:auto}[dir=rtl].cc-sdk.cc-question-container{margin-left:0;margin-right:0;right:0;left:auto}[dir=rtl].cc-sdk .cc-question-container__required,[dir=rtl].cc-sdk .cc-question-container__validation{right:0;left:auto}[dir=rtl].cc-sdk .cc-question-container__required-label{top:-2px;right:-2px;left:auto}[dir=rtl].cc-sdk .cc-question-container__list li{display:inline-block;padding-right:15px!important;padding-left:15px!important;vertical-align:middle}[dir=rtl].cc-sdk .cc-question-container[data-type=checkbox] .cc-question-container__list li{padding-right:0!important}[dir=rtl].cc-sdk .cc-question-container__list li span{padding-right:15px;padding-left:0;text-align:right}[dir=rtl].cc-sdk .cc-question-container:before{margin-left:-4px;margin-right:0}[dir=rtl].cc-sdk .multiline-box{margin:0 50px 0 0}[dir=rtl].cc-sdk .hl.dropdown{background-position:97%;text-align:right}[dir=rtl].cc-sdk .drop-cc-question-container .cc-question-container__text{margin-left:20px;margin-right:0}[dir=rtl].cc-sdk .detail-box .cc-question-container__content{padding-right:0;padding-left:0}[dir=rtl].cc-sdk .cc-question-container__content{text-align:right}@media (min-width:769px) and (max-width:1024px){[dir=rtl].cc-sdk .cc-big-list-container .cc-question-container__list,[dir=rtl].cc-sdk .cc-question-container__list{text-align:right}[dir=rtl].cc-sdk .multiline-box{margin:0}}@media (min-width:769px) and (max-width:992px){[dir=rtl].cc-sdk .cc-question-container__text{padding-left:20px;padding-right:0}[dir=rtl].cc-sdk .cc-question-container__content.rating-color{margin-left:0;margin-right:0}}@media (max-width:768px){[dir=rtl].cc-sdk .cc-popup-container-2__icons.cc-right-icon{left:0;right:auto}[dir=rtl].cc-sdk .cc-popup-container-2__icons.cc-left-icon{left:auto;right:0}[dir=rtl].cc-sdk .radio-toggle--more-option li span{padding-right:25px!important;padding-left:0!important}[dir=rtl].cc-sdk .radio-toggle--more-option li{padding-right:0!important;padding-left:0!important}[dir=rtl].cc-sdk .detail-box .cc-question-container__content{padding-left:0;padding-right:0}[dir=rtl].cc-sdk .cc-question-container{left:auto;right:0}[dir=rtl].cc-sdk .multiline-box{margin:0}[dir=rtl].cc-sdk .cc-question-container__text{text-align:right;width:100%;margin-right:5px;max-width:100%}[dir=rtl].cc-sdk .cc-question-container__list li span{padding-right:15px;padding-left:0}[dir=rtl].cc-sdk .cc-question-container__list li{padding-left:0;padding-right:0}[dir=rtl].cc-sdk .cc-popup-container-2__icons.left-icon{left:0;right:auto}[dir=rtl].cc-sdk .cc-popup-container-2__icons.right-icon{right:0;left:auto}[dir=rtl].cc-sdk .cc-question-container__content.rating-color{margin-left:0!important;margin-right:0!important}}.cc-sdk .option-number-item{color:#fff;float:left;font-size:13px;height:38px;box-sizing:border-box;padding-top:10px;text-align:center;width:8.5%;margin-left:1px;margin-right:0;cursor:pointer}.cc-sdk .option-number-item.option-zero{background:#853838}.cc-sdk .option-number-item.option-zero.selected,.cc-sdk .option-number-item.option-zero:hover{background:#572526}.cc-sdk .option-number-item.option-one{background:#9e4343}.cc-sdk .option-number-item.option-one.selected,.cc-sdk .option-number-item.option-one:hover{background:#642728}.cc-sdk .option-number-item.option-two{background:#c14d4d}.cc-sdk .option-number-item.option-two.selected,.cc-sdk .option-number-item.option-two:hover{background:#712827}.cc-sdk .option-number-item.option-three{background:#d94d4d}.cc-sdk .option-number-item.option-three.selected,.cc-sdk .option-number-item.option-three:hover{background:#7c2828}.cc-sdk .option-number-item.option-four{background:#ee4d4d}.cc-sdk .option-number-item.option-four.selected,.cc-sdk .option-number-item.option-four:hover{background:#852828}.cc-sdk .option-number-item.option-five{background:#ff4d4d}.cc-sdk .option-number-item.option-five.selected,.cc-sdk .option-number-item.option-five:hover{background:#844828}.cc-sdk .option-number-item.option-six{background:#ff8c4d}.cc-sdk .option-number-item.option-six.selected,.cc-sdk .option-number-item.option-six:hover{background:#844828}.cc-sdk .option-number-item.option-seven{background:#ffc74d}.cc-sdk .option-number-item.option-seven.selected,.cc-sdk .option-number-item.option-seven:hover{background:#856728}.cc-sdk .option-number-item.option-eight{background:#f5eb4d}.cc-sdk .option-number-item.option-eight.selected,.cc-sdk .option-number-item.option-eight:hover{background:#7f7a28}.cc-sdk .option-number-item.option-nine{background:#73ca81}.cc-sdk .option-number-item.option-nine.selected,.cc-sdk .option-number-item.option-nine:hover{background:#3b6942}.cc-sdk .option-number-item.option-ten{background:#4db47c}.cc-sdk .option-number-item.option-ten.selected,.cc-sdk .option-number-item.option-ten:hover{background:#285e40}.cc-sdk .option-number-item.option-7-scale-1,.cc-sdk .option-number-item.option-7-scale-2,.cc-sdk .option-number-item.option-7-scale-3{background:#ed534f}.cc-sdk .option-number-item.option-7-scale-4,.cc-sdk .option-number-item.option-7-scale-5{background:#ffbc00}.cc-sdk .option-number-item.option-7-scale-6,.cc-sdk .option-number-item.option-7-scale-7{background:#4db47c}.cc-sdk .option-number-item.option-5-scale-1,.cc-sdk .option-number-item.option-5-scale-2{background:#ed534f}.cc-sdk .option-number-item.option-5-scale-3{background:#ffbc00}.cc-sdk .option-number-item.option-5-scale-4,.cc-sdk .option-number-item.option-5-scale-5{background:#4db47c}.cc-sdk .cc-question-container[data-type=nps] .option-number-item{width:calc(9.09% - 1px)}.cc-sdk .cc-question-container[data-type=scale].scale-image-container .option-number-item{width:8.4%}.cc-sdk .cc-question-container__content.rating-color{margin-left:74px}.cc-sdk .option-left-rating-text,.cc-sdk .option-mid-rating-text,.cc-sdk .option-midnps-rating-text,.cc-sdk .option-right-rating-text{color:#424242;font-size:13px;left:0;position:absolute}.cc-sdk .option-midnps-rating-text{left:calc(7 * 9.09% - 1px)}.cc-sdk .option-left-rating-text-small-container{max-width:57px;text-align:left;max-height:37px;overflow:hidden}.cc-sdk .option-mid-rating-text-small-container,.cc-sdk .option-right-rating-text-small-container{max-width:57px;text-align:right;max-height:37px;overflow:hidden}.cc-sdk .option-left-rating-text-small-container-smile{width:40%;text-align:left;max-height:37px;overflow:hidden;bottom:auto!important;top:57px}.cc-sdk .option-right-rating-text-small-container-smile{width:40%;text-align:right;max-height:37px;overflow:hidden;bottom:auto!important;top:57px}.cc-sdk .cc-question-container[data-type=smile] .option-left-rating-text,.cc-sdk .cc-question-container[data-type=star] .option-left-rating-text{left:4px;width:40%;text-align:left}.cc-sdk .option-right-rating-text{left:auto;right:0}.cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,.cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{text-align:right;width:40%}.cc-sdk .cc-question-container[data-type=scale] .option-number-item{width:38px;margin:0 .5px;cursor:pointer;display:inline-block;float:none}.cc-sdk .cc-question-container[data-type=scale] .cc-question-container__list{display:inline-block;width:auto;position:relative}.cc-sdk .cc-question-container[data-type=scale].scale-image-container .cc-question-container__list{width:100%}.cc-sdk .rating-color{position:relative}.cc-sdk .option-smile-box,.cc-sdk .option-star-box{height:60px;margin-right:29px;width:60px;cursor:pointer;box-sizing:border-box;border:4px solid transparent;border-radius:50%;display:inline-block;background-size:100%}.cc-sdk:not([dir=rtl]) .option-smile-box:nth-child(5),.cc-sdk:not([dir=rtl]) .option-star-box:nth-child(5),.cc-sdk[dir=rtl] .option-smile-box:first-child,.cc-sdk[dir=rtl] .option-star-box:first-child{margin-right:0}.cc-sdk .option-smile-box.cc-one{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-two{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-three{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-four{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-five{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-one.selected,.cc-sdk .option-smile-box.cc-one:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-two.selected,.cc-sdk .option-smile-box.cc-two:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-three.selected,.cc-sdk .option-smile-box.cc-three:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-four.selected,.cc-sdk .option-smile-box.cc-four:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-five.selected,.cc-sdk .option-smile-box.cc-five:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .cc-csat.cc-question-container__content.rating-color{margin-left:45px}.cc-sdk .option-csat.option-smile-box,.cc-sdk .option-csat.option-smile-box.selected,.cc-sdk .option-csat.option-smile-box:hover{background-size:25px;background-position:18px}.cc-sdk .option-csat{height:30px;margin-right:68px;width:30px;padding-left:50px;height:45px;margin-right:0;width:auto;padding-left:0;font-size:14px;vertical-align:middle;display:inline-block;margin-right:13px}.cc-sdk .option-csat span{display:inline-block;vertical-align:top;font-size:12px;padding-left:25px;position:relative;text-align:left;width:100%}.cc-sdk .option-csat .cc-checkbox label{pointer-events:none}.cc-sdk .option-star-box{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-star-box.selected,.cc-sdk .option-star-box:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star_selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .cc-question-container[data-type=slider] .option-left-rating-text{left:4px;width:40%;text-align:left}.cc-sdk .cc-question-container[data-type=slider] .option-right-rating-text{width:40%;text-align:right}.cc-sdk .cc-question-container[data-type=smile] .cc-question-container__list,.cc-sdk .cc-question-container[data-type=star] .cc-question-container__list{position:relative;width:auto;display:inline-block}.cc-sdk .circle-image{margin:auto;width:253px;overflow:hidden;height:240px;position:relative}.cc-sdk .circle-image-scale-010-neutral{width:242px;overflow:hidden;height:230px;margin:auto}.cc-sdk .cc-nps-selected-rating{font-size:100px;display:inline-block;position:absolute;top:0;left:0;line-height:100px;right:0;margin:auto;bottom:0;width:110px;height:100px;text-align:center;font-weight:100;color:#bbb}.cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,.cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{right:4px}.cc-sdk .option-number-item.option-scale{background:#4db47c}.cc-sdk .option-number-item.option-scale.selected,.cc-sdk .option-number-item.option-scale:hover{background:#712827}.cc-sdk .cc-nps-image{cursor:pointer;position:relative;left:0}.cc-sdk .legend-container{position:relative}@media (min-width:769px) and (max-width:992px){.cc-sdk .option-smile-box,.cc-sdk .option-star-box{width:50px;height:50px;margin-right:10px}.cc-sdk .option-csat.option-smile-box,.cc-sdk .option-csat.option-smile-box.selected,.cc-sdk .option-csat.option-smile-box:hover{display:inline-block;width:168px;background-position:48px}.cc-sdk .option-csat.option-smile-box.selected span,.cc-sdk .option-csat.option-smile-box:hover span,.cc-sdk .option-csat.option-smile-box span{padding-left:40px}}@media screen and (min-width:992px){.cc-sdk span.option-csat.option-smile-box,.cc-sdk span.option-csat.option-smile-box.selected,.cc-sdk span.option-csat.option-smile-box:hover{background-position:44px}.cc-sdk span.option-csat.option-smile-box span{padding-left:40px}}@media (max-width:768px){.cc-sdk .option-smile-box,.cc-sdk .option-star-box{display:inline-block;margin-right:3px}.cc-sdk .option-csat.option-smile-box,.cc-sdk .option-csat.option-smile-box.selected,.cc-sdk .option-csat.option-smile-box:hover{display:block;background-size:40px;background-position:45px}.cc-sdk .option-csat.option-smile-box{height:65px;width:100%}.cc-sdk .option-csat.option-smile-box span{font-size:15px;padding-left:40px}.cc-sdk .option-csat.option-smile-box .cc-checkbox{top:calc(50% - 12.5px);height:57px}.cc-sdk .option-csat.option-smile-box .cc-checkbox.cc-radio label:before,.cc-sdk .option-csat.option-smile-box .cc-checkbox input[type=radio]:checked+label:after{width:25px;height:25px}.cc-sdk .option-number-item{color:#fff;float:left;font-size:15px;height:35px;box-sizing:border-box;margin-right:1px;padding-top:7px;text-align:center;width:38px;cursor:pointer;vertical-align:middle}.cc-sdk .cc-question-container[data-type=scale]{bottom:106px}.cc-sdk .cc-question-container[data-type=scale] .option-left-rating-text,.cc-sdk .cc-question-container[data-type=scale] .option-mid-rating-text,.cc-sdk .cc-question-container[data-type=scale] .option-right-rating-text{width:auto}.cc-sdk .cc-question-container[data-type=scale] .option-right-rating-text{text-align:right}.cc-sdk .option-smile-box img,.cc-sdk .option-star-box img{padding-right:5px;margin-right:0}.cc-sdk .cc-question-container[data-type=nps] .cc-question-container__content{width:100%!important}.cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,.cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{right:10px}.cc-sdk .cc-question-container[data-type=csat] .cc-question-container__list li,.cc-sdk .cc-question-container[data-type=scale] .cc-question-container__list{width:100%}}@media (max-width:381px){.cc-sdk .option-smile-box,.cc-sdk .option-star-box{display:inline-block;margin-right:0;height:50px;width:50px}.cc-sdk .option-smile-box img,.cc-sdk .option-star-box img{padding-right:5px;margin-right:0}}@media screen and (max-width:768px){.cc-sdk .cc-question-container[data-type=scale] span.radial-legend-right,.cc-sdk .radial-legend-right{text-align:left;width:35%;right:0}.cc-sdk .radial-legend-mid{width:35%;text-align:center;left:0;right:0;display:none}.cc-sdk .radial-legend-left{width:35%;text-align:right;left:0}}[dir=rtl].cc-sdk .cc-question-container[data-type=csat] .cc-question-container__content.rating-color{margin-right:45px;margin-left:0}[dir=rtl].cc-sdk .cc-question-container[data-type=csat] .cc-checkbox input[type=radio]{margin-right:0;opacity:0;outline:0}[dir=rtl].cc-sdk .option-number-item{margin-right:1px;margin-left:0;float:right}[dir=rtl].cc-sdk .cc-question-container__content.rating-color{margin-right:74px;margin-left:0}[dir=rtl].cc-sdk .option-right-rating-text{left:calc(100% - 418px);right:auto!important}[dir=rtl].cc-sdk .option-left-rating-text{right:0;left:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=nps] .option-right-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=scale] .option-right-rating-text{left:0;right:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=scale] .option-left-rating-text{right:2px}[dir=rtl].cc-sdk .cc-question-container[data-type=slider] .option-right-rating-text{left:0;width:40%;text-align:left}[dir=rtl].cc-sdk .cc-question-container[data-type=slider] .option-left-rating-text{right:0;text-align:right}[dir=rtl].cc-sdk .rating-color{position:relative}[dir=rtl].cc-sdk .option-smile-box img{margin-right:29px;margin-left:0}[dir=rtl].cc-sdk .option-star-box img{margin-left:19px;margin-right:0}[dir=rtl].cc-sdk .option-csat.option-smile-box span{padding-right:25px;text-align:right;padding-left:0}[dir=rtl].cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{left:7px;right:auto!important;text-align:left}[dir=rtl].cc-sdk .cc-question-container[data-type=smile] .option-left-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=star] .option-left-rating-text{right:7px;left:auto!important;text-align:right}[dir=rtl].cc-sdk .option-csat{width:auto;box-sizing:border-box;padding-left:0;margin-right:13px}[dir=rtl].cc-sdk .option-csat.option-smile-box,[dir=rtl].cc-sdk .option-csat.option-smile-box.selected,[dir=rtl].cc-sdk .option-csat.option-smile-box:hover{background-position:calc(100% - 44px) 50%;text-align:right}@media (min-width:769px) and (max-width:992px){[dir=rtl].cc-sdk .option-smile-box img,[dir=rtl].cc-sdk .option-star-box img{margin-left:0;margin-right:10px}[dir=rtl].cc-sdk .cc-question-container__content.rating-color{margin-right:10px;margin-left:86px!important}[dir=rtl].cc-sdk .cc-question-container[data-type=nps] .option-right-rating-text{left:17px;right:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{left:7px;text-align:left;right:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=smile] .option-left-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=star] .option-left-rating-text{right:20px;left:auto!important;text-align:right}[dir=rtl].cc-sdk .option-csat.option-smile-box,[dir=rtl].cc-sdk .option-csat.option-smile-box.selected,[dir=rtl].cc-sdk .option-csat.option-smile-box:hover{width:auto}}@media (max-width:768px){[dir=rtl].cc-sdk .option-smile-box img,[dir=rtl].cc-sdk .option-star-box img{padding-right:0;padding-left:5px;margin-right:0;margin-left:0}[dir=rtl].cc-sdk .cc-question-container[data-type=csat] .cc-checkbox input[type=radio]{margin-right:7px;opacity:0;outline:0}[dir=rtl].cc-sdk .option-csat.option-smile-box,[dir=rtl].cc-sdk .option-csat.option-smile-box.selected,[dir=rtl].cc-sdk .option-csat.option-smile-box:hover{background-position:calc(100% - 44px) 50%}[dir=rtl].cc-sdk .option-csat.option-smile-box span{padding-right:39px;text-align:right;padding-left:0}[dir=rtl].cc-sdk .cc-question-container[data-type=smile] .option-left-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=star] .option-left-rating-text,[dir=rtl].cc-sdk .option-left-rating-text{right:10px;left:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{right:auto!important}[dir=rtl].cc-sdk .option-right-rating-text{left:calc(100% - 322px);right:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=scale] .option-right-rating-text{left:13px;right:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=nps] .radial-legend-right,[dir=rtl].cc-sdk .cc-question-container[data-type=scale] .radial-legend-right{left:auto!important;right:10px!important}[dir=rtl].cc-sdk .cc-question-container[data-type=nps] .radial-legend-left,[dir=rtl].cc-sdk .cc-question-container[data-type=scale] .radial-legend-left{right:auto!important;left:10px!important}}@media (max-width:381px){[dir=rtl].cc-sdk .option-right-rating-text{left:calc(100% - 258px);right:auto!important}}.cc-sdk .cc-select-wrapper{position:relative;display:inline-block;user-select:none;z-index:11}.cc-sdk .cc-select-wrapper select{display:none}.cc-sdk .cc-select{position:relative;display:inline-block;margin-left:70px}.cc-sdk .cc-select-trigger{display:block;width:130px;padding:0 84px 0 22px;font-size:15px;font-style:italic;font-weight:300;color:#222;line-height:20px;background:transparent;border-radius:0;cursor:pointer;width:300px;border-bottom:1px solid #6d6d6d;display:inline-block;text-align:left;padding:5px 20px 5px 5px;position:relative;background-position:97%;background-repeat:no-repeat;max-height:50px;overflow:hidden}.cc-sdk .cc-select-trigger:after{position:absolute;display:block;content:\\\"\\\";width:10px;height:10px;top:50%;right:5px;margin-top:-3px;border-bottom:1px solid #222;border-right:1px solid #222;transform:rotate(45deg) translateY(-50%);transition:all .2s ease-in-out;transform-origin:50% 0}.cc-sdk .cc-select.opened .cc-select-trigger:after{margin-top:3px;transform:rotate(-135deg) translateY(-50%)}.cc-sdk .cc-select-options-container{position:absolute;display:block;top:100%;left:0;right:0;min-width:100%;margin:15px 0;border:1px solid #b5b5b5;border-radius:4px;box-sizing:border-box;box-shadow:0 2px 1px rgba(0,0,0,.07);background:#fff;transition:all .2s ease-in-out;opacity:0;visibility:hidden;pointer-events:none;transform:translateY(calc(-100% - 65px));height:auto;max-height:150px;overflow:hidden;overflow-y:scroll}.cc-sdk .cc-select-options{overflow-y:scroll;height:100%;width:110%}.cc-sdk .cc-select.opened .cc-select-options-container{opacity:1;visibility:visible;pointer-events:all;transform:translateY(-100%) translateY(-65px)}@media (min-width:769px){.cc-sdk .cc-popup-container-2.top .cc-select-options-container,.cc-sdk .cc-popup-container-2.top .cc-select.opened .cc-select-options-container{transform:translateY(-19px)}}.cc-sdk .option-hover:before{background:#f9f9f9}.cc-sdk .cc-select-option{position:relative;display:block;padding:0 12px;border-bottom:1px solid #e4e4e4;font-size:12px;font-weight:600;color:#222;line-height:34px;cursor:pointer;transition:all .2s ease-in-out;text-align:left;margin:0;width:100%}.cc-sdk .cc-select-option:first-of-type{border-radius:4px 4px 0 0}.cc-sdk .cc-select-option:last-of-type{border-bottom:0;border-radius:0 0 4px 4px}.cc-sdk .cc-select-option.selection,.cc-sdk .cc-select-option:hover{background:#eaeaea}.cc-sdk .cc-select-wrapper.down .cc-select-options-container,.cc-sdk .cc-select-wrapper.down .cc-select.opened .cc-select-options-container{transform:translateY(20px)}.cc-sdk .cc-question-container[data-type=nps] .cc-question-container__content,.cc-sdk .cc-question-container[data-type=scale] .cc-question-container__content{width:40%}@media (max-width:768px){.cc-sdk .cc-select,.cc-sdk .cc-select-wrapper{min-width:100%}.cc-sdk .cc-select{margin-left:0}.cc-sdk .cc-select-trigger{min-width:100%;width:auto}}[dir=rtl].cc-sdk .cc-select-trigger{padding:0 22px 0 84px;background-position:97%;background-repeat:no-repeat;text-align:right}[dir=rtl].cc-sdk .cc-select-trigger:after{top:50%;left:2px;right:auto}[dir=rtl].cc-sdk .cc-select-option{text-align:right}[dir=rtl].cc-sdk .cc-select-option:first-of-type{border-radius:4px 0 0 4px}[dir=rtl].cc-sdk .cc-select-option:last-of-type{border-radius:0 4px 4px 0}.cc-sdk .cc-checkbox{display:table-cell;vertical-align:middle;position:relative;text-align:center}.cc-sdk .cc-checkbox label{cursor:pointer;display:block;height:25px}.cc-sdk .cc-checkbox+span label img{width:40px;display:inline-block;vertical-align:middle}.cc-sdk .cc-checkbox label:after,.cc-sdk .cc-checkbox label:before{content:\\\"\\\";left:0;margin:auto;position:absolute;top:calc(50% - 12.5px)}.cc-sdk .cc-checkbox label:before{background:transparent;border-radius:2px;border:1px solid #424242;cursor:pointer;height:20px;transition:background .3s;width:20px}.cc-sdk .cc-checkbox input[type=checkbox]{opacity:0;outline:0}.cc-sdk .cc-checkbox input[type=checkbox]:checked+label:before{background:#fdaf19;border:none}.cc-sdk .cc-checkbox input[type=checkbox]:checked+label:after{border:3px solid #222;border-right-style:none;border-top-style:none;height:7px;top:calc(50% - 8.5px);left:4px;transform:rotate(-45deg);width:12px}.cc-sdk .cc-checkbox.cc-radio label:before{background:transparent;border:1px solid #424242;cursor:pointer;height:25px;transition:background-color .3s;width:25px}.cc-sdk .cc-checkbox input[type=radio]{opacity:0;outline:0}.cc-sdk .cc-checkbox input[type=radio]:checked+label:before{background:transparent;border-color:#fdaf19}.cc-sdk .cc-question-container__list li{display:inline-table;margin-bottom:0}.cc-sdk .cc-question-container__list li .cc-radio,.cc-sdk .cc-question-container__list li .cc-sdk .cc-checkbox{width:30px}.cc-sdk .cc-checkbox input[type=radio]:checked+label:after{-moz-transform:scale(.8);-ms-transform:scale(.8);-o-transform:scale(.8);-webkit-transform:scale(.8);background:#fdaf19;border-radius:30px;height:25px;transform:scale(.8);width:25px}.cc-sdk .cc-radio label:before{border-radius:30px}.cc-sdk .radio-toggle--more-option li span{padding-left:25px!important;width:125px!important}.cc-sdk .radio-toggle .cc-question-container__list li{padding-left:15px}@media (min-width:1000px){.cc-sdk .radio-toggle .cc-question-container__list li span label{overflow:hidden;max-height:100px;display:block}}@media (min-width:769px) and (max-width:992px){.cc-sdk .radio-toggle .cc-question-container__list li{padding-left:10px}.cc-sdk .radio-toggle .cc-question-container__list li span .label,.cc-sdk .radio-toggle .cc-question-container__list li span label{display:block;max-height:50px;overflow:hidden;text-overflow:ellipsis}}@media (max-width:768px){.cc-sdk .radio-toggle .cc-question-container__list li{padding-left:0;display:block;padding-right:50px}}.cc-sdk .progress-bar{width:100%;position:absolute;background:#a47c2b;z-index:1;height:8px;left:0}.cc-sdk .progress-line{background:#fdaf19;height:100%;display:block;width:0;transition:all .4s ease-in}@media screen and (max-width:768px){.cc-sdk .progress-bar{bottom:unset;top:0}}.cc-sdk .cc-scrollbar-wrapper{float:left;height:100%;overflow:hidden;position:relative;width:100%;z-index:1}.cc-sdk .cc-scrollbar-content{box-sizing:border-box;height:100%;overflow:auto;position:relative;width:107%}.cc-sdk .cc-scrollbar-scroll{background:#aaa;border-radius:4px;cursor:pointer;opacity:0;position:relative;top:0;transition:opacity .25s linear;width:9px;z-index:2}.cc-sdk .cc-scrollbar-container:hover .cc-scrollbar-scroll{opacity:1}.cc-sdk .cc-scrollbar-grabbed{-moz-user-select:none;-o-user-select:none;-webkit-user-select:none;user-select:none}.cc-sdk .cc-sdk-range{-webkit-appearance:none;-moz-appearance:none;width:500px;height:60px;background:transparent}.cc-sdk input[type=range]::-webkit-slider-runnable-track{-webkit-appearance:none;background:#ff403d;background:linear-gradient(135deg,#ff403d,#992a28);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=\\\"#ff403d \\\",endColorstr=\\\"#992a28 \\\",GradientType=1);height:1px}.cc-sdk input[type=range]:focus{outline:none}.cc-sdk input[type=range]::-moz-range-track{-moz-appearance:none;background:#ff403d;background:linear-gradient(135deg,#7a0806,#992a28);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=\\\"#ff403d \\\",endColorstr=\\\"#992a28 \\\",GradientType=1);height:1px}.cc-sdk input[type=range]::-ms-track{height:1px;width:500px;background-color:#ff403d}.cc-sdk input[type=range]::-webkit-slider-thumb{-webkit-appearance:none;border:1px solid #ff403d;border-radius:50%;height:32px;width:32px;max-width:80px;position:relative;bottom:16px;background-color:#fff;cursor:-webkit-grab}.cc-sdk input[type=range]::-ms-thumb{border:1px solid #ff403d;border-radius:50%;height:32px;width:32px;background:#e08692;box-sizing:border-box;cursor:pointer!important}.cc-sdk input[type=range]::-moz-range-thumb{-moz-appearance:none;border:1px solid #ff403d;border-radius:50%;height:32px;width:32px;max-width:80px;position:relative;bottom:16px;background-color:#fff;cursor:-moz-grab}.cc-sdk input[type=range]::-moz-range-thumb:before{content:\\\"asd\\\"}.cc-sdk input[type=range]::-webkit-slider-thumb:active{cursor:-webkit-grabbing}.cc-sdk input[type=range]::-moz-range-thumb:active{cursor:-moz-grabbing}.cc-sdk .cc-question-container__content.cc-sdk-range-slider{height:50px}.cc-sdk .slider-tip{background:#eb1c23;padding:8px 9px 9px;position:absolute;left:0;right:0;margin:0 auto;color:#fff;background:none;color:#424242;font-size:13px;width:100px;display:inline-block;text-align:center;font-weight:700}.cc-sdk .slider-tip:after{border-width:5px 5px 0;border-top-color:#000}@media (max-width:1024px){.cc-sdk .cc-sdk-range{width:100%}}.cc-sdk input.cc-sdk-range.cc-blue::-moz-range-track,.cc-sdk input.cc-sdk-range.cc-blue::-webkit-slider-runnable-track{background:blue}.cc-sdk .chart{box-sizing:border-box;display:inline-block;height:21px;padding-top:22px;position:relative;vertical-align:top;width:21px}.cc-sdk .cc-sdk-chart span{display:block;font-size:2em;font-weight:400}.cc-sdk .cc-sdk-chart canvas{left:0;position:absolute;top:0}.cc-sdk .cc-sdk-loader{height:21px;left:28px;position:absolute;top:8px;width:21px}@media (min-width:769px){.cc-sdk .cc-sdk-chart canvas{margin-left:10px}}@media (max-width:768px){.cc-sdk .cc-sdk-loader{position:relative;left:auto;top:0;right:auto}}[dir=rtl].cc-sdk .cc-sdk-chart canvas{right:0;left:auto}[dir=rtl].cc-sdk .cc-sdk-loader{right:28px;left:auto}@media (min-width:768px){[dir=rtl].cc-sdk .cc-sdk-chart canvas{margin-right:10px;margin-left:0}}.cc-sdk .show{display:block!important}.cc-sdk .show-inline{display:inline-block!important}.cc-sdk .hide{display:none!important}.cc-sdk.bottom{bottom:0}.cc-sdk.right,.cc-sdk .right{right:0}.cc-sdk .left{left:0}.cc-sdk .top{top:0}.ccsdk-overlay{background:#fff;bottom:0;height:100%;left:0;position:absolute;top:0;width:100%;z-index:0}.ccsdk-overlay.ccsdk-glass{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/ww.png);background-repeat:no-repeat;background-size:cover}.ccsdk-clearfix{clear:both;display:block}.ccsdk-text-normal{font-weight:400}.cc-sdk ::-webkit-input-placeholder{color:#4c4c4c;font-family:Open Sans;font-size:13px;font-style:italic;font-weight:400}.cc-sdk .cc-sdk-form-control::-moz-placeholder{font-style:italic;font-size:13px;font-weight:400;font-family:Open Sans;color:#4c4c4c}.cc-sdk .cc-sdk-form-control:-ms-input-placeholder{font-style:italic;font-size:13px;font-weight:400;font-family:Open Sans;color:#4c4c4c}.cc-sdk .cc-sdk-form-control:-moz-placeholder{font-style:italic;font-size:13px;font-weight:400;font-family:Open Sans;color:#4c4c4c}@media (min-width:769px){.desktop-hide{display:none}}@media (max-width:768px){.mobile-hide{display:none}.cc-sdk-loader{position:relative;left:auto;top:0;right:auto}.ccsdk-overlay.welcome-overlay{background:rgba(210,42,53,.87)}}[dir=rtl].cc-sdk .submit-icon{left:0;right:auto;margin-left:75px}@media (max-width:768px){[dir=rtl].cc-sdk .submit-icon{position:absolute;left:auto;top:auto;bottom:30px;padding-left:0;right:20px;margin:0}}.cc-sdk:before{width:0;height:0;overflow:hidden;position:absolute;z-index:-1}.cc-sdk .yellow .progress-bar{background:#a47c2b}.cc-sdk .yellow .progress-line{background:#fdaf19}.cc-sdk .yellow .submit-icon{background-image:url(\\\"data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%2747px%27%20height%3D%2747px%27%20viewBox%3D%270%200%2047%2047%27%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%3E%3Ctitle%3EGroup%2016%3C%2Ftitle%3E%3Cdesc%3ECreated%20with%20Sketch.%3C%2Fdesc%3E%3Cdefs%3E%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%3Cfilter%20x%3D%27-18.1%25%27%20y%3D%27-12.9%25%27%20width%3D%27136.2%25%27%20height%3D%27136.2%25%27%20filterUnits%3D%27objectBoundingBox%27%20id%3D%27filter-2%27%3E%3CfeOffset%20dx%3D%270%27%20dy%3D%272%27%20in%3D%27SourceAlpha%27%20result%3D%27shadowOffsetOuter1%27%3E%3C%2FfeOffset%3E%3CfeGaussianBlur%20stdDeviation%3D%272%27%20in%3D%27shadowOffsetOuter1%27%20result%3D%27shadowBlurOuter1%27%3E%3C%2FfeGaussianBlur%3E%3CfeColorMatrix%20values%3D%270%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200.116423234%200%27%20type%3D%27matrix%27%20in%3D%27shadowBlurOuter1%27%3E%3C%2FfeColorMatrix%3E%3C%2Ffilter%3E%3C%2Fdefs%3E%3Cg%20id%3D%27Page-1%27%20stroke%3D%27none%27%20stroke-width%3D%271%27%20fill%3D%27none%27%20fill-rule%3D%27evenodd%27%3E%3Cg%20id%3D%271-copy-20%27%20transform%3D%27translate(-1246.000000%2C%20-664.000000)%27%3E%3Cg%20id%3D%27Group-16%27%20transform%3D%27translate(1250.000000%2C%20666.000000)%27%3E%3Cg%20id%3D%27Oval-4%27%3E%3Cuse%20fill%3D%27white%27%20fill-opacity%3D%271%27%20filter%3D%27url(%23filter-2)%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3Cuse%20fill%3D%27%23d04a49%27%20fill-rule%3D%27evenodd%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3C%2Fg%3E%3Cg%20id%3D%27Group-5%27%20transform%3D%27translate(12.000000%2C%2011.000000)%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23FFFFFF%27%3E%3Cg%20id%3D%27fast-forward-arrows%27%20transform%3D%27translate(6.173934%2C%200.000000)%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3Cg%20id%3D%27fast-forward-arrows-copy%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\\\")}.cc-sdk .yellow .cc-checkbox input[type=checkbox]:checked+label:before{background:#fdaf19}.cc-sdk .yellow .cc-checkbox input[type=checkbox]:checked+label:after{border-color:#222}.cc-sdk .yellow .cc-checkbox input[type=radio]:checked+label:before{border-color:#fdaf19}.cc-sdk .yellow .cc-checkbox input[type=radio]:checked+label:after{background:#fdaf19}.cc-sdk .yellow .cc-sdk-form-control:focus{border-color:#fcaf18}.cc-sdk .yellow .cc-message-box__btn{background:#fdaf19}.cc-sdk .red .progress-bar{background:#d22a35}.cc-sdk .red .progress-line{background:#d22a35;filter:brightness(150%)}.cc-sdk .red .cc-checkbox input[type=checkbox]:checked+label:before{background:#d22a35}.cc-sdk .red .cc-checkbox input[type=checkbox]:checked+label:after{border-color:#fff}.cc-sdk .red .cc-checkbox input[type=radio]:checked+label:before{border-color:#d22a35}.cc-sdk .red .cc-checkbox input[type=radio]:checked+label:after{background:#d22a35}.cc-sdk .red .cc-sdk-form-control:focus{border-color:#d22a35}.cc-sdk .red .cc-message-box__btn{background:#d22a35;color:#fff}.cc-question-container,.hide-slide{transform:translateX(5px)}.cc-question-container,.hide-bottom-up,.hide-slide{transition:transform .3s ease,opacity .3s ease,visibility .3s ease;visibility:hidden;opacity:0}.hide-bottom-up{transform:translateY(30px)}.hide-up-bottom{transform:translateY(100%)}.hide-right-left,.hide-up-bottom{transition:transform .3s ease,opacity .3s ease,visibility .3s ease;visibility:hidden;opacity:0}.hide-right-left{transform:translateX(100%)}.hide-left-right{transform:translateX(-100%);visibility:hidden;opacity:0}.hide-left-right,.show-slide,.show-thankyou-slide{transition:transform .3s ease,opacity .3s ease,visibility .3s ease}.show-slide,.show-thankyou-slide{visibility:visible;opacity:1;transform:translateX(0) translateY(0)}.cc-sdk #timer{position:relative}.cc-sdk svg.cc-sdk-timer{position:absolute;top:0;left:0;width:40px;height:40px;transform:rotateY(-180deg) rotate(-90deg)}[dir=rtl].cc-sdk svg.cc-sdk-timer{right:0;left:auto}.cc-sdk svg.cc-sdk-timer circle{stroke-dasharray:50px;stroke-dashoffset:0px;stroke-linecap:round;stroke-width:2px;stroke:red;fill:none;animation:countdown 10s linear 1 forwards}@keyframes countdown{0%{stroke-dashoffset:0px}to{stroke-dashoffset:50px}}.cc-sdk .cc-loaderimg{position:absolute;width:100%;z-index:1000;left:0;right:0;top:0;height:100%;background:hsla(0,0%,100%,.8)}.cc-sdk .cc-loaderimg svg{width:100px}\", \"\"]);\n\n// exports\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function() {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\tvar result = [];\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar item = this[i];\n\t\t\tif(item[2]) {\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\n\t\t\t} else {\n\t\t\t\tresult.push(item[1]);\n\t\t\t}\n\t\t}\n\t\treturn result.join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(selector) {\n\t\tif (typeof memo[selector] === \"undefined\") {\n\t\t\tmemo[selector] = fn.call(this, selector);\n\t\t}\n\n\t\treturn memo[selector]\n\t};\n})(function (target) {\n\treturn document.querySelector(target)\n});\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton) options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n\tif (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\toptions.attrs.type = \"text/css\";\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\toptions.attrs.type = \"text/css\";\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","\r\nimport { LanguageTextFilter } from './LanguageTextFilter';\r\nimport { isAnd, doesSatisfy, isOr, checkLanguage } from './filter-utils';\r\n\r\nclass ConditionalTextFilter {\r\n  public static filterText( surveyHandler: any, question: any ): string {\r\n    let conditionalText = question.text == null ? '' : LanguageTextFilter.translateQuestionText( surveyHandler, question );\r\n    if ( question.text != null ) {\r\n      let conditionalText: string = question.text.split( ':' );\r\n      if ( question.setName && question.text.indexOf( \":\" ) !== -1 ) {\r\n        conditionalText = conditionalText[ 0 ] + ': <br><span class=\"text-normal\">' + conditionalText[ 1 ] + '</span>';\r\n      } else {\r\n        conditionalText = conditionalText[ 0 ];\r\n      }\r\n    }\r\n    if ( question.leadingDisplayTexts == null ) {\r\n      conditionalText = LanguageTextFilter.translateQuestionText( surveyHandler, question );\r\n      return conditionalText;\r\n    } else if ( question.leadingDisplayTexts.length == 0 ) {\r\n      conditionalText = LanguageTextFilter.translateQuestionText( surveyHandler, question );\r\n      return conditionalText;\r\n    } else {\r\n      for ( let fOption of question.leadingDisplayTexts ) {\r\n        if ( fOption != null && fOption.filter != null && fOption.filter.filterquestions != null ) {\r\n          let iSatisfied: boolean = false;\r\n          let iFailed: boolean = false;\r\n          for ( let filterByQuestion of fOption.filter.filterquestions ) {\r\n            if ( isAnd( filterByQuestion ) ) {\r\n              if ( doesSatisfy( surveyHandler, filterByQuestion ) && !iFailed ) {\r\n                iSatisfied = true;\r\n              } else {\r\n                iFailed = true;\r\n                break;\r\n              }\r\n            } else if ( isOr( filterByQuestion ) ) {\r\n              if ( doesSatisfy( surveyHandler, filterByQuestion ) ) {\r\n                iSatisfied = true;\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          if ( iSatisfied && !iFailed ) {\r\n            if ( checkLanguage( surveyHandler, fOption )\r\n              || ( surveyHandler.ccsdk.config && surveyHandler.ccsdk.config.language\r\n                && surveyHandler.ccsdk.config.language.toLowerCase().includes( 'default' )\r\n                && fOption.language === null )\r\n              || ( surveyHandler.ccsdk.config && !surveyHandler.ccsdk.config.language && fOption.language === null ) ) {\r\n              let groupTitle;\r\n              if ( question.setName && conditionalText.indexOf( ':' ) !== -1 ) {\r\n                groupTitle = conditionalText.split( ':' )[ 0 ];\r\n                conditionalText = groupTitle + ': <br><span class=\"text-normal\">' + fOption.text + '</span>';\r\n              } else {\r\n                conditionalText = fOption.text;\r\n              }\r\n            }\r\n            conditionalText;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return conditionalText;\r\n  }\r\n}\r\n\r\nexport { ConditionalTextFilter };","import { DomUtilities } from \"./DomUtilities\";\r\n// import { ScrollBar } from './ScrollBar';\r\nimport { Select } from \"./Select\";\r\nimport { Theme } from \"./Theme\";\r\nimport { ConditionalFlowFilter } from \"../filters/ConditionalFlowFilter\";\r\nimport { Slider } from \"./Slider\";\r\nimport { Constants } from \"../../Constants\";\r\n\r\nclass DomSurvey {\r\n  util: DomUtilities;\r\n  // scrollbar : ScrollBar;\r\n  domListeners: any;\r\n  select: Select;\r\n  theme: Theme;\r\n  qIndex: number;\r\n  currentQuestionId: string;\r\n  $questionContainer: any;\r\n  $innerQuestionContainer: any;\r\n  $popupContainer: any;\r\n  $popupContainer2: any;\r\n  $body: any;\r\n  qResponse: any;\r\n  trackSelects: any = [];\r\n  trackRadios: any = [];\r\n  ccsdk: any;\r\n  currentQuestionListeners: any = [];\r\n  trackSetupListeners: any;\r\n  $startBtn: any;\r\n  bodyElement: any;\r\n\r\n  constructor(ccsdk: any) {\r\n    let self: DomSurvey = this;\r\n    this.domListeners = [];\r\n    this.ccsdk = ccsdk;\r\n    this.qIndex = 0;\r\n    this.qResponse = {};\r\n    this.domSelectElements();\r\n    this.util = new DomUtilities();\r\n    // self.scrollbar = new ScrollBar(\"data-cc-scrollbar\");\r\n    this.util.ready(function () {\r\n      // self.util.addClassAll(self.$popupContainer,'show-slide');\r\n    });\r\n  }\r\n\r\n  setTheme(brandColor, time) {\r\n    let self: DomSurvey = this;\r\n    this.util.ready(function () {\r\n      self.theme = new Theme(brandColor, time);\r\n    });\r\n  }\r\n\r\n  setQIndex(index: number) {\r\n    this.qIndex = index;\r\n  }\r\n\r\n  getQindex() {\r\n    return this.qIndex;\r\n  }\r\n\r\n  domSelectElements() {\r\n    this.$questionContainer = document.querySelectorAll(\r\n      \".cc-questions-container\"\r\n    );\r\n    this.$popupContainer = document.querySelectorAll(\".cc-popup-container\");\r\n    this.$popupContainer2 = document.querySelectorAll(\".cc-popup-container-2\");\r\n    this.$body = document.querySelectorAll(\"body\")[0];\r\n    // this.select = new Select();\r\n  }\r\n\r\n  removePrevListener(id: string): boolean {\r\n    for (let listener of this.domListeners) {\r\n      if (listener.id == id) {\r\n        let index = this.domListeners.indexOf(listener);\r\n        (window as any).ccsdkDebug ? console.log(\"removing listener\", id) : \"\";\r\n        (window as any).ccsdkDebug\r\n          ? console.log(\"removing listener index\", index)\r\n          : \"\";\r\n        this.util.removeListener(\r\n          this.$body,\r\n          listener.type,\r\n          listener.internalHandler\r\n        );\r\n        if (index > -1) {\r\n          this.domListeners.splice(index, 1);\r\n        }\r\n        (window as any).ccsdkDebug ? console.log(this.domListeners) : \"\";\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  setupListeners() {\r\n    let self = this;\r\n    let startSurvey = this.util.initListener(\r\n      \"click\",\r\n      \".act-cc-survey-start\",\r\n      function () {\r\n        if (\r\n          !self.util.hasClass(self.$startBtn, \"disabled\") &&\r\n          self.ccsdk.surveyStatus != \"minimized\"\r\n        ) {\r\n          let onSurveyClickEvent = new CustomEvent(\r\n            Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken\r\n          );\r\n          document.dispatchEvent(onSurveyClickEvent);\r\n          self.util.addClass(self.$startBtn, \"disabled\");\r\n          self.showLoader();\r\n          self.startSurvey();\r\n        } else {\r\n          self.initSurveyDom();\r\n        }\r\n      }\r\n    );\r\n    this.domListeners.push(startSurvey);\r\n\r\n    startSurvey.internalHandler = this.util.listener(\r\n      this.$body,\r\n      startSurvey.type,\r\n      startSurvey.id,\r\n      startSurvey.cb\r\n    );\r\n\r\n    let nextQue = this.util.initListener(\r\n      \"click\",\r\n      \".act-cc-button-next\",\r\n      function () {\r\n        // alert(\"working\");\r\n        let onSurveyClickEvent = new CustomEvent(\r\n          Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken\r\n        );\r\n        document.dispatchEvent(onSurveyClickEvent);\r\n        self.nextQuestion();\r\n      }\r\n    );\r\n    this.domListeners.push(nextQue);\r\n\r\n    nextQue.internalHandler = this.util.listener(\r\n      this.$body,\r\n      nextQue.type,\r\n      nextQue.id,\r\n      nextQue.cb\r\n    );\r\n\r\n    let prevQue = this.util.initListener(\r\n      \"click\",\r\n      \".act-cc-button-prev\",\r\n      function () {\r\n        let onSurveyClickEvent = new CustomEvent(\r\n          Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken\r\n        );\r\n        document.dispatchEvent(onSurveyClickEvent);\r\n        self.prevQuestion();\r\n      }\r\n    );\r\n    this.domListeners.push(prevQue);\r\n\r\n    prevQue.internalHandler = this.util.listener(\r\n      this.$body,\r\n      prevQue.type,\r\n      prevQue.id,\r\n      prevQue.cb\r\n    );\r\n\r\n    let closeSurvey = this.util.initListener(\r\n      \"click\",\r\n      \".act-cc-button-close\",\r\n      function () {\r\n        let onSurveyCloseEvent = new CustomEvent(\r\n          Constants.SURVEY_CLOSE_EVENT + \"-\" + self.ccsdk.surveyToken\r\n        );\r\n        document.dispatchEvent(onSurveyCloseEvent);\r\n        self.ccsdk.survey.answers = {};\r\n        self.trackSelects = [];\r\n        self.destroyListeners();\r\n        self.util.trigger(document, \"ccclose\", undefined);\r\n        self.bodyElement = <HTMLElement>(\r\n          document.getElementsByTagName(\"body\")[0]\r\n        );\r\n        self.util.removeClass(self.bodyElement, \"blurr\");\r\n        self.ccsdk.survey.destroy();\r\n      }\r\n    );\r\n    this.domListeners.push(closeSurvey);\r\n\r\n    closeSurvey.internalHandler = this.util.listener(\r\n      this.$body,\r\n      closeSurvey.type,\r\n      closeSurvey.id,\r\n      closeSurvey.cb\r\n    );\r\n\r\n    let minSurvey = this.util.initListener(\r\n      \"click\",\r\n      \".act-cc-button-minimize\",\r\n      function () {\r\n        self.minimizeSurvey();\r\n      }\r\n    );\r\n    this.domListeners.push(minSurvey);\r\n\r\n    minSurvey.internalHandler = this.util.listener(\r\n      self.$body,\r\n      minSurvey.type,\r\n      minSurvey.id,\r\n      minSurvey.cb\r\n    );\r\n  }\r\n\r\n  minimizeSurvey() {\r\n    // this.$popupContainer[0].removeClass('');\r\n    this.util.removeClass(this.$popupContainer2[0], \"hide-right-left\");\r\n    this.util.addClass(this.$popupContainer2[0], \"hide-right-left\");\r\n    setTimeout(() => {\r\n      this.util.removeClass(this.$popupContainer2[0], \"show-slide\");\r\n    }, 200);\r\n    this.util.removeClass(this.$popupContainer[0], \"hide-right-left\");\r\n    this.util.addClass(this.$popupContainer[0], \"hide-right-left\");\r\n    setTimeout(() => {\r\n      this.util.addClass(this.$popupContainer[0], \"show-slide\");\r\n    }, 200);\r\n    this.ccsdk.surveyStatus = \"minimized\";\r\n    let resumeText = this.ccsdk.config.resumeButtonText\r\n      ? this.ccsdk.config.resumeButtonText\r\n      : \"Resume\";\r\n    this.$startBtn.innerHTML = resumeText;\r\n    this.util.removeClass(this.$startBtn, \"disabled\");\r\n\r\n    //update all start btns\r\n    // Array.prototype.forEach.call($startBtn, (el, i) => {\r\n    //   el.innerHTML = resumeText;\r\n    // });\r\n  }\r\n\r\n  destroyListeners() {\r\n    // (window as any).ccsdkDebug?console.log(\"Removing all listeners\"):'';\r\n    for (let listener of this.domListeners) {\r\n      this.util.removeListener(\r\n        this.$body,\r\n        listener.type,\r\n        listener.internalHandler\r\n      );\r\n    }\r\n    for (let listener of this.ccsdk.survey.domListeners) {\r\n      this.util.removeListener(\r\n        this.$body,\r\n        listener.type,\r\n        listener.internalHandler\r\n      );\r\n    }\r\n    if (this.ccsdk.survey.languageSelect) {\r\n      this.ccsdk.survey.languageSelect.destroyListeners();\r\n    }\r\n    if (this.select) {\r\n      this.select.destroyListeners();\r\n    }\r\n  }\r\n\r\n  startSurvey() {\r\n    this.ccsdk.survey.cancelKillWelcomeQuestion();\r\n    this.ccsdk.getSurveyData();\r\n  }\r\n\r\n  initSurveyDom() {\r\n    this.domSelectElements();\r\n    // (window as any).ccsdkDebug?console.log(\"click in setup listener survey start\"):'';\r\n    this.util.addClassAll(this.$popupContainer2, \"show-slide\");\r\n    this.util.removeClass(this.$popupContainer[0], \"show-slide\");\r\n    if (this.ccsdk.surveyStatus == \"minimized\") {\r\n      //resume survey\r\n    } else {\r\n      //start survey\r\n      //check if only one language is configured\r\n      (window as any).ccsdkDebug ? console.log(this.ccsdk.surveyData) : \"\";\r\n      if (\r\n        this.ccsdk.surveyData.translated === null ||\r\n        (this.ccsdk.surveyData.translated &&\r\n          Object.keys(this.ccsdk.surveyData.translated).length < 1)\r\n      ) {\r\n        this.loadFirstQuestion();\r\n      } else {\r\n        this.ccsdk.survey.displayLanguageSelector();\r\n      }\r\n    }\r\n  }\r\n\r\n  updateProgress() {\r\n    let el = <HTMLElement>document.querySelectorAll(\"#progress-line\")[0];\r\n    if (this.ccsdk && this.ccsdk.tracking) {\r\n      this.ccsdk.tracking.trackEvent(\r\n        \"Questions Answered\",\r\n        {\r\n          token: this.ccsdk.surveyToken,\r\n          data: {\r\n            name: `${this.qIndex}/${\r\n              this.ccsdk.survey.questionsToDisplay.length\r\n              }`,\r\n            action: this.currentQuestionId\r\n          }\r\n        },\r\n        null,\r\n        null\r\n      );\r\n    }\r\n    el.style.width =\r\n      (this.qIndex / this.ccsdk.survey.questionsToDisplay.length) * 100 + \"%\";\r\n  }\r\n\r\n  loadFirstQuestion() {\r\n    // applyRuleToAllEl(this.$questionContainer, );\r\n    // this.util.removeClassAll(this.$questionContainer, 'show-slide');\r\n    // this.util.addClass(this.$questionContainer, 'show-slide');\r\n\r\n    this.loadQuestionSpecifics(this.$questionContainer, 0);\r\n    this.util.removeClassAll(\r\n      this.$questionContainer[0].firstChild,\r\n      \"show-slide\"\r\n    );\r\n    this.util.addClass(this.$questionContainer[0].firstChild, \"show-slide\");\r\n    let leftIcon: any = this.util.get(\".act-cc-button-prev\");\r\n    this.util.addClassAll(leftIcon, \"hide-slide\");\r\n    let onSurveyQuestionEvent = new CustomEvent(\r\n      Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken\r\n    );\r\n    document.dispatchEvent(onSurveyQuestionEvent);\r\n  }\r\n\r\n  nextQuestion() {\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"next question q response init\", this.qResponse)\r\n      : \"\";\r\n    // console.log('next question q response init',this.qResponse);\r\n    //empty the domListner\r\n    // this.util.removeAllListeners(this.domListeners);\r\n    let onSurveyQuestionEvent = new CustomEvent(\r\n      Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken\r\n    );\r\n    document.dispatchEvent(onSurveyQuestionEvent);\r\n    //submit the current response\r\n    // (window as any).ccsdkDebug?console.log('submit ',this.qResponse.type, this.qResponse):'';\r\n    let isRequired: boolean = false;\r\n    let q: HTMLElement = this.$questionContainer[0].firstChild;\r\n    // (window as any).ccsdkDebug?console.log(this.$questionContainer):'';\r\n    let span: Element = this.$questionContainer[0].firstChild.querySelectorAll(\r\n      \".cc-question-container__required\"\r\n    )[0];\r\n    let validationSpan: Element = this.$questionContainer[0].firstChild.querySelectorAll(\r\n      \".cc-question-container__validation\"\r\n    )[0];\r\n    if (span) this.util.removeClass(span, \"show\");\r\n    if (validationSpan) this.util.removeClass(validationSpan, \"show\");\r\n\r\n    //check if question is required\r\n    isRequired =\r\n      q.getAttribute(\"data-required\").toLowerCase() == \"true\" ? true : false;\r\n    // console.log('required check',Object.keys(this.qResponse).length, isRequired, this.qResponse);\r\n    // if (isRequired && Object.keys(this.qResponse).length === 0) {\r\n    if (isRequired && Object.keys(this.qResponse).length === 0) {\r\n      if (span) {\r\n        this.util.addClass(span, \"show\");\r\n        this.util.removeClass(span, \"hide\");\r\n      }\r\n      return;\r\n    } else if (isRequired && !this.qResponse.text && !this.qResponse.number) {\r\n      if (span) {\r\n        this.util.addClass(span, \"show\");\r\n        this.util.removeClass(span, \"hide\");\r\n      }\r\n      return;\r\n    } else {\r\n      if (span) {\r\n        this.util.removeClass(span, \"show\");\r\n        this.util.addClass(span, \"hide\");\r\n      }\r\n\r\n      //check if validationRegex is set and is fulfilled\r\n      let validationRegex = this.ccsdk.survey.questionsToDisplay[this.qIndex]\r\n        .validationRegex;\r\n      if (validationRegex) {\r\n        (window as any).ccsdkDebug\r\n          ? console.log(\"validationRegex\", validationRegex)\r\n          : \"\";\r\n        (window as any).ccsdkDebug\r\n          ? console.log(\"response\", this.qResponse)\r\n          : \"\";\r\n        let pattern = validationRegex.match(new RegExp(\"^/(.*?)/([gimy]*)$\"));\r\n        let regex = new RegExp(validationRegex);\r\n        if (this.qResponse.text) {\r\n          if (regex.test(this.qResponse.text)) {\r\n            this.util.removeClass(validationSpan, \"show\");\r\n            this.util.addClass(validationSpan, \"hide\");\r\n          } else {\r\n            if (validationSpan) {\r\n              this.util.addClass(validationSpan, \"show\");\r\n              this.util.removeClass(validationSpan, \"hide\");\r\n            }\r\n            return;\r\n          }\r\n        } else if (this.qResponse.number) {\r\n          (window as any).ccsdkDebug\r\n            ? console.log(\"test regex text\", regex.test(this.qResponse.number))\r\n            : \"\";\r\n\r\n          if (regex.test(this.qResponse.number)) {\r\n            this.util.removeClass(validationSpan, \"show\");\r\n            this.util.addClass(validationSpan, \"hide\");\r\n          } else {\r\n            if (validationSpan) {\r\n              this.util.addClass(validationSpan, \"show\");\r\n              this.util.removeClass(validationSpan, \"hide\");\r\n            }\r\n            return;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (this.qResponse !== \"undefined\") {\r\n        // (window as any).ccsdkDebug?console.log('qindex ' + this.qIndex):'';\r\n        if (\r\n          typeof this.ccsdk.survey.answers[this.currentQuestionId] !==\r\n          \"undefined\" &&\r\n          this.qResponse.type ==\r\n          this.ccsdk.survey.answers[this.currentQuestionId].type &&\r\n          this.qResponse.text ==\r\n          this.ccsdk.survey.answers[this.currentQuestionId].text &&\r\n          this.qResponse.number ==\r\n          this.ccsdk.survey.answers[this.currentQuestionId].number\r\n        ) {\r\n          // console.log('no submit');\r\n          //don't submit if already submitted.\r\n        } else if (\r\n          typeof this.ccsdk.survey.answers[this.currentQuestionId] !==\r\n          \"undefined\" &&\r\n          !this.qResponse.text &&\r\n          !this.qResponse.number\r\n        ) {\r\n          // console.log('no submit 2');\r\n          //previous entry filled\r\n        } else {\r\n          // (window as any).ccsdkDebug?console.log('submitting ' + this.currentQuestionId):'';\r\n          // console.log(this.qResponse);\r\n\r\n          let qId = this.qResponse.questionId\r\n            ? this.qResponse.questionId\r\n            : this.currentQuestionId;\r\n          this.submitQuestion(\r\n            this.qIndex,\r\n            this.qResponse,\r\n            this.qResponse.type,\r\n            qId\r\n          );\r\n          //save response\r\n          this.ccsdk.survey.answers[this.currentQuestionId] = JSON.parse(\r\n            JSON.stringify(this.qResponse)\r\n          );\r\n        }\r\n      }\r\n    }\r\n    ConditionalFlowFilter.filterQuestion(\r\n      this.ccsdk.survey,\r\n      this.ccsdk.survey.questionsToDisplay[this.qIndex]\r\n    );\r\n    // console.log(this.ccsdk.survey.questionsToDisplay);\r\n    //go to next question\r\n    this.qIndex++;\r\n    //reset the post parameters\r\n    // this.qResponse = typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined' ? JSON.parse(JSON.stringify(this.ccsdk.survey.answers[this.currentQuestionId])) : {};\r\n    // this.qResponse = {};\r\n    let nextButtonState: string = \"initial\";\r\n    // (window as any).ccsdkDebug?console.log(this.$questionContainer):'';\r\n    let nextQ: HTMLElement = this.$questionContainer;\r\n    // (window as any).ccsdkDebug?console.log(this.qIndex):'';\r\n    if (this.qIndex == this.ccsdk.survey.questionsToDisplay.length) {\r\n      //Last run to show thank you message\r\n      let leftIcon: any = this.util.get(\".act-cc-button-prev\");\r\n      let rightIcon: any = this.util.get(\".cc-icon-right\");\r\n      let nextIcon: any = this.util.get(\".act-cc-button-next\");\r\n      this.util.addClassAll(leftIcon, \"hide\");\r\n      this.util.addClassAll(rightIcon, \"hide\");\r\n      this.util.addClassAll(nextIcon, \"hide\");\r\n      this.util.trigger(document, \"ccdone\", undefined);\r\n      this.util.removeClass(\r\n        this.$questionContainer[0].firstChild,\r\n        \"show-slide\"\r\n      );\r\n      this.updateProgress();\r\n    } else {\r\n      if (this.qIndex > this.ccsdk.survey.questionsToDisplay.length) {\r\n        //reset the counter to show first question\r\n        this.qIndex = 0;\r\n      }\r\n      //repopulate qResponse based on answers.\r\n      // ( window as any ).ccsdkDebug ? console.log( 'previous answer', this.ccsdk.survey.answers[ this.currentQuestionId ] ) : '';\r\n      this.qResponse =\r\n        typeof this.ccsdk.survey.answers[this.currentQuestionId] !== \"undefined\"\r\n          ? JSON.parse(\r\n            JSON.stringify(this.ccsdk.survey.answers[this.currentQuestionId])\r\n          )\r\n          : {};\r\n      // this.util.removeClassAll(this.$questionContainer[0].firstChild, 'show-slide');\r\n      // this.util.addClass(nextQ, 'show-slide');\r\n      this.updateProgress();\r\n      this.loadQuestionSpecifics(nextQ, this.qIndex);\r\n      this.util.addClass(this.$questionContainer[0].firstChild, \"show-slide\");\r\n      // if(nextButtonState === 'dirty'){\r\n      // this.submitQuestion(this.qIndex, 'test', 'multiline');\r\n      // }\r\n    }\r\n    if (this.qIndex == 0) {\r\n      let leftIcon: any = this.util.get(\".act-cc-button-prev\");\r\n      this.util.addClassAll(leftIcon, \"hide-slide\");\r\n    } else {\r\n      let leftIcon: any = this.util.get(\".act-cc-button-prev\");\r\n      this.util.addClass(leftIcon[0], \"show-slide\");\r\n      this.util.removeClass(leftIcon[0], \"hide-slide\");\r\n    }\r\n    // ( window as any ).ccsdkDebug ? console.log( 'next question q response end', this.qResponse ) : '';\r\n    // this.qResponse = {};\r\n  }\r\n\r\n  prevQuestion() {\r\n    this.submitQuestion(\r\n      this.qIndex,\r\n      { ...this.qResponse },\r\n      this.qResponse.type,\r\n      this.currentQuestionId\r\n    );\r\n    this.ccsdk.survey.answers[this.currentQuestionId] = JSON.parse(\r\n      JSON.stringify(this.qResponse)\r\n    );\r\n\r\n    this.qIndex--;\r\n    if (!this.ccsdk.survey.questionsToDisplay.length || this.qIndex < 0) {\r\n      this.qIndex = 0;\r\n      return;\r\n      // this.qIndex = this.$questionContainer.length - 1;\r\n    }\r\n    // ( window as any ).ccsdkDebug ? console.log( this.qIndex ) : '';\r\n    let onSurveyQuestionEvent = new CustomEvent(\r\n      Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken\r\n    );\r\n    document.dispatchEvent(onSurveyQuestionEvent);\r\n    //re populate qResponse based on answers.\r\n    // this.util.removeClassAll(this.$questionContainer,'show-slide');\r\n    this.loadQuestionSpecifics(null, this.qIndex);\r\n    this.qResponse =\r\n      typeof this.ccsdk.survey.answers[this.currentQuestionId] !== \"undefined\"\r\n        ? JSON.parse(\r\n          JSON.stringify(this.ccsdk.survey.answers[this.currentQuestionId])\r\n        )\r\n        : {};\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"prevQuestion qResponse\", this.qResponse)\r\n      : \"\";\r\n    this.util.addClass(this.$questionContainer[0].firstChild, \"show-slide\");\r\n    this.updateProgress();\r\n    if (this.qIndex == 0) {\r\n      let leftIcon: any = this.util.get(\".act-cc-button-prev\");\r\n      this.util.addClassAll(leftIcon, \"hide-slide\");\r\n      this.util.removeClassAll(leftIcon, \"show-slide\");\r\n    }\r\n  }\r\n\r\n  showLoader() {\r\n    let $loader = document.querySelectorAll(\".cc-loaderimg\")[0];\r\n    this.util.addClass($loader, \"show\");\r\n    this.util.removeClass($loader, \"hide\");\r\n  }\r\n  hideLoader() {\r\n    let $loader = document.querySelectorAll(\".cc-loaderimg\")[0];\r\n    this.util.removeClass($loader, \"show\");\r\n    this.util.addClass($loader, \"hide\");\r\n  }\r\n\r\n  appendInBody(html) {\r\n    document.querySelectorAll(\"body\")[0].insertAdjacentHTML(\"afterbegin\", html);\r\n    //force update domSelect\r\n    this.domSelectElements();\r\n  }\r\n\r\n  replaceInQuestionsContainer(html) {\r\n    this.$questionContainer[0].innerHTML = html;\r\n    this.domSelectElements();\r\n  }\r\n\r\n  appendInQuestionsContainer(html) {\r\n    document\r\n      .querySelectorAll(\".cc-questions-container\")[0]\r\n      .insertAdjacentHTML(\"afterbegin\", html);\r\n    //force update domSelect\r\n    this.domSelectElements();\r\n  }\r\n\r\n  showWelcomeContainer() {\r\n    setTimeout(() => {\r\n      let startContainer = <HTMLElement>(\r\n        document.querySelectorAll(\".act-cc-welcome-question-box\")[0]\r\n      );\r\n      let bodyElement = <HTMLElement>document.getElementsByTagName(\"body\")[0];\r\n      this.util.addClass(startContainer, \"show-slide\");\r\n      // this.util.addClass( bodyElement, \"blurr\" );\r\n    }, 200);\r\n    // console.debug()\r\n    this.$startBtn = document.querySelectorAll(\".act-cc-survey-start\")[0];\r\n  }\r\n\r\n  showLanguageSelector() {\r\n    setTimeout(() => {\r\n      let startContainer = <HTMLElement>(\r\n        document.querySelectorAll(\".cc-language-selector\")[0]\r\n      );\r\n      let bodyElement = <HTMLElement>document.getElementsByTagName(\"body\")[0];\r\n      this.util.addClass(startContainer, \"show-slide\");\r\n      // this.util.addClass( bodyElement, \"blurr\" );\r\n    }, 200);\r\n    let self = this;\r\n    if (\r\n      this.util.checkIfListenerExists(\".cc-language-select\", this.domListeners)\r\n    ) {\r\n      // return;\r\n      // ( window as any ).ccsdkDebug ? console.log( \"language select - previous listeners exists\" ) : '';\r\n      this.removePrevListener(\".cc-language-select\");\r\n    }\r\n    let languageSelect = this.util.initListener(\r\n      \"click\",\r\n      \".cc-language-select\",\r\n      function () {\r\n        // let onSurveyClickEvent = new CustomEvent(Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n        // document.dispatchEvent(onSurveyClickEvent);\r\n        //select language show next question.\r\n        // self.startSurvey();\r\n        self.ccsdk.config.language = \"default\";\r\n        self.ccsdk.config.language = \"\"; //language selection from menu then show first question\r\n      }\r\n    );\r\n\r\n    languageSelect.internalHandler = this.util.listener(\r\n      this.$body,\r\n      languageSelect.type,\r\n      languageSelect.id,\r\n      languageSelect.cb\r\n    );\r\n  }\r\n\r\n  getSurveyContainer(token: string) {\r\n    return document.querySelectorAll(\"#\" + token + \"-survey\")[0];\r\n  }\r\n\r\n  getWelcomeContainer(token: string) {\r\n    return document.querySelectorAll(\"#\" + token + \"-welcome\")[0];\r\n  }\r\n\r\n  loadQuestionSpecifics(q: HTMLElement, index: number) {\r\n    let self: DomSurvey = this;\r\n    this.$questionContainer[0].innerHTML = \"\";\r\n    let compiledTemplate = this.ccsdk.survey.compileTemplate(\r\n      this.ccsdk.survey.questionsToDisplay[index]\r\n    );\r\n    this.$questionContainer[0].innerHTML += compiledTemplate;\r\n    let qType: string = this.$questionContainer[0].firstChild.getAttribute(\r\n      \"data-type\"\r\n    );\r\n    let qId: string = this.$questionContainer[0].firstChild.getAttribute(\r\n      \"data-id\"\r\n    );\r\n    this.qResponse = {};\r\n    // (window as any).ccsdkDebug?console.log(\"QTYIPE AND QID \" , qType, qId):'';\r\n    this.currentQuestionId = qId.substring(2, qId.length);\r\n    // console.log( 'qtype', qType )\r\n    switch (qType) {\r\n      case \"scale\":\r\n        let allOptions1: any = document.querySelectorAll(\r\n          \"#\" + qId + \" .option-number-item\"\r\n        );\r\n        let optionWidth1 = 100 / allOptions1.length - 0.6;\r\n        // (window as any).ccsdkDebug?console.log(\"Option width\", allOptions1, optionWidth1.toFixed(2)):'';\r\n        // self.util.css(allOptions1 , 'width',  optionWidth1.toFixed(1) + '%');\r\n        this.setupListenersQuestionScale(index, qId);\r\n        break;\r\n      case \"nps\":\r\n        this.setupListenersQuestionNPS(index, qId);\r\n        break;\r\n      case \"multiline\":\r\n        this.setupListenersQuestionMultiline(index, qId);\r\n        break;\r\n      case \"select\":\r\n        if (typeof this.select !== \"undefined\") {\r\n          this.select.destroyListeners();\r\n        }\r\n        this.setupListenersQuestionSelect(index, qId);\r\n        break;\r\n      case \"radio\":\r\n        this.setupListenersQuestionRadio(index, qId);\r\n        break;\r\n      case \"radioImage\":\r\n        this.setupListenersQuestionRadioImage(index, qId);\r\n        break;\r\n      case \"checkbox\":\r\n        this.setupListenersQuestionCheckbox(index, qId);\r\n        break;\r\n      case \"star\":\r\n        this.setupListenersQuestionStar(index, qId);\r\n        break;\r\n      case \"smile\":\r\n        this.setupListenersQuestionSmile(index, qId);\r\n        break;\r\n      case \"csat\":\r\n        this.setupListenersQuestionCsat(index, qId);\r\n        break;\r\n      case \"slider\":\r\n        this.setupListenersQuestionSlider(index, qId);\r\n        break;\r\n      case \"singleline\":\r\n        this.setupListenersQuestionSingleline(index, qId);\r\n        break;\r\n      case \"number\":\r\n        this.setupListenersQuestionNumber(index, qId);\r\n        break;\r\n      case \"date\":\r\n        this.setupListenersForDate(index, qId);\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  // question specific listeners\r\n\r\n  setupListenersQuestionScale(index: number, qId: string) {\r\n    var self: DomSurvey = this;\r\n    let selectedRating = <HTMLElement>(\r\n      document.querySelectorAll(\"#\" + qId + \" .cc-nps-selected-rating\")[0]\r\n    );\r\n    let selectedRating1 = <HTMLElement>(\r\n      document.querySelectorAll(\"#\" + qId + \" .cc-nps-selected-rating\")[1]\r\n    );\r\n    //add id too.\r\n    if (\r\n      this.util.checkIfListenerExists(\r\n        \"#\" + qId + \" .option-number-item\",\r\n        this.domListeners\r\n      )\r\n    ) {\r\n      // return;\r\n      // ( window as any ).ccsdkDebug ? console.log( \"scale question - previous listeners exists\" ) : '';\r\n      this.removePrevListener(\"#\" + qId + \" .option-number-item\");\r\n    }\r\n\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring(2, qId.length);\r\n    // ( window as any ).ccsdkDebug ? console.log( 'scale question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if (\r\n      typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n      this.ccsdk.survey.answers[questionId] !== \"\"\r\n    ) {\r\n      let previousValue = this.ccsdk.survey.answers[questionId].number;\r\n      let previousSelection = document.querySelectorAll(\r\n        \"#\" + qId + ' .option-number-item[data-rating=\"' + previousValue + '\"]'\r\n      )[0];\r\n      // ( window as any ).ccsdkDebug ? console.log( 'scale previous selection', previousSelection ) : '';\r\n      if (typeof previousSelection !== \"undefined\") {\r\n        this.util.addClass(previousSelection, \"selected\");\r\n        self.qResponse.type = \"scale\";\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n        selectedRating.innerHTML = previousValue;\r\n        selectedRating1.innerHTML = previousValue;\r\n      }\r\n    }\r\n\r\n    let ref = this.util.initListener(\r\n      \"click\",\r\n      \"#\" + qId + \" .option-number-item\",\r\n      function () {\r\n        let allOptions: any = document.querySelectorAll(\r\n          \"#\" + qId + \" .option-number-item\"\r\n        );\r\n\r\n        let rating: number = this.getAttribute(\"data-rating\");\r\n        self.util.removeClassAll(allOptions, \"selected\");\r\n        self.util.addClass(this, \"selected\");\r\n        // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n        // (window as any).ccsdkDebug?console.log('Scale selected',rating):'';\r\n        self.qResponse.type = \"scale\";\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = rating;\r\n        self.qResponse.questionId = qId;\r\n        selectedRating.innerHTML = \"\" + rating;\r\n        selectedRating1.innerHTML = \"\" + rating;\r\n\r\n        //move to next question automagically\r\n        // alert('calling next questions inside scale');\r\n        let onSurveyClickEvent = new CustomEvent(\r\n          Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken\r\n        );\r\n        document.dispatchEvent(onSurveyClickEvent);\r\n        setTimeout(() => {\r\n          self.nextQuestion();\r\n        }, 500);\r\n        // self.util.trigger(document,'q-answered', {\r\n        //   index : index,\r\n        //   rating : rating,\r\n        //   type : 'scale'\r\n        // });\r\n      }\r\n    );\r\n    this.domListeners.push(ref);\r\n\r\n    ref.internalHandler = this.util.listener(\r\n      this.$body,\r\n      ref.type,\r\n      ref.id,\r\n      ref.cb\r\n    );\r\n  }\r\n\r\n  setupListenersQuestionNPS(index: number, qId: string) {\r\n    var self: DomSurvey = this;\r\n    let selectedRating = <HTMLElement>(\r\n      document.querySelectorAll(\"#\" + qId + \" .cc-nps-selected-rating\")[0]\r\n    );\r\n    let allOptions: any = document.querySelectorAll(\r\n      \"#\" + qId + \" .option-number-item\"\r\n    );\r\n\r\n    //add id too.\r\n    if (\r\n      this.util.checkIfListenerExists(\r\n        \"#\" + qId + \" .option-number-item\",\r\n        this.domListeners\r\n      )\r\n    ) {\r\n      //remove listeners\r\n      // ( window as any ).ccsdkDebug ? console.log( \"nps question - previous listeners exists\" ) : '';\r\n      this.removePrevListener(\"#\" + qId + \" .option-number-item\");\r\n    }\r\n\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring(2, qId.length);\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"nps question\", this.ccsdk.survey.answers[questionId])\r\n      : \"\";\r\n    if (\r\n      typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n      this.ccsdk.survey.answers[questionId] !== \"\"\r\n    ) {\r\n      let previousValue = this.ccsdk.survey.answers[questionId].number;\r\n      let previousSelection = document.querySelectorAll(\r\n        \"#\" + qId + ' .option-number-item[data-rating=\"' + previousValue + '\"]'\r\n      )[0];\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"nps previous selection\", previousSelection)\r\n        : \"\";\r\n      if (typeof previousSelection !== \"undefined\") {\r\n        this.util.addClass(previousSelection, \"selected\");\r\n        let $mobileRating = document.querySelectorAll(\r\n          \".act-cc-nps-selected-rating\"\r\n        )[0];\r\n        $mobileRating.innerHTML = previousValue;\r\n        self.qResponse.type = \"nps\";\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n\r\n    // (window as any).ccsdkDebug?console.log(self.domListeners):'';\r\n    let ref = this.util.initListener(\r\n      \"click\",\r\n      \"#\" + qId + \" .option-number-item\",\r\n      function () {\r\n        let rating: number = this.getAttribute(\"data-rating\");\r\n        self.util.removeClassAll(allOptions, \"selected\");\r\n        self.util.addClass(this, \"selected\");\r\n        // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n        // (window as any).ccsdkDebug?console.log('Scale selected',rating):'';\r\n        self.qResponse.type = \"nps\";\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = rating;\r\n        self.qResponse.questionId = qId;\r\n        selectedRating.innerHTML = \"\" + rating;\r\n        //move to next question automagically\r\n\r\n        let onSurveyClickEvent = new CustomEvent(\r\n          Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken\r\n        );\r\n        document.dispatchEvent(onSurveyClickEvent);\r\n\r\n        // alert('calling next questions inside scale');\r\n        setTimeout(() => {\r\n          self.nextQuestion();\r\n        }, 500);\r\n        // self.util.trigger(document,'q-answered', {\r\n        //   index : index,\r\n        //   rating : rating,\r\n        //   type : 'scale'\r\n        // });\r\n      }\r\n    );\r\n    this.domListeners.push(ref);\r\n\r\n    ref.internalHandler = this.util.listener(\r\n      this.$body,\r\n      ref.type,\r\n      ref.id,\r\n      ref.cb\r\n    );\r\n  }\r\n\r\n  setupListenersQuestionCheckbox(index: number, qId: string) {\r\n    var self: DomSurvey = this;\r\n    if (\r\n      this.util.checkIfListenerExists(\r\n        \"#\" + qId + \" .cc-checkbox\",\r\n        this.domListeners\r\n      )\r\n    ) {\r\n      // return;\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"checkbox question - previous listeners exists\")\r\n        : \"\";\r\n      this.removePrevListener(\"#\" + qId + \" .cc-checkbox\");\r\n    }\r\n\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring(2, qId.length);\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"radio question\", this.ccsdk.survey.answers[questionId])\r\n      : \"\";\r\n    if (\r\n      typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n      this.ccsdk.survey.answers[questionId] !== \"\"\r\n    ) {\r\n      let previousValues = this.ccsdk.survey.answers[questionId].text;\r\n      if (previousValues) {\r\n        previousValues = previousValues.split(\",\");\r\n        for (let previousValue of previousValues) {\r\n          let previousSelection = document.querySelectorAll(\r\n            \"#\" + qId + ' input[value=\"' + previousValue + '\"]'\r\n          )[0];\r\n          (window as any).ccsdkDebug\r\n            ? console.log(\"radio previous selection\", previousSelection)\r\n            : \"\";\r\n          if (typeof previousSelection !== \"undefined\") {\r\n            this.util.addClass(previousSelection, \"selected\");\r\n            previousSelection.setAttribute(\"checked\", \"checked\");\r\n            self.qResponse.type = \"checkbox\";\r\n            self.qResponse.text = previousValue;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    let ref = this.util.initListener(\r\n      \"click\",\r\n      \"#\" + qId + \" .cc-checkbox\",\r\n      function () {\r\n        // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox input');\r\n        // let rating : number = this.querySelectorAll('input')[0].value;\r\n        let rating: string = [].filter\r\n          .call(\r\n            document.querySelectorAll(\"#\" + qId + \" .cc-checkbox input\"),\r\n            function (c) {\r\n              return c.checked;\r\n            }\r\n          )\r\n          .map(function (c) {\r\n            return c.value;\r\n          })\r\n          .join(\",\");\r\n\r\n        (window as any).ccsdkDebug\r\n          ? console.log(\"Checkbox selected\", rating)\r\n          : \"\";\r\n\r\n        self.qResponse.type = \"checkbox\";\r\n        self.qResponse.text = rating;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n        //move to next question automagically\r\n        // self.nextQuestion();\r\n      }\r\n    );\r\n    this.domListeners.push(ref);\r\n    let onSurveyClickEvent = new CustomEvent(\r\n      Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken\r\n    );\r\n    document.dispatchEvent(onSurveyClickEvent);\r\n    ref.internalHandler = this.util.listener(\r\n      this.$body,\r\n      ref.type,\r\n      ref.id,\r\n      ref.cb\r\n    );\r\n  }\r\n\r\n  setupListenersQuestionRadio(index: number, qId: string) {\r\n    var self: DomSurvey = this;\r\n    if (\r\n      this.util.checkIfListenerExists(\r\n        \"#\" + qId + \" .cc-checkbox input\",\r\n        this.domListeners\r\n      )\r\n    ) {\r\n      // return;\r\n      //remove listeners\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"radio question - previous listeners exists\")\r\n        : \"\";\r\n      this.removePrevListener(\"#\" + qId + \" .cc-checkbox input\");\r\n    }\r\n\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring(2, qId.length);\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"radio question\", this.ccsdk.survey.answers[questionId])\r\n      : \"\";\r\n    if (\r\n      typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n      this.ccsdk.survey.answers[questionId] !== \"\"\r\n    ) {\r\n      let previousValue = this.ccsdk.survey.answers[questionId].text;\r\n      let previousSelection = document.querySelectorAll(\r\n        \"#\" + qId + ' input[value=\"' + previousValue + '\"]'\r\n      )[0];\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"radio previous selection\", previousSelection)\r\n        : \"\";\r\n      if (typeof previousSelection !== \"undefined\") {\r\n        this.util.addClass(previousSelection, \"selected\");\r\n        previousSelection.setAttribute(\"checked\", \"checked\");\r\n        self.qResponse.type = \"radio\";\r\n        self.qResponse.text = previousValue;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n\r\n    let ref = this.util.initListener(\r\n      \"click\",\r\n      \"#\" + qId + \" .cc-checkbox input\",\r\n      function () {\r\n        // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox');\r\n        let rating: string = this.value;\r\n        // self.util.removeClassAll(allOptions, \"selected\");\r\n        // self.util.addClass(this, \"selected\");\r\n        // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n        // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\r\n        self.qResponse.type = \"radio\";\r\n        self.qResponse.text = rating;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n        let onSurveyClickEvent = new CustomEvent(\r\n          Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken\r\n        );\r\n        document.dispatchEvent(onSurveyClickEvent);\r\n        //move to next question automagically\r\n        setTimeout(() => {\r\n          self.nextQuestion();\r\n        }, 500);\r\n      }\r\n    );\r\n    this.domListeners.push(ref);\r\n\r\n    ref.internalHandler = this.util.listener(\r\n      this.$body,\r\n      ref.type,\r\n      ref.id,\r\n      ref.cb\r\n    );\r\n  }\r\n\r\n  setupListenersQuestionRadioImage(index: number, qId: string) {\r\n    var self: DomSurvey = this;\r\n    if (\r\n      this.util.checkIfListenerExists(\r\n        \"#\" + qId + \" .cc-checkbox input\",\r\n        this.domListeners\r\n      )\r\n    ) {\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"radio image question - previous listeners exists\")\r\n        : \"\";\r\n      this.removePrevListener(\"#\" + qId + \" .cc-checkbox input\");\r\n    }\r\n\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring(2, qId.length);\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\r\n        \"radio image question\",\r\n        this.ccsdk.survey.answers[questionId]\r\n      )\r\n      : \"\";\r\n    if (\r\n      typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n      this.ccsdk.survey.answers[questionId] !== \"\"\r\n    ) {\r\n      let previousValue = this.ccsdk.survey.answers[questionId].text;\r\n      let previousSelection = document.querySelectorAll(\r\n        \"#\" + qId + ' input[value=\"' + previousValue + '\"]'\r\n      )[0];\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"radio image previous selection\", previousSelection)\r\n        : \"\";\r\n      if (typeof previousSelection !== \"undefined\") {\r\n        this.util.addClass(previousSelection, \"selected\");\r\n        previousSelection.setAttribute(\"checked\", \"checked\");\r\n        self.qResponse.type = \"radioImage\";\r\n        self.qResponse.text = previousValue;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n\r\n    let ref = this.util.initListener(\r\n      \"click\",\r\n      \"#\" + qId + \" .cc-checkbox input\",\r\n      function () {\r\n        // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox');\r\n        let rating: string = this.value;\r\n        // self.util.removeClassAll(allOptions, \"selected\");\r\n        // self.util.addClass(this, \"selected\");\r\n        // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n        // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\r\n        self.qResponse.type = \"radioImage\";\r\n        self.qResponse.text = rating;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n        let onSurveyClickEvent = new CustomEvent(\r\n          Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken\r\n        );\r\n        document.dispatchEvent(onSurveyClickEvent);\r\n        //move to next question automagically\r\n        setTimeout(() => {\r\n          self.nextQuestion();\r\n        }, 500);\r\n      }\r\n    );\r\n    this.domListeners.push(ref);\r\n\r\n    ref.internalHandler = this.util.listener(\r\n      this.$body,\r\n      ref.type,\r\n      ref.id,\r\n      ref.cb\r\n    );\r\n  }\r\n\r\n  setupListenersQuestionStar(index: number, qId: string) {\r\n    var self: DomSurvey = this;\r\n    if (\r\n      this.util.checkIfListenerExists(\r\n        \"#\" + qId + \" .option-star-box\",\r\n        this.domListeners\r\n      )\r\n    ) {\r\n      //remove listeners\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"smile question - previous listeners exists\")\r\n        : \"\";\r\n      this.removePrevListener(\"#\" + qId + \" .option-star-box\");\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring(2, qId.length);\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"star question\", this.ccsdk.survey.answers[questionId])\r\n      : \"\";\r\n    if (\r\n      typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n      this.ccsdk.survey.answers[questionId] !== \"\"\r\n    ) {\r\n      let previousValue = this.ccsdk.survey.answers[questionId].number;\r\n      let previousSelection = document.querySelectorAll(\r\n        \"#\" + qId + ' .option-star-box[data-rating=\"' + previousValue + '\"]'\r\n      )[0];\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"star previous selection\", previousSelection)\r\n        : \"\";\r\n      if (\r\n        typeof previousSelection !== \"undefined\" &&\r\n        previousSelection != null\r\n      ) {\r\n        this.util.addClass(previousSelection, \"selected\");\r\n        self.qResponse.type = \"star\";\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n    let ref = this.util.initListener(\r\n      \"click\",\r\n      \"#\" + qId + \" .option-star-box\",\r\n      function () {\r\n        let allOptions: any = document.querySelectorAll(\r\n          \"#\" + qId + \" .option-star-box\"\r\n        );\r\n        let rating: number = this.getAttribute(\"data-rating\");\r\n        self.util.removeClassAll(allOptions, \"selected\");\r\n        self.util.addClass(this, \"selected\");\r\n\r\n        //select previous sibling\r\n        // let child : any = this.previousSibling;\r\n        // while( ( child = child.previousSibling) != null ){\r\n        //   self.util.addClass(child, \"selected\");\r\n        // }\r\n\r\n        // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n        // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\r\n        self.qResponse.type = \"star\";\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = rating;\r\n        self.qResponse.questionId = qId;\r\n\r\n        let onSurveyClickEvent = new CustomEvent(\r\n          Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken\r\n        );\r\n        document.dispatchEvent(onSurveyClickEvent);\r\n        //move to next question automagically\r\n        setTimeout(() => {\r\n          self.nextQuestion();\r\n        }, 500);\r\n      }\r\n    );\r\n    this.domListeners.push(ref);\r\n\r\n    ref.internalHandler = this.util.listener(\r\n      this.$body,\r\n      ref.type,\r\n      ref.id,\r\n      ref.cb\r\n    );\r\n  }\r\n\r\n  setupListenersQuestionSmile(index: number, qId: string) {\r\n    var self: DomSurvey = this;\r\n    if (\r\n      this.util.checkIfListenerExists(\r\n        \"#\" + qId + \" .option-smile-box\",\r\n        this.domListeners\r\n      )\r\n    ) {\r\n      //remove listeners\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"smile question - previous listeners exists\")\r\n        : \"\";\r\n      this.removePrevListener(\"#\" + qId + \" .option-smile-box\");\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring(2, qId.length);\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"smile question\", this.ccsdk.survey.answers[questionId])\r\n      : \"\";\r\n    if (\r\n      typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n      this.ccsdk.survey.answers[questionId] !== \"\"\r\n    ) {\r\n      let previousValue = this.ccsdk.survey.answers[questionId].number;\r\n      let previousSelection = document.querySelectorAll(\r\n        \"#\" + qId + ' .option-smile-box[data-rating=\"' + previousValue + '\"]'\r\n      )[0];\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"smile previous selection\", previousSelection)\r\n        : \"\";\r\n      if (\r\n        typeof previousSelection !== \"undefined\" &&\r\n        previousSelection != null\r\n      ) {\r\n        this.util.addClass(previousSelection, \"selected\");\r\n        self.qResponse.type = \"smile\";\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n\r\n    let ref = this.util.initListener(\r\n      \"click\",\r\n      \"#\" + qId + \" .option-smile-box\",\r\n      function () {\r\n        let allOptions: any = document.querySelectorAll(\r\n          \"#\" + qId + \" .option-smile-box\"\r\n        );\r\n        let rating: number = this.getAttribute(\"data-rating\");\r\n        self.util.removeClassAll(allOptions, \"selected\");\r\n        self.util.addClass(this, \"selected\");\r\n\r\n        //select previous siblings\r\n        // let child : any = this.previousSibling;\r\n        // while( ( child = child.previousSibling) != null ){\r\n        //   self.util.addClass(child, \"selected\");\r\n        // }\r\n        // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n        // (window as any).ccsdkDebug?console.log('Smile selected',rating):'';\r\n        self.qResponse.type = \"smile\";\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = rating;\r\n        self.qResponse.questionId = qId;\r\n\r\n        let onSurveyClickEvent = new CustomEvent(\r\n          Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken\r\n        );\r\n        document.dispatchEvent(onSurveyClickEvent);\r\n        //move to next question automagically\r\n        setTimeout(() => {\r\n          self.nextQuestion();\r\n        }, 500);\r\n      }\r\n    );\r\n    this.domListeners.push(ref);\r\n\r\n    ref.internalHandler = this.util.listener(\r\n      this.$body,\r\n      ref.type,\r\n      ref.id,\r\n      ref.cb\r\n    );\r\n  }\r\n\r\n  setupListenersQuestionCsat(index: number, qId: string) {\r\n    var self: DomSurvey = this;\r\n    if (\r\n      this.util.checkIfListenerExists(\r\n        \"#\" + qId + \" .option-smile-box\",\r\n        this.domListeners\r\n      )\r\n    ) {\r\n      //remove listeners\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"csat question - previous listeners exists\")\r\n        : \"\";\r\n      this.removePrevListener(\"#\" + qId + \" .option-smile-box\");\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring(2, qId.length);\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"csat question\", this.ccsdk.survey.answers[questionId])\r\n      : \"\";\r\n    if (\r\n      typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n      this.ccsdk.survey.answers[questionId] !== \"\"\r\n    ) {\r\n      let previousValue = this.ccsdk.survey.answers[questionId].number;\r\n      let previousSelection = document.querySelectorAll(\r\n        \"#\" + qId + ' .option-smile-box[data-rating=\"' + previousValue + '\"]'\r\n      )[0];\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"csat previous selection\", previousSelection)\r\n        : \"\";\r\n      if (\r\n        typeof previousSelection !== \"undefined\" &&\r\n        previousSelection != null\r\n      ) {\r\n        this.util.addClass(previousSelection, \"selected\");\r\n        previousSelection\r\n          .querySelectorAll(\"input\")[0]\r\n          .setAttribute(\"checked\", \"checked\");\r\n        self.qResponse.type = \"smile\";\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n\r\n    let ref = this.util.initListener(\r\n      \"click\",\r\n      \"#\" + qId + \" .option-smile-box\",\r\n      function () {\r\n        let allOptions: any = document.querySelectorAll(\r\n          \"#\" + qId + \" .option-smile-box\"\r\n        );\r\n        let rating: number = this.getAttribute(\"data-rating\");\r\n        self.util.removeClassAll(allOptions, \"selected\");\r\n        self.util.addClass(this, \"selected\");\r\n        this.querySelectorAll(\"input\")[0].setAttribute(\"checked\", \"checked\");\r\n        let child: any = this.previousSibling;\r\n        while ((child = child.previousSibling) != null) {\r\n          // (window as any).ccsdkDebug?console.log('questionscale', 'previousSiblings', child):'';\r\n          self.util.addClass(child, \"selected\");\r\n        }\r\n        // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n        // (window as any).ccsdkDebug?console.log('Smile selected',rating):'';\r\n        self.qResponse.type = \"smile\";\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = rating;\r\n        self.qResponse.questionId = qId;\r\n        console.log(\"dispatching event in csat\", this);\r\n        let onSurveyClickEvent = new CustomEvent(\r\n          Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken\r\n        );\r\n        document.dispatchEvent(onSurveyClickEvent);\r\n        //move to next question automagically\r\n        setTimeout(() => {\r\n          self.nextQuestion();\r\n        }, 500);\r\n      }\r\n    );\r\n    this.domListeners.push(ref);\r\n\r\n    ref.internalHandler = this.util.listener(\r\n      this.$body,\r\n      ref.type,\r\n      ref.id,\r\n      ref.cb\r\n    );\r\n  }\r\n\r\n  setupListenersQuestionMultiline(index: number, qId: string) {\r\n    let self: DomSurvey = this;\r\n    let multilineRes: string = \"\";\r\n    if (this.util.checkIfListenerExists(\"#\" + qId, this.domListeners)) {\r\n      //remove listeners\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"multiine question - previous listeners exists\")\r\n        : \"\";\r\n      this.removePrevListener(\"#\" + qId);\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring(2, qId.length);\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"multiine question\", this.ccsdk.survey.answers[questionId])\r\n      : \"\";\r\n    if (\r\n      typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n      this.ccsdk.survey.answers[questionId] !== \"\"\r\n    ) {\r\n      let previousValue = this.ccsdk.survey.answers[questionId].text;\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\r\n          \"multiine input box\",\r\n          document.querySelectorAll(\"#\" + qId)[0]\r\n        )\r\n        : \"\";\r\n      let previousSelection = <HTMLInputElement>(\r\n        document.querySelectorAll(\"#\" + qId)[0]\r\n      );\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"multiine previous selection\", previousSelection)\r\n        : \"\";\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"multiine previous value\", previousValue)\r\n        : \"\";\r\n      if (\r\n        typeof previousSelection !== \"undefined\" &&\r\n        previousSelection != null &&\r\n        typeof previousValue !== \"undefined\"\r\n      ) {\r\n        previousSelection.value = previousValue;\r\n        self.qResponse.type = \"multiline\";\r\n        self.qResponse.text = previousValue;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n    let ref = this.util.initListener(\"change\", \"#\" + qId, function () {\r\n      multilineRes = this.value;\r\n      self.qResponse.type = \"multiline\";\r\n      self.qResponse.text = multilineRes;\r\n      self.qResponse.number = null;\r\n      self.qResponse.questionId = qId;\r\n    });\r\n    this.domListeners.push(ref);\r\n\r\n    ref.internalHandler = this.util.listener(\r\n      this.$body,\r\n      ref.type,\r\n      ref.id,\r\n      ref.cb\r\n    );\r\n  }\r\n\r\n  setupListenersQuestionSingleline(index: number, qId: string) {\r\n    let self: DomSurvey = this;\r\n    let singlelineRes: string = \"\";\r\n    if (this.util.checkIfListenerExists(\"#\" + qId, this.domListeners)) {\r\n      //remove listeners\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"singleline question - previous listeners exists\")\r\n        : \"\";\r\n      this.removePrevListener(\"#\" + qId);\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring(2, qId.length);\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\r\n        \"singleline question\",\r\n        this.ccsdk.survey.answers[questionId]\r\n      )\r\n      : \"\";\r\n    if (\r\n      typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n      this.ccsdk.survey.answers[questionId] !== \"\"\r\n    ) {\r\n      let previousValue = this.ccsdk.survey.answers[questionId].text;\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\r\n          \"singleline input box\",\r\n          document.querySelectorAll(\"#\" + qId)[0]\r\n        )\r\n        : \"\";\r\n      let previousSelection = <HTMLInputElement>(\r\n        document.querySelectorAll(\"#\" + qId)[0]\r\n      );\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"singleline previous selection\", previousSelection)\r\n        : \"\";\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"singleline previous value\", previousValue)\r\n        : \"\";\r\n      if (\r\n        typeof previousSelection !== \"undefined\" &&\r\n        previousSelection != null &&\r\n        typeof previousValue !== \"undefined\"\r\n      ) {\r\n        previousSelection.value = previousValue;\r\n        self.qResponse.type = \"singleline\";\r\n        self.qResponse.text = previousValue;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n    let ref = this.util.initListener(\"change\", \"#\" + qId, function () {\r\n      singlelineRes = this.value;\r\n      self.qResponse.type = \"singleline\";\r\n      self.qResponse.text = singlelineRes;\r\n      self.qResponse.number = null;\r\n      self.qResponse.questionId = qId;\r\n    });\r\n    this.domListeners.push(ref);\r\n\r\n    ref.internalHandler = this.util.listener(\r\n      this.$body,\r\n      ref.type,\r\n      ref.id,\r\n      ref.cb\r\n    );\r\n\r\n    // console.log( 'singleline qResponse', self.qResponse );\r\n  }\r\n\r\n  setupListenersForDate(index: number, qId: string) {\r\n    if (this.util.checkIfListenerExists(\".date-container\", this.domListeners)) {\r\n      //remove listeners\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"date question - previous listeners exists\")\r\n        : \"\";\r\n      this.removePrevListener(\".date-container\");\r\n    }\r\n\r\n    let questionId: any;\r\n    let self = this;\r\n    questionId = qId.substring(2, qId.length);\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"date question\", this.ccsdk.survey.answers, questionId)\r\n      : \"\";\r\n    if (\r\n      this.ccsdk.survey.answers[questionId] &&\r\n      this.ccsdk.survey.answers[questionId].number\r\n    ) {\r\n      let model = this.ccsdk.survey.answers[questionId].number;\r\n      let dateQuestion = this.util.get(\".date-container\")[0];\r\n      let list = model.toString().match(/\\d\\d/g);\r\n\r\n      (<HTMLInputElement>dateQuestion.children[0]).value = list[3];\r\n      (<HTMLInputElement>dateQuestion.children[1]).value = list[2];\r\n      (<HTMLInputElement>dateQuestion.children[2]).value = list[0] + list[1];\r\n\r\n      this.qResponse.type = \"date\";\r\n      this.qResponse.text = null;\r\n      this.qResponse.number = model;\r\n      this.qResponse.questionId = qId;\r\n    }\r\n\r\n    let ref = this.util.initListener(\"change\", \".date-container\", function () {\r\n      let date = this.children[0].value;\r\n      let month = this.children[1].value;\r\n      let year = this.children[2].value;\r\n      if (!date && !month && !year) {\r\n        return;\r\n      }\r\n\r\n      if (!date.match(/^\\d\\d$/)) {\r\n        self.util.addClass(this.children[3], \"show-error\");\r\n        return;\r\n      } else if (!month.match(/^\\d\\d$/)) {\r\n        self.util.addClass(this.children[3], \"show-error\");\r\n        return;\r\n      } else if (!year.match(/^\\d\\d\\d\\d$/)) {\r\n        self.util.addClass(this.children[3], \"show-error\");\r\n        return;\r\n      } else {\r\n        self.util.removeClass(this.children[3], \"show-error\");\r\n        let numberRes = parseInt(year + month + date, 10);\r\n        self.qResponse.type = \"number\";\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = numberRes;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    });\r\n\r\n    this.domListeners.push(ref);\r\n\r\n    ref.internalHandler = this.util.listener(\r\n      this.$body,\r\n      ref.type,\r\n      ref.id,\r\n      ref.cb\r\n    );\r\n  }\r\n\r\n  setupListenersQuestionNumber(index: number, qId: string) {\r\n    let self: DomSurvey = this;\r\n    let numberRes: string = \"\";\r\n    if (this.util.checkIfListenerExists(\"#\" + qId, this.domListeners)) {\r\n      //remove listeners\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"number question - previous listeners exists\")\r\n        : \"\";\r\n      this.removePrevListener(\"#\" + qId);\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring(2, qId.length);\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"number question\", this.ccsdk.survey.answers[questionId])\r\n      : \"\";\r\n    if (\r\n      typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n      this.ccsdk.survey.answers[questionId] !== \"\"\r\n    ) {\r\n      let previousValue = this.ccsdk.survey.answers[questionId].number;\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\r\n          \"number input box\",\r\n          document.querySelectorAll(\"#\" + qId)[0]\r\n        )\r\n        : \"\";\r\n      let previousSelection = <HTMLInputElement>(\r\n        document.querySelectorAll(\"#\" + qId)[0]\r\n      );\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"number previous selection\", previousSelection)\r\n        : \"\";\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"number previous value\", previousValue)\r\n        : \"\";\r\n      if (\r\n        typeof previousSelection !== \"undefined\" &&\r\n        previousSelection != null &&\r\n        typeof previousValue !== \"undefined\"\r\n      ) {\r\n        previousSelection.value = previousValue;\r\n        self.qResponse.type = \"number\";\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n    let ref = this.util.initListener(\"change\", \"#\" + qId, function () {\r\n      numberRes = this.value;\r\n      self.qResponse.type = \"number\";\r\n      self.qResponse.text = null;\r\n      self.qResponse.number = numberRes;\r\n      self.qResponse.questionId = qId;\r\n    });\r\n    this.domListeners.push(ref);\r\n\r\n    ref.internalHandler = this.util.listener(\r\n      this.$body,\r\n      ref.type,\r\n      ref.id,\r\n      ref.cb\r\n    );\r\n  }\r\n\r\n  setupListenersQuestionSlider(index: number, qId: string) {\r\n    let self: DomSurvey = this;\r\n    let sliderRes: string = \"\";\r\n    let slider = new Slider();\r\n    let sliderInput = <HTMLInputElement>(\r\n      document.querySelectorAll(\"#\" + qId + \" input\")[0]\r\n    );\r\n\r\n    if (\r\n      this.util.checkIfListenerExists(\"#\" + qId + \" input\", this.domListeners)\r\n    ) {\r\n      // return;\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring(2, qId.length);\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"slider question\", this.ccsdk.survey.answers[questionId])\r\n      : \"\";\r\n    if (\r\n      typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n      this.ccsdk.survey.answers[questionId] !== \"\"\r\n    ) {\r\n      let previousValue = this.ccsdk.survey.answers[questionId].number;\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\r\n          \"slider input box\",\r\n          document.querySelectorAll(\"#\" + qId)[0]\r\n        )\r\n        : \"\";\r\n      let previousSelection = <HTMLInputElement>(\r\n        document.querySelectorAll(\"#\" + qId + \" .act-slider-tip\")[0]\r\n      );\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"slider previous selection\", previousSelection)\r\n        : \"\";\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"slider previous value\", previousValue)\r\n        : \"\";\r\n      if (\r\n        typeof previousSelection !== \"undefined\" &&\r\n        previousSelection != null &&\r\n        typeof previousValue !== \"undefined\"\r\n      ) {\r\n        previousSelection.innerHTML = previousValue;\r\n        sliderInput.value = previousValue;\r\n        self.qResponse.type = \"slider\";\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.text = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n    let ref = this.util.initListener(\r\n      \"change\",\r\n      \"#\" + qId + \" input\",\r\n      function () {\r\n        sliderRes = this.value;\r\n        self.qResponse.type = \"slider\";\r\n        self.qResponse.number = sliderRes;\r\n        self.qResponse.text = null;\r\n        self.qResponse.questionId = qId;\r\n        //move to next question automagically\r\n        // self.nextQuestion();\r\n      }\r\n    );\r\n    this.domListeners.push(ref);\r\n\r\n    ref.internalHandler = this.util.listener(\r\n      this.$body,\r\n      ref.type,\r\n      ref.id,\r\n      ref.cb\r\n    );\r\n  }\r\n\r\n  setupListenersQuestionSelect(index: number, qId: string) {\r\n    let self: DomSurvey = this;\r\n    let questionId: any;\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"select que\", this.domListeners)\r\n      : \"\";\r\n    questionId = qId.substring(2, qId.length);\r\n    // (window as any).ccsdkDebug?console.log(this.ccsdk.survey.answers[questionId]):'';\r\n    // (window as any).ccsdkDebug?console.log(this.ccsdk.survey.surveyAnswers[questionId]):'';\r\n    if (\r\n      this.util.checkIfListenerExists(\r\n        \"#\" + qId + \" .cc-select-options .cc-select-option\",\r\n        this.domListeners\r\n      )\r\n    ) {\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"select que listner exists\")\r\n        : \"\";\r\n      this.removePrevListener(\r\n        \"#\" + qId + \" .cc-select-options .cc-select-option\"\r\n      );\r\n\r\n      // return;\r\n    }\r\n    (window as any).ccsdkDebug ? console.log(\"select que\") : \"\";\r\n\r\n    // if(!self.util.arrayContains.call(self.trackSelects, qId)){\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"select que initialize select\")\r\n      : \"\";\r\n\r\n    self.select = new Select(qId);\r\n    self.select.destroyListeners();\r\n    self.select.init(qId);\r\n\r\n    if (\r\n      typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n      this.ccsdk.survey.answers[questionId] !== \"\"\r\n    ) {\r\n      if (this.ccsdk.survey.answers[questionId].text) {\r\n        let question = this.ccsdk.survey.getQuestionById(questionId);\r\n        self.select.setValue(\r\n          this.ccsdk.survey.answers[questionId].text,\r\n          question,\r\n          this.ccsdk.survey\r\n        );\r\n        self.select.selectOptions(this.ccsdk.survey.answers[questionId].text);\r\n        self.qResponse.type = \"select\";\r\n        self.qResponse.text = this.ccsdk.survey.answers[questionId].text;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n    self.trackSelects.push(qId);\r\n    // }\r\n    let selectRes: string = \"\";\r\n    let ref = this.util.initListener(\r\n      \"click\",\r\n      \"#\" + qId + \" .cc-select-options .cc-select-option\",\r\n      function () {\r\n        // selectRes = this.getAttribute('data-value');\r\n        selectRes = document\r\n          .querySelectorAll(\"#\" + qId + \" .cc-select-trigger\")[0]\r\n          .getAttribute(\"data-selection-value\");\r\n        // (window as any).ccsdkDebug?console.log(selectRes):'';\r\n        self.qResponse.type = \"select\";\r\n        self.qResponse.text = selectRes;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n        //move to next question automagically\r\n\r\n        let onSurveyClickEvent = new CustomEvent(\r\n          Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken\r\n        );\r\n        document.dispatchEvent(onSurveyClickEvent);\r\n\r\n        // self.nextQuestion();\r\n      }\r\n    );\r\n\r\n    // this.util.removeListener(this.$body, ref.type, listener.internalHandler);\r\n    this.domListeners.push(ref);\r\n\r\n    ref.internalHandler = this.util.listener(\r\n      this.$body,\r\n      ref.type,\r\n      ref.id,\r\n      ref.cb\r\n    );\r\n  }\r\n\r\n  // addListenersNextButtonSubmit(index : number, data : any, type : string){\r\n  //   let self : DomSurvey = this;\r\n  //   let btnNext = self.util.get('.act-cc-button-next')[0];\r\n  //   self.util.on('click', btnNext, this.submitQuestion(\r\n  //     index, data, type\r\n  //   ));\r\n  //\r\n  // }\r\n\r\n  // removeListenersNextButtonSubmit(index : number, data : any, type : string){\r\n  //   let self : DomSurvey = this;\r\n  //   let btnNext = self.util.get('.act-cc-button-next');\r\n  //   self.util.on('click', btnNext, this.submitQuestion(\r\n  //     index, data, type\r\n  //   ));\r\n  //   self.util.off('click', btnNext, this.submitQuestion(\r\n  //     index, data, type\r\n  //   ));\r\n  // }\r\n\r\n  submitQuestion(index: number, data: any, type: string, qId: string) {\r\n    (window as any).ccsdkDebug ? console.log(\"type\", type, \"res\", data) : \"\";\r\n    this.util.trigger(document, \"q-answered\", {\r\n      index: index,\r\n      data: data,\r\n      type: type,\r\n      questionId: qId.match(/^id/) ? qId.substring(2, qId.length) : qId\r\n    });\r\n  }\r\n}\r\n\r\nexport { DomSurvey };\r\n","import { DomUtilities } from './DomUtilities';\r\n\r\nclass Theme {\r\n\tutil: DomUtilities;\r\n\tbrandColorDark: string;\r\n\tbrandColorWhite: string;\r\n\tconstructor( brandColor, time ) {\r\n\t\tthis.util = new DomUtilities();\r\n\t\tthis.brandColorDark = this.util.shadeBlendConvert( -0.3, brandColor, undefined );\r\n\t\tthis.brandColorWhite = this.util.shadeBlendConvert( 0.1, brandColor, undefined );\r\n\t\tlet css: string = `\r\n\t\t.cc-sdk #progressBar{\r\n\t\t\tbackground : ${this.brandColorDark };\r\n\t\t}\r\n\t\t.cc-sdk #progress-line{ \r\n\t\t\tbackground: ${brandColor };\r\n\t\t}\r\n\t\t.cc-sdk .cc-checkbox input[type=\"checkbox\"]:checked + label:before {\r\n\t\t\tbackground:${brandColor };\r\n\t\t}\r\n\t\t.ccsdk-overlay.glass{\r\n\t\t\tbackground-color:${this.util.hexToRGB( brandColor, .5 ) };\r\n\t\t}\r\n\t\t.cc-sdk .cc-checkbox input[type=\"checkbox\"]:checked + label:after {\r\n\t\t\tborder-color: #fff;\r\n\t\t}\r\n\t\t.cc-sdk .cc-checkbox input[type=\"radio\"]:checked + label:before {\r\n\t\t\tborder-color: ${brandColor };\r\n\t\t}\r\n\t\t.cc-sdk .cc-checkbox input[type=\"radio\"]:checked + label:before {\r\n\t\t\tborder-color: ${brandColor };\r\n\t\t}\r\n\t\t.cc-sdk .cc-checkbox input[type=\"radio\"]:checked + label:after {\r\n\t\t\tbackground: ${brandColor };\r\n\t\t}\r\n\t\t.cc-sdk .cc-sdk-form-control:focus {\r\n\t\t\tborder-color: ${brandColor };\r\n\t\t}\r\n\t\t.cc-sdk .cc-message-box__btn{\r\n\t\t\tbackground: ${brandColor };\r\n\t\t\tcolor:#fff;\r\n\t\t}\r\n\t\t\t.cc-sdk .submit-icon{\r\n\t\t\t\tbackground-image: url(\"data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%2747px%27%20height%3D%2747px%27%20viewBox%3D%270%200%2047%2047%27%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%3E%3Ctitle%3EGroup%2016%3C%2Ftitle%3E%3Cdesc%3ECreated%20with%20Sketch.%3C%2Fdesc%3E%3Cdefs%3E%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%3Cfilter%20x%3D%27-18.1%25%27%20y%3D%27-12.9%25%27%20width%3D%27136.2%25%27%20height%3D%27136.2%25%27%20filterUnits%3D%27objectBoundingBox%27%20id%3D%27filter-2%27%3E%3CfeOffset%20dx%3D%270%27%20dy%3D%272%27%20in%3D%27SourceAlpha%27%20result%3D%27shadowOffsetOuter1%27%3E%3C%2FfeOffset%3E%3CfeGaussianBlur%20stdDeviation%3D%272%27%20in%3D%27shadowOffsetOuter1%27%20result%3D%27shadowBlurOuter1%27%3E%3C%2FfeGaussianBlur%3E%3CfeColorMatrix%20values%3D%270%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200.116423234%200%27%20type%3D%27matrix%27%20in%3D%27shadowBlurOuter1%27%3E%3C%2FfeColorMatrix%3E%3C%2Ffilter%3E%3C%2Fdefs%3E%3Cg%20id%3D%27Page-1%27%20stroke%3D%27none%27%20stroke-width%3D%271%27%20fill%3D%27none%27%20fill-rule%3D%27evenodd%27%3E%3Cg%20id%3D%271-copy-20%27%20transform%3D%27translate(-1246.000000%2C%20-664.000000)%27%3E%3Cg%20id%3D%27Group-16%27%20transform%3D%27translate(1250.000000%2C%20666.000000)%27%3E%3Cg%20id%3D%27Oval-4%27%3E%3Cuse%20fill%3D%27white%27%20fill-opacity%3D%271%27%20filter%3D%27url(%23filter-2)%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3Cuse%20fill%3D%27${encodeURIComponent( brandColor ) }%27%20fill-rule%3D%27evenodd%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3C%2Fg%3E%3Cg%20id%3D%27Group-5%27%20transform%3D%27translate(12.000000%2C%2011.000000)%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23FFFFFF%27%3E%3Cg%20id%3D%27fast-forward-arrows%27%20transform%3D%27translate(6.173934%2C%200.000000)%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3Cg%20id%3D%27fast-forward-arrows-copy%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\");\r\n\t\t\t}\r\n\t\t\t[dir=\"rtl\"].cc-sdk .submit-icon{\r\n\t\t\t\tbackground-image: url(\"data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%2747px%27%20height%3D%2747px%27%20viewBox%3D%270%200%2047%2047%27%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%3E%0A%20%20%20%20%3Cdesc%3ECreated%20with%20Sketch.%3C%2Fdesc%3E%0A%20%20%20%20%3Cdefs%3E%3C%2Fdefs%3E%0A%20%20%20%20%3Cg%20id%3D%27Page-1%27%20stroke%3D%27none%27%20stroke-width%3D%271%27%20fill%3D%27none%27%20fill-rule%3D%27evenodd%27%3E%0A%20%20%20%20%20%20%20%20%3Cg%20id%3D%27Submit_Icon%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27Oval-4%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27path-1-link%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23white%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27path-1-link%27%20fill%3D%27${encodeURIComponent( brandColor ) }%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27Group-5%27%20transform%3D%27translate(12.000000%2C%2011.000000)%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23ffffff%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27fast-forward-arrows%27%20transform%3D%27translate(11.173934%2C%208.500000)%20scale(-1%2C%201)%20translate(-11.173934%2C%20-8.500000)%20translate(6.173934%2C%200.000000)%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27fast-forward-arrows-copy%27%20transform%3D%27translate(5.000000%2C%208.500000)%20scale(-1%2C%201)%20translate(-5.000000%2C%20-8.500000)%20%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%3C%2Fg%3E%0A%3C%2Fsvg%3E\");\r\n\t\t\t}\r\n\t\t\t.cc-sdk .cc-question-container__required-label{\r\n\t\t\tcolor: ${brandColor };\r\n\t\t}\r\n\t\t.cc-sdk input[type=\"range\"]::-webkit-slider-runnable-track{\r\n\t\t\tbackground: ${brandColor } !important;\r\n\t\t\t   background: -moz-linear-gradient(-45deg, ${brandColor } 0%, ${ this.brandColorDark } 100%)!important;\r\n\t\t\t   background: -webkit-linear-gradient(-45deg, ${brandColor }' 0%,${ this.brandColorDark } 100%)!important;\r\n\t\t\t   background: linear-gradient(135deg, ${brandColor } 0%,${ this.brandColorDark } 100%)!important;\r\n\t\t\t   filter: progid:DXImageTransform.Microsoft.gradient( startColorstr=${brandColor }, endColorstr=${ this.brandColorDark },GradientType=1 );\r\n\t\t   }\r\n\t\t.cc-sdk input[type=\"range\"]::-moz-range-track {\r\n\t\t\tbackground: ${brandColor } !important;\r\n\t\t\tbackground: -moz-linear-gradient(-45deg, ${brandColor } 0%, ${ this.brandColorDark } 100%)!important;\r\n\t\t\tbackground: -webkit-linear-gradient(-45deg, ${brandColor } 0%, ${ this.brandColorDark } 100%)!important;\r\n\t\t\tbackground: linear-gradient(135deg, ${brandColor } 0%,${ this.brandColorDark } 100%)!important;\r\n\t\t\tfilter: progid:DXImageTransform.Microsoft.gradient( startColorstr=${brandColor }, endColorstr=${ this.brandColorDark },GradientType=1 );\r\n\t\t}\r\n\t\t   .cc-sdk input[type=\"range\"]::-webkit-slider-thumb{\r\n\t\t\tborder: 1px solid ${brandColor } ;\r\n\t\t\tbackground-color: #fff;\r\n\t\t   }\r\n\t\t   .cc-sdk input[type=\"range\"]::-moz-range-thumb {\r\n\t\t\tborder: 1px solid ${brandColor } ;\r\n\t\t\tbackground-color: #fff;\r\n\t\t   }\r\n\t\t   .cc-sdk svg.timer circle {\r\n\t\t\tanimation: countdown ${time }s linear 1 forwards;\r\n\t\t\tstroke: ${brandColor };\r\n\t\t   }\r\n\t\t   .cc-sdk input[type=range].selected::-webkit-slider-thumb {\r\n\t\t\t\tbackground-color: ${brandColor };\r\n\t\t\t}\r\n\t\t\t.cc-sdk input[type = range].selected::-moz - range - thumb {\r\n\t\t\t\tbackground-color: ${brandColor };\r\n\t\t\t}\r\n\t\t\t.cc-sdk .cc-checkbox label:hover:before{\r\n\t\t\t\tborder: solid 1px ${brandColor };\r\n\t\t\t}\r\n\t\t @media (max-width: 768px){\r\n\t \t\t\t.ccsdk-overlay.glass{\r\n\t \t\t\tbackground-color:rgba(255,255,255,.85);\r\n\t \t\t\tbackground-image:none;\r\n\t\t\t\t}\r\n\t\t\t\t.cc-sdk.cc-popup-container{\r\n\t\t\t\t\tbackground-color : transparent;\r\n\t\t\t\t}\r\n\t\t\t\t.cc-sdk.cc-popup-container .ccsdk-overlay.glass{\r\n\t\t\t\t\tbackground-color : ${this.util.hexToRGB( brandColor, .9 ) };\r\n\t\t\t\t}\r\n\t\t\t\t.cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text{\r\n\t\t\t\t\tcolor:#fff;\r\n\t\t\t\t}\r\n\t\t`;\r\n\t\tthis.util.appendStyle( css );\r\n\r\n\t}\r\n}\r\nexport { Theme }\r\n","import { DomUtilities } from './DomUtilities';\r\nclass Slider {\r\n  inputRange: any;\r\n  rangeTip: any;\r\n  maxValue: number;\r\n  speed: number;\r\n  currValue: number;\r\n  rafID: any;\r\n  timeout: any;\r\n  util: any\r\n\r\n  constructor() {\r\n    this.inputRange = document.getElementsByClassName( 'cc-sdk-range' )[ 0 ];\r\n    this.rangeTip = this.inputRange.parentNode.querySelectorAll( \".act-slider-tip\" )[ 0 ];\r\n    this.util = new DomUtilities();\r\n    //  this.maxValue = 100; // the higher the smoother when dragging\r\n    this.speed = 5;\r\n\r\n\r\n    // set min/max value\r\n    // this.inputRange.min = 0;\r\n    this.inputRange.min = this.inputRange.getAttribute( 'min' );\r\n    // this.inputRange.max = this.maxValue;\r\n    this.inputRange.max = this.inputRange.getAttribute( 'max' );\r\n    this.setupListeners();\r\n  }\r\n\r\n  setupListeners() {\r\n    let self: Slider = this;\r\n\r\n    // bind events\r\n    this.inputRange.addEventListener( 'mouseup', this.clearTo, false );\r\n\r\n    // move gradient\r\n    this.inputRange.addEventListener( 'input', function () {\r\n      self.updateRangeTip();\r\n      self.util.addClass( this, 'selected' );\r\n\r\n      //Change slide thumb color on way up\r\n      if ( this.value > 20 ) {\r\n        self.inputRange.classList.add( 'ltpurple' );\r\n      }\r\n      if ( this.value > 40 ) {\r\n        self.inputRange.classList.add( 'purple' );\r\n      }\r\n      if ( this.value > 60 ) {\r\n        self.inputRange.classList.add( 'pink' );\r\n      }\r\n\r\n      //Change slide thumb color on way down\r\n      if ( this.value < 20 ) {\r\n        self.inputRange.classList.remove( 'ltpurple' );\r\n      }\r\n      if ( this.value < 40 ) {\r\n        self.inputRange.classList.remove( 'purple' );\r\n      }\r\n      if ( this.value < 60 ) {\r\n        self.inputRange.classList.remove( 'pink' );\r\n      }\r\n    } );\r\n  }\r\n\r\n\r\n\r\n  updateRangeTip() {\r\n    let self: Slider = this;\r\n    this.rangeTip.style.display = 'block';\r\n    this.rangeTip.innerHTML = this.inputRange.value;\r\n  }\r\n\r\n  clearTo() {\r\n    clearTimeout( this.timeout );\r\n  }\r\n\r\n  // listen for unlock\r\n  // unlockStartHandler() {\r\n  //   let self : any = this;\r\n  //   // clear raf if trying again\r\n  //   window.cancelAnimationFrame(this.rafID);\r\n  //   // set to desired value\r\n  //   this.currValue = +self.value;\r\n  // }\r\n\r\n  // unlockEndHandler() {\r\n  //   // store current value\r\n  //   this.currValue = + this.value;\r\n  //   // determine if we have reached success or not\r\n  //   if(this.currValue >= this.maxValue) {\r\n  //      this.successHandler();\r\n  //   }\r\n  //   else {\r\n  //      this.rafID = window.requestAnimationFrame(this.animateHandler);\r\n  //   }\r\n  // }\r\n\r\n  // handle range animation\r\n  animateHandler() {\r\n    // calculate gradient transition\r\n    var transX = this.currValue - this.maxValue;\r\n\r\n    // update input range\r\n    this.inputRange.value = this.currValue;\r\n\r\n    //Change slide thumb color on mouse up\r\n    if ( this.currValue < 20 ) {\r\n      this.inputRange.classList.remove( 'ltpurple' );\r\n    }\r\n    if ( this.currValue < 40 ) {\r\n      this.inputRange.classList.remove( 'purple' );\r\n    }\r\n    if ( this.currValue < 60 ) {\r\n      this.inputRange.classList.remove( 'pink' );\r\n    }\r\n\r\n    // determine if we need to continue\r\n    if ( this.currValue > -1 ) {\r\n      window.requestAnimationFrame( this.animateHandler );\r\n    }\r\n\r\n    // decrement value\r\n    this.currValue = this.currValue - this.speed;\r\n  }\r\n\r\n  // handle successful unlock\r\n  successHandler() {\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\nexport { Slider };\r\n","//Manages trigger.\r\nimport { Cookie } from \"./helpers/Cookie\";\r\nimport { Constants } from \"./Constants\";\r\nimport { Triggers } from \"./Triggers\";\r\n//collect initial data\r\n//if on site time is null, add on site time\r\nif ( Cookie.get( Constants.CCTriggerSiteStartTime ) == null ) {\r\n  Cookie.set( Constants.CCTriggerSiteStartTime, new Date(), undefined, undefined );\r\n}\r\n//always add on page Time\r\nCookie.set( Constants.CCTriggerPageStartTime, new Date(), undefined, undefined );\r\n\r\nlet sitePageViewCount = Cookie.get( Constants.CCTriggerSitePageViewCount );\r\nif ( sitePageViewCount == null ) {\r\n  Cookie.set( Constants.CCTriggerSitePageViewCount, 1, undefined, undefined );\r\n} else {\r\n  sitePageViewCount = ( parseInt( sitePageViewCount ) + 1 ).toString();\r\n  Cookie.set( Constants.CCTriggerSitePageViewCount, sitePageViewCount, undefined, undefined );\r\n}\r\n\r\nlet individualPageViewCount = Cookie.get( Constants.CCTriggerIndividualPageViewCount );\r\nif ( individualPageViewCount == null ) {\r\n  Cookie.set( Constants.CCTriggerIndividualPageViewCount, 1, undefined, window.location.href );\r\n} else {\r\n  individualPageViewCount = ( parseInt( individualPageViewCount ) + 1 ).toString();\r\n  Cookie.set( Constants.CCTriggerIndividualPageViewCount, individualPageViewCount, undefined, window.location.href );\r\n}\r\n\r\n( window as any ).click = 0;\r\n\r\nwindow.onscroll = function ( e ) {\r\n  // called when the window is scrolled.  \r\n  let doc = document.documentElement;\r\n  let left = ( window.pageXOffset || doc.scrollLeft ) - ( doc.clientLeft || 0 );\r\n  let top = ( window.pageYOffset || doc.scrollTop ) - ( doc.clientTop || 0 );\r\n  ( window as any ).ccsdkTopOffset = top;\r\n  TriggerManager.processScrollTriggers( top );\r\n}\r\n\r\ndocument.onclick = function ( e ) {\r\n  ( window as any ).click++;\r\n}\r\n\r\n//TriggerManager adds to survey Queue\r\nclass TriggerManager {\r\n\r\n  static triggerInterval: any = null;\r\n  static triggerInstances: any = {};\r\n\r\n  constructor() {\r\n    //initialize triggers\r\n    //add those triggers which aren't completed yet.\r\n  }\r\n\r\n  static addSurvey( surveyId: any, trigger: Triggers ) {\r\n    TriggerManager.triggerInstances[ surveyId ] = trigger;\r\n    if ( Object.keys( TriggerManager.triggerInstances ).length >= 1 ) {\r\n      ( window as any ).ccsdkDebug ? console.log( TriggerManager.triggerInterval ) : '';\r\n      if ( TriggerManager.triggerInterval == null ) {\r\n        ( window as any ).ccsdkDebug ? console.log( \"TriggerHandler : Setting up Interval Trigger Handlers.\" ) : '';\r\n        TriggerManager.triggerInterval = setInterval( TriggerManager.processIntervalTriggers, 1000 );\r\n      }\r\n      //processing sequential triggers if any.\r\n      // console.log(\"TriggerHandler : Processing sequential triggers for  \" + surveyId);\r\n      // TriggerManager.processTriggersBySurveyId(surveyId);\r\n    }\r\n  }\r\n\r\n  static removeSurvey( surveyId: string ) {\r\n    delete TriggerManager.triggerInstances[ surveyId ];\r\n    if ( Object.keys( TriggerManager.triggerInstances ).length == 0 ) {\r\n      clearInterval( TriggerManager.triggerInterval );\r\n    }\r\n  }\r\n\r\n  static processIntervalTriggers() {\r\n    //if some survey is already running skip processing surveys for now?or queue it?.\r\n    Cookie.set( Constants.CCTriggerPageElapsedTime, new Date(), undefined, window.location.href );\r\n    Cookie.set( Constants.CCTriggerSiteElapsedTime, new Date(), undefined, undefined );\r\n    //set cookies and call every process Interval Triggers.\r\n    for ( let trigger in TriggerManager.triggerInstances ) {\r\n      TriggerManager.triggerInstances[ trigger ].processIntervalTriggers();\r\n      TriggerManager.triggerInstances[ trigger ].processConditionalTriggers();\r\n    }\r\n  }\r\n\r\n  static processScrollTriggers( scrollNow ) {\r\n    for ( let trigger in TriggerManager.triggerInstances ) {\r\n      //process all scroll triggers.\r\n      TriggerManager.triggerInstances[ trigger ].processScrollTriggers( scrollNow );\r\n    }\r\n  }\r\n\r\n  static disableTriggers( surveyId: string ) {\r\n    TriggerManager.triggerInstances[ surveyId ].disableTriggers();\r\n  }\r\n\r\n};\r\n\r\n\r\n\r\nexport { TriggerManager };","import { Cookie } from \"./helpers/Cookie\";\r\nimport { Constants } from \"./Constants\";\r\nimport { SurveyManager } from \"./SurveyManager\";\r\nimport { TriggerUtils } from \"./helpers/TriggerUtils\";\r\nimport { CCSDKConfig } from \"./interfaces/CCSDKConfig\";\r\n\r\nclass Triggers {\r\n\r\n  ccsdk: any;\r\n  pageCountTrigger: boolean;\r\n  pageTimeTrigger: boolean;\r\n  siteCountTrigger: boolean;\r\n  siteTimeTrigger: boolean;\r\n  urlParamTrigger: boolean;\r\n  notUrlParamTrigger: boolean;\r\n  utmParamTrigger: boolean;\r\n  scrollPixelsTrigger: boolean;\r\n  minPageCount: number;\r\n  minSiteCount: number;\r\n  minPageTime: number;\r\n  minSiteTime: number;\r\n  minScrollPixels: number;\r\n  utm: string;\r\n  inUrl: RegExp;\r\n  notinUrl: RegExp;\r\n  pageCountTriggerEnabled: boolean;\r\n  siteCountTriggerEnabled: boolean;\r\n  pageTimeTriggerEnabled: boolean;\r\n  siteTimeTriggerEnabled: boolean;\r\n  urlParamTriggerEnabled: boolean;\r\n  notUrlParamTriggerEnabled: boolean;\r\n  utmParamTriggerEnabled: boolean;\r\n  scrollPixelsTriggerEnabled: boolean;\r\n\r\n  conditionalTriggers: any;\r\n\r\n  constructor( ccsdk ) {\r\n    this.ccsdk = ccsdk;\r\n    this.pageCountTrigger = false;\r\n    this.siteCountTrigger = false;\r\n    this.pageTimeTrigger = false;\r\n    this.siteTimeTrigger = false;\r\n    this.urlParamTrigger = false;\r\n    this.notUrlParamTrigger = false;\r\n    this.utmParamTrigger = false;\r\n    this.scrollPixelsTrigger = false;\r\n\r\n    //disable all triggers.\r\n    this.pageCountTriggerEnabled = false;\r\n    this.siteCountTriggerEnabled = false;\r\n    this.pageTimeTriggerEnabled = false;\r\n    this.siteTimeTriggerEnabled = false;\r\n    this.urlParamTriggerEnabled = false;\r\n    this.notUrlParamTriggerEnabled = false;\r\n    this.utmParamTriggerEnabled = false;\r\n    this.scrollPixelsTriggerEnabled = false;\r\n    this.conditionalTriggers = {};\r\n  }\r\n\r\n\r\n  enableClickTrigger( target: string, cb: any ) {\r\n    let item = document.querySelectorAll( target )[ 0 ];\r\n    if ( typeof item !== 'undefined' ) {\r\n      item.addEventListener( 'click', cb );\r\n    }\r\n  }\r\n\r\n  enablePageCountTrigger( minPageCount: number ) {\r\n    this.minPageCount = minPageCount;\r\n    this.pageCountTriggerEnabled = true;\r\n    this.TriggerPopUpByPageCount();\r\n  }\r\n\r\n  enableSiteCountTrigger( minSiteCount: number ) {\r\n    this.minSiteCount = minSiteCount;\r\n    this.pageCountTriggerEnabled = true;\r\n    this.TriggerPopUpByPageCount();\r\n  }\r\n\r\n  enablePageTimeTrigger( minPageTime: number ) {\r\n    this.minPageTime = minPageTime;\r\n    this.pageTimeTriggerEnabled = true;\r\n    this.TriggerPopUpByTimeSpentOnPage();\r\n  }\r\n\r\n  enableSiteTimeTrigger( minSiteTime: number ) {\r\n    this.minSiteTime = minSiteTime;\r\n    this.siteTimeTriggerEnabled = true;\r\n    this.TriggerPopUpByTimeSpentOnSite();\r\n  }\r\n\r\n  enablePopUpByURLPatternTrigger( urlPattern: RegExp ) {\r\n    this.inUrl = urlPattern;\r\n    this.urlParamTriggerEnabled = true;\r\n    this.TriggerPopUpByURLPattern();\r\n  }\r\n\r\n  enablePopUpByNotURLPatternTrigger( urlPattern: RegExp ) {\r\n    this.notinUrl = urlPattern;\r\n    this.notUrlParamTriggerEnabled = true;\r\n    this.TriggerPopUpByNotURLPattern();\r\n  }\r\n\r\n  enablePopUpByUTMPatternTrigger( urlPattern: string ) {\r\n    this.utm = urlPattern;\r\n    this.utmParamTriggerEnabled = true;\r\n    this.TriggerPopUpByUTMParameter();\r\n  }\r\n\r\n  enableScrollPixelsTrigger( minScrollPixels: number ) {\r\n    this.minScrollPixels = minScrollPixels;\r\n    this.scrollPixelsTriggerEnabled = true;\r\n\r\n  }\r\n\r\n  processIntervalTriggers() {\r\n    //if survey already launched\r\n    //skip processing.\r\n    if ( this.ccsdk.surveyRunning || this.ccsdk.surveyDone ) {\r\n      return;\r\n    }\r\n    this.TriggerPopUpByTimeSpentOnPage();\r\n    this.TriggerPopUpByTimeSpentOnSite();\r\n  }\r\n\r\n  setConditionalTriggers( config: CCSDKConfig ) {\r\n    ( window as any ).ccsdkDebug ? console.log( config.grepURL ) : '';\r\n    //\r\n    if ( ( typeof config.click !== 'undefined' ) && ( config.click != 0 ) ) {\r\n      this.conditionalTriggers.click = config.click;\r\n    }\r\n    if ( ( typeof config.onExitDetect !== 'undefined' ) ) {\r\n      this.conditionalTriggers.onExitDetect = config.onExitDetect;\r\n    }\r\n    // if ((typeof config.cssSelector !== 'undefined')) {\r\n    //   this.conditionalTriggers.cssSelector = config.cssSelector;\r\n    // }\r\n    if ( ( typeof config.waitSeconds !== 'undefined' ) && ( config.waitSeconds !== 0 ) ) {\r\n      this.conditionalTriggers.waitSeconds = config.waitSeconds;\r\n    }\r\n    if ( ( typeof config.scrollPercent !== 'undefined' ) && ( config.scrollPercent !== 0 ) ) {\r\n      this.conditionalTriggers.scrollPercent = config.scrollPercent;\r\n    }\r\n    if ( ( typeof config.grepInvertURL !== 'undefined' ) && ( config.grepInvertURL ) ) {\r\n      this.conditionalTriggers.grepInvertURL = config.grepInvertURL;\r\n    }\r\n    if ( ( typeof config.grepURL !== 'undefined' ) && ( config.grepURL ) ) {\r\n      this.conditionalTriggers.grepURL = config.grepURL;\r\n    }\r\n\r\n  }\r\n\r\n  processConditionalTriggers() {\r\n    //gather all conditional triggers and process them.\r\n    let self = this;\r\n    let isEnabled = true;\r\n    if ( this.ccsdk.surveyRunning || this.ccsdk.surveyDone ) {\r\n      ( window as any ).ccsdkDebug ? console.log( 'returning' ) : '';\r\n      return;\r\n    }\r\n    if ( typeof this.conditionalTriggers !== 'undefined' ) {\r\n      if ( Object.keys( this.conditionalTriggers ).length == 0 ) {\r\n        return false;\r\n      }\r\n      for ( let conditionalTrigger in this.conditionalTriggers ) {\r\n        if ( this.conditionalTriggers[ conditionalTrigger ] != null ) {\r\n          switch ( conditionalTrigger ) {\r\n            case \"onExitDetect\":\r\n              let onExitDetect = self.ccsdk.util.initListener( \"mouseout\", \"document\", function () {\r\n                ( window as any ).ccsdkDebug ? console.log( \"Mouse out\" ) : '';\r\n\r\n              } );\r\n\r\n              onExitDetect.internalHandler = self.ccsdk.util.listener( document, onExitDetect.type, onExitDetect.id, onExitDetect.cb );\r\n\r\n              break;\r\n            case \"click\":\r\n              //find click count on screen\r\n              //calculate click count\r\n              // if((window as any).click > this.conditionalTriggers.click) {\r\n              //   return SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n              // }\r\n              isEnabled = isEnabled && ( ( window as any ).click >= this.conditionalTriggers.click );\r\n              break;\r\n            case \"waitSeconds\":\r\n              let pageStartTime = new Date( Cookie.get( Constants.CCTriggerPageStartTime ) ).getTime();\r\n              let pageTime = new Date( Cookie.get( Constants.CCTriggerPageElapsedTime ) ).getTime();\r\n              isEnabled = isEnabled && TriggerUtils.checkTimeCondition( pageTime, pageStartTime, this.conditionalTriggers[ conditionalTrigger ] );\r\n              ( window as any ).ccsdkDebug ? console.log( 'waitSeconds enabled', isEnabled ) : '';\r\n              break;\r\n            case \"scrollPercent\":\r\n              //fill it with current scroll position\r\n              isEnabled = isEnabled && TriggerUtils.checkScroll( ( window as any ).ccsdkTopOffset, this.conditionalTriggers[ conditionalTrigger ] );\r\n              ( window as any ).ccsdkDebug ? console.log( 'scrollPercent enabled', isEnabled ) : '';\r\n\r\n              break;\r\n            case \"grepURL\":\r\n              isEnabled = isEnabled && TriggerUtils.checkInUrl( this.conditionalTriggers[ conditionalTrigger ] );\r\n              ( window as any ).ccsdkDebug ? console.log( 'grepURL enabled', isEnabled ) : '';\r\n              break;\r\n            case \"grepInvertURL\":\r\n              isEnabled = isEnabled && !TriggerUtils.checkInUrl( this.conditionalTriggers[ conditionalTrigger ] );\r\n              ( window as any ).ccsdkDebug ? console.log( 'grepInvertURL enabled', isEnabled ) : '';\r\n              break;\r\n          }\r\n        }\r\n      }\r\n      if ( isEnabled ) {\r\n        if ( this.ccsdk && this.ccsdk.tracking ) {\r\n          this.ccsdk.tracking.trackEvent( 'Popped Up', {\r\n            token: this.ccsdk.tracking.token,\r\n            data: {\r\n              name: null,\r\n              action: null\r\n            }\r\n          }, null, null )\r\n        }\r\n        SurveyManager.addSurvey( this.ccsdk.surveyToken );\r\n      }\r\n    } else {\r\n      //do nothing.\r\n    }\r\n  }\r\n\r\n  processNonConditionalTriggers() {\r\n    //process all non conditional one shot triggers here?\r\n  }\r\n\r\n  processScrollTriggers( scrollNow: number ) {\r\n    this.TriggerPopUpByScrollPixels( scrollNow );\r\n  }\r\n\r\n  TriggerPopUpByPageCount() {\r\n    let pageCount = parseInt( Cookie.get( Constants.CCTriggerSitePageViewCount ) );\r\n    if ( pageCount == NaN ) {\r\n      pageCount = 0;\r\n    }\r\n    //!(window as any).globalSurveyRunning && \r\n    if ( !this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.pageCountTrigger && TriggerUtils.checkPageCount( pageCount, this.minPageCount ) ) {\r\n      this.pageCountTrigger = true;\r\n      //displayQuestion\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey( this.ccsdk.surveyToken );\r\n    } else {\r\n      //already executed.\r\n      //or condition not satisified yet.\r\n    }\r\n  }\r\n\r\n\r\n  //minPageTime in seconds\r\n  TriggerPopUpByTimeSpentOnPage() {\r\n    let pageStartTime = new Date( Cookie.get( Constants.CCTriggerPageStartTime ) ).getTime();\r\n    let pageTime = new Date( Cookie.get( Constants.CCTriggerPageElapsedTime ) ).getTime();\r\n\r\n    //!(window as any).globalSurveyRunning && \r\n    if ( !this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.pageTimeTrigger && TriggerUtils.checkTimeCondition( pageTime, pageStartTime, this.minPageTime ) ) {\r\n      this.pageTimeTrigger = true;\r\n      //displayQuestion\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey( this.ccsdk.surveyToken );\r\n    } else {\r\n      //already executed.\r\n      //or condition not satisified yet.\r\n    }\r\n  }\r\n\r\n  TriggerPopUpByTimeSpentOnSite() {\r\n    let siteStartTime = new Date( Cookie.get( Constants.CCTriggerSiteStartTime ) ).getTime();\r\n    let siteTime = new Date( Cookie.get( Constants.CCTriggerSiteElapsedTime ) ).getTime();\r\n    //!(window as any).globalSurveyRunning && \r\n    if ( !this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.siteTimeTrigger && TriggerUtils.checkTimeCondition( siteTime, siteStartTime, this.minSiteTime ) ) {\r\n      this.siteTimeTrigger = true;\r\n      //displayQuestion\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey( this.ccsdk.surveyToken );\r\n    } else {\r\n      //already executed.\r\n      //or condition not satisified yet.\r\n    }\r\n  }\r\n\r\n  TriggerPopUpByInactivity() {\r\n\r\n  }\r\n\r\n  TriggerPopUpByScrollPixels( scrollNow: number ) {\r\n    //!(window as any).globalSurveyRunning && \r\n    if ( !this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.scrollPixelsTrigger && TriggerUtils.checkScroll( scrollNow, this.minScrollPixels ) ) {\r\n      this.scrollPixelsTrigger = true;\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey( this.ccsdk.surveyToken );\r\n      // this.ccsdk.initSurvey();\r\n      // SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n    } else {\r\n      //already executed?\r\n      //or condition not satisified yet.\r\n    }\r\n  }\r\n\r\n  //run only once?\r\n  TriggerPopUpByURLPattern() {\r\n    //!(window as any).globalSurveyRunning && \r\n    if ( !this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.urlParamTrigger && TriggerUtils.checkInUrl( this.inUrl ) ) {\r\n      this.urlParamTrigger = true;\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey( this.ccsdk.surveyToken );\r\n    } else {\r\n\r\n    }\r\n  }\r\n\r\n  TriggerPopUpByNotURLPattern() {\r\n    //!(window as any).globalSurveyRunning && \r\n    if ( !this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.notUrlParamTrigger && !TriggerUtils.checkInUrl( this.inUrl ) ) {\r\n      this.notUrlParamTrigger = true;\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey( this.ccsdk.surveyToken );\r\n    } else {\r\n\r\n    }\r\n  }\r\n\r\n  TriggerPopUpByUTMParameter() {\r\n    let utmP = this.utm.split( \"=\" );\r\n    let utmVal = Cookie.getParameterByName( utmP[ 0 ], undefined );\r\n    //!(window as any).globalSurveyRunning && \r\n    if ( !this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.utmParamTrigger && utmVal === utmP[ 1 ] ) {\r\n      this.utmParamTrigger = true;\r\n\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey( this.ccsdk.surveyToken );\r\n    }\r\n  }\r\n\r\n  resetTriggers() {\r\n    this.pageCountTrigger = false;\r\n    this.pageTimeTrigger = false;\r\n    this.siteTimeTrigger = false;\r\n    this.urlParamTrigger = false;\r\n    this.scrollPixelsTrigger = false;\r\n  }\r\n}\r\n\r\nexport { Triggers };\r\n\r\n\r\n// function triggerHandler(surveyHandler) {\r\n//   //survey specific Trigger Handlers\r\n//   // self.surveyRunning = self.util.get('#' + self.surveyToken  + \"-survey\").length == 1;\r\n  // Cookie.set(Constants.CCTriggerPageElapsedTime, new Date(), undefined, window.location.href);\r\n  // Cookie.set(Constants.CCTriggerSiteElapsedTime, new Date(), undefined, undefined);\r\n//   surveyHandler.triggers.TriggerPopUpByTimeSpentOnSite(surveyHandler.siteInterval);\r\n//   // surveyHandler.surveyRunning = surveyHandler.util.get('#' + self.surveyToken  + \"-survey\").length == 1;\r\n//   surveyHandler.triggers.TriggerPopUpByTimeSpentOnPage(surveyHandler.pageInterval);\r\n// }\r\n\r\n//call below functions when survey is locked and loaded.\r\n// self.triggers.TriggerPopUpByURLPattern(/xyz=33/);\r\n// self.triggers.TriggerPopUpByUTMParameter();\r\n// self.triggerInterval = setInterval(self.triggerHandler, 1000, self);","class TriggerUtils {\r\n\r\n\r\n    public static checkInUrl(inUrl : RegExp) {\r\n        return window.location.href.match(inUrl) != null && window.location.href.match(inUrl).length > 0;\r\n    }\r\n\r\n    public static checkTimeCondition(pageTime : number, pageStartTime : number, minPageTime : number) {\r\n        return Math.round((pageTime - pageStartTime) / 1000) > minPageTime;\r\n    }\r\n\r\n    public static checkScroll(scrollNow : number, minScrollPixels : number) {\r\n        return scrollNow > minScrollPixels;\r\n    }\r\n\r\n    public static checkPageCount(pageCount : number, minPageCount : number) {\r\n        return pageCount >= minPageCount;\r\n    }\r\n}\r\n\r\nexport { TriggerUtils };","import { RequestHelper } from './Request';\r\n\r\nexport class MatomoTracker {\r\n\r\n  public username;\r\n  public token;\r\n\r\n  trackEvent( event, payload, successCb, errorCb ) {\r\n    let url = new URL( 'https://matomo.getcloudcherry.com/piwik.php' );\r\n    // constants for project\r\n    const idsite = 4;\r\n    const rec = 1;\r\n\r\n    let searchParams = {\r\n      idsite,\r\n      rec,\r\n      action_name: event,\r\n      url: window.location.href,\r\n      action_url: window.location.href,\r\n      uid: this.username,\r\n      _cvar: { '1': [ 'Token', payload.token ] },\r\n      new_visit: event === 'Welcome Pop up Position' ? 1 : 0,\r\n      e_c: event,\r\n      e_a: payload.data.action,\r\n      e_n: payload.data.name,\r\n      rand: Math.ceil( Math.random() * 100 )\r\n    };\r\n    Object.keys( searchParams ).forEach( x => {\r\n      let param;\r\n      if ( typeof searchParams[ x ] === 'string' ) {\r\n        param = searchParams[ x ];\r\n      } else {\r\n        param = JSON.stringify( searchParams[ x ] );\r\n      }\r\n      url.searchParams.set( x, param );\r\n    } )\r\n    return RequestHelper.post( url.toString(), null, successCb, errorCb );\r\n  }\r\n}"],"sourceRoot":""}