{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/helpers/dom/DomUtilities.ts","webpack:///./src/Constants.ts","webpack:///./src/helpers/Cookie.ts","webpack:///./src/SurveyManager.ts","webpack:///./src/helpers/Request.ts","webpack:///./src/helpers/filters/LanguageTextFilter.ts","webpack:///./src/Config.ts","webpack:///./src/helpers/templates.ts","webpack:///./src/helpers/filters/filter-utils.ts","webpack:///./src/helpers/dom/Select.ts","webpack:///./src/helpers/filters/ConditionalFlowFilter.ts","webpack:///./src/polyfills/ccsdk.polyfill.ts","webpack:///./src/CCSDKEntry.ts","webpack:///./src/Survey.ts","webpack:///./src/SurveyHandler.ts","webpack:///./src/css/main.scss?8357","webpack:///./src/css/main.scss","webpack:///./node_modules/rtl-css-loader/lib/css-base.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./src/helpers/filters/ConditionalTextFilter.ts","webpack:///./src/helpers/dom/DomSurvey.ts","webpack:///./src/helpers/dom/Theme.ts","webpack:///./src/helpers/dom/Slider.ts","webpack:///./src/TriggerManager.ts","webpack:///./src/Triggers.ts","webpack:///./src/helpers/TriggerUtils.ts","webpack:///./src/helpers/tracking.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","templates_1","DomUtilities","selector","document","querySelectorAll","appendStyle","css","head","getElementsByTagName","style","createElement","type","styleSheet","cssText","appendChild","createTextNode","remove","el","parentNode","removeChild","removeAll","elements","Array","forEach","removeClassAll","className","_this","this","removeClass","addClassAll","addClass","classList","replace","RegExp","split","join","add","toggleClass","contains","hasClass","test","ready","fn","attachEvent","readyState","addEventListener","getParents","parentSelector","undefined","parents","push","listener","evt","sel","handler","internalHandler","event","target","Element","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","indexOf","initListener","id","cb","checkIfListenerExists","ar","_i","ar_1","length","on","off","removeEventListener","removeListener","removeAllListeners","ar_2","trigger","eventName","data","CustomEvent","detail","createEvent","initCustomEvent","dispatchEvent","removeTrigger","shadeBlendConvert","from","to","sbcRip","RGB","slice","parseFloat","parseInt","Math","round","h","b","f","toString","hexToRGB","hex","alpha","substr","map","g","arrayContains","needle","findNaN","index","item","generateSelectOptions","arr","translatedArr","isArray","res","translatedOpt","generateLanguageSelectOptions","checkOptionContainsImage","opt","generateRadioImageOptions","optHtml","templates","option_radio_image","generateRadioIgnoreImageOptions","option_radio","generateRadioOptions","generateCheckboxImageOptions","option_checkbox_image","generateCheckboxIgnoreImageOptions","option_checkbox","generateCheckboxOptions","Constants","CCTriggerPageStartTime","CCTriggerPageElapsedTime","CCTriggerSiteStartTime","CCTriggerSiteElapsedTime","CCTriggerSitePageViewCount","CCTriggerIndividualPageViewCount","SURVEY_IMPRESSION_EVENT","SURVEY_START_EVENT","SURVEY_DATA_EVENT","SURVEY_END_EVENT","SURVEY_CLOSE_EVENT","SURVEY_QUESTION_EVENT","SURVEY_ANSWER_EVENT","SURVEY_CLICK_EVENT","GRANT_TYPE","AUTHORIZATION","AUTHORIZATION_BEARER","SURVEY_CLIENT","Cookie","set","days","path","date","Date","setTime","getTime","expires","toUTCString","dir","cookie","nameEQ","ca","charAt","substring","delete","getParameterByName","url","window","location","href","results","exec","decodeURIComponent","SurveyManager","initializeSurvey","surveyId","surveyInstances","setupSurvey","console","error","addSurvey","ccsdkDebug","log","surveyQueue","processQueueInterval","setInterval","processQueueIntervalCB","removeSurvey","survey","splice","clearInterval","globalSurveyRunning","pop","setSurveyRunning","globalSurveyStartTime","unsetSurveyRunning","makeRequest","method","postParams","headers","successcb","errorcb","xhr","XMLHttpRequest","open","onload","status","response","match","JSON","parse","statusText","onerror","keys","setRequestHeader","send","RequestHelper","getWithHeaders","postWithHeaders","stringify","post","LanguageTextFilter","translateQuestionText","surveyHandler","question","ccsdk","config","language","translated","text","qText","translateMessages","surveyData","translateDisplayLegend","displayLegend","translateMultiSelect","multiSelect","translatedOptions_1","x","translateMultiSelectOption","option","effectiveMultiselect","Config","API_URL","SURVEY_BY_TOKEN","SURVEY_PARTIAL_RESPONSE","CDN_URL","CDN_ASSET_URL","POST_LOGIN_TOKEN","GET_SURVEY_THROTTLE_LOGIC","POST_THROTTLING","POST_THROTTLING_ADD_ENTRIES","POST_SURVEY_FINAL","GET_CAMPAIGN","QuestionSurvey","QuestionStart","QuestionSingleline","QuestionNumber","QuestionMultiline","QuestionCheckbox","QuestionRadio","QuestionRadioImage","QuestionScale","QuestionCSATAgreement5","QuestionCSATSatisfaction5","QuestionNPS","QuestionSelect","QuestionMultiSelect","QuestionSmile","QuestionSmileInverted","QuestionStar","QuestionSlider","OptionRadioImage","OptionRadio","OptionCheckbox","OptionCheckboxImage","ThankYou","LanguageSelector","question_survey","question_start","question_text","question_number","question_scale","question_csat_agreement_5","question_csat_satisfaction_5","question_nps","question_multi_line_text","question_multi_select","question_radio","question_radio_image","question_checkbox","question_select","question_smile_5","question_smile_5_inverted","question_star_5","question_slider","thankyou","language_selector","isNumberCheck","filterQuestion","answerCheck","isAnd","groupBy","toUpperCase","isOr","doesSatisfy","answer","getAnswerForQuestionId","questionId","toLowerCase","textInput","iFoundAll","getQuestionById","questionAnswerText","_a","aAnswer","displayType","numberInput","number","questionCompare","a","sequence","checkLanguage","fOption","DomUtilities_1","LanguageTextFilter_1","Select","qId","listeners","init","util","$body","$html","select","parent","getAttribute","self","classes","template","options","innerHTML","insertAdjacentHTML","setupListeners","ref2","e","selectOptions","selectWrapper","selectionTrigger","selectedOptionText","textContent","selectedValueText","addOrRemoveFromList","setAttribute","ref","ccSelect","stopPropagation","destroyListeners","setValue","selectTrigger","translatedSelection","selectOption","removeOption","csv","domOptions","allOptions_1","listAsString","list","itemIndex","filter_utils_1","ConditionalFlowFilter","aAddedCount","aRemovedCount","getConditionalSurveyQuestions","aQuestion","conditionalFilter","iSatisfied","iFailed","_b","_c","filterquestions","aFilterByQuestion","surveyQuestions","getSurveyQuestions","removeAnswer","sort","toStr","isCallable","maxSafeInteger","toLength","pow","len","Number","isNaN","isFinite","floor","abs","toInteger","min","max","arrayLike","items","TypeError","T","mapFn","arguments","kValue","A","k","params","bubbles","cancelable","Event","includes","searchElement","fromIndex","y","Cookie_1","SurveyManager_1","Survey_1","localCCSDK","destroy","hide","show","prefill","prefillByTag","prefillByNote","isMobile","innerWidth","CCSDK","queue","q","args","functionName","apply","queue_1","eventCCReady","initEvent","surveyToken","trim","isActive","Survey","tracking","trackEvent","token","action","dom","callback","answerObject","questionTag","fillPrefill","questionNote","fillPrefillByNote","SurveyHandler_1","DomSurvey_1","Constants_1","TriggerManager_1","Triggers_1","Request_1","Config_1","tracking_1","requester","isThrottled","surveyDone","surveyStatus","surveyRunning","thorttlingLogic","MatomoTracker","textDirection","triggers","Triggers","TriggerManager","SurveyHandler","brandColor","setHtmlTextDirection","setDisplayOptions","username","password","cssSelector","setConditionalTriggers","getSurveyThrottlingLogic","getThrottleUrl","loginData","access_token","checkThrottling","inputIds","uniqueIDQuestionIdOrTag","logics","filter","postThrottleUrl","throttleResponse","addThrottlingEntries","isOpen","addThrottleUrl","user","mobile","emailId","customId","surveySentDate","surveyOpenDate","channel","isOpened","debug","initSurvey","ccSDKElement","querySelector","ccSDKDir","direction","surveyDisplay","position","welcomePopupAnimation","surveyPosition","search","getSurveyData","fetchQuestions","questions","preFill","skipWelcomePage","hideLoader","initSurveyQuestions","displayWelcomeQuestion","DomSurvey","setTheme","keepAlive","onImpressionEvent","startSurvey","setCoolDownPeriod","surveyStartTime","acceptAnswers","attachSurvey","initSurveyDom","onSurveyStartEvent","fillPrefillDirect","enableClickTrigger","count","enablePageCountTrigger","count2","enableSiteCountTrigger","enablePageTimeTrigger","enableSiteTimeTrigger","enablePopUpByURLPatternTrigger","enablePopUpByNotURLPatternTrigger","enablePopUpByUTMPatternTrigger","enableScrollPixelsTrigger","ConditionalTextFilter_1","Select_1","ConditionalFlowFilter_1","answers","surveyAnswers","_prefillsPartiallyPosted","surveyPopupAnimation","domListeners","questionsToDisplay","prefillQuestions","conditionalQuestions","prefillResponses","prefillWithTags","prefillWithNote","prefillDirect","displayThankYouCb","finalPost","thankyouHtml","thankyouText","startText","startButtonText","branding","replaceInQuestionsContainer","thankyouContainer","onSurveyEndEvent","setTimeout","destroySurveyCb","acceptAnswersCb","postPartialAnswer","domSelectElements","setQIndex","randomNumber","random","surveyUrl","setupPrefill","setupSurveyContainer","cleanSurvey","displayQuestions","displayThankYou","destroySurvey","fillPrefillQuestionObject","surveyHtml","appendInBody","displayQuestionSelector","warningWelcomeText","onSurveyImpressionEvent","welcomeHtml","welcomeText","getElementById","showWelcomeContainer","welcomeQuestionDisplayTime","welcomeInterval","checkWelcomeQuestionDisplay","campaign","coolDownPeriod","now","killWelcomeQuestion","cancelKillWelcomeQuestion","displayLanguageSelector","options1","cTemplate1","concat","$questionContainer","firstChild","languageSelect","submitBtn","selectRes","removePrevListener","languageSelect2","isRTL","loadFirstQuestion","filterQuestions","getElementsByClassName","checkConditionals","compiledTemplate","compileTemplate","isPrefillQuestion","getPrefillResponseById","updatePrefillResponseById","tag","note","fillPrefillQuestion","valueType","responseStored","questionText","getAnswerTypeFromDisplayType","postPrefillPartialAnswer","fullSubmission","partialResponseId","surveyPartialUrl","resp","complete","onSurveyAnswerEvent","postSurveyFinalUrl","lastAnswer","answersAll","timeAtPost","finalData","locationId","responses","nps","surveyClient","responseDuration","_lastAnswer","questionTemplate","optMin","optMax","ConditionalTextFilter","filterText","isRequired","questionTags","tileColor","attributes","scaleColor","presentationMode","tileColorDark","startRange","startRangeLabel_1","endRangeLabel_1","anchorMetricName","metricName","customMetric","customMetrics","optionCategories","label","displayLegend_1","endRange","mobileImageUrl","imageVisibility010","scaleVisibility","scaleImageContainer","imageVisibility110","divider","optionStyle","dimension","legendDimension","initial_1","iterator","startRange_1","categoryRange","endRange_1","initial_2","color","initial_3","optionLeftExtraClass","optionRightExtraClass","optionMaxWidth","validationHint","characterLimit","acTemplate","multiSelect1","reverse","displayStyle","options2_1","options2_2","options3","acTemplate1","acTemplate2","options2","invertedMultiSelect","invertedMultiSelect_1","startRangeLabel","endRangeLabel","displayLegend2","startRangeLabel1","endRangeLabel1","displayLegend3","isRetired","isPrefillTags","isPrefillNote","isPrefillDirect","fillPrefillWithTags","fillPrefillWithNote","innerHeight","apiFill","staffFill","isQuestionFilled","surveyContainer","getSurveyContainer","welcomeContainer","getWelcomeContainer","content","result","mediaQuery","alreadyImportedModules","memo","isOldIE","getElement","singletonCounter","addStylesToDom","styles","domStyle","stylesInDom","refs","j","parts","addStyle","listToStyles","newStyles","base","part","media","sourceMap","insertStyleElement","insertInto","Error","lastStyleElementInsertedAtTop","stylesInsertedAtTop","insertAt","nextSibling","insertBefore","removeStyleElement","idx","addAttrs","attrs","obj","update","transform","singleton","styleIndex","createStyleElement","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","btoa","rel","link","createLinkElement","fixUrls","unescape","encodeURIComponent","oldSrc","newObj","DEBUG","mayRemove","newList","textStore","replaceText","replacement","Boolean","cssNode","childNodes","baseUrl","protocol","host","currentDir","pathname","fullMatch","origUrl","newUrl","unquotedOrigUrl","$1","conditionalText","conditionalText_1","setName","leadingDisplayTexts","filterByQuestion","groupTitle","trackSelects","trackRadios","currentQuestionListeners","qIndex","qResponse","time","theme","Theme_1","Theme","getQindex","$startBtn","onSurveyClickEvent","showLoader","nextQue","nextQuestion","prevQue","prevQuestion","closeSurvey","onSurveyCloseEvent","bodyElement","minSurvey","minimizeSurvey","$popupContainer2","$popupContainer","resumeText","resumeButtonText","updateProgress","currentQuestionId","width","loadQuestionSpecifics","leftIcon","onSurveyQuestionEvent","span","validationSpan","validationRegex","regex","submitQuestion","nextQ","rightIcon","nextIcon","$loader","html","appendInQuestionsContainer","startContainer","showLanguageSelector","qType","setupListenersQuestionScale","setupListenersQuestionNPS","setupListenersQuestionMultiline","setupListenersQuestionSelect","setupListenersQuestionRadio","setupListenersQuestionRadioImage","setupListenersQuestionCheckbox","setupListenersQuestionStar","setupListenersQuestionSmile","setupListenersQuestionCsat","setupListenersQuestionSlider","setupListenersQuestionSingleline","setupListenersQuestionNumber","selectedRating","selectedRating1","previousValue","previousSelection","allOptions","rating","previousValues_1","previousValues","checked","child","previousSibling","multilineRes","singlelineRes","numberRes","sliderRes","sliderInput","Slider_1","Slider","inputRange","rangeTip","speed","clearTo","updateRangeTip","display","clearTimeout","timeout","animateHandler","currValue","maxValue","requestAnimationFrame","sitePageViewCount","individualPageViewCount","click","onscroll","doc","documentElement","top","pageXOffset","scrollLeft","clientLeft","pageYOffset","scrollTop","clientTop","ccsdkTopOffset","processScrollTriggers","onclick","triggerInstances","triggerInterval","processIntervalTriggers","processConditionalTriggers","scrollNow","pageCountTrigger","siteCountTrigger","pageTimeTrigger","siteTimeTrigger","urlParamTrigger","notUrlParamTrigger","utmParamTrigger","scrollPixelsTrigger","pageCountTriggerEnabled","siteCountTriggerEnabled","pageTimeTriggerEnabled","siteTimeTriggerEnabled","urlParamTriggerEnabled","notUrlParamTriggerEnabled","utmParamTriggerEnabled","scrollPixelsTriggerEnabled","conditionalTriggers","minPageCount","TriggerPopUpByPageCount","minSiteCount","minPageTime","TriggerPopUpByTimeSpentOnPage","minSiteTime","TriggerPopUpByTimeSpentOnSite","urlPattern","inUrl","TriggerPopUpByURLPattern","notinUrl","TriggerPopUpByNotURLPattern","utm","TriggerPopUpByUTMParameter","minScrollPixels","grepURL","onExitDetect","waitSeconds","scrollPercent","grepInvertURL","conditionalTrigger","isEnabled","pageStartTime","pageTime","TriggerUtils_1","TriggerUtils","checkTimeCondition","checkScroll","checkInUrl","processNonConditionalTriggers","TriggerPopUpByScrollPixels","pageCount","NaN","checkPageCount","siteStartTime","siteTime","TriggerPopUpByInactivity","utmP","utmVal","resetTriggers","payload","successCb","errorCb","err","searchParams","idsite","rec","action_name","action_url","uid","1","rand","ceil","param"],"mappings":"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","file":"cc.en.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n","import { templates } from '../templates';\r\nimport { Config } from '../../Config';\r\n\r\nclass DomUtilities {\r\n\r\n  sbcRip: any;\r\n\r\n  constructor() {\r\n    // HTMLElement.prototype.matches = HTMLElement.prototype.matches ||\r\n    // HTMLElement.prototype.matchesSelector ||\r\n    // HTMLElement.prototype.webkitMatchesSelector ||\r\n    // HTMLElement.prototype.mozMatchesSelector ||\r\n    // HTMLElement.prototype.msMatchesSelector ||\r\n    // HTMLElement.prototype.oMatchesSelector;\r\n  }\r\n\r\n  get( selector: string ) {\r\n    return document.querySelectorAll( selector );\r\n  }\r\n\r\n  appendStyle( css: string ): void {\r\n    let head: any = document.head || document.getElementsByTagName( 'head' )[ 0 ];\r\n    let style: any = document.createElement( 'style' );\r\n    style.type = 'text/css';\r\n    if ( style.styleSheet ) {\r\n      style.styleSheet.cssText = css;\r\n    } else {\r\n      style.appendChild( document.createTextNode( css ) );\r\n    }\r\n    head.appendChild( style );\r\n  }\r\n\r\n  remove( el: any ) {\r\n    el.parentNode.removeChild( el );\r\n  }\r\n\r\n  removeAll( elements: any ): void {\r\n    Array.prototype.forEach.call( elements, ( el, i ) => {\r\n      el.parentNode.removeChild( el );\r\n    } );\r\n  }\r\n\r\n  css( elements: any, property: string, value: any ) {\r\n    Array.prototype.forEach.call( elements, ( el, i ) => {\r\n      el.style[ property ] = value;\r\n    } );\r\n  }\r\n\r\n  removeClassAll( elements: any, className: string ): void {\r\n    Array.prototype.forEach.call( elements, ( el, i ) => {\r\n      this.removeClass( el, className );\r\n    } );\r\n  }\r\n\r\n  addClassAll( elements: any, className: string ): void {\r\n    Array.prototype.forEach.call( elements, ( el, i ) => {\r\n      this.addClass( el, className );\r\n    } );\r\n  }\r\n\r\n  removeClass( el: any, className: string ): void {\r\n    // console.log(el);\r\n    if ( !el ) {\r\n      return;\r\n    }\r\n    if ( el.classList )\r\n      el.classList.remove( className );\r\n    else\r\n      el.className = el.className.replace( new RegExp( '(^|\\\\b)' + className.split( ' ' ).join( '|' ) + '(\\\\b|$)', 'gi' ), ' ' );\r\n  }\r\n  addClass( el: any, className: string ) {\r\n    if ( !el ) {\r\n      return;\r\n    }\r\n    if ( el.classList )\r\n      el.classList.add( className );\r\n    else\r\n      el.className += ' ' + className;\r\n  }\r\n  toggleClass( el: any, className: string ): void {\r\n    if ( el.classList ) {\r\n      if ( el.classList.contains( className ) )\r\n        el.classList.remove( className );\r\n      else\r\n        el.classList.add( className );\r\n    }\r\n\r\n\r\n  }\r\n  hasClass( el: any, className: string ) {\r\n    if ( el.classList )\r\n      return el.classList.contains( className );\r\n    else\r\n      return new RegExp( '(^| )' + className + '( |$)', 'gi' ).test( el.className );\r\n  }\r\n  ready( fn: any ): void {\r\n    if ( ( <any>document ).attachEvent ? document.readyState === \"complete\" : document.readyState !== \"loading\" ) {\r\n      fn();\r\n    } else {\r\n      document.addEventListener( 'DOMContentLoaded', fn );\r\n    }\r\n  }\r\n\r\n  getParents( el: any, parentSelector: any ): any {\r\n    // If no parentSelector defined will bubble up all the way to *document*\r\n    if ( parentSelector === undefined ) {\r\n      parentSelector = document;\r\n    }\r\n\r\n    var parents = [];\r\n    var p = el.parentNode;\r\n\r\n    while ( p !== parentSelector ) {\r\n      var o = p;\r\n      parents.push( o );\r\n      p = o.parentNode;\r\n    }\r\n    parents.push( parentSelector ); // Push that parentSelector you wanted to stop at\r\n\r\n    return parents;\r\n  }\r\n\r\n  listener( el: any, evt: any, sel: any, handler: any ): any {\r\n    let selectorMatches = function ( el, selector ) {\r\n      var p = Element.prototype;\r\n      var f = p.matches || p.webkitMatchesSelector || ( <any>p ).mozMatchesSelector || ( <any>p ).msMatchesSelector || function ( s ) {\r\n        return [].indexOf.call( document.querySelectorAll( s ), this ) !== -1;\r\n      };\r\n      return f.call( el, selector );\r\n    }\r\n    let internalHandler = function ( event ) {\r\n      var t = event.target;\r\n      while ( t && t !== this ) {\r\n        if ( selectorMatches( t, sel ) ) {\r\n          handler.call( t, event );\r\n        }\r\n        t = t.parentNode;\r\n      }\r\n    };\r\n    el.addEventListener( evt, internalHandler );\r\n    return internalHandler;\r\n  }\r\n\r\n\r\n\r\n\r\n  initListener( type: string, id: string, cb: any ) {\r\n    let ref: any = {\r\n      id: id,\r\n      type: type,\r\n      cb: cb,\r\n      internalHandler: undefined,\r\n    };\r\n    return ref;\r\n  }\r\n\r\n  checkIfListenerExists( id: string, ar: any ): boolean {\r\n    for ( let listener of ar ) {\r\n      if ( listener.id == id ) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  on( evt: any, el: any, handler: any ) {\r\n    el.addEventListener( evt, handler );\r\n  }\r\n  off( evt: any, el: any, handler: any ) {\r\n    el.removeEventListener( evt, handler );\r\n  }\r\n  removeListener( el: any, evt: any, handler: any ) {\r\n    el.removeEventListener( evt, handler );\r\n  }\r\n  removeAllListeners( ar: any ): boolean {\r\n    for ( let listener of ar ) {\r\n      this.removeListener( document.querySelectorAll( \"body\" )[ 0 ], listener.type, listener.internalHandler );\r\n    }\r\n    return true;\r\n  }\r\n\r\n  trigger( el: any, eventName: string, data: Object ) {\r\n    if ( typeof CustomEvent === 'function' ) {\r\n      var event = <any>new CustomEvent( eventName, { detail: data } );\r\n    } else {\r\n      var event = <any>document.createEvent( 'CustomEvent' );\r\n      event.initCustomEvent( eventName, true, true, data );\r\n    }\r\n\r\n    el.dispatchEvent( event );\r\n  }\r\n\r\n  removeTrigger( el: any, eventName: string ) {\r\n    el.removeEventListener( eventName );\r\n  }\r\n\r\n  shadeBlendConvert( p: number, from: any, to: string ): string {\r\n    if ( typeof ( p ) != \"number\" || p < -1 || p > 1 || typeof ( from ) != \"string\" || ( from[ 0 ] != 'r' && from[ 0 ] != '#' ) || ( typeof ( to ) != \"string\" && typeof ( to ) != \"undefined\" ) ) return null; //ErrorCheck\r\n    if ( !this.sbcRip ) this.sbcRip = function ( d ) {\r\n      var l = d.length, RGB = new Object();\r\n      if ( l > 9 ) {\r\n        d = d.split( \",\" );\r\n        if ( d.length < 3 || d.length > 4 ) return null;//ErrorCheck\r\n        RGB[ 0 ] = i( d[ 0 ].slice( 4 ) ), RGB[ 1 ] = i( d[ 1 ] ), RGB[ 2 ] = i( d[ 2 ] ), RGB[ 3 ] = d[ 3 ] ? parseFloat( d[ 3 ] ) : -1;\r\n      } else {\r\n        if ( l == 8 || l == 6 || l < 4 ) return null; //ErrorCheck\r\n        if ( l < 6 ) d = \"#\" + d[ 1 ] + d[ 1 ] + d[ 2 ] + d[ 2 ] + d[ 3 ] + d[ 3 ] + ( l > 4 ? d[ 4 ] + \"\" + d[ 4 ] : \"\" ); //3 digit\r\n        d = i( d.slice( 1 ), 16 ), RGB[ 0 ] = d >> 16 & 255, RGB[ 1 ] = d >> 8 & 255, RGB[ 2 ] = d & 255, RGB[ 3 ] = l == 9 || l == 5 ? r( ( ( d >> 24 & 255 ) / 255 ) * 10000 ) / 10000 : -1;\r\n      }\r\n      return RGB;\r\n    }\r\n    var i = parseInt, r = Math.round, h = from.length > 9, h = typeof ( to ) == \"string\" ? to.length > 9 ? true : to == \"c\" ? !h : false : h, b = p < 0, p = b ? p * -1 : p, to = to && to != \"c\" ? to : b ? \"#000000\" : \"#FFFFFF\", f = this.sbcRip( from ), t = this.sbcRip( to );\r\n    if ( !f || !t ) return null; //ErrorCheck\r\n    if ( h ) return \"rgb(\" + r( ( t[ 0 ] - f[ 0 ] ) * p + f[ 0 ] ) + \",\" + r( ( t[ 1 ] - f[ 1 ] ) * p + f[ 1 ] ) + \",\" + r( ( t[ 2 ] - f[ 2 ] ) * p + f[ 2 ] ) + ( f[ 3 ] < 0 && t[ 3 ] < 0 ? \")\" : \",\" + ( f[ 3 ] > -1 && t[ 3 ] > -1 ? r( ( ( t[ 3 ] - f[ 3 ] ) * p + f[ 3 ] ) * 10000 ) / 10000 : t[ 3 ] < 0 ? f[ 3 ] : t[ 3 ] ) + \")\" );\r\n    else return \"#\" + ( 0x100000000 + ( f[ 3 ] > -1 && t[ 3 ] > -1 ? r( ( ( t[ 3 ] - f[ 3 ] ) * p + f[ 3 ] ) * 255 ) : t[ 3 ] > -1 ? r( t[ 3 ] * 255 ) : f[ 3 ] > -1 ? r( f[ 3 ] * 255 ) : 255 ) * 0x1000000 + r( ( t[ 0 ] - f[ 0 ] ) * p + f[ 0 ] ) * 0x10000 + r( ( t[ 1 ] - f[ 1 ] ) * p + f[ 1 ] ) * 0x100 + r( ( t[ 2 ] - f[ 2 ] ) * p + f[ 2 ] ) ).toString( 16 ).slice( f[ 3 ] > -1 || t[ 3 ] > -1 ? 1 : 3 );\r\n  }\r\n\r\n  hexToRGB( hex: string, alpha: any ): string {\r\n    if ( !hex || [ 4, 7 ].indexOf( hex.length ) === -1 ) {\r\n      return; // throw new Error('Bad Hex');\r\n    }\r\n\r\n    hex = hex.substr( 1 );\r\n    // if shortcuts (#F00) -> set to normal (#FF0000)\r\n    if ( hex.length === 3 ) {\r\n      hex = hex.split( '' ).map( function ( el ) {\r\n        return el + el + '';\r\n      } ).join( '' );\r\n    }\r\n\r\n    var r = parseInt( hex.slice( 0, 2 ), 16 ),\r\n      g = parseInt( hex.slice( 2, 4 ), 16 ),\r\n      b = parseInt( hex.slice( 4, 6 ), 16 );\r\n\r\n    if ( alpha ) {\r\n      return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha + \")\";\r\n    } else {\r\n      return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\r\n    }\r\n  }\r\n\r\n\r\n  arrayContains( needle ) {\r\n    // Per spec, the way to identify NaN is that it is not equal to itself\r\n    var findNaN = needle !== needle;\r\n    var indexOf;\r\n\r\n    if ( !findNaN && typeof Array.prototype.indexOf === 'function' ) {\r\n      indexOf = Array.prototype.indexOf;\r\n    } else {\r\n      indexOf = function ( needle ) {\r\n        var i = -1, index = -1;\r\n\r\n        for ( i = 0; i < this.length; i++ ) {\r\n          var item = this[ i ];\r\n\r\n          if ( ( findNaN && item !== item ) || item === needle ) {\r\n            index = i;\r\n            break;\r\n          }\r\n        }\r\n\r\n        return index;\r\n      };\r\n    }\r\n\r\n    return indexOf.call( this, needle ) > -1;\r\n  }\r\n\r\n  generateSelectOptions( arr: string[], translatedArr: string[] ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let translatedOpt = ( translatedArr[ i ] || arr[ i ] ).split( ';' );\r\n        let arrOpt = arr[ i ].split( ';' );\r\n        res += '<option value=\"' + arrOpt[ 0 ] + '\">' + ( translatedOpt[ 0 ] ) + '</option>';\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n  generateLanguageSelectOptions( arr: any ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        if ( arr[ i ] == 'default' ) {\r\n          res += '<option value=\"' + arr[ i ] + '\">English (Default)</option>';\r\n        } else {\r\n          res += '<option value=\"' + arr[ i ] + '\">' + arr[ i ] + '</option>';\r\n        }\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n  checkOptionContainsImage( arr: any ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: boolean = true;\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let opt: any = arr[ i ];\r\n        res = res && ( opt.indexOf( ';' ) !== -1 ) && ( opt.indexOf( '.' ) !== -1 );\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n\r\n  generateRadioImageOptions( arr: string[], translatedArr: string[], id: string ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let optHtml: string = templates.option_radio_image;\r\n        let opt: any = arr[ i ].split( ';' )\r\n        let translatedOpt = translatedArr[ i ].split( ';' )\r\n        //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n        //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n        optHtml = optHtml.replace( /{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[ 1 ] );\r\n        optHtml = optHtml.replace( /{{qId}}/g, \"nm\" + id );\r\n        optHtml = optHtml.replace( /{{label}}/g, translatedOpt[ 0 ] );\r\n        optHtml = optHtml.replace( /{{labelFor}}/g, translatedOpt[ 0 ].replace( /\\s+/g, '-' ) );\r\n        optHtml = optHtml.replace( /{{value}}/g, opt[ 0 ] );\r\n        res += optHtml;\r\n\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n  generateRadioIgnoreImageOptions( arr: string[], translatedArr: string[], id: string ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let optHtml: string = templates.option_radio;\r\n        let opt: any = arr[ i ].split( ';' );\r\n        let translatedOpt = translatedArr[ i ].split( ';' );\r\n        //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n        //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n        optHtml = optHtml.replace( /{{qId}}/g, \"nm\" + id );\r\n        optHtml = optHtml.replace( /{{label}}/g, translatedOpt[ 0 ] );\r\n        optHtml = optHtml.replace( /{{labelFor}}/g, translatedOpt[ 0 ].replace( /\\s+/g, '-' ) );\r\n        optHtml = optHtml.replace( /{{value}}/g, opt[ 0 ] );\r\n        res += optHtml;\r\n\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n\r\n\r\n  generateRadioOptions( arr: string, translatedArr: string[], id: string ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let optHtml: string = templates.option_radio;\r\n        let opt: any = arr[ i ].split( ';' );\r\n        let translatedOpt = translatedArr[ i ].split( ';' );\r\n        optHtml = optHtml.replace( /{{qId}}/g, \"nm\" + id );\r\n        optHtml = optHtml.replace( /{{label}}/g, translatedOpt[ 0 ] );\r\n        optHtml = optHtml.replace( /{{labelFor}}/g, translatedOpt[ 0 ].replace( /\\s+/g, '-' ) );\r\n        optHtml = optHtml.replace( /{{value}}/g, opt[ 0 ] );\r\n        res += optHtml;\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n  generateCheckboxImageOptions( arr: string[], translatedArr: string[], id: string ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let optHtml: string = templates.option_checkbox_image;\r\n        let opt: any = arr[ i ].split( ';' );\r\n        let translatedOpt = translatedArr[ i ].split( ';' );\r\n        //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n        //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n        optHtml = optHtml.replace( /{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[ 1 ] );\r\n        optHtml = optHtml.replace( /{{qId}}/g, \"nm\" + id );\r\n        optHtml = optHtml.replace( /{{label}}/g, translatedOpt[ 0 ] );\r\n        optHtml = optHtml.replace( /{{labelFor}}/g, translatedOpt[ 0 ].replace( /\\s+/g, '-' ) );\r\n        optHtml = optHtml.replace( /{{value}}/g, opt[ 0 ] );\r\n        res += optHtml;\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n\r\n  generateCheckboxIgnoreImageOptions( arr: string[], translatedArr: string[], id: string ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let optHtml: string = templates.option_checkbox;\r\n        let opt: any = arr[ i ].split( ';' );\r\n        let translatedOpt = translatedArr[ i ].split( ';' );\r\n\r\n        //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n        //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n        optHtml = optHtml.replace( /{{qId}}/g, \"nm\" + id );\r\n        optHtml = optHtml.replace( /{{label}}/g, translatedOpt[ 0 ] );\r\n        optHtml = optHtml.replace( /{{labelFor}}/g, translatedOpt[ 0 ].replace( /\\s+/g, '-' ) );\r\n        optHtml = optHtml.replace( /{{value}}/g, opt[ 0 ] );\r\n        res += optHtml;\r\n\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n\r\n  generateCheckboxOptions( arr: string[], translatedArr: string[], id: string ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let optHtml: string = templates.option_checkbox;\r\n        let opt: any = arr[ i ].split( ';' );\r\n        let translatedOpt = translatedArr[ i ].split( ';' );\r\n        optHtml = optHtml.replace( /{{label}}/g, translatedOpt[ 0 ] );\r\n        optHtml = optHtml.replace( /{{labelFor}}/g, translatedOpt[ 0 ].replace( /\\s+/g, '-' ) );\r\n        optHtml = optHtml.replace( /{{value}}/g, opt[ 0 ] );\r\n\r\n        res += optHtml;\r\n\r\n      }\r\n      // console.log( res );\r\n      return res;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n//add Math.round\r\n\r\n\r\nexport { DomUtilities };\r\n","class Constants {\r\n  static CCTriggerPageStartTime = \"cc-trigger-page-start-time\";\r\n  static CCTriggerPageElapsedTime = \"cc-trigger-page-elapsed-time\";\r\n  static CCTriggerSiteStartTime = \"cc-trigger-site-start-time\";\r\n  static CCTriggerSiteElapsedTime = \"cc-trigger-site-elapsed-time\";\r\n  static CCTriggerSitePageViewCount = \"cc-trigger-site-page-count\";\r\n  static CCTriggerIndividualPageViewCount = \"cc-trigger-individual-page-count\";\r\n  static SURVEY_IMPRESSION_EVENT = \"onImpression\";\r\n  static SURVEY_START_EVENT = \"onStart\";\r\n  static SURVEY_DATA_EVENT = \"onData\";\r\n  static SURVEY_END_EVENT = \"onEnd\";\r\n  static SURVEY_CLOSE_EVENT = \"onClose\";\r\n  static SURVEY_QUESTION_EVENT = \"onQuestion\";\r\n  static SURVEY_ANSWER_EVENT = \"onAnswer\";\r\n  static SURVEY_CLICK_EVENT = \"onClick\";\r\n  static GRANT_TYPE = \"password\";\r\n  static AUTHORIZATION = \"Authorization\";\r\n  static AUTHORIZATION_BEARER = \"Bearer\";\r\n  static SURVEY_CLIENT = \"JS-MicroWeb\";\r\n}\r\n\r\nexport { Constants };","class Cookie {\r\n    /**\r\n     * Set/Overwrite a cookie value\r\n     *\r\n     * @param name\r\n     * @param value\r\n     * @param days      OPTIONAL Days till this cookie will stay valid. Default is current session\r\n     * @param path      OPTIONAL domain root will be used by default\r\n     */\r\n    static set(name : any, value : any, days : any, path : any) {\r\n      if (days) {\r\n          var date = new Date();\r\n              date.setTime(date.getTime()+(days*24*60*60*1000));\r\n          var expires = \"; expires=\"+date.toUTCString();\r\n      } else var expires = \"\";\r\n\r\n      var dir = path || '/';\r\n      document.cookie = name+\"=\"+value+expires+\"; path=\"+dir;\r\n  }\r\n\r\n  /**\r\n   * Retrieve a cookie value\r\n   *\r\n   * @param name\r\n   * @return String|null\r\n   */\r\n  static get(name) {\r\n      var nameEQ = name + \"=\";\r\n      var ca = document.cookie.split(';');\r\n      for(var i=0;i < ca.length;i++) {\r\n          var c = ca[i];\r\n          while (c.charAt(0)==' ') c = c.substring(1,c.length);\r\n          if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);\r\n      }\r\n      return null;\r\n  }\r\n\r\n  /**\r\n   * Remove a cookie\r\n   *\r\n   * @param name\r\n   */\r\n  static delete(name) {\r\n    Cookie.set(name,\"\",-1, undefined);\r\n  }\r\n\r\n  static getParameterByName(name : string, url : any) {\r\n    if (!url) url = window.location.href;\r\n    name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\r\n    var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\r\n        results = regex.exec(url);\r\n    if (!results) return null;\r\n    if (!results[2]) return '';\r\n    return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\r\n  }\r\n}\r\n\r\nexport { Cookie };\r\n","\r\n//Survey Manager manages and queues survey.\r\n\r\nclass SurveyManager {\r\n\r\n  static surveyQueue: any = [];\r\n  static processQueueInterval: any = null;\r\n\r\n  static surveyInstances: any = {};\r\n\r\n  static initializeSurvey( surveyId: string ) {\r\n    //check if survey ran?\r\n    //do survey initialization.\r\n    if ( !SurveyManager.surveyInstances || !SurveyManager.surveyInstances[ surveyId ] ) {\r\n      console.error( 'Microsurvey not properly set up. Contact Support.' );\r\n      return;\r\n    }\r\n\r\n    SurveyManager.surveyInstances[ surveyId ].setupSurvey();\r\n  }\r\n\r\n  static addSurvey( surveyId ) {\r\n    ( window as any ).ccsdkDebug ? console.log( \"Adding survey ID : \" + surveyId ) : '';\r\n    SurveyManager.surveyQueue.push( surveyId );\r\n    if ( SurveyManager.processQueueInterval == null ) {\r\n      SurveyManager.processQueueInterval = setInterval( SurveyManager.processQueueIntervalCB, 100 );\r\n    }\r\n  }\r\n\r\n  static removeSurvey( surveyId ) {\r\n    if ( SurveyManager.surveyQueue.length > 0 ) {\r\n      for ( let survey in SurveyManager.surveyQueue ) {\r\n        if ( SurveyManager.surveyQueue[ survey ].surveyId == surveyId ) {\r\n          SurveyManager.surveyQueue.splice( survey, 1 );\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    if ( SurveyManager.surveyQueue.length == 0 ) {\r\n      clearInterval( SurveyManager.processQueueInterval );\r\n    }\r\n  }\r\n\r\n  static processQueueIntervalCB() {\r\n    if ( ( window as any ).globalSurveyRunning == true ) {\r\n      return;\r\n    } else {\r\n      let surveyId = SurveyManager.surveyQueue.pop();\r\n      ( window as any ).ccsdkDebug ? console.log( \"Processing survey ID \" + surveyId ) : '';\r\n      if ( surveyId == undefined ) {\r\n        clearInterval( SurveyManager.processQueueInterval );\r\n        SurveyManager.processQueueInterval = null;\r\n      } else {\r\n        ( window as any ).globalSurveyRunning = true;\r\n        SurveyManager.initializeSurvey( surveyId );\r\n      }\r\n    }\r\n  }\r\n\r\n  public static setSurveyRunning() {\r\n    ( window as any ).globalSurveyRunning = true;\r\n    ( window as any ).globalSurveyStartTime = new Date();\r\n  }\r\n\r\n  public static unsetSurveyRunning() {\r\n    ( window as any ).globalSurveyRunning = false;\r\n  }\r\n}\r\n\r\nexport { SurveyManager };","// import 'whatwg-fetch';\r\n\r\nfunction makeRequest( method: string, url: string, postParams: string, headers: any, successcb: any, errorcb: any ): any {\r\n  var xhr = new XMLHttpRequest();\r\n  xhr.open( method, url );\r\n  xhr.onload = function () {\r\n    if ( ( this as any ).status >= 200 && ( this as any ).status < 300 ) {\r\n      if ( xhr.response ) {\r\n      }\r\n      let res: any = xhr.response && typeof xhr.response === 'string' && !xhr.response.match( 'GIF' ) ? JSON.parse( xhr.response ) : '';\r\n      if ( successcb ) successcb( res );\r\n    } else {\r\n      if ( errorcb ) {\r\n        errorcb( {\r\n          status: ( this as any ).status,\r\n          statusText: xhr.statusText\r\n        } );\r\n      }\r\n    }\r\n  };\r\n  xhr.onerror = function () {\r\n    if ( errorcb ) {\r\n      errorcb( {\r\n        status: ( this as any ).status,\r\n        statusText: xhr.statusText\r\n      } );\r\n    }\r\n  };\r\n  if ( headers ) {\r\n    Object.keys( headers ).forEach( function ( key ) {\r\n      xhr.setRequestHeader( key, headers[ key ] );\r\n    } );\r\n  }\r\n  // var params : any = postParams;\r\n  // We'll need to stringify if we've been given an object\r\n  // If we have a string, this is skipped.\r\n  // if (params && typeof params === 'object') {\r\n  //   params = Object.keys(params).map(function (key) {\r\n  //     return encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\r\n  //   }).join('&');\r\n  // }\r\n  xhr.send( postParams );\r\n}\r\n\r\nclass RequestHelper {\r\n\r\n  static getWithHeaders( url: string, headers: any, successcb: any, errorcb: any ) {\r\n    return makeRequest( \"GET\", url, null, headers, successcb, errorcb );\r\n  }\r\n\r\n  static postWithHeaders( url: string, data: Object, headers: any, successcb: any, errorcb: any ) {\r\n    headers[ \"Content-Type\" ] = \"application/json;charset=utf-8\";\r\n    return makeRequest( \"POST\", url, JSON.stringify( data ), headers, successcb, errorcb );\r\n\r\n  }\r\n\r\n  static get( url: string, successcb: any, errorcb: any ) {\r\n    return makeRequest( \"GET\", url, null, null, successcb, errorcb );\r\n    // let request : Request = new Request( (url as any) , new Object());\r\n    // return fetch(request).then( (response : Response) => {\r\n    //   if (response.status >= 200 && response.status < 300) {\r\n    //     return Promise.resolve(response);\r\n    //   } else {\r\n    //     var error = new Error(response.statusText);\r\n    //     // error.response = response;\r\n    //     throw error;\r\n    //   }\r\n    // }).then( (response : Response) => {\r\n    //   return response.json();\r\n    // }).catch( (error : Error) => {\r\n    //   (window as any).ccsdkDebug?console.log('Request failed ', error):'';\r\n    // });\r\n  }\r\n\r\n  /**\r\n   *\r\n   * var data = new FormData()\r\n   *  data.append('file', input.files[0])\r\n   *  data.append('user', 'hubot')\r\n   *\r\n   * @static\r\n   * @param {any} url\r\n   * @param {any} data\r\n   * @memberof Request\r\n   */\r\n  static post( url: string, data: Object, successcb: any, errorcb: any ) {\r\n    //consider, file upload?\r\n    // (window as any).ccsdkDebug?console.log(\"[\" + JSON.stringify(data) + \"]\"):'';\r\n    ( window as any ).ccsdkDebug ? console.log( \"Sending : \" + data ) : '';\r\n    return makeRequest( \"POST\", url, JSON.stringify( data ), {}, successcb, errorcb );\r\n    // let request : Request = new Request( (url as any), {\r\n    //   method : \"POST\",\r\n    //   headers : {\r\n    //     \"Content-Type\" : \"application/json; charset=utf-8\"\r\n    //   },\r\n    //   body : JSON.stringify(data)\r\n    // });\r\n    // return fetch(request).then( (response : Response) => {\r\n    //   if (response.status >= 200 && response.status < 300) {\r\n    //     return Promise.resolve(response);\r\n    //   } else {\r\n    //     let error : Error = new Error(response.statusText);\r\n    //     // error.response = response;\r\n    //     throw error;\r\n    //   }\r\n    // }).then( (response : Response) => {\r\n    //   return response.json();\r\n    // }).catch( (error : Error) => {\r\n    //   (window as any).ccsdkDebug?console.log('Request failed ', error):'';\r\n    // });\r\n  }\r\n\r\n}\r\n\r\nexport { RequestHelper };\r\n","class LanguageTextFilter {\r\n\r\n    public static translateQuestionText( surveyHandler: any, question: any ) {\r\n        if ( surveyHandler.ccsdk.config.language.indexOf( 'Default' ) === -1 ) {\r\n            if ( question.translated != null &&\r\n                typeof question.translated[ surveyHandler.ccsdk.config.language ] !== 'undefined' ) {\r\n                if ( question.translated[ surveyHandler.ccsdk.config.language ].text ) {\r\n                    let qText = question.translated[ surveyHandler.ccsdk.config.language ].text.split( ':' );\r\n                    if ( question.translated[ surveyHandler.ccsdk.config.language ].text.indexOf( \":\" ) !== -1 ) {\r\n                        qText = qText[ 0 ] + ': <br><span class=\"text-normal\">' + qText[ 1 ] + '</span>';\r\n                    }\r\n                    return qText;\r\n                }\r\n                // else if ( question.translated[ surveyHandler.ccsdk.config.language ].text ) {\r\n                //     return question.translated[ surveyHandler.ccsdk.config.language ].text;\r\n                // }\r\n                // return question.translated[surveyHandler.ccsdk.config.language].text;\r\n            }\r\n        }\r\n        if ( question.text ) {\r\n            let qText = question.text.split( ':' );\r\n            if ( question.text.indexOf( \":\" ) !== -1 ) {\r\n                qText = qText[ 0 ] + ': <br><span class=\"text-normal\">' + qText[ 1 ] + '</span>';\r\n            }\r\n            return qText;\r\n        } else {\r\n            return question.text == null ? '' : question.text;\r\n        }\r\n    }\r\n\r\n    public static translateMessages( surveyHandler: any, type: string ) {\r\n        if ( surveyHandler.surveyData.translated != null && typeof surveyHandler.surveyData.translated[ surveyHandler.ccsdk.config.language ] !== 'undefined' ) {\r\n            if ( surveyHandler.ccsdk.config.language.indexOf( 'Default' ) === -1 ) {\r\n                if ( surveyHandler.surveyData.translated[ surveyHandler.ccsdk.config.language ] !== 'undefined' ) {\r\n                    if ( surveyHandler.surveyData.translated[ surveyHandler.ccsdk.config.language ][ type ] != null ) {\r\n                        return surveyHandler.surveyData.translated[ surveyHandler.ccsdk.config.language ][ type ];\r\n                    } else {\r\n                        return surveyHandler.surveyData[ type ];\r\n                    }\r\n                } else {\r\n                    return surveyHandler.surveyData[ type ];\r\n                }\r\n            } else {\r\n                return surveyHandler.surveyData[ type ];\r\n            }\r\n        }\r\n    }\r\n\r\n    public static translateDisplayLegend( surveyHandler: any, question: any ) {\r\n        if ( surveyHandler.ccsdk.config.language.indexOf( 'Default' ) === -1 ) {\r\n            if ( question.translated != null &&\r\n                typeof question.translated[ surveyHandler.ccsdk.config.language ] !== 'undefined' ) {\r\n                return question.translated[ surveyHandler.ccsdk.config.language ].displayLegend;\r\n            } else {\r\n                return question.displayLegend;\r\n            }\r\n        } else {\r\n            return question.displayLegend;\r\n        }\r\n    }\r\n\r\n    public static translateMultiSelect( surveyHandler: any, question: any ) {\r\n        if ( surveyHandler.ccsdk.config.language.indexOf( 'Default' ) === -1 ) {\r\n            if ( question.translated != null &&\r\n                typeof question.translated[ surveyHandler.ccsdk.config.language ] !== 'undefined' &&\r\n                question.translated[ surveyHandler.ccsdk.config.language ].multiSelect\r\n            ) {\r\n                let translatedOptions = question.translated[ surveyHandler.ccsdk.config.language ].multiSelect;\r\n                return question.multiSelect.map( ( x, i ) => {\r\n                    if ( translatedOptions[ i ] ) {\r\n                        return translatedOptions[ i ];\r\n                    } else {\r\n                        return x;\r\n                    }\r\n                } );\r\n            } else {\r\n                return question.multiSelect;\r\n            }\r\n        } else {\r\n            return question.multiSelect;\r\n        }\r\n    }\r\n\r\n    public static translateMultiSelectOption( surveyHandler: any, question: any, option: any ) {\r\n        let effectiveMultiselect = this.translateMultiSelect( surveyHandler, question );\r\n        if ( ( effectiveMultiselect instanceof Array ) && effectiveMultiselect.length > 0 ) {\r\n            for ( let i = 0; i < question.multiSelect.length; i++ ) {\r\n                let opt: any = question.multiSelect[ i ].split( ';' )\r\n                if ( opt[ 0 ] == option ) {\r\n                    return effectiveMultiselect[ i ].split( ';' )[ 0 ];\r\n                } else {\r\n\r\n                }\r\n            }\r\n        }\r\n        return option;\r\n    }\r\n\r\n}\r\n\r\nexport { LanguageTextFilter };","class Config {\r\n  static API_URL: String = \"https://api.getcloudcherry.com\";\r\n  static SURVEY_BY_TOKEN: String = \"/api/SurveyByToken/{token}/\";\r\n  // static SURVEY_BY_TOKEN : String  = \"/api/SurveyByToken/{token}/{tabletId}\";\r\n  static SURVEY_PARTIAL_RESPONSE: String = \"/api/PartialSurvey/{id}/{complete}/JS-MicroWeb\";\r\n  // static SURVEY_PARTIAL_RESPONSE : String =  \"/api/PartialSurvey/{id}/{complete}/JS-Web/{tabletId}\";\r\n  static CDN_URL: string = \"https://cx.getcloudcherry.com/\";\r\n  static CDN_ASSET_URL: string = \"https://cx.getcloudcherry.com/microsurvey-assets/\";\r\n  static POST_LOGIN_TOKEN = \"/api/LoginToken\";\r\n  static GET_SURVEY_THROTTLE_LOGIC = \"/api/SurveyThrottleLogic/{location}\";\r\n  static POST_THROTTLING = \"/api/Throttling\";\r\n  static POST_THROTTLING_ADD_ENTRIES = \"/api/Throttling/AddEntries\";\r\n  static POST_SURVEY_FINAL = \"/api/surveybytoken/{tokenId}\"\r\n  static GET_CAMPAIGN = \"/api/SurveyToken/Campaign/{token}/\"\r\n}\r\n\r\nexport { Config };\r\n","import '../css/main.scss';\r\nimport * as QuestionSurvey from '../templates/Survey.html';\r\nimport * as QuestionStart from '../templates/QuestionStart.html';\r\nimport * as QuestionSingleline from '../templates/QuestionSingleline.html';\r\nimport * as QuestionNumber from '../templates/QuestionNumber.html';\r\nimport * as QuestionMultiline from '../templates/QuestionMultiline.html';\r\nimport * as QuestionCheckbox from '../templates/QuestionCheckbox.html';\r\nimport * as QuestionRadio from '../templates/QuestionRadio.html';\r\nimport * as QuestionRadioImage from '../templates/QuestionRadioImage.html';\r\nimport * as QuestionScale from '../templates/QuestionScale.html';\r\nimport * as QuestionCSATAgreement5 from '../templates/QuestionCSATAgreement5.html';\r\nimport * as QuestionCSATSatisfaction5 from '../templates/QuestionCSATSatisfaction5.html';\r\nimport * as QuestionNPS from '../templates/QuestionNPS.html';\r\nimport * as QuestionSelect from '../templates/QuestionSelect.html';\r\nimport * as QuestionMultiSelect from '../templates/QuestionMultiSelect.html';\r\nimport * as QuestionSmile from '../templates/QuestionSmile.html';\r\nimport * as QuestionSmileInverted from '../templates/QuestionSmileInverted.html';\r\nimport * as QuestionStar from '../templates/QuestionStar.html';\r\nimport * as QuestionSlider from '../templates/QuestionSlider.html';\r\nimport * as OptionRadioImage from '../templates/OptionRadioImage.html';\r\nimport * as OptionRadio from '../templates/OptionRadio.html';\r\nimport * as OptionCheckbox from '../templates/OptionCheckbox.html';\r\nimport * as OptionCheckboxImage from '../templates/OptionCheckboxImage.html';\r\nimport * as ThankYou from '../templates/ThankYou.html';\r\n\r\nimport * as LanguageSelector from '../templates/LanguageSelector.html';\r\n\r\nlet templates = {\r\n  question_survey: \"\",\r\n  question_start: \"\",\r\n  question_text: \"\",\r\n  question_number: \"\",\r\n  question_scale: \"\",\r\n  question_csat_agreement_5: \"\",\r\n  question_csat_satisfaction_5: \"\",\r\n  question_nps: \"\",\r\n  question_multi_line_text: \"\",\r\n  question_multi_select: \"\",\r\n  question_radio: \"\",\r\n  question_radio_image: \"\",\r\n  question_checkbox: \"\",\r\n  question_select: \"\",\r\n  question_smile_5: \"\",\r\n  question_smile_5_inverted: \"\",\r\n  question_star_5: \"\",\r\n  question_slider: \"\",\r\n  option_radio_image: \"\",\r\n  option_radio: \"\",\r\n  option_checkbox: \"\",\r\n  option_checkbox_image: \"\",\r\n  thankyou: \"\",\r\n  language_selector: \"\"\r\n\r\n};\r\n\r\n\r\ntemplates.question_survey = QuestionSurvey;\r\n\r\ntemplates.question_start = QuestionStart;\r\n\r\ntemplates.question_text = QuestionSingleline;\r\ntemplates.question_number = QuestionNumber;\r\n\r\n\r\ntemplates.question_scale = QuestionScale;\r\ntemplates.question_csat_agreement_5 = QuestionCSATAgreement5;\r\ntemplates.question_csat_satisfaction_5 = QuestionCSATSatisfaction5;\r\ntemplates.question_nps = QuestionNPS;\r\n\r\ntemplates.question_slider = QuestionSlider;\r\n\r\n\r\ntemplates.question_multi_line_text = QuestionMultiline;\r\n\r\n\r\ntemplates.question_multi_select = QuestionMultiSelect;\r\n\r\n\r\ntemplates.question_select = QuestionSelect;\r\n\r\n\r\ntemplates.question_smile_5 = QuestionSmile;\r\ntemplates.question_smile_5_inverted = QuestionSmileInverted;\r\n\r\ntemplates.question_star_5 = QuestionStar;\r\n\r\ntemplates.question_checkbox = QuestionCheckbox;\r\n\r\ntemplates.question_radio = QuestionRadio;\r\n\r\ntemplates.question_radio_image = QuestionRadioImage;\r\ntemplates.option_radio_image = OptionRadioImage;\r\ntemplates.option_radio = OptionRadio;\r\ntemplates.option_checkbox = OptionCheckbox;\r\ntemplates.option_checkbox_image = OptionCheckboxImage;\r\n\r\ntemplates.thankyou = ThankYou;\r\n\r\ntemplates.language_selector = LanguageSelector;\r\n\r\n\r\nexport { templates };\r\n","export function isAnd(filterQuestion: any): boolean {\r\n  if (!filterQuestion) {\r\n    return false;\r\n  }\r\n  if (filterQuestion.groupBy == null || filterQuestion.groupBy.toUpperCase() == \"AND\") {\r\n    return true;\r\n  }\r\n}\r\n\r\nexport function isOr(filterQuestion: any): boolean {\r\n  if (!filterQuestion) {\r\n    return false;\r\n  }\r\n  if (filterQuestion.groupBy != null && filterQuestion.groupBy.toUpperCase() == \"OR\") {\r\n    return true;\r\n  }\r\n}\r\n\r\nexport function isNumberCheck(filterQuestion: any): boolean {\r\n  if (!filterQuestion) {\r\n    return false;\r\n  }\r\n  if (filterQuestion.answerCheck[0] === \"lt\" || filterQuestion.answerCheck[0] === \"gt\" || filterQuestion.answerCheck[0] === \"eq\") {\r\n    return true;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n  * Contains logic to control conditional flow and whether to show or hide the questions based on the user input\r\n  *\r\n  * @param filterQuestion\r\n  * @return\r\n  */\r\nexport function doesSatisfy(surveyHandler: any, filterQuestion: any): boolean {\r\n  const answer = surveyHandler.getAnswerForQuestionId(filterQuestion.questionId);\r\n  if (isNumberCheck(filterQuestion)) {\r\n    if (filterQuestion.answerCheck[0].toLowerCase() == \"lt\") {\r\n      if (answer != null)\r\n        if (answer.numberInput != null && answer.numberInput < filterQuestion.number) {\r\n          return true;\r\n        }\r\n    } else if (filterQuestion.answerCheck[0].toLowerCase() == (\"gt\")) {\r\n      if (answer != null)\r\n        if (answer.numberInput != null && answer.numberInput > filterQuestion.number) {\r\n          return true;\r\n        }\r\n    } else if (filterQuestion.answerCheck[0].toLowerCase() == (\"eq\")) {\r\n      if (answer != null)\r\n        if (answer.numberInput != null && answer.numberInput == filterQuestion.number) {\r\n          return true;\r\n        }\r\n    }\r\n  } else {\r\n    // any text match for text answers\r\n    if (filterQuestion.answerCheck[0] && filterQuestion.answerCheck[0].toLowerCase() === 'any text') {\r\n      if (answer && answer.textInput && answer.textInput !== ' ') {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    let iFoundAll = false;\r\n    let question = surveyHandler.getQuestionById(filterQuestion.questionId);\r\n    let questionAnswerText = answer != null && answer.textInput != null ? answer.textInput : '';\r\n    if (!answer) {\r\n      return false;\r\n    }\r\n    for (let aAnswer of filterQuestion.answerCheck) {\r\n      if (question.displayType === 'MultiSelect') {\r\n        let selectedOptions = answer.textInput.split(',');\r\n        if (selectedOptions.indexOf(aAnswer) !== -1) {\r\n          iFoundAll = true;\r\n        }\r\n      } else if (questionAnswerText === aAnswer) {\r\n        iFoundAll = true;\r\n      }\r\n    }\r\n    return iFoundAll;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function questionCompare(a: any, b: any) {\r\n  return a.sequence - b.sequence;\r\n}\r\n\r\nexport function checkLanguage(surveyHandler, fOption) {\r\n  if (surveyHandler.ccsdk.config && surveyHandler.ccsdk.config.language) {\r\n    return fOption.language === surveyHandler.ccsdk.config.language\r\n  }\r\n  return false;\r\n}\r\n","import { DomUtilities } from \"./DomUtilities\";\r\nimport {LanguageTextFilter} from '../filters/LanguageTextFilter';\r\n\r\nclass Select {\r\n  util: DomUtilities;\r\n  $body: any;\r\n  $html: any;\r\n  qId: any;\r\n  select: any;\r\n  type: string;\r\n  listeners: any = [];\r\n  constructor( qId: string ) {\r\n    this.qId = qId;\r\n  }\r\n  init( qId: string ) {\r\n    this.util = new DomUtilities();\r\n    this.$body = document.querySelectorAll( \"body\" )[ 0 ];\r\n    this.$html = document.querySelectorAll( \"html\" )[ 0 ];\r\n    var select = document.querySelectorAll( \"#\" + qId + \" .cc-select\" );\r\n\r\n    // var divSelect = document.querySelectorAll(\"div.cc-select\");\r\n    // this.util.removeAll(divSelect);\r\n    let parent = this;\r\n\r\n    //Assumption: iterating over array but there will always be one select at a time\r\n    this.type = select[ 0 ].getAttribute( 'data-type' );\r\n    Array.prototype.forEach.call( select, function ( el, i ) {\r\n      var self = el;\r\n      var $selectOptions = document.querySelectorAll( \"#\" + qId + \" .cc-select-options\" );\r\n      var classes = self.getAttribute( \"class\" ),\r\n        id = self.getAttribute( \"id\" ),\r\n        name = self.getAttribute( \"name\" );\r\n      var template = '<div class=\"' + classes + '\">';\r\n      template += '<span class=\"cc-select-trigger\">' + self.getAttribute( \"placeholder\" ) + '</span>';\r\n      template += '<div class=\"cc-select-options-container\" cc-scrollbar-container><div class=\"cc-select-options\">';\r\n      var options = self.querySelectorAll( \"option\" );\r\n      Array.prototype.forEach.call( options, function ( el, i ) {\r\n        template += '<span class=\"cc-select-option ' + el.getAttribute( \"class\" ) + '\" data-value=\"' + el.getAttribute( \"value\" ) + '\">' + el.innerHTML + '</span>';\r\n      } );\r\n      template += '</div></div></div>';\r\n      parent.util.addClass( self, 'hide' );\r\n      self.insertAdjacentHTML( 'afterend', template );\r\n    } );\r\n    this.setupListeners();\r\n  }\r\n\r\n\r\n  setupListeners() {\r\n    var self = this;\r\n    var qId = self.qId;\r\n    let ref2 = this.util.initListener( 'click', \"#\" + qId + \" .cc-select-option\", function ( e ) {\r\n      // let ref2 = this.util.initListener(this.$body, \"click\", \"#\"+qId+\" .cc-select-option\", function(e) {\r\n      ( window as any ).ccsdkDebug ? console.log( 'click cc-select-option', this ) : '';\r\n      let selfOption = this;\r\n      let value = this.getAttribute( 'data-value' );\r\n      //select cc-select-wrapper\r\n      //todo: write a function to directly select parent via selector\r\n      let selectOptions = this.parentNode;\r\n      let select = selectOptions.parentNode.parentNode;\r\n      this.select = select;\r\n      let selectWrapper = select.parentNode;\r\n      ( window as any ).ccsdkDebug ? console.log( select ) : '';\r\n      ( window as any ).ccsdkDebug ? console.log( selectOptions ) : '';\r\n      ( window as any ).ccsdkDebug ? console.log( selectWrapper ) : '';\r\n      let selectionTrigger = select.querySelectorAll( '.cc-select-trigger' )[ 0 ];\r\n\r\n      self.util.addClass( this, \"selection\" );\r\n      let selectedOptionText = selectionTrigger.textContent;\r\n      let selectedValueText = selectionTrigger.getAttribute( 'data-selection-value' ) || '';\r\n\r\n      ( window as any ).ccsdkDebug ? console.log( 'select type', self.type ) : '';\r\n      if ( self.type !== 'multiple' ) {\r\n        ( window as any ).ccsdkDebug ? console.log( 'select type', self.type ) : '';\r\n        selectedOptionText = selfOption.textContent;\r\n        ( window as any ).ccsdkDebug ? console.log( 'selected option', selectedOptionText ) : '';\r\n        self.util.removeClassAll( document.querySelectorAll( \".cc-select\" ), \"opened\" );\r\n        selectionTrigger.setAttribute( 'data-selection-value', value );\r\n        selectWrapper.querySelectorAll( \"select\" )[ 0 ].value = value;\r\n        selectionTrigger.textContent = selectedOptionText;\r\n        self.util.removeClassAll( document.querySelectorAll( \"#\" + qId + \" .cc-select-option\" ), 'selection' );\r\n        self.util.addClass( self, 'selection' );\r\n      } else {\r\n        ( window as any ).ccsdkDebug ? console.log( selectedOptionText ) : '';\r\n        if ( selectedOptionText != 'Select' ) {\r\n            selectedOptionText = self.addOrRemoveFromList(selectedOptionText, selfOption.textContent);\r\n            selectedValueText = self.addOrRemoveFromList(selectedValueText, value);\r\n        } else {\r\n          ( window as any ).ccsdkDebug ? console.log( selfOption.textContent ) : '';\r\n          selectedOptionText = selfOption.textContent;\r\n          selectedValueText = value;\r\n        }\r\n\r\n        selectWrapper.querySelectorAll( \"select\" )[ 0 ].value = selectedValueText;\r\n        selectionTrigger.setAttribute( 'data-selection-value', selectedValueText );\r\n        self.util.removeClassAll( document.querySelectorAll( \"#\" + qId + \" .cc-select-option\" ), 'selection' );        \r\n        self.selectOptions(selectedValueText);\r\n        \r\n        selectedValueText\r\n        if ( selectedOptionText.length < 1 ) {\r\n          selectionTrigger.textContent = 'Select';\r\n        } else {\r\n          selectionTrigger.textContent = selectedOptionText;\r\n        }\r\n        return false;\r\n\r\n      }\r\n\r\n    } );\r\n    this.listeners.push( ref2 );\r\n    ref2.internalHandler = this.util.listener( this.$body, ref2.type, ref2.id, ref2.cb );\r\n    let ref = this.util.initListener( 'click', \"#\" + qId + \" .cc-select-trigger\", function ( e ) {\r\n      self.$html.addEventListener( 'click', function ( e ) {\r\n        if ( !self.util.hasClass( e.target, 'cc-select-option' ) ) {\r\n          self.util.removeClassAll( document.querySelectorAll( \".cc-select\" ), \"opened\" );\r\n          self.$html.removeEventListener( 'click', function () {\r\n          } );\r\n        }\r\n      } )\r\n      var ccSelect = this.parentNode;\r\n      ( window as any ).ccsdkDebug ? console.log( 'click cc-select-trigger', ccSelect ) : '';\r\n      self.util.toggleClass( ccSelect, \"opened\" );\r\n      e.stopPropagation();\r\n    } );\r\n    this.listeners.push( ref );\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n\r\n  }\r\n\r\n  destroyListeners() {\r\n    for ( let listener of this.listeners ) {\r\n      this.util.removeListener( this.$body, listener.type, listener.internalHandler );\r\n    }\r\n    return true;\r\n  }\r\n\r\n\r\n  setValue( value: string, question, surveyHandler ) {\r\n    let self = this;\r\n    let qId = self.qId;\r\n    let select: any;\r\n\r\n    select = document.querySelectorAll( \"#\" + qId + \" select\" )[ 0 ];\r\n    select.value = value;\r\n    let selectTrigger = document.querySelectorAll( \"#\" + qId + \" .cc-select-trigger\" )[ 0 ];\r\n    let selectedValueList = value.split(',');\r\n    let translatedSelection = selectedValueList.map(x => LanguageTextFilter.translateMultiSelectOption(surveyHandler, question, x) );\r\n    selectTrigger.textContent = translatedSelection.join(',');\r\n    selectTrigger.setAttribute('data-selection-value', value);\r\n  }\r\n\r\n  selectOption( el: any ) {\r\n    this.util.addClass( el, 'selection' );\r\n  }\r\n\r\n  removeOption(el){\r\n    this.util.removeClass(el, 'selection');\r\n  }\r\n\r\n  selectOptions( csv: string ) {\r\n    let self = this;\r\n    if ( csv ) {\r\n      let allOptions = csv.split( ',' );\r\n      for ( let option of allOptions ) {\r\n        let domOptions = document.querySelectorAll( \"#\" + self.qId + \" .cc-select-option\" );\r\n        Array.prototype.forEach.call( domOptions, function ( el, i ) {\r\n          if ( el.getAttribute( 'data-value' ) == option ) {\r\n            self.selectOption( el );\r\n          } else {\r\n            \r\n          }\r\n        } );\r\n      }\r\n    }\r\n  }\r\n\r\n  addOrRemoveFromList(listAsString: string, item: string){\r\n    let list = listAsString.split(',');\r\n    let itemIndex = list.indexOf(item);\r\n    if(itemIndex !== -1){\r\n      list.splice(itemIndex, 1);\r\n    } else {\r\n      list.push(item);\r\n    }\r\n    return list.join(',');\r\n  }\r\n\r\n}\r\nexport { Select }\r\n","import { isArray } from \"util\";\r\nimport { LanguageTextFilter } from \"./LanguageTextFilter\";\r\nimport { isAnd, isOr, doesSatisfy, questionCompare } from './filter-utils';\r\n\r\nclass ConditionalFlowFilter {\r\n  public static filterQuestion( surveyHandler: any, question: any ) {\r\n    let aAddedCount = 0;\r\n    let aRemovedCount = 0;\r\n\r\n    if ( surveyHandler.getAnswerForQuestionId( question.id ) != null ) {\r\n      for ( let aQuestion of surveyHandler.getConditionalSurveyQuestions() ) {\r\n        // console.log( aQuestion );\r\n        if ( aQuestion.conditionalFilter != null ) {\r\n          let iSatisfied = false;\r\n          let iFailed = false;\r\n          for ( let aFilterByQuestion of aQuestion.conditionalFilter.filterquestions ) {\r\n            if ( isAnd( aFilterByQuestion ) ) {\r\n              if ( doesSatisfy( surveyHandler, aFilterByQuestion ) && !iFailed ) {\r\n                iSatisfied = true;\r\n              } else {\r\n                iFailed = true;\r\n                break;\r\n              }\r\n            } else if ( isOr( aFilterByQuestion ) ) {\r\n              if ( doesSatisfy( surveyHandler, aFilterByQuestion ) ) {\r\n                iSatisfied = true;\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          const surveyQuestions = surveyHandler.getSurveyQuestions();\r\n          if ( iSatisfied && !iFailed ) {\r\n            if ( surveyQuestions.indexOf( aQuestion ) === -1 ) {\r\n              surveyQuestions.push( aQuestion );\r\n              aAddedCount++;\r\n            }\r\n          } else {\r\n            if ( surveyQuestions.indexOf( aQuestion ) !== -1 ) {\r\n              aRemovedCount++;\r\n              surveyQuestions.splice( surveyQuestions.indexOf( aQuestion ), 1 );\r\n              // surveyHandler.removePartial(aQuestion.id);\r\n              //removing from partial requires not posting partial after each question rather than posting them all at once.\r\n              surveyHandler.removeAnswer( aQuestion.id );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if ( aAddedCount > 0 || aRemovedCount > 0 ) {\r\n      surveyHandler.getSurveyQuestions().sort( questionCompare );\r\n      // surveyHandler.sendConditionalFLowQuestionsData(surveyHandler.getSurveyQuestions().size());\r\n      return true;\r\n    } else {\r\n      // return false;\r\n    }\r\n    // ( window as any ).ccsdkDebug ? console.log( surveyHandler.getSurveyQuestions() ) : '';\r\n  }\r\n}\r\n\r\nexport { ConditionalFlowFilter };","// Production steps of ECMA-262, Edition 6, 22.1.2.1\r\nif ( !( <any>Array ).from ) {\r\n  ( <any>Array ).from = ( function () {\r\n    var toStr = Object.prototype.toString;\r\n    var isCallable = function ( fn ) {\r\n      return typeof fn === 'function' || toStr.call( fn ) === '[object Function]';\r\n    };\r\n    var toInteger = function ( value ) {\r\n      var number = Number( value );\r\n      if ( isNaN( number ) ) {\r\n        return 0;\r\n      }\r\n      if ( number === 0 || !isFinite( number ) ) {\r\n        return number;\r\n      }\r\n      return ( number > 0 ? 1 : -1 ) * Math.floor( Math.abs( number ) );\r\n    };\r\n    var maxSafeInteger = Math.pow( 2, 53 ) - 1;\r\n    var toLength = function ( value ) {\r\n      var len = toInteger( value );\r\n      return Math.min( Math.max( len, 0 ), maxSafeInteger );\r\n    };\r\n\r\n    // The length property of the from method is 1.\r\n    return function from( arrayLike /*, mapFn, thisArg */ ) {\r\n      // 1. Let C be the this value.\r\n      var C = this;\r\n\r\n      // 2. Let items be ToObject(arrayLike).\r\n      var items = Object( arrayLike );\r\n\r\n      // 3. ReturnIfAbrupt(items).\r\n      if ( arrayLike == null ) {\r\n        throw new TypeError( 'Array.from requires an array-like object - not null or undefined' );\r\n      }\r\n\r\n      // 4. If mapfn is undefined, then let mapping be false.\r\n      var mapFn = arguments.length > 1 ? arguments[ 1 ] : void undefined;\r\n      var T;\r\n      if ( typeof mapFn !== 'undefined' ) {\r\n        // 5. else\r\n        // 5. a If IsCallable(mapfn) is false, throw a TypeError exception.\r\n        if ( !isCallable( mapFn ) ) {\r\n          throw new TypeError( 'Array.from: when provided, the second argument must be a function' );\r\n        }\r\n\r\n        // 5. b. If thisArg was supplied, let T be thisArg; else let T be undefined.\r\n        if ( arguments.length > 2 ) {\r\n          T = arguments[ 2 ];\r\n        }\r\n      }\r\n\r\n      // 10. Let lenValue be Get(items, \"length\").\r\n      // 11. Let len be ToLength(lenValue).\r\n      var len = toLength( items.length );\r\n\r\n      // 13. If IsConstructor(C) is true, then\r\n      // 13. a. Let A be the result of calling the [[Construct]] internal method \r\n      // of C with an argument list containing the single item len.\r\n      // 14. a. Else, Let A be ArrayCreate(len).\r\n      var A = isCallable( C ) ? Object( new C( len ) ) : new Array( len );\r\n\r\n      // 16. Let k be 0.\r\n      var k = 0;\r\n      // 17. Repeat, while k < len… (also steps a - h)\r\n      var kValue;\r\n      while ( k < len ) {\r\n        kValue = items[ k ];\r\n        if ( mapFn ) {\r\n          A[ k ] = typeof T === 'undefined' ? mapFn( kValue, k ) : mapFn.call( T, kValue, k );\r\n        } else {\r\n          A[ k ] = kValue;\r\n        }\r\n        k += 1;\r\n      }\r\n      // 18. Let putStatus be Put(A, \"length\", len, true).\r\n      A.length = len;\r\n      // 20. Return A.\r\n      return A;\r\n    };\r\n  }() );\r\n}\r\n\r\n// custom event polyfill\r\n( function () {\r\n\r\n  if ( typeof ( <any>window ).CustomEvent === \"function\" ) return false;\r\n\r\n  function CustomEvent( event, params ) {\r\n    params = params || {\r\n      bubbles: false,\r\n      cancelable: false,\r\n      detail: undefined\r\n    };\r\n    var evt = document.createEvent( 'CustomEvent' );\r\n    evt.initCustomEvent( event, params.bubbles, params.cancelable, params.detail );\r\n    return evt;\r\n  }\r\n\r\n  CustomEvent.prototype = ( <any>window ).Event.prototype;\r\n\r\n  ( <any>window ).CustomEvent = CustomEvent;\r\n} )();\r\n\r\n// includes polyfill\r\nif ( !( <any>Array.prototype ).includes ) {\r\n  Object.defineProperty( Array.prototype, 'includes', {\r\n    value: function ( searchElement, fromIndex ) {\r\n\r\n      if ( this == null ) {\r\n        throw new TypeError( '\"this\" is null or not defined' );\r\n      }\r\n\r\n      // 1. Let O be ? ToObject(this value).\r\n      var o = Object( this );\r\n\r\n      // 2. Let len be ? ToLength(? Get(O, \"length\")).\r\n      var len = o.length >>> 0;\r\n\r\n      // 3. If len is 0, return false.\r\n      if ( len === 0 ) {\r\n        return false;\r\n      }\r\n\r\n      // 4. Let n be ? ToInteger(fromIndex).\r\n      //    (If fromIndex is undefined, this step produces the value 0.)\r\n      var n = fromIndex | 0;\r\n\r\n      // 5. If n ≥ 0, then\r\n      //  a. Let k be n.\r\n      // 6. Else n < 0,\r\n      //  a. Let k be len + n.\r\n      //  b. If k < 0, let k be 0.\r\n      var k = Math.max( n >= 0 ? n : len - Math.abs( n ), 0 );\r\n\r\n      function sameValueZero( x, y ) {\r\n        return x === y || ( typeof x === 'number' && typeof y === 'number' && isNaN( x ) && isNaN( y ) );\r\n      }\r\n\r\n      // 7. Repeat, while k < len\r\n      while ( k < len ) {\r\n        // a. Let elementK be the result of ? Get(O, ! ToString(k)).\r\n        // b. If SameValueZero(searchElement, elementK) is true, return true.\r\n        if ( sameValueZero( o[ k ], searchElement ) ) {\r\n          return true;\r\n        }\r\n        // c. Increase k by 1. \r\n        k++;\r\n      }\r\n\r\n      // 8. Return false\r\n      return false;\r\n    }\r\n  } );\r\n}","import { Cookie } from './helpers/Cookie';\r\nimport { SurveyManager } from \"./SurveyManager\";\r\nimport { Survey } from \"./Survey\";\r\n\r\n/**\r\n * functions that are exposed to SDK User are written here.\r\n * Entry point for CCSDK.\r\n */\r\n// declare var Sentry: any;\r\n\r\nlet localCCSDK = {\r\n  init: init,\r\n  destroy: destroy,\r\n  trigger: trigger,\r\n  hide: hide,\r\n  show: show,\r\n  on: on,\r\n  prefill: prefill,\r\n  prefillByTag: prefillByTag,\r\n  prefillByNote: prefillByNote\r\n};\r\n\r\n// let instances : any = {};\r\n\r\n( window as any ).globalSurveyRunning = false;\r\n( window as any ).ccsdkDebug = false;\r\n( window as any ).isMobile = window.innerWidth <= 768 ? true : false;\r\n\r\nif ( typeof ( window as any ).CCSDK !== 'undefined' ) {\r\n  var queue = ( window as any ).CCSDK.q;\r\n  ( window as any ).CCSDK = function () {\r\n    if ( arguments && arguments.length == 0 ) {\r\n      var time = new Date();\r\n    } else {\r\n      ( window as any ).ccsdkDebug ? console.log( arguments ) : '';\r\n      var args = ( Array as any ).from( arguments );\r\n      //Call this functions as ccsdk('functionName', ['argument1', 'argument2']);\r\n      var functionName = args.splice( 0, 1 )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( functionName ) : '';\r\n      return localCCSDK[ functionName ].apply( this, args );\r\n    }\r\n  };\r\n  if ( queue ) {\r\n    for ( var q of queue ) {\r\n      var args = ( Array as any ).from( q );\r\n      var functionName = args.splice( 0, 1 )[ 0 ];\r\n      localCCSDK[ functionName ].apply( this, args );\r\n    }\r\n  }\r\n  let eventCCReady: Event = document.createEvent( 'Event' );\r\n  eventCCReady.initEvent( 'ccready', true, true );\r\n  document.dispatchEvent( eventCCReady );\r\n}\r\n\r\nexport function init( surveyToken: any ) {\r\n  //config options can be set in arguments[1]\r\n  //available config options : themeColor\r\n  surveyToken = decodeURIComponent( surveyToken ).trim();\r\n  let config = ( typeof arguments[ 1 ] === 'object' ) ? arguments[ 1 ] : {};\r\n  //create survey instance\r\n  if ( typeof Cookie.get( surveyToken + '-finish' ) !== 'undefined' && Cookie.get( surveyToken + '-finish' ) ) {\r\n    return;\r\n  }\r\n  if ( typeof Cookie.get( surveyToken + '-coolDown' ) !== 'undefined' && Cookie.get( surveyToken + '-coolDown' ) ) {\r\n    return;\r\n  }\r\n\r\n  if ( typeof config.isActive !== 'undefined' && config.isActive ) {\r\n    SurveyManager.surveyInstances[ surveyToken ] = ( SurveyManager.surveyInstances[ surveyToken ] ) ? SurveyManager.surveyInstances[ surveyToken ] : new Survey( surveyToken, config );\r\n    SurveyManager.surveyInstances[ surveyToken ].tracking.trackEvent( 'Init MicroSurvey', {\r\n      token: surveyToken,\r\n      data: {\r\n        name: ( <any>window ).isMobile ? 'Mobile Mode' : 'Desktop Mode',\r\n        action: surveyToken\r\n      }\r\n    }, null, null );\r\n    return SurveyManager.surveyInstances[ surveyToken ];\r\n  } else {\r\n    //do nothing\r\n  }\r\n\r\n}\r\n\r\nexport function destroy( surveyToken: string ) {\r\n  //remove from trigger manager, delete instance.\r\n  if ( !SurveyManager ||\r\n    !SurveyManager.surveyInstances ||\r\n    !SurveyManager.surveyInstances[ surveyToken ] ||\r\n    !SurveyManager.surveyInstances[ surveyToken ].dom ) {\r\n    return;\r\n  }\r\n  SurveyManager.surveyInstances[ surveyToken ].dom.destroyListeners();\r\n  SurveyManager.surveyInstances[ surveyToken ].destroy();\r\n  delete SurveyManager.surveyInstances[ surveyToken ];\r\n}\r\n//\r\nexport function trigger( surveyToken: string, type: string, target: string ) {\r\n  ( window as any ).ccsdkDebug ? console.log( SurveyManager.surveyInstances ) : '';\r\n\r\n  if ( typeof SurveyManager.surveyInstances[ surveyToken ] != 'undefined' ) {\r\n    SurveyManager.surveyInstances[ surveyToken ].tracking.trackEvent( 'Trigger Type', {\r\n      token: surveyToken,\r\n      data: {\r\n        name: type,\r\n        action: surveyToken\r\n      }\r\n    }, null, null );\r\n    SurveyManager.surveyInstances[ surveyToken ].trigger( type, target );\r\n  }\r\n  //tell trigger manager to register trigger.\r\n}\r\n\r\nexport function on( surveyToken: string, type: string, callback: any ) {\r\n  if ( typeof SurveyManager.surveyInstances[ surveyToken ] != 'undefined' ) {\r\n    SurveyManager.surveyInstances[ surveyToken ].tracking.trackEvent( 'Event Listeners', {\r\n      token: surveyToken,\r\n      data: {\r\n        name: type,\r\n        action: surveyToken\r\n      }\r\n    }, null, null );\r\n    SurveyManager.surveyInstances[ surveyToken ].on( type, callback );\r\n  }\r\n}\r\n\r\nexport function prefill( surveyToken: string, questionId: string, answerObject: any ) {\r\n  if ( typeof SurveyManager.surveyInstances[ surveyToken ] != 'undefined' ) {\r\n    SurveyManager.surveyInstances[ surveyToken ].tracking.trackEvent( 'Prefill', {\r\n      token: surveyToken,\r\n      data: {\r\n        name: questionId,\r\n        action: surveyToken\r\n      }\r\n    }, null, null );\r\n    SurveyManager.surveyInstances[ surveyToken ].prefill( questionId, answerObject );\r\n  }\r\n}\r\n\r\nexport function prefillByTag( surveyToken: string, questionTag: string, answer: any ) {\r\n  if ( typeof SurveyManager.surveyInstances[ surveyToken ] != 'undefined' ) {\r\n    SurveyManager.surveyInstances[ surveyToken ].tracking.trackEvent( 'Prefill by tag', {\r\n      token: surveyToken,\r\n      data: {\r\n        name: questionTag,\r\n        action: surveyToken\r\n      }\r\n    }, null, null );\r\n    SurveyManager.surveyInstances[ surveyToken ].fillPrefill( questionTag, answer );\r\n  }\r\n}\r\n\r\nexport function prefillByNote( surveyToken: string, questionNote: string, answer: any ) {\r\n  if ( typeof SurveyManager.surveyInstances[ surveyToken ] != 'undefined' ) {\r\n    SurveyManager.surveyInstances[ surveyToken ].tracking.trackEvent( 'Prefill by Note', {\r\n      token: surveyToken,\r\n      data: {\r\n        name: questionNote,\r\n        action: surveyToken\r\n      }\r\n    }, null, null );\r\n    SurveyManager.surveyInstances[ surveyToken ].fillPrefillByNote( questionNote, answer );\r\n  }\r\n}\r\n\r\nexport function show( surveyToken: string ) {\r\n  if ( typeof SurveyManager.surveyInstances[ surveyToken ] != 'undefined' ) {\r\n    SurveyManager.surveyInstances[ surveyToken ].show();\r\n  }\r\n}\r\n\r\nexport function hide( surveyToken: string ) {\r\n  if ( typeof SurveyManager.surveyInstances[ surveyToken ] != 'undefined' ) {\r\n    SurveyManager.surveyInstances[ surveyToken ].dom.destroyListeners();\r\n    SurveyManager.surveyInstances[ surveyToken ].destroy();\r\n    SurveyManager.surveyInstances[ surveyToken ].hide();\r\n  }\r\n}","import { CCSDKConfig } from \"./interfaces/CCSDKConfig\";\r\nimport { DisplayConfig } from \"./interfaces/DisplayConfig\";\r\nimport { SurveyHandler } from \"./SurveyHandler\";\r\nimport { DomSurvey } from \"./helpers/dom/DomSurvey\";\r\nimport { DomUtilities } from \"./helpers/dom/DomUtilities\";\r\nimport { Scrollbar } from \"./helpers/dom/ScrollBar\";\r\nimport { Cookie } from './helpers/Cookie';\r\nimport { Constants } from './Constants';\r\nimport { Slider } from \"./helpers/dom/Slider\";\r\nimport { SurveyManager } from \"./SurveyManager\";\r\nimport { TriggerManager } from \"./TriggerManager\";\r\nimport { Triggers } from './Triggers';\r\nimport { RequestHelper } from './helpers/Request';\r\nimport { Config } from './Config';\r\nimport { MatomoTracker } from './helpers/tracking';\r\nimport { templates } from \"./helpers/templates\";\r\n\r\nclass Survey {\r\n  survey: SurveyHandler;\r\n  dom: DomSurvey;\r\n  surveyData: any;\r\n  util: DomUtilities;\r\n  scrollbar: Scrollbar;\r\n  slider: Slider;\r\n  config: CCSDKConfig;\r\n  surveyToken: string;\r\n  triggers: Triggers;\r\n  surveyRunning: boolean;\r\n  surveyDone: boolean;\r\n  surveyStatus: string;\r\n  isThrottled: boolean;\r\n  thorttlingLogic: any;\r\n  loginData: any;\r\n  debug: false;\r\n  surveyStartTime: any;\r\n  requester = new RequestHelper();\r\n  tracking: MatomoTracker;\r\n\r\n  constructor(surveyToken: string, config: CCSDKConfig) {\r\n    this.isThrottled = true;\r\n    this.surveyDone = false;\r\n    this.surveyStatus = '';\r\n    this.surveyToken = surveyToken;\r\n    this.config = config;\r\n    this.surveyRunning = false;\r\n    this.thorttlingLogic = null;\r\n    this.tracking = new MatomoTracker();\r\n    this.tracking.token = surveyToken;\r\n    if (typeof this.config.textDirection === 'undefined') {\r\n      this.config.textDirection = \"ltr\";\r\n    }\r\n\r\n    this.triggers = new Triggers(this);\r\n    TriggerManager.addSurvey(this.surveyToken, this.triggers);\r\n    this.survey = new SurveyHandler(this);\r\n    this.util = new DomUtilities;\r\n    //set themeColor of survey\r\n    this.config.brandColor = (this.config && this.config.brandColor) ?\r\n      this.config.brandColor : \"#db3c39\";\r\n    //use config variable textDirection and set dir\r\n    this.setHtmlTextDirection();\r\n    this.setDisplayOptions();\r\n    this.util.trigger(document, this.surveyToken + '-ready', { 'survey': this });\r\n    //do login\r\n    this.config.username = \"test\";\r\n    this.config.password = \"test\";\r\n    this.config.location = \"location\";\r\n    this.config.language = \"English (Default)\";\r\n    //check trigger conditions and add itself to \r\n    //based on new config\r\n    //gotta and these.\r\n    this.trigger(\"click\", this.config.cssSelector);\r\n    // this.trigger(\"scroll-pixels\", this.config.scrollPercent);\r\n    // this.trigger(\"page-time\", this.config.waitSeconds);\r\n    // this.trigger(\"url-match\", this.config.grepURL);\r\n    // this.trigger(\"url-not-match\", this.config.grepInvertURL);\r\n    // this.config.scrollPercent = 10;\r\n    // this.config.waitSeconds = 5;\r\n    this.triggers.setConditionalTriggers(this.config);\r\n    // this.login(function() {\r\n    //on login\r\n    // });\r\n  }\r\n\r\n  getSurveyThrottlingLogic(cb) {\r\n    let getThrottleUrl = Config.API_URL + Config.GET_SURVEY_THROTTLE_LOGIC.replace('{location}', this.config.location);\r\n    let headers = {};\r\n    headers[Constants.AUTHORIZATION] = Constants.AUTHORIZATION_BEARER + \" \" + this.loginData.access_token;\r\n    let self = this;\r\n    let successcb = function (data) {\r\n      self.thorttlingLogic = data;\r\n      self.checkThrottling(cb);\r\n    };\r\n\r\n    RequestHelper.getWithHeaders(getThrottleUrl, headers, successcb, null);\r\n  }\r\n\r\n  checkThrottling(cb) {\r\n    if (this.thorttlingLogic != null) {\r\n      if (this.thorttlingLogic.inputIds == null) {\r\n        this.thorttlingLogic.inputIds = [];\r\n      }\r\n      this.thorttlingLogic.inputIds.push(this.thorttlingLogic[this.thorttlingLogic.uniqueIDQuestionIdOrTag.toLowerCase()]);\r\n      if (this.thorttlingLogic.logics != null && this.thorttlingLogic.logics.length > 0 && this.config != null) {\r\n        this.thorttlingLogic.logics[0].filter.location = [];\r\n        this.thorttlingLogic.logics[0].filter.location.push(this.config.location);\r\n      }\r\n    }\r\n    let self = this;\r\n    let postThrottleUrl = Config.API_URL + Config.POST_THROTTLING;\r\n    let headers = {};\r\n    headers[Constants.AUTHORIZATION] = Constants.AUTHORIZATION + \" \" + this.loginData.access_token;\r\n    let successcb = function (throttleResponse) {\r\n\r\n      if (typeof throttleResponse[0][self.thorttlingLogic.uniqueIDQuestionIdOrTag.toLowerCase()] && throttleResponse[0].value) {\r\n        //get survey data?  \r\n        cb();\r\n      }\r\n    };\r\n\r\n    RequestHelper.postWithHeaders(postThrottleUrl, this.thorttlingLogic, headers, successcb, null);\r\n  }\r\n\r\n  addThrottlingEntries(isOpen: boolean) {\r\n    let addThrottleUrl = Config.API_URL + Config.POST_THROTTLING_ADD_ENTRIES;\r\n    let headers = {};\r\n    this.loginData = { access_token: \"help\" };\r\n    headers[Constants.AUTHORIZATION] = Constants.AUTHORIZATION + \" \" + this.loginData.access_token;\r\n    //fill this from config and data.\r\n    let successcb = (throttleResponse) => {\r\n      this.debug ? console.log(throttleResponse) : '';\r\n    }\r\n\r\n    RequestHelper.postWithHeaders(addThrottleUrl, {\r\n      user: \"\",\r\n      mobile: \"\",\r\n      emailId: \"\",\r\n      customId: \"\",\r\n      surveySentDate: \"\",\r\n      surveyOpenDate: \"\",\r\n      channel: \"\",\r\n      isOpened: isOpen\r\n    }, headers, successcb, null);\r\n\r\n  }\r\n\r\n  setupSurvey() {\r\n    // this.getSurveyData();\r\n    this.initSurvey();\r\n  }\r\n\r\n  setHtmlTextDirection() {\r\n    let ccSDKElement = document.querySelector('.cc-sdk');\r\n    if (!ccSDKElement) {\r\n      return;\r\n    }\r\n    let ccSDKDir: string = ccSDKElement.getAttribute('dir');\r\n    let direction: string = (this.config && this.config.textDirection) ?\r\n      this.config.textDirection : (ccSDKDir ? ccSDKDir : \"ltr\");\r\n    ccSDKElement.setAttribute('dir', direction);\r\n  }\r\n\r\n  setDisplayOptions() {\r\n    this.survey.surveyDisplay.position = this.config && this.config.position ?\r\n      this.config.position : \"bottom right\";\r\n    let welcomePopupAnimation = 'hide-right-left';\r\n    // this.survey.surveyDisplay.welcomePopupAnimation =  this.config && this.config.display && this.config.display.welcomePopupAnimation ?\r\n    // \"hide-\"+ this.config.display.welcomePopupAnimation : \"hide-right-left\";\r\n    // this.survey.surveyDisplay.surveyPopupAnimation =  this.config && this.config.display && this.config.display.surveyPopupAnimation ?\r\n    // \"hide-\"+ this.config.display.surveyPopupAnimation : \"hide-right-left\";\r\n    // this.survey.surveyDisplay.surveyPosition =  this.config && this.config.display && this.config.display.surveyPosition ?\r\n    // this.config.display.surveyPosition : ( this.config.display.position.search(/bottom/gi)==-1?\"top\":\"bottom\" ) ;\r\n\r\n    switch (this.survey.surveyDisplay.position) {\r\n      case 'bottom right':\r\n        welcomePopupAnimation = 'hide-right-left';\r\n        break;\r\n      case 'right bottom':\r\n        welcomePopupAnimation = 'hide-right-left';\r\n        break;\r\n      case 'top right':\r\n        welcomePopupAnimation = 'hide-right-left';\r\n        break;\r\n      case 'right top':\r\n        welcomePopupAnimation = 'hide-right-left';\r\n        break;\r\n      case 'bottom left':\r\n        welcomePopupAnimation = 'hide-left-right';\r\n        break;\r\n      case 'left bottom':\r\n        welcomePopupAnimation = 'hide-left-right';\r\n        break;\r\n      case 'top left':\r\n        welcomePopupAnimation = 'hide-left-right';\r\n        break;\r\n      case 'left top':\r\n        welcomePopupAnimation = 'hide-left-right';\r\n        break;\r\n      default:\r\n        welcomePopupAnimation = 'hide-right-left';\r\n        break;\r\n    }\r\n    this.survey.surveyDisplay.welcomePopupAnimation = welcomePopupAnimation;\r\n    this.tracking.trackEvent('Welcome Pop up Position', {\r\n      token: this.tracking.token,\r\n      data: {\r\n        name: this.survey.surveyDisplay.position,\r\n        action: null\r\n      }\r\n    }, null, null);\r\n\r\n    this.survey.surveyDisplay.surveyPosition = this.config.position.search(/bottom/gi) == -1 ? \"top\" : \"bottom\";\r\n  }\r\n\r\n  getSurveyData() {\r\n    let self: Survey = this;\r\n    let successcb = function (surveyData) {\r\n      self.debug ? console.log(surveyData) : '';\r\n      // console.log(surveyData);\r\n\r\n      self.surveyData = surveyData;\r\n      if (surveyData && surveyData.questions && surveyData.questions[0]) {\r\n        self.tracking.username = surveyData.questions[0].user;\r\n        self.config.username = surveyData.questions[0].user;\r\n      }\r\n\r\n      self.tracking.token = self.surveyToken;\r\n\r\n      self.tracking.trackEvent('Login Success', {\r\n        token: self.tracking.token,\r\n        data: {\r\n          name: 'Token',\r\n          action: self.surveyToken\r\n        }\r\n      }, console.log, console.error)\r\n      self.tracking.trackEvent('Survey Length', {\r\n        token: self.tracking.token,\r\n        data: {\r\n          name: `${surveyData.questions.length} Questions`,\r\n          action: `${surveyData.preFill ? surveyData.preFill.length : 0} Prefills`\r\n        }\r\n      }, null, null);\r\n      let event = new CustomEvent(Constants.SURVEY_DATA_EVENT + \"-\" + self.surveyToken, { detail: JSON.parse(JSON.stringify(surveyData)) });\r\n      document.dispatchEvent(event);\r\n      if (!self.config.skipWelcomePage) {\r\n        self.dom.hideLoader();\r\n      }\r\n      if (self.surveyData) {\r\n        self.initSurveyQuestions();\r\n      } else {\r\n        this.tracking.trackEvent('Expired Survey', {\r\n          token: this.tracking.token,\r\n          data: {\r\n            name: null,\r\n            action: null\r\n          }\r\n        }, null, null);\r\n        self.survey.displayWelcomeQuestion(\"The Survey has been expired\");\r\n      }\r\n    };\r\n    let errorcb = null;\r\n    this.survey.fetchQuestions(successcb, errorcb);\r\n  }\r\n\r\n  initSurvey() {\r\n    //if survey already run don't run?\r\n    //if default trigger initiated and survey already run then don't run.\r\n    let self: Survey = this;\r\n    // if(!self.surveyRunning) {\r\n    //   self.surveyRunning = true;\r\n    // }\r\n    self.surveyRunning = true;\r\n    self.dom = new DomSurvey(this);\r\n    self.dom.setTheme(self.config.brandColor, this.config.keepAlive ? this.config.keepAlive : 0);\r\n    // self.survey.attachSurvey(this.surveyData);\r\n    // self.config.language = \"हिन्दी\";\r\n    self.config.language = \"default\";\r\n    if (self.surveyToken && decodeURIComponent(self.surveyToken).trim() !== '' && !self.config.skipWelcomePage) {\r\n      self.survey.displayWelcomeQuestion();\r\n    } else if (self.config.skipWelcomePage) {\r\n      let onImpressionEvent = new CustomEvent(Constants.SURVEY_IMPRESSION_EVENT + \"-\" + this.surveyToken);\r\n      document.dispatchEvent(onImpressionEvent);\r\n      self.dom.startSurvey();\r\n      self.survey.setCoolDownPeriod(self.config, self.surveyToken);\r\n      this.surveyStartTime = new Date();\r\n      self.survey.acceptAnswers();\r\n    }\r\n    self.dom.setupListeners();\r\n    // self.survey.displayLanguageSelector();\r\n    //survey start event.\r\n    // let onSurveyStartEvent = new CustomEvent(Constants.SURVEY_START_EVENT + \"-\" + this.surveyToken);\r\n    // document.dispatchEvent(onSurveyStartEvent);\r\n  }\r\n\r\n  initSurveyQuestions() {\r\n    let self: Survey = this;\r\n    self.survey.attachSurvey(this.surveyData);\r\n    // self.dom.setupListeners();\r\n    // self.config.language = \"हिन्दी\";\r\n    self.config.language = \"default\";\r\n    // self.survey.displayLanguageSelector();\r\n    //survey start event.\r\n    this.dom.initSurveyDom();\r\n    let onSurveyStartEvent = new CustomEvent(Constants.SURVEY_START_EVENT + \"-\" + this.surveyToken);\r\n    document.dispatchEvent(onSurveyStartEvent);\r\n  }\r\n\r\n  public on(type: string, callback: any) {\r\n    document.addEventListener(type + \"-\" + this.surveyToken, function (e: any) {\r\n      callback(e.detail);\r\n    });\r\n  }\r\n\r\n  public show() {\r\n    //do show and hide things.\r\n    SurveyManager.setSurveyRunning();\r\n    //show survey\r\n    this.setupSurvey();\r\n\r\n  }\r\n\r\n  public hide() {\r\n    SurveyManager.unsetSurveyRunning();\r\n    this.survey.destroy();\r\n    this.tracking.trackEvent('Survey Destroyed', {\r\n      token: this.tracking.token,\r\n      data: {\r\n        name: (<any>new Date() - (<any>window).globalSurveyStartTime) + 's',\r\n        action: null\r\n      }\r\n    }, null, null);\r\n  }\r\n\r\n  public destroy() {\r\n    //remove all listeners?\r\n    SurveyManager.unsetSurveyRunning();\r\n    this.survey.destroy();\r\n  }\r\n\r\n\r\n  public prefill(questionId: string, answer: any) {\r\n    //save this in this.surveyHandler\r\n    // this.survey.fillPrefillQuestionObject(questionId, answerObject);\r\n    this.survey.fillPrefillDirect(questionId, answer);\r\n  }\r\n\r\n  public fillPrefill(questionTag: string, answer: any) {\r\n    //save this in this.surveyHandler\r\n    this.survey.fillPrefill(questionTag, answer);\r\n  }\r\n\r\n  public fillPrefillByNote(questionNote: string, answer: any) {\r\n    this.survey.fillPrefillByNote(questionNote, answer);\r\n  }\r\n\r\n  public trigger(type: string, target: any) {\r\n    let self: Survey = this;\r\n    switch (type) {\r\n      case 'click':\r\n        console.log('enable click trigger ##')\r\n        this.triggers.enableClickTrigger(target, function () {\r\n          // self.initSurvey();\r\n          // Scrollbar.initAll();\r\n          // self.slider = new Slider();\r\n          // self.setupSurvey();\r\n          SurveyManager.addSurvey(self.surveyToken);\r\n\r\n        });\r\n        break;\r\n      case 'page-count':\r\n        let count: number = parseInt(target);\r\n        this.triggers.enablePageCountTrigger(count);\r\n\r\n        break;\r\n      case 'site-count':\r\n        let count2: number = parseInt(target);\r\n        this.triggers.enableSiteCountTrigger(count2);\r\n        break;\r\n      case 'page-time':\r\n        this.triggers.enablePageTimeTrigger(parseInt(target));\r\n        break;\r\n      case 'site-time':\r\n        this.triggers.enableSiteTimeTrigger(parseInt(target));\r\n        break;\r\n      case 'url-match':\r\n        this.triggers.enablePopUpByURLPatternTrigger(target);\r\n        break;\r\n      case 'url-not-match':\r\n        this.triggers.enablePopUpByNotURLPatternTrigger(target);\r\n        break;\r\n      case 'utm-match':\r\n        this.triggers.enablePopUpByUTMPatternTrigger(target);\r\n        break;\r\n      case 'scroll-pixels':\r\n        this.triggers.enableScrollPixelsTrigger(parseInt(target));\r\n        break;\r\n      case 'launch':\r\n        SurveyManager.addSurvey(self.surveyToken);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nexport { Survey };","\r\n// import 'whatwg-fetch';\r\nimport { Config } from \"./Config\";\r\nimport { DisplayConfig } from \"./interfaces/DisplayConfig\";\r\nimport { RequestHelper } from './helpers/Request';\r\nimport { templates } from \"./helpers/templates\";\r\nimport { DomUtilities } from \"./helpers/dom/DomUtilities\";\r\nimport { DomSurvey } from \"./helpers/dom/DomSurvey\";\r\nimport { ConditionalTextFilter } from \"./helpers/filters/ConditionalTextFilter\";\r\nimport { Constants } from \"./Constants\";\r\nimport { LanguageTextFilter } from \"./helpers/filters/LanguageTextFilter\";\r\nimport { Select } from './helpers/dom/Select';\r\nimport { Cookie } from './helpers/Cookie';\r\nimport { ConditionalFlowFilter } from './helpers/filters/ConditionalFlowFilter';\r\n\r\n\r\n\r\nclass SurveyHandler {\r\n  surveyToken: string;\r\n  surveyData: any;\r\n  questions: any;\r\n  prefillQuestions: any;\r\n  questionsToDisplay: any;\r\n  randomNumber: Number;\r\n  welcomeQuestion: any;\r\n  welcomeQuestionButtonText: any;\r\n  prefillResponses: any;\r\n  prefillDirect: any;\r\n  prefillWithTags: any;\r\n  prefillWithNote: any;\r\n  questionResponses: any;\r\n  answers: any = {};\r\n  surveyAnswers: any = {};\r\n  util: DomUtilities;\r\n  dom: DomSurvey;\r\n  displayThankYouCb: any;\r\n  destroySurveyCb: any;\r\n  acceptAnswersCb: any;\r\n  surveyDisplay: DisplayConfig;\r\n  currentQuestion: any;\r\n  conditionalQuestions: any;\r\n  ccsdk: any;\r\n  welcomeInterval: any;\r\n  welcomeQuestionDisplayTime: any;\r\n  domListeners: any;\r\n  languageSelect: any;\r\n  private _prefillsPartiallyPosted = false;\r\n  // isPartialAvailable : Boolean;\r\n\r\n  constructor( ccsdk ) {\r\n    this.surveyToken = ccsdk.surveyToken;\r\n    this.surveyData = {};\r\n    this.surveyDisplay = {\r\n      'position': '',\r\n      'surveyPosition': '',\r\n      'welcomePopupAnimation': '',\r\n      'surveyPopupAnimation': '',\r\n    };\r\n    this.ccsdk = ccsdk;\r\n    this.domListeners = [];\r\n    this.questions = [];\r\n    this.questionsToDisplay = [];\r\n    this.prefillQuestions = [];\r\n    this.conditionalQuestions = [];\r\n    this.prefillResponses = [];\r\n    this.prefillWithTags = {};\r\n    this.prefillWithNote = {};\r\n    this.prefillDirect = {};\r\n    this.answers = {};\r\n    this.util = new DomUtilities();\r\n    this.dom = ccsdk.dom;\r\n    this.displayThankYouCb = ( e: any ) => {\r\n      //perform final post\r\n      this.finalPost( null, null );\r\n      if ( this.ccsdk && this.ccsdk.tracking ) {\r\n        this.ccsdk.tracking.trackEvent( 'Completed Survey', {\r\n          token: this.ccsdk.tracking.token,\r\n          data: {\r\n            name: null,\r\n            action: null\r\n          }\r\n        }, null, null );\r\n      }\r\n\r\n      let thankyouHtml: any = templates.thankyou;\r\n      // thankyouHtml = thankyouHtml.replace(\"{{question}}\", this.surveyData.thankyouText);\r\n      // thankyouHtml = thankyouHtml.replace(\"{{question}}\", LanguageTextFilter.translateMessages(this, \"thankyouText\"));\r\n      let thankyouText = this.ccsdk.config.thankyouText ? this.ccsdk.config.thankyouText : ( this.surveyData.thankyouText ? this.surveyData.thankyouText : 'Thank You' );\r\n      let startText = this.ccsdk.config.startButtonText ? this.ccsdk.config.startButtonText : 'Start';\r\n      thankyouHtml = thankyouHtml.replace( \"{{question}}\", thankyouText );\r\n      thankyouHtml = thankyouHtml.replace( \"{{button}}\", startText );\r\n      thankyouHtml = thankyouHtml.replace( \"{{branding}}\", this.surveyData.branding && this.surveyData.branding.toUpperCase() === 'NONE' ? 'no-branding' : 'full-branding' )\r\n      this.ccsdk.dom.replaceInQuestionsContainer( thankyouHtml );\r\n      //TODO : Fix this Add class not working???\r\n      let thankyouContainer: any = this.util.get( \"#cc-thankyou-container\" );\r\n      ( window as any ).ccsdkDebug ? console.log( thankyouContainer ) : '';\r\n      this.util.addClass( thankyouContainer[ 0 ], 'show-thankyou-slide' );\r\n      let onSurveyEndEvent = new CustomEvent( Constants.SURVEY_END_EVENT + \"-\" + this.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyEndEvent );\r\n      //set done cookie for 30 days.\r\n      Cookie.set( this.surveyToken + '-finish', 'true', 30, '/' );\r\n      setTimeout( () => {\r\n        this.ccsdk.dom.destroyListeners();\r\n        this.destroy();\r\n      }, 2000 );\r\n    }\r\n\r\n    this.destroySurveyCb = ( e: any ) => {\r\n      let self: SurveyHandler = this;\r\n      //send end survey event.\r\n      let onSurveyEndEvent = new CustomEvent( Constants.SURVEY_END_EVENT + \"-\" + this.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyEndEvent );\r\n      self.destroy();\r\n    }\r\n\r\n    this.acceptAnswersCb = ( e: any ) => {\r\n      let self: SurveyHandler = this;\r\n      // (window as any).ccsdkDebug?console.log(self):'';\r\n      // (window as any).ccsdkDebug?console.log('question answered',e:'')\r\n      let data: any = <any>e.detail;\r\n      let response: any = {};\r\n      response.questionId = data.questionId;\r\n      switch ( data.type ) {\r\n        case 'scale':\r\n          response.text = null;\r\n          response.number = Number( data.data.number );\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'nps':\r\n          response.text = null;\r\n          response.number = Number( data.data.number );\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'radio':\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          // response.number = Number(data.data.number);\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'radioImage':\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'smile':\r\n          response.text = null;\r\n          response.number = Number( data.data.number );\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'star':\r\n          response.text = null;\r\n          response.number = Number( data.data.number );\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'multiline':\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex( data.index );\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'singleline':\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex( data.index );\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'number':\r\n          response.text = null;\r\n          response.number = Number( data.data.number );\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex( data.index );\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'checkbox':\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex( data.index );\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'select':\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex( data.index );\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case 'slider':\r\n          response.text = data.data.text;\r\n          response.number = Number( data.data.number );\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer( data.index, response, false, null, null );\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex( data.index );\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  fetchQuestions( successcb, errorcb ) {\r\n    this.randomNumber = parseInt( ( String )( Math.random() * 1000 ) );\r\n    let surveyUrl = Config.SURVEY_BY_TOKEN.replace( \"{token}\", \"\" + this.surveyToken );\r\n    // surveyUrl = surveyUrl.replace(\"{tabletId}\", \"\" + this.randomNumber);\r\n    surveyUrl = Config.API_URL + surveyUrl;\r\n    RequestHelper.get( surveyUrl, successcb, errorcb );\r\n\r\n    // (window as any).ccsdkDebug?console.log(data):'';\r\n    // this.surveyData = data.then(function();\r\n    // (window as any).ccsdkDebug?console.log(this.surveyData):'';\r\n  }\r\n\r\n  removeAnswer( questionId ) {\r\n    delete this.answers[ questionId ];\r\n    delete this.surveyAnswers[ questionId ];\r\n  }\r\n\r\n  attachSurvey( surveyData: any ) {\r\n    this.surveyData = surveyData;\r\n    this.setupPrefill();\r\n    this.setupSurveyContainer();\r\n    //clean survey\r\n    this.cleanSurvey();\r\n    this.displayQuestions();\r\n    this.displayThankYou();\r\n    this.destroySurvey();\r\n  }\r\n\r\n  setupPrefill() {\r\n    if ( this.surveyData && this.surveyData.preFill && this.surveyData.preFill.length > 0 ) {\r\n      this.surveyData.preFill.map( response => {\r\n        this.fillPrefillQuestionObject( response.questionId, response );\r\n      } )\r\n    }\r\n  }\r\n\r\n  cleanSurvey() {\r\n    this.questionsToDisplay = [];\r\n    this.answers = {};\r\n    this.surveyAnswers = {};\r\n    this.conditionalQuestions = [];\r\n  }\r\n\r\n  setupSurveyContainer() {\r\n    let surveyHtml: any = templates.question_survey;\r\n    surveyHtml = surveyHtml.replace( \"{{surveyToken}}\", this.surveyToken );\r\n    surveyHtml = surveyHtml.replace( \"{{animation}}\", this.surveyDisplay.surveyPopupAnimation );\r\n    surveyHtml = surveyHtml.replace( /{{location}}/g, this.surveyDisplay.surveyPosition );\r\n    this.ccsdk.dom.appendInBody( surveyHtml );\r\n  }\r\n\r\n  displayQuestionSelector() {\r\n\r\n  }\r\n\r\n  displayWelcomeQuestion( warningWelcomeText?: string ) {\r\n    //call this with true when welcome container is clicked.\r\n    // this.ccsdk.addThrottlingEntries(false);\r\n    let onSurveyImpressionEvent = new CustomEvent( Constants.SURVEY_IMPRESSION_EVENT + \"-\" + this.surveyToken );\r\n    document.dispatchEvent( onSurveyImpressionEvent );\r\n    this.ccsdk.surveyStartTime = new Date();\r\n    let self = this;\r\n    let welcomeHtml: any = templates.question_start;\r\n    welcomeHtml = welcomeHtml.replace( \"{{surveyToken}}\", this.surveyToken );\r\n    // welcomeHtml = welcomeHtml.replace(\"{{question}}\", this.surveyData.welcomeText);\r\n    let welcomeText = this.ccsdk.config.welcomeText ? this.ccsdk.config.welcomeText : 'Welcome';\r\n    // welcomeHtml = welcomeHtml.replace(\"{{question}}\", LanguageTextFilter.translateMessages(this, \"welcomeText\"));\r\n    let startText = this.ccsdk.config.startButtonText ? this.ccsdk.config.startButtonText : 'Start';\r\n    if ( warningWelcomeText ) {\r\n      document.getElementById( this.surveyToken + \"-welcome\" ).remove();\r\n      welcomeHtml = welcomeHtml.replace( \"{{question}}\", warningWelcomeText );\r\n      welcomeHtml = welcomeHtml.replace( \"{{button}}\", \"Close\" );\r\n      welcomeHtml = welcomeHtml.replace( \"{{action}}\", \"button-close\" );\r\n    } else {\r\n      welcomeHtml = welcomeHtml.replace( \"{{question}}\", welcomeText );\r\n      welcomeHtml = welcomeHtml.replace( \"{{button}}\", startText );\r\n      welcomeHtml = welcomeHtml.replace( \"{{action}}\", \"survey-start\" );\r\n    }\r\n    welcomeHtml = welcomeHtml.replace( \"{{location}}\", this.surveyDisplay.position );\r\n    welcomeHtml = welcomeHtml.replace( \"{{animation}}\", this.surveyDisplay.welcomePopupAnimation );\r\n    // (window as any).ccsdkDebug?console.log(\"Appending in body\"):'';\r\n    this.ccsdk.dom.appendInBody( welcomeHtml );\r\n    this.ccsdk.dom.showWelcomeContainer();\r\n    this.setCoolDownPeriod( this.ccsdk.config, this.surveyToken )\r\n    if ( ( typeof this.ccsdk.config.keepAlive != undefined ) && ( this.ccsdk.config.keepAlive > 0 ) ) {\r\n      this.welcomeQuestionDisplayTime = new Date();\r\n      this.welcomeInterval = setInterval( () => { self.checkWelcomeQuestionDisplay( self.ccsdk.config.keepAlive ) }\r\n        , 1000 );\r\n    }\r\n\r\n    this.acceptAnswers();\r\n    // self.survey.displayLanguageSelector();\r\n\r\n  }\r\n\r\n  setCoolDownPeriod( campaign, surveyToken ) {\r\n    if ( campaign && campaign.coolDownPeriod && campaign.coolDownPeriod != 0 ) {\r\n      Cookie.set( surveyToken + '-coolDown', 'true', campaign.coolDownPeriod / 86400, '/' );\r\n    } else {\r\n      Cookie.set( surveyToken + '-coolDown', 'true', 1, '/' );\r\n    }\r\n  }\r\n\r\n  checkWelcomeQuestionDisplay( keepAlive ) {\r\n    let self = this;\r\n    let now = new Date();\r\n    if ( keepAlive ) {\r\n      // console.log((now.getTime() - this.welcomeQuestionDisplayTime.getTime()) / 1000);\r\n      if ( keepAlive <= ( now.getTime() - this.welcomeQuestionDisplayTime.getTime() ) / 1000 ) {\r\n        self.killWelcomeQuestion();\r\n      }\r\n    }\r\n  }\r\n\r\n  killWelcomeQuestion() {\r\n    this.destroy();\r\n    clearInterval( this.welcomeInterval );\r\n  }\r\n  cancelKillWelcomeQuestion() {\r\n    clearInterval( this.welcomeInterval );\r\n  }\r\n\r\n  displayLanguageSelector() {\r\n    let self = this;\r\n    let options1: string;\r\n    let qId = 'languageSelector';\r\n    let cTemplate1 = templates.language_selector;\r\n    options1 = this.util.generateLanguageSelectOptions( [ \"default\" ] );\r\n    if ( this.surveyData.translated ) {\r\n      options1 = this.util.generateLanguageSelectOptions( [ \"default\" ].concat( Object.keys( this.surveyData.translated ) ) );\r\n    }\r\n    cTemplate1 = cTemplate1.replace( /{{questionId}}/g, qId );\r\n    cTemplate1 = cTemplate1.replace( \"{{options}}\", options1 );\r\n    cTemplate1 = cTemplate1.replace( \"{{requiredLabel}}\", true ? \"*\" : \"\" );\r\n    this.ccsdk.dom.replaceInQuestionsContainer( cTemplate1 );\r\n    let $questionContainer = document.\r\n      querySelectorAll( \".cc-questions-container\" );\r\n    let $body = document.getElementsByTagName( \"body\" )[ 0 ];\r\n\r\n    this.util.addClass( $questionContainer[ 0 ].firstChild, 'show-slide' );\r\n    this.languageSelect = new Select( qId );\r\n    let submitBtn = document.querySelectorAll( '.submit-icon' );\r\n    this.util.removeClassAll( submitBtn, 'act-cc-button-next' );\r\n    this.util.addClassAll( submitBtn, 'act-cc-button-lang-next' );\r\n    if ( this.languageSelect ) {\r\n      this.languageSelect.destroyListeners();\r\n    }\r\n    this.languageSelect.init( qId );\r\n    let selectRes = '';\r\n    if ( this.util.checkIfListenerExists( '#' + qId + \" .cc-select-options .cc-select-option\", this.domListeners ) ) {\r\n      // return;\r\n      ( window as any ).ccsdkDebug ? console.log( \"display language select - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId + \" .cc-select-options .cc-select-option\" );\r\n    }\r\n    let ref = this.util.initListener( 'click', '#' + qId + \" .cc-select-options .cc-select-option\", function () {\r\n      self.ccsdk.debug ? console.log( 'languageSelectOption' ) : '';\r\n      selectRes = document.querySelectorAll( '#' + qId + \" .cc-select-trigger\" )[ 0 ].innerHTML;\r\n    } );\r\n    this.domListeners.push( ref );\r\n    ref.internalHandler = this.util.listener( $body, ref.type, ref.id, ref.cb );\r\n\r\n\r\n    let languageSelect2 = this.util.initListener( \"click\", \".act-cc-button-lang-next\", function () {\r\n      self.ccsdk.debug ? console.log( 'languageNext' ) : '';\r\n      self.ccsdk.config.language = \"default\";\r\n      self.ccsdk.config.language = selectRes; //language selection from menu then show first question\r\n      //set config rtl or ltr\r\n      let isRTL = /[\\u0600-\\u06FF]/.test( selectRes );\r\n      self.ccsdk.config.textDirection = isRTL ? 'rtl' : 'ltr';\r\n      self.ccsdk.setHtmlTextDirection();\r\n      self.util.removeClassAll( submitBtn, 'act-cc-button-lang-next' );\r\n      self.util.addClassAll( submitBtn, 'act-cc-button-next' );\r\n      self.ccsdk.dom.loadFirstQuestion();        // this.loadFirstQuestion();\r\n      // self.postPrefillPartialAnswer( false, null, null );\r\n    } );\r\n    this.domListeners.push( languageSelect2 );\r\n\r\n    languageSelect2.internalHandler = this.util.listener( $body, languageSelect2.type, languageSelect2.id, languageSelect2.cb );\r\n\r\n\r\n\r\n    // this.util.addClass(thankyouContainer[0], 'show-thankyou-slide');\r\n\r\n    // this.ccsdk.dom.appendInBody(cTemplate1);\r\n    // this.ccsdk.dom.showLanguageSelector();\r\n    ( window as any ).ccsdkDebug ? console.log( cTemplate1 ) : '';\r\n  }\r\n\r\n  displayThankYou() {\r\n    let self: SurveyHandler = this;\r\n    document.addEventListener( 'ccdone', this.displayThankYouCb );\r\n  }\r\n\r\n\r\n  displayQuestions() {\r\n    //check question is supported, based on question types.\r\n    //filter pre fill questions.\r\n    this.questions = this.surveyData.questions;\r\n\r\n    // this.questionsToDisplay = (this.surveyData.questions as any[]).filter(this.filterQuestions);\r\n    this.filterQuestions();\r\n    //sort questions and display them?\r\n    this.questionsToDisplay = this.questionsToDisplay.sort( this.questionCompare );\r\n    let ccSurvey: any;\r\n    ccSurvey = document.getElementsByClassName( \"cc-questions-container\" );\r\n    // ccSurvey = ccSurvey[0];\r\n    let surveyObject = ccSurvey[ 0 ];\r\n    // (window as any).ccsdkDebug?console.log(this.questionsToDisplay):'';\r\n    //chec\r\n    //for now just do 1st question.\r\n    for ( let question of this.questionsToDisplay ) {\r\n      if ( this.checkConditionals( question ) ) {\r\n        let compiledTemplate = this.compileTemplate( question );\r\n        question.compiledTemplate = compiledTemplate;\r\n        // surveyObject.innerHTML += compiledTemplate;\r\n        //register handlers for onclick?\r\n      } else {\r\n        if ( this.isPrefillQuestion( question ) ) {\r\n          this.prefillQuestions.push( question );\r\n        }\r\n      }\r\n      //else don't display it.\r\n    }\r\n    // (window as any).ccsdkDebug?console.log(surveyObject.innerHTML):'';\r\n    // this.postPartialAnswer(this.questionsToDisplay[0], \"test\");\r\n\r\n  }\r\n\r\n  getSurveyQuestions(): any {\r\n    return this.questionsToDisplay;\r\n  }\r\n\r\n  getAnswerForQuestionId( questionId: string ) {\r\n    let answer = this.surveyAnswers[ questionId ];\r\n    if ( typeof answer === 'undefined' ) {\r\n      for ( let response of this.prefillResponses ) {\r\n        if ( response.questionId == questionId ) {\r\n          return response;\r\n        }\r\n      }\r\n    }\r\n    return this.surveyAnswers[ questionId ];\r\n  }\r\n\r\n  acceptAnswers() {\r\n    let self: SurveyHandler = this;\r\n    // (window as any).ccsdkDebug?console.log('add question answered listener':'')\r\n    document.addEventListener( 'q-answered', this.acceptAnswersCb );\r\n  }\r\n\r\n  fillPrefillQuestionObject( id: any, response: any ) {\r\n    let question: any = this.getQuestionById( id );\r\n    let responseStored = this.getPrefillResponseById( id );\r\n    if ( responseStored != null ) {\r\n      this.updatePrefillResponseById( id, response );\r\n    } else {\r\n      this.prefillResponses.push( response )\r\n    }\r\n  }\r\n\r\n  fillPrefill( tag: any, value: object ) {\r\n    this.prefillWithTags[ tag.toLowerCase() ] = value;\r\n    ( window as any ).ccsdkDebug ? console.log( 'prefillByTag', this.prefillWithTags ) : '';\r\n  }\r\n\r\n  fillPrefillByNote( note: any, value: object ) {\r\n    this.prefillWithNote[ note.toLowerCase() ] = value;\r\n    ( window as any ).ccsdkDebug ? console.log( 'prefillByNote', this.prefillWithNote ) : '';\r\n\r\n  }\r\n\r\n  fillPrefillDirect( questionId: string, value: object ) {\r\n    this.prefillDirect[ questionId ] = value;\r\n    ( window as any ).ccsdkDebug ? console.log( 'prefillDirect', this.prefillDirect ) : '';\r\n\r\n  }\r\n\r\n  fillPrefillQuestion( id: any, value: any, valueType: string ) {\r\n    let question: any = this.getQuestionById( id );\r\n    // console.log(this.questions);\r\n    let response: any;\r\n    let responseStored = this.getPrefillResponseById( id );\r\n    if ( responseStored != null ) {\r\n      response = responseStored;\r\n    } else {\r\n      response = {\r\n        questionId: question.id,\r\n        questionText: question.text,\r\n        textInput: null,\r\n        numberInput: null\r\n      };\r\n    }\r\n    valueType = this.getAnswerTypeFromDisplayType( question.displayType );\r\n\r\n    if ( valueType.toLowerCase() == \"number\" ) {\r\n      response.numberInput = value;\r\n    }\r\n    if ( valueType.toLowerCase() == \"text\" ) {\r\n      response.textInput = value;\r\n    }\r\n    if ( responseStored != null ) {\r\n      this.updatePrefillResponseById( id, response );\r\n    } else {\r\n      this.prefillResponses.push( response )\r\n    }\r\n\r\n  }\r\n\r\n  postPrefillPartialAnswer( fullSubmission = false, successcb, errorcb ) {\r\n    if ( !fullSubmission && this._prefillsPartiallyPosted ) {\r\n      return;\r\n    }\r\n    this._prefillsPartiallyPosted = true;\r\n    if ( !this.surveyData.partialResponseId ) {\r\n      return;\r\n    }\r\n    let surveyPartialUrl = Config.SURVEY_PARTIAL_RESPONSE.replace( \"{id}\", this.surveyData.partialResponseId );\r\n    surveyPartialUrl = surveyPartialUrl.replace( \"{complete}\", \"false\" );\r\n    surveyPartialUrl = surveyPartialUrl.replace( \"{tabletId}\", \"\" + this.randomNumber );\r\n    surveyPartialUrl = Config.API_URL + surveyPartialUrl;\r\n    ( window as any ).ccsdkDebug ? console.log( \"Posting Prefill Responses to Server\" ) : '';\r\n    ( window as any ).ccsdkDebug ? console.log( this.prefillResponses ) : '';\r\n\r\n    if ( !this.surveyData.partialResponseId ) {\r\n      // run successCB if there is one.\r\n      if ( successcb ) {\r\n        successcb();\r\n      }\r\n      return;\r\n    }\r\n    if ( typeof this.prefillResponses !== 'undefined' && this.prefillResponses.length > 0 ) {\r\n      RequestHelper.postWithHeaders( surveyPartialUrl, this.prefillResponses, {}, successcb, errorcb );\r\n    } else {\r\n      // console.log('No Prefill data');\r\n      return;\r\n    }\r\n  }\r\n\r\n  updatePrefillResponseById( id: any, resp: any ) {\r\n    for ( let response of this.prefillResponses ) {\r\n      if ( response.questionId == id ) {\r\n        response = resp;\r\n      }\r\n    }\r\n  }\r\n\r\n  getPrefillResponseById( id: any ) {\r\n    for ( let response of this.prefillResponses ) {\r\n      if ( response.questionId == id ) {\r\n        return response;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getQuestionById( id: any ) {\r\n    for ( let question of this.questions ) {\r\n      if ( question.id == id ) {\r\n        return question;\r\n      }\r\n    }\r\n  }\r\n\r\n  postPartialAnswer( index: any, response: any, complete = false, successcb, errorcb ) {\r\n    this.postPrefillPartialAnswer( complete, null, null );\r\n    // let data = new FormData();\r\n    //in case of file.\r\n    // let input = document.querySelector('input[type=\"file\"]') ;\r\n    // data.append('file', input.files[0]);\r\n\r\n    let question: any = this.questionsToDisplay[ index ];\r\n    if ( typeof question === 'undefined' ) {\r\n      //now?\r\n      // return (window as any).ccsdkDebug?console.log(\"No Partial Remaining\"):'';\r\n    }\r\n    let data: any = {\r\n      questionId: question.id,\r\n      questionText: question.text,\r\n      textInput: response.text,\r\n      numberInput: response.number\r\n    };\r\n    // if(this.isPartialAvailable == false) {\r\n    //   this.answers.push(data);\r\n    //   return;\r\n    // }\r\n    // (window as any).ccsdkDebug?console.log(\"Submitting for : \" + index):'';\r\n    let surveyPartialUrl = Config.SURVEY_PARTIAL_RESPONSE.replace( \"{id}\", this.surveyData.partialResponseId );\r\n    //if this is the last of displayed question\r\n    ( window as any ).ccsdkDebug ? console.log( \"partial response\", question.id == this.questionsToDisplay[ this.questionsToDisplay.length - 1 ].id ) : '';\r\n    // if (question.id == this.questionsToDisplay[this.questionsToDisplay.length - 1].id) {\r\n    //   surveyPartialUrl = surveyPartialUrl.replace(\"{complete}\", `${complete}`);\r\n    // } else {\r\n    surveyPartialUrl = surveyPartialUrl.replace( \"{complete}\", `${ complete }` );\r\n    // }\r\n    // surveyPartialUrl = surveyPartialUrl.replace(\"{tabletId}\", \"\" + this.randomNumber);\r\n    surveyPartialUrl = Config.API_URL + surveyPartialUrl;\r\n    //add partial answer to main answer\r\n    this.surveyAnswers[ question.id ] = data;\r\n\r\n    data = [ data ];\r\n\r\n    let onSurveyAnswerEvent = new CustomEvent( Constants.SURVEY_ANSWER_EVENT + \"-\" + this.surveyToken );\r\n    document.dispatchEvent( onSurveyAnswerEvent );\r\n\r\n    if ( !this.surveyData.partialResponseId ) {\r\n      // run success callback and return\r\n      if ( successcb ) {\r\n        successcb();\r\n      }\r\n      return;\r\n    }\r\n\r\n    if ( question.id == this.questionsToDisplay[ this.questionsToDisplay.length - 1 ].id ) {\r\n      //last question post moved to separate function\r\n      RequestHelper.postWithHeaders( surveyPartialUrl, data, {}, successcb, errorcb );\r\n    } else {\r\n      RequestHelper.postWithHeaders( surveyPartialUrl, data, {}, successcb, errorcb );\r\n    }\r\n\r\n  }\r\n\r\n  finalPost( successcb, errorcb ) {\r\n    //last question\r\n    let postSurveyFinalUrl = Config.POST_SURVEY_FINAL.replace( \"{tokenId}\", this.ccsdk.surveyToken );\r\n    postSurveyFinalUrl = Config.API_URL + postSurveyFinalUrl;\r\n    let answersAll = [];\r\n    // hack for partial flushing\r\n    let lastAnswer;\r\n\r\n    if ( Object.keys( this.surveyAnswers ).length == 0 ) {\r\n      return;\r\n    }\r\n    for ( let answer in this.surveyAnswers ) {\r\n      let response = this.surveyAnswers[ answer ];\r\n      if ( response && ( response.textInput !== null || response.numberInput !== null ) ) {\r\n        answersAll.push( response );\r\n        lastAnswer = response;\r\n      }\r\n    }\r\n    for ( let answer in this.prefillResponses ) {\r\n      answersAll.push( this.prefillResponses[ answer ] );\r\n    }\r\n    let timeAtPost = new Date().getTime();\r\n    let finalData = {\r\n      id: this.ccsdk.surveyToken,\r\n      user: this.ccsdk.config.username,\r\n      locationId: null,\r\n      responses: answersAll,\r\n      nps: 0,\r\n      surveyClient: Constants.SURVEY_CLIENT,\r\n      responseDuration: Math.floor( ( timeAtPost - this.ccsdk.surveyStartTime.getTime() ) / 1000 )\r\n    };\r\n    if ( lastAnswer ) {\r\n      let _lastAnswer = {\r\n        text: lastAnswer.textInput,\r\n        number: lastAnswer.numberInput\r\n      }\r\n      this.postPartialAnswer( this.questionsToDisplay.length - 1, _lastAnswer, true, null, null )\r\n    }\r\n\r\n    if ( finalData.responses && finalData.responses.length > 0 ) {\r\n      RequestHelper.postWithHeaders( postSurveyFinalUrl, finalData, {}, successcb, errorcb );\r\n    } else {\r\n      successcb();\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   *\r\n   * check if conditions are satsified which are required to display question?\r\n   *\r\n   * @param {any} question\r\n   * @memberof Survey\r\n   */\r\n  checkConditionals( question: any ) {\r\n    return true;\r\n  }\r\n\r\n  compileTemplate( question: any ) {\r\n    let self: SurveyHandler = this;\r\n    //get question type\r\n    let questionTemplate;\r\n    // (window as any).ccsdkDebug?console.log(question):'';\r\n    if ( question != 'undefined' ) {\r\n      switch ( question.displayType ) {\r\n        case \"Slider\":\r\n          let displayLegend = question.displayLegend;\r\n          let opt: any = question.multiSelect[ 0 ].split( \"-\" );\r\n          let optMin: any = opt[ 0 ].split( \";\" );\r\n          let optMax: any = opt[ 1 ].split( \";\" );\r\n          //get text question template and compile it.\r\n          questionTemplate = templates.question_slider;\r\n          questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n          questionTemplate = questionTemplate.replace( /{{min}}/g, optMin[ 0 ] );\r\n          if ( displayLegend[ 0 ] ) {\r\n            questionTemplate = questionTemplate.replace( /{{minLabel}}/g, displayLegend[ 0 ] + '-' );\r\n          } else {\r\n            questionTemplate = questionTemplate.replace( /{{minLabel}}/g, \"\" );\r\n          }\r\n          questionTemplate = questionTemplate.replace( /{{max}}/g, optMax[ 0 ] );\r\n          if ( displayLegend[ 1 ] ) {\r\n            questionTemplate = questionTemplate.replace( /{{maxLabel}}/g, displayLegend[ 1 ] + \"-\" );\r\n          } else {\r\n            questionTemplate = questionTemplate.replace( /{{maxLabel}}/g, \"\" );\r\n          }\r\n          questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n          questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n          questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n          break;\r\n        case \"Scale\":\r\n          //get text question template and compile it.\r\n          ( window as any ).ccsdkDebug ? console.log( question.questionTags ) : '';\r\n          if ( question.questionTags.includes( \"NPS\" ) ) {\r\n            questionTemplate = templates.question_nps;\r\n            questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n            questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n            questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n            questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n          } else if ( question.questionTags.includes( \"CSAT\" ) ) {\r\n            if ( question.questionTags.includes( \"csat_satisfaction_5\" ) ) {\r\n              questionTemplate = templates.question_csat_satisfaction_5;\r\n            } else if ( question.questionTags.includes( \"csat_agreement_5\" ) ) {\r\n              questionTemplate = templates.question_csat_agreement_5;\r\n            }\r\n            questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n            questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n            questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n            questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n          } else {\r\n            let tileColor = '';\r\n            let style = '';\r\n            if ( question.attributes != null && question.attributes.scaleColor && question.attributes.scaleColor.length > 0 ) {\r\n              if ( question.attributes.scaleColor !== 'Gradient' ) {\r\n                tileColor = question.attributes.scaleColor;\r\n              } else {\r\n                tileColor = \"#02BAEE\"\r\n              }\r\n            } else if ( question.presentationMode != null && question.presentationMode.indexOf( \"Color\" ) !== -1 ) {\r\n              tileColor = question.presentationMode.split( ':' )[ 1 ];\r\n            }\r\n            if ( tileColor.length > 0 ) {\r\n              let tileColorDark = this.util.shadeBlendConvert( -0.3, tileColor, undefined );\r\n              style = '\\\r\n                <style>\\\r\n                #id'+ question.id + ' .option-number-item.option-scale{\\\r\n                  background-color : '+ tileColor + ';\\\r\n                }\\\r\n                #id'+ question.id + ' .option-number-item.option-scale:hover,\\\r\n                #id'+ question.id + ' .option-number-item.option-scale.selected{\\\r\n                  background-color : '+ tileColorDark + ';\\\r\n                }\\\r\n                </style>\\\r\n              ';\r\n            }\r\n\r\n            questionTemplate = templates.question_scale;\r\n            questionTemplate = questionTemplate.replace( /{{style}}/g, style );\r\n            questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n            questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n            questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n            questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n            //construct NPS scale here....\r\n            let startRange = 0.0;\r\n            let endRange = 10.0;\r\n            let options = \"\";\r\n            let startRangeLabel = \"\";\r\n            // let startRangeLabel = \"\";\r\n            // let endRangeLabel = \"Very likely\";\r\n            let endRangeLabel = \"\";\r\n\r\n            if ( question.questionTags.includes( \"ces_agree_5\" ) || question.questionTags.includes( \"ces_agree_7\" ) ) {\r\n\r\n              startRangeLabel = \"Strongly Disagree\";\r\n              endRangeLabel = \"Strongly Agree\";\r\n            }\r\n            else if ( question.questionTags.includes( \"ces_effort_5\" ) || question.questionTags.includes( \"ces_effort_7\" ) ) {\r\n              startRangeLabel = \"High Effort\";\r\n              endRangeLabel = \"Low Effort\";\r\n            }\r\n            else if( question.anchorMetricName != null ) {\r\n              let metricName = question.anchorMetricName;\r\n              let customMetric = this.surveyData.customMetrics[metricName];\r\n              startRangeLabel = customMetric.optionCategories[0].label;\r\n              endRangeLabel = customMetric.optionCategories[2].label; \r\n            }\r\n            \r\n            let displayLegend = LanguageTextFilter.translateDisplayLegend( this, question );\r\n            if ( displayLegend ) {\r\n              if ( displayLegend.length > 0 ) {\r\n                startRangeLabel = displayLegend[ 0 ] ? displayLegend[ 0 ] : null;\r\n                endRangeLabel = displayLegend[ 1 ] ? displayLegend[ 1 ] : null;\r\n              }\r\n            }\r\n            if ( question.multiSelect.length > 0 ) {\r\n              startRange = parseFloat( question.multiSelect[ 0 ].split( \"-\" )[ 0 ] );\r\n              if ( startRangeLabel == null ) {\r\n                startRangeLabel = question.multiSelect[ 0 ].split( \"-\" )[ 0 ].split( \";\" )[ 1 ];\r\n              }\r\n              endRange = parseFloat( question.multiSelect[ 0 ].split( \"-\" )[ 1 ] );\r\n              if ( endRangeLabel == null ) {\r\n                endRangeLabel = question.multiSelect[ 0 ].split( \"-\" )[ 1 ].split( \";\" )[ 1 ];\r\n              }\r\n            }\r\n            startRangeLabel = startRangeLabel == null ? \"\" : startRangeLabel;\r\n            endRangeLabel = endRangeLabel == null ? \"\" : endRangeLabel;\r\n            let mobileImageUrl = '';\r\n            let imageVisibility010 = 'hide';\r\n            let imageVisibility110 = 'hide';\r\n            let scaleVisibility = 'show-inline';\r\n            let scaleImageContainer = '';\r\n            if ( startRange == 0 && endRange == 10 ) {\r\n              mobileImageUrl = \"https://cx.getcloudcherry.com/microsurvey-assets/scale-0-10-neutral.svg\";\r\n              imageVisibility010 = 'show';\r\n              imageVisibility110 = 'hide';\r\n              scaleVisibility = 'hide';\r\n              scaleImageContainer = 'scale-image-container';\r\n            } else if ( startRange == 1 && endRange == 10 ) {\r\n              mobileImageUrl = \"https://cx.getcloudcherry.com/microsurvey-assets/scale-1-10-neutral.svg\";\r\n              imageVisibility010 = 'hide';\r\n              imageVisibility110 = 'show';\r\n              scaleVisibility = 'hide';\r\n              scaleImageContainer = 'scale-image-container';\r\n            }\r\n            // console.log('scale', startRange, endRange);\r\n            let divider: any = 1;\r\n            if ( endRange < 11 ) {\r\n            } else {\r\n              divider = ( endRange - startRange ) / 10.0;\r\n            }\r\n            let initial = 0.0;\r\n            let optionStyle = '';\r\n            let legendDimension;\r\n            if ( ( window as any ).isMobile ) {\r\n              if ( endRange < 11 ) {\r\n                let parentContainer = window.innerWidth - 40;\r\n                let dimension = ( ( 100 / ( endRange - startRange + 1 ) ) - .5 ) * parentContainer / 100;\r\n                dimension = dimension > 48 ? 48 : dimension;\r\n                legendDimension = ( endRange - startRange + 1 ) * ( dimension + 1 );\r\n                optionStyle = `width:${ dimension }px;height:${ dimension }px;padding:${ ( dimension - 15 ) / 2 }px;`;\r\n              }\r\n            } else {\r\n              imageVisibility010 = 'hide';\r\n              imageVisibility110 = 'hide';\r\n              scaleVisibility = 'show-inline';\r\n              scaleImageContainer = '';\r\n              mobileImageUrl = \"\";\r\n            }\r\n\r\n            if ( question.questionTags.includes( \"CES\" ) ) {\r\n              for ( let initial = startRange; initial <= endRange; initial += divider ) {\r\n                options += '<span data-rating=\"' + initial + '\" class=\"option-number-item option-' + endRange + '-scale-' + initial + ' ' + scaleVisibility + '\" style=\"' + optionStyle + '\">' + initial + '</span>';\r\n              }\r\n            }\r\n            else if(question.anchorMetricName != null) {  \r\n              let metricName = question.anchorMetricName;\r\n              let customMetric = this.surveyData.customMetrics[metricName];\r\n              for(var iterator in customMetric.optionCategories) {  \r\n                let startRange = parseFloat(customMetric.optionCategories[iterator].categoryRange.split(\",\")[0]);\r\n                let endRange = parseFloat(customMetric.optionCategories[iterator].categoryRange.split(\",\")[1]);\r\n                \r\n                for (let initial = startRange; initial <= endRange; initial += divider) {             \r\n                  options += '<span data-rating=\"' + initial + '\" class=\"option-number-item option-scale\"' + scaleVisibility + '\" style=\"background:' + customMetric.optionCategories[iterator].color + '\">' + initial + '</span>';\r\n                }\r\n              }\r\n            }\r\n            else {\r\n              for ( let initial = startRange; initial <= endRange; initial += divider ) {\r\n                options += '<span data-rating=\"' + initial + '\" class=\"option-number-item option-scale ' + scaleVisibility + '\" style=\"' + optionStyle + '\">' + initial + '</span>';\r\n              }\r\n            }\r\n\r\n            if ( ( endRange - startRange + 1 ) <= 11 ) {\r\n              var optionLeftExtraClass = 'option-left-rating-text-small-container';\r\n              var optionRightExtraClass = 'option-right-rating-text-small-container';\r\n              var optionMaxWidth = ( ( ( endRange - startRange + 1 ) * 38 / 2 ) - 5 ) + 'px';\r\n              // console.log(optionMaxWidth);\r\n            }\r\n            questionTemplate = questionTemplate.replace( \"{{legendStyle}}\", `style=\"position:relative;width:${ mobileImageUrl ? '100%' : legendDimension + 'px' };min-height: 20px;\"` )\r\n            questionTemplate = questionTemplate.replace( /\\{\\{radialLegend\\}\\}/g, mobileImageUrl ? 'radial-legend' : 'unknown-class' );\r\n            questionTemplate = questionTemplate.replace( \"{{optionsRange}}\", options );\r\n            // questionTemplate = questionTemplate.replace(\"{{maxWidth}}\", optionMaxWidth);\r\n            questionTemplate = questionTemplate.replace( /maxWidth/g, mobileImageUrl ? '35%;width:35%' : optionMaxWidth );\r\n            questionTemplate = questionTemplate.replace( /{{optionLeftExtraClass}}/g, optionLeftExtraClass );\r\n            questionTemplate = questionTemplate.replace( /{{optionRightExtraClass}}/g, optionRightExtraClass );\r\n            questionTemplate = questionTemplate.replace( \"{{leftLabel}}\", startRangeLabel );\r\n            questionTemplate = questionTemplate.replace( \"{{rightLabel}}\", endRangeLabel );\r\n            questionTemplate = questionTemplate.replace( /{{mobileImageUrl}}/g, '\"' + mobileImageUrl + '\"' );\r\n            questionTemplate = questionTemplate.replace( \"{{imageVisibility010}}\", imageVisibility010 );\r\n            questionTemplate = questionTemplate.replace( \"{{imageVisibility110}}\", imageVisibility110 );\r\n            questionTemplate = questionTemplate.replace( \"{{scaleImageContainer}}\", scaleImageContainer );\r\n          }\r\n\r\n          break;\r\n        case \"Text\":\r\n          //get text question template and compile it.\r\n          questionTemplate = templates.question_text;\r\n          questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n          questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n          questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n          questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n          questionTemplate = questionTemplate.replace( \"{{validationHint}}\", question.validationHint ? question.validationHint : \"\" );\r\n\r\n          break;\r\n        case \"Number\":\r\n          //get text question template and compile it.\r\n          questionTemplate = templates.question_number;\r\n          questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n          questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n          questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n          questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n          questionTemplate = questionTemplate.replace( \"{{validationHint}}\", question.validationHint ? question.validationHint : \"\" );\r\n\r\n          break;\r\n        case \"MultilineText\":\r\n          //get text question template and compile it.\r\n          questionTemplate = templates.question_multi_line_text;\r\n          questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n          questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n          questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n          questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n          questionTemplate = questionTemplate.replace( \"{{characterLimit}}\", question.attributes && question.attributes.characterLimit ? question.attributes.characterLimit : \"\" );\r\n          questionTemplate = questionTemplate.replace( \"{{validationHint}}\", question.validationHint ? question.validationHint : \"\" );\r\n\r\n          break;\r\n        case \"MultiSelect\":\r\n          let acTemplate: string;\r\n          let multiSelect1;\r\n          //get text question template and compile it.\r\n          multiSelect1 = Array.prototype.slice.call( LanguageTextFilter.translateMultiSelect( this, question ) );\r\n          if ( question.presentationMode == 'Invert' ) {\r\n            // console.log('selection option before reverse', multiSelect1);\r\n            multiSelect1.reverse();\r\n            // console.log('selection option after reverse', multiSelect1);\r\n            // console.log('selection api option', question.multiSelect);\r\n          }\r\n          //get text question template and compile it.\r\n          if ( ( ( question.displayStyle == 'radiobutton/checkbox' ) || ( question.displayStyle == 'icon' ) ) && ( multiSelect1.length < 6 ) ) {\r\n            // (window as any).ccsdkDebug?console.log(question.displayStyle):'';\r\n            let checkOptionContainsImage: boolean = self.util.checkOptionContainsImage( multiSelect1 );\r\n            // (window as any).ccsdkDebug?console.log('select radio image',checkOptionContainsImage):'';\r\n            if ( checkOptionContainsImage\r\n              && (\r\n                ( ( multiSelect1.length > 0 ) && multiSelect1[ 0 ].indexOf( \"Male\" ) !== -1 )\r\n                || ( ( multiSelect1.length > 0 ) && multiSelect1[ 0 ].indexOf( \"Yes\" ) !== -1 )\r\n                || ( ( multiSelect1.length > 1 ) && multiSelect1[ 1 ].indexOf( \"Yes\" ) !== -1 ) )\r\n\r\n            ) {\r\n              // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n              acTemplate = templates.question_checkbox;\r\n              let options2 = self.util.generateCheckboxImageOptions( question.multiSelect, multiSelect1, question.id );\r\n              // (window as any).ccsdkDebug?console.log(options2):'';\r\n              questionTemplate = acTemplate;\r\n              questionTemplate = questionTemplate.replace( /{{options}}/g, options2 );\r\n              acTemplate = questionTemplate;\r\n            } else if ( checkOptionContainsImage ) {\r\n              // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n              acTemplate = templates.question_checkbox;\r\n              let options2 = self.util.generateCheckboxIgnoreImageOptions( question.multiSelect, multiSelect1, question.id );\r\n              // (window as any).ccsdkDebug?console.log(options2):'';\r\n              questionTemplate = acTemplate;\r\n              questionTemplate = questionTemplate.replace( /{{options}}/g, options2 );\r\n              acTemplate = questionTemplate;\r\n            } else {\r\n              let options3: string = self.util.generateCheckboxOptions( question.multiSelect, multiSelect1, question.id );\r\n              // (window as any).ccsdkDebug?console.log(options2):'';\r\n              acTemplate = templates.question_checkbox;\r\n              questionTemplate = acTemplate.replace( /{{options}}/g, options3 );\r\n              acTemplate = questionTemplate;\r\n            }\r\n          } else {\r\n            // (window as any).ccsdkDebug?console.log('select type 3'):'';\r\n            acTemplate = templates.question_multi_select;\r\n\r\n            // acTemplate = templates.question_select;\r\n            let options3 = self.util.generateSelectOptions( question.multiSelect, multiSelect1 );\r\n\r\n            if ( self.ccsdk.config.language.indexOf( 'Default' ) === -1 ) {\r\n              if (\r\n                typeof question.translated !== 'undefined'\r\n                && question.translated != null\r\n                && typeof question.translated[ self.ccsdk.config.language ] !== 'undefined'\r\n                && question.translated[ self.ccsdk.config.language ].multiSelect !== 'undefined'\r\n                && question.translated[ self.ccsdk.config.language ].multiSelect.length > 0\r\n              ) {\r\n                multiSelect1 = Array.prototype.slice.call( question.translated[ self.ccsdk.config.language ].multiSelect );\r\n                if ( question.presentationMode == 'Invert' ) {\r\n                  multiSelect1.reverse();\r\n                }\r\n                options3 = self.util.generateSelectOptions( question.multiSelect, multiSelect1 );\r\n              }\r\n            }\r\n            // questionTemplate = acTemplate;\r\n            self.ccsdk.debug ? console.log( options3 ) : '';\r\n            questionTemplate = acTemplate.replace( /{{options}}/g, options3 );\r\n            acTemplate = questionTemplate;\r\n\r\n          }\r\n          questionTemplate = acTemplate;\r\n          questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n          questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n          questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n          questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n\r\n          break;\r\n        case \"Select\":\r\n          let acTemplate1: string;\r\n          let acTemplate2: string;\r\n          let options1: string;\r\n          let options2: string;\r\n          let multiSelect;\r\n          //get text question template and compile it.\r\n          multiSelect = Array.prototype.slice.call( LanguageTextFilter.translateMultiSelect( this, question ) );\r\n          let invertedMultiSelect;\r\n          if ( question.presentationMode == 'Invert' ) {\r\n            // console.log('selection option before reverse', multiSelect);\r\n            invertedMultiSelect = question.multiSelect ? question.multiSelect.slice().reverse() : [];\r\n            multiSelect.reverse();\r\n            // console.log('selection option after reverse', multiSelect);\r\n            // console.log('selection api option', question.multiSelect);\r\n          } else {\r\n            invertedMultiSelect = question.multiSelect;\r\n          }\r\n          if ( ( question.displayStyle == 'radiobutton/checkbox' ) && ( multiSelect.length < 6 ) ) {\r\n            // if(question.displayStyle == 'radiobutton/checkbox'){\r\n            // (window as any).ccsdkDebug?console.log('select type 1'):'';\r\n            // (window as any).ccsdkDebug?console.log(question.displayStyle):'';\r\n            // acTemplate1 = templates.question_radio;\r\n            // questionTemplate = acTemplate1;\r\n\r\n            let checkOptionContainsImage: boolean = self.util.checkOptionContainsImage( multiSelect );\r\n            ( window as any ).ccsdkDebug ? console.log( 'select radio image', checkOptionContainsImage ) : '';\r\n            if ( checkOptionContainsImage\r\n              && (\r\n                ( ( multiSelect.length > 0 ) && multiSelect[ 0 ].indexOf( \"Male\" ) !== -1 )\r\n                || ( ( multiSelect.length > 0 ) && multiSelect[ 0 ].indexOf( \"Yes\" ) !== -1 )\r\n                || ( ( multiSelect.length > 1 ) && multiSelect[ 1 ].indexOf( \"Yes\" ) !== -1 ) )\r\n            ) {\r\n              // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n              acTemplate2 = templates.question_radio_image;\r\n\r\n              options2 = self.util.generateRadioImageOptions( invertedMultiSelect, multiSelect, question.id );\r\n              ( window as any ).ccsdkDebug ? console.log( { options2 } ) : '';\r\n              questionTemplate = acTemplate2;\r\n              questionTemplate = questionTemplate.replace( /{{options}}/g, options2 );\r\n            } else if ( checkOptionContainsImage ) {\r\n              // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n              acTemplate2 = templates.question_radio_image;\r\n              options2 = self.util.generateRadioIgnoreImageOptions( invertedMultiSelect, multiSelect, question.id );\r\n              // (window as any).ccsdkDebug?console.log(options2):'';\r\n              questionTemplate = acTemplate2;\r\n              questionTemplate = questionTemplate.replace( /{{options}}/g, options2 );\r\n            } else {\r\n              acTemplate1 = templates.question_radio;\r\n              questionTemplate = acTemplate1;\r\n\r\n              options1 = self.util.generateRadioOptions( invertedMultiSelect, multiSelect, question.id );\r\n              questionTemplate = questionTemplate.replace( \"{{options}}\", options1 );\r\n            }\r\n          } else if ( ( question.displayStyle == 'icon' ) && ( multiSelect.length < 6 ) ) {\r\n            acTemplate1 = templates.question_radio;\r\n            questionTemplate = acTemplate1;\r\n            let invertedMultiSelect;\r\n            if ( question.presentationMode == 'Invert' ) {\r\n              invertedMultiSelect = question.multiSelect ? question.multiSelect.slice().reverse() : [];\r\n            } else {\r\n              invertedMultiSelect = question.multiSelect;\r\n            }\r\n            options1 = self.util.generateRadioOptions( invertedMultiSelect, multiSelect, question.id );\r\n            questionTemplate = questionTemplate.replace( \"{{options}}\", options1 );\r\n\r\n          } else {\r\n\r\n            ( window as any ).ccsdkDebug ? console.log( 'select type 3' ) : '';\r\n            acTemplate1 = templates.question_select;\r\n            options1 = self.util.generateSelectOptions( invertedMultiSelect, multiSelect );\r\n            if ( self.ccsdk.config.language.indexOf( 'Default' ) === -1 ) {\r\n              if ( typeof question.translated !== 'undefined'\r\n                && question.translated != null\r\n                && typeof question.translated[ self.ccsdk.config.language ] !== 'undefined'\r\n                && question.translated[ self.ccsdk.config.language ].multiSelect !== 'undefined'\r\n                && question.translated[ self.ccsdk.config.language ].multiSelect.length > 0\r\n              ) {\r\n                multiSelect = Array.prototype.slice.call( question.translated[ self.ccsdk.config.language ].multiSelect );\r\n                if ( question.presentationMode == 'Invert' ) {\r\n                  multiSelect.reverse();\r\n                }\r\n                options1 = self.util.generateSelectOptions( invertedMultiSelect, multiSelect );\r\n              }\r\n            }\r\n            questionTemplate = acTemplate1;\r\n            questionTemplate = questionTemplate.replace( \"{{options}}\", options1 );\r\n\r\n\r\n          }\r\n          // console.log( questionTemplate );\r\n          questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n          questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n          questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n          questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n          // (window as any).ccsdkDebug?console.log(questionTemplate):'';\r\n\r\n          break;\r\n        case \"Smile-5\":\r\n          //get text question template and compile it.\r\n          if ( question.presentationMode == \"Invert\" ) {\r\n            questionTemplate = templates.question_smile_5_inverted;\r\n\r\n          } else {\r\n\r\n            questionTemplate = templates.question_smile_5;\r\n          }\r\n          // let startRangeLabel = \"Very unlikely\";\r\n          // let endRangeLabel = \"Very likely\";\r\n          let startRangeLabel = \"\";\r\n          let endRangeLabel = \"\";\r\n          let displayLegend2 = LanguageTextFilter.translateDisplayLegend( this, question );\r\n\r\n          if ( displayLegend2 ) {\r\n            if ( displayLegend2.length > 0 ) {\r\n              startRangeLabel = displayLegend2[ 0 ] ? displayLegend2[ 0 ] : null;\r\n              endRangeLabel = displayLegend2[ 1 ] ? displayLegend2[ 1 ] : null;\r\n            }\r\n          }\r\n          startRangeLabel = startRangeLabel == null ? \"\" : startRangeLabel;\r\n          endRangeLabel = endRangeLabel == null ? \"\" : endRangeLabel;\r\n          questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n          questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n          questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n          questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n          questionTemplate = questionTemplate.replace( \"{{leftLabel}}\", startRangeLabel );\r\n          questionTemplate = questionTemplate.replace( \"{{rightLabel}}\", endRangeLabel );\r\n          break;\r\n        case \"Star-5\":\r\n          //get text question template and compile it.\r\n          let startRangeLabel1 = \"\";\r\n          let endRangeLabel1 = \"\";\r\n          let displayLegend3 = LanguageTextFilter.translateDisplayLegend( this, question );\r\n\r\n          if ( displayLegend3 ) {\r\n            if ( displayLegend3.length > 0 ) {\r\n              startRangeLabel1 = displayLegend3[ 0 ] ? displayLegend3[ 0 ] : null;\r\n              endRangeLabel1 = displayLegend3[ 1 ] ? displayLegend3[ 1 ] : null;\r\n            }\r\n          }\r\n          startRangeLabel1 = startRangeLabel1 == null ? \"\" : startRangeLabel1;\r\n          endRangeLabel1 = endRangeLabel1 == null ? \"\" : endRangeLabel1;\r\n          questionTemplate = templates.question_star_5;\r\n          questionTemplate = questionTemplate.replace( \"{{question}}\", ConditionalTextFilter.filterText( this, question ) );\r\n          questionTemplate = questionTemplate.replace( /{{questionId}}/g, \"id\" + question.id );\r\n          questionTemplate = questionTemplate.replace( \"{{isRequired}}\", question.isRequired ? \"true\" : \"false\" );\r\n          questionTemplate = questionTemplate.replace( \"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\" );\r\n          questionTemplate = questionTemplate.replace( \"{{leftLabel}}\", startRangeLabel1 );\r\n          questionTemplate = questionTemplate.replace( \"{{rightLabel}}\", endRangeLabel1 );\r\n          break;\r\n      }\r\n    }\r\n    return questionTemplate;\r\n  }\r\n\r\n  questionCompare( a: any, b: any ) {\r\n    return a.sequence - b.sequence;\r\n  }\r\n\r\n  getAnswerTypeFromDisplayType( displayType: string ) {\r\n    // console.log('question type',displayType);\r\n    let type: string;\r\n    switch ( displayType ) {\r\n      case \"Slider\":\r\n        type = \"number\";\r\n        break;\r\n      case \"Scale\":\r\n        type = \"number\";\r\n        break;\r\n      case \"Text\":\r\n        type = \"text\";\r\n        break;\r\n      case \"Number\":\r\n        type = \"number\";\r\n        break;\r\n      case \"MultilineText\":\r\n        type = \"text\";\r\n        break;\r\n      case \"MultiSelect\":\r\n        type = \"text\";\r\n        break;\r\n      case \"Select\":\r\n        type = \"text\";\r\n        break;\r\n      case \"Dropdown\":\r\n        type = \"text\";\r\n        break;\r\n      case \"Smile-5\":\r\n        type = \"number\";\r\n        break;\r\n      case \"Star-5\":\r\n        type = \"number\";\r\n        break;\r\n      case \"Date\":\r\n        type = \"number\";\r\n        break;\r\n      default:\r\n        type = \"text\";\r\n        break;\r\n    }\r\n\r\n    return type;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * filterQuestions - filters questions so that we don't display the one which satisifes any of the following condition\r\n   *  isRetired = true\r\n   *  statffFill = true\r\n   *  apiFill = true\r\n   *  preFill = true\r\n   *\r\n   * @param {any} question\r\n   * @returns\r\n   * @memberof Survey\r\n   */\r\n  filterQuestions() {\r\n    let self = this;\r\n    for ( let question of this.questions ) {\r\n      if ( !question.isRetired ) {\r\n        //filter out prefill question only if it is filled?.\r\n        // if(!this.isQuestionFilled(question)){\r\n        if ( this.isPrefillTags( question ) ) {\r\n          self.ccsdk.debug ? console.log( 'prefillTags', this.prefillResponses ) : '';\r\n          continue;\r\n        }\r\n        if ( this.isPrefillNote( question ) ) {\r\n          self.ccsdk.debug ? console.log( this.prefillResponses ) : '';\r\n          continue;\r\n        }\r\n        if ( this.isPrefillDirect( question ) ) {\r\n          self.ccsdk.debug ? console.log( this.prefillResponses ) : '';\r\n          continue;\r\n        }\r\n        if ( !( this.isPrefillQuestion( question ) ) ) {\r\n          if (\r\n            question.conditionalFilter === null ||\r\n            ( question.conditionalFilter != null &&\r\n              ( question.conditionalFilter.filterquestions == null\r\n                || question.conditionalFilter.filterquestions.length == 0 ) )\r\n          ) {\r\n            //check supported display types\r\n            let supportedDisplayTypes = \"Slider, Scale, Text, Number, MultilineText, MultiSelect, Smile-5, Star-5\";\r\n            if ( supportedDisplayTypes.indexOf( question.displayType ) > -1 ) {\r\n              this.questionsToDisplay.push( question );\r\n            }\r\n          } else {\r\n            //if conditions full filled, fill it in questionsToDisplay\r\n            if ( ConditionalFlowFilter.filterQuestion( this, question ) ) {\r\n              //auto does that\r\n            } else {\r\n              this.conditionalQuestions.push( question );\r\n            }\r\n          }\r\n        } else {\r\n          this.fillPrefillWithTags( question );\r\n          this.fillPrefillWithNote( question );\r\n          ConditionalFlowFilter.filterQuestion( this, question );\r\n        }\r\n        // }\r\n      }\r\n    }\r\n    //re condition questions.\r\n    for ( let question of this.questions ) {\r\n      // console.log(this.questionsToDisplay);\r\n      ConditionalFlowFilter.filterQuestion( this, question );\r\n    }\r\n\r\n    // console.log(this.conditionalQuestions);\r\n  }\r\n\r\n  isPrefillTags( question: any ) {\r\n    if ( typeof question.questionTags !== 'undefined' && question.questionTags && question.questionTags.length > 0 ) {\r\n      for ( let tag of question.questionTags ) {\r\n        switch ( tag.toLowerCase() ) {\r\n          case \"screensize\":\r\n            //add size to prefill array\r\n            this.fillPrefillQuestion( question.id, \"Width:\" + window.innerWidth + \"px / Height:\" + window.innerHeight + \"px\", \"text\" );\r\n            return true;\r\n          default:\r\n            if ( typeof this.prefillWithTags[ tag.toLowerCase() ] != 'undefined' ) {\r\n              let type = this.getAnswerTypeFromDisplayType( question.displayType );\r\n              this.fillPrefillQuestion( question.id, this.prefillWithTags[ tag.toLowerCase() ], type );\r\n              return true;\r\n            }\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  isPrefillNote( question: any ) {\r\n    if ( typeof question.note !== 'undefined'\r\n      && question.note != null\r\n      && question.note.length > 0\r\n      && this.prefillWithNote[ question.note.toLowerCase() ]\r\n    ) {\r\n      let type = this.getAnswerTypeFromDisplayType( question.displayType );\r\n      this.fillPrefillQuestion( question.id, this.prefillWithNote[ question.note.toLowerCase() ], type );\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  isPrefillDirect( question: any ) {\r\n    if ( typeof question !== 'undefined'\r\n      && this.prefillDirect[ question.id ]\r\n    ) {\r\n      let type = this.getAnswerTypeFromDisplayType( question.displayType );\r\n      this.fillPrefillQuestion( question.id, this.prefillDirect[ question.id ], type );\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  fillPrefillWithTags( question: any ) {\r\n    ( window as any ).ccsdkDebug ? console.log( 'fillprefillwithtags', this.prefillWithTags ) : '';\r\n    if ( typeof question.questionTags !== 'undefined' && question.questionTags.length > 0 ) {\r\n      for ( let tag of question.questionTags ) {\r\n        ( window as any ).ccsdkDebug ? console.log( 'fillprefillwithtags', tag ) : '';\r\n        if ( typeof this.prefillWithTags[ tag.toLowerCase() ] !== 'undefined' ) {\r\n          ( window as any ).ccsdkDebug ? console.log( 'prefil ', tag.toLowerCase(), this.prefillWithTags[ tag.toLowerCase() ], this.prefillWithTags ) : '';\r\n\r\n          let type = this.getAnswerTypeFromDisplayType( question.displayType );\r\n          this.fillPrefillQuestion( question.id, this.prefillWithTags[ tag.toLowerCase() ], type );\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  fillPrefillWithNote( question: any ) {\r\n    if ( typeof question.note !== 'undefined' && question.note != null && question.note.length > 0 ) {\r\n      if ( typeof this.prefillWithNote[ question.note.toLowerCase() ] !== 'undefined' ) {\r\n        let type = this.getAnswerTypeFromDisplayType( question.displayType );\r\n        this.fillPrefillQuestion( question.id, this.prefillWithNote[ question.note.toLowerCase() ], type );\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n  getConditionalSurveyQuestions(): any {\r\n    return this.conditionalQuestions;\r\n  }\r\n\r\n  isPrefillQuestion( question: any ) {\r\n    if ( question.apiFill == true ) {\r\n      return true;\r\n    }\r\n    if ( question.staffFill == true ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  isQuestionFilled( question: any ) {\r\n    for ( let response of this.prefillResponses ) {\r\n      if ( response.questionId == question.questionId ) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  removePrevListener( id: string ): boolean {\r\n    for ( let listener of this.domListeners ) {\r\n      if ( listener.id == id ) {\r\n        let index = this.domListeners.indexOf( listener );\r\n        ( window as any ).ccsdkDebug ? console.log( \"removing listener\", id ) : '';\r\n        ( window as any ).ccsdkDebug ? console.log( \"removing listener index\", index ) : '';\r\n        this.util.removeListener( document.querySelectorAll( \"body\" )[ 0 ], listener.type, listener.internalHandler );\r\n        if ( index > -1 ) {\r\n          this.domListeners.splice( index, 1 );\r\n        }\r\n        ( window as any ).ccsdkDebug ? console.log( this.domListeners ) : '';\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  destroySurvey() {\r\n    let self: SurveyHandler = this;\r\n    document.addEventListener( 'ccclose', this.destroySurveyCb );\r\n  }\r\n\r\n  destroy() {\r\n    let surveyContainer = this.ccsdk.dom.getSurveyContainer( this.surveyToken );\r\n    let welcomeContainer = this.ccsdk.dom.getWelcomeContainer( this.surveyToken );\r\n    if ( typeof surveyContainer != 'undefined' ) {\r\n      this.util.remove( surveyContainer );\r\n    }\r\n    if ( typeof welcomeContainer != 'undefined' ) {\r\n      this.util.remove( welcomeContainer );\r\n    }\r\n    document.removeEventListener( 'ccclose', this.destroySurveyCb );\r\n    document.removeEventListener( 'ccdone', this.displayThankYouCb );\r\n    document.removeEventListener( 'q-answered', this.acceptAnswersCb );\r\n    ( window as any ).globalSurveyRunning = false;\r\n    // let bodyElement = <HTMLElement>document.\r\n    //   getElementsByTagName( \"body\" )[ 0 ];\r\n    // this.util.removeClass( bodyElement, \"blurr\" );\r\n\r\n  }\r\n}\r\n\r\nexport { SurveyHandler };\r\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/rtl-css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./main.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../node_modules/rtl-css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./main.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../node_modules/rtl-css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./main.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../node_modules/rtl-css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, typeof document !== 'undefined' && document.getElementsByTagName('html')[0].getAttribute('dir') === 'rtl' ? \".cc-sdk ul{padding-right:0;list-style-type:none;margin:0}.cc-sdk a,.cc-sdk a:focus,.cc-sdk a:hover{text-decoration:none;color:inherit}.cc-sdk *,.cc-sdk :after,.cc-sdk :before{box-sizing:border-box}.cc-sdk p{color:inherit;margin:0}.cc-sdk map area{outline:0;cursor:pointer}.cc-sdk map area.selected{outline:0;outline-color:#0a2135;outline-width:0;outline-style:solid}.cc-sdk map area:hover{outline:1}.cc-sdk.cc-popup-container{background:#fff;box-shadow:0 0 4px 5px rgba(0,0,0,.05);font-family:open sans,sans-serif;position:fixed;text-align:center;max-width:500px;max-height:500px;z-index:1111}@media (min-width:768px){.cc-sdk.cc-popup-container{padding:10px}}.cc-sdk.cc-popup-container.bottom{margin-bottom:9px}.cc-sdk.cc-popup-container.top{margin-top:9px}.cc-sdk #cc-thankyou-container .cc-question-container__text p{word-break:break-word}.cc-sdk #cc-thankyou-container .cc-question-container__text,.cc-sdk #cc-thankyou-container .cc-question-container__text p{width:400px;max-width:none;font-size:17px;color:#424242}.cc-sdk .cc-message-box{position:relative;z-index:11}.cc-sdk .cc-message-box__text{color:#424242;font-size:14px;font-weight:600;margin:0;padding:29px 14px 20px;vertical-align:middle}.cc-sdk .cc-message-box__btn{background:#fdaf19;border-radius:100px;display:inline-block;font-size:15px;font-weight:700;height:32px;padding:6px 0;width:124px;text-align:center}.cc-sdk.cc-popup-container .cc-popup-container__close{cursor:pointer;margin:4px;position:absolute;left:0;top:0;z-index:111}.cc-sdk .cc-popup-container-2{height:144px;position:fixed;width:100%;z-index:1111}.cc-sdk .cc-popup-container-2.bottom{bottom:0}.cc-sdk .cc-popup-container-2__icons{cursor:pointer;padding:8px;position:absolute;top:0;z-index:111}.cc-sdk .top.cc-popup-container-2 .cc-popup-container-2__icons{padding-top:15px}.cc-sdk .cc-popup-container-2__icons.cc-right-icon{left:0}.cc-sdk .cc-popup-container-2__icons.cc-left-icon{right:0}.cc-sdk .cc-popup-container__back{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);display:inline-block;width:21px;height:21px}.cc-sdk .cc-question-container{padding:20px 20px 25px;position:absolute;text-align:center;width:100%;z-index:11;top:0;right:0}.cc-sdk .cc-question-container__text{color:#424242;display:inline-block;font-size:15px;font-weight:600;max-width:230px;padding:8px 0;text-align:center;vertical-align:middle;width:20%;position:relative}.cc-sdk .cc-question-container__text p{word-break:break-word}.cc-sdk .cc-question-container[data-type=csat] .cc-question-container__text{width:11em}.cc-sdk .cc-question-container[data-type=csat] .cc-question-container__list{width:64vw}.cc-sdk .cc-question-container__required,.cc-sdk .cc-question-container__validation{position:absolute;top:-14px;font-size:11px;right:0;width:100%;left:0;font-weight:400;color:#c1272d;display:none}.cc-sdk .cc-question-container__required-label{display:inline-block;position:relative;top:-2px;right:-2px}.cc-sdk .cc-question-container__content{display:inline-block;max-width:78%;vertical-align:middle;width:auto}.cc-sdk .cc-question-container__list li{display:inline-block;padding-right:29px;vertical-align:middle}.cc-sdk .cc-question-container__list li span{display:table-cell;font-size:15px;padding-right:15px;text-align:right;vertical-align:middle;width:125px}.cc-sdk .cc-question-container__list li input{vertical-align:middle}.cc-sdk .cc-question-container:before{content:\\\"\\\";display:inline-block;height:100%;margin-left:-4px;vertical-align:middle}.cc-sdk .cc-question-container{height:100%;vertical-align:middle}.cc-sdk .cc-questions-container{height:100%}.cc-sdk p.cc-thankyou-powered{font-size:13px!important;color:#404040!important;font-style:italic;margin-top:4px}.cc-sdk p.cc-thankyou-powered.no-branding{display:none}.cc-sdk .cc-thankyou-powered .cc-thankyou-logo{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/cc-thankyou-logo.svg\\\");background-size:cover;margin-left:8px;display:inline-block;width:16px;height:16px}.cc-sdk .multiline-box{background:#fff;border-radius:2px;border:1px solid #6d6d6d;font-family:Open Sans;font-size:15px;height:70px;margin:0 50px 0 0;min-width:600px;padding:2px 5px;resize:none}.cc-sdk .multiline-box:focus{outline:0}.cc-sdk .detail-box .cc-question-container__text p{font-size:13px;font-weight:700}.cc-sdk .detail-box .cc-question-container__text span{display:inline-block;font-size:15px;font-weight:400}.cc-sdk .detail-box .cc-question-container__text{height:56px}.cc-sdk .detail-box[data-type=singleline] .cc-question-container__text{margin-left:20px}.cc-sdk .detail-box .cc-question-container__content .cc-sdk-form-control,.cc-sdk .single-line .cc-question-container__content .cc-sdk-form-control{background:transparent;border:none;border-bottom:1px solid #6d6d6d;font-family:open sans;font-size:15px;line-height:26px;outline:0;width:300px;margin-right:70px}.cc-sdk .d-star-box.detail-box .cc-question-container__text{height:92px}.cc-sdk .hl.dropdown{background-image:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/arrow-down.black.svg\\\");background-position:3%;background-repeat:no-repeat;border-bottom:1px solid #6d6d6d;display:inline-block;padding:5px;position:relative;text-align:right;width:300px}.cc-sdk .drop-cc-question-container .cc-question-container__text{margin-left:20px}.cc-sdk .cc-sdk-form-control:focus{border-color:#fcaf18}.cc-sdk .detail-box .cc-question-container__content{padding-right:0}.cc-sdk .cc-big-list-container .cc-question-container__list{display:table;width:100%}.cc-sdk .cc-big-list-container .cc-question-container__list li{display:table-cell;vertical-align:middle}.cc-sdk .cc-thankyou-container{width:100%!important}.cc-sdk .submit-icon{direction:rtl;position:absolute;left:0;top:0;bottom:0;margin:auto 0;z-index:11;margin-left:75px;font-size:16px;cursor:pointer;width:47px;height:47px}@media (min-width:1000px){.cc-sdk .cc-big-list-container .cc-question-container__list li span label{overflow:hidden;max-height:100px;display:block}}@media (min-width:769px) and (max-width:875px){.cc-sdk .cc-question-container__list li{padding-right:0!important}}@media (min-width:769px) and (max-width:1024px){.cc-sdk .cc-popup-container-2{height:200px}.cc-sdk .cc-big-list-container .cc-question-container__list,.cc-sdk .cc-question-container__list{text-align:right}.cc-sdk .cc-big-list-container .cc-question-container__list li,.cc-sdk .cc-question-container__list li{display:inline-block;margin-bottom:15px;vertical-align:middle;width:49%}.cc-sdk .cc-question-container__content{display:inline-block;width:45%}.cc-sdk .multiline-box{min-width:100%;margin:0}.cc-sdk .option-smile-box img,.cc-sdk .option-star-box img{margin-left:11px!important}.cc-sdk .cc-thankyou-container .cc-question-container__text,.cc-sdk .cc-thankyou-container .cc-question-container__text p{width:100%!important;text-align:center;margin:0!important;padding:0;line-height:normal;height:auto}.cc-sdk .cc-thankyou-container .cc-question-container__text{max-width:98%}}@media (min-width:1000px){.cc-sdk .cc-question-container__text p{max-height:100px;overflow:hidden;max-width:140ch}.cc-sdk .cc-question-container__text p.ellipsis:after{content:\\\"...\\\";text-align:left;bottom:9px;left:-3px;width:12px;display:block;position:absolute;height:1.2em}}@media (min-width:769px) and (max-width:992px){.cc-sdk .cc-question-container{width:100%;margin:auto}.cc-sdk .cc-question-container__text{width:24%;padding-left:20px}.cc-sdk .cc-question-container__text p{max-height:110px;overflow:hidden}.cc-sdk .cc-question-container__content.rating-color{margin-right:0}.cc-sdk .submit-icon{margin-left:40px!important}.cc-sdk .cc-question-container__content.rating-color{margin-right:0!important}.cc-sdk .cc-question-container__content{width:50%!important}}@media (max-width:768px){.cc-sdk .cc-survey-container,.cc-sdk .cc-survey-content{height:100%}.cc-sdk .cc-popup-container-2{bottom:auto;height:100%;top:0}.cc-sdk .cc-popup-container-2__icons.cc-right-icon{right:auto;left:0;padding:0}.cc-sdk .cc-popup-container-2__icons.cc-left-icon{right:0;left:auto;padding:0}.cc-sdk .cc-big-list-container .cc-question-container__list li,.cc-sdk[dir=rtl] .cc-big-list-container .cc-question-container__list li{display:block}.cc-sdk .radio-toggle--more-option li span{width:84%!important;padding-right:25px!important}.cc-sdk .radio-toggle--more-option li{padding-left:0!important;display:block!important;padding-top:10px}.cc-sdk .detail-box .cc-question-container__content{padding-right:0}.cc-sdk .cc-question-container{bottom:75px;height:auto;right:0;padding:40px 20px;position:absolute;text-align:right;top:auto;width:100%}.cc-sdk .cc-question-container__text{font-size:18px;margin-bottom:20px;max-width:400px;text-align:right;width:100%}.cc-sdk .cc-question-container__content{display:block;max-width:100%;width:100%}.cc-sdk .cc-question-container__list label{display:block}.cc-sdk .cc-question-container__list li span{width:auto;padding-right:15px}.cc-sdk .cc-question-container__list li{padding-right:0;margin-bottom:10px;display:block}.cc-sdk .cc-popup-container-2__icons{margin:20px}.cc-sdk .cc-popup-container-2__icons.left-icon{right:auto;left:0}.cc-sdk .cc-popup-container-2__icons.right-icon{left:auto;right:0}.cc-sdk .cc-popup-container__close{width:27px}.cc-sdk .cc-question-container__content.rating-color{margin-right:0!important}.cc-sdk .cc-question-container[data-type=nps] .cc-question-container__content,.cc-sdk .cc-question-container[data-type=scale] .cc-question-container__content{width:100%!important}.cc-sdk .multiline-box{height:150px;margin:0;min-width:100%;width:100%}.cc-sdk .detail-box .cc-question-container__content .cc-sdk-form-control,.cc-sdk .hl.dropdown{width:100%}.cc-sdk .detail-box .cc-question-container__text p{font-size:18px}.cc-sdk .mobile-detail-box .cc-question-container__text{height:auto}.cc-sdk .cc-question-container__text p{max-height:auto}.cc-sdk .welcome-box .cc-question-container__text p{color:#fff}.cc-sdk .cc-questions-container{height:100%;position:relative}.cc-sdk .cc-message-box__btn{margin-right:20px}}@media (max-width:768px){.cc-sdk .detail-box .cc-question-container__content .cc-sdk-form-control,.cc-sdk .single-line .cc-question-container__content .cc-sdk-form-control{margin-right:0}.cc-sdk .submit-icon{position:absolute;right:20px;top:auto;bottom:30px;padding-left:0}.cc-sdk.cc-popup-container{position:fixed;bottom:0;right:0;left:0;margin:0!important;width:100%;height:13em;max-width:100%;max-height:100%;text-align:right;background:transparent}.cc-sdk.cc-popup-container .cc-message-box{position:absolute;bottom:20%}.cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text{font-size:20px}.cc-sdk.cc-popup-container .cc-message-box .submit-icon{position:absolute;bottom:-100%;top:auto;right:0;margin:0 14px}.cc-sdk.cc-popup-container .cc-popup-container__close{margin:20px;left:0;top:0}.cc-sdk.cc-popup-container__back{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);display:inline-block;width:27px;height:27px;background-size:100%}.cc-sdk .cc-thankyou-container .cc-question-container__text,.cc-sdk .cc-thankyou-container .cc-question-container__text p{width:100%!important;text-align:center;margin:0!important;padding:0;line-height:normal;height:auto}.cc-sdk .cc-thankyou-container .cc-question-container__text{max-width:98%}}[dir=rtl].cc-sdk ul{padding-left:0}[dir=rtl].cc-sdk.cc-popup-container .cc-popup-container__close{left:auto;right:0;top:0}[dir=rtl].cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text{text-align:left}[dir=rtl].cc-sdk .cc-popup-container__back{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_rtl_.svg)}[dir=rtl].cc-sdk .cc-popup-container-2__icons.cc-right-icon{left:auto;right:0}[dir=rtl].cc-sdk .cc-popup-container-2__icons.cc-left-icon{left:0;right:auto}[dir=rtl].cc-sdk.cc-question-container{margin-right:0;margin-left:0;left:0;right:auto}[dir=rtl].cc-sdk .cc-question-container__required,[dir=rtl].cc-sdk .cc-question-container__validation{left:0;right:auto}[dir=rtl].cc-sdk .cc-question-container__required-label{top:-2px;left:-2px;right:auto}[dir=rtl].cc-sdk .cc-question-container__list li{display:inline-block;padding-left:15px!important;padding-right:15px!important;vertical-align:middle}[dir=rtl].cc-sdk .cc-question-container[data-type=checkbox] .cc-question-container__list li{padding-left:0!important}[dir=rtl].cc-sdk .cc-question-container__list li span{padding-left:15px;padding-right:0;text-align:left}[dir=rtl].cc-sdk .cc-question-container:before{margin-right:-4px;margin-left:0}[dir=rtl].cc-sdk .multiline-box{margin:0 0 0 50px}[dir=rtl].cc-sdk .hl.dropdown{background-position:3%;text-align:left}[dir=rtl].cc-sdk .drop-cc-question-container .cc-question-container__text{margin-right:20px;margin-left:0}[dir=rtl].cc-sdk .detail-box .cc-question-container__content{padding-left:0;padding-right:0}[dir=rtl].cc-sdk .cc-question-container__content{text-align:left}@media (min-width:769px) and (max-width:1024px){[dir=rtl].cc-sdk .cc-big-list-container .cc-question-container__list,[dir=rtl].cc-sdk .cc-question-container__list{text-align:left}[dir=rtl].cc-sdk .multiline-box{margin:0}}@media (min-width:769px) and (max-width:992px){[dir=rtl].cc-sdk .cc-question-container__text{padding-right:20px;padding-left:0}[dir=rtl].cc-sdk .cc-question-container__content.rating-color{margin-right:0;margin-left:0}}@media (max-width:768px){[dir=rtl].cc-sdk .cc-popup-container-2__icons.cc-right-icon{right:0;left:auto}[dir=rtl].cc-sdk .cc-popup-container-2__icons.cc-left-icon{right:auto;left:0}[dir=rtl].cc-sdk .radio-toggle--more-option li span{padding-left:25px!important;padding-right:0!important}[dir=rtl].cc-sdk .radio-toggle--more-option li{padding-left:0!important;padding-right:0!important}[dir=rtl].cc-sdk .detail-box .cc-question-container__content{padding-right:0;padding-left:0}[dir=rtl].cc-sdk .cc-question-container{right:auto;left:0}[dir=rtl].cc-sdk .multiline-box{margin:0}[dir=rtl].cc-sdk .cc-question-container__text{text-align:left;width:100%;margin-left:5px;max-width:100%}[dir=rtl].cc-sdk .cc-question-container__list li span{padding-left:15px;padding-right:0}[dir=rtl].cc-sdk .cc-question-container__list li{padding-right:0;padding-left:0}[dir=rtl].cc-sdk .cc-popup-container-2__icons.left-icon{right:0;left:auto}[dir=rtl].cc-sdk .cc-popup-container-2__icons.right-icon{left:0;right:auto}[dir=rtl].cc-sdk .cc-question-container__content.rating-color{margin-right:0!important;margin-left:0!important}}.cc-sdk .option-number-item{color:#fff;float:right;font-size:13px;height:38px;box-sizing:border-box;padding-top:10px;text-align:center;width:8.5%;margin-right:1px;margin-left:0;cursor:pointer}.cc-sdk .option-number-item.option-zero{background:#853838}.cc-sdk .option-number-item.option-zero.selected,.cc-sdk .option-number-item.option-zero:hover{background:#572526}.cc-sdk .option-number-item.option-one{background:#9e4343}.cc-sdk .option-number-item.option-one.selected,.cc-sdk .option-number-item.option-one:hover{background:#642728}.cc-sdk .option-number-item.option-two{background:#c14d4d}.cc-sdk .option-number-item.option-two.selected,.cc-sdk .option-number-item.option-two:hover{background:#712827}.cc-sdk .option-number-item.option-three{background:#d94d4d}.cc-sdk .option-number-item.option-three.selected,.cc-sdk .option-number-item.option-three:hover{background:#7c2828}.cc-sdk .option-number-item.option-four{background:#ee4d4d}.cc-sdk .option-number-item.option-four.selected,.cc-sdk .option-number-item.option-four:hover{background:#852828}.cc-sdk .option-number-item.option-five{background:#ff4d4d}.cc-sdk .option-number-item.option-five.selected,.cc-sdk .option-number-item.option-five:hover{background:#844828}.cc-sdk .option-number-item.option-six{background:#ff8c4d}.cc-sdk .option-number-item.option-six.selected,.cc-sdk .option-number-item.option-six:hover{background:#844828}.cc-sdk .option-number-item.option-seven{background:#ffc74d}.cc-sdk .option-number-item.option-seven.selected,.cc-sdk .option-number-item.option-seven:hover{background:#856728}.cc-sdk .option-number-item.option-eight{background:#f5eb4d}.cc-sdk .option-number-item.option-eight.selected,.cc-sdk .option-number-item.option-eight:hover{background:#7f7a28}.cc-sdk .option-number-item.option-nine{background:#73ca81}.cc-sdk .option-number-item.option-nine.selected,.cc-sdk .option-number-item.option-nine:hover{background:#3b6942}.cc-sdk .option-number-item.option-ten{background:#4db47c}.cc-sdk .option-number-item.option-ten.selected,.cc-sdk .option-number-item.option-ten:hover{background:#285e40}.cc-sdk .option-number-item.option-7-scale-1,.cc-sdk .option-number-item.option-7-scale-2,.cc-sdk .option-number-item.option-7-scale-3{background:#ed534f}.cc-sdk .option-number-item.option-7-scale-4,.cc-sdk .option-number-item.option-7-scale-5{background:#ffbc00}.cc-sdk .option-number-item.option-7-scale-6,.cc-sdk .option-number-item.option-7-scale-7{background:#4db47c}.cc-sdk .option-number-item.option-5-scale-1,.cc-sdk .option-number-item.option-5-scale-2{background:#ed534f}.cc-sdk .option-number-item.option-5-scale-3{background:#ffbc00}.cc-sdk .option-number-item.option-5-scale-4,.cc-sdk .option-number-item.option-5-scale-5{background:#4db47c}.cc-sdk .cc-question-container[data-type=nps] .option-number-item{width:calc(9.09% - 1px)}.cc-sdk .cc-question-container[data-type=scale].scale-image-container .option-number-item{width:8.4%}.cc-sdk .cc-question-container__content.rating-color{margin-right:74px}.cc-sdk .option-left-rating-text,.cc-sdk .option-right-rating-text{color:#424242;font-size:13px;right:0;position:absolute}.cc-sdk .option-left-rating-text-small-container{max-width:57px;text-align:right;max-height:37px;overflow:hidden}.cc-sdk .option-right-rating-text-small-container{max-width:57px;text-align:left;max-height:37px;overflow:hidden}.cc-sdk .option-left-rating-text-small-container-smile{width:40%;text-align:right;max-height:37px;overflow:hidden;bottom:auto!important;top:57px}.cc-sdk .option-right-rating-text-small-container-smile{width:40%;text-align:left;max-height:37px;overflow:hidden;bottom:auto!important;top:57px}.cc-sdk .cc-question-container[data-type=smile] .option-left-rating-text,.cc-sdk .cc-question-container[data-type=star] .option-left-rating-text{right:4px;width:40%;text-align:right}.cc-sdk .option-right-rating-text{right:auto;left:0}.cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,.cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{text-align:left;width:40%}.cc-sdk .cc-question-container[data-type=scale] .option-number-item{width:38px;margin:0 .5px;cursor:pointer;display:inline-block;float:none}.cc-sdk .cc-question-container[data-type=scale] .cc-question-container__list{display:inline-block;width:auto;position:relative}.cc-sdk .cc-question-container[data-type=scale].scale-image-container .cc-question-container__list{width:100%}.cc-sdk .rating-color{position:relative}.cc-sdk .option-smile-box,.cc-sdk .option-star-box{height:60px;margin-left:29px;width:60px;cursor:pointer;box-sizing:border-box;border:4px solid transparent;border-radius:50%;display:inline-block;background-size:100%}.cc-sdk:not([dir=rtl]) .option-smile-box:nth-child(5),.cc-sdk:not([dir=rtl]) .option-star-box:nth-child(5),.cc-sdk[dir=rtl] .option-smile-box:first-child,.cc-sdk[dir=rtl] .option-star-box:first-child{margin-left:0}.cc-sdk .option-smile-box.cc-one{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-two{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-three{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-four{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-five{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-one.selected,.cc-sdk .option-smile-box.cc-one:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-two.selected,.cc-sdk .option-smile-box.cc-two:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-three.selected,.cc-sdk .option-smile-box.cc-three:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-four.selected,.cc-sdk .option-smile-box.cc-four:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-five.selected,.cc-sdk .option-smile-box.cc-five:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .cc-csat.cc-question-container__content.rating-color{margin-right:45px}.cc-sdk .option-csat.option-smile-box,.cc-sdk .option-csat.option-smile-box.selected,.cc-sdk .option-csat.option-smile-box:hover{background-size:25px;background-position:18px}.cc-sdk .option-csat{height:30px;margin-left:68px;width:30px;padding-right:50px;height:45px;margin-left:0;width:auto;padding-right:0;font-size:14px;vertical-align:middle;display:inline-block;margin-left:13px}.cc-sdk .option-csat span{display:inline-block;vertical-align:top;font-size:12px;padding-right:25px;position:relative;text-align:right;width:100%}.cc-sdk .option-csat .cc-checkbox label{pointer-events:none}.cc-sdk .option-star-box{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-star-box.selected,.cc-sdk .option-star-box:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star_selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .cc-question-container[data-type=slider] .option-left-rating-text{right:4px;width:40%;text-align:right}.cc-sdk .cc-question-container[data-type=slider] .option-right-rating-text{width:40%;text-align:left}.cc-sdk .cc-question-container[data-type=smile] .cc-question-container__list,.cc-sdk .cc-question-container[data-type=star] .cc-question-container__list{position:relative;width:auto;display:inline-block}.cc-sdk .circle-image{margin:auto;width:253px;overflow:hidden;height:240px;position:relative}.cc-sdk .circle-image-scale-010-neutral{width:242px;overflow:hidden;height:230px;margin:auto}.cc-sdk .cc-nps-selected-rating{font-size:100px;display:inline-block;position:absolute;top:0;right:0;line-height:100px;left:0;margin:auto;bottom:0;width:110px;height:100px;text-align:center;font-weight:100;color:#bbb}.cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,.cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{left:4px}.cc-sdk .option-number-item.option-scale{background:#4db47c}.cc-sdk .option-number-item.option-scale.selected,.cc-sdk .option-number-item.option-scale:hover{background:#712827}.cc-sdk .cc-nps-image{cursor:pointer;position:relative;right:0}.cc-sdk .legend-container{position:relative}@media (min-width:769px) and (max-width:992px){.cc-sdk .option-smile-box,.cc-sdk .option-star-box{width:50px;height:50px;margin-left:10px}.cc-sdk .option-csat.option-smile-box,.cc-sdk .option-csat.option-smile-box.selected,.cc-sdk .option-csat.option-smile-box:hover{display:inline-block;width:168px;background-position:48px}.cc-sdk .option-csat.option-smile-box.selected span,.cc-sdk .option-csat.option-smile-box:hover span,.cc-sdk .option-csat.option-smile-box span{padding-right:40px}}@media screen and (min-width:992px){.cc-sdk span.option-csat.option-smile-box,.cc-sdk span.option-csat.option-smile-box.selected,.cc-sdk span.option-csat.option-smile-box:hover{background-position:44px}.cc-sdk span.option-csat.option-smile-box span{padding-right:40px}}@media (max-width:768px){.cc-sdk .option-smile-box,.cc-sdk .option-star-box{display:inline-block;margin-left:3px}.cc-sdk .option-csat.option-smile-box,.cc-sdk .option-csat.option-smile-box.selected,.cc-sdk .option-csat.option-smile-box:hover{display:block;background-size:40px;background-position:45px}.cc-sdk .option-csat.option-smile-box{height:65px;width:100%}.cc-sdk .option-csat.option-smile-box span{font-size:15px;padding-right:40px}.cc-sdk .option-csat.option-smile-box .cc-checkbox{top:calc(50% - 12.5px);height:57px}.cc-sdk .option-csat.option-smile-box .cc-checkbox.cc-radio label:before,.cc-sdk .option-csat.option-smile-box .cc-checkbox input[type=radio]:checked+label:after{width:25px;height:25px}.cc-sdk .option-number-item{color:#fff;float:right;font-size:15px;height:35px;box-sizing:border-box;margin-left:1px;padding-top:7px;text-align:center;width:38px;cursor:pointer;vertical-align:middle}.cc-sdk .cc-question-container[data-type=scale]{bottom:106px}.cc-sdk .cc-question-container[data-type=scale] .option-left-rating-text,.cc-sdk .cc-question-container[data-type=scale] .option-right-rating-text{width:auto}.cc-sdk .cc-question-container[data-type=scale] .option-right-rating-text{text-align:left}.cc-sdk .option-smile-box img,.cc-sdk .option-star-box img{padding-left:5px;margin-left:0}.cc-sdk .cc-question-container[data-type=nps] .cc-question-container__content{width:100%!important}.cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,.cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{left:10px}.cc-sdk .cc-question-container[data-type=csat] .cc-question-container__list li,.cc-sdk .cc-question-container[data-type=scale] .cc-question-container__list{width:100%}}@media (max-width:381px){.cc-sdk .option-smile-box,.cc-sdk .option-star-box{display:inline-block;margin-left:0;height:50px;width:50px}.cc-sdk .option-smile-box img,.cc-sdk .option-star-box img{padding-left:5px;margin-left:0}}@media screen and (max-width:768px){.cc-sdk .cc-question-container[data-type=scale] span.radial-legend-right,.cc-sdk .radial-legend-right{text-align:right;width:35%;left:0}.cc-sdk .radial-legend-left{width:35%;text-align:left;right:0}}[dir=rtl].cc-sdk .cc-question-container[data-type=csat] .cc-question-container__content.rating-color{margin-left:45px;margin-right:0}[dir=rtl].cc-sdk .cc-question-container[data-type=csat] .cc-checkbox input[type=radio]{margin-left:0;opacity:0;outline:0}[dir=rtl].cc-sdk .option-number-item{margin-left:1px;margin-right:0;float:left}[dir=rtl].cc-sdk .cc-question-container__content.rating-color{margin-left:74px;margin-right:0}[dir=rtl].cc-sdk .option-right-rating-text{right:calc(100% - 418px);left:auto!important}[dir=rtl].cc-sdk .option-left-rating-text{left:0;right:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=nps] .option-right-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=scale] .option-right-rating-text{right:0;left:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=scale] .option-left-rating-text{left:2px}[dir=rtl].cc-sdk .cc-question-container[data-type=slider] .option-right-rating-text{right:0;width:40%;text-align:right}[dir=rtl].cc-sdk .cc-question-container[data-type=slider] .option-left-rating-text{left:0;text-align:left}[dir=rtl].cc-sdk .rating-color{position:relative}[dir=rtl].cc-sdk .option-smile-box img{margin-left:29px;margin-right:0}[dir=rtl].cc-sdk .option-star-box img{margin-right:19px;margin-left:0}[dir=rtl].cc-sdk .option-csat.option-smile-box span{padding-left:25px;text-align:left;padding-right:0}[dir=rtl].cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{right:7px;left:auto!important;text-align:right}[dir=rtl].cc-sdk .cc-question-container[data-type=smile] .option-left-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=star] .option-left-rating-text{left:7px;right:auto!important;text-align:left}[dir=rtl].cc-sdk .option-csat{width:auto;box-sizing:border-box;padding-right:0;margin-left:13px}[dir=rtl].cc-sdk .option-csat.option-smile-box,[dir=rtl].cc-sdk .option-csat.option-smile-box.selected,[dir=rtl].cc-sdk .option-csat.option-smile-box:hover{background-position:calc(100% - (100% - 44px)) 50%;text-align:left}@media (min-width:769px) and (max-width:992px){[dir=rtl].cc-sdk .option-smile-box img,[dir=rtl].cc-sdk .option-star-box img{margin-right:0;margin-left:10px}[dir=rtl].cc-sdk .cc-question-container__content.rating-color{margin-left:10px;margin-right:86px!important}[dir=rtl].cc-sdk .cc-question-container[data-type=nps] .option-right-rating-text{right:17px;left:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{right:7px;text-align:right;left:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=smile] .option-left-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=star] .option-left-rating-text{left:20px;right:auto!important;text-align:left}[dir=rtl].cc-sdk .option-csat.option-smile-box,[dir=rtl].cc-sdk .option-csat.option-smile-box.selected,[dir=rtl].cc-sdk .option-csat.option-smile-box:hover{width:auto}}@media (max-width:768px){[dir=rtl].cc-sdk .option-smile-box img,[dir=rtl].cc-sdk .option-star-box img{padding-left:0;padding-right:5px;margin-left:0;margin-right:0}[dir=rtl].cc-sdk .cc-question-container[data-type=csat] .cc-checkbox input[type=radio]{margin-left:7px;opacity:0;outline:0}[dir=rtl].cc-sdk .option-csat.option-smile-box,[dir=rtl].cc-sdk .option-csat.option-smile-box.selected,[dir=rtl].cc-sdk .option-csat.option-smile-box:hover{background-position:calc(100% - (100% - 44px)) 50%}[dir=rtl].cc-sdk .option-csat.option-smile-box span{padding-left:39px;text-align:left;padding-right:0}[dir=rtl].cc-sdk .cc-question-container[data-type=smile] .option-left-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=star] .option-left-rating-text,[dir=rtl].cc-sdk .option-left-rating-text{left:10px;right:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{left:auto!important}[dir=rtl].cc-sdk .option-right-rating-text{right:calc(100% - 322px);left:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=scale] .option-right-rating-text{right:13px;left:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=nps] .radial-legend-right,[dir=rtl].cc-sdk .cc-question-container[data-type=scale] .radial-legend-right{right:auto!important;left:10px!important}[dir=rtl].cc-sdk .cc-question-container[data-type=nps] .radial-legend-left,[dir=rtl].cc-sdk .cc-question-container[data-type=scale] .radial-legend-left{left:auto!important;right:10px!important}}@media (max-width:381px){[dir=rtl].cc-sdk .option-right-rating-text{right:calc(100% - 258px);left:auto!important}}.cc-sdk .cc-select-wrapper{position:relative;display:inline-block;user-select:none;z-index:11}.cc-sdk .cc-select-wrapper select{display:none}.cc-sdk .cc-select{position:relative;display:inline-block;margin-right:70px}.cc-sdk .cc-select-trigger{display:block;width:130px;padding:0 22px 0 84px;font-size:15px;font-style:italic;font-weight:300;color:#222;line-height:20px;background:transparent;border-radius:0;cursor:pointer;width:300px;border-bottom:1px solid #6d6d6d;display:inline-block;text-align:right;padding:5px 5px 5px 20px;position:relative;background-position:3%;background-repeat:no-repeat;max-height:50px;overflow:hidden}.cc-sdk .cc-select-trigger:after{position:absolute;display:block;content:\\\"\\\";width:10px;height:10px;top:50%;left:5px;margin-top:-3px;border-bottom:1px solid #222;border-left:1px solid #222;transform:rotate(-45deg) translateY(-50%);transition:all .2s ease-in-out;transform-origin:50% 0}.cc-sdk .cc-select.opened .cc-select-trigger:after{margin-top:3px;transform:rotate(135deg) translateY(-50%)}.cc-sdk .cc-select-options-container{position:absolute;display:block;top:100%;right:0;left:0;min-width:100%;margin:15px 0;border:1px solid #b5b5b5;border-radius:4px;box-sizing:border-box;box-shadow:0 2px 1px rgba(0,0,0,.07);background:#fff;transition:all .2s ease-in-out;opacity:0;visibility:hidden;pointer-events:none;transform:translateY(calc(-100% - 65px));height:auto;max-height:150px;overflow:hidden;overflow-y:scroll}.cc-sdk .cc-select-options{overflow-y:scroll;height:100%;width:110%}.cc-sdk .cc-select.opened .cc-select-options-container{opacity:1;visibility:visible;pointer-events:all;transform:translateY(-100%) translateY(-65px)}@media (min-width:769px){.cc-sdk .cc-popup-container-2.top .cc-select-options-container,.cc-sdk .cc-popup-container-2.top .cc-select.opened .cc-select-options-container{transform:translateY(-19px)}}.cc-sdk .option-hover:before{background:#f9f9f9}.cc-sdk .cc-select-option{position:relative;display:block;padding:0 12px;border-bottom:1px solid #e4e4e4;font-size:12px;font-weight:600;color:#222;line-height:34px;cursor:pointer;transition:all .2s ease-in-out;text-align:right;margin:0;width:100%}.cc-sdk .cc-select-option:first-of-type{border-radius:4px 4px 0 0}.cc-sdk .cc-select-option:last-of-type{border-bottom:0;border-radius:0 0 4px 4px}.cc-sdk .cc-select-option.selection,.cc-sdk .cc-select-option:hover{background:#eaeaea}.cc-sdk .cc-select-wrapper.down .cc-select-options-container,.cc-sdk .cc-select-wrapper.down .cc-select.opened .cc-select-options-container{transform:translateY(20px)}.cc-sdk .cc-question-container[data-type=nps] .cc-question-container__content,.cc-sdk .cc-question-container[data-type=scale] .cc-question-container__content{width:40%}@media (max-width:768px){.cc-sdk .cc-select,.cc-sdk .cc-select-wrapper{min-width:100%}.cc-sdk .cc-select{margin-right:0}.cc-sdk .cc-select-trigger{min-width:100%;width:auto}}[dir=rtl].cc-sdk .cc-select-trigger{padding:0 84px 0 22px;background-position:3%;background-repeat:no-repeat;text-align:left}[dir=rtl].cc-sdk .cc-select-trigger:after{top:50%;right:2px;left:auto}[dir=rtl].cc-sdk .cc-select-option{text-align:left}[dir=rtl].cc-sdk .cc-select-option:first-of-type{border-radius:0 4px 4px 0}[dir=rtl].cc-sdk .cc-select-option:last-of-type{border-radius:4px 0 0 4px}.cc-sdk .cc-checkbox{display:table-cell;vertical-align:middle;position:relative;text-align:center}.cc-sdk .cc-checkbox label{cursor:pointer;display:block;height:25px}.cc-sdk .cc-checkbox+span label img{width:40px;display:inline-block;vertical-align:middle}.cc-sdk .cc-checkbox label:after,.cc-sdk .cc-checkbox label:before{content:\\\"\\\";right:0;margin:auto;position:absolute;top:calc(50% - 12.5px)}.cc-sdk .cc-checkbox label:before{background:transparent;border-radius:2px;border:1px solid #424242;cursor:pointer;height:20px;transition:background .3s;width:20px}.cc-sdk .cc-checkbox input[type=checkbox]{opacity:0;outline:0}.cc-sdk .cc-checkbox input[type=checkbox]:checked+label:before{background:#fdaf19;border:none}.cc-sdk .cc-checkbox input[type=checkbox]:checked+label:after{border:3px solid #222;border-left-style:none;border-top-style:none;height:7px;top:calc(50% - 8.5px);right:4px;transform:rotate(45deg);width:12px}.cc-sdk .cc-checkbox.cc-radio label:before{background:transparent;border:1px solid #424242;cursor:pointer;height:25px;transition:background-color .3s;width:25px}.cc-sdk .cc-checkbox input[type=radio]{opacity:0;outline:0}.cc-sdk .cc-checkbox input[type=radio]:checked+label:before{background:transparent;border-color:#fdaf19}.cc-sdk .cc-question-container__list li{display:inline-table;margin-bottom:0}.cc-sdk .cc-question-container__list li .cc-radio,.cc-sdk .cc-question-container__list li .cc-sdk .cc-checkbox{width:30px}.cc-sdk .cc-checkbox input[type=radio]:checked+label:after{-moz-transform:scale(.8);-ms-transform:scale(.8);-o-transform:scale(.8);-webkit-transform:scale(.8);background:#fdaf19;border-radius:30px;height:25px;transform:scale(.8);width:25px}.cc-sdk .cc-radio label:before{border-radius:30px}.cc-sdk .radio-toggle--more-option li span{padding-right:25px!important;width:125px!important}.cc-sdk .radio-toggle .cc-question-container__list li{padding-right:15px}@media (min-width:1000px){.cc-sdk .radio-toggle .cc-question-container__list li span label{overflow:hidden;max-height:100px;display:block}}@media (min-width:769px) and (max-width:992px){.cc-sdk .radio-toggle .cc-question-container__list li{padding-right:10px}.cc-sdk .radio-toggle .cc-question-container__list li span .label,.cc-sdk .radio-toggle .cc-question-container__list li span label{display:block;max-height:50px;overflow:hidden;text-overflow:ellipsis}}@media (max-width:768px){.cc-sdk .radio-toggle .cc-question-container__list li{padding-right:0;display:block;padding-left:50px}}.cc-sdk .progress-bar{width:100%;position:absolute;background:#a47c2b;z-index:1;height:8px;right:0}.cc-sdk .progress-line{background:#fdaf19;height:100%;display:block;width:0;transition:all .4s ease-in}.cc-sdk .cc-scrollbar-wrapper{float:right;height:100%;overflow:hidden;position:relative;width:100%;z-index:1}.cc-sdk .cc-scrollbar-content{box-sizing:border-box;height:100%;overflow:auto;position:relative;width:107%}.cc-sdk .cc-scrollbar-scroll{background:#aaa;border-radius:4px;cursor:pointer;opacity:0;position:relative;top:0;transition:opacity .25s linear;width:9px;z-index:2}.cc-sdk .cc-scrollbar-container:hover .cc-scrollbar-scroll{opacity:1}.cc-sdk .cc-scrollbar-grabbed{-moz-user-select:none;-o-user-select:none;-webkit-user-select:none;user-select:none}.cc-sdk .cc-sdk-range{-webkit-appearance:none;-moz-appearance:none;width:500px;height:60px;background:transparent}.cc-sdk input[type=range]::-webkit-slider-runnable-track{-webkit-appearance:none;background:#ff403d;background:linear-gradient(-135deg,#ff403d,#992a28);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=\\\"#ff403d \\\",endColorstr=\\\"#992a28 \\\",GradientType=1);height:1px}.cc-sdk input[type=range]:focus{outline:none}.cc-sdk input[type=range]::-moz-range-track{-moz-appearance:none;background:#ff403d;background:linear-gradient(-135deg,#7a0806,#992a28);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=\\\"#ff403d \\\",endColorstr=\\\"#992a28 \\\",GradientType=1);height:1px}.cc-sdk input[type=range]::-ms-track{height:1px;width:500px;background-color:#ff403d}.cc-sdk input[type=range]::-webkit-slider-thumb{-webkit-appearance:none;border:1px solid #ff403d;border-radius:50%;height:32px;width:32px;max-width:80px;position:relative;bottom:16px;background-color:#fff;cursor:-webkit-grab}.cc-sdk input[type=range]::-ms-thumb{border:1px solid #ff403d;border-radius:50%;height:32px;width:32px;background:#e08692;box-sizing:border-box;cursor:pointer!important}.cc-sdk input[type=range]::-moz-range-thumb{-moz-appearance:none;border:1px solid #ff403d;border-radius:50%;height:32px;width:32px;max-width:80px;position:relative;bottom:16px;background-color:#fff;cursor:-moz-grab}.cc-sdk input[type=range]::-moz-range-thumb:before{content:\\\"asd\\\"}.cc-sdk input[type=range]::-webkit-slider-thumb:active{cursor:-webkit-grabbing}.cc-sdk input[type=range]::-moz-range-thumb:active{cursor:-moz-grabbing}.cc-sdk .cc-question-container__content.cc-sdk-range-slider{height:50px}.cc-sdk .slider-tip{background:#eb1c23;padding:8px 9px 9px;position:absolute;right:0;left:0;margin:0 auto;color:#fff;background:none;color:#424242;font-size:13px;width:100px;display:inline-block;text-align:center;font-weight:700}.cc-sdk .slider-tip:after{border-width:5px 5px 0;border-top-color:#000}@media (max-width:1024px){.cc-sdk .cc-sdk-range{width:100%}}.cc-sdk input.cc-sdk-range.cc-blue::-moz-range-track,.cc-sdk input.cc-sdk-range.cc-blue::-webkit-slider-runnable-track{background:blue}.cc-sdk .chart{box-sizing:border-box;display:inline-block;height:21px;padding-top:22px;position:relative;vertical-align:top;width:21px}.cc-sdk .cc-sdk-chart span{display:block;font-size:2em;font-weight:400}.cc-sdk .cc-sdk-chart canvas{right:0;position:absolute;top:0}.cc-sdk .cc-sdk-loader{height:21px;right:28px;position:absolute;top:8px;width:21px}@media (min-width:769px){.cc-sdk .cc-sdk-chart canvas{margin-right:10px}}@media (max-width:768px){.cc-sdk .cc-sdk-loader{position:relative;right:auto;top:0;left:auto}}[dir=rtl].cc-sdk .cc-sdk-chart canvas{left:0;right:auto}[dir=rtl].cc-sdk .cc-sdk-loader{left:28px;right:auto}@media (min-width:768px){[dir=rtl].cc-sdk .cc-sdk-chart canvas{margin-left:10px;margin-right:0}}.cc-sdk .show{display:block!important}.cc-sdk .show-inline{display:inline-block!important}.cc-sdk .hide{display:none!important}.cc-sdk.bottom{bottom:0}.cc-sdk.right,.cc-sdk .right{left:0}.cc-sdk .left{right:0}.cc-sdk .top{top:0}.ccsdk-overlay{background:#fff;bottom:0;height:100%;right:0;position:absolute;top:0;width:100%;z-index:0}.ccsdk-overlay.ccsdk-glass{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/ww.png);background-repeat:no-repeat;background-size:cover}.ccsdk-clearfix{clear:both;display:block}.ccsdk-text-normal{font-weight:400}.cc-sdk ::-webkit-input-placeholder{color:#4c4c4c;font-family:Open Sans;font-size:13px;font-style:italic;font-weight:400}.cc-sdk .cc-sdk-form-control::-moz-placeholder{font-style:italic;font-size:13px;font-weight:400;font-family:Open Sans;color:#4c4c4c}.cc-sdk .cc-sdk-form-control:-ms-input-placeholder{font-style:italic;font-size:13px;font-weight:400;font-family:Open Sans;color:#4c4c4c}.cc-sdk .cc-sdk-form-control:-moz-placeholder{font-style:italic;font-size:13px;font-weight:400;font-family:Open Sans;color:#4c4c4c}@media (min-width:769px){.desktop-hide{display:none}}@media (max-width:768px){.mobile-hide{display:none}.cc-sdk-loader{position:relative;right:auto;top:0;left:auto}.ccsdk-overlay.welcome-overlay{background:rgba(210,42,53,.87)}}[dir=rtl].cc-sdk .submit-icon{right:0;left:auto;margin-right:75px}@media (max-width:768px){[dir=rtl].cc-sdk .submit-icon{position:absolute;right:auto;top:auto;bottom:30px;padding-right:0;left:20px;margin:0}}.cc-sdk:before{width:0;height:0;overflow:hidden;position:absolute;z-index:-1}.cc-sdk .yellow .progress-bar{background:#a47c2b}.cc-sdk .yellow .progress-line{background:#fdaf19}.cc-sdk .yellow .submit-icon{background-image:url(\\\"data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%2747px%27%20height%3D%2747px%27%20viewBox%3D%270%200%2047%2047%27%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%3E%3Ctitle%3EGroup%2016%3C%2Ftitle%3E%3Cdesc%3ECreated%20with%20Sketch.%3C%2Fdesc%3E%3Cdefs%3E%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%3Cfilter%20x%3D%27-18.1%25%27%20y%3D%27-12.9%25%27%20width%3D%27136.2%25%27%20height%3D%27136.2%25%27%20filterUnits%3D%27objectBoundingBox%27%20id%3D%27filter-2%27%3E%3CfeOffset%20dx%3D%270%27%20dy%3D%272%27%20in%3D%27SourceAlpha%27%20result%3D%27shadowOffsetOuter1%27%3E%3C%2FfeOffset%3E%3CfeGaussianBlur%20stdDeviation%3D%272%27%20in%3D%27shadowOffsetOuter1%27%20result%3D%27shadowBlurOuter1%27%3E%3C%2FfeGaussianBlur%3E%3CfeColorMatrix%20values%3D%270%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200.116423234%200%27%20type%3D%27matrix%27%20in%3D%27shadowBlurOuter1%27%3E%3C%2FfeColorMatrix%3E%3C%2Ffilter%3E%3C%2Fdefs%3E%3Cg%20id%3D%27Page-1%27%20stroke%3D%27none%27%20stroke-width%3D%271%27%20fill%3D%27none%27%20fill-rule%3D%27evenodd%27%3E%3Cg%20id%3D%271-copy-20%27%20transform%3D%27translate(-1246.000000%2C%20-664.000000)%27%3E%3Cg%20id%3D%27Group-16%27%20transform%3D%27translate(1250.000000%2C%20666.000000)%27%3E%3Cg%20id%3D%27Oval-4%27%3E%3Cuse%20fill%3D%27white%27%20fill-opacity%3D%271%27%20filter%3D%27url(%23filter-2)%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3Cuse%20fill%3D%27%23d04a49%27%20fill-rule%3D%27evenodd%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3C%2Fg%3E%3Cg%20id%3D%27Group-5%27%20transform%3D%27translate(12.000000%2C%2011.000000)%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23FFFFFF%27%3E%3Cg%20id%3D%27fast-forward-arrows%27%20transform%3D%27translate(6.173934%2C%200.000000)%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3Cg%20id%3D%27fast-forward-arrows-copy%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\\\")}.cc-sdk .yellow .cc-checkbox input[type=checkbox]:checked+label:before{background:#fdaf19}.cc-sdk .yellow .cc-checkbox input[type=checkbox]:checked+label:after{border-color:#222}.cc-sdk .yellow .cc-checkbox input[type=radio]:checked+label:before{border-color:#fdaf19}.cc-sdk .yellow .cc-checkbox input[type=radio]:checked+label:after{background:#fdaf19}.cc-sdk .yellow .cc-sdk-form-control:focus{border-color:#fcaf18}.cc-sdk .yellow .cc-message-box__btn{background:#fdaf19}.cc-sdk .red .progress-bar{background:#d22a35}.cc-sdk .red .progress-line{background:#d22a35;filter:brightness(150%)}.cc-sdk .red .cc-checkbox input[type=checkbox]:checked+label:before{background:#d22a35}.cc-sdk .red .cc-checkbox input[type=checkbox]:checked+label:after{border-color:#fff}.cc-sdk .red .cc-checkbox input[type=radio]:checked+label:before{border-color:#d22a35}.cc-sdk .red .cc-checkbox input[type=radio]:checked+label:after{background:#d22a35}.cc-sdk .red .cc-sdk-form-control:focus{border-color:#d22a35}.cc-sdk .red .cc-message-box__btn{background:#d22a35;color:#fff}.cc-question-container,.hide-slide{transform:translateX(-5px)}.cc-question-container,.hide-bottom-up,.hide-slide{transition:transform .3s ease,opacity .3s ease,visibility .3s ease;visibility:hidden;opacity:0}.hide-bottom-up{transform:translateY(30px)}.hide-up-bottom{transform:translateY(100%)}.hide-right-left,.hide-up-bottom{transition:transform .3s ease,opacity .3s ease,visibility .3s ease;visibility:hidden;opacity:0}.hide-right-left{transform:translateX(-100%)}.hide-left-right{transform:translateX(100%);visibility:hidden;opacity:0}.hide-left-right,.show-slide,.show-thankyou-slide{transition:transform .3s ease,opacity .3s ease,visibility .3s ease}.show-slide,.show-thankyou-slide{visibility:visible;opacity:1;transform:translateX(0) translateY(0)}.cc-sdk #timer{position:relative}.cc-sdk svg.cc-sdk-timer{position:absolute;top:0;right:0;width:40px;height:40px;transform:rotateY(-180deg) rotate(90deg)}[dir=rtl].cc-sdk svg.cc-sdk-timer{left:0;right:auto}.cc-sdk svg.cc-sdk-timer circle{stroke-dasharray:50px;stroke-dashoffset:0px;stroke-linecap:round;stroke-width:2px;stroke:red;fill:none;animation:countdown 10s linear 1 forwards}@keyframes countdown{0%{stroke-dashoffset:0px}to{stroke-dashoffset:50px}}.cc-sdk .cc-loaderimg{position:absolute;width:100%;z-index:1000;right:0;left:0;top:0;height:100%;background:hsla(0,0%,100%,.8)}.cc-sdk .cc-loaderimg svg{width:100px}\" : \".cc-sdk ul{padding-left:0;list-style-type:none;margin:0}.cc-sdk a,.cc-sdk a:focus,.cc-sdk a:hover{text-decoration:none;color:inherit}.cc-sdk *,.cc-sdk :after,.cc-sdk :before{box-sizing:border-box}.cc-sdk p{color:inherit;margin:0}.cc-sdk map area{outline:0;cursor:pointer}.cc-sdk map area.selected{outline:0;outline-color:#0a2135;outline-width:0;outline-style:solid}.cc-sdk map area:hover{outline:1}.cc-sdk.cc-popup-container{background:#fff;box-shadow:0 0 4px 5px rgba(0,0,0,.05);font-family:open sans,sans-serif;position:fixed;text-align:center;max-width:500px;max-height:500px;z-index:1111}@media (min-width:768px){.cc-sdk.cc-popup-container{padding:10px}}.cc-sdk.cc-popup-container.bottom{margin-bottom:9px}.cc-sdk.cc-popup-container.top{margin-top:9px}.cc-sdk #cc-thankyou-container .cc-question-container__text p{word-break:break-word}.cc-sdk #cc-thankyou-container .cc-question-container__text,.cc-sdk #cc-thankyou-container .cc-question-container__text p{width:400px;max-width:none;font-size:17px;color:#424242}.cc-sdk .cc-message-box{position:relative;z-index:11}.cc-sdk .cc-message-box__text{color:#424242;font-size:14px;font-weight:600;margin:0;padding:29px 14px 20px;vertical-align:middle}.cc-sdk .cc-message-box__btn{background:#fdaf19;border-radius:100px;display:inline-block;font-size:15px;font-weight:700;height:32px;padding:6px 0;width:124px;text-align:center}.cc-sdk.cc-popup-container .cc-popup-container__close{cursor:pointer;margin:4px;position:absolute;right:0;top:0;z-index:111}.cc-sdk .cc-popup-container-2{height:144px;position:fixed;width:100%;z-index:1111}.cc-sdk .cc-popup-container-2.bottom{bottom:0}.cc-sdk .cc-popup-container-2__icons{cursor:pointer;padding:8px;position:absolute;top:0;z-index:111}.cc-sdk .top.cc-popup-container-2 .cc-popup-container-2__icons{padding-top:15px}.cc-sdk .cc-popup-container-2__icons.cc-right-icon{right:0}.cc-sdk .cc-popup-container-2__icons.cc-left-icon{left:0}.cc-sdk .cc-popup-container__back{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);display:inline-block;width:21px;height:21px}.cc-sdk .cc-question-container{padding:20px 20px 25px;position:absolute;text-align:center;width:100%;z-index:11;top:0;left:0}.cc-sdk .cc-question-container__text{color:#424242;display:inline-block;font-size:15px;font-weight:600;max-width:230px;padding:8px 0;text-align:center;vertical-align:middle;width:20%;position:relative}.cc-sdk .cc-question-container__text p{word-break:break-word}.cc-sdk .cc-question-container[data-type=csat] .cc-question-container__text{width:11em}.cc-sdk .cc-question-container[data-type=csat] .cc-question-container__list{width:64vw}.cc-sdk .cc-question-container__required,.cc-sdk .cc-question-container__validation{position:absolute;top:-14px;font-size:11px;left:0;width:100%;right:0;font-weight:400;color:#c1272d;display:none}.cc-sdk .cc-question-container__required-label{display:inline-block;position:relative;top:-2px;left:-2px}.cc-sdk .cc-question-container__content{display:inline-block;max-width:78%;vertical-align:middle;width:auto}.cc-sdk .cc-question-container__list li{display:inline-block;padding-left:29px;vertical-align:middle}.cc-sdk .cc-question-container__list li span{display:table-cell;font-size:15px;padding-left:15px;text-align:left;vertical-align:middle;width:125px}.cc-sdk .cc-question-container__list li input{vertical-align:middle}.cc-sdk .cc-question-container:before{content:\\\"\\\";display:inline-block;height:100%;margin-right:-4px;vertical-align:middle}.cc-sdk .cc-question-container{height:100%;vertical-align:middle}.cc-sdk .cc-questions-container{height:100%}.cc-sdk p.cc-thankyou-powered{font-size:13px!important;color:#404040!important;font-style:italic;margin-top:4px}.cc-sdk p.cc-thankyou-powered.no-branding{display:none}.cc-sdk .cc-thankyou-powered .cc-thankyou-logo{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/cc-thankyou-logo.svg\\\");background-size:cover;margin-right:8px;display:inline-block;width:16px;height:16px}.cc-sdk .multiline-box{background:#fff;border-radius:2px;border:1px solid #6d6d6d;font-family:Open Sans;font-size:15px;height:70px;margin:0 0 0 50px;min-width:600px;padding:2px 5px;resize:none}.cc-sdk .multiline-box:focus{outline:0}.cc-sdk .detail-box .cc-question-container__text p{font-size:13px;font-weight:700}.cc-sdk .detail-box .cc-question-container__text span{display:inline-block;font-size:15px;font-weight:400}.cc-sdk .detail-box .cc-question-container__text{height:56px}.cc-sdk .detail-box[data-type=singleline] .cc-question-container__text{margin-right:20px}.cc-sdk .detail-box .cc-question-container__content .cc-sdk-form-control,.cc-sdk .single-line .cc-question-container__content .cc-sdk-form-control{background:transparent;border:none;border-bottom:1px solid #6d6d6d;font-family:open sans;font-size:15px;line-height:26px;outline:0;width:300px;margin-left:70px}.cc-sdk .d-star-box.detail-box .cc-question-container__text{height:92px}.cc-sdk .hl.dropdown{background-image:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/arrow-down.black.svg\\\");background-position:97%;background-repeat:no-repeat;border-bottom:1px solid #6d6d6d;display:inline-block;padding:5px;position:relative;text-align:left;width:300px}.cc-sdk .drop-cc-question-container .cc-question-container__text{margin-right:20px}.cc-sdk .cc-sdk-form-control:focus{border-color:#fcaf18}.cc-sdk .detail-box .cc-question-container__content{padding-left:0}.cc-sdk .cc-big-list-container .cc-question-container__list{display:table;width:100%}.cc-sdk .cc-big-list-container .cc-question-container__list li{display:table-cell;vertical-align:middle}.cc-sdk .cc-thankyou-container{width:100%!important}.cc-sdk .submit-icon{direction:ltr;position:absolute;right:0;top:0;bottom:0;margin:auto 0;z-index:11;margin-right:75px;font-size:16px;cursor:pointer;width:47px;height:47px}@media (min-width:1000px){.cc-sdk .cc-big-list-container .cc-question-container__list li span label{overflow:hidden;max-height:100px;display:block}}@media (min-width:769px) and (max-width:875px){.cc-sdk .cc-question-container__list li{padding-left:0!important}}@media (min-width:769px) and (max-width:1024px){.cc-sdk .cc-popup-container-2{height:200px}.cc-sdk .cc-big-list-container .cc-question-container__list,.cc-sdk .cc-question-container__list{text-align:left}.cc-sdk .cc-big-list-container .cc-question-container__list li,.cc-sdk .cc-question-container__list li{display:inline-block;margin-bottom:15px;vertical-align:middle;width:49%}.cc-sdk .cc-question-container__content{display:inline-block;width:45%}.cc-sdk .multiline-box{min-width:100%;margin:0}.cc-sdk .option-smile-box img,.cc-sdk .option-star-box img{margin-right:11px!important}.cc-sdk .cc-thankyou-container .cc-question-container__text,.cc-sdk .cc-thankyou-container .cc-question-container__text p{width:100%!important;text-align:center;margin:0!important;padding:0;line-height:normal;height:auto}.cc-sdk .cc-thankyou-container .cc-question-container__text{max-width:98%}}@media (min-width:1000px){.cc-sdk .cc-question-container__text p{max-height:100px;overflow:hidden;max-width:140ch}.cc-sdk .cc-question-container__text p.ellipsis:after{content:\\\"...\\\";text-align:right;bottom:9px;right:-3px;width:12px;display:block;position:absolute;height:1.2em}}@media (min-width:769px) and (max-width:992px){.cc-sdk .cc-question-container{width:100%;margin:auto}.cc-sdk .cc-question-container__text{width:24%;padding-right:20px}.cc-sdk .cc-question-container__text p{max-height:110px;overflow:hidden}.cc-sdk .cc-question-container__content.rating-color{margin-left:0}.cc-sdk .submit-icon{margin-right:40px!important}.cc-sdk .cc-question-container__content.rating-color{margin-left:0!important}.cc-sdk .cc-question-container__content{width:50%!important}}@media (max-width:768px){.cc-sdk .cc-survey-container,.cc-sdk .cc-survey-content{height:100%}.cc-sdk .cc-popup-container-2{bottom:auto;height:100%;top:0}.cc-sdk .cc-popup-container-2__icons.cc-right-icon{left:auto;right:0;padding:0}.cc-sdk .cc-popup-container-2__icons.cc-left-icon{left:0;right:auto;padding:0}.cc-sdk .cc-big-list-container .cc-question-container__list li,.cc-sdk[dir=rtl] .cc-big-list-container .cc-question-container__list li{display:block}.cc-sdk .radio-toggle--more-option li span{width:84%!important;padding-left:25px!important}.cc-sdk .radio-toggle--more-option li{padding-right:0!important;display:block!important;padding-top:10px}.cc-sdk .detail-box .cc-question-container__content{padding-left:0}.cc-sdk .cc-question-container{bottom:75px;height:auto;left:0;padding:40px 20px;position:absolute;text-align:left;top:auto;width:100%}.cc-sdk .cc-question-container__text{font-size:18px;margin-bottom:20px;max-width:400px;text-align:left;width:100%}.cc-sdk .cc-question-container__content{display:block;max-width:100%;width:100%}.cc-sdk .cc-question-container__list label{display:block}.cc-sdk .cc-question-container__list li span{width:auto;padding-left:15px}.cc-sdk .cc-question-container__list li{padding-left:0;margin-bottom:10px;display:block}.cc-sdk .cc-popup-container-2__icons{margin:20px}.cc-sdk .cc-popup-container-2__icons.left-icon{left:auto;right:0}.cc-sdk .cc-popup-container-2__icons.right-icon{right:auto;left:0}.cc-sdk .cc-popup-container__close{width:27px}.cc-sdk .cc-question-container__content.rating-color{margin-left:0!important}.cc-sdk .cc-question-container[data-type=nps] .cc-question-container__content,.cc-sdk .cc-question-container[data-type=scale] .cc-question-container__content{width:100%!important}.cc-sdk .multiline-box{height:150px;margin:0;min-width:100%;width:100%}.cc-sdk .detail-box .cc-question-container__content .cc-sdk-form-control,.cc-sdk .hl.dropdown{width:100%}.cc-sdk .detail-box .cc-question-container__text p{font-size:18px}.cc-sdk .mobile-detail-box .cc-question-container__text{height:auto}.cc-sdk .cc-question-container__text p{max-height:auto}.cc-sdk .welcome-box .cc-question-container__text p{color:#fff}.cc-sdk .cc-questions-container{height:100%;position:relative}.cc-sdk .cc-message-box__btn{margin-left:20px}}@media (max-width:768px){.cc-sdk .detail-box .cc-question-container__content .cc-sdk-form-control,.cc-sdk .single-line .cc-question-container__content .cc-sdk-form-control{margin-left:0}.cc-sdk .submit-icon{position:absolute;left:20px;top:auto;bottom:30px;padding-right:0}.cc-sdk.cc-popup-container{position:fixed;bottom:0;left:0;right:0;margin:0!important;width:100%;height:13em;max-width:100%;max-height:100%;text-align:left;background:transparent}.cc-sdk.cc-popup-container .cc-message-box{position:absolute;bottom:20%}.cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text{font-size:20px}.cc-sdk.cc-popup-container .cc-message-box .submit-icon{position:absolute;bottom:-100%;top:auto;left:0;margin:0 14px}.cc-sdk.cc-popup-container .cc-popup-container__close{margin:20px;right:0;top:0}.cc-sdk.cc-popup-container__back{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);display:inline-block;width:27px;height:27px;background-size:100%}.cc-sdk .cc-thankyou-container .cc-question-container__text,.cc-sdk .cc-thankyou-container .cc-question-container__text p{width:100%!important;text-align:center;margin:0!important;padding:0;line-height:normal;height:auto}.cc-sdk .cc-thankyou-container .cc-question-container__text{max-width:98%}}[dir=rtl].cc-sdk ul{padding-right:0}[dir=rtl].cc-sdk.cc-popup-container .cc-popup-container__close{right:auto;left:0;top:0}[dir=rtl].cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text{text-align:right}[dir=rtl].cc-sdk .cc-popup-container__back{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_rtl_.svg)}[dir=rtl].cc-sdk .cc-popup-container-2__icons.cc-right-icon{right:auto;left:0}[dir=rtl].cc-sdk .cc-popup-container-2__icons.cc-left-icon{right:0;left:auto}[dir=rtl].cc-sdk.cc-question-container{margin-left:0;margin-right:0;right:0;left:auto}[dir=rtl].cc-sdk .cc-question-container__required,[dir=rtl].cc-sdk .cc-question-container__validation{right:0;left:auto}[dir=rtl].cc-sdk .cc-question-container__required-label{top:-2px;right:-2px;left:auto}[dir=rtl].cc-sdk .cc-question-container__list li{display:inline-block;padding-right:15px!important;padding-left:15px!important;vertical-align:middle}[dir=rtl].cc-sdk .cc-question-container[data-type=checkbox] .cc-question-container__list li{padding-right:0!important}[dir=rtl].cc-sdk .cc-question-container__list li span{padding-right:15px;padding-left:0;text-align:right}[dir=rtl].cc-sdk .cc-question-container:before{margin-left:-4px;margin-right:0}[dir=rtl].cc-sdk .multiline-box{margin:0 50px 0 0}[dir=rtl].cc-sdk .hl.dropdown{background-position:97%;text-align:right}[dir=rtl].cc-sdk .drop-cc-question-container .cc-question-container__text{margin-left:20px;margin-right:0}[dir=rtl].cc-sdk .detail-box .cc-question-container__content{padding-right:0;padding-left:0}[dir=rtl].cc-sdk .cc-question-container__content{text-align:right}@media (min-width:769px) and (max-width:1024px){[dir=rtl].cc-sdk .cc-big-list-container .cc-question-container__list,[dir=rtl].cc-sdk .cc-question-container__list{text-align:right}[dir=rtl].cc-sdk .multiline-box{margin:0}}@media (min-width:769px) and (max-width:992px){[dir=rtl].cc-sdk .cc-question-container__text{padding-left:20px;padding-right:0}[dir=rtl].cc-sdk .cc-question-container__content.rating-color{margin-left:0;margin-right:0}}@media (max-width:768px){[dir=rtl].cc-sdk .cc-popup-container-2__icons.cc-right-icon{left:0;right:auto}[dir=rtl].cc-sdk .cc-popup-container-2__icons.cc-left-icon{left:auto;right:0}[dir=rtl].cc-sdk .radio-toggle--more-option li span{padding-right:25px!important;padding-left:0!important}[dir=rtl].cc-sdk .radio-toggle--more-option li{padding-right:0!important;padding-left:0!important}[dir=rtl].cc-sdk .detail-box .cc-question-container__content{padding-left:0;padding-right:0}[dir=rtl].cc-sdk .cc-question-container{left:auto;right:0}[dir=rtl].cc-sdk .multiline-box{margin:0}[dir=rtl].cc-sdk .cc-question-container__text{text-align:right;width:100%;margin-right:5px;max-width:100%}[dir=rtl].cc-sdk .cc-question-container__list li span{padding-right:15px;padding-left:0}[dir=rtl].cc-sdk .cc-question-container__list li{padding-left:0;padding-right:0}[dir=rtl].cc-sdk .cc-popup-container-2__icons.left-icon{left:0;right:auto}[dir=rtl].cc-sdk .cc-popup-container-2__icons.right-icon{right:0;left:auto}[dir=rtl].cc-sdk .cc-question-container__content.rating-color{margin-left:0!important;margin-right:0!important}}.cc-sdk .option-number-item{color:#fff;float:left;font-size:13px;height:38px;box-sizing:border-box;padding-top:10px;text-align:center;width:8.5%;margin-left:1px;margin-right:0;cursor:pointer}.cc-sdk .option-number-item.option-zero{background:#853838}.cc-sdk .option-number-item.option-zero.selected,.cc-sdk .option-number-item.option-zero:hover{background:#572526}.cc-sdk .option-number-item.option-one{background:#9e4343}.cc-sdk .option-number-item.option-one.selected,.cc-sdk .option-number-item.option-one:hover{background:#642728}.cc-sdk .option-number-item.option-two{background:#c14d4d}.cc-sdk .option-number-item.option-two.selected,.cc-sdk .option-number-item.option-two:hover{background:#712827}.cc-sdk .option-number-item.option-three{background:#d94d4d}.cc-sdk .option-number-item.option-three.selected,.cc-sdk .option-number-item.option-three:hover{background:#7c2828}.cc-sdk .option-number-item.option-four{background:#ee4d4d}.cc-sdk .option-number-item.option-four.selected,.cc-sdk .option-number-item.option-four:hover{background:#852828}.cc-sdk .option-number-item.option-five{background:#ff4d4d}.cc-sdk .option-number-item.option-five.selected,.cc-sdk .option-number-item.option-five:hover{background:#844828}.cc-sdk .option-number-item.option-six{background:#ff8c4d}.cc-sdk .option-number-item.option-six.selected,.cc-sdk .option-number-item.option-six:hover{background:#844828}.cc-sdk .option-number-item.option-seven{background:#ffc74d}.cc-sdk .option-number-item.option-seven.selected,.cc-sdk .option-number-item.option-seven:hover{background:#856728}.cc-sdk .option-number-item.option-eight{background:#f5eb4d}.cc-sdk .option-number-item.option-eight.selected,.cc-sdk .option-number-item.option-eight:hover{background:#7f7a28}.cc-sdk .option-number-item.option-nine{background:#73ca81}.cc-sdk .option-number-item.option-nine.selected,.cc-sdk .option-number-item.option-nine:hover{background:#3b6942}.cc-sdk .option-number-item.option-ten{background:#4db47c}.cc-sdk .option-number-item.option-ten.selected,.cc-sdk .option-number-item.option-ten:hover{background:#285e40}.cc-sdk .option-number-item.option-7-scale-1,.cc-sdk .option-number-item.option-7-scale-2,.cc-sdk .option-number-item.option-7-scale-3{background:#ed534f}.cc-sdk .option-number-item.option-7-scale-4,.cc-sdk .option-number-item.option-7-scale-5{background:#ffbc00}.cc-sdk .option-number-item.option-7-scale-6,.cc-sdk .option-number-item.option-7-scale-7{background:#4db47c}.cc-sdk .option-number-item.option-5-scale-1,.cc-sdk .option-number-item.option-5-scale-2{background:#ed534f}.cc-sdk .option-number-item.option-5-scale-3{background:#ffbc00}.cc-sdk .option-number-item.option-5-scale-4,.cc-sdk .option-number-item.option-5-scale-5{background:#4db47c}.cc-sdk .cc-question-container[data-type=nps] .option-number-item{width:calc(9.09% - 1px)}.cc-sdk .cc-question-container[data-type=scale].scale-image-container .option-number-item{width:8.4%}.cc-sdk .cc-question-container__content.rating-color{margin-left:74px}.cc-sdk .option-left-rating-text,.cc-sdk .option-right-rating-text{color:#424242;font-size:13px;left:0;position:absolute}.cc-sdk .option-left-rating-text-small-container{max-width:57px;text-align:left;max-height:37px;overflow:hidden}.cc-sdk .option-right-rating-text-small-container{max-width:57px;text-align:right;max-height:37px;overflow:hidden}.cc-sdk .option-left-rating-text-small-container-smile{width:40%;text-align:left;max-height:37px;overflow:hidden;bottom:auto!important;top:57px}.cc-sdk .option-right-rating-text-small-container-smile{width:40%;text-align:right;max-height:37px;overflow:hidden;bottom:auto!important;top:57px}.cc-sdk .cc-question-container[data-type=smile] .option-left-rating-text,.cc-sdk .cc-question-container[data-type=star] .option-left-rating-text{left:4px;width:40%;text-align:left}.cc-sdk .option-right-rating-text{left:auto;right:0}.cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,.cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{text-align:right;width:40%}.cc-sdk .cc-question-container[data-type=scale] .option-number-item{width:38px;margin:0 .5px;cursor:pointer;display:inline-block;float:none}.cc-sdk .cc-question-container[data-type=scale] .cc-question-container__list{display:inline-block;width:auto;position:relative}.cc-sdk .cc-question-container[data-type=scale].scale-image-container .cc-question-container__list{width:100%}.cc-sdk .rating-color{position:relative}.cc-sdk .option-smile-box,.cc-sdk .option-star-box{height:60px;margin-right:29px;width:60px;cursor:pointer;box-sizing:border-box;border:4px solid transparent;border-radius:50%;display:inline-block;background-size:100%}.cc-sdk:not([dir=rtl]) .option-smile-box:nth-child(5),.cc-sdk:not([dir=rtl]) .option-star-box:nth-child(5),.cc-sdk[dir=rtl] .option-smile-box:first-child,.cc-sdk[dir=rtl] .option-star-box:first-child{margin-right:0}.cc-sdk .option-smile-box.cc-one{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-two{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-three{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-four{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-five{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-one.selected,.cc-sdk .option-smile-box.cc-one:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-two.selected,.cc-sdk .option-smile-box.cc-two:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-three.selected,.cc-sdk .option-smile-box.cc-three:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-four.selected,.cc-sdk .option-smile-box.cc-four:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-five.selected,.cc-sdk .option-smile-box.cc-five:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .cc-csat.cc-question-container__content.rating-color{margin-left:45px}.cc-sdk .option-csat.option-smile-box,.cc-sdk .option-csat.option-smile-box.selected,.cc-sdk .option-csat.option-smile-box:hover{background-size:25px;background-position:18px}.cc-sdk .option-csat{height:30px;margin-right:68px;width:30px;padding-left:50px;height:45px;margin-right:0;width:auto;padding-left:0;font-size:14px;vertical-align:middle;display:inline-block;margin-right:13px}.cc-sdk .option-csat span{display:inline-block;vertical-align:top;font-size:12px;padding-left:25px;position:relative;text-align:left;width:100%}.cc-sdk .option-csat .cc-checkbox label{pointer-events:none}.cc-sdk .option-star-box{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-star-box.selected,.cc-sdk .option-star-box:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star_selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .cc-question-container[data-type=slider] .option-left-rating-text{left:4px;width:40%;text-align:left}.cc-sdk .cc-question-container[data-type=slider] .option-right-rating-text{width:40%;text-align:right}.cc-sdk .cc-question-container[data-type=smile] .cc-question-container__list,.cc-sdk .cc-question-container[data-type=star] .cc-question-container__list{position:relative;width:auto;display:inline-block}.cc-sdk .circle-image{margin:auto;width:253px;overflow:hidden;height:240px;position:relative}.cc-sdk .circle-image-scale-010-neutral{width:242px;overflow:hidden;height:230px;margin:auto}.cc-sdk .cc-nps-selected-rating{font-size:100px;display:inline-block;position:absolute;top:0;left:0;line-height:100px;right:0;margin:auto;bottom:0;width:110px;height:100px;text-align:center;font-weight:100;color:#bbb}.cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,.cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{right:4px}.cc-sdk .option-number-item.option-scale{background:#4db47c}.cc-sdk .option-number-item.option-scale.selected,.cc-sdk .option-number-item.option-scale:hover{background:#712827}.cc-sdk .cc-nps-image{cursor:pointer;position:relative;left:0}.cc-sdk .legend-container{position:relative}@media (min-width:769px) and (max-width:992px){.cc-sdk .option-smile-box,.cc-sdk .option-star-box{width:50px;height:50px;margin-right:10px}.cc-sdk .option-csat.option-smile-box,.cc-sdk .option-csat.option-smile-box.selected,.cc-sdk .option-csat.option-smile-box:hover{display:inline-block;width:168px;background-position:48px}.cc-sdk .option-csat.option-smile-box.selected span,.cc-sdk .option-csat.option-smile-box:hover span,.cc-sdk .option-csat.option-smile-box span{padding-left:40px}}@media screen and (min-width:992px){.cc-sdk span.option-csat.option-smile-box,.cc-sdk span.option-csat.option-smile-box.selected,.cc-sdk span.option-csat.option-smile-box:hover{background-position:44px}.cc-sdk span.option-csat.option-smile-box span{padding-left:40px}}@media (max-width:768px){.cc-sdk .option-smile-box,.cc-sdk .option-star-box{display:inline-block;margin-right:3px}.cc-sdk .option-csat.option-smile-box,.cc-sdk .option-csat.option-smile-box.selected,.cc-sdk .option-csat.option-smile-box:hover{display:block;background-size:40px;background-position:45px}.cc-sdk .option-csat.option-smile-box{height:65px;width:100%}.cc-sdk .option-csat.option-smile-box span{font-size:15px;padding-left:40px}.cc-sdk .option-csat.option-smile-box .cc-checkbox{top:calc(50% - 12.5px);height:57px}.cc-sdk .option-csat.option-smile-box .cc-checkbox.cc-radio label:before,.cc-sdk .option-csat.option-smile-box .cc-checkbox input[type=radio]:checked+label:after{width:25px;height:25px}.cc-sdk .option-number-item{color:#fff;float:left;font-size:15px;height:35px;box-sizing:border-box;margin-right:1px;padding-top:7px;text-align:center;width:38px;cursor:pointer;vertical-align:middle}.cc-sdk .cc-question-container[data-type=scale]{bottom:106px}.cc-sdk .cc-question-container[data-type=scale] .option-left-rating-text,.cc-sdk .cc-question-container[data-type=scale] .option-right-rating-text{width:auto}.cc-sdk .cc-question-container[data-type=scale] .option-right-rating-text{text-align:right}.cc-sdk .option-smile-box img,.cc-sdk .option-star-box img{padding-right:5px;margin-right:0}.cc-sdk .cc-question-container[data-type=nps] .cc-question-container__content{width:100%!important}.cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,.cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{right:10px}.cc-sdk .cc-question-container[data-type=csat] .cc-question-container__list li,.cc-sdk .cc-question-container[data-type=scale] .cc-question-container__list{width:100%}}@media (max-width:381px){.cc-sdk .option-smile-box,.cc-sdk .option-star-box{display:inline-block;margin-right:0;height:50px;width:50px}.cc-sdk .option-smile-box img,.cc-sdk .option-star-box img{padding-right:5px;margin-right:0}}@media screen and (max-width:768px){.cc-sdk .cc-question-container[data-type=scale] span.radial-legend-right,.cc-sdk .radial-legend-right{text-align:left;width:35%;right:0}.cc-sdk .radial-legend-left{width:35%;text-align:right;left:0}}[dir=rtl].cc-sdk .cc-question-container[data-type=csat] .cc-question-container__content.rating-color{margin-right:45px;margin-left:0}[dir=rtl].cc-sdk .cc-question-container[data-type=csat] .cc-checkbox input[type=radio]{margin-right:0;opacity:0;outline:0}[dir=rtl].cc-sdk .option-number-item{margin-right:1px;margin-left:0;float:right}[dir=rtl].cc-sdk .cc-question-container__content.rating-color{margin-right:74px;margin-left:0}[dir=rtl].cc-sdk .option-right-rating-text{left:calc(100% - 418px);right:auto!important}[dir=rtl].cc-sdk .option-left-rating-text{right:0;left:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=nps] .option-right-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=scale] .option-right-rating-text{left:0;right:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=scale] .option-left-rating-text{right:2px}[dir=rtl].cc-sdk .cc-question-container[data-type=slider] .option-right-rating-text{left:0;width:40%;text-align:left}[dir=rtl].cc-sdk .cc-question-container[data-type=slider] .option-left-rating-text{right:0;text-align:right}[dir=rtl].cc-sdk .rating-color{position:relative}[dir=rtl].cc-sdk .option-smile-box img{margin-right:29px;margin-left:0}[dir=rtl].cc-sdk .option-star-box img{margin-left:19px;margin-right:0}[dir=rtl].cc-sdk .option-csat.option-smile-box span{padding-right:25px;text-align:right;padding-left:0}[dir=rtl].cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{left:7px;right:auto!important;text-align:left}[dir=rtl].cc-sdk .cc-question-container[data-type=smile] .option-left-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=star] .option-left-rating-text{right:7px;left:auto!important;text-align:right}[dir=rtl].cc-sdk .option-csat{width:auto;box-sizing:border-box;padding-left:0;margin-right:13px}[dir=rtl].cc-sdk .option-csat.option-smile-box,[dir=rtl].cc-sdk .option-csat.option-smile-box.selected,[dir=rtl].cc-sdk .option-csat.option-smile-box:hover{background-position:calc(100% - 44px) 50%;text-align:right}@media (min-width:769px) and (max-width:992px){[dir=rtl].cc-sdk .option-smile-box img,[dir=rtl].cc-sdk .option-star-box img{margin-left:0;margin-right:10px}[dir=rtl].cc-sdk .cc-question-container__content.rating-color{margin-right:10px;margin-left:86px!important}[dir=rtl].cc-sdk .cc-question-container[data-type=nps] .option-right-rating-text{left:17px;right:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{left:7px;text-align:left;right:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=smile] .option-left-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=star] .option-left-rating-text{right:20px;left:auto!important;text-align:right}[dir=rtl].cc-sdk .option-csat.option-smile-box,[dir=rtl].cc-sdk .option-csat.option-smile-box.selected,[dir=rtl].cc-sdk .option-csat.option-smile-box:hover{width:auto}}@media (max-width:768px){[dir=rtl].cc-sdk .option-smile-box img,[dir=rtl].cc-sdk .option-star-box img{padding-right:0;padding-left:5px;margin-right:0;margin-left:0}[dir=rtl].cc-sdk .cc-question-container[data-type=csat] .cc-checkbox input[type=radio]{margin-right:7px;opacity:0;outline:0}[dir=rtl].cc-sdk .option-csat.option-smile-box,[dir=rtl].cc-sdk .option-csat.option-smile-box.selected,[dir=rtl].cc-sdk .option-csat.option-smile-box:hover{background-position:calc(100% - 44px) 50%}[dir=rtl].cc-sdk .option-csat.option-smile-box span{padding-right:39px;text-align:right;padding-left:0}[dir=rtl].cc-sdk .cc-question-container[data-type=smile] .option-left-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=star] .option-left-rating-text,[dir=rtl].cc-sdk .option-left-rating-text{right:10px;left:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{right:auto!important}[dir=rtl].cc-sdk .option-right-rating-text{left:calc(100% - 322px);right:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=scale] .option-right-rating-text{left:13px;right:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=nps] .radial-legend-right,[dir=rtl].cc-sdk .cc-question-container[data-type=scale] .radial-legend-right{left:auto!important;right:10px!important}[dir=rtl].cc-sdk .cc-question-container[data-type=nps] .radial-legend-left,[dir=rtl].cc-sdk .cc-question-container[data-type=scale] .radial-legend-left{right:auto!important;left:10px!important}}@media (max-width:381px){[dir=rtl].cc-sdk .option-right-rating-text{left:calc(100% - 258px);right:auto!important}}.cc-sdk .cc-select-wrapper{position:relative;display:inline-block;user-select:none;z-index:11}.cc-sdk .cc-select-wrapper select{display:none}.cc-sdk .cc-select{position:relative;display:inline-block;margin-left:70px}.cc-sdk .cc-select-trigger{display:block;width:130px;padding:0 84px 0 22px;font-size:15px;font-style:italic;font-weight:300;color:#222;line-height:20px;background:transparent;border-radius:0;cursor:pointer;width:300px;border-bottom:1px solid #6d6d6d;display:inline-block;text-align:left;padding:5px 20px 5px 5px;position:relative;background-position:97%;background-repeat:no-repeat;max-height:50px;overflow:hidden}.cc-sdk .cc-select-trigger:after{position:absolute;display:block;content:\\\"\\\";width:10px;height:10px;top:50%;right:5px;margin-top:-3px;border-bottom:1px solid #222;border-right:1px solid #222;transform:rotate(45deg) translateY(-50%);transition:all .2s ease-in-out;transform-origin:50% 0}.cc-sdk .cc-select.opened .cc-select-trigger:after{margin-top:3px;transform:rotate(-135deg) translateY(-50%)}.cc-sdk .cc-select-options-container{position:absolute;display:block;top:100%;left:0;right:0;min-width:100%;margin:15px 0;border:1px solid #b5b5b5;border-radius:4px;box-sizing:border-box;box-shadow:0 2px 1px rgba(0,0,0,.07);background:#fff;transition:all .2s ease-in-out;opacity:0;visibility:hidden;pointer-events:none;transform:translateY(calc(-100% - 65px));height:auto;max-height:150px;overflow:hidden;overflow-y:scroll}.cc-sdk .cc-select-options{overflow-y:scroll;height:100%;width:110%}.cc-sdk .cc-select.opened .cc-select-options-container{opacity:1;visibility:visible;pointer-events:all;transform:translateY(-100%) translateY(-65px)}@media (min-width:769px){.cc-sdk .cc-popup-container-2.top .cc-select-options-container,.cc-sdk .cc-popup-container-2.top .cc-select.opened .cc-select-options-container{transform:translateY(-19px)}}.cc-sdk .option-hover:before{background:#f9f9f9}.cc-sdk .cc-select-option{position:relative;display:block;padding:0 12px;border-bottom:1px solid #e4e4e4;font-size:12px;font-weight:600;color:#222;line-height:34px;cursor:pointer;transition:all .2s ease-in-out;text-align:left;margin:0;width:100%}.cc-sdk .cc-select-option:first-of-type{border-radius:4px 4px 0 0}.cc-sdk .cc-select-option:last-of-type{border-bottom:0;border-radius:0 0 4px 4px}.cc-sdk .cc-select-option.selection,.cc-sdk .cc-select-option:hover{background:#eaeaea}.cc-sdk .cc-select-wrapper.down .cc-select-options-container,.cc-sdk .cc-select-wrapper.down .cc-select.opened .cc-select-options-container{transform:translateY(20px)}.cc-sdk .cc-question-container[data-type=nps] .cc-question-container__content,.cc-sdk .cc-question-container[data-type=scale] .cc-question-container__content{width:40%}@media (max-width:768px){.cc-sdk .cc-select,.cc-sdk .cc-select-wrapper{min-width:100%}.cc-sdk .cc-select{margin-left:0}.cc-sdk .cc-select-trigger{min-width:100%;width:auto}}[dir=rtl].cc-sdk .cc-select-trigger{padding:0 22px 0 84px;background-position:97%;background-repeat:no-repeat;text-align:right}[dir=rtl].cc-sdk .cc-select-trigger:after{top:50%;left:2px;right:auto}[dir=rtl].cc-sdk .cc-select-option{text-align:right}[dir=rtl].cc-sdk .cc-select-option:first-of-type{border-radius:4px 0 0 4px}[dir=rtl].cc-sdk .cc-select-option:last-of-type{border-radius:0 4px 4px 0}.cc-sdk .cc-checkbox{display:table-cell;vertical-align:middle;position:relative;text-align:center}.cc-sdk .cc-checkbox label{cursor:pointer;display:block;height:25px}.cc-sdk .cc-checkbox+span label img{width:40px;display:inline-block;vertical-align:middle}.cc-sdk .cc-checkbox label:after,.cc-sdk .cc-checkbox label:before{content:\\\"\\\";left:0;margin:auto;position:absolute;top:calc(50% - 12.5px)}.cc-sdk .cc-checkbox label:before{background:transparent;border-radius:2px;border:1px solid #424242;cursor:pointer;height:20px;transition:background .3s;width:20px}.cc-sdk .cc-checkbox input[type=checkbox]{opacity:0;outline:0}.cc-sdk .cc-checkbox input[type=checkbox]:checked+label:before{background:#fdaf19;border:none}.cc-sdk .cc-checkbox input[type=checkbox]:checked+label:after{border:3px solid #222;border-right-style:none;border-top-style:none;height:7px;top:calc(50% - 8.5px);left:4px;transform:rotate(-45deg);width:12px}.cc-sdk .cc-checkbox.cc-radio label:before{background:transparent;border:1px solid #424242;cursor:pointer;height:25px;transition:background-color .3s;width:25px}.cc-sdk .cc-checkbox input[type=radio]{opacity:0;outline:0}.cc-sdk .cc-checkbox input[type=radio]:checked+label:before{background:transparent;border-color:#fdaf19}.cc-sdk .cc-question-container__list li{display:inline-table;margin-bottom:0}.cc-sdk .cc-question-container__list li .cc-radio,.cc-sdk .cc-question-container__list li .cc-sdk .cc-checkbox{width:30px}.cc-sdk .cc-checkbox input[type=radio]:checked+label:after{-moz-transform:scale(.8);-ms-transform:scale(.8);-o-transform:scale(.8);-webkit-transform:scale(.8);background:#fdaf19;border-radius:30px;height:25px;transform:scale(.8);width:25px}.cc-sdk .cc-radio label:before{border-radius:30px}.cc-sdk .radio-toggle--more-option li span{padding-left:25px!important;width:125px!important}.cc-sdk .radio-toggle .cc-question-container__list li{padding-left:15px}@media (min-width:1000px){.cc-sdk .radio-toggle .cc-question-container__list li span label{overflow:hidden;max-height:100px;display:block}}@media (min-width:769px) and (max-width:992px){.cc-sdk .radio-toggle .cc-question-container__list li{padding-left:10px}.cc-sdk .radio-toggle .cc-question-container__list li span .label,.cc-sdk .radio-toggle .cc-question-container__list li span label{display:block;max-height:50px;overflow:hidden;text-overflow:ellipsis}}@media (max-width:768px){.cc-sdk .radio-toggle .cc-question-container__list li{padding-left:0;display:block;padding-right:50px}}.cc-sdk .progress-bar{width:100%;position:absolute;background:#a47c2b;z-index:1;height:8px;left:0}.cc-sdk .progress-line{background:#fdaf19;height:100%;display:block;width:0;transition:all .4s ease-in}.cc-sdk .cc-scrollbar-wrapper{float:left;height:100%;overflow:hidden;position:relative;width:100%;z-index:1}.cc-sdk .cc-scrollbar-content{box-sizing:border-box;height:100%;overflow:auto;position:relative;width:107%}.cc-sdk .cc-scrollbar-scroll{background:#aaa;border-radius:4px;cursor:pointer;opacity:0;position:relative;top:0;transition:opacity .25s linear;width:9px;z-index:2}.cc-sdk .cc-scrollbar-container:hover .cc-scrollbar-scroll{opacity:1}.cc-sdk .cc-scrollbar-grabbed{-moz-user-select:none;-o-user-select:none;-webkit-user-select:none;user-select:none}.cc-sdk .cc-sdk-range{-webkit-appearance:none;-moz-appearance:none;width:500px;height:60px;background:transparent}.cc-sdk input[type=range]::-webkit-slider-runnable-track{-webkit-appearance:none;background:#ff403d;background:linear-gradient(135deg,#ff403d,#992a28);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=\\\"#ff403d \\\",endColorstr=\\\"#992a28 \\\",GradientType=1);height:1px}.cc-sdk input[type=range]:focus{outline:none}.cc-sdk input[type=range]::-moz-range-track{-moz-appearance:none;background:#ff403d;background:linear-gradient(135deg,#7a0806,#992a28);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=\\\"#ff403d \\\",endColorstr=\\\"#992a28 \\\",GradientType=1);height:1px}.cc-sdk input[type=range]::-ms-track{height:1px;width:500px;background-color:#ff403d}.cc-sdk input[type=range]::-webkit-slider-thumb{-webkit-appearance:none;border:1px solid #ff403d;border-radius:50%;height:32px;width:32px;max-width:80px;position:relative;bottom:16px;background-color:#fff;cursor:-webkit-grab}.cc-sdk input[type=range]::-ms-thumb{border:1px solid #ff403d;border-radius:50%;height:32px;width:32px;background:#e08692;box-sizing:border-box;cursor:pointer!important}.cc-sdk input[type=range]::-moz-range-thumb{-moz-appearance:none;border:1px solid #ff403d;border-radius:50%;height:32px;width:32px;max-width:80px;position:relative;bottom:16px;background-color:#fff;cursor:-moz-grab}.cc-sdk input[type=range]::-moz-range-thumb:before{content:\\\"asd\\\"}.cc-sdk input[type=range]::-webkit-slider-thumb:active{cursor:-webkit-grabbing}.cc-sdk input[type=range]::-moz-range-thumb:active{cursor:-moz-grabbing}.cc-sdk .cc-question-container__content.cc-sdk-range-slider{height:50px}.cc-sdk .slider-tip{background:#eb1c23;padding:8px 9px 9px;position:absolute;left:0;right:0;margin:0 auto;color:#fff;background:none;color:#424242;font-size:13px;width:100px;display:inline-block;text-align:center;font-weight:700}.cc-sdk .slider-tip:after{border-width:5px 5px 0;border-top-color:#000}@media (max-width:1024px){.cc-sdk .cc-sdk-range{width:100%}}.cc-sdk input.cc-sdk-range.cc-blue::-moz-range-track,.cc-sdk input.cc-sdk-range.cc-blue::-webkit-slider-runnable-track{background:blue}.cc-sdk .chart{box-sizing:border-box;display:inline-block;height:21px;padding-top:22px;position:relative;vertical-align:top;width:21px}.cc-sdk .cc-sdk-chart span{display:block;font-size:2em;font-weight:400}.cc-sdk .cc-sdk-chart canvas{left:0;position:absolute;top:0}.cc-sdk .cc-sdk-loader{height:21px;left:28px;position:absolute;top:8px;width:21px}@media (min-width:769px){.cc-sdk .cc-sdk-chart canvas{margin-left:10px}}@media (max-width:768px){.cc-sdk .cc-sdk-loader{position:relative;left:auto;top:0;right:auto}}[dir=rtl].cc-sdk .cc-sdk-chart canvas{right:0;left:auto}[dir=rtl].cc-sdk .cc-sdk-loader{right:28px;left:auto}@media (min-width:768px){[dir=rtl].cc-sdk .cc-sdk-chart canvas{margin-right:10px;margin-left:0}}.cc-sdk .show{display:block!important}.cc-sdk .show-inline{display:inline-block!important}.cc-sdk .hide{display:none!important}.cc-sdk.bottom{bottom:0}.cc-sdk.right,.cc-sdk .right{right:0}.cc-sdk .left{left:0}.cc-sdk .top{top:0}.ccsdk-overlay{background:#fff;bottom:0;height:100%;left:0;position:absolute;top:0;width:100%;z-index:0}.ccsdk-overlay.ccsdk-glass{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/ww.png);background-repeat:no-repeat;background-size:cover}.ccsdk-clearfix{clear:both;display:block}.ccsdk-text-normal{font-weight:400}.cc-sdk ::-webkit-input-placeholder{color:#4c4c4c;font-family:Open Sans;font-size:13px;font-style:italic;font-weight:400}.cc-sdk .cc-sdk-form-control::-moz-placeholder{font-style:italic;font-size:13px;font-weight:400;font-family:Open Sans;color:#4c4c4c}.cc-sdk .cc-sdk-form-control:-ms-input-placeholder{font-style:italic;font-size:13px;font-weight:400;font-family:Open Sans;color:#4c4c4c}.cc-sdk .cc-sdk-form-control:-moz-placeholder{font-style:italic;font-size:13px;font-weight:400;font-family:Open Sans;color:#4c4c4c}@media (min-width:769px){.desktop-hide{display:none}}@media (max-width:768px){.mobile-hide{display:none}.cc-sdk-loader{position:relative;left:auto;top:0;right:auto}.ccsdk-overlay.welcome-overlay{background:rgba(210,42,53,.87)}}[dir=rtl].cc-sdk .submit-icon{left:0;right:auto;margin-left:75px}@media (max-width:768px){[dir=rtl].cc-sdk .submit-icon{position:absolute;left:auto;top:auto;bottom:30px;padding-left:0;right:20px;margin:0}}.cc-sdk:before{width:0;height:0;overflow:hidden;position:absolute;z-index:-1}.cc-sdk .yellow .progress-bar{background:#a47c2b}.cc-sdk .yellow .progress-line{background:#fdaf19}.cc-sdk .yellow .submit-icon{background-image:url(\\\"data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%2747px%27%20height%3D%2747px%27%20viewBox%3D%270%200%2047%2047%27%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%3E%3Ctitle%3EGroup%2016%3C%2Ftitle%3E%3Cdesc%3ECreated%20with%20Sketch.%3C%2Fdesc%3E%3Cdefs%3E%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%3Cfilter%20x%3D%27-18.1%25%27%20y%3D%27-12.9%25%27%20width%3D%27136.2%25%27%20height%3D%27136.2%25%27%20filterUnits%3D%27objectBoundingBox%27%20id%3D%27filter-2%27%3E%3CfeOffset%20dx%3D%270%27%20dy%3D%272%27%20in%3D%27SourceAlpha%27%20result%3D%27shadowOffsetOuter1%27%3E%3C%2FfeOffset%3E%3CfeGaussianBlur%20stdDeviation%3D%272%27%20in%3D%27shadowOffsetOuter1%27%20result%3D%27shadowBlurOuter1%27%3E%3C%2FfeGaussianBlur%3E%3CfeColorMatrix%20values%3D%270%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200.116423234%200%27%20type%3D%27matrix%27%20in%3D%27shadowBlurOuter1%27%3E%3C%2FfeColorMatrix%3E%3C%2Ffilter%3E%3C%2Fdefs%3E%3Cg%20id%3D%27Page-1%27%20stroke%3D%27none%27%20stroke-width%3D%271%27%20fill%3D%27none%27%20fill-rule%3D%27evenodd%27%3E%3Cg%20id%3D%271-copy-20%27%20transform%3D%27translate(-1246.000000%2C%20-664.000000)%27%3E%3Cg%20id%3D%27Group-16%27%20transform%3D%27translate(1250.000000%2C%20666.000000)%27%3E%3Cg%20id%3D%27Oval-4%27%3E%3Cuse%20fill%3D%27white%27%20fill-opacity%3D%271%27%20filter%3D%27url(%23filter-2)%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3Cuse%20fill%3D%27%23d04a49%27%20fill-rule%3D%27evenodd%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3C%2Fg%3E%3Cg%20id%3D%27Group-5%27%20transform%3D%27translate(12.000000%2C%2011.000000)%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23FFFFFF%27%3E%3Cg%20id%3D%27fast-forward-arrows%27%20transform%3D%27translate(6.173934%2C%200.000000)%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3Cg%20id%3D%27fast-forward-arrows-copy%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\\\")}.cc-sdk .yellow .cc-checkbox input[type=checkbox]:checked+label:before{background:#fdaf19}.cc-sdk .yellow .cc-checkbox input[type=checkbox]:checked+label:after{border-color:#222}.cc-sdk .yellow .cc-checkbox input[type=radio]:checked+label:before{border-color:#fdaf19}.cc-sdk .yellow .cc-checkbox input[type=radio]:checked+label:after{background:#fdaf19}.cc-sdk .yellow .cc-sdk-form-control:focus{border-color:#fcaf18}.cc-sdk .yellow .cc-message-box__btn{background:#fdaf19}.cc-sdk .red .progress-bar{background:#d22a35}.cc-sdk .red .progress-line{background:#d22a35;filter:brightness(150%)}.cc-sdk .red .cc-checkbox input[type=checkbox]:checked+label:before{background:#d22a35}.cc-sdk .red .cc-checkbox input[type=checkbox]:checked+label:after{border-color:#fff}.cc-sdk .red .cc-checkbox input[type=radio]:checked+label:before{border-color:#d22a35}.cc-sdk .red .cc-checkbox input[type=radio]:checked+label:after{background:#d22a35}.cc-sdk .red .cc-sdk-form-control:focus{border-color:#d22a35}.cc-sdk .red .cc-message-box__btn{background:#d22a35;color:#fff}.cc-question-container,.hide-slide{transform:translateX(5px)}.cc-question-container,.hide-bottom-up,.hide-slide{transition:transform .3s ease,opacity .3s ease,visibility .3s ease;visibility:hidden;opacity:0}.hide-bottom-up{transform:translateY(30px)}.hide-up-bottom{transform:translateY(100%)}.hide-right-left,.hide-up-bottom{transition:transform .3s ease,opacity .3s ease,visibility .3s ease;visibility:hidden;opacity:0}.hide-right-left{transform:translateX(100%)}.hide-left-right{transform:translateX(-100%);visibility:hidden;opacity:0}.hide-left-right,.show-slide,.show-thankyou-slide{transition:transform .3s ease,opacity .3s ease,visibility .3s ease}.show-slide,.show-thankyou-slide{visibility:visible;opacity:1;transform:translateX(0) translateY(0)}.cc-sdk #timer{position:relative}.cc-sdk svg.cc-sdk-timer{position:absolute;top:0;left:0;width:40px;height:40px;transform:rotateY(-180deg) rotate(-90deg)}[dir=rtl].cc-sdk svg.cc-sdk-timer{right:0;left:auto}.cc-sdk svg.cc-sdk-timer circle{stroke-dasharray:50px;stroke-dashoffset:0px;stroke-linecap:round;stroke-width:2px;stroke:red;fill:none;animation:countdown 10s linear 1 forwards}@keyframes countdown{0%{stroke-dashoffset:0px}to{stroke-dashoffset:50px}}.cc-sdk .cc-loaderimg{position:absolute;width:100%;z-index:1000;left:0;right:0;top:0;height:100%;background:hsla(0,0%,100%,.8)}.cc-sdk .cc-loaderimg svg{width:100px}\", \"\"]);\n\n// exports\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function() {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\tvar result = [];\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar item = this[i];\n\t\t\tif(item[2]) {\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\n\t\t\t} else {\n\t\t\t\tresult.push(item[1]);\n\t\t\t}\n\t\t}\n\t\treturn result.join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(selector) {\n\t\tif (typeof memo[selector] === \"undefined\") {\n\t\t\tmemo[selector] = fn.call(this, selector);\n\t\t}\n\n\t\treturn memo[selector]\n\t};\n})(function (target) {\n\treturn document.querySelector(target)\n});\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton) options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n\tif (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\toptions.attrs.type = \"text/css\";\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\toptions.attrs.type = \"text/css\";\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","\r\nimport { LanguageTextFilter } from './LanguageTextFilter';\r\nimport { isAnd, doesSatisfy, isOr, checkLanguage } from './filter-utils';\r\n\r\nclass ConditionalTextFilter {\r\n  public static filterText( surveyHandler: any, question: any ): string {\r\n    let conditionalText = question.text == null ? '' : LanguageTextFilter.translateQuestionText( surveyHandler, question );\r\n    if ( question.text != null ) {\r\n      let conditionalText: string = question.text.split( ':' );\r\n      if ( question.setName && question.text.indexOf( \":\" ) !== -1 ) {\r\n        conditionalText = conditionalText[ 0 ] + ': <br><span class=\"text-normal\">' + conditionalText[ 1 ] + '</span>';\r\n      } else {\r\n        conditionalText = conditionalText[ 0 ];\r\n      }\r\n    }\r\n    if ( question.leadingDisplayTexts == null ) {\r\n      conditionalText = LanguageTextFilter.translateQuestionText( surveyHandler, question );\r\n      return conditionalText;\r\n    } else if ( question.leadingDisplayTexts.length == 0 ) {\r\n      conditionalText = LanguageTextFilter.translateQuestionText( surveyHandler, question );\r\n      return conditionalText;\r\n    } else {\r\n      for ( let fOption of question.leadingDisplayTexts ) {\r\n        if ( fOption != null && fOption.filter != null && fOption.filter.filterquestions != null ) {\r\n          let iSatisfied: boolean = false;\r\n          let iFailed: boolean = false;\r\n          for ( let filterByQuestion of fOption.filter.filterquestions ) {\r\n            if ( isAnd( filterByQuestion ) ) {\r\n              if ( doesSatisfy( surveyHandler, filterByQuestion ) && !iFailed ) {\r\n                iSatisfied = true;\r\n              } else {\r\n                iFailed = true;\r\n                break;\r\n              }\r\n            } else if ( isOr( filterByQuestion ) ) {\r\n              if ( doesSatisfy( surveyHandler, filterByQuestion ) ) {\r\n                iSatisfied = true;\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          if ( iSatisfied && !iFailed ) {\r\n            if ( checkLanguage( surveyHandler, fOption )\r\n              || ( surveyHandler.ccsdk.config && surveyHandler.ccsdk.config.language\r\n                && surveyHandler.ccsdk.config.language.toLowerCase().includes( 'default' )\r\n                && fOption.language === null )\r\n              || ( surveyHandler.ccsdk.config && !surveyHandler.ccsdk.config.language && fOption.language === null ) ) {\r\n              let groupTitle;\r\n              if ( question.setName && conditionalText.indexOf( ':' ) !== -1 ) {\r\n                groupTitle = conditionalText.split( ':' )[ 0 ];\r\n                conditionalText = groupTitle + ': <br><span class=\"text-normal\">' + fOption.text + '</span>';\r\n              } else {\r\n                conditionalText = fOption.text;\r\n              }\r\n            }\r\n            conditionalText;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return conditionalText;\r\n  }\r\n}\r\n\r\nexport { ConditionalTextFilter };","import { DomUtilities } from './DomUtilities';\r\n// import { ScrollBar } from './ScrollBar';\r\nimport { Select } from './Select';\r\nimport { Theme } from './Theme';\r\nimport { ConditionalFlowFilter } from \"../filters/ConditionalFlowFilter\";\r\nimport { Slider } from \"./Slider\";\r\nimport { Constants } from \"../../Constants\";\r\nimport { setInterval } from 'timers';\r\n\r\nclass DomSurvey {\r\n\r\n  util: DomUtilities;\r\n  // scrollbar : ScrollBar;\r\n  domListeners: any;\r\n  select: Select;\r\n  theme: Theme;\r\n  qIndex: number;\r\n  currentQuestionId: string;\r\n  $questionContainer: any;\r\n  $innerQuestionContainer: any;\r\n  $popupContainer: any;\r\n  $popupContainer2: any;\r\n  $body: any;\r\n  qResponse: any;\r\n  trackSelects: any = [];\r\n  trackRadios: any = [];\r\n  ccsdk: any;\r\n  currentQuestionListeners: any = [];\r\n  trackSetupListeners: any;\r\n  $startBtn: any;\r\n  bodyElement: any;\r\n\r\n\r\n  constructor( ccsdk: any ) {\r\n    let self: DomSurvey = this;\r\n    this.domListeners = [];\r\n    this.ccsdk = ccsdk;\r\n    this.qIndex = 0;\r\n    this.qResponse = {};\r\n    this.domSelectElements();\r\n    this.util = new DomUtilities()\r\n    // self.scrollbar = new ScrollBar(\"data-cc-scrollbar\");\r\n    this.util.ready( function () {\r\n      // self.util.addClassAll(self.$popupContainer,'show-slide');\r\n    } );\r\n  }\r\n\r\n  setTheme( brandColor, time ) {\r\n    let self: DomSurvey = this;\r\n    this.util.ready( function () {\r\n      self.theme = new Theme( brandColor, time );\r\n    } );\r\n  }\r\n\r\n  setQIndex( index: number ) {\r\n    this.qIndex = index;\r\n  }\r\n\r\n  getQindex() {\r\n    return this.qIndex;\r\n  }\r\n\r\n  domSelectElements() {\r\n    this.$questionContainer = document.\r\n      querySelectorAll( \".cc-questions-container\" );\r\n    this.$popupContainer = document.querySelectorAll( \".cc-popup-container\" );\r\n    this.$popupContainer2 = document.querySelectorAll( \".cc-popup-container-2\" );\r\n    this.$body = document.querySelectorAll( \"body\" )[ 0 ];\r\n    // this.select = new Select();\r\n\r\n  }\r\n\r\n\r\n\r\n  removePrevListener( id: string ): boolean {\r\n    for ( let listener of this.domListeners ) {\r\n      if ( listener.id == id ) {\r\n        let index = this.domListeners.indexOf( listener );\r\n        ( window as any ).ccsdkDebug ? console.log( \"removing listener\", id ) : '';\r\n        ( window as any ).ccsdkDebug ? console.log( \"removing listener index\", index ) : '';\r\n        this.util.removeListener( this.$body, listener.type, listener.internalHandler );\r\n        if ( index > -1 ) {\r\n          this.domListeners.splice( index, 1 );\r\n        }\r\n        ( window as any ).ccsdkDebug ? console.log( this.domListeners ) : '';\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  setupListeners() {\r\n    let self = this;\r\n    let startSurvey = this.util.initListener( \"click\", \".act-cc-survey-start\", function () {\r\n      if ( ( !self.util.hasClass( self.$startBtn, 'disabled' ) ) && ( self.ccsdk.surveyStatus != 'minimized' ) ) {\r\n        let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n        document.dispatchEvent( onSurveyClickEvent );\r\n        self.util.addClass( self.$startBtn, 'disabled' );\r\n        self.showLoader();\r\n        self.startSurvey();\r\n      } else {\r\n        self.initSurveyDom();\r\n      }\r\n    } );\r\n    this.domListeners.push( startSurvey );\r\n\r\n    startSurvey.internalHandler = this.util.listener( this.$body, startSurvey.type, startSurvey.id, startSurvey.cb );\r\n\r\n    let nextQue = this.util.initListener( \"click\", \".act-cc-button-next\", function () {\r\n      // alert(\"working\");\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n      self.nextQuestion();\r\n    } );\r\n    this.domListeners.push( nextQue );\r\n\r\n    nextQue.internalHandler = this.util.listener( this.$body, nextQue.type, nextQue.id, nextQue.cb );\r\n\r\n    let prevQue = this.util.initListener( \"click\", \".act-cc-button-prev\", function () {\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n      self.prevQuestion();\r\n    } );\r\n    this.domListeners.push( prevQue );\r\n\r\n    prevQue.internalHandler = this.util.listener( this.$body, prevQue.type, prevQue.id, prevQue.cb );\r\n\r\n    let closeSurvey = this.util.initListener( \"click\", \".act-cc-button-close\", function () {\r\n      let onSurveyCloseEvent = new CustomEvent( Constants.SURVEY_CLOSE_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyCloseEvent );\r\n      self.ccsdk.survey.answers = {};\r\n      self.trackSelects = [];\r\n      self.destroyListeners();\r\n      self.util.trigger( document, 'ccclose', undefined );\r\n      self.bodyElement = <HTMLElement>document.\r\n        getElementsByTagName( \"body\" )[ 0 ];\r\n      self.util.removeClass( self.bodyElement, \"blurr\" )\r\n      self.ccsdk.survey.destroy();\r\n\r\n    } );\r\n    this.domListeners.push( closeSurvey );\r\n\r\n\r\n    closeSurvey.internalHandler = this.util.listener( this.$body, closeSurvey.type, closeSurvey.id, closeSurvey.cb );\r\n\r\n    let minSurvey = this.util.initListener( \"click\", \".act-cc-button-minimize\", function () {\r\n      self.minimizeSurvey();\r\n    } );\r\n    this.domListeners.push( minSurvey );\r\n\r\n\r\n    minSurvey.internalHandler = this.util.listener( self.$body, minSurvey.type, minSurvey.id, minSurvey.cb );\r\n  }\r\n\r\n\r\n  minimizeSurvey() {\r\n    // this.$popupContainer[0].removeClass('');\r\n    this.util.removeClass( this.$popupContainer2[ 0 ], 'hide-right-left' );\r\n    this.util.addClass( this.$popupContainer2[ 0 ], 'hide-right-left' );\r\n    setTimeout( () => {\r\n      this.util.removeClass( this.$popupContainer2[ 0 ], 'show-slide' );\r\n    }, 200 );\r\n    this.util.removeClass( this.$popupContainer[ 0 ], 'hide-right-left' );\r\n    this.util.addClass( this.$popupContainer[ 0 ], 'hide-right-left' );\r\n    setTimeout( () => {\r\n      this.util.addClass( this.$popupContainer[ 0 ], 'show-slide' );\r\n    }, 200 );\r\n    this.ccsdk.surveyStatus = 'minimized';\r\n    let resumeText = this.ccsdk.config.resumeButtonText ? this.ccsdk.config.resumeButtonText : 'Resume';\r\n    this.$startBtn.innerHTML = resumeText;\r\n    this.util.removeClass( this.$startBtn, 'disabled' );\r\n\r\n    //update all start btns\r\n    // Array.prototype.forEach.call($startBtn, (el, i) => {\r\n    //   el.innerHTML = resumeText;\r\n    // });\r\n\r\n  }\r\n\r\n  destroyListeners() {\r\n    // (window as any).ccsdkDebug?console.log(\"Removing all listeners\"):'';\r\n    for ( let listener of this.domListeners ) {\r\n      this.util.removeListener( this.$body, listener.type, listener.internalHandler );\r\n    }\r\n    for ( let listener of this.ccsdk.survey.domListeners ) {\r\n      this.util.removeListener( this.$body, listener.type, listener.internalHandler );\r\n    }\r\n    if ( this.ccsdk.survey.languageSelect ) {\r\n      this.ccsdk.survey.languageSelect.destroyListeners();\r\n    }\r\n    if ( this.select ) {\r\n      this.select.destroyListeners();\r\n    }\r\n\r\n  }\r\n\r\n  startSurvey() {\r\n    this.ccsdk.survey.cancelKillWelcomeQuestion();\r\n    this.ccsdk.getSurveyData();\r\n  }\r\n\r\n  initSurveyDom() {\r\n    this.domSelectElements();\r\n    // (window as any).ccsdkDebug?console.log(\"click in setup listener survey start\"):'';\r\n    this.util.addClassAll( this.$popupContainer2, 'show-slide' );\r\n    this.util.removeClass( this.$popupContainer[ 0 ], 'show-slide' );\r\n    if ( this.ccsdk.surveyStatus == 'minimized' ) {\r\n      //resume survey\r\n    } else {\r\n      //start survey\r\n      //check if only one language is configured\r\n      ( window as any ).ccsdkDebug ? console.log( this.ccsdk.surveyData ) : '';\r\n      if ( this.ccsdk.surveyData.translated === null || ( this.ccsdk.surveyData.translated && Object.keys( this.ccsdk.surveyData.translated ).length < 1 ) ) {\r\n        this.loadFirstQuestion();\r\n      } else {\r\n        this.ccsdk.survey.displayLanguageSelector();\r\n      }\r\n    }\r\n  }\r\n\r\n  updateProgress() {\r\n    let el = <HTMLElement>document.querySelectorAll( \"#progress-line\" )[ 0 ];\r\n    if ( this.ccsdk && this.ccsdk.tracking ) {\r\n      this.ccsdk.tracking.trackEvent( 'Questions Answered', {\r\n        token: this.ccsdk.surveyToken,\r\n        data: {\r\n          name: `${ this.qIndex }/${ this.ccsdk.survey.questionsToDisplay.length }`,\r\n          action: this.currentQuestionId\r\n        }\r\n      }, null, null );\r\n    }\r\n    el.style.width = ( this.qIndex / this.ccsdk.survey.questionsToDisplay.length ) * 100 + '%';\r\n  }\r\n\r\n  loadFirstQuestion() {\r\n    // applyRuleToAllEl(this.$questionContainer, );\r\n    // this.util.removeClassAll(this.$questionContainer, 'show-slide');\r\n    // this.util.addClass(this.$questionContainer, 'show-slide');\r\n\r\n    this.loadQuestionSpecifics( this.$questionContainer, 0 );\r\n    this.util.removeClassAll( this.$questionContainer[ 0 ].firstChild, 'show-slide' );\r\n    this.util.addClass( this.$questionContainer[ 0 ].firstChild, 'show-slide' );\r\n    let leftIcon: any = this.util.get( '.act-cc-button-prev' );\r\n    this.util.addClassAll( leftIcon, 'hide-slide' );\r\n    let onSurveyQuestionEvent = new CustomEvent( Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken );\r\n    document.dispatchEvent( onSurveyQuestionEvent );\r\n  }\r\n\r\n  nextQuestion() {\r\n    ( window as any ).ccsdkDebug ? console.log( 'next question q response init', this.qResponse ) : '';\r\n    // console.log('next question q response init',this.qResponse);\r\n    //empty the domListner\r\n    // this.util.removeAllListeners(this.domListeners);\r\n    let onSurveyQuestionEvent = new CustomEvent( Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken );\r\n    document.dispatchEvent( onSurveyQuestionEvent );\r\n    //submit the current response\r\n    // (window as any).ccsdkDebug?console.log('submit ',this.qResponse.type, this.qResponse):'';\r\n    let isRequired: boolean = false;\r\n    let q: HTMLElement = this.$questionContainer[ 0 ].firstChild;\r\n    // (window as any).ccsdkDebug?console.log(this.$questionContainer):'';\r\n    let span: Element = this.$questionContainer[ 0 ].firstChild.querySelectorAll( \".cc-question-container__required\" )[ 0 ]\r\n    let validationSpan: Element = this.$questionContainer[ 0 ].firstChild.querySelectorAll( \".cc-question-container__validation\" )[ 0 ]\r\n    if ( span )\r\n      this.util.removeClass( span, \"show\" );\r\n    if ( validationSpan )\r\n      this.util.removeClass( validationSpan, \"show\" );\r\n\r\n\r\n    //check if question is required \r\n    isRequired = q.getAttribute( 'data-required' ).toLowerCase() == 'true' ? true : false;\r\n    // console.log('required check',Object.keys(this.qResponse).length, isRequired, this.qResponse);\r\n    // if (isRequired && Object.keys(this.qResponse).length === 0) {\r\n    if ( isRequired && ( Object.keys( this.qResponse ).length === 0 ) ) {\r\n      if ( span ) {\r\n        this.util.addClass( span, \"show\" );\r\n        this.util.removeClass( span, \"hide\" );\r\n      }\r\n      return;\r\n    } else if ( isRequired && ( !this.qResponse.text ) && ( !this.qResponse.number ) ) {\r\n      if ( span ) {\r\n        this.util.addClass( span, \"show\" );\r\n        this.util.removeClass( span, \"hide\" );\r\n      }\r\n      return;\r\n    } else {\r\n      if ( span ) {\r\n        this.util.removeClass( span, \"show\" );\r\n        this.util.addClass( span, \"hide\" );\r\n      }\r\n\r\n      //check if validationRegex is set and is fulfilled\r\n      let validationRegex = this.ccsdk.survey.questionsToDisplay[ this.qIndex ].validationRegex\r\n      if ( validationRegex ) {\r\n        ( window as any ).ccsdkDebug ? console.log( 'validationRegex', validationRegex ) : '';\r\n        ( window as any ).ccsdkDebug ? console.log( 'response', this.qResponse ) : '';\r\n        let pattern = validationRegex.match( new RegExp( '^/(.*?)/([gimy]*)$' ) );\r\n        let regex = new RegExp( validationRegex );\r\n        if ( this.qResponse.text ) {\r\n          if ( regex.test( this.qResponse.text ) ) {\r\n            this.util.removeClass( validationSpan, \"show\" );\r\n            this.util.addClass( validationSpan, \"hide\" );\r\n          } else {\r\n            if ( validationSpan ) {\r\n              this.util.addClass( validationSpan, \"show\" );\r\n              this.util.removeClass( validationSpan, \"hide\" );\r\n            }\r\n            return;\r\n          }\r\n        }\r\n        else if ( this.qResponse.number ) {\r\n          ( window as any ).ccsdkDebug ? console.log( 'test regex text', regex.test( this.qResponse.number ) ) : '';\r\n\r\n          if ( regex.test( this.qResponse.number ) ) {\r\n            this.util.removeClass( validationSpan, \"show\" );\r\n            this.util.addClass( validationSpan, \"hide\" );\r\n          } else {\r\n            if ( validationSpan ) {\r\n              this.util.addClass( validationSpan, \"show\" );\r\n              this.util.removeClass( validationSpan, \"hide\" );\r\n            }\r\n            return;\r\n          }\r\n        }\r\n      }\r\n\r\n\r\n\r\n      if ( this.qResponse !== 'undefined' ) {\r\n        // (window as any).ccsdkDebug?console.log('qindex ' + this.qIndex):'';\r\n        if ( typeof this.ccsdk.survey.answers[ this.currentQuestionId ] !== 'undefined'\r\n          && this.qResponse.type == this.ccsdk.survey.answers[ this.currentQuestionId ].type\r\n          && this.qResponse.text == this.ccsdk.survey.answers[ this.currentQuestionId ].text\r\n          && this.qResponse.number == this.ccsdk.survey.answers[ this.currentQuestionId ].number\r\n        ) {\r\n          // console.log('no submit');\r\n          //don't submit if already submitted.\r\n        } else if ( typeof this.ccsdk.survey.answers[ this.currentQuestionId ] !== 'undefined'\r\n          && !this.qResponse.text\r\n          && !this.qResponse.number\r\n        ) {\r\n          // console.log('no submit 2');\r\n\r\n          //previous entry filled\r\n        } else {\r\n          // (window as any).ccsdkDebug?console.log('submitting ' + this.currentQuestionId):'';\r\n          // console.log(this.qResponse);\r\n\r\n          let qId = this.qResponse.questionId ? this.qResponse.questionId : this.currentQuestionId;\r\n          this.submitQuestion( this.qIndex, this.qResponse, this.qResponse.type, qId );\r\n          //save response\r\n          this.ccsdk.survey.answers[ this.currentQuestionId ] = JSON.parse( JSON.stringify( this.qResponse ) );\r\n        }\r\n      }\r\n    }\r\n    ConditionalFlowFilter.filterQuestion( this.ccsdk.survey, this.ccsdk.survey.questionsToDisplay[ this.qIndex ] );\r\n    // console.log(this.ccsdk.survey.questionsToDisplay);\r\n    //go to next question\r\n    this.qIndex++;\r\n    //reset the post parameters\r\n    // this.qResponse = typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined' ? JSON.parse(JSON.stringify(this.ccsdk.survey.answers[this.currentQuestionId])) : {};\r\n    // this.qResponse = {};\r\n    let nextButtonState: string = 'initial';\r\n    // (window as any).ccsdkDebug?console.log(this.$questionContainer):'';\r\n    let nextQ: HTMLElement = this.$questionContainer;\r\n    // (window as any).ccsdkDebug?console.log(this.qIndex):'';\r\n    if ( this.qIndex == this.ccsdk.survey.questionsToDisplay.length ) {\r\n      //Last run to show thank you message\r\n      let leftIcon: any = this.util.get( '.act-cc-button-prev' );\r\n      let rightIcon: any = this.util.get( '.cc-icon-right' );\r\n      let nextIcon: any = this.util.get( '.act-cc-button-next' );\r\n      this.util.addClassAll( leftIcon, 'hide' );\r\n      this.util.addClassAll( rightIcon, 'hide' );\r\n      this.util.addClassAll( nextIcon, 'hide' );\r\n      this.util.trigger( document, 'ccdone', undefined );\r\n      this.util.removeClass( this.$questionContainer[ 0 ].firstChild, 'show-slide' );\r\n      this.updateProgress();\r\n    } else {\r\n      if ( ( this.qIndex > this.ccsdk.survey.questionsToDisplay.length ) ) {\r\n        //reset the counter to show first question\r\n        this.qIndex = 0;\r\n      }\r\n      //repopulate qResponse based on answers.\r\n      // ( window as any ).ccsdkDebug ? console.log( 'previous answer', this.ccsdk.survey.answers[ this.currentQuestionId ] ) : '';\r\n      this.qResponse = typeof this.ccsdk.survey.answers[ this.currentQuestionId ] !== 'undefined' ? JSON.parse( JSON.stringify( this.ccsdk.survey.answers[ this.currentQuestionId ] ) ) : {};\r\n      // this.util.removeClassAll(this.$questionContainer[0].firstChild, 'show-slide');\r\n      // this.util.addClass(nextQ, 'show-slide');\r\n      this.updateProgress();\r\n      this.loadQuestionSpecifics( nextQ, this.qIndex );\r\n      this.util.addClass( this.$questionContainer[ 0 ].firstChild, 'show-slide' );\r\n      // if(nextButtonState === 'dirty'){\r\n      // this.submitQuestion(this.qIndex, 'test', 'multiline');\r\n      // }\r\n    }\r\n    if ( this.qIndex == 0 ) {\r\n      let leftIcon: any = this.util.get( '.act-cc-button-prev' );\r\n      this.util.addClassAll( leftIcon, 'hide-slide' );\r\n    } else {\r\n      let leftIcon: any = this.util.get( '.act-cc-button-prev' );\r\n      this.util.addClass( leftIcon[ 0 ], 'show-slide' );\r\n      this.util.removeClass( leftIcon[ 0 ], 'hide-slide' );\r\n    }\r\n    // ( window as any ).ccsdkDebug ? console.log( 'next question q response end', this.qResponse ) : '';\r\n    // this.qResponse = {};\r\n\r\n  }\r\n\r\n  prevQuestion() {\r\n    this.qIndex--;\r\n    if ( !this.ccsdk.survey.questionsToDisplay.length || this.qIndex < 0 ) {\r\n      this.qIndex = 0;\r\n      return;\r\n      // this.qIndex = this.$questionContainer.length - 1;\r\n    }\r\n    // ( window as any ).ccsdkDebug ? console.log( this.qIndex ) : '';\r\n    let onSurveyQuestionEvent = new CustomEvent( Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken );\r\n    document.dispatchEvent( onSurveyQuestionEvent );\r\n    //re populate qResponse based on answers.\r\n    // this.util.removeClassAll(this.$questionContainer,'show-slide');\r\n    this.loadQuestionSpecifics( null, this.qIndex );\r\n    this.qResponse = typeof this.ccsdk.survey.answers[ this.currentQuestionId ] !== 'undefined' ? JSON.parse( JSON.stringify( this.ccsdk.survey.answers[ this.currentQuestionId ] ) ) : {};\r\n    ( window as any ).ccsdkDebug ? console.log( \"prevQuestion qResponse\", this.qResponse ) : '';\r\n    this.util.addClass( this.$questionContainer[ 0 ].firstChild, 'show-slide' );\r\n    this.updateProgress();\r\n    if ( this.qIndex == 0 ) {\r\n      let leftIcon: any = this.util.get( '.act-cc-button-prev' );\r\n      this.util.addClassAll( leftIcon, 'hide-slide' );\r\n      this.util.removeClassAll( leftIcon, 'show-slide' );\r\n    }\r\n  }\r\n\r\n  showLoader() {\r\n    let $loader = document.querySelectorAll( \".cc-loaderimg\" )[ 0 ];\r\n    this.util.addClass( $loader, 'show' );\r\n    this.util.removeClass( $loader, 'hide' );\r\n  }\r\n  hideLoader() {\r\n    let $loader = document.querySelectorAll( \".cc-loaderimg\" )[ 0 ];\r\n    this.util.removeClass( $loader, 'show' );\r\n    this.util.addClass( $loader, 'hide' );\r\n  }\r\n\r\n  appendInBody( html ) {\r\n    document.querySelectorAll( \"body\" )[ 0 ].insertAdjacentHTML(\r\n      'afterbegin', html\r\n    );\r\n    //force update domSelect\r\n    this.domSelectElements();\r\n  }\r\n\r\n  replaceInQuestionsContainer( html ) {\r\n    this.$questionContainer[ 0 ].innerHTML = html;\r\n    this.domSelectElements();\r\n  }\r\n\r\n  appendInQuestionsContainer( html ) {\r\n    document.querySelectorAll( \".cc-questions-container\" )[ 0 ].insertAdjacentHTML(\r\n      'afterbegin', html\r\n    );\r\n    //force update domSelect\r\n    this.domSelectElements();\r\n  }\r\n\r\n  showWelcomeContainer() {\r\n    setTimeout( () => {\r\n      let startContainer = <HTMLElement>document.\r\n        querySelectorAll( \".act-cc-welcome-question-box\" )[ 0 ];\r\n      let bodyElement = <HTMLElement>document.\r\n        getElementsByTagName( \"body\" )[ 0 ];\r\n      this.util.addClass( startContainer, \"show-slide\" );\r\n      // this.util.addClass( bodyElement, \"blurr\" );\r\n    }, 200 );\r\n    // console.debug()\r\n    this.$startBtn = document.querySelectorAll( \".act-cc-survey-start\" )[ 0 ];\r\n\r\n  }\r\n\r\n  showLanguageSelector() {\r\n    setTimeout( () => {\r\n      let startContainer = <HTMLElement>document.\r\n        querySelectorAll( \".cc-language-selector\" )[ 0 ];\r\n      let bodyElement = <HTMLElement>document.\r\n        getElementsByTagName( \"body\" )[ 0 ];\r\n      this.util.addClass( startContainer, \"show-slide\" );\r\n      // this.util.addClass( bodyElement, \"blurr\" );\r\n    }, 200 );\r\n    let self = this;\r\n    if ( this.util.checkIfListenerExists( '.cc-language-select', this.domListeners ) ) {\r\n      // return;\r\n      // ( window as any ).ccsdkDebug ? console.log( \"language select - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '.cc-language-select' );\r\n    }\r\n    let languageSelect = this.util.initListener( \"click\", \".cc-language-select\", function () {\r\n      // let onSurveyClickEvent = new CustomEvent(Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n      // document.dispatchEvent(onSurveyClickEvent);\r\n      //select language show next question.\r\n      // self.startSurvey();\r\n      self.ccsdk.config.language = \"default\";\r\n      self.ccsdk.config.language = \"\"; //language selection from menu then show first question\r\n    } );\r\n\r\n    languageSelect.internalHandler = this.util.listener( this.$body, languageSelect.type, languageSelect.id, languageSelect.cb );\r\n  }\r\n\r\n  getSurveyContainer( token: string ) {\r\n    return document.querySelectorAll( \"#\" + token + \"-survey\" )[ 0 ];\r\n  }\r\n\r\n  getWelcomeContainer( token: string ) {\r\n    return document.querySelectorAll( \"#\" + token + \"-welcome\" )[ 0 ];\r\n  }\r\n\r\n  loadQuestionSpecifics( q: HTMLElement, index: number ) {\r\n    let self: DomSurvey = this;\r\n    this.$questionContainer[ 0 ].innerHTML = \"\";\r\n    let compiledTemplate = this.ccsdk.survey.compileTemplate( this.ccsdk.survey.questionsToDisplay[ index ] );\r\n    // console.log( compiledTemplate );\r\n    this.$questionContainer[ 0 ].innerHTML += compiledTemplate;\r\n    let qType: string = this.$questionContainer[ 0 ].firstChild.getAttribute( 'data-type' );\r\n    let qId: string = this.$questionContainer[ 0 ].firstChild.getAttribute( 'data-id' );\r\n    this.qResponse = {};\r\n    // (window as any).ccsdkDebug?console.log(\"QTYIPE AND QID \" , qType, qId):'';\r\n    this.currentQuestionId = qId.substring( 2, qId.length );\r\n    // console.log( 'qtype', qType )\r\n    switch ( qType ) {\r\n      case 'scale':\r\n        let allOptions1: any = document.querySelectorAll( '#' + qId + ' .option-number-item' );\r\n        let optionWidth1 = ( 100 / allOptions1.length ) - .6;\r\n        // (window as any).ccsdkDebug?console.log(\"Option width\", allOptions1, optionWidth1.toFixed(2)):'';\r\n        // self.util.css(allOptions1 , 'width',  optionWidth1.toFixed(1) + '%');\r\n        this.setupListenersQuestionScale( index, qId );\r\n        break;\r\n      case 'nps':\r\n        this.setupListenersQuestionNPS( index, qId );\r\n        break;\r\n      case 'multiline':\r\n        this.setupListenersQuestionMultiline( index, qId );\r\n        break;\r\n      case 'select':\r\n        if ( typeof this.select !== 'undefined' ) {\r\n          this.select.destroyListeners();\r\n        }\r\n        this.setupListenersQuestionSelect( index, qId );\r\n        break;\r\n      case 'radio':\r\n        this.setupListenersQuestionRadio( index, qId );\r\n        break;\r\n      case 'radioImage':\r\n        this.setupListenersQuestionRadioImage( index, qId );\r\n        break;\r\n      case 'checkbox':\r\n        this.setupListenersQuestionCheckbox( index, qId );\r\n        break;\r\n      case 'star':\r\n        this.setupListenersQuestionStar( index, qId );\r\n        break;\r\n      case 'smile':\r\n        this.setupListenersQuestionSmile( index, qId );\r\n        break;\r\n      case 'csat':\r\n        this.setupListenersQuestionCsat( index, qId );\r\n        break;\r\n      case 'slider':\r\n        this.setupListenersQuestionSlider( index, qId );\r\n        break;\r\n      case 'singleline':\r\n        this.setupListenersQuestionSingleline( index, qId );\r\n        break;\r\n      case 'number':\r\n        this.setupListenersQuestionNumber( index, qId );\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  // question specific listeners\r\n\r\n  setupListenersQuestionScale( index: number, qId: string ) {\r\n    var self: DomSurvey = this;\r\n    let selectedRating = <HTMLElement>document.querySelectorAll( '#' + qId + ' .cc-nps-selected-rating' )[ 0 ];\r\n    let selectedRating1 = <HTMLElement>document.querySelectorAll( '#' + qId + ' .cc-nps-selected-rating' )[ 1 ];\r\n    //add id too.\r\n    if ( this.util.checkIfListenerExists( '#' + qId + ' .option-number-item', this.domListeners ) ) {\r\n      // return;\r\n      // ( window as any ).ccsdkDebug ? console.log( \"scale question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId + ' .option-number-item' );\r\n    }\r\n\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    // ( window as any ).ccsdkDebug ? console.log( 'scale question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].number;\r\n      let previousSelection = document.querySelectorAll( '#' + qId + ' .option-number-item[data-rating=\"' + previousValue + '\"]' )[ 0 ];\r\n      // ( window as any ).ccsdkDebug ? console.log( 'scale previous selection', previousSelection ) : '';\r\n      if ( typeof previousSelection !== 'undefined' ) {\r\n        this.util.addClass( previousSelection, \"selected\" );\r\n        self.qResponse.type = 'scale';\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n        selectedRating.innerHTML = previousValue;\r\n        selectedRating1.innerHTML = previousValue;\r\n\r\n      }\r\n\r\n    }\r\n\r\n    let ref = this.util.initListener( 'click', '#' + qId + ' .option-number-item', function () {\r\n      let allOptions: any = document.querySelectorAll( '#' + qId + ' .option-number-item' );\r\n\r\n      let rating: number = this.getAttribute( 'data-rating' );\r\n      self.util.removeClassAll( allOptions, \"selected\" );\r\n      self.util.addClass( this, \"selected\" );\r\n      // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n      // (window as any).ccsdkDebug?console.log('Scale selected',rating):'';\r\n      self.qResponse.type = 'scale';\r\n      self.qResponse.text = null;\r\n      self.qResponse.number = rating;\r\n      self.qResponse.questionId = qId;\r\n      selectedRating.innerHTML = '' + rating;\r\n      selectedRating1.innerHTML = '' + rating;\r\n\r\n      //move to next question automagically\r\n      // alert('calling next questions inside scale');\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n      setTimeout( () => {\r\n        self.nextQuestion();\r\n      }, 500 );\r\n      // self.util.trigger(document,'q-answered', {\r\n      //   index : index,\r\n      //   rating : rating,\r\n      //   type : 'scale'\r\n      // });\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionNPS( index: number, qId: string ) {\r\n    var self: DomSurvey = this;\r\n    let selectedRating = <HTMLElement>document.querySelectorAll( '#' + qId + ' .cc-nps-selected-rating' )[ 0 ];\r\n    let allOptions: any = document.querySelectorAll( '#' + qId + ' .option-number-item' );\r\n\r\n    //add id too.\r\n    if ( this.util.checkIfListenerExists( '#' + qId + ' .option-number-item', this.domListeners ) ) {\r\n      //remove listeners\r\n      // ( window as any ).ccsdkDebug ? console.log( \"nps question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId + ' .option-number-item' );\r\n\r\n    }\r\n\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'nps question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].number;\r\n      let previousSelection = document.querySelectorAll( '#' + qId + ' .option-number-item[data-rating=\"' + previousValue + '\"]' )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'nps previous selection', previousSelection ) : '';\r\n      if ( typeof previousSelection !== 'undefined' ) {\r\n        this.util.addClass( previousSelection, \"selected\" );\r\n        let $mobileRating = document.querySelectorAll( \".act-cc-nps-selected-rating\" )[ 0 ];\r\n        $mobileRating.innerHTML = previousValue;\r\n        self.qResponse.type = 'nps';\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n\r\n    }\r\n\r\n    // (window as any).ccsdkDebug?console.log(self.domListeners):'';\r\n    let ref = this.util.initListener( 'click', '#' + qId + ' .option-number-item', function () {\r\n      let rating: number = this.getAttribute( 'data-rating' );\r\n      self.util.removeClassAll( allOptions, \"selected\" );\r\n      self.util.addClass( this, \"selected\" );\r\n      // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n      // (window as any).ccsdkDebug?console.log('Scale selected',rating):'';\r\n      self.qResponse.type = 'nps';\r\n      self.qResponse.text = null;\r\n      self.qResponse.number = rating;\r\n      self.qResponse.questionId = qId;\r\n      selectedRating.innerHTML = '' + rating;\r\n      //move to next question automagically\r\n\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n\r\n      // alert('calling next questions inside scale');\r\n      setTimeout( () => {\r\n        self.nextQuestion();\r\n      }, 500 );\r\n      // self.util.trigger(document,'q-answered', {\r\n      //   index : index,\r\n      //   rating : rating,\r\n      //   type : 'scale'\r\n      // });\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionCheckbox( index: number, qId: string ) {\r\n    var self: DomSurvey = this;\r\n    if ( this.util.checkIfListenerExists( '#' + qId + ' .cc-checkbox', this.domListeners ) ) {\r\n      // return;\r\n      ( window as any ).ccsdkDebug ? console.log( \"checkbox question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId + ' .cc-checkbox' );\r\n    }\r\n\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'radio question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValues = this.ccsdk.survey.answers[ questionId ].text;\r\n      if ( previousValues ) {\r\n        previousValues = previousValues.split( ',' );\r\n        for ( let previousValue of previousValues ) {\r\n          let previousSelection = document.querySelectorAll( '#' + qId + ' input[value=\"' + previousValue + '\"]' )[ 0 ];\r\n          ( window as any ).ccsdkDebug ? console.log( 'radio previous selection', previousSelection ) : '';\r\n          if ( typeof previousSelection !== 'undefined' ) {\r\n            this.util.addClass( previousSelection, \"selected\" );\r\n            previousSelection.setAttribute( 'checked', 'checked' );\r\n            self.qResponse.type = 'checkbox';\r\n            self.qResponse.text = previousValue;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    let ref = this.util.initListener( 'click', '#' + qId + ' .cc-checkbox', function () {\r\n      // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox input');\r\n      // let rating : number = this.querySelectorAll('input')[0].value;\r\n      let rating: string = [].filter.call( document.querySelectorAll( '#' + qId + ' .cc-checkbox input' ), function ( c ) {\r\n        return c.checked;\r\n      } ).map( function ( c ) {\r\n        return c.value;\r\n      } ).join( ',' );\r\n\r\n      ( window as any ).ccsdkDebug ? console.log( 'Checkbox selected', rating ) : '';\r\n\r\n      self.qResponse.type = 'checkbox';\r\n      self.qResponse.text = rating;\r\n      self.qResponse.number = null;\r\n      self.qResponse.questionId = qId;\r\n      //move to next question automagically\r\n      // self.nextQuestion();\r\n    } );\r\n    this.domListeners.push( ref );\r\n    let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n    document.dispatchEvent( onSurveyClickEvent );\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionRadio( index: number, qId: string ) {\r\n    var self: DomSurvey = this;\r\n    if ( this.util.checkIfListenerExists( '#' + qId + ' .cc-checkbox input', this.domListeners ) ) {\r\n      // return;\r\n      //remove listeners\r\n      ( window as any ).ccsdkDebug ? console.log( \"radio question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId + ' .cc-checkbox input' );\r\n    }\r\n\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'radio question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].text;\r\n      let previousSelection = document.querySelectorAll( '#' + qId + ' input[value=\"' + previousValue + '\"]' )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'radio previous selection', previousSelection ) : '';\r\n      if ( typeof previousSelection !== 'undefined' ) {\r\n        this.util.addClass( previousSelection, \"selected\" );\r\n        previousSelection.setAttribute( 'checked', 'checked' );\r\n        self.qResponse.type = 'radio';\r\n        self.qResponse.text = previousValue;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n\r\n    }\r\n\r\n\r\n\r\n    let ref = this.util.initListener( 'click', '#' + qId + ' .cc-checkbox input', function () {\r\n      // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox');\r\n      let rating: string = this.value;\r\n      // self.util.removeClassAll(allOptions, \"selected\");\r\n      // self.util.addClass(this, \"selected\");\r\n      // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n      // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\r\n      self.qResponse.type = 'radio';\r\n      self.qResponse.text = rating;\r\n      self.qResponse.number = null;\r\n      self.qResponse.questionId = qId;\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n      //move to next question automagically\r\n      setTimeout( () => {\r\n        self.nextQuestion();\r\n      }, 500 );\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionRadioImage( index: number, qId: string ) {\r\n    var self: DomSurvey = this;\r\n    if ( this.util.checkIfListenerExists( '#' + qId + ' .cc-checkbox input', this.domListeners ) ) {\r\n      ( window as any ).ccsdkDebug ? console.log( \"radio image question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId + ' .cc-checkbox input' );\r\n    }\r\n\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'radio image question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].text;\r\n      let previousSelection = document.querySelectorAll( '#' + qId + ' input[value=\"' + previousValue + '\"]' )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'radio image previous selection', previousSelection ) : '';\r\n      if ( typeof previousSelection !== 'undefined' ) {\r\n        this.util.addClass( previousSelection, \"selected\" );\r\n        previousSelection.setAttribute( 'checked', 'checked' );\r\n        self.qResponse.type = 'radioImage';\r\n        self.qResponse.text = previousValue;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n\r\n    }\r\n\r\n    let ref = this.util.initListener( 'click', '#' + qId + ' .cc-checkbox input', function () {\r\n      // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox');\r\n      let rating: string = this.value;\r\n      // self.util.removeClassAll(allOptions, \"selected\");\r\n      // self.util.addClass(this, \"selected\");\r\n      // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n      // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\r\n      self.qResponse.type = 'radioImage';\r\n      self.qResponse.text = rating;\r\n      self.qResponse.number = null;\r\n      self.qResponse.questionId = qId;\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n      //move to next question automagically\r\n      setTimeout( () => {\r\n        self.nextQuestion();\r\n      }, 500 );\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionStar( index: number, qId: string ) {\r\n    var self: DomSurvey = this;\r\n    if ( this.util.checkIfListenerExists( '#' + qId + ' .option-star-box', this.domListeners ) ) {\r\n      //remove listeners\r\n      ( window as any ).ccsdkDebug ? console.log( \"smile question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId + ' .option-star-box' );\r\n\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'star question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].number;\r\n      let previousSelection = document.querySelectorAll( '#' + qId + ' .option-star-box[data-rating=\"' + previousValue + '\"]' )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'star previous selection', previousSelection ) : '';\r\n      if ( typeof previousSelection !== 'undefined' && previousSelection != null ) {\r\n        this.util.addClass( previousSelection, \"selected\" );\r\n        self.qResponse.type = 'star';\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n\r\n    }\r\n    let ref = this.util.initListener( 'click', '#' + qId + ' .option-star-box', function () {\r\n      let allOptions: any = document.querySelectorAll( '#' + qId + ' .option-star-box' );\r\n      let rating: number = this.getAttribute( 'data-rating' );\r\n      self.util.removeClassAll( allOptions, \"selected\" );\r\n      self.util.addClass( this, \"selected\" );\r\n\r\n      //select previous sibling\r\n      // let child : any = this.previousSibling;\r\n      // while( ( child = child.previousSibling) != null ){\r\n      //   self.util.addClass(child, \"selected\");\r\n      // }\r\n\r\n\r\n      // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n      // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\r\n      self.qResponse.type = 'star';\r\n      self.qResponse.text = null;\r\n      self.qResponse.number = rating;\r\n      self.qResponse.questionId = qId;\r\n\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n      //move to next question automagically\r\n      setTimeout( () => {\r\n        self.nextQuestion();\r\n      }, 500 );\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionSmile( index: number, qId: string ) {\r\n    var self: DomSurvey = this;\r\n    if ( this.util.checkIfListenerExists( '#' + qId + ' .option-smile-box', this.domListeners ) ) {\r\n      //remove listeners\r\n      ( window as any ).ccsdkDebug ? console.log( \"smile question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId + ' .option-smile-box' );\r\n\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'smile question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].number;\r\n      let previousSelection = document.querySelectorAll( '#' + qId + ' .option-smile-box[data-rating=\"' + previousValue + '\"]' )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'smile previous selection', previousSelection ) : '';\r\n      if ( typeof previousSelection !== 'undefined' && previousSelection != null ) {\r\n\r\n        this.util.addClass( previousSelection, \"selected\" );\r\n        self.qResponse.type = 'smile';\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n\r\n    }\r\n\r\n    let ref = this.util.initListener( 'click', '#' + qId + ' .option-smile-box', function () {\r\n      let allOptions: any = document.querySelectorAll( '#' + qId + ' .option-smile-box' );\r\n      let rating: number = this.getAttribute( 'data-rating' );\r\n      self.util.removeClassAll( allOptions, \"selected\" );\r\n      self.util.addClass( this, \"selected\" );\r\n\r\n      //select previous siblings\r\n      // let child : any = this.previousSibling;\r\n      // while( ( child = child.previousSibling) != null ){\r\n      //   self.util.addClass(child, \"selected\");\r\n      // }\r\n      // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n      // (window as any).ccsdkDebug?console.log('Smile selected',rating):'';\r\n      self.qResponse.type = 'smile';\r\n      self.qResponse.text = null;\r\n      self.qResponse.number = rating;\r\n      self.qResponse.questionId = qId;\r\n\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n      //move to next question automagically\r\n      setTimeout( () => {\r\n        self.nextQuestion();\r\n      }, 500 );\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n\r\n  setupListenersQuestionCsat( index: number, qId: string ) {\r\n    var self: DomSurvey = this;\r\n    if ( this.util.checkIfListenerExists( '#' + qId + ' .option-smile-box', this.domListeners ) ) {\r\n      //remove listeners\r\n      ( window as any ).ccsdkDebug ? console.log( \"csat question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId + ' .option-smile-box' );\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'csat question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].number;\r\n      let previousSelection = document.querySelectorAll( '#' + qId + ' .option-smile-box[data-rating=\"' + previousValue + '\"]' )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'csat previous selection', previousSelection ) : '';\r\n      if ( typeof previousSelection !== 'undefined' && previousSelection != null ) {\r\n\r\n        this.util.addClass( previousSelection, \"selected\" );\r\n        previousSelection.querySelectorAll( \"input\" )[ 0 ].setAttribute( 'checked', 'checked' );\r\n        self.qResponse.type = 'smile';\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n\r\n      }\r\n\r\n    }\r\n\r\n    let ref = this.util.initListener( 'click', '#' + qId + ' .option-smile-box', function () {\r\n      let allOptions: any = document.querySelectorAll( '#' + qId + ' .option-smile-box' );\r\n      let rating: number = this.getAttribute( 'data-rating' );\r\n      self.util.removeClassAll( allOptions, \"selected\" );\r\n      self.util.addClass( this, \"selected\" );\r\n      this.querySelectorAll( \"input\" )[ 0 ].setAttribute( 'checked', 'checked' );\r\n      let child: any = this.previousSibling;\r\n      while ( ( child = child.previousSibling ) != null ) {\r\n        // (window as any).ccsdkDebug?console.log('questionscale', 'previousSiblings', child):'';\r\n        self.util.addClass( child, \"selected\" );\r\n      }\r\n      // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n      // (window as any).ccsdkDebug?console.log('Smile selected',rating):'';\r\n      self.qResponse.type = 'smile';\r\n      self.qResponse.text = null;\r\n      self.qResponse.number = rating;\r\n      self.qResponse.questionId = qId;\r\n      console.log( 'dispatching event in csat', this )\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n      //move to next question automagically\r\n      setTimeout( () => {\r\n        self.nextQuestion();\r\n      }, 500 );\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionMultiline( index: number, qId: string ) {\r\n    let self: DomSurvey = this;\r\n    let multilineRes: string = '';\r\n    if ( this.util.checkIfListenerExists( '#' + qId, this.domListeners ) ) {\r\n      //remove listeners\r\n      ( window as any ).ccsdkDebug ? console.log( \"multiine question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId );\r\n\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'multiine question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].text;\r\n      ( window as any ).ccsdkDebug ? console.log( 'multiine input box', document.querySelectorAll( '#' + qId )[ 0 ] ) : '';\r\n      let previousSelection = <HTMLInputElement>document.querySelectorAll( '#' + qId )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'multiine previous selection', previousSelection ) : '';\r\n      ( window as any ).ccsdkDebug ? console.log( 'multiine previous value', previousValue ) : '';\r\n      if ( typeof previousSelection !== 'undefined' &&\r\n        previousSelection != null &&\r\n        typeof previousValue !== 'undefined' ) {\r\n        previousSelection.value = previousValue;\r\n        self.qResponse.type = 'multiline';\r\n        self.qResponse.text = previousValue;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n    let ref = this.util.initListener( 'change', '#' + qId, function () {\r\n      multilineRes = this.value;\r\n      self.qResponse.type = 'multiline';\r\n      self.qResponse.text = multilineRes;\r\n      self.qResponse.number = null;\r\n      self.qResponse.questionId = qId;\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionSingleline( index: number, qId: string ) {\r\n    let self: DomSurvey = this;\r\n    let singlelineRes: string = '';\r\n    if ( this.util.checkIfListenerExists( '#' + qId, this.domListeners ) ) {\r\n      //remove listeners\r\n      ( window as any ).ccsdkDebug ? console.log( \"singleline question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId );\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'singleline question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].text;\r\n      ( window as any ).ccsdkDebug ? console.log( 'singleline input box', document.querySelectorAll( '#' + qId )[ 0 ] ) : '';\r\n      let previousSelection = <HTMLInputElement>document.querySelectorAll( '#' + qId )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'singleline previous selection', previousSelection ) : '';\r\n      ( window as any ).ccsdkDebug ? console.log( 'singleline previous value', previousValue ) : '';\r\n      if ( typeof previousSelection !== 'undefined' &&\r\n        previousSelection != null &&\r\n        typeof previousValue !== 'undefined' ) {\r\n        previousSelection.value = previousValue;\r\n        self.qResponse.type = 'singleline';\r\n        self.qResponse.text = previousValue;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n    let ref = this.util.initListener( 'change', '#' + qId, function () {\r\n      singlelineRes = this.value;\r\n      self.qResponse.type = 'singleline';\r\n      self.qResponse.text = singlelineRes;\r\n      self.qResponse.number = null;\r\n      self.qResponse.questionId = qId;\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n\r\n    // console.log( 'singleline qResponse', self.qResponse );\r\n  }\r\n\r\n  setupListenersQuestionNumber( index: number, qId: string ) {\r\n    let self: DomSurvey = this;\r\n    let numberRes: string = '';\r\n    if ( this.util.checkIfListenerExists( '#' + qId, this.domListeners ) ) {\r\n      //remove listeners\r\n      ( window as any ).ccsdkDebug ? console.log( \"number question - previous listeners exists\" ) : '';\r\n      this.removePrevListener( '#' + qId );\r\n\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'number question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].number;\r\n      ( window as any ).ccsdkDebug ? console.log( 'number input box', document.querySelectorAll( '#' + qId )[ 0 ] ) : '';\r\n      let previousSelection = <HTMLInputElement>document.querySelectorAll( '#' + qId )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'number previous selection', previousSelection ) : '';\r\n      ( window as any ).ccsdkDebug ? console.log( 'number previous value', previousValue ) : '';\r\n      if ( typeof previousSelection !== 'undefined' &&\r\n        previousSelection != null &&\r\n        typeof previousValue !== 'undefined' ) {\r\n        previousSelection.value = previousValue;\r\n        self.qResponse.type = 'number';\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n    let ref = this.util.initListener( 'change', '#' + qId, function () {\r\n      numberRes = this.value;\r\n      self.qResponse.type = 'number';\r\n      self.qResponse.text = null;\r\n      self.qResponse.number = numberRes;\r\n      self.qResponse.questionId = qId;\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionSlider( index: number, qId: string ) {\r\n    let self: DomSurvey = this;\r\n    let sliderRes: string = '';\r\n    let slider = new Slider();\r\n    let sliderInput = <HTMLInputElement>document.querySelectorAll( '#' + qId + \" input\" )[ 0 ];\r\n\r\n    if ( this.util.checkIfListenerExists( '#' + qId + \" input\", this.domListeners ) ) {\r\n      // return;\r\n\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring( 2, qId.length );\r\n    ( window as any ).ccsdkDebug ? console.log( 'slider question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      let previousValue = this.ccsdk.survey.answers[ questionId ].number;\r\n      ( window as any ).ccsdkDebug ? console.log( 'slider input box', document.querySelectorAll( '#' + qId )[ 0 ] ) : '';\r\n      let previousSelection = <HTMLInputElement>document.querySelectorAll( '#' + qId + \" .act-slider-tip\" )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( 'slider previous selection', previousSelection ) : '';\r\n      ( window as any ).ccsdkDebug ? console.log( 'slider previous value', previousValue ) : '';\r\n      if ( typeof previousSelection !== 'undefined' &&\r\n        previousSelection != null &&\r\n        typeof previousValue !== 'undefined' ) {\r\n        previousSelection.innerHTML = previousValue;\r\n        sliderInput.value = previousValue;\r\n        self.qResponse.type = 'slider';\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.text = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n    let ref = this.util.initListener( \"change\", '#' + qId + \" input\", function () {\r\n      sliderRes = this.value;\r\n      self.qResponse.type = 'slider';\r\n      self.qResponse.number = sliderRes;\r\n      self.qResponse.text = null;\r\n      self.qResponse.questionId = qId;\r\n      //move to next question automagically\r\n      // self.nextQuestion();\r\n    } );\r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n  }\r\n\r\n  setupListenersQuestionSelect( index: number, qId: string ) {\r\n    let self: DomSurvey = this;\r\n    let questionId: any;\r\n    ( window as any ).ccsdkDebug ? console.log( 'select que', this.domListeners ) : '';\r\n    questionId = qId.substring( 2, qId.length );\r\n    // (window as any).ccsdkDebug?console.log(this.ccsdk.survey.answers[questionId]):'';\r\n    // (window as any).ccsdkDebug?console.log(this.ccsdk.survey.surveyAnswers[questionId]):'';\r\n    if ( this.util.checkIfListenerExists( '#' + qId + \" .cc-select-options .cc-select-option\", this.domListeners ) ) {\r\n      ( window as any ).ccsdkDebug ? console.log( 'select que listner exists' ) : '';\r\n      this.removePrevListener( '#' + qId + \" .cc-select-options .cc-select-option\" );\r\n\r\n      // return;\r\n    }\r\n    ( window as any ).ccsdkDebug ? console.log( 'select que' ) : '';\r\n\r\n    // if(!self.util.arrayContains.call(self.trackSelects, qId)){\r\n    ( window as any ).ccsdkDebug ? console.log( 'select que initialize select' ) : '';\r\n\r\n    self.select = new Select( qId );\r\n    self.select.destroyListeners();\r\n    self.select.init( qId );\r\n\r\n    if ( typeof this.ccsdk.survey.answers[ questionId ] !== 'undefined' && this.ccsdk.survey.answers[ questionId ] !== '' ) {\r\n      if ( this.ccsdk.survey.answers[ questionId ].text ) {\r\n        let question = this.ccsdk.survey.getQuestionById( questionId );\r\n        self.select.setValue( this.ccsdk.survey.answers[ questionId ].text, question, this.ccsdk.survey );\r\n        self.select.selectOptions( this.ccsdk.survey.answers[ questionId ].text );\r\n        self.qResponse.type = 'select';\r\n        self.qResponse.text = this.ccsdk.survey.answers[ questionId ].text;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n    self.trackSelects.push( qId );\r\n    // }\r\n    let selectRes: string = '';\r\n    let ref = this.util.initListener( 'click', '#' + qId + \" .cc-select-options .cc-select-option\", function () {\r\n      // selectRes = this.getAttribute('data-value');\r\n      selectRes = document.querySelectorAll( '#' + qId + \" .cc-select-trigger\" )[ 0 ].getAttribute( 'data-selection-value' );\r\n      // (window as any).ccsdkDebug?console.log(selectRes):'';\r\n      self.qResponse.type = 'select';\r\n      self.qResponse.text = selectRes;\r\n      self.qResponse.number = null;\r\n      self.qResponse.questionId = qId;\r\n      //move to next question automagically\r\n\r\n      let onSurveyClickEvent = new CustomEvent( Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken );\r\n      document.dispatchEvent( onSurveyClickEvent );\r\n\r\n      // self.nextQuestion();\r\n    } );\r\n\r\n    // this.util.removeListener(this.$body, ref.type, listener.internalHandler);    \r\n    this.domListeners.push( ref );\r\n\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n\r\n  }\r\n\r\n\r\n\r\n  // addListenersNextButtonSubmit(index : number, data : any, type : string){\r\n  //   let self : DomSurvey = this;\r\n  //   let btnNext = self.util.get('.act-cc-button-next')[0];\r\n  //   self.util.on('click', btnNext, this.submitQuestion(\r\n  //     index, data, type\r\n  //   ));\r\n  //\r\n  // }\r\n\r\n  // removeListenersNextButtonSubmit(index : number, data : any, type : string){\r\n  //   let self : DomSurvey = this;\r\n  //   let btnNext = self.util.get('.act-cc-button-next');\r\n  //   self.util.on('click', btnNext, this.submitQuestion(\r\n  //     index, data, type\r\n  //   ));\r\n  //   self.util.off('click', btnNext, this.submitQuestion(\r\n  //     index, data, type\r\n  //   ));\r\n  // }\r\n\r\n  submitQuestion( index: number, data: any, type: string, qId: string ) {\r\n    // (window as any).ccsdkDebug?console.log('type', type ,'res',data):'';\r\n    this.util.trigger( document, 'q-answered', {\r\n      index: index,\r\n      data: data,\r\n      type: type,\r\n      questionId: qId.substring( 2, qId.length )\r\n    } );\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\nexport { DomSurvey }\r\n","import { DomUtilities } from './DomUtilities';\r\n\r\nclass Theme {\r\n\tutil: DomUtilities;\r\n\tbrandColorDark: string;\r\n\tbrandColorWhite: string;\r\n\tconstructor( brandColor, time ) {\r\n\t\tthis.util = new DomUtilities();\r\n\t\tthis.brandColorDark = this.util.shadeBlendConvert( -0.3, brandColor, undefined );\r\n\t\tthis.brandColorWhite = this.util.shadeBlendConvert( 0.1, brandColor, undefined );\r\n\t\tlet css: string = `\r\n\t\t.cc-sdk #progressBar{\r\n\t\t\tbackground : ${this.brandColorDark };\r\n\t\t}\r\n\t\t.cc-sdk #progress-line{ \r\n\t\t\tbackground: ${brandColor };\r\n\t\t}\r\n\t\t.cc-sdk .cc-checkbox input[type=\"checkbox\"]:checked + label:before {\r\n\t\t\tbackground:${brandColor };\r\n\t\t}\r\n\t\t.ccsdk-overlay.glass{\r\n\t\t\tbackground-color:${this.util.hexToRGB( brandColor, .5 ) };\r\n\t\t}\r\n\t\t.cc-sdk .cc-checkbox input[type=\"checkbox\"]:checked + label:after {\r\n\t\t\tborder-color: #fff;\r\n\t\t}\r\n\t\t.cc-sdk .cc-checkbox input[type=\"radio\"]:checked + label:before {\r\n\t\t\tborder-color: ${brandColor };\r\n\t\t}\r\n\t\t.cc-sdk .cc-checkbox input[type=\"radio\"]:checked + label:before {\r\n\t\t\tborder-color: ${brandColor };\r\n\t\t}\r\n\t\t.cc-sdk .cc-checkbox input[type=\"radio\"]:checked + label:after {\r\n\t\t\tbackground: ${brandColor };\r\n\t\t}\r\n\t\t.cc-sdk .cc-sdk-form-control:focus {\r\n\t\t\tborder-color: ${brandColor };\r\n\t\t}\r\n\t\t.cc-sdk .cc-message-box__btn{\r\n\t\t\tbackground: ${brandColor };\r\n\t\t\tcolor:#fff;\r\n\t\t}\r\n\t\t\t.cc-sdk .submit-icon{\r\n\t\t\t\tbackground-image: url(\"data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%2747px%27%20height%3D%2747px%27%20viewBox%3D%270%200%2047%2047%27%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%3E%3Ctitle%3EGroup%2016%3C%2Ftitle%3E%3Cdesc%3ECreated%20with%20Sketch.%3C%2Fdesc%3E%3Cdefs%3E%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%3Cfilter%20x%3D%27-18.1%25%27%20y%3D%27-12.9%25%27%20width%3D%27136.2%25%27%20height%3D%27136.2%25%27%20filterUnits%3D%27objectBoundingBox%27%20id%3D%27filter-2%27%3E%3CfeOffset%20dx%3D%270%27%20dy%3D%272%27%20in%3D%27SourceAlpha%27%20result%3D%27shadowOffsetOuter1%27%3E%3C%2FfeOffset%3E%3CfeGaussianBlur%20stdDeviation%3D%272%27%20in%3D%27shadowOffsetOuter1%27%20result%3D%27shadowBlurOuter1%27%3E%3C%2FfeGaussianBlur%3E%3CfeColorMatrix%20values%3D%270%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200.116423234%200%27%20type%3D%27matrix%27%20in%3D%27shadowBlurOuter1%27%3E%3C%2FfeColorMatrix%3E%3C%2Ffilter%3E%3C%2Fdefs%3E%3Cg%20id%3D%27Page-1%27%20stroke%3D%27none%27%20stroke-width%3D%271%27%20fill%3D%27none%27%20fill-rule%3D%27evenodd%27%3E%3Cg%20id%3D%271-copy-20%27%20transform%3D%27translate(-1246.000000%2C%20-664.000000)%27%3E%3Cg%20id%3D%27Group-16%27%20transform%3D%27translate(1250.000000%2C%20666.000000)%27%3E%3Cg%20id%3D%27Oval-4%27%3E%3Cuse%20fill%3D%27white%27%20fill-opacity%3D%271%27%20filter%3D%27url(%23filter-2)%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3Cuse%20fill%3D%27${encodeURIComponent( brandColor ) }%27%20fill-rule%3D%27evenodd%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3C%2Fg%3E%3Cg%20id%3D%27Group-5%27%20transform%3D%27translate(12.000000%2C%2011.000000)%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23FFFFFF%27%3E%3Cg%20id%3D%27fast-forward-arrows%27%20transform%3D%27translate(6.173934%2C%200.000000)%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3Cg%20id%3D%27fast-forward-arrows-copy%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\");\r\n\t\t\t}\r\n\t\t\t[dir=\"rtl\"].cc-sdk .submit-icon{\r\n\t\t\t\tbackground-image: url(\"data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%2747px%27%20height%3D%2747px%27%20viewBox%3D%270%200%2047%2047%27%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%3E%0A%20%20%20%20%3Cdesc%3ECreated%20with%20Sketch.%3C%2Fdesc%3E%0A%20%20%20%20%3Cdefs%3E%3C%2Fdefs%3E%0A%20%20%20%20%3Cg%20id%3D%27Page-1%27%20stroke%3D%27none%27%20stroke-width%3D%271%27%20fill%3D%27none%27%20fill-rule%3D%27evenodd%27%3E%0A%20%20%20%20%20%20%20%20%3Cg%20id%3D%27Submit_Icon%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27Oval-4%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27path-1-link%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23white%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27path-1-link%27%20fill%3D%27${encodeURIComponent( brandColor ) }%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27Group-5%27%20transform%3D%27translate(12.000000%2C%2011.000000)%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23ffffff%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27fast-forward-arrows%27%20transform%3D%27translate(11.173934%2C%208.500000)%20scale(-1%2C%201)%20translate(-11.173934%2C%20-8.500000)%20translate(6.173934%2C%200.000000)%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27fast-forward-arrows-copy%27%20transform%3D%27translate(5.000000%2C%208.500000)%20scale(-1%2C%201)%20translate(-5.000000%2C%20-8.500000)%20%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%3C%2Fg%3E%0A%3C%2Fsvg%3E\");\r\n\t\t\t}\r\n\t\t\t.cc-sdk .cc-question-container__required-label{\r\n\t\t\tcolor: ${brandColor };\r\n\t\t}\r\n\t\t.cc-sdk input[type=\"range\"]::-webkit-slider-runnable-track{\r\n\t\t\tbackground: ${brandColor } !important;\r\n\t\t\t   background: -moz-linear-gradient(-45deg, ${brandColor } 0%, ${ this.brandColorDark } 100%)!important;\r\n\t\t\t   background: -webkit-linear-gradient(-45deg, ${brandColor }' 0%,${ this.brandColorDark } 100%)!important;\r\n\t\t\t   background: linear-gradient(135deg, ${brandColor } 0%,${ this.brandColorDark } 100%)!important;\r\n\t\t\t   filter: progid:DXImageTransform.Microsoft.gradient( startColorstr=${brandColor }, endColorstr=${ this.brandColorDark },GradientType=1 );\r\n\t\t   }\r\n\t\t.cc-sdk input[type=\"range\"]::-moz-range-track {\r\n\t\t\tbackground: ${brandColor } !important;\r\n\t\t\tbackground: -moz-linear-gradient(-45deg, ${brandColor } 0%, ${ this.brandColorDark } 100%)!important;\r\n\t\t\tbackground: -webkit-linear-gradient(-45deg, ${brandColor } 0%, ${ this.brandColorDark } 100%)!important;\r\n\t\t\tbackground: linear-gradient(135deg, ${brandColor } 0%,${ this.brandColorDark } 100%)!important;\r\n\t\t\tfilter: progid:DXImageTransform.Microsoft.gradient( startColorstr=${brandColor }, endColorstr=${ this.brandColorDark },GradientType=1 );\r\n\t\t}\r\n\t\t   .cc-sdk input[type=\"range\"]::-webkit-slider-thumb{\r\n\t\t\tborder: 1px solid ${brandColor } ;\r\n\t\t\tbackground-color: #fff;\r\n\t\t   }\r\n\t\t   .cc-sdk input[type=\"range\"]::-moz-range-thumb {\r\n\t\t\tborder: 1px solid ${brandColor } ;\r\n\t\t\tbackground-color: #fff;\r\n\t\t   }\r\n\t\t   .cc-sdk svg.timer circle {\r\n\t\t\tanimation: countdown ${time }s linear 1 forwards;\r\n\t\t\tstroke: ${brandColor };\r\n\t\t   }\r\n\t\t   .cc-sdk input[type=range].selected::-webkit-slider-thumb {\r\n\t\t\t\tbackground-color: ${brandColor };\r\n\t\t\t}\r\n\t\t\t.cc-sdk input[type = range].selected::-moz - range - thumb {\r\n\t\t\t\tbackground-color: ${brandColor };\r\n\t\t\t}\r\n\t\t\t.cc-sdk .cc-checkbox label:hover:before{\r\n\t\t\t\tborder: solid 1px ${brandColor };\r\n\t\t\t}\r\n\t\t @media (max-width: 768px){\r\n\t \t\t\t.ccsdk-overlay.glass{\r\n\t \t\t\tbackground-color:rgba(255,255,255,.85);\r\n\t \t\t\tbackground-image:none;\r\n\t\t\t\t}\r\n\t\t\t\t.cc-sdk.cc-popup-container{\r\n\t\t\t\t\tbackground-color : transparent;\r\n\t\t\t\t}\r\n\t\t\t\t.cc-sdk.cc-popup-container .ccsdk-overlay.glass{\r\n\t\t\t\t\tbackground-color : ${this.util.hexToRGB( brandColor, .9 ) };\r\n\t\t\t\t}\r\n\t\t\t\t.cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text{\r\n\t\t\t\t\tcolor:#fff;\r\n\t\t\t\t}\r\n\t\t`;\r\n\t\tthis.util.appendStyle( css );\r\n\r\n\t}\r\n}\r\nexport { Theme }\r\n","import { DomUtilities } from './DomUtilities';\r\nclass Slider {\r\n  inputRange: any;\r\n  rangeTip: any;\r\n  maxValue: number;\r\n  speed: number;\r\n  currValue: number;\r\n  rafID: any;\r\n  timeout: any;\r\n  util: any\r\n\r\n  constructor() {\r\n    this.inputRange = document.getElementsByClassName( 'cc-sdk-range' )[ 0 ];\r\n    this.rangeTip = this.inputRange.parentNode.querySelectorAll( \".act-slider-tip\" )[ 0 ];\r\n    this.util = new DomUtilities();\r\n    //  this.maxValue = 100; // the higher the smoother when dragging\r\n    this.speed = 5;\r\n\r\n\r\n    // set min/max value\r\n    // this.inputRange.min = 0;\r\n    this.inputRange.min = this.inputRange.getAttribute( 'min' );\r\n    // this.inputRange.max = this.maxValue;\r\n    this.inputRange.max = this.inputRange.getAttribute( 'max' );\r\n    this.setupListeners();\r\n  }\r\n\r\n  setupListeners() {\r\n    let self: Slider = this;\r\n\r\n    // bind events\r\n    this.inputRange.addEventListener( 'mouseup', this.clearTo, false );\r\n\r\n    // move gradient\r\n    this.inputRange.addEventListener( 'input', function () {\r\n      self.updateRangeTip();\r\n      self.util.addClass( this, 'selected' );\r\n\r\n      //Change slide thumb color on way up\r\n      if ( this.value > 20 ) {\r\n        self.inputRange.classList.add( 'ltpurple' );\r\n      }\r\n      if ( this.value > 40 ) {\r\n        self.inputRange.classList.add( 'purple' );\r\n      }\r\n      if ( this.value > 60 ) {\r\n        self.inputRange.classList.add( 'pink' );\r\n      }\r\n\r\n      //Change slide thumb color on way down\r\n      if ( this.value < 20 ) {\r\n        self.inputRange.classList.remove( 'ltpurple' );\r\n      }\r\n      if ( this.value < 40 ) {\r\n        self.inputRange.classList.remove( 'purple' );\r\n      }\r\n      if ( this.value < 60 ) {\r\n        self.inputRange.classList.remove( 'pink' );\r\n      }\r\n    } );\r\n  }\r\n\r\n\r\n\r\n  updateRangeTip() {\r\n    let self: Slider = this;\r\n    this.rangeTip.style.display = 'block';\r\n    this.rangeTip.innerHTML = this.inputRange.value;\r\n  }\r\n\r\n  clearTo() {\r\n    clearTimeout( this.timeout );\r\n  }\r\n\r\n  // listen for unlock\r\n  // unlockStartHandler() {\r\n  //   let self : any = this;\r\n  //   // clear raf if trying again\r\n  //   window.cancelAnimationFrame(this.rafID);\r\n  //   // set to desired value\r\n  //   this.currValue = +self.value;\r\n  // }\r\n\r\n  // unlockEndHandler() {\r\n  //   // store current value\r\n  //   this.currValue = + this.value;\r\n  //   // determine if we have reached success or not\r\n  //   if(this.currValue >= this.maxValue) {\r\n  //      this.successHandler();\r\n  //   }\r\n  //   else {\r\n  //      this.rafID = window.requestAnimationFrame(this.animateHandler);\r\n  //   }\r\n  // }\r\n\r\n  // handle range animation\r\n  animateHandler() {\r\n    // calculate gradient transition\r\n    var transX = this.currValue - this.maxValue;\r\n\r\n    // update input range\r\n    this.inputRange.value = this.currValue;\r\n\r\n    //Change slide thumb color on mouse up\r\n    if ( this.currValue < 20 ) {\r\n      this.inputRange.classList.remove( 'ltpurple' );\r\n    }\r\n    if ( this.currValue < 40 ) {\r\n      this.inputRange.classList.remove( 'purple' );\r\n    }\r\n    if ( this.currValue < 60 ) {\r\n      this.inputRange.classList.remove( 'pink' );\r\n    }\r\n\r\n    // determine if we need to continue\r\n    if ( this.currValue > -1 ) {\r\n      window.requestAnimationFrame( this.animateHandler );\r\n    }\r\n\r\n    // decrement value\r\n    this.currValue = this.currValue - this.speed;\r\n  }\r\n\r\n  // handle successful unlock\r\n  successHandler() {\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\nexport { Slider };\r\n","//Manages trigger.\r\nimport { Cookie } from \"./helpers/Cookie\";\r\nimport { Constants } from \"./Constants\";\r\nimport { Triggers } from \"./Triggers\";\r\n//collect initial data\r\n//if on site time is null, add on site time\r\nif (Cookie.get(Constants.CCTriggerSiteStartTime) == null) {\r\n  Cookie.set(Constants.CCTriggerSiteStartTime, new Date(), undefined, undefined);\r\n}\r\n//always add on page Time\r\nCookie.set(Constants.CCTriggerPageStartTime, new Date(), undefined, undefined);\r\n\r\nlet sitePageViewCount = Cookie.get(Constants.CCTriggerSitePageViewCount);\r\nif (sitePageViewCount == null) {\r\n  Cookie.set(Constants.CCTriggerSitePageViewCount, 1, undefined, undefined);\r\n} else {\r\n  sitePageViewCount = (parseInt(sitePageViewCount) + 1).toString();\r\n  Cookie.set(Constants.CCTriggerSitePageViewCount, sitePageViewCount, undefined, undefined);\r\n}\r\n\r\nlet individualPageViewCount = Cookie.get(Constants.CCTriggerIndividualPageViewCount);\r\nif (individualPageViewCount == null) {\r\n  Cookie.set(Constants.CCTriggerIndividualPageViewCount, 1, undefined, window.location.href);\r\n} else {\r\n  individualPageViewCount = (parseInt(individualPageViewCount) + 1).toString();\r\n  Cookie.set(Constants.CCTriggerIndividualPageViewCount, individualPageViewCount, undefined, window.location.href);\r\n}\r\n\r\n(window as any).click = 0;\r\n\r\nwindow.onscroll = function (e) {\r\n  // called when the window is scrolled.  \r\n  let doc = document.documentElement;\r\n  let left = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);\r\n  let top = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\r\n  (window as any).ccsdkTopOffset = top;\r\n  TriggerManager.processScrollTriggers(top);\r\n}\r\n\r\ndocument.onclick = function (e) {\r\n  (window as any).click++;\r\n}\r\n\r\n//TriggerManager adds to survey Queue\r\nclass TriggerManager {\r\n\r\n  static triggerInterval: any = null;\r\n  static triggerInstances: any = {};\r\n\r\n  constructor() {\r\n    //initialize triggers\r\n    //add those triggers which aren't completed yet.\r\n  }\r\n\r\n  static addSurvey(surveyId: any, trigger: Triggers) {\r\n    TriggerManager.triggerInstances[surveyId] = trigger;\r\n    if (Object.keys(TriggerManager.triggerInstances).length >= 1) {\r\n      (window as any).ccsdkDebug ? console.log(TriggerManager.triggerInterval) : '';\r\n      if (TriggerManager.triggerInterval == null) {\r\n        (window as any).ccsdkDebug ? console.log(\"TriggerHandler : Setting up Interval Trigger Handlers.\") : '';\r\n        TriggerManager.triggerInterval = setInterval(TriggerManager.processIntervalTriggers, 1000);\r\n      }\r\n      //processing sequential triggers if any.\r\n      // console.log(\"TriggerHandler : Processing sequential triggers for  \" + surveyId);\r\n      // TriggerManager.processTriggersBySurveyId(surveyId);\r\n    }\r\n  }\r\n\r\n  static removeSurvey(surveyId: string) {\r\n    delete TriggerManager.triggerInstances[surveyId];\r\n    if (Object.keys(TriggerManager.triggerInstances).length == 0) {\r\n      clearInterval(TriggerManager.triggerInterval);\r\n    }\r\n  }\r\n\r\n  static processIntervalTriggers() {\r\n    //if some survey is already running skip processing surveys for now?or queue it?.\r\n    Cookie.set(Constants.CCTriggerPageElapsedTime, new Date(), undefined, window.location.href);\r\n    Cookie.set(Constants.CCTriggerSiteElapsedTime, new Date(), undefined, undefined);\r\n    //set cookies and call every process Interval Triggers.\r\n    console.log(TriggerManager.triggerInstances);\r\n    for (let trigger in TriggerManager.triggerInstances) {\r\n      TriggerManager.triggerInstances[trigger].processIntervalTriggers();\r\n      TriggerManager.triggerInstances[trigger].processConditionalTriggers();\r\n    }\r\n  }\r\n\r\n  static processScrollTriggers(scrollNow) {\r\n    for (let trigger in TriggerManager.triggerInstances) {\r\n      //process all scroll triggers.\r\n      TriggerManager.triggerInstances[trigger].processScrollTriggers(scrollNow);\r\n    }\r\n  }\r\n\r\n  static disableTriggers(surveyId: string) {\r\n    TriggerManager.triggerInstances[surveyId].disableTriggers();\r\n  }\r\n\r\n};\r\n\r\n\r\n\r\nexport { TriggerManager };","import { Cookie } from \"./helpers/Cookie\";\r\nimport { Constants } from \"./Constants\";\r\nimport { SurveyManager } from \"./SurveyManager\";\r\nimport { TriggerUtils } from \"./helpers/TriggerUtils\";\r\nimport { CCSDKConfig } from \"./interfaces/CCSDKConfig\";\r\n\r\nclass Triggers {\r\n\r\n  ccsdk: any;\r\n  pageCountTrigger: boolean;\r\n  pageTimeTrigger: boolean;\r\n  siteCountTrigger: boolean;\r\n  siteTimeTrigger: boolean;\r\n  urlParamTrigger: boolean;\r\n  notUrlParamTrigger: boolean;\r\n  utmParamTrigger: boolean;\r\n  scrollPixelsTrigger: boolean;\r\n  minPageCount: number;\r\n  minSiteCount: number;\r\n  minPageTime: number;\r\n  minSiteTime: number;\r\n  minScrollPixels: number;\r\n  utm: string;\r\n  inUrl: RegExp;\r\n  notinUrl: RegExp;\r\n  pageCountTriggerEnabled: boolean;\r\n  siteCountTriggerEnabled: boolean;\r\n  pageTimeTriggerEnabled: boolean;\r\n  siteTimeTriggerEnabled: boolean;\r\n  urlParamTriggerEnabled: boolean;\r\n  notUrlParamTriggerEnabled: boolean;\r\n  utmParamTriggerEnabled: boolean;\r\n  scrollPixelsTriggerEnabled: boolean;\r\n\r\n  conditionalTriggers: any;\r\n\r\n  constructor( ccsdk ) {\r\n    this.ccsdk = ccsdk;\r\n    this.pageCountTrigger = false;\r\n    this.siteCountTrigger = false;\r\n    this.pageTimeTrigger = false;\r\n    this.siteTimeTrigger = false;\r\n    this.urlParamTrigger = false;\r\n    this.notUrlParamTrigger = false;\r\n    this.utmParamTrigger = false;\r\n    this.scrollPixelsTrigger = false;\r\n\r\n    //disable all triggers.\r\n    this.pageCountTriggerEnabled = false;\r\n    this.siteCountTriggerEnabled = false;\r\n    this.pageTimeTriggerEnabled = false;\r\n    this.siteTimeTriggerEnabled = false;\r\n    this.urlParamTriggerEnabled = false;\r\n    this.notUrlParamTriggerEnabled = false;\r\n    this.utmParamTriggerEnabled = false;\r\n    this.scrollPixelsTriggerEnabled = false;\r\n    this.conditionalTriggers = {};\r\n  }\r\n\r\n\r\n  enableClickTrigger( target: string, cb: any ) {\r\n    let item = document.querySelectorAll( target )[ 0 ];\r\n    if ( typeof item !== 'undefined' ) {\r\n      item.addEventListener( 'click', cb );\r\n    }\r\n  }\r\n\r\n  enablePageCountTrigger( minPageCount: number ) {\r\n    this.minPageCount = minPageCount;\r\n    this.pageCountTriggerEnabled = true;\r\n    this.TriggerPopUpByPageCount();\r\n  }\r\n\r\n  enableSiteCountTrigger( minSiteCount: number ) {\r\n    this.minSiteCount = minSiteCount;\r\n    this.pageCountTriggerEnabled = true;\r\n    this.TriggerPopUpByPageCount();\r\n  }\r\n\r\n  enablePageTimeTrigger( minPageTime: number ) {\r\n    this.minPageTime = minPageTime;\r\n    this.pageTimeTriggerEnabled = true;\r\n    this.TriggerPopUpByTimeSpentOnPage();\r\n  }\r\n\r\n  enableSiteTimeTrigger( minSiteTime: number ) {\r\n    this.minSiteTime = minSiteTime;\r\n    this.siteTimeTriggerEnabled = true;\r\n    this.TriggerPopUpByTimeSpentOnSite();\r\n  }\r\n\r\n  enablePopUpByURLPatternTrigger( urlPattern: RegExp ) {\r\n    this.inUrl = urlPattern;\r\n    this.urlParamTriggerEnabled = true;\r\n    this.TriggerPopUpByURLPattern();\r\n  }\r\n\r\n  enablePopUpByNotURLPatternTrigger( urlPattern: RegExp ) {\r\n    this.notinUrl = urlPattern;\r\n    this.notUrlParamTriggerEnabled = true;\r\n    this.TriggerPopUpByNotURLPattern();\r\n  }\r\n\r\n  enablePopUpByUTMPatternTrigger( urlPattern: string ) {\r\n    this.utm = urlPattern;\r\n    this.utmParamTriggerEnabled = true;\r\n    this.TriggerPopUpByUTMParameter();\r\n  }\r\n\r\n  enableScrollPixelsTrigger( minScrollPixels: number ) {\r\n    this.minScrollPixels = minScrollPixels;\r\n    this.scrollPixelsTriggerEnabled = true;\r\n\r\n  }\r\n\r\n  processIntervalTriggers() {\r\n    //if survey already launched\r\n    //skip processing.\r\n    if ( this.ccsdk.surveyRunning || this.ccsdk.surveyDone ) {\r\n      return;\r\n    }\r\n    this.TriggerPopUpByTimeSpentOnPage();\r\n    this.TriggerPopUpByTimeSpentOnSite();\r\n  }\r\n\r\n  setConditionalTriggers( config: CCSDKConfig ) {\r\n    ( window as any ).ccsdkDebug ? console.log( config.grepURL ) : '';\r\n    //\r\n    if ( ( typeof config.click !== 'undefined' ) && ( config.click != 0 ) ) {\r\n      this.conditionalTriggers.click = config.click;\r\n    }\r\n    if ( ( typeof config.onExitDetect !== 'undefined' ) ) {\r\n      this.conditionalTriggers.onExitDetect = config.onExitDetect;\r\n    }\r\n    // if ((typeof config.cssSelector !== 'undefined')) {\r\n    //   this.conditionalTriggers.cssSelector = config.cssSelector;\r\n    // }\r\n    if ( ( typeof config.waitSeconds !== 'undefined' ) && ( config.waitSeconds !== 0 ) ) {\r\n      this.conditionalTriggers.waitSeconds = config.waitSeconds;\r\n    }\r\n    if ( ( typeof config.scrollPercent !== 'undefined' ) && ( config.scrollPercent !== 0 ) ) {\r\n      this.conditionalTriggers.scrollPercent = config.scrollPercent;\r\n    }\r\n    if ( ( typeof config.grepInvertURL !== 'undefined' ) && ( config.grepInvertURL ) ) {\r\n      this.conditionalTriggers.grepInvertURL = config.grepInvertURL;\r\n    }\r\n    if ( ( typeof config.grepURL !== 'undefined' ) && ( config.grepURL ) ) {\r\n      this.conditionalTriggers.grepURL = config.grepURL;\r\n    }\r\n\r\n  }\r\n\r\n  processConditionalTriggers() {\r\n    //gather all conditional triggers and process them.\r\n    let self = this;\r\n    let isEnabled = true;\r\n    if ( this.ccsdk.surveyRunning || this.ccsdk.surveyDone ) {\r\n      ( window as any ).ccsdkDebug ? console.log( 'returning' ) : '';\r\n      return;\r\n    }\r\n    if ( typeof this.conditionalTriggers !== 'undefined' ) {\r\n      if ( Object.keys( this.conditionalTriggers ).length == 0 ) {\r\n        return false;\r\n      }\r\n      for ( let conditionalTrigger in this.conditionalTriggers ) {\r\n        if ( this.conditionalTriggers[ conditionalTrigger ] != null ) {\r\n          switch ( conditionalTrigger ) {\r\n            case \"onExitDetect\":\r\n              let onExitDetect = self.ccsdk.util.initListener( \"mouseout\", \"document\", function () {\r\n                ( window as any ).ccsdkDebug ? console.log( \"Mouse out\" ) : '';\r\n\r\n              } );\r\n\r\n              onExitDetect.internalHandler = self.ccsdk.util.listener( document, onExitDetect.type, onExitDetect.id, onExitDetect.cb );\r\n\r\n              break;\r\n            case \"click\":\r\n              //find click count on screen\r\n              //calculate click count\r\n              // if((window as any).click > this.conditionalTriggers.click) {\r\n              //   return SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n              // }\r\n              isEnabled = isEnabled && ( ( window as any ).click >= this.conditionalTriggers.click );\r\n              break;\r\n            case \"waitSeconds\":\r\n              let pageStartTime = new Date( Cookie.get( Constants.CCTriggerPageStartTime ) ).getTime();\r\n              let pageTime = new Date( Cookie.get( Constants.CCTriggerPageElapsedTime ) ).getTime();\r\n              isEnabled = isEnabled && TriggerUtils.checkTimeCondition( pageTime, pageStartTime, this.conditionalTriggers[ conditionalTrigger ] );\r\n              ( window as any ).ccsdkDebug ? console.log( 'waitSeconds enabled', isEnabled ) : '';\r\n              break;\r\n            case \"scrollPercent\":\r\n              //fill it with current scroll position\r\n              isEnabled = isEnabled && TriggerUtils.checkScroll( ( window as any ).ccsdkTopOffset, this.conditionalTriggers[ conditionalTrigger ] );\r\n              ( window as any ).ccsdkDebug ? console.log( 'scrollPercent enabled', isEnabled ) : '';\r\n\r\n              break;\r\n            case \"grepURL\":\r\n              isEnabled = isEnabled && TriggerUtils.checkInUrl( this.conditionalTriggers[ conditionalTrigger ] );\r\n              ( window as any ).ccsdkDebug ? console.log( 'grepURL enabled', isEnabled ) : '';\r\n              break;\r\n            case \"grepInvertURL\":\r\n              isEnabled = isEnabled && !TriggerUtils.checkInUrl( this.conditionalTriggers[ conditionalTrigger ] );\r\n              ( window as any ).ccsdkDebug ? console.log( 'grepInvertURL enabled', isEnabled ) : '';\r\n              break;\r\n          }\r\n        }\r\n      }\r\n      if ( isEnabled ) {\r\n        if ( this.ccsdk && this.ccsdk.tracking ) {\r\n          this.ccsdk.tracking.trackEvent( 'Popped Up', {\r\n            token: this.ccsdk.tracking.token,\r\n            data: {\r\n              name: null,\r\n              action: null\r\n            }\r\n          }, null, null )\r\n        }\r\n        SurveyManager.addSurvey( this.ccsdk.surveyToken );\r\n      }\r\n    } else {\r\n      //do nothing.\r\n    }\r\n  }\r\n\r\n  processNonConditionalTriggers() {\r\n    //process all non conditional one shot triggers here?\r\n  }\r\n\r\n  processScrollTriggers( scrollNow: number ) {\r\n    this.TriggerPopUpByScrollPixels( scrollNow );\r\n  }\r\n\r\n  TriggerPopUpByPageCount() {\r\n    let pageCount = parseInt( Cookie.get( Constants.CCTriggerSitePageViewCount ) );\r\n    if ( pageCount == NaN ) {\r\n      pageCount = 0;\r\n    }\r\n    //!(window as any).globalSurveyRunning && \r\n    if ( !this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.pageCountTrigger && TriggerUtils.checkPageCount( pageCount, this.minPageCount ) ) {\r\n      this.pageCountTrigger = true;\r\n      //displayQuestion\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey( this.ccsdk.surveyToken );\r\n    } else {\r\n      //already executed.\r\n      //or condition not satisified yet.\r\n    }\r\n  }\r\n\r\n\r\n  //minPageTime in seconds\r\n  TriggerPopUpByTimeSpentOnPage() {\r\n    let pageStartTime = new Date( Cookie.get( Constants.CCTriggerPageStartTime ) ).getTime();\r\n    let pageTime = new Date( Cookie.get( Constants.CCTriggerPageElapsedTime ) ).getTime();\r\n\r\n    //!(window as any).globalSurveyRunning && \r\n    if ( !this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.pageTimeTrigger && TriggerUtils.checkTimeCondition( pageTime, pageStartTime, this.minPageTime ) ) {\r\n      this.pageTimeTrigger = true;\r\n      //displayQuestion\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey( this.ccsdk.surveyToken );\r\n    } else {\r\n      //already executed.\r\n      //or condition not satisified yet.\r\n    }\r\n  }\r\n\r\n  TriggerPopUpByTimeSpentOnSite() {\r\n    let siteStartTime = new Date( Cookie.get( Constants.CCTriggerSiteStartTime ) ).getTime();\r\n    let siteTime = new Date( Cookie.get( Constants.CCTriggerSiteElapsedTime ) ).getTime();\r\n    //!(window as any).globalSurveyRunning && \r\n    if ( !this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.siteTimeTrigger && TriggerUtils.checkTimeCondition( siteTime, siteStartTime, this.minSiteTime ) ) {\r\n      this.siteTimeTrigger = true;\r\n      //displayQuestion\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey( this.ccsdk.surveyToken );\r\n    } else {\r\n      //already executed.\r\n      //or condition not satisified yet.\r\n    }\r\n  }\r\n\r\n  TriggerPopUpByInactivity() {\r\n\r\n  }\r\n\r\n  TriggerPopUpByScrollPixels( scrollNow: number ) {\r\n    //!(window as any).globalSurveyRunning && \r\n    if ( !this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.scrollPixelsTrigger && TriggerUtils.checkScroll( scrollNow, this.minScrollPixels ) ) {\r\n      this.scrollPixelsTrigger = true;\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey( this.ccsdk.surveyToken );\r\n      // this.ccsdk.initSurvey();\r\n      // SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n    } else {\r\n      //already executed?\r\n      //or condition not satisified yet.\r\n    }\r\n  }\r\n\r\n  //run only once?\r\n  TriggerPopUpByURLPattern() {\r\n    //!(window as any).globalSurveyRunning && \r\n    if ( !this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.urlParamTrigger && TriggerUtils.checkInUrl( this.inUrl ) ) {\r\n      this.urlParamTrigger = true;\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey( this.ccsdk.surveyToken );\r\n    } else {\r\n\r\n    }\r\n  }\r\n\r\n  TriggerPopUpByNotURLPattern() {\r\n    //!(window as any).globalSurveyRunning && \r\n    if ( !this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.notUrlParamTrigger && !TriggerUtils.checkInUrl( this.inUrl ) ) {\r\n      this.notUrlParamTrigger = true;\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey( this.ccsdk.surveyToken );\r\n    } else {\r\n\r\n    }\r\n  }\r\n\r\n  TriggerPopUpByUTMParameter() {\r\n    let utmP = this.utm.split( \"=\" );\r\n    let utmVal = Cookie.getParameterByName( utmP[ 0 ], undefined );\r\n    //!(window as any).globalSurveyRunning && \r\n    if ( !this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.utmParamTrigger && utmVal === utmP[ 1 ] ) {\r\n      this.utmParamTrigger = true;\r\n\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey( this.ccsdk.surveyToken );\r\n    }\r\n  }\r\n\r\n  resetTriggers() {\r\n    this.pageCountTrigger = false;\r\n    this.pageTimeTrigger = false;\r\n    this.siteTimeTrigger = false;\r\n    this.urlParamTrigger = false;\r\n    this.scrollPixelsTrigger = false;\r\n  }\r\n}\r\n\r\nexport { Triggers };\r\n\r\n\r\n// function triggerHandler(surveyHandler) {\r\n//   //survey specific Trigger Handlers\r\n//   // self.surveyRunning = self.util.get('#' + self.surveyToken  + \"-survey\").length == 1;\r\n  // Cookie.set(Constants.CCTriggerPageElapsedTime, new Date(), undefined, window.location.href);\r\n  // Cookie.set(Constants.CCTriggerSiteElapsedTime, new Date(), undefined, undefined);\r\n//   surveyHandler.triggers.TriggerPopUpByTimeSpentOnSite(surveyHandler.siteInterval);\r\n//   // surveyHandler.surveyRunning = surveyHandler.util.get('#' + self.surveyToken  + \"-survey\").length == 1;\r\n//   surveyHandler.triggers.TriggerPopUpByTimeSpentOnPage(surveyHandler.pageInterval);\r\n// }\r\n\r\n//call below functions when survey is locked and loaded.\r\n// self.triggers.TriggerPopUpByURLPattern(/xyz=33/);\r\n// self.triggers.TriggerPopUpByUTMParameter();\r\n// self.triggerInterval = setInterval(self.triggerHandler, 1000, self);","class TriggerUtils {\r\n\r\n\r\n    public static checkInUrl(inUrl : RegExp) {\r\n        return window.location.href.match(inUrl) != null && window.location.href.match(inUrl).length > 0;\r\n    }\r\n\r\n    public static checkTimeCondition(pageTime : number, pageStartTime : number, minPageTime : number) {\r\n        return Math.round((pageTime - pageStartTime) / 1000) > minPageTime;\r\n    }\r\n\r\n    public static checkScroll(scrollNow : number, minScrollPixels : number) {\r\n        return scrollNow > minScrollPixels;\r\n    }\r\n\r\n    public static checkPageCount(pageCount : number, minPageCount : number) {\r\n        return pageCount >= minPageCount;\r\n    }\r\n}\r\n\r\nexport { TriggerUtils };","import { RequestHelper } from './Request';\r\n\r\nexport class MatomoTracker {\r\n\r\n  public username;\r\n  public token;\r\n\r\n  trackEvent(event, payload, successCb, errorCb) {\r\n    let url\r\n    try {\r\n      url = new URL('https://matomo.getcloudcherry.com/piwik.php');\r\n    } catch (err) {\r\n      if (errorCb && typeof errorCb === 'function') {\r\n        errorCb();\r\n      }\r\n      return;\r\n    }\r\n    // constants for project\r\n    const idsite = 4;\r\n    const rec = 1;\r\n\r\n    let searchParams = {\r\n      idsite,\r\n      rec,\r\n      action_name: event,\r\n      url: window.location.href,\r\n      action_url: window.location.href,\r\n      uid: this.username,\r\n      _cvar: { '1': ['Token', payload.token] },\r\n      new_visit: event === 'Welcome Pop up Position' ? 1 : 0,\r\n      e_c: event,\r\n      e_a: payload.data.action,\r\n      e_n: payload.data.name,\r\n      rand: Math.ceil(Math.random() * 100)\r\n    };\r\n    Object.keys(searchParams).forEach(x => {\r\n      let param;\r\n      if (typeof searchParams[x] === 'string') {\r\n        param = searchParams[x];\r\n      } else {\r\n        param = JSON.stringify(searchParams[x]);\r\n      }\r\n      url.searchParams.set(x, param);\r\n    })\r\n    return RequestHelper.post(url.toString(), null, successCb, errorCb);\r\n  }\r\n}"],"sourceRoot":""}