{"version":3,"sources":["webpack:///cc.en.bundle.js","webpack:///webpack/bootstrap 09c603993d4f093d5324","webpack:///./src/helpers/dom/DomUtilities.ts","webpack:///./src/Constants.ts","webpack:///./src/helpers/Cookie.ts","webpack:///./src/SurveyManager.ts","webpack:///./src/helpers/Request.ts","webpack:///./src/helpers/filters/LanguageTextFilter.ts","webpack:///./src/Config.ts","webpack:///./src/helpers/templates.ts","webpack:///./src/helpers/filters/filter-utils.ts","webpack:///./src/helpers/dom/Select.ts","webpack:///./src/helpers/filters/ConditionalFlowFilter.ts","webpack:///./src/polyfills/ccsdk.polyfill.ts","webpack:///./src/CCSDKEntry.ts","webpack:///./src/Survey.ts","webpack:///./src/SurveyHandler.ts","webpack:///./src/css/main.scss","webpack:///./node_modules/rtl-css-loader/lib/css-base.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./src/helpers/filters/ConditionalTextFilter.ts","webpack:///./src/helpers/dom/DomSurvey.ts","webpack:///./src/helpers/dom/Theme.ts","webpack:///./src/helpers/dom/Slider.ts","webpack:///./src/TriggerManager.ts","webpack:///./src/Triggers.ts","webpack:///./src/helpers/TriggerUtils.ts","webpack:///./src/helpers/tracking.ts"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","default","object","property","prototype","hasOwnProperty","p","s","value","templates_1","DomUtilities","selector","document","querySelectorAll","appendStyle","css","head","getElementsByTagName","style","createElement","type","styleSheet","cssText","appendChild","createTextNode","remove","el","parentNode","removeChild","removeAll","elements","Array","forEach","removeClassAll","className","_this","this","removeClass","addClassAll","addClass","classList","replace","RegExp","split","join","add","toggleClass","contains","hasClass","test","ready","fn","attachEvent","readyState","addEventListener","getParents","parentSelector","parents","push","listener","evt","sel","handler","selectorMatches","Element","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","indexOf","internalHandler","event","t","target","initListener","id","cb","checkIfListenerExists","ar","_i","ar_1","length","on","off","removeEventListener","removeListener","removeAllListeners","ar_2","trigger","eventName","data","CustomEvent","detail","createEvent","initCustomEvent","dispatchEvent","removeTrigger","shadeBlendConvert","from","to","e","sbcRip","RGB","slice","parseFloat","r","parseInt","Math","round","h","b","f","toString","hexToRGB","hex","alpha","substr","map","g","arrayContains","needle","findNaN","index","item","generateSelectOptions","arr","translatedArr","isArray","res","translatedOpt","generateLanguageSelectOptions","checkOptionContainsImage","opt","generateRadioImageOptions","optHtml","templates","option_radio_image","generateRadioIgnoreImageOptions","option_radio","generateRadioOptions","generateCheckboxImageOptions","option_checkbox_image","generateCheckboxIgnoreImageOptions","option_checkbox","generateCheckboxOptions","Constants","CCTriggerPageStartTime","CCTriggerPageElapsedTime","CCTriggerSiteStartTime","CCTriggerSiteElapsedTime","CCTriggerSitePageViewCount","CCTriggerIndividualPageViewCount","SURVEY_IMPRESSION_EVENT","SURVEY_START_EVENT","SURVEY_DATA_EVENT","SURVEY_END_EVENT","SURVEY_CLOSE_EVENT","SURVEY_QUESTION_EVENT","SURVEY_ANSWER_EVENT","SURVEY_CLICK_EVENT","GRANT_TYPE","AUTHORIZATION","AUTHORIZATION_BEARER","SURVEY_CLIENT","Cookie","set","days","path","date","Date","setTime","getTime","expires","toUTCString","dir","cookie","nameEQ","ca","charAt","substring","delete","getParameterByName","url","window","location","href","regex","results","exec","decodeURIComponent","SurveyManager","initializeSurvey","surveyId","surveyInstances","console","error","setupSurvey","addSurvey","ccsdkDebug","log","surveyQueue","processQueueInterval","setInterval","processQueueIntervalCB","removeSurvey","survey","splice","clearInterval","globalSurveyRunning","pop","setSurveyRunning","globalSurveyStartTime","unsetSurveyRunning","makeRequest","method","postParams","headers","successcb","errorcb","xhr","XMLHttpRequest","open","onload","status","response","match","JSON","parse","statusText","onerror","keys","key","setRequestHeader","send","RequestHelper","getWithHeaders","postWithHeaders","stringify","post","LanguageTextFilter","translateQuestionText","surveyHandler","question","ccsdk","config","language","translated","text","qText","translateMessages","surveyData","translateDisplayLegend","displayLegend","translateMultiSelect","multiSelect","translatedOptions_1","x","translateMultiSelectOption","option","effectiveMultiselect","Config","API_URL","SURVEY_BY_TOKEN","SURVEY_PARTIAL_RESPONSE","CDN_URL","CDN_ASSET_URL","POST_LOGIN_TOKEN","GET_SURVEY_THROTTLE_LOGIC","POST_THROTTLING","POST_THROTTLING_ADD_ENTRIES","POST_SURVEY_FINAL","GET_CAMPAIGN","QuestionSurvey","QuestionStart","QuestionSingleline","QuestionNumber","QuestionMultiline","QuestionCheckbox","QuestionRadio","QuestionRadioImage","QuestionScale","QuestionCSATAgreement5","QuestionCSATSatisfaction5","QuestionNPS","QuestionSelect","QuestionMultiSelect","QuestionSmile","QuestionSmileInverted","QuestionStar","QuestionSlider","OptionRadioImage","OptionRadio","OptionCheckbox","OptionCheckboxImage","ThankYou","QuestionDate","LanguageSelector","question_survey","question_start","question_text","question_number","question_scale","question_csat_agreement_5","question_csat_satisfaction_5","question_nps","question_multi_line_text","question_multi_select","question_radio","question_radio_image","question_checkbox","question_select","question_smile_5","question_date","question_smile_5_inverted","question_star_5","question_slider","thankyou","language_selector","isAnd","filterQuestion","groupBy","toUpperCase","isOr","isNumberCheck","answerCheck","doesSatisfy","answer","getAnswerForQuestionId","questionId","toLowerCase","textInput","iFoundAll","getQuestionById","questionAnswerText","_a","aAnswer","displayType","numberInput","number","questionCompare","a","sequence","checkLanguage","fOption","DomUtilities_1","LanguageTextFilter_1","Select","qId","listeners","init","util","$body","$html","select","parent","getAttribute","self","classes","template","options","innerHTML","insertAdjacentHTML","setupListeners","ref2","selfOption","selectOptions","selectWrapper","selectionTrigger","selectedOptionText","textContent","selectedValueText","addOrRemoveFromList","setAttribute","ref","ccSelect","stopPropagation","destroyListeners","setValue","selectTrigger","selectedValueList","translatedSelection","selectOption","removeOption","csv","allOptions","allOptions_1","domOptions","listAsString","list","itemIndex","filter_utils_1","ConditionalFlowFilter","aAddedCount","aRemovedCount","getConditionalSurveyQuestions","aQuestion","conditionalFilter","iSatisfied","iFailed","_b","_c","filterquestions","aFilterByQuestion","surveyQuestions","getSurveyQuestions","removeAnswer","sort","toStr","isCallable","toInteger","Number","isNaN","isFinite","floor","abs","maxSafeInteger","pow","toLength","len","min","max","arrayLike","C","items","TypeError","T","mapFn","arguments","kValue","A","k","params","bubbles","cancelable","Event","includes","searchElement","fromIndex","y","surveyToken","trim","Cookie_1","isActive","SurveyManager_1","Survey_1","Survey","tracking","trackEvent","token","isMobile","action","destroy","dom","callback","prefill","restArgs","apply","concat","prefillByTag","questionTag","prefillByNote","questionNote","show","hide","localCCSDK","innerWidth","CCSDK","queue","q","args","functionName","queue_1","eventCCReady","initEvent","SurveyHandler_1","DomSurvey_1","Constants_1","TriggerManager_1","Triggers_1","Request_1","Config_1","tracking_1","requester","isThrottled","surveyDone","surveyStatus","surveyRunning","thorttlingLogic","MatomoTracker","textDirection","triggers","Triggers","TriggerManager","SurveyHandler","brandColor","setHtmlTextDirection","setDisplayOptions","username","password","cssSelector","setConditionalTriggers","getSurveyThrottlingLogic","getThrottleUrl","loginData","access_token","checkThrottling","inputIds","uniqueIDQuestionIdOrTag","logics","filter","postThrottleUrl","throttleResponse","addThrottlingEntries","isOpen","addThrottleUrl","debug","user","mobile","emailId","customId","surveySentDate","surveyOpenDate","channel","isOpened","initSurvey","ccSDKElement","querySelector","ccSDKDir","direction","surveyDisplay","position","welcomePopupAnimation","surveyPosition","search","getSurveyData","questions","preFill","skipWelcomePage","hideLoader","initSurveyQuestions","displayWelcomeQuestion","fetchQuestions","DomSurvey","setTheme","keepAlive","onImpressionEvent","startSurvey","setCoolDownPeriod","surveyStartTime","acceptAnswers","attachSurvey","initSurveyDom","onSurveyStartEvent","restOfArgs","prefillObject","fillPrefillDirect","fillPrefill","fillPrefillByNote","enableClickTrigger","count","enablePageCountTrigger","count2","enableSiteCountTrigger","enablePageTimeTrigger","enableSiteTimeTrigger","enablePopUpByURLPatternTrigger","enablePopUpByNotURLPatternTrigger","enablePopUpByUTMPatternTrigger","enableScrollPixelsTrigger","ConditionalTextFilter_1","Select_1","ConditionalFlowFilter_1","answers","surveyAnswers","_prefillsPartiallyPosted","surveyPopupAnimation","domListeners","questionsToDisplay","prefillQuestions","conditionalQuestions","prefillResponses","prefillWithTags","prefillWithNote","prefillDirect","displayThankYouCb","finalPost","thankyouHtml","thankyouText","startText","startButtonText","branding","replaceInQuestionsContainer","thankyouContainer","onSurveyEndEvent","setTimeout","destroySurveyCb","acceptAnswersCb","postPartialAnswer","domSelectElements","setQIndex","randomNumber","String","random","surveyUrl","setupPrefill","setupSurveyContainer","cleanSurvey","displayQuestions","displayThankYou","destroySurvey","fillPrefillQuestionObject","surveyHtml","appendInBody","displayQuestionSelector","warningWelcomeText","onSurveyImpressionEvent","welcomeHtml","welcomeText","getElementById","showWelcomeContainer","welcomeQuestionDisplayTime","welcomeInterval","checkWelcomeQuestionDisplay","campaign","coolDownPeriod","now","killWelcomeQuestion","cancelKillWelcomeQuestion","displayLanguageSelector","options1","cTemplate1","$questionContainer","firstChild","languageSelect","submitBtn","selectRes","removePrevListener","languageSelect2","isRTL","loadFirstQuestion","filterQuestions","ccSurvey","getElementsByClassName","checkConditionals","compiledTemplate","compileTemplate","isPrefillQuestion","getPrefillResponseById","updatePrefillResponseById","prefillObj","fillPrefillQuestion","valueType","responseStored","questionText","getAnswerTypeFromDisplayType","postPrefillPartialAnswer","fullSubmission","partialResponseId","surveyPartialUrl","resp","find","complete","onSurveyAnswerEvent","postSurveyFinalUrl","lastAnswer","answersAll","timeAtPost","finalData","locationId","responses","nps","surveyClient","responseDuration","_lastAnswer","questionTemplate","optMin","optMax","ConditionalTextFilter","filterText","isRequired","questionTags","tileColor","attributes","scaleColor","presentationMode","tileColorDark","startRange","endRange","startRangeLabel_1","endRangeLabel_1","midRangeLabel","anchorMetricName","metricName","customMetric","customMetrics","optionsLength","optionCategories","label","displayLegend_1","mobileImageUrl","imageVisibility010","imageVisibility110","scaleVisibility","scaleImageContainer","divider","optionStyle","legendDimension","parentContainer","dimension","leftWidth","initial_1","cmwidthstart","categoryRange","cmwidthend","iterator","startRange_1","endRange_1","initial_2","color","initial_3","optionLeftExtraClass","optionMidExtraClass","optionRightExtraClass","optionMaxWidth","validationHint","characterLimit","acTemplate","multiSelect1","reverse","displayStyle","options2_1","options2_2","options3","acTemplate1","acTemplate2","options2","invertedMultiSelect","invertedMultiSelect_1","startRangeLabel","endRangeLabel","displayLegend2","startRangeLabel1","endRangeLabel1","displayLegend3","isRetired","isPrefillTags","isPrefillNote","isPrefillDirect","fillPrefillWithTags","fillPrefillWithNote","supportedDisplayTypes","tag","innerHeight","note","apiFill","staffFill","isQuestionFilled","surveyContainer","getSurveyContainer","welcomeContainer","getWelcomeContainer","content","transform","locals","result","mediaQuery","alreadyImportedModules","addStylesToDom","styles","domStyle","stylesInDom","refs","j","parts","addStyle","listToStyles","newStyles","base","media","sourceMap","part","insertStyleElement","getElement","insertInto","Error","lastStyleElementInsertedAtTop","stylesInsertedAtTop","insertAt","nextSibling","insertBefore","removeStyleElement","idx","createStyleElement","attrs","addAttrs","createLinkElement","link","rel","obj","update","singleton","styleIndex","singletonCounter","applyToSingletonTag","bind","URL","createObjectURL","revokeObjectURL","Blob","btoa","updateLink","applyToTag","newObj","replaceText","cssNode","childNodes","autoFixUrls","convertToAbsoluteUrls","fixUrls","unescape","encodeURIComponent","blob","oldSrc","isOldIE","memo","all","atob","DEBUG","newList","mayRemove","textStore","replacement","Boolean","baseUrl","protocol","host","currentDir","pathname","fullMatch","origUrl","unquotedOrigUrl","$1","newUrl","conditionalText","conditionalText_1","setName","leadingDisplayTexts","filterByQuestion","groupTitle","__assign","assign","Theme_1","Slider_1","trackSelects","trackRadios","currentQuestionListeners","qIndex","qResponse","time","theme","Theme","getQindex","$popupContainer","$popupContainer2","$startBtn","onSurveyClickEvent","showLoader","nextQue","nextQuestion","prevQue","prevQuestion","closeSurvey","onSurveyCloseEvent","bodyElement","minSurvey","minimizeSurvey","resumeText","resumeButtonText","updateProgress","currentQuestionId","width","loadQuestionSpecifics","leftIcon","onSurveyQuestionEvent","span","validationSpan","validationRegex","submitQuestion","nextQ","rightIcon","nextIcon","$loader","html","appendInQuestionsContainer","startContainer","showLanguageSelector","qType","setupListenersQuestionScale","setupListenersQuestionNPS","setupListenersQuestionMultiline","setupListenersQuestionSelect","setupListenersQuestionRadio","setupListenersQuestionRadioImage","setupListenersQuestionCheckbox","setupListenersQuestionStar","setupListenersQuestionSmile","setupListenersQuestionCsat","setupListenersQuestionSlider","setupListenersQuestionSingleline","setupListenersQuestionNumber","setupListenersForDate","selectedRating","selectedRating1","previousValue","previousSelection","rating","previousValues","previousValues_1","checked","child","previousSibling","multilineRes","singlelineRes","model","dateQuestion","children","month","year","numberRes","sliderRes","sliderInput","Slider","brandColorDark","brandColorWhite","inputRange","rangeTip","speed","clearTo","updateRangeTip","display","clearTimeout","timeout","animateHandler","currValue","maxValue","requestAnimationFrame","successHandler","undefined","sitePageViewCount","individualPageViewCount","click","onscroll","doc","documentElement","top","pageXOffset","scrollLeft","clientLeft","pageYOffset","scrollTop","clientTop","ccsdkTopOffset","processScrollTriggers","onclick","triggerInstances","triggerInterval","processIntervalTriggers","processConditionalTriggers","scrollNow","disableTriggers","TriggerUtils_1","pageCountTrigger","siteCountTrigger","pageTimeTrigger","siteTimeTrigger","urlParamTrigger","notUrlParamTrigger","utmParamTrigger","scrollPixelsTrigger","pageCountTriggerEnabled","siteCountTriggerEnabled","pageTimeTriggerEnabled","siteTimeTriggerEnabled","urlParamTriggerEnabled","notUrlParamTriggerEnabled","utmParamTriggerEnabled","scrollPixelsTriggerEnabled","conditionalTriggers","minPageCount","TriggerPopUpByPageCount","minSiteCount","minPageTime","TriggerPopUpByTimeSpentOnPage","minSiteTime","TriggerPopUpByTimeSpentOnSite","urlPattern","inUrl","TriggerPopUpByURLPattern","notinUrl","TriggerPopUpByNotURLPattern","utm","TriggerPopUpByUTMParameter","minScrollPixels","grepURL","onExitDetect","waitSeconds","scrollPercent","grepInvertURL","isEnabled","conditionalTrigger","pageStartTime","pageTime","TriggerUtils","checkTimeCondition","checkScroll","checkInUrl","processNonConditionalTriggers","TriggerPopUpByScrollPixels","pageCount","NaN","checkPageCount","siteStartTime","siteTime","TriggerPopUpByInactivity","utmP","utmVal","resetTriggers","payload","successCb","errorCb","searchParams","idsite","rec","action_name","action_url","uid","_cvar","1","new_visit","e_c","e_a","e_n","rand","ceil","param"],"mappings":"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","file":"cc.en.bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 11);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar templates_1 = __webpack_require__(7);\r\nvar DomUtilities = /** @class */ (function () {\r\n    function DomUtilities() {\r\n        // HTMLElement.prototype.matches = HTMLElement.prototype.matches ||\r\n        // HTMLElement.prototype.matchesSelector ||\r\n        // HTMLElement.prototype.webkitMatchesSelector ||\r\n        // HTMLElement.prototype.mozMatchesSelector ||\r\n        // HTMLElement.prototype.msMatchesSelector ||\r\n        // HTMLElement.prototype.oMatchesSelector;\r\n    }\r\n    DomUtilities.prototype.get = function (selector) {\r\n        return document.querySelectorAll(selector);\r\n    };\r\n    DomUtilities.prototype.appendStyle = function (css) {\r\n        var head = document.head || document.getElementsByTagName('head')[0];\r\n        var style = document.createElement('style');\r\n        style.type = 'text/css';\r\n        if (style.styleSheet) {\r\n            style.styleSheet.cssText = css;\r\n        }\r\n        else {\r\n            style.appendChild(document.createTextNode(css));\r\n        }\r\n        head.appendChild(style);\r\n    };\r\n    DomUtilities.prototype.remove = function (el) {\r\n        el.parentNode.removeChild(el);\r\n    };\r\n    DomUtilities.prototype.removeAll = function (elements) {\r\n        Array.prototype.forEach.call(elements, function (el, i) {\r\n            el.parentNode.removeChild(el);\r\n        });\r\n    };\r\n    DomUtilities.prototype.css = function (elements, property, value) {\r\n        Array.prototype.forEach.call(elements, function (el, i) {\r\n            el.style[property] = value;\r\n        });\r\n    };\r\n    DomUtilities.prototype.removeClassAll = function (elements, className) {\r\n        var _this = this;\r\n        Array.prototype.forEach.call(elements, function (el, i) {\r\n            _this.removeClass(el, className);\r\n        });\r\n    };\r\n    DomUtilities.prototype.addClassAll = function (elements, className) {\r\n        var _this = this;\r\n        Array.prototype.forEach.call(elements, function (el, i) {\r\n            _this.addClass(el, className);\r\n        });\r\n    };\r\n    DomUtilities.prototype.removeClass = function (el, className) {\r\n        // console.log(el);\r\n        if (!el) {\r\n            return;\r\n        }\r\n        if (el.classList)\r\n            el.classList.remove(className);\r\n        else\r\n            el.className = el.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\r\n    };\r\n    DomUtilities.prototype.addClass = function (el, className) {\r\n        if (!el) {\r\n            return;\r\n        }\r\n        if (el.classList)\r\n            el.classList.add(className);\r\n        else\r\n            el.className += ' ' + className;\r\n    };\r\n    DomUtilities.prototype.toggleClass = function (el, className) {\r\n        if (el.classList) {\r\n            if (el.classList.contains(className))\r\n                el.classList.remove(className);\r\n            else\r\n                el.classList.add(className);\r\n        }\r\n    };\r\n    DomUtilities.prototype.hasClass = function (el, className) {\r\n        if (el.classList)\r\n            return el.classList.contains(className);\r\n        else\r\n            return new RegExp('(^| )' + className + '( |$)', 'gi').test(el.className);\r\n    };\r\n    DomUtilities.prototype.ready = function (fn) {\r\n        if (document.attachEvent ? document.readyState === \"complete\" : document.readyState !== \"loading\") {\r\n            fn();\r\n        }\r\n        else {\r\n            document.addEventListener('DOMContentLoaded', fn);\r\n        }\r\n    };\r\n    DomUtilities.prototype.getParents = function (el, parentSelector) {\r\n        // If no parentSelector defined will bubble up all the way to *document*\r\n        if (parentSelector === undefined) {\r\n            parentSelector = document;\r\n        }\r\n        var parents = [];\r\n        var p = el.parentNode;\r\n        while (p !== parentSelector) {\r\n            var o = p;\r\n            parents.push(o);\r\n            p = o.parentNode;\r\n        }\r\n        parents.push(parentSelector); // Push that parentSelector you wanted to stop at\r\n        return parents;\r\n    };\r\n    DomUtilities.prototype.listener = function (el, evt, sel, handler) {\r\n        var selectorMatches = function (el, selector) {\r\n            var p = Element.prototype;\r\n            var f = p.matches || p.webkitMatchesSelector || p.mozMatchesSelector || p.msMatchesSelector || function (s) {\r\n                return [].indexOf.call(document.querySelectorAll(s), this) !== -1;\r\n            };\r\n            return f.call(el, selector);\r\n        };\r\n        var internalHandler = function (event) {\r\n            var t = event.target;\r\n            while (t && t !== this) {\r\n                if (selectorMatches(t, sel)) {\r\n                    handler.call(t, event);\r\n                }\r\n                t = t.parentNode;\r\n            }\r\n        };\r\n        el.addEventListener(evt, internalHandler);\r\n        return internalHandler;\r\n    };\r\n    DomUtilities.prototype.initListener = function (type, id, cb) {\r\n        var ref = {\r\n            id: id,\r\n            type: type,\r\n            cb: cb,\r\n            internalHandler: undefined,\r\n        };\r\n        return ref;\r\n    };\r\n    DomUtilities.prototype.checkIfListenerExists = function (id, ar) {\r\n        for (var _i = 0, ar_1 = ar; _i < ar_1.length; _i++) {\r\n            var listener = ar_1[_i];\r\n            if (listener.id == id) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    DomUtilities.prototype.on = function (evt, el, handler) {\r\n        el.addEventListener(evt, handler);\r\n    };\r\n    DomUtilities.prototype.off = function (evt, el, handler) {\r\n        el.removeEventListener(evt, handler);\r\n    };\r\n    DomUtilities.prototype.removeListener = function (el, evt, handler) {\r\n        el.removeEventListener(evt, handler);\r\n    };\r\n    DomUtilities.prototype.removeAllListeners = function (ar) {\r\n        for (var _i = 0, ar_2 = ar; _i < ar_2.length; _i++) {\r\n            var listener = ar_2[_i];\r\n            this.removeListener(document.querySelectorAll(\"body\")[0], listener.type, listener.internalHandler);\r\n        }\r\n        return true;\r\n    };\r\n    DomUtilities.prototype.trigger = function (el, eventName, data) {\r\n        if (typeof CustomEvent === 'function') {\r\n            var event = new CustomEvent(eventName, { detail: data });\r\n        }\r\n        else {\r\n            var event = document.createEvent('CustomEvent');\r\n            event.initCustomEvent(eventName, true, true, data);\r\n        }\r\n        el.dispatchEvent(event);\r\n    };\r\n    DomUtilities.prototype.removeTrigger = function (el, eventName) {\r\n        el.removeEventListener(eventName);\r\n    };\r\n    DomUtilities.prototype.shadeBlendConvert = function (p, from, to) {\r\n        if (typeof (p) != \"number\" || p < -1 || p > 1 || typeof (from) != \"string\" || (from[0] != 'r' && from[0] != '#') || (typeof (to) != \"string\" && typeof (to) != \"undefined\"))\r\n            return null; //ErrorCheck\r\n        if (!this.sbcRip)\r\n            this.sbcRip = function (d) {\r\n                var l = d.length, RGB = new Object();\r\n                if (l > 9) {\r\n                    d = d.split(\",\");\r\n                    if (d.length < 3 || d.length > 4)\r\n                        return null; //ErrorCheck\r\n                    RGB[0] = i(d[0].slice(4)), RGB[1] = i(d[1]), RGB[2] = i(d[2]), RGB[3] = d[3] ? parseFloat(d[3]) : -1;\r\n                }\r\n                else {\r\n                    if (l == 8 || l == 6 || l < 4)\r\n                        return null; //ErrorCheck\r\n                    if (l < 6)\r\n                        d = \"#\" + d[1] + d[1] + d[2] + d[2] + d[3] + d[3] + (l > 4 ? d[4] + \"\" + d[4] : \"\"); //3 digit\r\n                    d = i(d.slice(1), 16), RGB[0] = d >> 16 & 255, RGB[1] = d >> 8 & 255, RGB[2] = d & 255, RGB[3] = l == 9 || l == 5 ? r(((d >> 24 & 255) / 255) * 10000) / 10000 : -1;\r\n                }\r\n                return RGB;\r\n            };\r\n        var i = parseInt, r = Math.round, h = from.length > 9, h = typeof (to) == \"string\" ? to.length > 9 ? true : to == \"c\" ? !h : false : h, b = p < 0, p = b ? p * -1 : p, to = to && to != \"c\" ? to : b ? \"#000000\" : \"#FFFFFF\", f = this.sbcRip(from), t = this.sbcRip(to);\r\n        if (!f || !t)\r\n            return null; //ErrorCheck\r\n        if (h)\r\n            return \"rgb(\" + r((t[0] - f[0]) * p + f[0]) + \",\" + r((t[1] - f[1]) * p + f[1]) + \",\" + r((t[2] - f[2]) * p + f[2]) + (f[3] < 0 && t[3] < 0 ? \")\" : \",\" + (f[3] > -1 && t[3] > -1 ? r(((t[3] - f[3]) * p + f[3]) * 10000) / 10000 : t[3] < 0 ? f[3] : t[3]) + \")\");\r\n        else\r\n            return \"#\" + (0x100000000 + (f[3] > -1 && t[3] > -1 ? r(((t[3] - f[3]) * p + f[3]) * 255) : t[3] > -1 ? r(t[3] * 255) : f[3] > -1 ? r(f[3] * 255) : 255) * 0x1000000 + r((t[0] - f[0]) * p + f[0]) * 0x10000 + r((t[1] - f[1]) * p + f[1]) * 0x100 + r((t[2] - f[2]) * p + f[2])).toString(16).slice(f[3] > -1 || t[3] > -1 ? 1 : 3);\r\n    };\r\n    DomUtilities.prototype.hexToRGB = function (hex, alpha) {\r\n        if (!hex || [4, 7].indexOf(hex.length) === -1) {\r\n            return; // throw new Error('Bad Hex');\r\n        }\r\n        hex = hex.substr(1);\r\n        // if shortcuts (#F00) -> set to normal (#FF0000)\r\n        if (hex.length === 3) {\r\n            hex = hex.split('').map(function (el) {\r\n                return el + el + '';\r\n            }).join('');\r\n        }\r\n        var r = parseInt(hex.slice(0, 2), 16), g = parseInt(hex.slice(2, 4), 16), b = parseInt(hex.slice(4, 6), 16);\r\n        if (alpha) {\r\n            return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha + \")\";\r\n        }\r\n        else {\r\n            return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\r\n        }\r\n    };\r\n    DomUtilities.prototype.arrayContains = function (needle) {\r\n        // Per spec, the way to identify NaN is that it is not equal to itself\r\n        var findNaN = needle !== needle;\r\n        var indexOf;\r\n        if (!findNaN && typeof Array.prototype.indexOf === 'function') {\r\n            indexOf = Array.prototype.indexOf;\r\n        }\r\n        else {\r\n            indexOf = function (needle) {\r\n                var i = -1, index = -1;\r\n                for (i = 0; i < this.length; i++) {\r\n                    var item = this[i];\r\n                    if ((findNaN && item !== item) || item === needle) {\r\n                        index = i;\r\n                        break;\r\n                    }\r\n                }\r\n                return index;\r\n            };\r\n        }\r\n        return indexOf.call(this, needle) > -1;\r\n    };\r\n    DomUtilities.prototype.generateSelectOptions = function (arr, translatedArr) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var translatedOpt = (translatedArr[i] || arr[i]).split(';');\r\n                var arrOpt = arr[i].split(';');\r\n                res += '<option value=\"' + arrOpt[0] + '\">' + (translatedOpt[0]) + '</option>';\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateLanguageSelectOptions = function (arr) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                if (arr[i] == 'default') {\r\n                    res += '<option value=\"' + arr[i] + '\">English (Default)</option>';\r\n                }\r\n                else {\r\n                    res += '<option value=\"' + arr[i] + '\">' + arr[i] + '</option>';\r\n                }\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.checkOptionContainsImage = function (arr) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = true;\r\n            for (i = 0; i < arr.length; i++) {\r\n                var opt = arr[i];\r\n                res = res && (opt.indexOf(';') !== -1) && (opt.indexOf('.') !== -1);\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateRadioImageOptions = function (arr, translatedArr, id) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var optHtml = templates_1.templates.option_radio_image;\r\n                var opt = arr[i].split(';');\r\n                var translatedOpt = translatedArr[i].split(';');\r\n                //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n                //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n                optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[1]);\r\n                optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\r\n                optHtml = optHtml.replace(/{{label}}/g, translatedOpt[0]);\r\n                optHtml = optHtml.replace(/{{labelFor}}/g, translatedOpt[0].replace(/\\s+/g, '-'));\r\n                optHtml = optHtml.replace(/{{value}}/g, opt[0]);\r\n                res += optHtml;\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateRadioIgnoreImageOptions = function (arr, translatedArr, id) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var optHtml = templates_1.templates.option_radio;\r\n                var opt = arr[i].split(';');\r\n                var translatedOpt = translatedArr[i].split(';');\r\n                //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n                //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n                optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\r\n                optHtml = optHtml.replace(/{{label}}/g, translatedOpt[0]);\r\n                optHtml = optHtml.replace(/{{labelFor}}/g, translatedOpt[0].replace(/\\s+/g, '-'));\r\n                optHtml = optHtml.replace(/{{value}}/g, opt[0]);\r\n                res += optHtml;\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateRadioOptions = function (arr, translatedArr, id) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var optHtml = templates_1.templates.option_radio;\r\n                var opt = arr[i].split(';');\r\n                var translatedOpt = translatedArr[i].split(';');\r\n                optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\r\n                optHtml = optHtml.replace(/{{label}}/g, translatedOpt[0]);\r\n                optHtml = optHtml.replace(/{{labelFor}}/g, translatedOpt[0].replace(/\\s+/g, '-'));\r\n                optHtml = optHtml.replace(/{{value}}/g, opt[0]);\r\n                res += optHtml;\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateCheckboxImageOptions = function (arr, translatedArr, id) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var optHtml = templates_1.templates.option_checkbox_image;\r\n                var opt = arr[i].split(';');\r\n                var translatedOpt = translatedArr[i].split(';');\r\n                //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n                //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n                optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[1]);\r\n                optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\r\n                optHtml = optHtml.replace(/{{label}}/g, translatedOpt[0]);\r\n                optHtml = optHtml.replace(/{{labelFor}}/g, translatedOpt[0].replace(/\\s+/g, '-'));\r\n                optHtml = optHtml.replace(/{{value}}/g, opt[0]);\r\n                res += optHtml;\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateCheckboxIgnoreImageOptions = function (arr, translatedArr, id) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var optHtml = templates_1.templates.option_checkbox;\r\n                var opt = arr[i].split(';');\r\n                var translatedOpt = translatedArr[i].split(';');\r\n                //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n                //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n                optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\r\n                optHtml = optHtml.replace(/{{label}}/g, translatedOpt[0]);\r\n                optHtml = optHtml.replace(/{{labelFor}}/g, translatedOpt[0].replace(/\\s+/g, '-'));\r\n                optHtml = optHtml.replace(/{{value}}/g, opt[0]);\r\n                res += optHtml;\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateCheckboxOptions = function (arr, translatedArr, id) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var optHtml = templates_1.templates.option_checkbox;\r\n                var opt = arr[i].split(';');\r\n                var translatedOpt = translatedArr[i].split(';');\r\n                optHtml = optHtml.replace(/{{label}}/g, translatedOpt[0]);\r\n                optHtml = optHtml.replace(/{{labelFor}}/g, translatedOpt[0].replace(/\\s+/g, '-'));\r\n                optHtml = optHtml.replace(/{{value}}/g, opt[0]);\r\n                res += optHtml;\r\n            }\r\n            // console.log( res );\r\n            return res;\r\n        }\r\n    };\r\n    return DomUtilities;\r\n}());\r\nexports.DomUtilities = DomUtilities;\r\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Constants = /** @class */ (function () {\r\n    function Constants() {\r\n    }\r\n    Constants.CCTriggerPageStartTime = \"cc-trigger-page-start-time\";\r\n    Constants.CCTriggerPageElapsedTime = \"cc-trigger-page-elapsed-time\";\r\n    Constants.CCTriggerSiteStartTime = \"cc-trigger-site-start-time\";\r\n    Constants.CCTriggerSiteElapsedTime = \"cc-trigger-site-elapsed-time\";\r\n    Constants.CCTriggerSitePageViewCount = \"cc-trigger-site-page-count\";\r\n    Constants.CCTriggerIndividualPageViewCount = \"cc-trigger-individual-page-count\";\r\n    Constants.SURVEY_IMPRESSION_EVENT = \"onImpression\";\r\n    Constants.SURVEY_START_EVENT = \"onStart\";\r\n    Constants.SURVEY_DATA_EVENT = \"onData\";\r\n    Constants.SURVEY_END_EVENT = \"onEnd\";\r\n    Constants.SURVEY_CLOSE_EVENT = \"onClose\";\r\n    Constants.SURVEY_QUESTION_EVENT = \"onQuestion\";\r\n    Constants.SURVEY_ANSWER_EVENT = \"onAnswer\";\r\n    Constants.SURVEY_CLICK_EVENT = \"onClick\";\r\n    Constants.GRANT_TYPE = \"password\";\r\n    Constants.AUTHORIZATION = \"Authorization\";\r\n    Constants.AUTHORIZATION_BEARER = \"Bearer\";\r\n    Constants.SURVEY_CLIENT = \"JS-MicroWeb\";\r\n    return Constants;\r\n}());\r\nexports.Constants = Constants;\r\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Cookie = /** @class */ (function () {\r\n    function Cookie() {\r\n    }\r\n    /**\r\n     * Set/Overwrite a cookie value\r\n     *\r\n     * @param name\r\n     * @param value\r\n     * @param days      OPTIONAL Days till this cookie will stay valid. Default is current session\r\n     * @param path      OPTIONAL domain root will be used by default\r\n     */\r\n    Cookie.set = function (name, value, days, path) {\r\n        if (days) {\r\n            var date = new Date();\r\n            date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));\r\n            var expires = \"; expires=\" + date.toUTCString();\r\n        }\r\n        else\r\n            var expires = \"\";\r\n        var dir = path || '/';\r\n        document.cookie = name + \"=\" + value + expires + \"; path=\" + dir;\r\n    };\r\n    /**\r\n     * Retrieve a cookie value\r\n     *\r\n     * @param name\r\n     * @return String|null\r\n     */\r\n    Cookie.get = function (name) {\r\n        var nameEQ = name + \"=\";\r\n        var ca = document.cookie.split(';');\r\n        for (var i = 0; i < ca.length; i++) {\r\n            var c = ca[i];\r\n            while (c.charAt(0) == ' ')\r\n                c = c.substring(1, c.length);\r\n            if (c.indexOf(nameEQ) == 0)\r\n                return c.substring(nameEQ.length, c.length);\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Remove a cookie\r\n     *\r\n     * @param name\r\n     */\r\n    Cookie.delete = function (name) {\r\n        Cookie.set(name, \"\", -1, undefined);\r\n    };\r\n    Cookie.getParameterByName = function (name, url) {\r\n        if (!url)\r\n            url = window.location.href;\r\n        name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\r\n        var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"), results = regex.exec(url);\r\n        if (!results)\r\n            return null;\r\n        if (!results[2])\r\n            return '';\r\n        return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\r\n    };\r\n    return Cookie;\r\n}());\r\nexports.Cookie = Cookie;\r\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n//Survey Manager manages and queues survey.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar SurveyManager = /** @class */ (function () {\r\n    function SurveyManager() {\r\n    }\r\n    SurveyManager.initializeSurvey = function (surveyId) {\r\n        //check if survey ran?\r\n        //do survey initialization.\r\n        if (!SurveyManager.surveyInstances || !SurveyManager.surveyInstances[surveyId]) {\r\n            console.error('Microsurvey not properly set up. Contact Support.');\r\n            return;\r\n        }\r\n        SurveyManager.surveyInstances[surveyId].setupSurvey();\r\n    };\r\n    SurveyManager.addSurvey = function (surveyId) {\r\n        window.ccsdkDebug ? console.log(\"Adding survey ID : \" + surveyId) : '';\r\n        SurveyManager.surveyQueue.push(surveyId);\r\n        if (SurveyManager.processQueueInterval == null) {\r\n            SurveyManager.processQueueInterval = setInterval(SurveyManager.processQueueIntervalCB, 100);\r\n        }\r\n    };\r\n    SurveyManager.removeSurvey = function (surveyId) {\r\n        if (SurveyManager.surveyQueue.length > 0) {\r\n            for (var survey in SurveyManager.surveyQueue) {\r\n                if (SurveyManager.surveyQueue[survey].surveyId == surveyId) {\r\n                    SurveyManager.surveyQueue.splice(survey, 1);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (SurveyManager.surveyQueue.length == 0) {\r\n            clearInterval(SurveyManager.processQueueInterval);\r\n        }\r\n    };\r\n    SurveyManager.processQueueIntervalCB = function () {\r\n        if (window.globalSurveyRunning == true) {\r\n            return;\r\n        }\r\n        else {\r\n            var surveyId = SurveyManager.surveyQueue.pop();\r\n            window.ccsdkDebug ? console.log(\"Processing survey ID \" + surveyId) : '';\r\n            if (surveyId == undefined) {\r\n                clearInterval(SurveyManager.processQueueInterval);\r\n                SurveyManager.processQueueInterval = null;\r\n            }\r\n            else {\r\n                window.globalSurveyRunning = true;\r\n                SurveyManager.initializeSurvey(surveyId);\r\n            }\r\n        }\r\n    };\r\n    SurveyManager.setSurveyRunning = function () {\r\n        window.globalSurveyRunning = true;\r\n        window.globalSurveyStartTime = new Date();\r\n    };\r\n    SurveyManager.unsetSurveyRunning = function () {\r\n        window.globalSurveyRunning = false;\r\n    };\r\n    SurveyManager.surveyQueue = [];\r\n    SurveyManager.processQueueInterval = null;\r\n    SurveyManager.surveyInstances = {};\r\n    return SurveyManager;\r\n}());\r\nexports.SurveyManager = SurveyManager;\r\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n// import 'whatwg-fetch';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction makeRequest(method, url, postParams, headers, successcb, errorcb) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(method, url);\r\n    xhr.onload = function () {\r\n        if (this.status >= 200 && this.status < 300) {\r\n            if (xhr.response) {\r\n            }\r\n            var res = xhr.response && typeof xhr.response === 'string' && !xhr.response.match('GIF') ? JSON.parse(xhr.response) : '';\r\n            if (successcb)\r\n                successcb(res);\r\n        }\r\n        else {\r\n            if (errorcb) {\r\n                errorcb({\r\n                    status: this.status,\r\n                    statusText: xhr.statusText\r\n                });\r\n            }\r\n        }\r\n    };\r\n    xhr.onerror = function () {\r\n        if (errorcb) {\r\n            errorcb({\r\n                status: this.status,\r\n                statusText: xhr.statusText\r\n            });\r\n        }\r\n    };\r\n    if (headers) {\r\n        Object.keys(headers).forEach(function (key) {\r\n            xhr.setRequestHeader(key, headers[key]);\r\n        });\r\n    }\r\n    // var params : any = postParams;\r\n    // We'll need to stringify if we've been given an object\r\n    // If we have a string, this is skipped.\r\n    // if (params && typeof params === 'object') {\r\n    //   params = Object.keys(params).map(function (key) {\r\n    //     return encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\r\n    //   }).join('&');\r\n    // }\r\n    xhr.send(postParams);\r\n}\r\nvar RequestHelper = /** @class */ (function () {\r\n    function RequestHelper() {\r\n    }\r\n    RequestHelper.getWithHeaders = function (url, headers, successcb, errorcb) {\r\n        return makeRequest(\"GET\", url, null, headers, successcb, errorcb);\r\n    };\r\n    RequestHelper.postWithHeaders = function (url, data, headers, successcb, errorcb) {\r\n        headers[\"Content-Type\"] = \"application/json;charset=utf-8\";\r\n        return makeRequest(\"POST\", url, JSON.stringify(data), headers, successcb, errorcb);\r\n    };\r\n    RequestHelper.get = function (url, successcb, errorcb) {\r\n        return makeRequest(\"GET\", url, null, null, successcb, errorcb);\r\n        // let request : Request = new Request( (url as any) , new Object());\r\n        // return fetch(request).then( (response : Response) => {\r\n        //   if (response.status >= 200 && response.status < 300) {\r\n        //     return Promise.resolve(response);\r\n        //   } else {\r\n        //     var error = new Error(response.statusText);\r\n        //     // error.response = response;\r\n        //     throw error;\r\n        //   }\r\n        // }).then( (response : Response) => {\r\n        //   return response.json();\r\n        // }).catch( (error : Error) => {\r\n        //   (window as any).ccsdkDebug?console.log('Request failed ', error):'';\r\n        // });\r\n    };\r\n    /**\r\n     *\r\n     * var data = new FormData()\r\n     *  data.append('file', input.files[0])\r\n     *  data.append('user', 'hubot')\r\n     *\r\n     * @static\r\n     * @param {any} url\r\n     * @param {any} data\r\n     * @memberof Request\r\n     */\r\n    RequestHelper.post = function (url, data, successcb, errorcb) {\r\n        //consider, file upload?\r\n        // (window as any).ccsdkDebug?console.log(\"[\" + JSON.stringify(data) + \"]\"):'';\r\n        window.ccsdkDebug ? console.log(\"Sending : \" + data) : '';\r\n        return makeRequest(\"POST\", url, JSON.stringify(data), {}, successcb, errorcb);\r\n        // let request : Request = new Request( (url as any), {\r\n        //   method : \"POST\",\r\n        //   headers : {\r\n        //     \"Content-Type\" : \"application/json; charset=utf-8\"\r\n        //   },\r\n        //   body : JSON.stringify(data)\r\n        // });\r\n        // return fetch(request).then( (response : Response) => {\r\n        //   if (response.status >= 200 && response.status < 300) {\r\n        //     return Promise.resolve(response);\r\n        //   } else {\r\n        //     let error : Error = new Error(response.statusText);\r\n        //     // error.response = response;\r\n        //     throw error;\r\n        //   }\r\n        // }).then( (response : Response) => {\r\n        //   return response.json();\r\n        // }).catch( (error : Error) => {\r\n        //   (window as any).ccsdkDebug?console.log('Request failed ', error):'';\r\n        // });\r\n    };\r\n    return RequestHelper;\r\n}());\r\nexports.RequestHelper = RequestHelper;\r\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar LanguageTextFilter = /** @class */ (function () {\r\n    function LanguageTextFilter() {\r\n    }\r\n    LanguageTextFilter.translateQuestionText = function (surveyHandler, question) {\r\n        if (surveyHandler.ccsdk.config.language.indexOf('Default') === -1) {\r\n            if (question.translated != null &&\r\n                typeof question.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n                if (question.translated[surveyHandler.ccsdk.config.language].text) {\r\n                    var qText = question.translated[surveyHandler.ccsdk.config.language].text.split(':');\r\n                    if (question.translated[surveyHandler.ccsdk.config.language].text.indexOf(\":\") !== -1) {\r\n                        qText = qText[0] + ': <br><span class=\"text-normal\">' + qText[1] + '</span>';\r\n                    }\r\n                    return qText;\r\n                }\r\n                // else if ( question.translated[ surveyHandler.ccsdk.config.language ].text ) {\r\n                //     return question.translated[ surveyHandler.ccsdk.config.language ].text;\r\n                // }\r\n                // return question.translated[surveyHandler.ccsdk.config.language].text;\r\n            }\r\n        }\r\n        if (question.text) {\r\n            var qText = question.text.split(':');\r\n            if (question.text.indexOf(\":\") !== -1) {\r\n                qText = qText[0] + ': <br><span class=\"text-normal\">' + qText[1] + '</span>';\r\n            }\r\n            return qText;\r\n        }\r\n        else {\r\n            return question.text == null ? '' : question.text;\r\n        }\r\n    };\r\n    LanguageTextFilter.translateMessages = function (surveyHandler, type) {\r\n        if (surveyHandler.surveyData.translated != null && typeof surveyHandler.surveyData.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n            if (surveyHandler.ccsdk.config.language.indexOf('Default') === -1) {\r\n                if (surveyHandler.surveyData.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n                    if (surveyHandler.surveyData.translated[surveyHandler.ccsdk.config.language][type] != null) {\r\n                        return surveyHandler.surveyData.translated[surveyHandler.ccsdk.config.language][type];\r\n                    }\r\n                    else {\r\n                        return surveyHandler.surveyData[type];\r\n                    }\r\n                }\r\n                else {\r\n                    return surveyHandler.surveyData[type];\r\n                }\r\n            }\r\n            else {\r\n                return surveyHandler.surveyData[type];\r\n            }\r\n        }\r\n    };\r\n    LanguageTextFilter.translateDisplayLegend = function (surveyHandler, question) {\r\n        if (surveyHandler.ccsdk.config.language.indexOf('Default') === -1) {\r\n            if (question.translated != null &&\r\n                typeof question.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n                return question.translated[surveyHandler.ccsdk.config.language].displayLegend;\r\n            }\r\n            else {\r\n                return question.displayLegend;\r\n            }\r\n        }\r\n        else {\r\n            return question.displayLegend;\r\n        }\r\n    };\r\n    LanguageTextFilter.translateMultiSelect = function (surveyHandler, question) {\r\n        if (surveyHandler.ccsdk.config.language.indexOf('Default') === -1) {\r\n            if (question.translated != null &&\r\n                typeof question.translated[surveyHandler.ccsdk.config.language] !== 'undefined' &&\r\n                question.translated[surveyHandler.ccsdk.config.language].multiSelect) {\r\n                var translatedOptions_1 = question.translated[surveyHandler.ccsdk.config.language].multiSelect;\r\n                return question.multiSelect.map(function (x, i) {\r\n                    if (translatedOptions_1[i]) {\r\n                        return translatedOptions_1[i];\r\n                    }\r\n                    else {\r\n                        return x;\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                return question.multiSelect;\r\n            }\r\n        }\r\n        else {\r\n            return question.multiSelect;\r\n        }\r\n    };\r\n    LanguageTextFilter.translateMultiSelectOption = function (surveyHandler, question, option) {\r\n        var effectiveMultiselect = this.translateMultiSelect(surveyHandler, question);\r\n        if ((effectiveMultiselect instanceof Array) && effectiveMultiselect.length > 0) {\r\n            for (var i = 0; i < question.multiSelect.length; i++) {\r\n                var opt = question.multiSelect[i].split(';');\r\n                if (opt[0] == option) {\r\n                    return effectiveMultiselect[i].split(';')[0];\r\n                }\r\n                else {\r\n                }\r\n            }\r\n        }\r\n        return option;\r\n    };\r\n    return LanguageTextFilter;\r\n}());\r\nexports.LanguageTextFilter = LanguageTextFilter;\r\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Config = /** @class */ (function () {\r\n    function Config() {\r\n    }\r\n    Config.API_URL = \"https://api.getcloudcherry.com\";\r\n    Config.SURVEY_BY_TOKEN = \"/api/SurveyByToken/{token}/\";\r\n    // static SURVEY_BY_TOKEN : String  = \"/api/SurveyByToken/{token}/{tabletId}\";\r\n    Config.SURVEY_PARTIAL_RESPONSE = \"/api/PartialSurvey/{id}/{complete}/JS-MicroWeb\";\r\n    // static SURVEY_PARTIAL_RESPONSE : String =  \"/api/PartialSurvey/{id}/{complete}/JS-Web/{tabletId}\";\r\n    Config.CDN_URL = \"https://cx.getcloudcherry.com/\";\r\n    Config.CDN_ASSET_URL = \"https://cx.getcloudcherry.com/microsurvey-assets/\";\r\n    Config.POST_LOGIN_TOKEN = \"/api/LoginToken\";\r\n    Config.GET_SURVEY_THROTTLE_LOGIC = \"/api/SurveyThrottleLogic/{location}\";\r\n    Config.POST_THROTTLING = \"/api/Throttling\";\r\n    Config.POST_THROTTLING_ADD_ENTRIES = \"/api/Throttling/AddEntries\";\r\n    Config.POST_SURVEY_FINAL = \"/api/surveybytoken/{tokenId}\";\r\n    Config.GET_CAMPAIGN = \"/api/SurveyToken/Campaign/{token}/\";\r\n    return Config;\r\n}());\r\nexports.Config = Config;\r\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__webpack_require__(16);\r\nvar QuestionSurvey = __webpack_require__(21);\r\nvar QuestionStart = __webpack_require__(22);\r\nvar QuestionSingleline = __webpack_require__(23);\r\nvar QuestionNumber = __webpack_require__(24);\r\nvar QuestionMultiline = __webpack_require__(25);\r\nvar QuestionCheckbox = __webpack_require__(26);\r\nvar QuestionRadio = __webpack_require__(27);\r\nvar QuestionRadioImage = __webpack_require__(28);\r\nvar QuestionScale = __webpack_require__(29);\r\nvar QuestionCSATAgreement5 = __webpack_require__(30);\r\nvar QuestionCSATSatisfaction5 = __webpack_require__(31);\r\nvar QuestionNPS = __webpack_require__(32);\r\nvar QuestionSelect = __webpack_require__(33);\r\nvar QuestionMultiSelect = __webpack_require__(34);\r\nvar QuestionSmile = __webpack_require__(35);\r\nvar QuestionSmileInverted = __webpack_require__(36);\r\nvar QuestionStar = __webpack_require__(37);\r\nvar QuestionSlider = __webpack_require__(38);\r\nvar OptionRadioImage = __webpack_require__(39);\r\nvar OptionRadio = __webpack_require__(40);\r\nvar OptionCheckbox = __webpack_require__(41);\r\nvar OptionCheckboxImage = __webpack_require__(42);\r\nvar ThankYou = __webpack_require__(43);\r\nvar QuestionDate = __webpack_require__(44);\r\nvar LanguageSelector = __webpack_require__(45);\r\nvar templates = {\r\n    question_survey: QuestionSurvey,\r\n    question_start: QuestionStart,\r\n    question_text: QuestionSingleline,\r\n    question_number: QuestionNumber,\r\n    question_scale: QuestionScale,\r\n    question_csat_agreement_5: QuestionCSATAgreement5,\r\n    question_csat_satisfaction_5: QuestionCSATSatisfaction5,\r\n    question_nps: QuestionNPS,\r\n    question_multi_line_text: QuestionMultiline,\r\n    question_multi_select: QuestionMultiSelect,\r\n    question_radio: QuestionRadio,\r\n    question_radio_image: QuestionRadioImage,\r\n    question_checkbox: QuestionCheckbox,\r\n    question_select: QuestionSelect,\r\n    question_smile_5: QuestionSmile,\r\n    question_date: QuestionDate,\r\n    question_smile_5_inverted: QuestionSmileInverted,\r\n    question_star_5: QuestionStar,\r\n    question_slider: QuestionSlider,\r\n    option_radio_image: OptionRadioImage,\r\n    option_radio: OptionRadio,\r\n    option_checkbox: OptionCheckbox,\r\n    option_checkbox_image: OptionCheckboxImage,\r\n    thankyou: ThankYou,\r\n    language_selector: LanguageSelector\r\n};\r\nexports.templates = templates;\r\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction isAnd(filterQuestion) {\r\n    if (!filterQuestion) {\r\n        return false;\r\n    }\r\n    if (filterQuestion.groupBy == null || filterQuestion.groupBy.toUpperCase() == \"AND\") {\r\n        return true;\r\n    }\r\n}\r\nexports.isAnd = isAnd;\r\nfunction isOr(filterQuestion) {\r\n    if (!filterQuestion) {\r\n        return false;\r\n    }\r\n    if (filterQuestion.groupBy != null && filterQuestion.groupBy.toUpperCase() == \"OR\") {\r\n        return true;\r\n    }\r\n}\r\nexports.isOr = isOr;\r\nfunction isNumberCheck(filterQuestion) {\r\n    if (!filterQuestion) {\r\n        return false;\r\n    }\r\n    if (filterQuestion.answerCheck[0] === \"lt\" || filterQuestion.answerCheck[0] === \"gt\" || filterQuestion.answerCheck[0] === \"eq\") {\r\n        return true;\r\n    }\r\n}\r\nexports.isNumberCheck = isNumberCheck;\r\n/**\r\n  * Contains logic to control conditional flow and whether to show or hide the questions based on the user input\r\n  *\r\n  * @param filterQuestion\r\n  * @return\r\n  */\r\nfunction doesSatisfy(surveyHandler, filterQuestion) {\r\n    var answer = surveyHandler.getAnswerForQuestionId(filterQuestion.questionId);\r\n    if (isNumberCheck(filterQuestion)) {\r\n        if (filterQuestion.answerCheck[0].toLowerCase() == \"lt\") {\r\n            if (answer)\r\n                if (answer.numberInput != null && answer.numberInput < filterQuestion.number) {\r\n                    return true;\r\n                }\r\n        }\r\n        else if (filterQuestion.answerCheck[0].toLowerCase() == (\"gt\")) {\r\n            if (answer)\r\n                if (answer.numberInput != null && answer.numberInput > filterQuestion.number) {\r\n                    return true;\r\n                }\r\n        }\r\n        else if (filterQuestion.answerCheck[0].toLowerCase() == (\"eq\")) {\r\n            if (answer)\r\n                if (answer.numberInput != null && answer.numberInput == filterQuestion.number) {\r\n                    return true;\r\n                }\r\n        }\r\n    }\r\n    else {\r\n        // any text match for text answers\r\n        if (filterQuestion.answerCheck[0] && filterQuestion.answerCheck[0].toLowerCase() === 'any text') {\r\n            if (answer && answer.textInput && answer.textInput !== ' ') {\r\n                return true;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n        var iFoundAll = false;\r\n        var question = surveyHandler.getQuestionById(filterQuestion.questionId);\r\n        var questionAnswerText = answer != null && answer.textInput != null ? answer.textInput : '';\r\n        if (!answer) {\r\n            return false;\r\n        }\r\n        for (var _i = 0, _a = filterQuestion.answerCheck; _i < _a.length; _i++) {\r\n            var aAnswer = _a[_i];\r\n            if (question.displayType === 'MultiSelect') {\r\n                var selectedOptions = answer.textInput.split(',');\r\n                if (selectedOptions.indexOf(aAnswer) !== -1) {\r\n                    iFoundAll = true;\r\n                }\r\n            }\r\n            else if (questionAnswerText === aAnswer) {\r\n                iFoundAll = true;\r\n            }\r\n        }\r\n        return iFoundAll;\r\n    }\r\n    return false;\r\n}\r\nexports.doesSatisfy = doesSatisfy;\r\nfunction questionCompare(a, b) {\r\n    return a.sequence - b.sequence;\r\n}\r\nexports.questionCompare = questionCompare;\r\nfunction checkLanguage(surveyHandler, fOption) {\r\n    if (surveyHandler.ccsdk.config && surveyHandler.ccsdk.config.language) {\r\n        return fOption.language === surveyHandler.ccsdk.config.language;\r\n    }\r\n    return false;\r\n}\r\nexports.checkLanguage = checkLanguage;\r\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar DomUtilities_1 = __webpack_require__(0);\r\nvar LanguageTextFilter_1 = __webpack_require__(5);\r\nvar Select = /** @class */ (function () {\r\n    function Select(qId) {\r\n        this.listeners = [];\r\n        this.qId = qId;\r\n    }\r\n    Select.prototype.init = function (qId) {\r\n        this.util = new DomUtilities_1.DomUtilities();\r\n        this.$body = document.querySelectorAll(\"body\")[0];\r\n        this.$html = document.querySelectorAll(\"html\")[0];\r\n        var select = document.querySelectorAll(\"#\" + qId + \" .cc-select\");\r\n        // var divSelect = document.querySelectorAll(\"div.cc-select\");\r\n        // this.util.removeAll(divSelect);\r\n        var parent = this;\r\n        //Assumption: iterating over array but there will always be one select at a time\r\n        this.type = select[0].getAttribute('data-type');\r\n        Array.prototype.forEach.call(select, function (el, i) {\r\n            var self = el;\r\n            var $selectOptions = document.querySelectorAll(\"#\" + qId + \" .cc-select-options\");\r\n            var classes = self.getAttribute(\"class\"), id = self.getAttribute(\"id\"), name = self.getAttribute(\"name\");\r\n            var template = '<div class=\"' + classes + '\">';\r\n            template += '<span class=\"cc-select-trigger\">' + self.getAttribute(\"placeholder\") + '</span>';\r\n            template += '<div class=\"cc-select-options-container\" cc-scrollbar-container><div class=\"cc-select-options\">';\r\n            var options = self.querySelectorAll(\"option\");\r\n            Array.prototype.forEach.call(options, function (el, i) {\r\n                template += '<span class=\"cc-select-option ' + el.getAttribute(\"class\") + '\" data-value=\"' + el.getAttribute(\"value\") + '\">' + el.innerHTML + '</span>';\r\n            });\r\n            template += '</div></div></div>';\r\n            parent.util.addClass(self, 'hide');\r\n            self.insertAdjacentHTML('afterend', template);\r\n        });\r\n        this.setupListeners();\r\n    };\r\n    Select.prototype.setupListeners = function () {\r\n        var self = this;\r\n        var qId = self.qId;\r\n        var ref2 = this.util.initListener('click', \"#\" + qId + \" .cc-select-option\", function (e) {\r\n            // let ref2 = this.util.initListener(this.$body, \"click\", \"#\"+qId+\" .cc-select-option\", function(e) {\r\n            window.ccsdkDebug ? console.log('click cc-select-option', this) : '';\r\n            var selfOption = this;\r\n            var value = this.getAttribute('data-value');\r\n            //select cc-select-wrapper\r\n            //todo: write a function to directly select parent via selector\r\n            var selectOptions = this.parentNode;\r\n            var select = selectOptions.parentNode.parentNode;\r\n            this.select = select;\r\n            var selectWrapper = select.parentNode;\r\n            window.ccsdkDebug ? console.log(select) : '';\r\n            window.ccsdkDebug ? console.log(selectOptions) : '';\r\n            window.ccsdkDebug ? console.log(selectWrapper) : '';\r\n            var selectionTrigger = select.querySelectorAll('.cc-select-trigger')[0];\r\n            self.util.addClass(this, \"selection\");\r\n            var selectedOptionText = selectionTrigger.textContent;\r\n            var selectedValueText = selectionTrigger.getAttribute('data-selection-value') || '';\r\n            window.ccsdkDebug ? console.log('select type', self.type) : '';\r\n            if (self.type !== 'multiple') {\r\n                window.ccsdkDebug ? console.log('select type', self.type) : '';\r\n                selectedOptionText = selfOption.textContent;\r\n                window.ccsdkDebug ? console.log('selected option', selectedOptionText) : '';\r\n                self.util.removeClassAll(document.querySelectorAll(\".cc-select\"), \"opened\");\r\n                selectionTrigger.setAttribute('data-selection-value', value);\r\n                selectWrapper.querySelectorAll(\"select\")[0].value = value;\r\n                selectionTrigger.textContent = selectedOptionText;\r\n                self.util.removeClassAll(document.querySelectorAll(\"#\" + qId + \" .cc-select-option\"), 'selection');\r\n                self.util.addClass(self, 'selection');\r\n            }\r\n            else {\r\n                window.ccsdkDebug ? console.log(selectedOptionText) : '';\r\n                if (selectedOptionText != 'Select') {\r\n                    selectedOptionText = self.addOrRemoveFromList(selectedOptionText, selfOption.textContent);\r\n                    selectedValueText = self.addOrRemoveFromList(selectedValueText, value);\r\n                }\r\n                else {\r\n                    window.ccsdkDebug ? console.log(selfOption.textContent) : '';\r\n                    selectedOptionText = selfOption.textContent;\r\n                    selectedValueText = value;\r\n                }\r\n                selectWrapper.querySelectorAll(\"select\")[0].value = selectedValueText;\r\n                selectionTrigger.setAttribute('data-selection-value', selectedValueText);\r\n                self.util.removeClassAll(document.querySelectorAll(\"#\" + qId + \" .cc-select-option\"), 'selection');\r\n                self.selectOptions(selectedValueText);\r\n                selectedValueText;\r\n                if (selectedOptionText.length < 1) {\r\n                    selectionTrigger.textContent = 'Select';\r\n                }\r\n                else {\r\n                    selectionTrigger.textContent = selectedOptionText;\r\n                }\r\n                return false;\r\n            }\r\n        });\r\n        this.listeners.push(ref2);\r\n        ref2.internalHandler = this.util.listener(this.$body, ref2.type, ref2.id, ref2.cb);\r\n        var ref = this.util.initListener('click', \"#\" + qId + \" .cc-select-trigger\", function (e) {\r\n            self.$html.addEventListener('click', function (e) {\r\n                if (!self.util.hasClass(e.target, 'cc-select-option')) {\r\n                    self.util.removeClassAll(document.querySelectorAll(\".cc-select\"), \"opened\");\r\n                    self.$html.removeEventListener('click', function () {\r\n                    });\r\n                }\r\n            });\r\n            var ccSelect = this.parentNode;\r\n            window.ccsdkDebug ? console.log('click cc-select-trigger', ccSelect) : '';\r\n            self.util.toggleClass(ccSelect, \"opened\");\r\n            e.stopPropagation();\r\n        });\r\n        this.listeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    Select.prototype.destroyListeners = function () {\r\n        for (var _i = 0, _a = this.listeners; _i < _a.length; _i++) {\r\n            var listener = _a[_i];\r\n            this.util.removeListener(this.$body, listener.type, listener.internalHandler);\r\n        }\r\n        return true;\r\n    };\r\n    Select.prototype.setValue = function (value, question, surveyHandler) {\r\n        var self = this;\r\n        var qId = self.qId;\r\n        var select;\r\n        select = document.querySelectorAll(\"#\" + qId + \" select\")[0];\r\n        select.value = value;\r\n        var selectTrigger = document.querySelectorAll(\"#\" + qId + \" .cc-select-trigger\")[0];\r\n        var selectedValueList = value.split(',');\r\n        var translatedSelection = selectedValueList.map(function (x) { return LanguageTextFilter_1.LanguageTextFilter.translateMultiSelectOption(surveyHandler, question, x); });\r\n        selectTrigger.textContent = translatedSelection.join(',');\r\n        selectTrigger.setAttribute('data-selection-value', value);\r\n    };\r\n    Select.prototype.selectOption = function (el) {\r\n        this.util.addClass(el, 'selection');\r\n    };\r\n    Select.prototype.removeOption = function (el) {\r\n        this.util.removeClass(el, 'selection');\r\n    };\r\n    Select.prototype.selectOptions = function (csv) {\r\n        var self = this;\r\n        if (csv) {\r\n            var allOptions = csv.split(',');\r\n            var _loop_1 = function (option) {\r\n                var domOptions = document.querySelectorAll(\"#\" + self.qId + \" .cc-select-option\");\r\n                Array.prototype.forEach.call(domOptions, function (el, i) {\r\n                    if (el.getAttribute('data-value') == option) {\r\n                        self.selectOption(el);\r\n                    }\r\n                    else {\r\n                    }\r\n                });\r\n            };\r\n            for (var _i = 0, allOptions_1 = allOptions; _i < allOptions_1.length; _i++) {\r\n                var option = allOptions_1[_i];\r\n                _loop_1(option);\r\n            }\r\n        }\r\n    };\r\n    Select.prototype.addOrRemoveFromList = function (listAsString, item) {\r\n        var list = listAsString.split(',');\r\n        var itemIndex = list.indexOf(item);\r\n        if (itemIndex !== -1) {\r\n            list.splice(itemIndex, 1);\r\n        }\r\n        else {\r\n            list.push(item);\r\n        }\r\n        return list.join(',');\r\n    };\r\n    return Select;\r\n}());\r\nexports.Select = Select;\r\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar filter_utils_1 = __webpack_require__(8);\r\nvar ConditionalFlowFilter = /** @class */ (function () {\r\n    function ConditionalFlowFilter() {\r\n    }\r\n    ConditionalFlowFilter.filterQuestion = function (surveyHandler, question) {\r\n        var aAddedCount = 0;\r\n        var aRemovedCount = 0;\r\n        if (surveyHandler.getAnswerForQuestionId(question.id) != null) {\r\n            for (var _i = 0, _a = surveyHandler.getConditionalSurveyQuestions(); _i < _a.length; _i++) {\r\n                var aQuestion = _a[_i];\r\n                // console.log( aQuestion );\r\n                if (aQuestion.conditionalFilter != null) {\r\n                    var iSatisfied = false;\r\n                    var iFailed = false;\r\n                    for (var _b = 0, _c = aQuestion.conditionalFilter.filterquestions; _b < _c.length; _b++) {\r\n                        var aFilterByQuestion = _c[_b];\r\n                        if (filter_utils_1.isAnd(aFilterByQuestion)) {\r\n                            if (filter_utils_1.doesSatisfy(surveyHandler, aFilterByQuestion) && !iFailed) {\r\n                                iSatisfied = true;\r\n                            }\r\n                            else {\r\n                                iFailed = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                        else if (filter_utils_1.isOr(aFilterByQuestion)) {\r\n                            if (filter_utils_1.doesSatisfy(surveyHandler, aFilterByQuestion)) {\r\n                                iSatisfied = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    var surveyQuestions = surveyHandler.getSurveyQuestions();\r\n                    if (iSatisfied && !iFailed) {\r\n                        if (surveyQuestions.indexOf(aQuestion) === -1) {\r\n                            surveyQuestions.push(aQuestion);\r\n                            aAddedCount++;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (surveyQuestions.indexOf(aQuestion) !== -1) {\r\n                            aRemovedCount++;\r\n                            surveyQuestions.splice(surveyQuestions.indexOf(aQuestion), 1);\r\n                            // surveyHandler.removePartial(aQuestion.id);\r\n                            //removing from partial requires not posting partial after each question rather than posting them all at once.\r\n                            surveyHandler.removeAnswer(aQuestion.id);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (aAddedCount > 0 || aRemovedCount > 0) {\r\n            surveyHandler.getSurveyQuestions().sort(filter_utils_1.questionCompare);\r\n            // surveyHandler.sendConditionalFLowQuestionsData(surveyHandler.getSurveyQuestions().size());\r\n            return true;\r\n        }\r\n        else {\r\n            // return false;\r\n        }\r\n        // ( window as any ).ccsdkDebug ? console.log( surveyHandler.getSurveyQuestions() ) : '';\r\n    };\r\n    return ConditionalFlowFilter;\r\n}());\r\nexports.ConditionalFlowFilter = ConditionalFlowFilter;\r\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(12);\nmodule.exports = __webpack_require__(13);\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\n// Production steps of ECMA-262, Edition 6, 22.1.2.1\r\nif (!Array.from) {\r\n    Array.from = (function () {\r\n        var toStr = Object.prototype.toString;\r\n        var isCallable = function (fn) {\r\n            return typeof fn === 'function' || toStr.call(fn) === '[object Function]';\r\n        };\r\n        var toInteger = function (value) {\r\n            var number = Number(value);\r\n            if (isNaN(number)) {\r\n                return 0;\r\n            }\r\n            if (number === 0 || !isFinite(number)) {\r\n                return number;\r\n            }\r\n            return (number > 0 ? 1 : -1) * Math.floor(Math.abs(number));\r\n        };\r\n        var maxSafeInteger = Math.pow(2, 53) - 1;\r\n        var toLength = function (value) {\r\n            var len = toInteger(value);\r\n            return Math.min(Math.max(len, 0), maxSafeInteger);\r\n        };\r\n        // The length property of the from method is 1.\r\n        return function from(arrayLike /*, mapFn, thisArg */) {\r\n            // 1. Let C be the this value.\r\n            var C = this;\r\n            // 2. Let items be ToObject(arrayLike).\r\n            var items = Object(arrayLike);\r\n            // 3. ReturnIfAbrupt(items).\r\n            if (arrayLike == null) {\r\n                throw new TypeError('Array.from requires an array-like object - not null or undefined');\r\n            }\r\n            // 4. If mapfn is undefined, then let mapping be false.\r\n            var mapFn = arguments.length > 1 ? arguments[1] : void undefined;\r\n            var T;\r\n            if (typeof mapFn !== 'undefined') {\r\n                // 5. else\r\n                // 5. a If IsCallable(mapfn) is false, throw a TypeError exception.\r\n                if (!isCallable(mapFn)) {\r\n                    throw new TypeError('Array.from: when provided, the second argument must be a function');\r\n                }\r\n                // 5. b. If thisArg was supplied, let T be thisArg; else let T be undefined.\r\n                if (arguments.length > 2) {\r\n                    T = arguments[2];\r\n                }\r\n            }\r\n            // 10. Let lenValue be Get(items, \"length\").\r\n            // 11. Let len be ToLength(lenValue).\r\n            var len = toLength(items.length);\r\n            // 13. If IsConstructor(C) is true, then\r\n            // 13. a. Let A be the result of calling the [[Construct]] internal method \r\n            // of C with an argument list containing the single item len.\r\n            // 14. a. Else, Let A be ArrayCreate(len).\r\n            var A = isCallable(C) ? Object(new C(len)) : new Array(len);\r\n            // 16. Let k be 0.\r\n            var k = 0;\r\n            // 17. Repeat, while k < len… (also steps a - h)\r\n            var kValue;\r\n            while (k < len) {\r\n                kValue = items[k];\r\n                if (mapFn) {\r\n                    A[k] = typeof T === 'undefined' ? mapFn(kValue, k) : mapFn.call(T, kValue, k);\r\n                }\r\n                else {\r\n                    A[k] = kValue;\r\n                }\r\n                k += 1;\r\n            }\r\n            // 18. Let putStatus be Put(A, \"length\", len, true).\r\n            A.length = len;\r\n            // 20. Return A.\r\n            return A;\r\n        };\r\n    }());\r\n}\r\n// custom event polyfill\r\n(function () {\r\n    if (typeof window.CustomEvent === \"function\")\r\n        return false;\r\n    function CustomEvent(event, params) {\r\n        params = params || {\r\n            bubbles: false,\r\n            cancelable: false,\r\n            detail: undefined\r\n        };\r\n        var evt = document.createEvent('CustomEvent');\r\n        evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\r\n        return evt;\r\n    }\r\n    CustomEvent.prototype = window.Event.prototype;\r\n    window.CustomEvent = CustomEvent;\r\n})();\r\n// includes polyfill\r\nif (!Array.prototype.includes) {\r\n    Object.defineProperty(Array.prototype, 'includes', {\r\n        value: function (searchElement, fromIndex) {\r\n            if (this == null) {\r\n                throw new TypeError('\"this\" is null or not defined');\r\n            }\r\n            // 1. Let O be ? ToObject(this value).\r\n            var o = Object(this);\r\n            // 2. Let len be ? ToLength(? Get(O, \"length\")).\r\n            var len = o.length >>> 0;\r\n            // 3. If len is 0, return false.\r\n            if (len === 0) {\r\n                return false;\r\n            }\r\n            // 4. Let n be ? ToInteger(fromIndex).\r\n            //    (If fromIndex is undefined, this step produces the value 0.)\r\n            var n = fromIndex | 0;\r\n            // 5. If n ≥ 0, then\r\n            //  a. Let k be n.\r\n            // 6. Else n < 0,\r\n            //  a. Let k be len + n.\r\n            //  b. If k < 0, let k be 0.\r\n            var k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);\r\n            function sameValueZero(x, y) {\r\n                return x === y || (typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y));\r\n            }\r\n            // 7. Repeat, while k < len\r\n            while (k < len) {\r\n                // a. Let elementK be the result of ? Get(O, ! ToString(k)).\r\n                // b. If SameValueZero(searchElement, elementK) is true, return true.\r\n                if (sameValueZero(o[k], searchElement)) {\r\n                    return true;\r\n                }\r\n                // c. Increase k by 1. \r\n                k++;\r\n            }\r\n            // 8. Return false\r\n            return false;\r\n        }\r\n    });\r\n}\r\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Cookie_1 = __webpack_require__(2);\r\nvar SurveyManager_1 = __webpack_require__(3);\r\nvar Survey_1 = __webpack_require__(14);\r\n/**\r\n * functions that are exposed to SDK User are written here.\r\n * Entry point for CCSDK.\r\n */\r\n// declare var Sentry: any;\r\nvar localCCSDK = {\r\n    init: init,\r\n    destroy: destroy,\r\n    trigger: trigger,\r\n    hide: hide,\r\n    show: show,\r\n    on: on,\r\n    prefill: prefill,\r\n    prefillByTag: prefillByTag,\r\n    prefillByNote: prefillByNote\r\n};\r\n// let instances : any = {};\r\nwindow.globalSurveyRunning = false;\r\nwindow.ccsdkDebug = false;\r\nwindow.isMobile = window.innerWidth <= 768 ? true : false;\r\nif (typeof window.CCSDK !== 'undefined') {\r\n    var queue = window.CCSDK.q;\r\n    window.CCSDK = function () {\r\n        if (arguments && arguments.length == 0) {\r\n            var time = new Date();\r\n        }\r\n        else {\r\n            window.ccsdkDebug ? console.log(arguments) : '';\r\n            var args = Array.from(arguments);\r\n            //Call this functions as ccsdk('functionName', ['argument1', 'argument2']);\r\n            var functionName = args.splice(0, 1)[0];\r\n            window.ccsdkDebug ? console.log(functionName) : '';\r\n            return localCCSDK[functionName].apply(this, args);\r\n        }\r\n    };\r\n    if (queue) {\r\n        for (var _i = 0, queue_1 = queue; _i < queue_1.length; _i++) {\r\n            var q = queue_1[_i];\r\n            var args = Array.from(q);\r\n            var functionName = args.splice(0, 1)[0];\r\n            localCCSDK[functionName].apply(this, args);\r\n        }\r\n    }\r\n    var eventCCReady = document.createEvent('Event');\r\n    eventCCReady.initEvent('ccready', true, true);\r\n    document.dispatchEvent(eventCCReady);\r\n}\r\nfunction init(surveyToken) {\r\n    //config options can be set in arguments[1]\r\n    //available config options : themeColor\r\n    surveyToken = decodeURIComponent(surveyToken).trim();\r\n    var config = (typeof arguments[1] === 'object') ? arguments[1] : {};\r\n    //create survey instance\r\n    if (typeof Cookie_1.Cookie.get(surveyToken + '-finish') !== 'undefined' && Cookie_1.Cookie.get(surveyToken + '-finish')) {\r\n        return;\r\n    }\r\n    if (typeof Cookie_1.Cookie.get(surveyToken + '-coolDown') !== 'undefined' && Cookie_1.Cookie.get(surveyToken + '-coolDown')) {\r\n        return;\r\n    }\r\n    if (typeof config.isActive !== 'undefined' && config.isActive) {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken] = (SurveyManager_1.SurveyManager.surveyInstances[surveyToken]) ? SurveyManager_1.SurveyManager.surveyInstances[surveyToken] : new Survey_1.Survey(surveyToken, config);\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].tracking.trackEvent('Init MicroSurvey', {\r\n            token: surveyToken,\r\n            data: {\r\n                name: window.isMobile ? 'Mobile Mode' : 'Desktop Mode',\r\n                action: surveyToken\r\n            }\r\n        }, null, null);\r\n        return SurveyManager_1.SurveyManager.surveyInstances[surveyToken];\r\n    }\r\n    else {\r\n        //do nothing\r\n    }\r\n}\r\nexports.init = init;\r\nfunction destroy(surveyToken) {\r\n    //remove from trigger manager, delete instance.\r\n    if (!SurveyManager_1.SurveyManager ||\r\n        !SurveyManager_1.SurveyManager.surveyInstances ||\r\n        !SurveyManager_1.SurveyManager.surveyInstances[surveyToken] ||\r\n        !SurveyManager_1.SurveyManager.surveyInstances[surveyToken].dom) {\r\n        return;\r\n    }\r\n    SurveyManager_1.SurveyManager.surveyInstances[surveyToken].dom.destroyListeners();\r\n    SurveyManager_1.SurveyManager.surveyInstances[surveyToken].destroy();\r\n    delete SurveyManager_1.SurveyManager.surveyInstances[surveyToken];\r\n}\r\nexports.destroy = destroy;\r\n//\r\nfunction trigger(surveyToken, type, target) {\r\n    window.ccsdkDebug ? console.log(SurveyManager_1.SurveyManager.surveyInstances) : '';\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].tracking.trackEvent('Trigger Type', {\r\n            token: surveyToken,\r\n            data: {\r\n                name: type,\r\n                action: surveyToken\r\n            }\r\n        }, null, null);\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].trigger(type, target);\r\n    }\r\n    //tell trigger manager to register trigger.\r\n}\r\nexports.trigger = trigger;\r\nfunction on(surveyToken, type, callback) {\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].tracking.trackEvent('Event Listeners', {\r\n            token: surveyToken,\r\n            data: {\r\n                name: type,\r\n                action: surveyToken\r\n            }\r\n        }, null, null);\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].on(type, callback);\r\n    }\r\n}\r\nexports.on = on;\r\nfunction prefill(surveyToken) {\r\n    var restArgs = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        restArgs[_i - 1] = arguments[_i];\r\n    }\r\n    var _a;\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        var questionId = void 0;\r\n        if (typeof restArgs[0] === 'string') {\r\n            questionId = restArgs[0];\r\n        }\r\n        else {\r\n            questionId = Object.keys(restArgs[0]).length + ' Questions';\r\n        }\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].tracking.trackEvent('Prefill', {\r\n            token: surveyToken,\r\n            data: {\r\n                name: questionId,\r\n                action: surveyToken\r\n            }\r\n        }, null, null);\r\n        (_a = SurveyManager_1.SurveyManager.surveyInstances[surveyToken]).prefill.apply(_a, restArgs.concat(['DIRECT']));\r\n    }\r\n}\r\nexports.prefill = prefill;\r\nfunction prefillByTag(surveyToken) {\r\n    var restArgs = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        restArgs[_i - 1] = arguments[_i];\r\n    }\r\n    var _a;\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        var questionTag = void 0;\r\n        if (typeof restArgs[0] === 'string') {\r\n            questionTag = restArgs[0];\r\n        }\r\n        else {\r\n            questionTag = Object.keys(restArgs[0]).length + ' Questions';\r\n        }\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].tracking.trackEvent('Prefill by tag', {\r\n            token: surveyToken,\r\n            data: {\r\n                name: questionTag,\r\n                action: surveyToken\r\n            }\r\n        }, null, null);\r\n        (_a = SurveyManager_1.SurveyManager.surveyInstances[surveyToken]).prefill.apply(_a, restArgs.concat(['BY_TAG']));\r\n    }\r\n}\r\nexports.prefillByTag = prefillByTag;\r\nfunction prefillByNote(surveyToken) {\r\n    var restArgs = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        restArgs[_i - 1] = arguments[_i];\r\n    }\r\n    var _a;\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        var questionNote = void 0;\r\n        if (typeof restArgs[0] === 'string') {\r\n            questionNote = restArgs[0];\r\n        }\r\n        else {\r\n            questionNote = Object.keys(restArgs[0]).length + ' Questions';\r\n        }\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].tracking.trackEvent('Prefill by Note', {\r\n            token: surveyToken,\r\n            data: {\r\n                name: questionNote,\r\n                action: surveyToken\r\n            }\r\n        }, null, null);\r\n        (_a = SurveyManager_1.SurveyManager.surveyInstances[surveyToken]).prefill.apply(_a, restArgs.concat(['BY_NOTE']));\r\n    }\r\n}\r\nexports.prefillByNote = prefillByNote;\r\nfunction show(surveyToken) {\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].show();\r\n    }\r\n}\r\nexports.show = show;\r\nfunction hide(surveyToken) {\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].dom.destroyListeners();\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].destroy();\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].hide();\r\n    }\r\n}\r\nexports.hide = hide;\r\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar SurveyHandler_1 = __webpack_require__(15);\r\nvar DomSurvey_1 = __webpack_require__(47);\r\nvar DomUtilities_1 = __webpack_require__(0);\r\nvar Constants_1 = __webpack_require__(1);\r\nvar SurveyManager_1 = __webpack_require__(3);\r\nvar TriggerManager_1 = __webpack_require__(50);\r\nvar Triggers_1 = __webpack_require__(51);\r\nvar Request_1 = __webpack_require__(4);\r\nvar Config_1 = __webpack_require__(6);\r\nvar tracking_1 = __webpack_require__(53);\r\nvar Survey = /** @class */ (function () {\r\n    function Survey(surveyToken, config) {\r\n        this.requester = new Request_1.RequestHelper();\r\n        this.isThrottled = true;\r\n        this.surveyDone = false;\r\n        this.surveyStatus = '';\r\n        this.surveyToken = surveyToken;\r\n        this.config = config;\r\n        this.surveyRunning = false;\r\n        this.thorttlingLogic = null;\r\n        this.tracking = new tracking_1.MatomoTracker();\r\n        this.tracking.token = surveyToken;\r\n        if (typeof this.config.textDirection === 'undefined') {\r\n            this.config.textDirection = \"ltr\";\r\n        }\r\n        this.triggers = new Triggers_1.Triggers(this);\r\n        TriggerManager_1.TriggerManager.addSurvey(this.surveyToken, this.triggers);\r\n        this.survey = new SurveyHandler_1.SurveyHandler(this);\r\n        this.util = new DomUtilities_1.DomUtilities;\r\n        //set themeColor of survey\r\n        this.config.brandColor = (this.config && this.config.brandColor) ?\r\n            this.config.brandColor : \"#db3c39\";\r\n        //use config variable textDirection and set dir\r\n        this.setHtmlTextDirection();\r\n        this.setDisplayOptions();\r\n        this.util.trigger(document, this.surveyToken + '-ready', { 'survey': this });\r\n        //do login\r\n        this.config.username = \"test\";\r\n        this.config.password = \"test\";\r\n        this.config.location = \"location\";\r\n        this.config.language = \"English (Default)\";\r\n        //check trigger conditions and add itself to \r\n        //based on new config\r\n        //gotta and these.\r\n        this.trigger(\"click\", this.config.cssSelector);\r\n        // this.trigger(\"scroll-pixels\", this.config.scrollPercent);\r\n        // this.trigger(\"page-time\", this.config.waitSeconds);\r\n        // this.trigger(\"url-match\", this.config.grepURL);\r\n        // this.trigger(\"url-not-match\", this.config.grepInvertURL);\r\n        // this.config.scrollPercent = 10;\r\n        // this.config.waitSeconds = 5;\r\n        this.triggers.setConditionalTriggers(this.config);\r\n        // this.login(function() {\r\n        //on login\r\n        // });\r\n    }\r\n    Survey.prototype.getSurveyThrottlingLogic = function (cb) {\r\n        var getThrottleUrl = Config_1.Config.API_URL + Config_1.Config.GET_SURVEY_THROTTLE_LOGIC.replace('{location}', this.config.location);\r\n        var headers = {};\r\n        headers[Constants_1.Constants.AUTHORIZATION] = Constants_1.Constants.AUTHORIZATION_BEARER + \" \" + this.loginData.access_token;\r\n        var self = this;\r\n        var successcb = function (data) {\r\n            self.thorttlingLogic = data;\r\n            self.checkThrottling(cb);\r\n        };\r\n        Request_1.RequestHelper.getWithHeaders(getThrottleUrl, headers, successcb, null);\r\n    };\r\n    Survey.prototype.checkThrottling = function (cb) {\r\n        if (this.thorttlingLogic != null) {\r\n            if (this.thorttlingLogic.inputIds == null) {\r\n                this.thorttlingLogic.inputIds = [];\r\n            }\r\n            this.thorttlingLogic.inputIds.push(this.thorttlingLogic[this.thorttlingLogic.uniqueIDQuestionIdOrTag.toLowerCase()]);\r\n            if (this.thorttlingLogic.logics != null && this.thorttlingLogic.logics.length > 0 && this.config != null) {\r\n                this.thorttlingLogic.logics[0].filter.location = [];\r\n                this.thorttlingLogic.logics[0].filter.location.push(this.config.location);\r\n            }\r\n        }\r\n        var self = this;\r\n        var postThrottleUrl = Config_1.Config.API_URL + Config_1.Config.POST_THROTTLING;\r\n        var headers = {};\r\n        headers[Constants_1.Constants.AUTHORIZATION] = Constants_1.Constants.AUTHORIZATION + \" \" + this.loginData.access_token;\r\n        var successcb = function (throttleResponse) {\r\n            if (typeof throttleResponse[0][self.thorttlingLogic.uniqueIDQuestionIdOrTag.toLowerCase()] && throttleResponse[0].value) {\r\n                //get survey data?  \r\n                cb();\r\n            }\r\n        };\r\n        Request_1.RequestHelper.postWithHeaders(postThrottleUrl, this.thorttlingLogic, headers, successcb, null);\r\n    };\r\n    Survey.prototype.addThrottlingEntries = function (isOpen) {\r\n        var _this = this;\r\n        var addThrottleUrl = Config_1.Config.API_URL + Config_1.Config.POST_THROTTLING_ADD_ENTRIES;\r\n        var headers = {};\r\n        this.loginData = { access_token: \"help\" };\r\n        headers[Constants_1.Constants.AUTHORIZATION] = Constants_1.Constants.AUTHORIZATION + \" \" + this.loginData.access_token;\r\n        //fill this from config and data.\r\n        var successcb = function (throttleResponse) {\r\n            _this.debug ? console.log(throttleResponse) : '';\r\n        };\r\n        Request_1.RequestHelper.postWithHeaders(addThrottleUrl, {\r\n            user: \"\",\r\n            mobile: \"\",\r\n            emailId: \"\",\r\n            customId: \"\",\r\n            surveySentDate: \"\",\r\n            surveyOpenDate: \"\",\r\n            channel: \"\",\r\n            isOpened: isOpen\r\n        }, headers, successcb, null);\r\n    };\r\n    Survey.prototype.setupSurvey = function () {\r\n        // this.getSurveyData();\r\n        this.initSurvey();\r\n    };\r\n    Survey.prototype.setHtmlTextDirection = function () {\r\n        var ccSDKElement = document.querySelector('.cc-sdk');\r\n        if (!ccSDKElement) {\r\n            return;\r\n        }\r\n        var ccSDKDir = ccSDKElement.getAttribute('dir');\r\n        var direction = (this.config && this.config.textDirection) ?\r\n            this.config.textDirection : (ccSDKDir ? ccSDKDir : \"ltr\");\r\n        ccSDKElement.setAttribute('dir', direction);\r\n    };\r\n    Survey.prototype.setDisplayOptions = function () {\r\n        this.survey.surveyDisplay.position = this.config && this.config.position ?\r\n            this.config.position : \"bottom right\";\r\n        var welcomePopupAnimation = 'hide-right-left';\r\n        // this.survey.surveyDisplay.welcomePopupAnimation =  this.config && this.config.display && this.config.display.welcomePopupAnimation ?\r\n        // \"hide-\"+ this.config.display.welcomePopupAnimation : \"hide-right-left\";\r\n        // this.survey.surveyDisplay.surveyPopupAnimation =  this.config && this.config.display && this.config.display.surveyPopupAnimation ?\r\n        // \"hide-\"+ this.config.display.surveyPopupAnimation : \"hide-right-left\";\r\n        // this.survey.surveyDisplay.surveyPosition =  this.config && this.config.display && this.config.display.surveyPosition ?\r\n        // this.config.display.surveyPosition : ( this.config.display.position.search(/bottom/gi)==-1?\"top\":\"bottom\" ) ;\r\n        switch (this.survey.surveyDisplay.position) {\r\n            case 'bottom right':\r\n                welcomePopupAnimation = 'hide-right-left';\r\n                break;\r\n            case 'right bottom':\r\n                welcomePopupAnimation = 'hide-right-left';\r\n                break;\r\n            case 'top right':\r\n                welcomePopupAnimation = 'hide-right-left';\r\n                break;\r\n            case 'right top':\r\n                welcomePopupAnimation = 'hide-right-left';\r\n                break;\r\n            case 'bottom left':\r\n                welcomePopupAnimation = 'hide-left-right';\r\n                break;\r\n            case 'left bottom':\r\n                welcomePopupAnimation = 'hide-left-right';\r\n                break;\r\n            case 'top left':\r\n                welcomePopupAnimation = 'hide-left-right';\r\n                break;\r\n            case 'left top':\r\n                welcomePopupAnimation = 'hide-left-right';\r\n                break;\r\n            default:\r\n                welcomePopupAnimation = 'hide-right-left';\r\n                break;\r\n        }\r\n        this.survey.surveyDisplay.welcomePopupAnimation = welcomePopupAnimation;\r\n        this.tracking.trackEvent('Welcome Pop up Position', {\r\n            token: this.tracking.token,\r\n            data: {\r\n                name: this.survey.surveyDisplay.position,\r\n                action: null\r\n            }\r\n        }, null, null);\r\n        this.survey.surveyDisplay.surveyPosition = this.config.position.search(/bottom/gi) == -1 ? \"top\" : \"bottom\";\r\n    };\r\n    Survey.prototype.getSurveyData = function () {\r\n        var self = this;\r\n        var successcb = function (surveyData) {\r\n            self.debug ? console.log(surveyData) : '';\r\n            // console.log(surveyData);\r\n            self.surveyData = surveyData;\r\n            if (surveyData && surveyData.questions && surveyData.questions[0]) {\r\n                self.tracking.username = surveyData.questions[0].user;\r\n            }\r\n            self.tracking.token = self.surveyToken;\r\n            self.tracking.trackEvent('Login Success', {\r\n                token: self.tracking.token,\r\n                data: {\r\n                    name: 'Token',\r\n                    action: self.surveyToken\r\n                }\r\n            }, console.log, console.error);\r\n            self.tracking.trackEvent('Survey Length', {\r\n                token: self.tracking.token,\r\n                data: {\r\n                    name: surveyData.questions.length + \" Questions\",\r\n                    action: (surveyData.preFill ? surveyData.preFill.length : 0) + \" Prefills\"\r\n                }\r\n            }, null, null);\r\n            var event = new CustomEvent(Constants_1.Constants.SURVEY_DATA_EVENT + \"-\" + self.surveyToken, { detail: JSON.parse(JSON.stringify(surveyData)) });\r\n            document.dispatchEvent(event);\r\n            if (!self.config.skipWelcomePage) {\r\n                self.dom.hideLoader();\r\n            }\r\n            if (self.surveyData) {\r\n                self.initSurveyQuestions();\r\n            }\r\n            else {\r\n                this.tracking.trackEvent('Expired Survey', {\r\n                    token: this.tracking.token,\r\n                    data: {\r\n                        name: null,\r\n                        action: null\r\n                    }\r\n                }, null, null);\r\n                self.survey.displayWelcomeQuestion(\"The Survey has been expired\");\r\n            }\r\n        };\r\n        var errorcb = null;\r\n        this.survey.fetchQuestions(successcb, errorcb);\r\n    };\r\n    Survey.prototype.initSurvey = function () {\r\n        //if survey already run don't run?\r\n        //if default trigger initiated and survey already run then don't run.\r\n        var self = this;\r\n        // if(!self.surveyRunning) {\r\n        //   self.surveyRunning = true;\r\n        // }\r\n        self.surveyRunning = true;\r\n        self.dom = new DomSurvey_1.DomSurvey(this);\r\n        self.dom.setTheme(self.config.brandColor, this.config.keepAlive ? this.config.keepAlive : 0);\r\n        // self.survey.attachSurvey(this.surveyData);\r\n        // self.config.language = \"हिन्दी\";\r\n        self.config.language = \"default\";\r\n        if (self.surveyToken && decodeURIComponent(self.surveyToken).trim() !== '' && !self.config.skipWelcomePage) {\r\n            self.survey.displayWelcomeQuestion();\r\n        }\r\n        else if (self.config.skipWelcomePage) {\r\n            var onImpressionEvent = new CustomEvent(Constants_1.Constants.SURVEY_IMPRESSION_EVENT + \"-\" + this.surveyToken);\r\n            document.dispatchEvent(onImpressionEvent);\r\n            self.dom.startSurvey();\r\n            self.survey.setCoolDownPeriod(self.config, self.surveyToken);\r\n            this.surveyStartTime = new Date();\r\n            self.survey.acceptAnswers();\r\n        }\r\n        self.dom.setupListeners();\r\n        // self.survey.displayLanguageSelector();\r\n        //survey start event.\r\n        // let onSurveyStartEvent = new CustomEvent(Constants.SURVEY_START_EVENT + \"-\" + this.surveyToken);\r\n        // document.dispatchEvent(onSurveyStartEvent);\r\n    };\r\n    Survey.prototype.initSurveyQuestions = function () {\r\n        var self = this;\r\n        self.survey.attachSurvey(this.surveyData);\r\n        // self.dom.setupListeners();\r\n        // self.config.language = \"हिन्दी\";\r\n        self.config.language = \"default\";\r\n        // self.survey.displayLanguageSelector();\r\n        //survey start event.\r\n        this.dom.initSurveyDom();\r\n        var onSurveyStartEvent = new CustomEvent(Constants_1.Constants.SURVEY_START_EVENT + \"-\" + this.surveyToken);\r\n        document.dispatchEvent(onSurveyStartEvent);\r\n    };\r\n    Survey.prototype.on = function (type, callback) {\r\n        document.addEventListener(type + \"-\" + this.surveyToken, function (e) {\r\n            callback(e.detail);\r\n        });\r\n    };\r\n    Survey.prototype.show = function () {\r\n        //do show and hide things.\r\n        SurveyManager_1.SurveyManager.setSurveyRunning();\r\n        //show survey\r\n        this.setupSurvey();\r\n    };\r\n    Survey.prototype.hide = function () {\r\n        SurveyManager_1.SurveyManager.unsetSurveyRunning();\r\n        this.survey.destroy();\r\n        this.tracking.trackEvent('Survey Destroyed', {\r\n            token: this.tracking.token,\r\n            data: {\r\n                name: (new Date() - window.globalSurveyStartTime) + 's',\r\n                action: null\r\n            }\r\n        }, null, null);\r\n    };\r\n    Survey.prototype.destroy = function () {\r\n        //remove all listeners?\r\n        SurveyManager_1.SurveyManager.unsetSurveyRunning();\r\n        this.survey.destroy();\r\n    };\r\n    Survey.prototype.prefill = function (restOfArgs, type) {\r\n        var _a;\r\n        var prefillObject;\r\n        if (typeof restOfArgs[0] !== 'object') {\r\n            prefillObject = (_a = {},\r\n                _a[restOfArgs[0]] = restOfArgs[1],\r\n                _a);\r\n        }\r\n        else {\r\n            prefillObject = restOfArgs[0];\r\n        }\r\n        //save this in this.surveyHandler\r\n        if (type === 'DIRECT') {\r\n            this.survey.fillPrefillDirect(prefillObject);\r\n        }\r\n        else if (type === 'BY_TAG') {\r\n            this.survey.fillPrefill(prefillObject);\r\n        }\r\n        else if (type === 'BY_NOTE') {\r\n            this.survey.fillPrefillByNote(prefillObject);\r\n        }\r\n    };\r\n    Survey.prototype.trigger = function (type, target) {\r\n        var self = this;\r\n        switch (type) {\r\n            case 'click':\r\n                console.log('enable click trigger ##');\r\n                this.triggers.enableClickTrigger(target, function () {\r\n                    // self.initSurvey();\r\n                    // Scrollbar.initAll();\r\n                    // self.slider = new Slider();\r\n                    // self.setupSurvey();\r\n                    SurveyManager_1.SurveyManager.addSurvey(self.surveyToken);\r\n                });\r\n                break;\r\n            case 'page-count':\r\n                var count = parseInt(target);\r\n                this.triggers.enablePageCountTrigger(count);\r\n                break;\r\n            case 'site-count':\r\n                var count2 = parseInt(target);\r\n                this.triggers.enableSiteCountTrigger(count2);\r\n                break;\r\n            case 'page-time':\r\n                this.triggers.enablePageTimeTrigger(parseInt(target));\r\n                break;\r\n            case 'site-time':\r\n                this.triggers.enableSiteTimeTrigger(parseInt(target));\r\n                break;\r\n            case 'url-match':\r\n                this.triggers.enablePopUpByURLPatternTrigger(target);\r\n                break;\r\n            case 'url-not-match':\r\n                this.triggers.enablePopUpByNotURLPatternTrigger(target);\r\n                break;\r\n            case 'utm-match':\r\n                this.triggers.enablePopUpByUTMPatternTrigger(target);\r\n                break;\r\n            case 'scroll-pixels':\r\n                this.triggers.enableScrollPixelsTrigger(parseInt(target));\r\n                break;\r\n            case 'launch':\r\n                SurveyManager_1.SurveyManager.addSurvey(self.surveyToken);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n    return Survey;\r\n}());\r\nexports.Survey = Survey;\r\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// import 'whatwg-fetch';\r\nvar Config_1 = __webpack_require__(6);\r\nvar Request_1 = __webpack_require__(4);\r\nvar templates_1 = __webpack_require__(7);\r\nvar DomUtilities_1 = __webpack_require__(0);\r\nvar ConditionalTextFilter_1 = __webpack_require__(46);\r\nvar Constants_1 = __webpack_require__(1);\r\nvar LanguageTextFilter_1 = __webpack_require__(5);\r\nvar Select_1 = __webpack_require__(9);\r\nvar Cookie_1 = __webpack_require__(2);\r\nvar ConditionalFlowFilter_1 = __webpack_require__(10);\r\nvar SurveyHandler = /** @class */ (function () {\r\n    // isPartialAvailable : Boolean;\r\n    function SurveyHandler(ccsdk) {\r\n        var _this = this;\r\n        this.answers = {};\r\n        this.surveyAnswers = {};\r\n        this._prefillsPartiallyPosted = false;\r\n        this.surveyToken = ccsdk.surveyToken;\r\n        this.surveyData = {};\r\n        this.surveyDisplay = {\r\n            position: \"\",\r\n            surveyPosition: \"\",\r\n            welcomePopupAnimation: \"\",\r\n            surveyPopupAnimation: \"\"\r\n        };\r\n        this.ccsdk = ccsdk;\r\n        this.domListeners = [];\r\n        this.questions = [];\r\n        this.questionsToDisplay = [];\r\n        this.prefillQuestions = [];\r\n        this.conditionalQuestions = [];\r\n        this.prefillResponses = [];\r\n        this.prefillWithTags = {};\r\n        this.prefillWithNote = {};\r\n        this.prefillDirect = {};\r\n        this.answers = {};\r\n        this.util = new DomUtilities_1.DomUtilities();\r\n        this.dom = ccsdk.dom;\r\n        this.displayThankYouCb = function (e) {\r\n            //perform final post\r\n            _this.finalPost(null, null);\r\n            if (_this.ccsdk && _this.ccsdk.tracking) {\r\n                _this.ccsdk.tracking.trackEvent(\"Completed Survey\", {\r\n                    token: _this.ccsdk.tracking.token,\r\n                    data: {\r\n                        name: null,\r\n                        action: null\r\n                    }\r\n                }, null, null);\r\n            }\r\n            var thankyouHtml = templates_1.templates.thankyou;\r\n            // thankyouHtml = thankyouHtml.replace(\"{{question}}\", this.surveyData.thankyouText);\r\n            // thankyouHtml = thankyouHtml.replace(\"{{question}}\", LanguageTextFilter.translateMessages(this, \"thankyouText\"));\r\n            var thankyouText = _this.ccsdk.config.thankyouText\r\n                ? _this.ccsdk.config.thankyouText\r\n                : _this.surveyData.thankyouText\r\n                    ? _this.surveyData.thankyouText\r\n                    : \"Thank You\";\r\n            var startText = _this.ccsdk.config.startButtonText\r\n                ? _this.ccsdk.config.startButtonText\r\n                : \"Start\";\r\n            thankyouHtml = thankyouHtml.replace(\"{{question}}\", thankyouText);\r\n            thankyouHtml = thankyouHtml.replace(\"{{button}}\", startText);\r\n            thankyouHtml = thankyouHtml.replace(\"{{branding}}\", _this.surveyData.branding &&\r\n                _this.surveyData.branding.toUpperCase() === \"NONE\"\r\n                ? \"no-branding\"\r\n                : \"full-branding\");\r\n            _this.ccsdk.dom.replaceInQuestionsContainer(thankyouHtml);\r\n            //TODO : Fix this Add class not working???\r\n            var thankyouContainer = _this.util.get(\"#cc-thankyou-container\");\r\n            window.ccsdkDebug ? console.log(thankyouContainer) : \"\";\r\n            _this.util.addClass(thankyouContainer[0], \"show-thankyou-slide\");\r\n            var onSurveyEndEvent = new CustomEvent(Constants_1.Constants.SURVEY_END_EVENT + \"-\" + _this.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyEndEvent);\r\n            //set done cookie for 30 days.\r\n            Cookie_1.Cookie.set(_this.surveyToken + \"-finish\", \"true\", 30, \"/\");\r\n            setTimeout(function () {\r\n                _this.ccsdk.dom.destroyListeners();\r\n                _this.destroy();\r\n            }, 2000);\r\n        };\r\n        this.destroySurveyCb = function (e) {\r\n            var self = _this;\r\n            //send end survey event.\r\n            var onSurveyEndEvent = new CustomEvent(Constants_1.Constants.SURVEY_END_EVENT + \"-\" + _this.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyEndEvent);\r\n            self.destroy();\r\n        };\r\n        this.acceptAnswersCb = function (e) {\r\n            var self = _this;\r\n            // (window as any).ccsdkDebug?console.log(self):'';\r\n            // (window as any).ccsdkDebug?console.log('question answered',e:'')\r\n            var data = e.detail;\r\n            var response = {};\r\n            response.questionId = data.questionId;\r\n            switch (data.type) {\r\n                case \"scale\":\r\n                    response.text = null;\r\n                    response.number = Number(data.data.number);\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case \"nps\":\r\n                    response.text = null;\r\n                    response.number = Number(data.data.number);\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case \"radio\":\r\n                    response.text = data.data.text;\r\n                    response.number = null;\r\n                    // response.number = Number(data.data.number);\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case \"radioImage\":\r\n                    response.text = data.data.text;\r\n                    response.number = null;\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case \"smile\":\r\n                    response.text = null;\r\n                    response.number = Number(data.data.number);\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case \"star\":\r\n                    response.text = null;\r\n                    response.number = Number(data.data.number);\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case \"multiline\":\r\n                    response.text = data.data.text;\r\n                    response.number = null;\r\n                    // (window as any).ccsdkDebug?console.log(data):'';\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    self.ccsdk.dom.setQIndex(data.index);\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case \"singleline\":\r\n                    response.text = data.data.text;\r\n                    response.number = null;\r\n                    // (window as any).ccsdkDebug?console.log(data):'';\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    self.ccsdk.dom.setQIndex(data.index);\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case \"number\":\r\n                    response.text = null;\r\n                    response.number = Number(data.data.number);\r\n                    // (window as any).ccsdkDebug?console.log(data):'';\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    self.ccsdk.dom.setQIndex(data.index);\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case \"checkbox\":\r\n                    response.text = data.data.text;\r\n                    response.number = null;\r\n                    // (window as any).ccsdkDebug?console.log(data):'';\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    self.ccsdk.dom.setQIndex(data.index);\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case \"select\":\r\n                    response.text = data.data.text;\r\n                    response.number = null;\r\n                    // (window as any).ccsdkDebug?console.log(data):'';\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    self.ccsdk.dom.setQIndex(data.index);\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case \"slider\":\r\n                    response.text = data.data.text;\r\n                    response.number = Number(data.data.number);\r\n                    // (window as any).ccsdkDebug?console.log(data):'';\r\n                    self.postPartialAnswer(data.index, response, false, null, null);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    self.ccsdk.dom.setQIndex(data.index);\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        };\r\n    }\r\n    SurveyHandler.prototype.fetchQuestions = function (successcb, errorcb) {\r\n        this.randomNumber = parseInt(String(Math.random() * 1000));\r\n        var surveyUrl = Config_1.Config.SURVEY_BY_TOKEN.replace(\"{token}\", \"\" + this.surveyToken);\r\n        // surveyUrl = surveyUrl.replace(\"{tabletId}\", \"\" + this.randomNumber);\r\n        surveyUrl = Config_1.Config.API_URL + surveyUrl;\r\n        Request_1.RequestHelper.get(surveyUrl, successcb, errorcb);\r\n        // (window as any).ccsdkDebug?console.log(data):'';\r\n        // this.surveyData = data.then(function();\r\n        // (window as any).ccsdkDebug?console.log(this.surveyData):'';\r\n    };\r\n    SurveyHandler.prototype.removeAnswer = function (questionId) {\r\n        delete this.answers[questionId];\r\n        delete this.surveyAnswers[questionId];\r\n    };\r\n    SurveyHandler.prototype.attachSurvey = function (surveyData) {\r\n        this.surveyData = surveyData;\r\n        this.setupPrefill();\r\n        this.setupSurveyContainer();\r\n        //clean survey\r\n        this.cleanSurvey();\r\n        this.displayQuestions();\r\n        this.displayThankYou();\r\n        this.destroySurvey();\r\n    };\r\n    SurveyHandler.prototype.setupPrefill = function () {\r\n        var _this = this;\r\n        if (this.surveyData &&\r\n            this.surveyData.preFill &&\r\n            this.surveyData.preFill.length > 0) {\r\n            this.surveyData.preFill.map(function (response) {\r\n                _this.fillPrefillQuestionObject(response.questionId, response);\r\n            });\r\n        }\r\n    };\r\n    SurveyHandler.prototype.cleanSurvey = function () {\r\n        this.questionsToDisplay = [];\r\n        this.answers = {};\r\n        this.surveyAnswers = {};\r\n        this.conditionalQuestions = [];\r\n    };\r\n    SurveyHandler.prototype.setupSurveyContainer = function () {\r\n        var surveyHtml = templates_1.templates.question_survey;\r\n        surveyHtml = surveyHtml.replace(\"{{surveyToken}}\", this.surveyToken);\r\n        surveyHtml = surveyHtml.replace(\"{{animation}}\", this.surveyDisplay.surveyPopupAnimation);\r\n        surveyHtml = surveyHtml.replace(/{{location}}/g, this.surveyDisplay.surveyPosition);\r\n        this.ccsdk.dom.appendInBody(surveyHtml);\r\n    };\r\n    SurveyHandler.prototype.displayQuestionSelector = function () { };\r\n    SurveyHandler.prototype.displayWelcomeQuestion = function (warningWelcomeText) {\r\n        //call this with true when welcome container is clicked.\r\n        // this.ccsdk.addThrottlingEntries(false);\r\n        var onSurveyImpressionEvent = new CustomEvent(Constants_1.Constants.SURVEY_IMPRESSION_EVENT + \"-\" + this.surveyToken);\r\n        document.dispatchEvent(onSurveyImpressionEvent);\r\n        this.ccsdk.surveyStartTime = new Date();\r\n        var self = this;\r\n        var welcomeHtml = templates_1.templates.question_start;\r\n        welcomeHtml = welcomeHtml.replace(\"{{surveyToken}}\", this.surveyToken);\r\n        // welcomeHtml = welcomeHtml.replace(\"{{question}}\", this.surveyData.welcomeText);\r\n        var welcomeText = this.ccsdk.config.welcomeText\r\n            ? this.ccsdk.config.welcomeText\r\n            : \"Welcome\";\r\n        // welcomeHtml = welcomeHtml.replace(\"{{question}}\", LanguageTextFilter.translateMessages(this, \"welcomeText\"));\r\n        var startText = this.ccsdk.config.startButtonText\r\n            ? this.ccsdk.config.startButtonText\r\n            : \"Start\";\r\n        if (warningWelcomeText) {\r\n            document.getElementById(this.surveyToken + \"-welcome\").remove();\r\n            welcomeHtml = welcomeHtml.replace(\"{{question}}\", warningWelcomeText);\r\n            welcomeHtml = welcomeHtml.replace(\"{{button}}\", \"Close\");\r\n            welcomeHtml = welcomeHtml.replace(\"{{action}}\", \"button-close\");\r\n        }\r\n        else {\r\n            welcomeHtml = welcomeHtml.replace(\"{{question}}\", welcomeText);\r\n            welcomeHtml = welcomeHtml.replace(\"{{button}}\", startText);\r\n            welcomeHtml = welcomeHtml.replace(\"{{action}}\", \"survey-start\");\r\n        }\r\n        welcomeHtml = welcomeHtml.replace(\"{{location}}\", this.surveyDisplay.position);\r\n        welcomeHtml = welcomeHtml.replace(\"{{animation}}\", this.surveyDisplay.welcomePopupAnimation);\r\n        // (window as any).ccsdkDebug?console.log(\"Appending in body\"):'';\r\n        this.ccsdk.dom.appendInBody(welcomeHtml);\r\n        this.ccsdk.dom.showWelcomeContainer();\r\n        this.setCoolDownPeriod(this.ccsdk.config, this.surveyToken);\r\n        if (typeof this.ccsdk.config.keepAlive != undefined &&\r\n            this.ccsdk.config.keepAlive > 0) {\r\n            this.welcomeQuestionDisplayTime = new Date();\r\n            this.welcomeInterval = setInterval(function () {\r\n                self.checkWelcomeQuestionDisplay(self.ccsdk.config.keepAlive);\r\n            }, 1000);\r\n        }\r\n        this.acceptAnswers();\r\n        // self.survey.displayLanguageSelector();\r\n    };\r\n    SurveyHandler.prototype.setCoolDownPeriod = function (campaign, surveyToken) {\r\n        if (campaign && campaign.coolDownPeriod && campaign.coolDownPeriod != 0) {\r\n            Cookie_1.Cookie.set(surveyToken + \"-coolDown\", \"true\", campaign.coolDownPeriod / 86400, \"/\");\r\n        }\r\n        else {\r\n            Cookie_1.Cookie.set(surveyToken + \"-coolDown\", \"true\", 1, \"/\");\r\n        }\r\n    };\r\n    SurveyHandler.prototype.checkWelcomeQuestionDisplay = function (keepAlive) {\r\n        var self = this;\r\n        var now = new Date();\r\n        if (keepAlive) {\r\n            // console.log((now.getTime() - this.welcomeQuestionDisplayTime.getTime()) / 1000);\r\n            if (keepAlive <=\r\n                (now.getTime() - this.welcomeQuestionDisplayTime.getTime()) / 1000) {\r\n                self.killWelcomeQuestion();\r\n            }\r\n        }\r\n    };\r\n    SurveyHandler.prototype.killWelcomeQuestion = function () {\r\n        this.destroy();\r\n        clearInterval(this.welcomeInterval);\r\n    };\r\n    SurveyHandler.prototype.cancelKillWelcomeQuestion = function () {\r\n        clearInterval(this.welcomeInterval);\r\n    };\r\n    SurveyHandler.prototype.displayLanguageSelector = function () {\r\n        var self = this;\r\n        var options1;\r\n        var qId = \"languageSelector\";\r\n        var cTemplate1 = templates_1.templates.language_selector;\r\n        options1 = this.util.generateLanguageSelectOptions([\"default\"]);\r\n        if (this.surveyData.translated) {\r\n            options1 = this.util.generateLanguageSelectOptions([\"default\"].concat(Object.keys(this.surveyData.translated)));\r\n        }\r\n        cTemplate1 = cTemplate1.replace(/{{questionId}}/g, qId);\r\n        cTemplate1 = cTemplate1.replace(\"{{options}}\", options1);\r\n        cTemplate1 = cTemplate1.replace(\"{{requiredLabel}}\", true ? \"*\" : \"\");\r\n        this.ccsdk.dom.replaceInQuestionsContainer(cTemplate1);\r\n        var $questionContainer = document.querySelectorAll(\".cc-questions-container\");\r\n        var $body = document.getElementsByTagName(\"body\")[0];\r\n        this.util.addClass($questionContainer[0].firstChild, \"show-slide\");\r\n        this.languageSelect = new Select_1.Select(qId);\r\n        var submitBtn = document.querySelectorAll(\".submit-icon\");\r\n        this.util.removeClassAll(submitBtn, \"act-cc-button-next\");\r\n        this.util.addClassAll(submitBtn, \"act-cc-button-lang-next\");\r\n        if (this.languageSelect) {\r\n            this.languageSelect.destroyListeners();\r\n        }\r\n        this.languageSelect.init(qId);\r\n        var selectRes = \"\";\r\n        if (this.util.checkIfListenerExists(\"#\" + qId + \" .cc-select-options .cc-select-option\", this.domListeners)) {\r\n            // return;\r\n            window.ccsdkDebug\r\n                ? console.log(\"display language select - previous listeners exists\")\r\n                : \"\";\r\n            this.removePrevListener(\"#\" + qId + \" .cc-select-options .cc-select-option\");\r\n        }\r\n        var ref = this.util.initListener(\"click\", \"#\" + qId + \" .cc-select-options .cc-select-option\", function () {\r\n            self.ccsdk.debug ? console.log(\"languageSelectOption\") : \"\";\r\n            selectRes = document.querySelectorAll(\"#\" + qId + \" .cc-select-trigger\")[0].innerHTML;\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener($body, ref.type, ref.id, ref.cb);\r\n        var languageSelect2 = this.util.initListener(\"click\", \".act-cc-button-lang-next\", function () {\r\n            self.ccsdk.debug ? console.log(\"languageNext\") : \"\";\r\n            self.ccsdk.config.language = \"default\";\r\n            self.ccsdk.config.language = selectRes; //language selection from menu then show first question\r\n            //set config rtl or ltr\r\n            var isRTL = /[\\u0600-\\u06FF]/.test(selectRes);\r\n            self.ccsdk.config.textDirection = isRTL ? \"rtl\" : \"ltr\";\r\n            self.ccsdk.setHtmlTextDirection();\r\n            self.util.removeClassAll(submitBtn, \"act-cc-button-lang-next\");\r\n            self.util.addClassAll(submitBtn, \"act-cc-button-next\");\r\n            self.ccsdk.dom.loadFirstQuestion(); // this.loadFirstQuestion();\r\n            // self.postPrefillPartialAnswer( false, null, null );\r\n        });\r\n        this.domListeners.push(languageSelect2);\r\n        languageSelect2.internalHandler = this.util.listener($body, languageSelect2.type, languageSelect2.id, languageSelect2.cb);\r\n        // this.util.addClass(thankyouContainer[0], 'show-thankyou-slide');\r\n        // this.ccsdk.dom.appendInBody(cTemplate1);\r\n        // this.ccsdk.dom.showLanguageSelector();\r\n        window.ccsdkDebug ? console.log(cTemplate1) : \"\";\r\n    };\r\n    SurveyHandler.prototype.displayThankYou = function () {\r\n        var self = this;\r\n        document.addEventListener(\"ccdone\", this.displayThankYouCb);\r\n    };\r\n    SurveyHandler.prototype.displayQuestions = function () {\r\n        //check question is supported, based on question types.\r\n        //filter pre fill questions.\r\n        this.questions = this.surveyData.questions;\r\n        // this.questionsToDisplay = (this.surveyData.questions as any[]).filter(this.filterQuestions);\r\n        this.filterQuestions();\r\n        //sort questions and display them?\r\n        this.questionsToDisplay = this.questionsToDisplay.sort(this.questionCompare);\r\n        var ccSurvey;\r\n        ccSurvey = document.getElementsByClassName(\"cc-questions-container\");\r\n        // ccSurvey = ccSurvey[0];\r\n        var surveyObject = ccSurvey[0];\r\n        // (window as any).ccsdkDebug?console.log(this.questionsToDisplay):'';\r\n        //chec\r\n        //for now just do 1st question.\r\n        for (var _i = 0, _a = this.questionsToDisplay; _i < _a.length; _i++) {\r\n            var question = _a[_i];\r\n            if (this.checkConditionals(question)) {\r\n                var compiledTemplate = this.compileTemplate(question);\r\n                question.compiledTemplate = compiledTemplate;\r\n                // surveyObject.innerHTML += compiledTemplate;\r\n                //register handlers for onclick?\r\n            }\r\n            else {\r\n                if (this.isPrefillQuestion(question)) {\r\n                    this.prefillQuestions.push(question);\r\n                }\r\n            }\r\n            //else don't display it.\r\n        }\r\n        // (window as any).ccsdkDebug?console.log(surveyObject.innerHTML):'';\r\n        // this.postPartialAnswer(this.questionsToDisplay[0], \"test\");\r\n    };\r\n    SurveyHandler.prototype.getSurveyQuestions = function () {\r\n        return this.questionsToDisplay;\r\n    };\r\n    SurveyHandler.prototype.getAnswerForQuestionId = function (questionId) {\r\n        var answer = this.surveyAnswers[questionId];\r\n        if (typeof answer === \"undefined\") {\r\n            for (var _i = 0, _a = this.prefillResponses; _i < _a.length; _i++) {\r\n                var response = _a[_i];\r\n                if (response.questionId == questionId) {\r\n                    return response;\r\n                }\r\n            }\r\n        }\r\n        return this.surveyAnswers[questionId];\r\n    };\r\n    SurveyHandler.prototype.acceptAnswers = function () {\r\n        var self = this;\r\n        // (window as any).ccsdkDebug?console.log('add question answered listener':'')\r\n        document.addEventListener(\"q-answered\", this.acceptAnswersCb);\r\n    };\r\n    SurveyHandler.prototype.fillPrefillQuestionObject = function (id, response) {\r\n        var question = this.getQuestionById(id);\r\n        var responseStored = this.getPrefillResponseById(id);\r\n        if (responseStored != null) {\r\n            this.updatePrefillResponseById(id, response);\r\n        }\r\n        else {\r\n            this.prefillResponses.push(response);\r\n        }\r\n    };\r\n    SurveyHandler.prototype.fillPrefill = function (prefillObj) {\r\n        var _this = this;\r\n        Object.keys(prefillObj).map(function (x) {\r\n            _this.prefillWithTags[x.toLowerCase()] = prefillObj[x];\r\n        });\r\n        window.ccsdkDebug\r\n            ? console.log(\"prefillByTag\", this.prefillWithTags)\r\n            : \"\";\r\n    };\r\n    SurveyHandler.prototype.fillPrefillByNote = function (prefillObj) {\r\n        var _this = this;\r\n        Object.keys(prefillObj).map(function (x) {\r\n            _this.prefillWithNote[x.toLowerCase()] = prefillObj[x];\r\n        });\r\n        window.ccsdkDebug\r\n            ? console.log(\"prefillByNote\", this.prefillWithNote)\r\n            : \"\";\r\n    };\r\n    SurveyHandler.prototype.fillPrefillDirect = function (prefillObj) {\r\n        var _this = this;\r\n        Object.keys(prefillObj).forEach(function (x) {\r\n            _this.prefillDirect[x] = prefillObj[x];\r\n        });\r\n        window.ccsdkDebug\r\n            ? console.log(\"prefillDirect\", this.prefillDirect)\r\n            : \"\";\r\n    };\r\n    SurveyHandler.prototype.fillPrefillQuestion = function (id, value, valueType) {\r\n        var question = this.getQuestionById(id);\r\n        var response;\r\n        var responseStored = this.getPrefillResponseById(id);\r\n        if (responseStored != null) {\r\n            response = responseStored;\r\n        }\r\n        else {\r\n            response = {\r\n                questionId: question.id,\r\n                questionText: question.text,\r\n                textInput: null,\r\n                numberInput: null\r\n            };\r\n        }\r\n        valueType = this.getAnswerTypeFromDisplayType(question.displayType);\r\n        if (valueType.toLowerCase() == \"number\") {\r\n            response.numberInput = value;\r\n        }\r\n        if (valueType.toLowerCase() == \"text\") {\r\n            response.textInput = value;\r\n        }\r\n        if (responseStored != null) {\r\n            this.updatePrefillResponseById(id, response);\r\n        }\r\n        else {\r\n            this.prefillResponses.push(response);\r\n        }\r\n    };\r\n    SurveyHandler.prototype.postPrefillPartialAnswer = function (fullSubmission, successcb, errorcb) {\r\n        if (fullSubmission === void 0) { fullSubmission = false; }\r\n        if (!fullSubmission && this._prefillsPartiallyPosted) {\r\n            return;\r\n        }\r\n        this._prefillsPartiallyPosted = true;\r\n        if (!this.surveyData.partialResponseId) {\r\n            return;\r\n        }\r\n        var surveyPartialUrl = Config_1.Config.SURVEY_PARTIAL_RESPONSE.replace(\"{id}\", this.surveyData.partialResponseId);\r\n        surveyPartialUrl = surveyPartialUrl.replace(\"{complete}\", \"false\");\r\n        surveyPartialUrl = Config_1.Config.API_URL + surveyPartialUrl;\r\n        window.ccsdkDebug\r\n            ? console.log(\"Posting Prefill Responses to Server\")\r\n            : \"\";\r\n        window.ccsdkDebug ? console.log(this.prefillResponses) : \"\";\r\n        if (!this.surveyData.partialResponseId) {\r\n            // run successCB if there is one.\r\n            if (successcb) {\r\n                successcb();\r\n            }\r\n            return;\r\n        }\r\n        if (typeof this.prefillResponses !== \"undefined\" &&\r\n            this.prefillResponses.length > 0) {\r\n            Request_1.RequestHelper.postWithHeaders(surveyPartialUrl, this.prefillResponses, {}, successcb, errorcb);\r\n        }\r\n        else {\r\n            // console.log('No Prefill data');\r\n            return;\r\n        }\r\n    };\r\n    SurveyHandler.prototype.updatePrefillResponseById = function (id, resp) {\r\n        for (var _i = 0, _a = this.prefillResponses; _i < _a.length; _i++) {\r\n            var response = _a[_i];\r\n            if (response.questionId == id) {\r\n                response = resp;\r\n                break;\r\n            }\r\n        }\r\n    };\r\n    SurveyHandler.prototype.getPrefillResponseById = function (id) {\r\n        return this.prefillResponses.find(function (x) { return x.id === id; });\r\n    };\r\n    SurveyHandler.prototype.getQuestionById = function (id) {\r\n        return this.questions.find(function (x) { return x.id === id; });\r\n    };\r\n    SurveyHandler.prototype.postPartialAnswer = function (index, response, complete, successcb, errorcb) {\r\n        if (complete === void 0) { complete = false; }\r\n        this.postPrefillPartialAnswer(complete, null, null);\r\n        var question = this.questionsToDisplay[index];\r\n        var data = {\r\n            questionId: question.id,\r\n            questionText: question.text,\r\n            textInput: response.text,\r\n            numberInput: response.number\r\n        };\r\n        var surveyPartialUrl = Config_1.Config.SURVEY_PARTIAL_RESPONSE.replace(\"{id}\", this.surveyData.partialResponseId);\r\n        window.ccsdkDebug\r\n            ? console.log(\"partial response\", question.id ==\r\n                this.questionsToDisplay[this.questionsToDisplay.length - 1].id)\r\n            : \"\";\r\n        surveyPartialUrl = surveyPartialUrl.replace(\"{complete}\", \"\" + complete);\r\n        surveyPartialUrl = Config_1.Config.API_URL + surveyPartialUrl;\r\n        //add partial answer to main answer\r\n        this.surveyAnswers[question.id] = data;\r\n        data = [data];\r\n        var onSurveyAnswerEvent = new CustomEvent(Constants_1.Constants.SURVEY_ANSWER_EVENT + \"-\" + this.surveyToken);\r\n        document.dispatchEvent(onSurveyAnswerEvent);\r\n        if (!this.surveyData.partialResponseId) {\r\n            // run success callback and return\r\n            if (successcb) {\r\n                successcb();\r\n            }\r\n            return;\r\n        }\r\n        if (question.id ==\r\n            this.questionsToDisplay[this.questionsToDisplay.length - 1].id) {\r\n            //last question post moved to separate function\r\n            Request_1.RequestHelper.postWithHeaders(surveyPartialUrl, data, {}, successcb, errorcb);\r\n        }\r\n        else {\r\n            Request_1.RequestHelper.postWithHeaders(surveyPartialUrl, data, {}, successcb, errorcb);\r\n        }\r\n    };\r\n    SurveyHandler.prototype.finalPost = function (successcb, errorcb) {\r\n        //last question\r\n        var postSurveyFinalUrl = Config_1.Config.POST_SURVEY_FINAL.replace(\"{tokenId}\", this.ccsdk.surveyToken);\r\n        postSurveyFinalUrl = Config_1.Config.API_URL + postSurveyFinalUrl;\r\n        var answersAll = [];\r\n        // hack for partial flushing\r\n        var lastAnswer;\r\n        if (Object.keys(this.surveyAnswers).length == 0) {\r\n            return;\r\n        }\r\n        for (var answer in this.surveyAnswers) {\r\n            var response = this.surveyAnswers[answer];\r\n            if (response &&\r\n                (response.textInput !== null || response.numberInput !== null)) {\r\n                answersAll.push(response);\r\n                lastAnswer = response;\r\n            }\r\n        }\r\n        for (var answer in this.prefillResponses) {\r\n            answersAll.push(this.prefillResponses[answer]);\r\n        }\r\n        var timeAtPost = new Date().getTime();\r\n        var finalData = {\r\n            id: this.ccsdk.surveyToken,\r\n            user: this.ccsdk.config.username,\r\n            locationId: null,\r\n            responses: answersAll,\r\n            nps: 0,\r\n            surveyClient: Constants_1.Constants.SURVEY_CLIENT,\r\n            responseDuration: Math.floor((timeAtPost - this.ccsdk.surveyStartTime.getTime()) / 1000)\r\n        };\r\n        if (lastAnswer) {\r\n            var _lastAnswer = {\r\n                text: lastAnswer.textInput,\r\n                number: lastAnswer.numberInput\r\n            };\r\n            this.postPartialAnswer(this.questionsToDisplay.length - 1, _lastAnswer, true, null, null);\r\n        }\r\n        if (finalData.responses && finalData.responses.length > 0) {\r\n            Request_1.RequestHelper.postWithHeaders(postSurveyFinalUrl, finalData, {}, successcb, errorcb);\r\n        }\r\n        else {\r\n            successcb();\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * check if conditions are satsified which are required to display question?\r\n     *\r\n     * @param {any} question\r\n     * @memberof Survey\r\n     */\r\n    SurveyHandler.prototype.checkConditionals = function (question) {\r\n        return true;\r\n    };\r\n    SurveyHandler.prototype.compileTemplate = function (question) {\r\n        var self = this;\r\n        //get question type\r\n        var questionTemplate;\r\n        // (window as any).ccsdkDebug?console.log(question):'';\r\n        if (question != \"undefined\") {\r\n            switch (question.displayType) {\r\n                case \"Slider\":\r\n                    var displayLegend = question.displayLegend;\r\n                    var opt = question.multiSelect[0].split(\"-\");\r\n                    var optMin = opt[0].split(\";\");\r\n                    var optMax = opt[1].split(\";\");\r\n                    //get text question template and compile it.\r\n                    questionTemplate = templates_1.templates.question_slider;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{min}}/g, optMin[0]);\r\n                    if (displayLegend[0]) {\r\n                        questionTemplate = questionTemplate.replace(/{{minLabel}}/g, displayLegend[0] + \"-\");\r\n                    }\r\n                    else {\r\n                        questionTemplate = questionTemplate.replace(/{{minLabel}}/g, \"\");\r\n                    }\r\n                    questionTemplate = questionTemplate.replace(/{{max}}/g, optMax[0]);\r\n                    if (displayLegend[1]) {\r\n                        questionTemplate = questionTemplate.replace(/{{maxLabel}}/g, displayLegend[1] + \"-\");\r\n                    }\r\n                    else {\r\n                        questionTemplate = questionTemplate.replace(/{{maxLabel}}/g, \"\");\r\n                    }\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    break;\r\n                case \"Scale\":\r\n                    //get text question template and compile it.\r\n                    window.ccsdkDebug ? console.log(question.questionTags) : \"\";\r\n                    if (question.questionTags.includes(\"NPS\")) {\r\n                        questionTemplate = templates_1.templates.question_nps;\r\n                        questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                        questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                        questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                        questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    }\r\n                    else if (question.questionTags.includes(\"CSAT\")) {\r\n                        if (question.questionTags.includes(\"csat_satisfaction_5\")) {\r\n                            questionTemplate = templates_1.templates.question_csat_satisfaction_5;\r\n                        }\r\n                        else if (question.questionTags.includes(\"csat_agreement_5\")) {\r\n                            questionTemplate = templates_1.templates.question_csat_agreement_5;\r\n                        }\r\n                        questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                        questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                        questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                        questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    }\r\n                    else {\r\n                        var tileColor = \"\";\r\n                        var style = \"\";\r\n                        if (question.attributes != null &&\r\n                            question.attributes.scaleColor &&\r\n                            question.attributes.scaleColor.length > 0) {\r\n                            if (question.attributes.scaleColor !== \"Gradient\") {\r\n                                tileColor = question.attributes.scaleColor;\r\n                            }\r\n                            else {\r\n                                tileColor = \"#02BAEE\";\r\n                            }\r\n                        }\r\n                        else if (question.presentationMode != null &&\r\n                            question.presentationMode.indexOf(\"Color\") !== -1) {\r\n                            tileColor = question.presentationMode.split(\":\")[1];\r\n                        }\r\n                        if (tileColor.length > 0) {\r\n                            var tileColorDark = this.util.shadeBlendConvert(-0.3, tileColor, undefined);\r\n                            style =\r\n                                \"\\\r\n                <style>\\\r\n                #id\" +\r\n                                    question.id +\r\n                                    \" .option-number-item.option-scale{\\\r\n                  background-color : \" +\r\n                                    tileColor +\r\n                                    \";\\\r\n                }\\\r\n                #id\" +\r\n                                    question.id +\r\n                                    \" .option-number-item.option-scale:hover,\\\r\n                #id\" +\r\n                                    question.id +\r\n                                    \" .option-number-item.option-scale.selected{\\\r\n                  background-color : \" +\r\n                                    tileColorDark +\r\n                                    \";\\\r\n                }\\\r\n                </style>\\\r\n              \";\r\n                        }\r\n                        questionTemplate = templates_1.templates.question_scale;\r\n                        questionTemplate = questionTemplate.replace(/{{style}}/g, style);\r\n                        questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                        questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                        questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                        questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                        //construct NPS scale here....\r\n                        var startRange = 0.0;\r\n                        var endRange = 10.0;\r\n                        var options = \"\";\r\n                        var startRangeLabel_1 = \"\";\r\n                        // let startRangeLabel = \"\";\r\n                        // let endRangeLabel = \"Very likely\";\r\n                        var endRangeLabel_1 = \"\";\r\n                        var midRangeLabel = \"\";\r\n                        if (question.questionTags.includes(\"ces_agree_5\") ||\r\n                            question.questionTags.includes(\"ces_agree_7\")) {\r\n                            startRangeLabel_1 = \"Strongly Disagree\";\r\n                            endRangeLabel_1 = \"Strongly Agree\";\r\n                            if (question.questionTags.includes(\"ces_agree_7\")) {\r\n                                midRangeLabel = \"Somewhat Agree\";\r\n                            }\r\n                        }\r\n                        else if (question.questionTags.includes(\"ces_effort_5\") ||\r\n                            question.questionTags.includes(\"ces_effort_7\")) {\r\n                            startRangeLabel_1 = \"High Effort\";\r\n                            endRangeLabel_1 = \"Low Effort\";\r\n                            if (question.questionTags.includes(\"ces_effort_7\")) {\r\n                                midRangeLabel = \"Moderate Effort\";\r\n                            }\r\n                        }\r\n                        else if (question.anchorMetricName != null) {\r\n                            var metricName = question.anchorMetricName;\r\n                            var customMetric = this.surveyData.customMetrics[metricName];\r\n                            var optionsLength = customMetric.optionCategories.length;\r\n                            startRangeLabel_1 = customMetric.optionCategories[0].label;\r\n                            if (optionsLength > 2) {\r\n                                midRangeLabel = customMetric.optionCategories[1].label;\r\n                            }\r\n                            else {\r\n                                midRangeLabel = null;\r\n                            }\r\n                            endRangeLabel_1 =\r\n                                customMetric.optionCategories[optionsLength - 1].label;\r\n                        }\r\n                        var displayLegend_1 = LanguageTextFilter_1.LanguageTextFilter.translateDisplayLegend(this, question);\r\n                        if (displayLegend_1) {\r\n                            if (displayLegend_1.length > 0) {\r\n                                startRangeLabel_1 = displayLegend_1[0] ? displayLegend_1[0] : null;\r\n                                endRangeLabel_1 = displayLegend_1[1] ? displayLegend_1[1] : null;\r\n                            }\r\n                        }\r\n                        if (question.multiSelect.length > 0) {\r\n                            startRange = parseFloat(question.multiSelect[0].split(\"-\")[0]);\r\n                            if (startRangeLabel_1 == null) {\r\n                                startRangeLabel_1 = question.multiSelect[0]\r\n                                    .split(\"-\")[0]\r\n                                    .split(\";\")[1];\r\n                            }\r\n                            endRange = parseFloat(question.multiSelect[0].split(\"-\")[1]);\r\n                            if (endRangeLabel_1 == null) {\r\n                                endRangeLabel_1 = question.multiSelect[0]\r\n                                    .split(\"-\")[1]\r\n                                    .split(\";\")[1];\r\n                            }\r\n                        }\r\n                        startRangeLabel_1 = startRangeLabel_1 == null ? \"\" : startRangeLabel_1;\r\n                        endRangeLabel_1 = endRangeLabel_1 == null ? \"\" : endRangeLabel_1;\r\n                        var mobileImageUrl = \"\";\r\n                        var imageVisibility010 = \"hide\";\r\n                        var imageVisibility110 = \"hide\";\r\n                        var scaleVisibility = \"show-inline\";\r\n                        var scaleImageContainer = \"\";\r\n                        if (startRange == 0 && endRange == 10) {\r\n                            mobileImageUrl =\r\n                                \"https://cx.getcloudcherry.com/microsurvey-assets/scale-0-10-neutral.svg\";\r\n                            imageVisibility010 = \"show\";\r\n                            imageVisibility110 = \"hide\";\r\n                            scaleVisibility = \"hide\";\r\n                            scaleImageContainer = \"scale-image-container\";\r\n                        }\r\n                        else if (startRange == 1 && endRange == 10) {\r\n                            mobileImageUrl =\r\n                                \"https://cx.getcloudcherry.com/microsurvey-assets/scale-1-10-neutral.svg\";\r\n                            imageVisibility010 = \"hide\";\r\n                            imageVisibility110 = \"show\";\r\n                            scaleVisibility = \"hide\";\r\n                            scaleImageContainer = \"scale-image-container\";\r\n                        }\r\n                        // console.log('scale', startRange, endRange);\r\n                        var divider = 1;\r\n                        if (endRange < 11) {\r\n                        }\r\n                        else {\r\n                            divider = (endRange - startRange) / 10.0;\r\n                        }\r\n                        var initial = 0.0;\r\n                        var optionStyle = \"\";\r\n                        var legendDimension = void 0;\r\n                        if (window.isMobile) {\r\n                            if (endRange < 11) {\r\n                                var parentContainer = window.innerWidth - 40;\r\n                                var dimension = ((100 / (endRange - startRange + 1) - 0.5) *\r\n                                    parentContainer) /\r\n                                    100;\r\n                                dimension = dimension > 48 ? 48 : dimension;\r\n                                legendDimension = (endRange - startRange + 1) * (dimension + 1);\r\n                                optionStyle = \"width:\" + dimension + \"px;height:\" + dimension + \"px;padding:\" + (dimension -\r\n                                    15) /\r\n                                    2 + \"px;\";\r\n                            }\r\n                        }\r\n                        else {\r\n                            imageVisibility010 = \"hide\";\r\n                            imageVisibility110 = \"hide\";\r\n                            scaleVisibility = \"show-inline\";\r\n                            scaleImageContainer = \"\";\r\n                            mobileImageUrl = \"\";\r\n                        }\r\n                        if (question.questionTags.includes(\"CES\")) {\r\n                            var leftWidth = 38 * 3 + \"px\";\r\n                            for (var initial_1 = startRange; initial_1 <= endRange; initial_1 += divider) {\r\n                                options +=\r\n                                    '<span data-rating=\"' +\r\n                                        initial_1 +\r\n                                        '\" class=\"option-number-item option-' +\r\n                                        endRange +\r\n                                        \"-scale-\" +\r\n                                        initial_1 +\r\n                                        \" \" +\r\n                                        scaleVisibility +\r\n                                        '\" style=\"' +\r\n                                        optionStyle +\r\n                                        '\">' +\r\n                                        initial_1 +\r\n                                        \"</span>\";\r\n                            }\r\n                        }\r\n                        else if (question.anchorMetricName != null) {\r\n                            var metricName = question.anchorMetricName;\r\n                            var customMetric = this.surveyData.customMetrics[metricName];\r\n                            var cmwidthstart = customMetric.optionCategories[0].categoryRange.split(\",\")[0];\r\n                            var cmwidthend = customMetric.optionCategories[1].categoryRange.split(\",\")[0];\r\n                            var leftWidth = (cmwidthend - cmwidthstart) * 39 + \"px\";\r\n                            for (var iterator in customMetric.optionCategories) {\r\n                                var startRange_1 = parseFloat(customMetric.optionCategories[iterator].categoryRange.split(\",\")[0]);\r\n                                var endRange_1 = parseFloat(customMetric.optionCategories[iterator].categoryRange.split(\",\")[1]);\r\n                                imageVisibility010 = 'hide';\r\n                                imageVisibility110 = 'hide';\r\n                                scaleVisibility = 'show-inline';\r\n                                scaleImageContainer = \"\";\r\n                                mobileImageUrl = \"\";\r\n                                for (var initial_2 = startRange_1; initial_2 <= endRange_1; initial_2 += divider) {\r\n                                    options +=\r\n                                        '<span data-rating=\"' +\r\n                                            initial_2 +\r\n                                            '\" class=\"option-number-item option-scale\"' +\r\n                                            scaleVisibility +\r\n                                            '\" style=\"background:' +\r\n                                            customMetric.optionCategories[iterator].color +\r\n                                            '\">' +\r\n                                            initial_2 +\r\n                                            \"</span>\";\r\n                                }\r\n                            }\r\n                            legendDimension = (endRange - startRange + 1) * 39;\r\n                        }\r\n                        else {\r\n                            for (var initial_3 = startRange; initial_3 <= endRange; initial_3 += divider) {\r\n                                options +=\r\n                                    '<span data-rating=\"' +\r\n                                        initial_3 +\r\n                                        '\" class=\"option-number-item option-scale ' +\r\n                                        scaleVisibility +\r\n                                        '\" style=\"' +\r\n                                        optionStyle +\r\n                                        '\">' +\r\n                                        initial_3 +\r\n                                        \"</span>\";\r\n                            }\r\n                            legendDimension = (endRange - startRange + 1) * 39;\r\n                        }\r\n                        if (endRange - startRange + 1 <= 11) {\r\n                            var optionLeftExtraClass = \"option-left-rating-text-small-container\";\r\n                            var optionMidExtraClass = \"option-mid-rating-text-small-container\";\r\n                            var optionRightExtraClass = \"option-right-rating-text-small-container\";\r\n                            var optionMaxWidth = ((endRange - startRange + 1) * 38) / 2 - 5 + \"px\";\r\n                            // console.log(optionMaxWidth);\r\n                        }\r\n                        questionTemplate = questionTemplate.replace(\"{{legendStyle}}\", \"style=\\\"position:relative;width:\" + (mobileImageUrl ? \"100%\" : legendDimension + \"px\") + \";min-height: 20px;\\\"\");\r\n                        questionTemplate = questionTemplate.replace(/\\{\\{radialLegend\\}\\}/g, mobileImageUrl ? \"radial-legend\" : \"unknown-class\");\r\n                        questionTemplate = questionTemplate.replace(\"{{optionsRange}}\", options);\r\n                        // questionTemplate = questionTemplate.replace(\"{{maxWidth}}\", optionMaxWidth);\r\n                        questionTemplate = questionTemplate.replace(/maxWidth/g, mobileImageUrl ? \"35%;width:35%\" : optionMaxWidth);\r\n                        questionTemplate = questionTemplate.replace(/leftWidth/g, leftWidth);\r\n                        questionTemplate = questionTemplate.replace(/{{optionLeftExtraClass}}/g, optionLeftExtraClass);\r\n                        questionTemplate = questionTemplate.replace(/{{optionMidExtraClass}}/g, optionMidExtraClass);\r\n                        questionTemplate = questionTemplate.replace(/{{optionRightExtraClass}}/g, optionRightExtraClass);\r\n                        questionTemplate = questionTemplate.replace(\"{{leftLabel}}\", startRangeLabel_1);\r\n                        questionTemplate = questionTemplate.replace(\"{{midLabel}}\", midRangeLabel || \"\");\r\n                        questionTemplate = questionTemplate.replace(\"{{rightLabel}}\", endRangeLabel_1);\r\n                        questionTemplate = questionTemplate.replace(/{{mobileImageUrl}}/g, '\"' + mobileImageUrl + '\"');\r\n                        questionTemplate = questionTemplate.replace(\"{{imageVisibility010}}\", imageVisibility010);\r\n                        questionTemplate = questionTemplate.replace(\"{{imageVisibility110}}\", imageVisibility110);\r\n                        questionTemplate = questionTemplate.replace(\"{{scaleImageContainer}}\", scaleImageContainer);\r\n                    }\r\n                    break;\r\n                case \"Text\":\r\n                    //get text question template and compile it.\r\n                    questionTemplate = templates_1.templates.question_text;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    questionTemplate = questionTemplate.replace(\"{{validationHint}}\", question.validationHint ? question.validationHint : \"\");\r\n                    break;\r\n                case \"Number\":\r\n                    //get text question template and compile it.\r\n                    questionTemplate = templates_1.templates.question_number;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    questionTemplate = questionTemplate.replace(\"{{validationHint}}\", question.validationHint ? question.validationHint : \"\");\r\n                    break;\r\n                case \"Date\":\r\n                    questionTemplate = templates_1.templates.question_date;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    questionTemplate = questionTemplate.replace(\"{{validationHint}}\", question.validationHint ? question.validationHint : \"\");\r\n                    break;\r\n                case \"MultilineText\":\r\n                    //get text question template and compile it.\r\n                    questionTemplate = templates_1.templates.question_multi_line_text;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    questionTemplate = questionTemplate.replace(\"{{characterLimit}}\", question.attributes && question.attributes.characterLimit\r\n                        ? question.attributes.characterLimit\r\n                        : \"\");\r\n                    questionTemplate = questionTemplate.replace(\"{{validationHint}}\", question.validationHint ? question.validationHint : \"\");\r\n                    break;\r\n                case \"MultiSelect\":\r\n                    var acTemplate = void 0;\r\n                    var multiSelect1 = void 0;\r\n                    //get text question template and compile it.\r\n                    multiSelect1 = Array.prototype.slice.call(LanguageTextFilter_1.LanguageTextFilter.translateMultiSelect(this, question));\r\n                    if (question.presentationMode == \"Invert\") {\r\n                        // console.log('selection option before reverse', multiSelect1);\r\n                        multiSelect1.reverse();\r\n                        // console.log('selection option after reverse', multiSelect1);\r\n                        // console.log('selection api option', question.multiSelect);\r\n                    }\r\n                    //get text question template and compile it.\r\n                    if ((question.displayStyle == \"radiobutton/checkbox\" ||\r\n                        question.displayStyle == \"icon\") &&\r\n                        multiSelect1.length < 6) {\r\n                        // (window as any).ccsdkDebug?console.log(question.displayStyle):'';\r\n                        var checkOptionContainsImage = self.util.checkOptionContainsImage(multiSelect1);\r\n                        // (window as any).ccsdkDebug?console.log('select radio image',checkOptionContainsImage):'';\r\n                        if (checkOptionContainsImage &&\r\n                            ((multiSelect1.length > 0 &&\r\n                                multiSelect1[0].indexOf(\"Male\") !== -1) ||\r\n                                (multiSelect1.length > 0 &&\r\n                                    multiSelect1[0].indexOf(\"Yes\") !== -1) ||\r\n                                (multiSelect1.length > 1 &&\r\n                                    multiSelect1[1].indexOf(\"Yes\") !== -1))) {\r\n                            // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n                            acTemplate = templates_1.templates.question_checkbox;\r\n                            var options2_1 = self.util.generateCheckboxImageOptions(question.multiSelect, multiSelect1, question.id);\r\n                            // (window as any).ccsdkDebug?console.log(options2):'';\r\n                            questionTemplate = acTemplate;\r\n                            questionTemplate = questionTemplate.replace(/{{options}}/g, options2_1);\r\n                            acTemplate = questionTemplate;\r\n                        }\r\n                        else if (checkOptionContainsImage) {\r\n                            // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n                            acTemplate = templates_1.templates.question_checkbox;\r\n                            var options2_2 = self.util.generateCheckboxIgnoreImageOptions(question.multiSelect, multiSelect1, question.id);\r\n                            // (window as any).ccsdkDebug?console.log(options2):'';\r\n                            questionTemplate = acTemplate;\r\n                            questionTemplate = questionTemplate.replace(/{{options}}/g, options2_2);\r\n                            acTemplate = questionTemplate;\r\n                        }\r\n                        else {\r\n                            var options3 = self.util.generateCheckboxOptions(question.multiSelect, multiSelect1, question.id);\r\n                            // (window as any).ccsdkDebug?console.log(options2):'';\r\n                            acTemplate = templates_1.templates.question_checkbox;\r\n                            questionTemplate = acTemplate.replace(/{{options}}/g, options3);\r\n                            acTemplate = questionTemplate;\r\n                        }\r\n                    }\r\n                    else {\r\n                        // (window as any).ccsdkDebug?console.log('select type 3'):'';\r\n                        acTemplate = templates_1.templates.question_multi_select;\r\n                        // acTemplate = templates.question_select;\r\n                        var options3 = self.util.generateSelectOptions(question.multiSelect, multiSelect1);\r\n                        if (self.ccsdk.config.language.indexOf(\"Default\") === -1) {\r\n                            if (typeof question.translated !== \"undefined\" &&\r\n                                question.translated != null &&\r\n                                typeof question.translated[self.ccsdk.config.language] !==\r\n                                    \"undefined\" &&\r\n                                question.translated[self.ccsdk.config.language].multiSelect !==\r\n                                    \"undefined\" &&\r\n                                question.translated[self.ccsdk.config.language].multiSelect\r\n                                    .length > 0) {\r\n                                multiSelect1 = Array.prototype.slice.call(question.translated[self.ccsdk.config.language].multiSelect);\r\n                                if (question.presentationMode == \"Invert\") {\r\n                                    multiSelect1.reverse();\r\n                                }\r\n                                options3 = self.util.generateSelectOptions(question.multiSelect, multiSelect1);\r\n                            }\r\n                        }\r\n                        // questionTemplate = acTemplate;\r\n                        self.ccsdk.debug ? console.log(options3) : \"\";\r\n                        questionTemplate = acTemplate.replace(/{{options}}/g, options3);\r\n                        acTemplate = questionTemplate;\r\n                    }\r\n                    questionTemplate = acTemplate;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    break;\r\n                case \"Select\":\r\n                    var acTemplate1 = void 0;\r\n                    var acTemplate2 = void 0;\r\n                    var options1 = void 0;\r\n                    var options2 = void 0;\r\n                    var multiSelect = void 0;\r\n                    //get text question template and compile it.\r\n                    multiSelect = Array.prototype.slice.call(LanguageTextFilter_1.LanguageTextFilter.translateMultiSelect(this, question));\r\n                    var invertedMultiSelect = void 0;\r\n                    if (question.presentationMode == \"Invert\") {\r\n                        // console.log('selection option before reverse', multiSelect);\r\n                        invertedMultiSelect = question.multiSelect\r\n                            ? question.multiSelect.slice().reverse()\r\n                            : [];\r\n                        multiSelect.reverse();\r\n                        // console.log('selection option after reverse', multiSelect);\r\n                        // console.log('selection api option', question.multiSelect);\r\n                    }\r\n                    else {\r\n                        invertedMultiSelect = question.multiSelect;\r\n                    }\r\n                    if (question.displayStyle == \"radiobutton/checkbox\" &&\r\n                        multiSelect.length < 6) {\r\n                        // if(question.displayStyle == 'radiobutton/checkbox'){\r\n                        // (window as any).ccsdkDebug?console.log('select type 1'):'';\r\n                        // (window as any).ccsdkDebug?console.log(question.displayStyle):'';\r\n                        // acTemplate1 = templates.question_radio;\r\n                        // questionTemplate = acTemplate1;\r\n                        var checkOptionContainsImage = self.util.checkOptionContainsImage(multiSelect);\r\n                        window.ccsdkDebug\r\n                            ? console.log(\"select radio image\", checkOptionContainsImage)\r\n                            : \"\";\r\n                        if (checkOptionContainsImage &&\r\n                            ((multiSelect.length > 0 &&\r\n                                multiSelect[0].indexOf(\"Male\") !== -1) ||\r\n                                (multiSelect.length > 0 &&\r\n                                    multiSelect[0].indexOf(\"Yes\") !== -1) ||\r\n                                (multiSelect.length > 1 &&\r\n                                    multiSelect[1].indexOf(\"Yes\") !== -1))) {\r\n                            // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n                            acTemplate2 = templates_1.templates.question_radio_image;\r\n                            options2 = self.util.generateRadioImageOptions(invertedMultiSelect, multiSelect, question.id);\r\n                            window.ccsdkDebug ? console.log({ options2: options2 }) : \"\";\r\n                            questionTemplate = acTemplate2;\r\n                            questionTemplate = questionTemplate.replace(/{{options}}/g, options2);\r\n                        }\r\n                        else if (checkOptionContainsImage) {\r\n                            // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n                            acTemplate2 = templates_1.templates.question_radio_image;\r\n                            options2 = self.util.generateRadioIgnoreImageOptions(invertedMultiSelect, multiSelect, question.id);\r\n                            // (window as any).ccsdkDebug?console.log(options2):'';\r\n                            questionTemplate = acTemplate2;\r\n                            questionTemplate = questionTemplate.replace(/{{options}}/g, options2);\r\n                        }\r\n                        else {\r\n                            acTemplate1 = templates_1.templates.question_radio;\r\n                            questionTemplate = acTemplate1;\r\n                            options1 = self.util.generateRadioOptions(invertedMultiSelect, multiSelect, question.id);\r\n                            questionTemplate = questionTemplate.replace(\"{{options}}\", options1);\r\n                        }\r\n                    }\r\n                    else if (question.displayStyle == \"icon\" &&\r\n                        multiSelect.length < 6) {\r\n                        acTemplate1 = templates_1.templates.question_radio;\r\n                        questionTemplate = acTemplate1;\r\n                        var invertedMultiSelect_1;\r\n                        if (question.presentationMode == \"Invert\") {\r\n                            invertedMultiSelect_1 = question.multiSelect\r\n                                ? question.multiSelect.slice().reverse()\r\n                                : [];\r\n                        }\r\n                        else {\r\n                            invertedMultiSelect_1 = question.multiSelect;\r\n                        }\r\n                        options1 = self.util.generateRadioOptions(invertedMultiSelect_1, multiSelect, question.id);\r\n                        questionTemplate = questionTemplate.replace(\"{{options}}\", options1);\r\n                    }\r\n                    else {\r\n                        window.ccsdkDebug ? console.log(\"select type 3\") : \"\";\r\n                        acTemplate1 = templates_1.templates.question_select;\r\n                        options1 = self.util.generateSelectOptions(invertedMultiSelect, multiSelect);\r\n                        if (self.ccsdk.config.language.indexOf(\"Default\") === -1) {\r\n                            if (typeof question.translated !== \"undefined\" &&\r\n                                question.translated != null &&\r\n                                typeof question.translated[self.ccsdk.config.language] !==\r\n                                    \"undefined\" &&\r\n                                question.translated[self.ccsdk.config.language].multiSelect !==\r\n                                    \"undefined\" &&\r\n                                question.translated[self.ccsdk.config.language].multiSelect\r\n                                    .length > 0) {\r\n                                multiSelect = Array.prototype.slice.call(question.translated[self.ccsdk.config.language].multiSelect);\r\n                                if (question.presentationMode == \"Invert\") {\r\n                                    multiSelect.reverse();\r\n                                }\r\n                                options1 = self.util.generateSelectOptions(invertedMultiSelect, multiSelect);\r\n                            }\r\n                        }\r\n                        questionTemplate = acTemplate1;\r\n                        questionTemplate = questionTemplate.replace(\"{{options}}\", options1);\r\n                    }\r\n                    // console.log( questionTemplate );\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    // (window as any).ccsdkDebug?console.log(questionTemplate):'';\r\n                    break;\r\n                case \"Smile-5\":\r\n                    //get text question template and compile it.\r\n                    if (question.presentationMode == \"Invert\") {\r\n                        questionTemplate = templates_1.templates.question_smile_5_inverted;\r\n                    }\r\n                    else {\r\n                        questionTemplate = templates_1.templates.question_smile_5;\r\n                    }\r\n                    // let startRangeLabel = \"Very unlikely\";\r\n                    // let endRangeLabel = \"Very likely\";\r\n                    var startRangeLabel = \"\";\r\n                    var endRangeLabel = \"\";\r\n                    var displayLegend2 = LanguageTextFilter_1.LanguageTextFilter.translateDisplayLegend(this, question);\r\n                    if (displayLegend2) {\r\n                        if (displayLegend2.length > 0) {\r\n                            startRangeLabel = displayLegend2[0] ? displayLegend2[0] : null;\r\n                            endRangeLabel = displayLegend2[1] ? displayLegend2[1] : null;\r\n                        }\r\n                    }\r\n                    startRangeLabel = startRangeLabel == null ? \"\" : startRangeLabel;\r\n                    endRangeLabel = endRangeLabel == null ? \"\" : endRangeLabel;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    questionTemplate = questionTemplate.replace(\"{{leftLabel}}\", startRangeLabel);\r\n                    questionTemplate = questionTemplate.replace(\"{{rightLabel}}\", endRangeLabel);\r\n                    break;\r\n                case \"Star-5\":\r\n                    //get text question template and compile it.\r\n                    var startRangeLabel1 = \"\";\r\n                    var endRangeLabel1 = \"\";\r\n                    var displayLegend3 = LanguageTextFilter_1.LanguageTextFilter.translateDisplayLegend(this, question);\r\n                    if (displayLegend3) {\r\n                        if (displayLegend3.length > 0) {\r\n                            startRangeLabel1 = displayLegend3[0] ? displayLegend3[0] : null;\r\n                            endRangeLabel1 = displayLegend3[1] ? displayLegend3[1] : null;\r\n                        }\r\n                    }\r\n                    startRangeLabel1 = startRangeLabel1 == null ? \"\" : startRangeLabel1;\r\n                    endRangeLabel1 = endRangeLabel1 == null ? \"\" : endRangeLabel1;\r\n                    questionTemplate = templates_1.templates.question_star_5;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    questionTemplate = questionTemplate.replace(\"{{leftLabel}}\", startRangeLabel1);\r\n                    questionTemplate = questionTemplate.replace(\"{{rightLabel}}\", endRangeLabel1);\r\n                    break;\r\n            }\r\n        }\r\n        return questionTemplate;\r\n    };\r\n    SurveyHandler.prototype.questionCompare = function (a, b) {\r\n        return a.sequence - b.sequence;\r\n    };\r\n    SurveyHandler.prototype.getAnswerTypeFromDisplayType = function (displayType) {\r\n        // console.log('question type',displayType);\r\n        var type;\r\n        switch (displayType) {\r\n            case \"Slider\":\r\n                type = \"number\";\r\n                break;\r\n            case \"Scale\":\r\n                type = \"number\";\r\n                break;\r\n            case \"Text\":\r\n                type = \"text\";\r\n                break;\r\n            case \"Number\":\r\n                type = \"number\";\r\n                break;\r\n            case \"MultilineText\":\r\n                type = \"text\";\r\n                break;\r\n            case \"MultiSelect\":\r\n                type = \"text\";\r\n                break;\r\n            case \"Select\":\r\n                type = \"text\";\r\n                break;\r\n            case \"Dropdown\":\r\n                type = \"text\";\r\n                break;\r\n            case \"Smile-5\":\r\n                type = \"number\";\r\n                break;\r\n            case \"Star-5\":\r\n                type = \"number\";\r\n                break;\r\n            case \"Date\":\r\n                type = \"number\";\r\n                break;\r\n            default:\r\n                type = \"text\";\r\n                break;\r\n        }\r\n        return type;\r\n    };\r\n    /**\r\n     *\r\n     * filterQuestions - filters questions so that we don't display the one which satisifes any of the following condition\r\n     *  isRetired = true\r\n     *  statffFill = true\r\n     *  apiFill = true\r\n     *  preFill = true\r\n     *\r\n     * @param {any} question\r\n     * @returns\r\n     * @memberof Survey\r\n     */\r\n    SurveyHandler.prototype.filterQuestions = function () {\r\n        var self = this;\r\n        for (var _i = 0, _a = this.questions; _i < _a.length; _i++) {\r\n            var question = _a[_i];\r\n            if (!question.isRetired) {\r\n                //filter out prefill question only if it is filled?.\r\n                // if(!this.isQuestionFilled(question)){\r\n                if (this.isPrefillTags(question)) {\r\n                    self.ccsdk.debug\r\n                        ? console.log(\"prefillTags\", this.prefillResponses)\r\n                        : \"\";\r\n                    continue;\r\n                }\r\n                if (this.isPrefillNote(question)) {\r\n                    self.ccsdk.debug ? console.log(this.prefillResponses) : \"\";\r\n                    continue;\r\n                }\r\n                if (this.isPrefillDirect(question)) {\r\n                    self.ccsdk.debug ? console.log(this.prefillResponses) : \"\";\r\n                    continue;\r\n                }\r\n                if (!this.isPrefillQuestion(question)) {\r\n                    if (question.conditionalFilter === null ||\r\n                        (question.conditionalFilter != null &&\r\n                            (question.conditionalFilter.filterquestions == null ||\r\n                                question.conditionalFilter.filterquestions.length == 0))) {\r\n                        //check supported display types\r\n                        var supportedDisplayTypes = \"Slider, Scale, Text, Number, MultilineText, MultiSelect, Smile-5, Star-5, Date\";\r\n                        if (supportedDisplayTypes.indexOf(question.displayType) > -1) {\r\n                            this.questionsToDisplay.push(question);\r\n                        }\r\n                    }\r\n                    else {\r\n                        //if conditions full filled, fill it in questionsToDisplay\r\n                        if (ConditionalFlowFilter_1.ConditionalFlowFilter.filterQuestion(this, question)) {\r\n                            //auto does that\r\n                        }\r\n                        else {\r\n                            this.conditionalQuestions.push(question);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    this.fillPrefillWithTags(question);\r\n                    this.fillPrefillWithNote(question);\r\n                    ConditionalFlowFilter_1.ConditionalFlowFilter.filterQuestion(this, question);\r\n                }\r\n                // }\r\n            }\r\n        }\r\n        //re condition questions.\r\n        for (var _b = 0, _c = this.questions; _b < _c.length; _b++) {\r\n            var question = _c[_b];\r\n            // console.log(this.questionsToDisplay);\r\n            ConditionalFlowFilter_1.ConditionalFlowFilter.filterQuestion(this, question);\r\n        }\r\n        // console.log(this.conditionalQuestions);\r\n    };\r\n    SurveyHandler.prototype.isPrefillTags = function (question) {\r\n        if (typeof question.questionTags !== \"undefined\" &&\r\n            question.questionTags &&\r\n            question.questionTags.length > 0) {\r\n            for (var _i = 0, _a = question.questionTags; _i < _a.length; _i++) {\r\n                var tag = _a[_i];\r\n                switch (tag.toLowerCase()) {\r\n                    case \"screensize\":\r\n                        //add size to prefill array\r\n                        this.fillPrefillQuestion(question.id, \"Width:\" +\r\n                            window.innerWidth +\r\n                            \"px / Height:\" +\r\n                            window.innerHeight +\r\n                            \"px\", \"text\");\r\n                        return true;\r\n                    default:\r\n                        if (typeof this.prefillWithTags[tag.toLowerCase()] != \"undefined\") {\r\n                            var type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n                            this.fillPrefillQuestion(question.id, this.prefillWithTags[tag.toLowerCase()], type);\r\n                            return true;\r\n                        }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    SurveyHandler.prototype.isPrefillNote = function (question) {\r\n        if (typeof question.note !== \"undefined\" &&\r\n            question.note != null &&\r\n            question.note.length > 0 &&\r\n            this.prefillWithNote[question.note.toLowerCase()]) {\r\n            var type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n            this.fillPrefillQuestion(question.id, this.prefillWithNote[question.note.toLowerCase()], type);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    SurveyHandler.prototype.isPrefillDirect = function (question) {\r\n        if (typeof question !== \"undefined\" && this.prefillDirect[question.id]) {\r\n            var type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n            this.fillPrefillQuestion(question.id, this.prefillDirect[question.id], type);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    SurveyHandler.prototype.fillPrefillWithTags = function (question) {\r\n        window.ccsdkDebug\r\n            ? console.log(\"fillprefillwithtags\", this.prefillWithTags)\r\n            : \"\";\r\n        if (typeof question.questionTags !== \"undefined\" &&\r\n            question.questionTags.length > 0) {\r\n            for (var _i = 0, _a = question.questionTags; _i < _a.length; _i++) {\r\n                var tag = _a[_i];\r\n                window.ccsdkDebug\r\n                    ? console.log(\"fillprefillwithtags\", tag)\r\n                    : \"\";\r\n                if (typeof this.prefillWithTags[tag.toLowerCase()] !== \"undefined\") {\r\n                    window.ccsdkDebug\r\n                        ? console.log(\"prefil \", tag.toLowerCase(), this.prefillWithTags[tag.toLowerCase()], this.prefillWithTags)\r\n                        : \"\";\r\n                    var type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n                    this.fillPrefillQuestion(question.id, this.prefillWithTags[tag.toLowerCase()], type);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    SurveyHandler.prototype.fillPrefillWithNote = function (question) {\r\n        if (typeof question.note !== \"undefined\" &&\r\n            question.note != null &&\r\n            question.note.length > 0) {\r\n            if (typeof this.prefillWithNote[question.note.toLowerCase()] !== \"undefined\") {\r\n                var type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n                this.fillPrefillQuestion(question.id, this.prefillWithNote[question.note.toLowerCase()], type);\r\n            }\r\n        }\r\n    };\r\n    SurveyHandler.prototype.getConditionalSurveyQuestions = function () {\r\n        return this.conditionalQuestions;\r\n    };\r\n    SurveyHandler.prototype.isPrefillQuestion = function (question) {\r\n        if (question.apiFill == true) {\r\n            return true;\r\n        }\r\n        if (question.staffFill == true) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    SurveyHandler.prototype.isQuestionFilled = function (question) {\r\n        for (var _i = 0, _a = this.prefillResponses; _i < _a.length; _i++) {\r\n            var response = _a[_i];\r\n            if (response.questionId == question.questionId) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    SurveyHandler.prototype.removePrevListener = function (id) {\r\n        for (var _i = 0, _a = this.domListeners; _i < _a.length; _i++) {\r\n            var listener = _a[_i];\r\n            if (listener.id == id) {\r\n                var index = this.domListeners.indexOf(listener);\r\n                window.ccsdkDebug ? console.log(\"removing listener\", id) : \"\";\r\n                window.ccsdkDebug\r\n                    ? console.log(\"removing listener index\", index)\r\n                    : \"\";\r\n                this.util.removeListener(document.querySelectorAll(\"body\")[0], listener.type, listener.internalHandler);\r\n                if (index > -1) {\r\n                    this.domListeners.splice(index, 1);\r\n                }\r\n                window.ccsdkDebug ? console.log(this.domListeners) : \"\";\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    SurveyHandler.prototype.destroySurvey = function () {\r\n        var self = this;\r\n        document.addEventListener(\"ccclose\", this.destroySurveyCb);\r\n    };\r\n    SurveyHandler.prototype.destroy = function () {\r\n        var surveyContainer = this.ccsdk.dom.getSurveyContainer(this.surveyToken);\r\n        var welcomeContainer = this.ccsdk.dom.getWelcomeContainer(this.surveyToken);\r\n        if (typeof surveyContainer != \"undefined\") {\r\n            this.util.remove(surveyContainer);\r\n        }\r\n        if (typeof welcomeContainer != \"undefined\") {\r\n            this.util.remove(welcomeContainer);\r\n        }\r\n        document.removeEventListener(\"ccclose\", this.destroySurveyCb);\r\n        document.removeEventListener(\"ccdone\", this.displayThankYouCb);\r\n        document.removeEventListener(\"q-answered\", this.acceptAnswersCb);\r\n        window.globalSurveyRunning = false;\r\n        // let bodyElement = <HTMLElement>document.\r\n        //   getElementsByTagName( \"body\" )[ 0 ];\r\n        // this.util.removeClass( bodyElement, \"blurr\" );\r\n    };\r\n    return SurveyHandler;\r\n}());\r\nexports.SurveyHandler = SurveyHandler;\r\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(17);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = __webpack_require__(19)(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../node_modules/rtl-css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./main.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../node_modules/rtl-css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./main.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(18)();\n// imports\n\n\n// module\nexports.push([module.i, typeof document !== 'undefined' && document.getElementsByTagName('html')[0].getAttribute('dir') === 'rtl' ? \".cc-sdk ul{padding-right:0;list-style-type:none;margin:0}.cc-sdk a,.cc-sdk a:focus,.cc-sdk a:hover{text-decoration:none;color:inherit}.cc-sdk *,.cc-sdk :after,.cc-sdk :before{box-sizing:border-box}.cc-sdk p{color:inherit;margin:0}.cc-sdk map area{outline:0;cursor:pointer}.cc-sdk map area.selected{outline:0;outline-color:#0a2135;outline-width:0;outline-style:solid}.cc-sdk map area:hover{outline:1}.cc-sdk.cc-popup-container{background:#fff;box-shadow:0 0 4px 5px rgba(0,0,0,.05);font-family:open sans,sans-serif;position:fixed;text-align:center;max-width:500px;max-height:500px;z-index:1111}@media (min-width:768px){.cc-sdk.cc-popup-container{padding:10px}}.cc-sdk.cc-popup-container.bottom{margin-bottom:9px}.cc-sdk.cc-popup-container.top{margin-top:9px}.cc-sdk #cc-thankyou-container .cc-question-container__text p{word-break:break-word}.cc-sdk #cc-thankyou-container .cc-question-container__text,.cc-sdk #cc-thankyou-container .cc-question-container__text p{width:400px;max-width:none;font-size:17px;color:#424242}.cc-sdk .cc-message-box{position:relative;z-index:11}.cc-sdk .cc-message-box__text{color:#424242;font-size:14px;font-weight:600;margin:0;padding:29px 14px 20px;vertical-align:middle}.cc-sdk .cc-message-box__btn{background:#fdaf19;border-radius:100px;display:inline-block;font-size:15px;font-weight:700;height:32px;padding:6px 0;width:124px;text-align:center}.cc-sdk.cc-popup-container .cc-popup-container__close{cursor:pointer;margin:4px;position:absolute;left:0;top:0;z-index:111}.cc-sdk .cc-popup-container-2{height:144px;position:fixed;width:100%;z-index:1111}.cc-sdk .cc-popup-container-2.bottom{bottom:0}.cc-sdk .cc-popup-container-2__icons{cursor:pointer;padding:8px;position:absolute;top:0;z-index:111}.cc-sdk .top.cc-popup-container-2 .cc-popup-container-2__icons{padding-top:15px}.cc-sdk .cc-popup-container-2__icons.cc-right-icon{left:0}.cc-sdk .cc-popup-container-2__icons.cc-left-icon{right:0}.cc-sdk .cc-popup-container__back{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);display:inline-block;width:21px;height:21px}.cc-sdk .cc-question-container{padding:20px 20px 25px;position:absolute;text-align:center;width:100%;z-index:11;top:0;right:0}.cc-sdk .cc-question-container__text{color:#424242;display:inline-block;font-size:15px;font-weight:600;max-width:230px;padding:8px 0;text-align:center;vertical-align:middle;width:20%;position:relative}.cc-sdk .cc-question-container__text p{word-break:break-word}.cc-sdk .cc-question-container[data-type=csat] .cc-question-container__text{width:11em}.cc-sdk .cc-question-container[data-type=csat] .cc-question-container__list{width:64vw}.cc-sdk .cc-question-container__required,.cc-sdk .cc-question-container__validation{position:absolute;top:-14px;font-size:11px;right:0;width:100%;left:0;font-weight:400;color:#c1272d;display:none}.cc-sdk .cc-question-container__required-label{display:inline-block;position:relative;top:-2px;right:-2px}.cc-sdk .cc-question-container__content{display:inline-block;max-width:78%;vertical-align:middle;width:auto}.cc-sdk .cc-question-container__list li{display:inline-block;padding-right:29px;vertical-align:middle}.cc-sdk .cc-question-container__list li span{display:table-cell;font-size:15px;padding-right:15px;text-align:right;vertical-align:middle;width:125px}.cc-sdk .cc-question-container__list li input{vertical-align:middle}.cc-sdk .cc-question-container:before{content:\\\"\\\";display:inline-block;height:100%;margin-left:-4px;vertical-align:middle}.cc-sdk .cc-question-container{height:100%;vertical-align:middle}.cc-sdk .cc-questions-container{height:100%}.cc-sdk p.cc-thankyou-powered{font-size:13px!important;color:#404040!important;font-style:italic;margin-top:4px}.cc-sdk p.cc-thankyou-powered.no-branding{display:none}.cc-sdk .cc-thankyou-powered .cc-thankyou-logo{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/cc-thankyou-logo.svg\\\");background-size:cover;margin-left:8px;display:inline-block;width:16px;height:16px}.cc-sdk .multiline-box{background:#fff;border-radius:2px;border:1px solid #6d6d6d;font-family:Open Sans;font-size:15px;height:70px;margin:0 50px 0 0;min-width:600px;padding:2px 5px;resize:none}.cc-sdk .multiline-box:focus{outline:0}.cc-sdk .detail-box .cc-question-container__text p{font-size:13px;font-weight:700}.cc-sdk .detail-box .cc-question-container__text span{display:inline-block;font-size:15px;font-weight:400}.cc-sdk .detail-box .cc-question-container__text{height:56px}.cc-sdk .detail-box[data-type=singleline] .cc-question-container__text{margin-left:20px}.cc-sdk .detail-box .cc-question-container__content .cc-sdk-form-control,.cc-sdk .single-line .cc-question-container__content .cc-sdk-form-control{background:transparent;border:none;border-bottom:1px solid #6d6d6d;font-family:open sans;font-size:15px;line-height:26px;outline:0;width:300px;margin-right:70px}.cc-sdk .d-star-box.detail-box .cc-question-container__text{height:92px}.cc-sdk .hl.dropdown{background-image:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/arrow-down.black.svg\\\");background-position:3%;background-repeat:no-repeat;border-bottom:1px solid #6d6d6d;display:inline-block;padding:5px;position:relative;text-align:right;width:300px}.cc-sdk .drop-cc-question-container .cc-question-container__text{margin-left:20px}.cc-sdk .cc-sdk-form-control:focus{border-color:#fcaf18}.cc-sdk .detail-box .cc-question-container__content{padding-right:0}.cc-sdk .cc-big-list-container .cc-question-container__list{display:table;width:100%}.cc-sdk .cc-big-list-container .cc-question-container__list li{display:table-cell;vertical-align:middle}.cc-sdk .cc-thankyou-container{width:100%!important}.cc-sdk .submit-icon{direction:rtl;position:absolute;left:0;top:0;bottom:0;margin:auto 0;z-index:11;margin-left:75px;font-size:16px;cursor:pointer;width:47px;height:47px}@media (min-width:1000px){.cc-sdk .cc-big-list-container .cc-question-container__list li span label{overflow:hidden;max-height:100px;display:block}}@media (min-width:769px) and (max-width:875px){.cc-sdk .cc-question-container__list li{padding-right:0!important}}@media (min-width:769px) and (max-width:1024px){.cc-sdk .cc-popup-container-2{height:200px}.cc-sdk .cc-big-list-container .cc-question-container__list,.cc-sdk .cc-question-container__list{text-align:right}.cc-sdk .cc-big-list-container .cc-question-container__list li,.cc-sdk .cc-question-container__list li{display:inline-block;margin-bottom:15px;vertical-align:middle;width:49%}.cc-sdk .cc-question-container__content{display:inline-block;width:45%}.cc-sdk .multiline-box{min-width:100%;margin:0}.cc-sdk .option-smile-box img,.cc-sdk .option-star-box img{margin-left:11px!important}.cc-sdk .cc-thankyou-container .cc-question-container__text,.cc-sdk .cc-thankyou-container .cc-question-container__text p{width:100%!important;text-align:center;margin:0!important;padding:0;line-height:normal;height:auto}.cc-sdk .cc-thankyou-container .cc-question-container__text{max-width:98%}}@media (min-width:1000px){.cc-sdk .cc-question-container__text p{max-height:100px;overflow:hidden;max-width:140ch}.cc-sdk .cc-question-container__text p.ellipsis:after{content:\\\"...\\\";text-align:left;bottom:9px;left:-3px;width:12px;display:block;position:absolute;height:1.2em}}@media (min-width:769px) and (max-width:992px){.cc-sdk .cc-question-container{width:100%;margin:auto}.cc-sdk .cc-question-container__text{width:24%;padding-left:20px}.cc-sdk .cc-question-container__text p{max-height:110px;overflow:hidden}.cc-sdk .cc-question-container__content.rating-color{margin-right:0}.cc-sdk .submit-icon{margin-left:40px!important}.cc-sdk .cc-question-container__content.rating-color{margin-right:0!important}.cc-sdk .cc-question-container__content{width:50%!important}}@media (max-width:768px){.cc-sdk .cc-survey-container,.cc-sdk .cc-survey-content{height:100%}.cc-sdk .cc-popup-container-2{bottom:auto;height:100%;top:0}.cc-sdk .cc-popup-container-2__icons.cc-right-icon{right:auto;left:0;padding:0}.cc-sdk .cc-popup-container-2__icons.cc-left-icon{right:0;left:auto;padding:0}.cc-sdk .cc-big-list-container .cc-question-container__list li,.cc-sdk[dir=rtl] .cc-big-list-container .cc-question-container__list li{display:block}.cc-sdk .radio-toggle--more-option li span{width:84%!important;padding-right:25px!important}.cc-sdk .radio-toggle--more-option li{padding-left:0!important;display:block!important;padding-top:10px}.cc-sdk .detail-box .cc-question-container__content{padding-right:0}.cc-sdk .cc-question-container{bottom:75px;height:auto;right:0;padding:40px 20px;position:absolute;text-align:right;top:auto;width:100%}.cc-sdk .cc-question-container__text{font-size:18px;margin-bottom:20px;max-width:400px;text-align:right;width:100%}.cc-sdk .cc-question-container__content{display:block;max-width:100%;width:100%}.cc-sdk .cc-question-container__list label{display:block}.cc-sdk .cc-question-container__list li span{width:auto;padding-right:15px}.cc-sdk .cc-question-container__list li{padding-right:0;margin-bottom:10px;display:block}.cc-sdk .cc-popup-container-2__icons{margin:20px}.cc-sdk .cc-popup-container-2__icons.left-icon{right:auto;left:0}.cc-sdk .cc-popup-container-2__icons.right-icon{left:auto;right:0}.cc-sdk .cc-popup-container__close{width:27px}.cc-sdk .cc-question-container__content.rating-color{margin-right:0!important}.cc-sdk .cc-question-container[data-type=nps] .cc-question-container__content,.cc-sdk .cc-question-container[data-type=scale] .cc-question-container__content{width:100%!important}.cc-sdk .multiline-box{height:150px;margin:0;min-width:100%;width:100%}.cc-sdk .detail-box .cc-question-container__content .cc-sdk-form-control,.cc-sdk .hl.dropdown{width:100%}.cc-sdk .detail-box .cc-question-container__text p{font-size:18px}.cc-sdk .mobile-detail-box .cc-question-container__text{height:auto}.cc-sdk .cc-question-container__text p{max-height:auto}.cc-sdk .welcome-box .cc-question-container__text p{color:#fff}.cc-sdk .cc-questions-container{height:100%;position:relative}.cc-sdk .cc-message-box__btn{margin-right:20px}}@media (max-width:768px){.cc-sdk .detail-box .cc-question-container__content .cc-sdk-form-control,.cc-sdk .single-line .cc-question-container__content .cc-sdk-form-control{margin-right:0}.cc-sdk .submit-icon{position:absolute;right:20px;top:auto;bottom:30px;padding-left:0}.cc-sdk.cc-popup-container{position:fixed;bottom:0;right:0;left:0;margin:0!important;width:100%;height:13em;max-width:100%;max-height:100%;text-align:right;background:transparent}.cc-sdk.cc-popup-container .cc-message-box{position:absolute;bottom:20%}.cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text{font-size:20px}.cc-sdk.cc-popup-container .cc-message-box .submit-icon{position:absolute;bottom:-100%;top:auto;right:0;margin:0 14px}.cc-sdk.cc-popup-container .cc-popup-container__close{margin:20px;left:0;top:0}.cc-sdk.cc-popup-container__back{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);display:inline-block;width:27px;height:27px;background-size:100%}.cc-sdk .cc-thankyou-container .cc-question-container__text,.cc-sdk .cc-thankyou-container .cc-question-container__text p{width:100%!important;text-align:center;margin:0!important;padding:0;line-height:normal;height:auto}.cc-sdk .cc-thankyou-container .cc-question-container__text{max-width:98%}}.date-s,.date-y{display:inline-block;margin:0 12px!important;width:80px!important}.date-error{color:red;font-style:italic;visibility:hidden;margin-top:12px}.date-error.show-error{visibility:visible}[dir=rtl].cc-sdk ul{padding-left:0}[dir=rtl].cc-sdk.cc-popup-container .cc-popup-container__close{left:auto;right:0;top:0}[dir=rtl].cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text{text-align:left}[dir=rtl].cc-sdk .cc-popup-container__back{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_rtl_.svg)}[dir=rtl].cc-sdk .cc-popup-container-2__icons.cc-right-icon{left:auto;right:0}[dir=rtl].cc-sdk .cc-popup-container-2__icons.cc-left-icon{left:0;right:auto}[dir=rtl].cc-sdk.cc-question-container{margin-right:0;margin-left:0;left:0;right:auto}[dir=rtl].cc-sdk .cc-question-container__required,[dir=rtl].cc-sdk .cc-question-container__validation{left:0;right:auto}[dir=rtl].cc-sdk .cc-question-container__required-label{top:-2px;left:-2px;right:auto}[dir=rtl].cc-sdk .cc-question-container__list li{display:inline-block;padding-left:15px!important;padding-right:15px!important;vertical-align:middle}[dir=rtl].cc-sdk .cc-question-container[data-type=checkbox] .cc-question-container__list li{padding-left:0!important}[dir=rtl].cc-sdk .cc-question-container__list li span{padding-left:15px;padding-right:0;text-align:left}[dir=rtl].cc-sdk .cc-question-container:before{margin-right:-4px;margin-left:0}[dir=rtl].cc-sdk .multiline-box{margin:0 0 0 50px}[dir=rtl].cc-sdk .hl.dropdown{background-position:3%;text-align:left}[dir=rtl].cc-sdk .drop-cc-question-container .cc-question-container__text{margin-right:20px;margin-left:0}[dir=rtl].cc-sdk .detail-box .cc-question-container__content{padding-left:0;padding-right:0}[dir=rtl].cc-sdk .cc-question-container__content{text-align:left}@media (min-width:769px) and (max-width:1024px){[dir=rtl].cc-sdk .cc-big-list-container .cc-question-container__list,[dir=rtl].cc-sdk .cc-question-container__list{text-align:left}[dir=rtl].cc-sdk .multiline-box{margin:0}}@media (min-width:769px) and (max-width:992px){[dir=rtl].cc-sdk .cc-question-container__text{padding-right:20px;padding-left:0}[dir=rtl].cc-sdk .cc-question-container__content.rating-color{margin-right:0;margin-left:0}}@media (max-width:768px){[dir=rtl].cc-sdk .cc-popup-container-2__icons.cc-right-icon{right:0;left:auto}[dir=rtl].cc-sdk .cc-popup-container-2__icons.cc-left-icon{right:auto;left:0}[dir=rtl].cc-sdk .radio-toggle--more-option li span{padding-left:25px!important;padding-right:0!important}[dir=rtl].cc-sdk .radio-toggle--more-option li{padding-left:0!important;padding-right:0!important}[dir=rtl].cc-sdk .detail-box .cc-question-container__content{padding-right:0;padding-left:0}[dir=rtl].cc-sdk .cc-question-container{right:auto;left:0}[dir=rtl].cc-sdk .multiline-box{margin:0}[dir=rtl].cc-sdk .cc-question-container__text{text-align:left;width:100%;margin-left:5px;max-width:100%}[dir=rtl].cc-sdk .cc-question-container__list li span{padding-left:15px;padding-right:0}[dir=rtl].cc-sdk .cc-question-container__list li{padding-right:0;padding-left:0}[dir=rtl].cc-sdk .cc-popup-container-2__icons.left-icon{right:0;left:auto}[dir=rtl].cc-sdk .cc-popup-container-2__icons.right-icon{left:0;right:auto}[dir=rtl].cc-sdk .cc-question-container__content.rating-color{margin-right:0!important;margin-left:0!important}}.cc-sdk .option-number-item{color:#fff;float:right;font-size:13px;height:38px;box-sizing:border-box;padding-top:10px;text-align:center;width:8.5%;margin-right:1px;margin-left:0;cursor:pointer}.cc-sdk .option-number-item.option-zero{background:#853838}.cc-sdk .option-number-item.option-zero.selected,.cc-sdk .option-number-item.option-zero:hover{background:#572526}.cc-sdk .option-number-item.option-one{background:#9e4343}.cc-sdk .option-number-item.option-one.selected,.cc-sdk .option-number-item.option-one:hover{background:#642728}.cc-sdk .option-number-item.option-two{background:#c14d4d}.cc-sdk .option-number-item.option-two.selected,.cc-sdk .option-number-item.option-two:hover{background:#712827}.cc-sdk .option-number-item.option-three{background:#d94d4d}.cc-sdk .option-number-item.option-three.selected,.cc-sdk .option-number-item.option-three:hover{background:#7c2828}.cc-sdk .option-number-item.option-four{background:#ee4d4d}.cc-sdk .option-number-item.option-four.selected,.cc-sdk .option-number-item.option-four:hover{background:#852828}.cc-sdk .option-number-item.option-five{background:#ff4d4d}.cc-sdk .option-number-item.option-five.selected,.cc-sdk .option-number-item.option-five:hover{background:#844828}.cc-sdk .option-number-item.option-six{background:#ff8c4d}.cc-sdk .option-number-item.option-six.selected,.cc-sdk .option-number-item.option-six:hover{background:#844828}.cc-sdk .option-number-item.option-seven{background:#ffc74d}.cc-sdk .option-number-item.option-seven.selected,.cc-sdk .option-number-item.option-seven:hover{background:#856728}.cc-sdk .option-number-item.option-eight{background:#f5eb4d}.cc-sdk .option-number-item.option-eight.selected,.cc-sdk .option-number-item.option-eight:hover{background:#7f7a28}.cc-sdk .option-number-item.option-nine{background:#73ca81}.cc-sdk .option-number-item.option-nine.selected,.cc-sdk .option-number-item.option-nine:hover{background:#3b6942}.cc-sdk .option-number-item.option-ten{background:#4db47c}.cc-sdk .option-number-item.option-ten.selected,.cc-sdk .option-number-item.option-ten:hover{background:#285e40}.cc-sdk .option-number-item.option-7-scale-1,.cc-sdk .option-number-item.option-7-scale-2,.cc-sdk .option-number-item.option-7-scale-3{background:#ed534f}.cc-sdk .option-number-item.option-7-scale-4,.cc-sdk .option-number-item.option-7-scale-5{background:#ffbc00}.cc-sdk .option-number-item.option-7-scale-6,.cc-sdk .option-number-item.option-7-scale-7{background:#4db47c}.cc-sdk .option-number-item.option-5-scale-1,.cc-sdk .option-number-item.option-5-scale-2{background:#ed534f}.cc-sdk .option-number-item.option-5-scale-3{background:#ffbc00}.cc-sdk .option-number-item.option-5-scale-4,.cc-sdk .option-number-item.option-5-scale-5{background:#4db47c}.cc-sdk .cc-question-container[data-type=nps] .option-number-item{width:calc(9.09% - 1px)}.cc-sdk .cc-question-container[data-type=scale].scale-image-container .option-number-item{width:8.4%}.cc-sdk .cc-question-container__content.rating-color{margin-right:74px}.cc-sdk .option-left-rating-text,.cc-sdk .option-mid-rating-text,.cc-sdk .option-midnps-rating-text,.cc-sdk .option-right-rating-text{color:#424242;font-size:13px;right:0;position:absolute}.cc-sdk .option-midnps-rating-text{right:calc(7 * 9.09% - 1px)}.cc-sdk .option-left-rating-text-small-container{max-width:57px;text-align:right;max-height:37px;overflow:hidden}.cc-sdk .option-mid-rating-text-small-container,.cc-sdk .option-right-rating-text-small-container{max-width:57px;text-align:left;max-height:37px;overflow:hidden}.cc-sdk .option-left-rating-text-small-container-smile{width:40%;text-align:right;max-height:37px;overflow:hidden;bottom:auto!important;top:57px}.cc-sdk .option-right-rating-text-small-container-smile{width:40%;text-align:left;max-height:37px;overflow:hidden;bottom:auto!important;top:57px}.cc-sdk .cc-question-container[data-type=smile] .option-left-rating-text,.cc-sdk .cc-question-container[data-type=star] .option-left-rating-text{right:4px;width:40%;text-align:right}.cc-sdk .option-right-rating-text{right:auto;left:0}.cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,.cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{text-align:left;width:40%}.cc-sdk .cc-question-container[data-type=scale] .option-number-item{width:38px;margin:0 .5px;cursor:pointer;display:inline-block;float:none}.cc-sdk .cc-question-container[data-type=scale] .cc-question-container__list{display:inline-block;width:auto;position:relative}.cc-sdk .cc-question-container[data-type=scale].scale-image-container .cc-question-container__list{width:100%}.cc-sdk .rating-color{position:relative}.cc-sdk .option-smile-box,.cc-sdk .option-star-box{height:60px;margin-left:29px;width:60px;cursor:pointer;box-sizing:border-box;border:4px solid transparent;border-radius:50%;display:inline-block;background-size:100%}.cc-sdk:not([dir=rtl]) .option-smile-box:nth-child(5),.cc-sdk:not([dir=rtl]) .option-star-box:nth-child(5),.cc-sdk[dir=rtl] .option-smile-box:first-child,.cc-sdk[dir=rtl] .option-star-box:first-child{margin-left:0}.cc-sdk .option-smile-box.cc-one{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-two{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-three{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-four{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-five{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-one.selected,.cc-sdk .option-smile-box.cc-one:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-two.selected,.cc-sdk .option-smile-box.cc-two:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-three.selected,.cc-sdk .option-smile-box.cc-three:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-four.selected,.cc-sdk .option-smile-box.cc-four:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-five.selected,.cc-sdk .option-smile-box.cc-five:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .cc-csat.cc-question-container__content.rating-color{margin-right:45px}.cc-sdk .option-csat.option-smile-box,.cc-sdk .option-csat.option-smile-box.selected,.cc-sdk .option-csat.option-smile-box:hover{background-size:25px;background-position:18px}.cc-sdk .option-csat{height:30px;margin-left:68px;width:30px;padding-right:50px;height:45px;margin-left:0;width:auto;padding-right:0;font-size:14px;vertical-align:middle;display:inline-block;margin-left:13px}.cc-sdk .option-csat span{display:inline-block;vertical-align:top;font-size:12px;padding-right:25px;position:relative;text-align:right;width:100%}.cc-sdk .option-csat .cc-checkbox label{pointer-events:none}.cc-sdk .option-star-box{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-star-box.selected,.cc-sdk .option-star-box:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star_selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .cc-question-container[data-type=slider] .option-left-rating-text{right:4px;width:40%;text-align:right}.cc-sdk .cc-question-container[data-type=slider] .option-right-rating-text{width:40%;text-align:left}.cc-sdk .cc-question-container[data-type=smile] .cc-question-container__list,.cc-sdk .cc-question-container[data-type=star] .cc-question-container__list{position:relative;width:auto;display:inline-block}.cc-sdk .circle-image{margin:auto;width:253px;overflow:hidden;height:240px;position:relative}.cc-sdk .circle-image-scale-010-neutral{width:242px;overflow:hidden;height:230px;margin:auto}.cc-sdk .cc-nps-selected-rating{font-size:100px;display:inline-block;position:absolute;top:0;right:0;line-height:100px;left:0;margin:auto;bottom:0;width:110px;height:100px;text-align:center;font-weight:100;color:#bbb}.cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,.cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{left:4px}.cc-sdk .option-number-item.option-scale{background:#4db47c}.cc-sdk .option-number-item.option-scale.selected,.cc-sdk .option-number-item.option-scale:hover{background:#712827}.cc-sdk .cc-nps-image{cursor:pointer;position:relative;right:0}.cc-sdk .legend-container{position:relative}@media (min-width:769px) and (max-width:992px){.cc-sdk .option-smile-box,.cc-sdk .option-star-box{width:50px;height:50px;margin-left:10px}.cc-sdk .option-csat.option-smile-box,.cc-sdk .option-csat.option-smile-box.selected,.cc-sdk .option-csat.option-smile-box:hover{display:inline-block;width:168px;background-position:48px}.cc-sdk .option-csat.option-smile-box.selected span,.cc-sdk .option-csat.option-smile-box:hover span,.cc-sdk .option-csat.option-smile-box span{padding-right:40px}}@media screen and (min-width:992px){.cc-sdk span.option-csat.option-smile-box,.cc-sdk span.option-csat.option-smile-box.selected,.cc-sdk span.option-csat.option-smile-box:hover{background-position:44px}.cc-sdk span.option-csat.option-smile-box span{padding-right:40px}}@media (max-width:768px){.cc-sdk .option-smile-box,.cc-sdk .option-star-box{display:inline-block;margin-left:3px}.cc-sdk .option-csat.option-smile-box,.cc-sdk .option-csat.option-smile-box.selected,.cc-sdk .option-csat.option-smile-box:hover{display:block;background-size:40px;background-position:45px}.cc-sdk .option-csat.option-smile-box{height:65px;width:100%}.cc-sdk .option-csat.option-smile-box span{font-size:15px;padding-right:40px}.cc-sdk .option-csat.option-smile-box .cc-checkbox{top:calc(50% - 12.5px);height:57px}.cc-sdk .option-csat.option-smile-box .cc-checkbox.cc-radio label:before,.cc-sdk .option-csat.option-smile-box .cc-checkbox input[type=radio]:checked+label:after{width:25px;height:25px}.cc-sdk .option-number-item{color:#fff;float:right;font-size:15px;height:35px;box-sizing:border-box;margin-left:1px;padding-top:7px;text-align:center;width:38px;cursor:pointer;vertical-align:middle}.cc-sdk .cc-question-container[data-type=scale]{bottom:106px}.cc-sdk .cc-question-container[data-type=scale] .option-left-rating-text,.cc-sdk .cc-question-container[data-type=scale] .option-mid-rating-text,.cc-sdk .cc-question-container[data-type=scale] .option-right-rating-text{width:auto}.cc-sdk .cc-question-container[data-type=scale] .option-right-rating-text{text-align:left}.cc-sdk .option-smile-box img,.cc-sdk .option-star-box img{padding-left:5px;margin-left:0}.cc-sdk .cc-question-container[data-type=nps] .cc-question-container__content{width:100%!important}.cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,.cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{left:10px}.cc-sdk .cc-question-container[data-type=csat] .cc-question-container__list li,.cc-sdk .cc-question-container[data-type=scale] .cc-question-container__list{width:100%}}@media (max-width:381px){.cc-sdk .option-smile-box,.cc-sdk .option-star-box{display:inline-block;margin-left:0;height:50px;width:50px}.cc-sdk .option-smile-box img,.cc-sdk .option-star-box img{padding-left:5px;margin-left:0}}@media screen and (max-width:768px){.cc-sdk .cc-question-container[data-type=scale] span.radial-legend-right,.cc-sdk .radial-legend-right{text-align:right;width:35%;left:0}.cc-sdk .radial-legend-mid{width:35%;text-align:center;right:0;left:0;display:none}.cc-sdk .radial-legend-left{width:35%;text-align:left;right:0}}[dir=rtl].cc-sdk .cc-question-container[data-type=csat] .cc-question-container__content.rating-color{margin-left:45px;margin-right:0}[dir=rtl].cc-sdk .cc-question-container[data-type=csat] .cc-checkbox input[type=radio]{margin-left:0;opacity:0;outline:0}[dir=rtl].cc-sdk .option-number-item{margin-left:1px;margin-right:0;float:left}[dir=rtl].cc-sdk .cc-question-container__content.rating-color{margin-left:74px;margin-right:0}[dir=rtl].cc-sdk .option-right-rating-text{right:calc(100% - 418px);left:auto!important}[dir=rtl].cc-sdk .option-left-rating-text{left:0;right:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=nps] .option-right-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=scale] .option-right-rating-text{right:0;left:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=scale] .option-left-rating-text{left:2px}[dir=rtl].cc-sdk .cc-question-container[data-type=slider] .option-right-rating-text{right:0;width:40%;text-align:right}[dir=rtl].cc-sdk .cc-question-container[data-type=slider] .option-left-rating-text{left:0;text-align:left}[dir=rtl].cc-sdk .rating-color{position:relative}[dir=rtl].cc-sdk .option-smile-box img{margin-left:29px;margin-right:0}[dir=rtl].cc-sdk .option-star-box img{margin-right:19px;margin-left:0}[dir=rtl].cc-sdk .option-csat.option-smile-box span{padding-left:25px;text-align:left;padding-right:0}[dir=rtl].cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{right:7px;left:auto!important;text-align:right}[dir=rtl].cc-sdk .cc-question-container[data-type=smile] .option-left-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=star] .option-left-rating-text{left:7px;right:auto!important;text-align:left}[dir=rtl].cc-sdk .option-csat{width:auto;box-sizing:border-box;padding-right:0;margin-left:13px}[dir=rtl].cc-sdk .option-csat.option-smile-box,[dir=rtl].cc-sdk .option-csat.option-smile-box.selected,[dir=rtl].cc-sdk .option-csat.option-smile-box:hover{background-position:calc(100% - (100% - 44px)) 50%;text-align:left}@media (min-width:769px) and (max-width:992px){[dir=rtl].cc-sdk .option-smile-box img,[dir=rtl].cc-sdk .option-star-box img{margin-right:0;margin-left:10px}[dir=rtl].cc-sdk .cc-question-container__content.rating-color{margin-left:10px;margin-right:86px!important}[dir=rtl].cc-sdk .cc-question-container[data-type=nps] .option-right-rating-text{right:17px;left:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{right:7px;text-align:right;left:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=smile] .option-left-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=star] .option-left-rating-text{left:20px;right:auto!important;text-align:left}[dir=rtl].cc-sdk .option-csat.option-smile-box,[dir=rtl].cc-sdk .option-csat.option-smile-box.selected,[dir=rtl].cc-sdk .option-csat.option-smile-box:hover{width:auto}}@media (max-width:768px){[dir=rtl].cc-sdk .option-smile-box img,[dir=rtl].cc-sdk .option-star-box img{padding-left:0;padding-right:5px;margin-left:0;margin-right:0}[dir=rtl].cc-sdk .cc-question-container[data-type=csat] .cc-checkbox input[type=radio]{margin-left:7px;opacity:0;outline:0}[dir=rtl].cc-sdk .option-csat.option-smile-box,[dir=rtl].cc-sdk .option-csat.option-smile-box.selected,[dir=rtl].cc-sdk .option-csat.option-smile-box:hover{background-position:calc(100% - (100% - 44px)) 50%}[dir=rtl].cc-sdk .option-csat.option-smile-box span{padding-left:39px;text-align:left;padding-right:0}[dir=rtl].cc-sdk .cc-question-container[data-type=smile] .option-left-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=star] .option-left-rating-text,[dir=rtl].cc-sdk .option-left-rating-text{left:10px;right:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{left:auto!important}[dir=rtl].cc-sdk .option-right-rating-text{right:calc(100% - 322px);left:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=scale] .option-right-rating-text{right:13px;left:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=nps] .radial-legend-right,[dir=rtl].cc-sdk .cc-question-container[data-type=scale] .radial-legend-right{right:auto!important;left:10px!important}[dir=rtl].cc-sdk .cc-question-container[data-type=nps] .radial-legend-left,[dir=rtl].cc-sdk .cc-question-container[data-type=scale] .radial-legend-left{left:auto!important;right:10px!important}}@media (max-width:381px){[dir=rtl].cc-sdk .option-right-rating-text{right:calc(100% - 258px);left:auto!important}}.cc-sdk .cc-select-wrapper{position:relative;display:inline-block;user-select:none;z-index:11}.cc-sdk .cc-select-wrapper select{display:none}.cc-sdk .cc-select{position:relative;display:inline-block;margin-right:70px}.cc-sdk .cc-select-trigger{display:block;width:130px;padding:0 22px 0 84px;font-size:15px;font-style:italic;font-weight:300;color:#222;line-height:20px;background:transparent;border-radius:0;cursor:pointer;width:300px;border-bottom:1px solid #6d6d6d;display:inline-block;text-align:right;padding:5px 5px 5px 20px;position:relative;background-position:3%;background-repeat:no-repeat;max-height:50px;overflow:hidden}.cc-sdk .cc-select-trigger:after{position:absolute;display:block;content:\\\"\\\";width:10px;height:10px;top:50%;left:5px;margin-top:-3px;border-bottom:1px solid #222;border-left:1px solid #222;transform:rotate(-45deg) translateY(-50%);transition:all .2s ease-in-out;transform-origin:50% 0}.cc-sdk .cc-select.opened .cc-select-trigger:after{margin-top:3px;transform:rotate(135deg) translateY(-50%)}.cc-sdk .cc-select-options-container{position:absolute;display:block;top:100%;right:0;left:0;min-width:100%;margin:15px 0;border:1px solid #b5b5b5;border-radius:4px;box-sizing:border-box;box-shadow:0 2px 1px rgba(0,0,0,.07);background:#fff;transition:all .2s ease-in-out;opacity:0;visibility:hidden;pointer-events:none;transform:translateY(calc(-100% - 65px));height:auto;max-height:150px;overflow:hidden;overflow-y:scroll}.cc-sdk .cc-select-options{overflow-y:scroll;height:100%;width:110%}.cc-sdk .cc-select.opened .cc-select-options-container{opacity:1;visibility:visible;pointer-events:all;transform:translateY(-100%) translateY(-65px)}@media (min-width:769px){.cc-sdk .cc-popup-container-2.top .cc-select-options-container,.cc-sdk .cc-popup-container-2.top .cc-select.opened .cc-select-options-container{transform:translateY(-19px)}}.cc-sdk .option-hover:before{background:#f9f9f9}.cc-sdk .cc-select-option{position:relative;display:block;padding:0 12px;border-bottom:1px solid #e4e4e4;font-size:12px;font-weight:600;color:#222;line-height:34px;cursor:pointer;transition:all .2s ease-in-out;text-align:right;margin:0;width:100%}.cc-sdk .cc-select-option:first-of-type{border-radius:4px 4px 0 0}.cc-sdk .cc-select-option:last-of-type{border-bottom:0;border-radius:0 0 4px 4px}.cc-sdk .cc-select-option.selection,.cc-sdk .cc-select-option:hover{background:#eaeaea}.cc-sdk .cc-select-wrapper.down .cc-select-options-container,.cc-sdk .cc-select-wrapper.down .cc-select.opened .cc-select-options-container{transform:translateY(20px)}.cc-sdk .cc-question-container[data-type=nps] .cc-question-container__content,.cc-sdk .cc-question-container[data-type=scale] .cc-question-container__content{width:40%}@media (max-width:768px){.cc-sdk .cc-select,.cc-sdk .cc-select-wrapper{min-width:100%}.cc-sdk .cc-select{margin-right:0}.cc-sdk .cc-select-trigger{min-width:100%;width:auto}}[dir=rtl].cc-sdk .cc-select-trigger{padding:0 84px 0 22px;background-position:3%;background-repeat:no-repeat;text-align:left}[dir=rtl].cc-sdk .cc-select-trigger:after{top:50%;right:2px;left:auto}[dir=rtl].cc-sdk .cc-select-option{text-align:left}[dir=rtl].cc-sdk .cc-select-option:first-of-type{border-radius:0 4px 4px 0}[dir=rtl].cc-sdk .cc-select-option:last-of-type{border-radius:4px 0 0 4px}.cc-sdk .cc-checkbox{display:table-cell;vertical-align:middle;position:relative;text-align:center}.cc-sdk .cc-checkbox label{cursor:pointer;display:block;height:25px}.cc-sdk .cc-checkbox+span label img{width:40px;display:inline-block;vertical-align:middle}.cc-sdk .cc-checkbox label:after,.cc-sdk .cc-checkbox label:before{content:\\\"\\\";right:0;margin:auto;position:absolute;top:calc(50% - 12.5px)}.cc-sdk .cc-checkbox label:before{background:transparent;border-radius:2px;border:1px solid #424242;cursor:pointer;height:20px;transition:background .3s;width:20px}.cc-sdk .cc-checkbox input[type=checkbox]{opacity:0;outline:0}.cc-sdk .cc-checkbox input[type=checkbox]:checked+label:before{background:#fdaf19;border:none}.cc-sdk .cc-checkbox input[type=checkbox]:checked+label:after{border:3px solid #222;border-left-style:none;border-top-style:none;height:7px;top:calc(50% - 8.5px);right:4px;transform:rotate(45deg);width:12px}.cc-sdk .cc-checkbox.cc-radio label:before{background:transparent;border:1px solid #424242;cursor:pointer;height:25px;transition:background-color .3s;width:25px}.cc-sdk .cc-checkbox input[type=radio]{opacity:0;outline:0}.cc-sdk .cc-checkbox input[type=radio]:checked+label:before{background:transparent;border-color:#fdaf19}.cc-sdk .cc-question-container__list li{display:inline-table;margin-bottom:0}.cc-sdk .cc-question-container__list li .cc-radio,.cc-sdk .cc-question-container__list li .cc-sdk .cc-checkbox{width:30px}.cc-sdk .cc-checkbox input[type=radio]:checked+label:after{-moz-transform:scale(.8);-ms-transform:scale(.8);-o-transform:scale(.8);-webkit-transform:scale(.8);background:#fdaf19;border-radius:30px;height:25px;transform:scale(.8);width:25px}.cc-sdk .cc-radio label:before{border-radius:30px}.cc-sdk .radio-toggle--more-option li span{padding-right:25px!important;width:125px!important}.cc-sdk .radio-toggle .cc-question-container__list li{padding-right:15px}@media (min-width:1000px){.cc-sdk .radio-toggle .cc-question-container__list li span label{overflow:hidden;max-height:100px;display:block}}@media (min-width:769px) and (max-width:992px){.cc-sdk .radio-toggle .cc-question-container__list li{padding-right:10px}.cc-sdk .radio-toggle .cc-question-container__list li span .label,.cc-sdk .radio-toggle .cc-question-container__list li span label{display:block;max-height:50px;overflow:hidden;text-overflow:ellipsis}}@media (max-width:768px){.cc-sdk .radio-toggle .cc-question-container__list li{padding-right:0;display:block;padding-left:50px}}.cc-sdk .progress-bar{width:100%;position:absolute;background:#a47c2b;z-index:1;height:8px;right:0}.cc-sdk .progress-line{background:#fdaf19;height:100%;display:block;width:0;transition:all .4s ease-in}@media screen and (max-width:768px){.cc-sdk .progress-bar{bottom:unset;top:0}}.cc-sdk .cc-scrollbar-wrapper{float:right;height:100%;overflow:hidden;position:relative;width:100%;z-index:1}.cc-sdk .cc-scrollbar-content{box-sizing:border-box;height:100%;overflow:auto;position:relative;width:107%}.cc-sdk .cc-scrollbar-scroll{background:#aaa;border-radius:4px;cursor:pointer;opacity:0;position:relative;top:0;transition:opacity .25s linear;width:9px;z-index:2}.cc-sdk .cc-scrollbar-container:hover .cc-scrollbar-scroll{opacity:1}.cc-sdk .cc-scrollbar-grabbed{-moz-user-select:none;-o-user-select:none;-webkit-user-select:none;user-select:none}.cc-sdk .cc-sdk-range{-webkit-appearance:none;-moz-appearance:none;width:500px;height:60px;background:transparent}.cc-sdk input[type=range]::-webkit-slider-runnable-track{-webkit-appearance:none;background:#ff403d;background:linear-gradient(-135deg,#ff403d,#992a28);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=\\\"#ff403d \\\",endColorstr=\\\"#992a28 \\\",GradientType=1);height:1px}.cc-sdk input[type=range]:focus{outline:none}.cc-sdk input[type=range]::-moz-range-track{-moz-appearance:none;background:#ff403d;background:linear-gradient(-135deg,#7a0806,#992a28);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=\\\"#ff403d \\\",endColorstr=\\\"#992a28 \\\",GradientType=1);height:1px}.cc-sdk input[type=range]::-ms-track{height:1px;width:500px;background-color:#ff403d}.cc-sdk input[type=range]::-webkit-slider-thumb{-webkit-appearance:none;border:1px solid #ff403d;border-radius:50%;height:32px;width:32px;max-width:80px;position:relative;bottom:16px;background-color:#fff;cursor:-webkit-grab}.cc-sdk input[type=range]::-ms-thumb{border:1px solid #ff403d;border-radius:50%;height:32px;width:32px;background:#e08692;box-sizing:border-box;cursor:pointer!important}.cc-sdk input[type=range]::-moz-range-thumb{-moz-appearance:none;border:1px solid #ff403d;border-radius:50%;height:32px;width:32px;max-width:80px;position:relative;bottom:16px;background-color:#fff;cursor:-moz-grab}.cc-sdk input[type=range]::-moz-range-thumb:before{content:\\\"asd\\\"}.cc-sdk input[type=range]::-webkit-slider-thumb:active{cursor:-webkit-grabbing}.cc-sdk input[type=range]::-moz-range-thumb:active{cursor:-moz-grabbing}.cc-sdk .cc-question-container__content.cc-sdk-range-slider{height:50px}.cc-sdk .slider-tip{background:#eb1c23;padding:8px 9px 9px;position:absolute;right:0;left:0;margin:0 auto;color:#fff;background:none;color:#424242;font-size:13px;width:100px;display:inline-block;text-align:center;font-weight:700}.cc-sdk .slider-tip:after{border-width:5px 5px 0;border-top-color:#000}@media (max-width:1024px){.cc-sdk .cc-sdk-range{width:100%}}.cc-sdk input.cc-sdk-range.cc-blue::-moz-range-track,.cc-sdk input.cc-sdk-range.cc-blue::-webkit-slider-runnable-track{background:blue}.cc-sdk .chart{box-sizing:border-box;display:inline-block;height:21px;padding-top:22px;position:relative;vertical-align:top;width:21px}.cc-sdk .cc-sdk-chart span{display:block;font-size:2em;font-weight:400}.cc-sdk .cc-sdk-chart canvas{right:0;position:absolute;top:0}.cc-sdk .cc-sdk-loader{height:21px;right:28px;position:absolute;top:8px;width:21px}@media (min-width:769px){.cc-sdk .cc-sdk-chart canvas{margin-right:10px}}@media (max-width:768px){.cc-sdk .cc-sdk-loader{position:relative;right:auto;top:0;left:auto}}[dir=rtl].cc-sdk .cc-sdk-chart canvas{left:0;right:auto}[dir=rtl].cc-sdk .cc-sdk-loader{left:28px;right:auto}@media (min-width:768px){[dir=rtl].cc-sdk .cc-sdk-chart canvas{margin-left:10px;margin-right:0}}.cc-sdk .show{display:block!important}.cc-sdk .show-inline{display:inline-block!important}.cc-sdk .hide{display:none!important}.cc-sdk.bottom{bottom:0}.cc-sdk.right,.cc-sdk .right{left:0}.cc-sdk .left{right:0}.cc-sdk .top{top:0}.ccsdk-overlay{background:#fff;bottom:0;height:100%;right:0;position:absolute;top:0;width:100%;z-index:0}.ccsdk-overlay.ccsdk-glass{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/ww.png);background-repeat:no-repeat;background-size:cover}.ccsdk-clearfix{clear:both;display:block}.ccsdk-text-normal{font-weight:400}.cc-sdk ::-webkit-input-placeholder{color:#4c4c4c;font-family:Open Sans;font-size:13px;font-style:italic;font-weight:400}.cc-sdk .cc-sdk-form-control::-moz-placeholder{font-style:italic;font-size:13px;font-weight:400;font-family:Open Sans;color:#4c4c4c}.cc-sdk .cc-sdk-form-control:-ms-input-placeholder{font-style:italic;font-size:13px;font-weight:400;font-family:Open Sans;color:#4c4c4c}.cc-sdk .cc-sdk-form-control:-moz-placeholder{font-style:italic;font-size:13px;font-weight:400;font-family:Open Sans;color:#4c4c4c}@media (min-width:769px){.desktop-hide{display:none}}@media (max-width:768px){.mobile-hide{display:none}.cc-sdk-loader{position:relative;right:auto;top:0;left:auto}.ccsdk-overlay.welcome-overlay{background:rgba(210,42,53,.87)}}[dir=rtl].cc-sdk .submit-icon{right:0;left:auto;margin-right:75px}@media (max-width:768px){[dir=rtl].cc-sdk .submit-icon{position:absolute;right:auto;top:auto;bottom:30px;padding-right:0;left:20px;margin:0}}.cc-sdk:before{width:0;height:0;overflow:hidden;position:absolute;z-index:-1}.cc-sdk .yellow .progress-bar{background:#a47c2b}.cc-sdk .yellow .progress-line{background:#fdaf19}.cc-sdk .yellow .submit-icon{background-image:url(\\\"data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%2747px%27%20height%3D%2747px%27%20viewBox%3D%270%200%2047%2047%27%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%3E%3Ctitle%3EGroup%2016%3C%2Ftitle%3E%3Cdesc%3ECreated%20with%20Sketch.%3C%2Fdesc%3E%3Cdefs%3E%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%3Cfilter%20x%3D%27-18.1%25%27%20y%3D%27-12.9%25%27%20width%3D%27136.2%25%27%20height%3D%27136.2%25%27%20filterUnits%3D%27objectBoundingBox%27%20id%3D%27filter-2%27%3E%3CfeOffset%20dx%3D%270%27%20dy%3D%272%27%20in%3D%27SourceAlpha%27%20result%3D%27shadowOffsetOuter1%27%3E%3C%2FfeOffset%3E%3CfeGaussianBlur%20stdDeviation%3D%272%27%20in%3D%27shadowOffsetOuter1%27%20result%3D%27shadowBlurOuter1%27%3E%3C%2FfeGaussianBlur%3E%3CfeColorMatrix%20values%3D%270%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200.116423234%200%27%20type%3D%27matrix%27%20in%3D%27shadowBlurOuter1%27%3E%3C%2FfeColorMatrix%3E%3C%2Ffilter%3E%3C%2Fdefs%3E%3Cg%20id%3D%27Page-1%27%20stroke%3D%27none%27%20stroke-width%3D%271%27%20fill%3D%27none%27%20fill-rule%3D%27evenodd%27%3E%3Cg%20id%3D%271-copy-20%27%20transform%3D%27translate(-1246.000000%2C%20-664.000000)%27%3E%3Cg%20id%3D%27Group-16%27%20transform%3D%27translate(1250.000000%2C%20666.000000)%27%3E%3Cg%20id%3D%27Oval-4%27%3E%3Cuse%20fill%3D%27white%27%20fill-opacity%3D%271%27%20filter%3D%27url(%23filter-2)%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3Cuse%20fill%3D%27%23d04a49%27%20fill-rule%3D%27evenodd%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3C%2Fg%3E%3Cg%20id%3D%27Group-5%27%20transform%3D%27translate(12.000000%2C%2011.000000)%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23FFFFFF%27%3E%3Cg%20id%3D%27fast-forward-arrows%27%20transform%3D%27translate(6.173934%2C%200.000000)%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3Cg%20id%3D%27fast-forward-arrows-copy%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\\\")}.cc-sdk .yellow .cc-checkbox input[type=checkbox]:checked+label:before{background:#fdaf19}.cc-sdk .yellow .cc-checkbox input[type=checkbox]:checked+label:after{border-color:#222}.cc-sdk .yellow .cc-checkbox input[type=radio]:checked+label:before{border-color:#fdaf19}.cc-sdk .yellow .cc-checkbox input[type=radio]:checked+label:after{background:#fdaf19}.cc-sdk .yellow .cc-sdk-form-control:focus{border-color:#fcaf18}.cc-sdk .yellow .cc-message-box__btn{background:#fdaf19}.cc-sdk .red .progress-bar{background:#d22a35}.cc-sdk .red .progress-line{background:#d22a35;filter:brightness(150%)}.cc-sdk .red .cc-checkbox input[type=checkbox]:checked+label:before{background:#d22a35}.cc-sdk .red .cc-checkbox input[type=checkbox]:checked+label:after{border-color:#fff}.cc-sdk .red .cc-checkbox input[type=radio]:checked+label:before{border-color:#d22a35}.cc-sdk .red .cc-checkbox input[type=radio]:checked+label:after{background:#d22a35}.cc-sdk .red .cc-sdk-form-control:focus{border-color:#d22a35}.cc-sdk .red .cc-message-box__btn{background:#d22a35;color:#fff}.cc-question-container,.hide-slide{transform:translateX(-5px)}.cc-question-container,.hide-bottom-up,.hide-slide{transition:transform .3s ease,opacity .3s ease,visibility .3s ease;visibility:hidden;opacity:0}.hide-bottom-up{transform:translateY(30px)}.hide-up-bottom{transform:translateY(100%)}.hide-right-left,.hide-up-bottom{transition:transform .3s ease,opacity .3s ease,visibility .3s ease;visibility:hidden;opacity:0}.hide-right-left{transform:translateX(-100%)}.hide-left-right{transform:translateX(100%);visibility:hidden;opacity:0}.hide-left-right,.show-slide,.show-thankyou-slide{transition:transform .3s ease,opacity .3s ease,visibility .3s ease}.show-slide,.show-thankyou-slide{visibility:visible;opacity:1;transform:translateX(0) translateY(0)}.cc-sdk #timer{position:relative}.cc-sdk svg.cc-sdk-timer{position:absolute;top:0;right:0;width:40px;height:40px;transform:rotateY(-180deg) rotate(90deg)}[dir=rtl].cc-sdk svg.cc-sdk-timer{left:0;right:auto}.cc-sdk svg.cc-sdk-timer circle{stroke-dasharray:50px;stroke-dashoffset:0px;stroke-linecap:round;stroke-width:2px;stroke:red;fill:none;animation:countdown 10s linear 1 forwards}@keyframes countdown{0%{stroke-dashoffset:0px}to{stroke-dashoffset:50px}}.cc-sdk .cc-loaderimg{position:absolute;width:100%;z-index:1000;right:0;left:0;top:0;height:100%;background:hsla(0,0%,100%,.8)}.cc-sdk .cc-loaderimg svg{width:100px}\" : \".cc-sdk ul{padding-left:0;list-style-type:none;margin:0}.cc-sdk a,.cc-sdk a:focus,.cc-sdk a:hover{text-decoration:none;color:inherit}.cc-sdk *,.cc-sdk :after,.cc-sdk :before{box-sizing:border-box}.cc-sdk p{color:inherit;margin:0}.cc-sdk map area{outline:0;cursor:pointer}.cc-sdk map area.selected{outline:0;outline-color:#0a2135;outline-width:0;outline-style:solid}.cc-sdk map area:hover{outline:1}.cc-sdk.cc-popup-container{background:#fff;box-shadow:0 0 4px 5px rgba(0,0,0,.05);font-family:open sans,sans-serif;position:fixed;text-align:center;max-width:500px;max-height:500px;z-index:1111}@media (min-width:768px){.cc-sdk.cc-popup-container{padding:10px}}.cc-sdk.cc-popup-container.bottom{margin-bottom:9px}.cc-sdk.cc-popup-container.top{margin-top:9px}.cc-sdk #cc-thankyou-container .cc-question-container__text p{word-break:break-word}.cc-sdk #cc-thankyou-container .cc-question-container__text,.cc-sdk #cc-thankyou-container .cc-question-container__text p{width:400px;max-width:none;font-size:17px;color:#424242}.cc-sdk .cc-message-box{position:relative;z-index:11}.cc-sdk .cc-message-box__text{color:#424242;font-size:14px;font-weight:600;margin:0;padding:29px 14px 20px;vertical-align:middle}.cc-sdk .cc-message-box__btn{background:#fdaf19;border-radius:100px;display:inline-block;font-size:15px;font-weight:700;height:32px;padding:6px 0;width:124px;text-align:center}.cc-sdk.cc-popup-container .cc-popup-container__close{cursor:pointer;margin:4px;position:absolute;right:0;top:0;z-index:111}.cc-sdk .cc-popup-container-2{height:144px;position:fixed;width:100%;z-index:1111}.cc-sdk .cc-popup-container-2.bottom{bottom:0}.cc-sdk .cc-popup-container-2__icons{cursor:pointer;padding:8px;position:absolute;top:0;z-index:111}.cc-sdk .top.cc-popup-container-2 .cc-popup-container-2__icons{padding-top:15px}.cc-sdk .cc-popup-container-2__icons.cc-right-icon{right:0}.cc-sdk .cc-popup-container-2__icons.cc-left-icon{left:0}.cc-sdk .cc-popup-container__back{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);display:inline-block;width:21px;height:21px}.cc-sdk .cc-question-container{padding:20px 20px 25px;position:absolute;text-align:center;width:100%;z-index:11;top:0;left:0}.cc-sdk .cc-question-container__text{color:#424242;display:inline-block;font-size:15px;font-weight:600;max-width:230px;padding:8px 0;text-align:center;vertical-align:middle;width:20%;position:relative}.cc-sdk .cc-question-container__text p{word-break:break-word}.cc-sdk .cc-question-container[data-type=csat] .cc-question-container__text{width:11em}.cc-sdk .cc-question-container[data-type=csat] .cc-question-container__list{width:64vw}.cc-sdk .cc-question-container__required,.cc-sdk .cc-question-container__validation{position:absolute;top:-14px;font-size:11px;left:0;width:100%;right:0;font-weight:400;color:#c1272d;display:none}.cc-sdk .cc-question-container__required-label{display:inline-block;position:relative;top:-2px;left:-2px}.cc-sdk .cc-question-container__content{display:inline-block;max-width:78%;vertical-align:middle;width:auto}.cc-sdk .cc-question-container__list li{display:inline-block;padding-left:29px;vertical-align:middle}.cc-sdk .cc-question-container__list li span{display:table-cell;font-size:15px;padding-left:15px;text-align:left;vertical-align:middle;width:125px}.cc-sdk .cc-question-container__list li input{vertical-align:middle}.cc-sdk .cc-question-container:before{content:\\\"\\\";display:inline-block;height:100%;margin-right:-4px;vertical-align:middle}.cc-sdk .cc-question-container{height:100%;vertical-align:middle}.cc-sdk .cc-questions-container{height:100%}.cc-sdk p.cc-thankyou-powered{font-size:13px!important;color:#404040!important;font-style:italic;margin-top:4px}.cc-sdk p.cc-thankyou-powered.no-branding{display:none}.cc-sdk .cc-thankyou-powered .cc-thankyou-logo{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/cc-thankyou-logo.svg\\\");background-size:cover;margin-right:8px;display:inline-block;width:16px;height:16px}.cc-sdk .multiline-box{background:#fff;border-radius:2px;border:1px solid #6d6d6d;font-family:Open Sans;font-size:15px;height:70px;margin:0 0 0 50px;min-width:600px;padding:2px 5px;resize:none}.cc-sdk .multiline-box:focus{outline:0}.cc-sdk .detail-box .cc-question-container__text p{font-size:13px;font-weight:700}.cc-sdk .detail-box .cc-question-container__text span{display:inline-block;font-size:15px;font-weight:400}.cc-sdk .detail-box .cc-question-container__text{height:56px}.cc-sdk .detail-box[data-type=singleline] .cc-question-container__text{margin-right:20px}.cc-sdk .detail-box .cc-question-container__content .cc-sdk-form-control,.cc-sdk .single-line .cc-question-container__content .cc-sdk-form-control{background:transparent;border:none;border-bottom:1px solid #6d6d6d;font-family:open sans;font-size:15px;line-height:26px;outline:0;width:300px;margin-left:70px}.cc-sdk .d-star-box.detail-box .cc-question-container__text{height:92px}.cc-sdk .hl.dropdown{background-image:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/arrow-down.black.svg\\\");background-position:97%;background-repeat:no-repeat;border-bottom:1px solid #6d6d6d;display:inline-block;padding:5px;position:relative;text-align:left;width:300px}.cc-sdk .drop-cc-question-container .cc-question-container__text{margin-right:20px}.cc-sdk .cc-sdk-form-control:focus{border-color:#fcaf18}.cc-sdk .detail-box .cc-question-container__content{padding-left:0}.cc-sdk .cc-big-list-container .cc-question-container__list{display:table;width:100%}.cc-sdk .cc-big-list-container .cc-question-container__list li{display:table-cell;vertical-align:middle}.cc-sdk .cc-thankyou-container{width:100%!important}.cc-sdk .submit-icon{direction:ltr;position:absolute;right:0;top:0;bottom:0;margin:auto 0;z-index:11;margin-right:75px;font-size:16px;cursor:pointer;width:47px;height:47px}@media (min-width:1000px){.cc-sdk .cc-big-list-container .cc-question-container__list li span label{overflow:hidden;max-height:100px;display:block}}@media (min-width:769px) and (max-width:875px){.cc-sdk .cc-question-container__list li{padding-left:0!important}}@media (min-width:769px) and (max-width:1024px){.cc-sdk .cc-popup-container-2{height:200px}.cc-sdk .cc-big-list-container .cc-question-container__list,.cc-sdk .cc-question-container__list{text-align:left}.cc-sdk .cc-big-list-container .cc-question-container__list li,.cc-sdk .cc-question-container__list li{display:inline-block;margin-bottom:15px;vertical-align:middle;width:49%}.cc-sdk .cc-question-container__content{display:inline-block;width:45%}.cc-sdk .multiline-box{min-width:100%;margin:0}.cc-sdk .option-smile-box img,.cc-sdk .option-star-box img{margin-right:11px!important}.cc-sdk .cc-thankyou-container .cc-question-container__text,.cc-sdk .cc-thankyou-container .cc-question-container__text p{width:100%!important;text-align:center;margin:0!important;padding:0;line-height:normal;height:auto}.cc-sdk .cc-thankyou-container .cc-question-container__text{max-width:98%}}@media (min-width:1000px){.cc-sdk .cc-question-container__text p{max-height:100px;overflow:hidden;max-width:140ch}.cc-sdk .cc-question-container__text p.ellipsis:after{content:\\\"...\\\";text-align:right;bottom:9px;right:-3px;width:12px;display:block;position:absolute;height:1.2em}}@media (min-width:769px) and (max-width:992px){.cc-sdk .cc-question-container{width:100%;margin:auto}.cc-sdk .cc-question-container__text{width:24%;padding-right:20px}.cc-sdk .cc-question-container__text p{max-height:110px;overflow:hidden}.cc-sdk .cc-question-container__content.rating-color{margin-left:0}.cc-sdk .submit-icon{margin-right:40px!important}.cc-sdk .cc-question-container__content.rating-color{margin-left:0!important}.cc-sdk .cc-question-container__content{width:50%!important}}@media (max-width:768px){.cc-sdk .cc-survey-container,.cc-sdk .cc-survey-content{height:100%}.cc-sdk .cc-popup-container-2{bottom:auto;height:100%;top:0}.cc-sdk .cc-popup-container-2__icons.cc-right-icon{left:auto;right:0;padding:0}.cc-sdk .cc-popup-container-2__icons.cc-left-icon{left:0;right:auto;padding:0}.cc-sdk .cc-big-list-container .cc-question-container__list li,.cc-sdk[dir=rtl] .cc-big-list-container .cc-question-container__list li{display:block}.cc-sdk .radio-toggle--more-option li span{width:84%!important;padding-left:25px!important}.cc-sdk .radio-toggle--more-option li{padding-right:0!important;display:block!important;padding-top:10px}.cc-sdk .detail-box .cc-question-container__content{padding-left:0}.cc-sdk .cc-question-container{bottom:75px;height:auto;left:0;padding:40px 20px;position:absolute;text-align:left;top:auto;width:100%}.cc-sdk .cc-question-container__text{font-size:18px;margin-bottom:20px;max-width:400px;text-align:left;width:100%}.cc-sdk .cc-question-container__content{display:block;max-width:100%;width:100%}.cc-sdk .cc-question-container__list label{display:block}.cc-sdk .cc-question-container__list li span{width:auto;padding-left:15px}.cc-sdk .cc-question-container__list li{padding-left:0;margin-bottom:10px;display:block}.cc-sdk .cc-popup-container-2__icons{margin:20px}.cc-sdk .cc-popup-container-2__icons.left-icon{left:auto;right:0}.cc-sdk .cc-popup-container-2__icons.right-icon{right:auto;left:0}.cc-sdk .cc-popup-container__close{width:27px}.cc-sdk .cc-question-container__content.rating-color{margin-left:0!important}.cc-sdk .cc-question-container[data-type=nps] .cc-question-container__content,.cc-sdk .cc-question-container[data-type=scale] .cc-question-container__content{width:100%!important}.cc-sdk .multiline-box{height:150px;margin:0;min-width:100%;width:100%}.cc-sdk .detail-box .cc-question-container__content .cc-sdk-form-control,.cc-sdk .hl.dropdown{width:100%}.cc-sdk .detail-box .cc-question-container__text p{font-size:18px}.cc-sdk .mobile-detail-box .cc-question-container__text{height:auto}.cc-sdk .cc-question-container__text p{max-height:auto}.cc-sdk .welcome-box .cc-question-container__text p{color:#fff}.cc-sdk .cc-questions-container{height:100%;position:relative}.cc-sdk .cc-message-box__btn{margin-left:20px}}@media (max-width:768px){.cc-sdk .detail-box .cc-question-container__content .cc-sdk-form-control,.cc-sdk .single-line .cc-question-container__content .cc-sdk-form-control{margin-left:0}.cc-sdk .submit-icon{position:absolute;left:20px;top:auto;bottom:30px;padding-right:0}.cc-sdk.cc-popup-container{position:fixed;bottom:0;left:0;right:0;margin:0!important;width:100%;height:13em;max-width:100%;max-height:100%;text-align:left;background:transparent}.cc-sdk.cc-popup-container .cc-message-box{position:absolute;bottom:20%}.cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text{font-size:20px}.cc-sdk.cc-popup-container .cc-message-box .submit-icon{position:absolute;bottom:-100%;top:auto;left:0;margin:0 14px}.cc-sdk.cc-popup-container .cc-popup-container__close{margin:20px;right:0;top:0}.cc-sdk.cc-popup-container__back{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);display:inline-block;width:27px;height:27px;background-size:100%}.cc-sdk .cc-thankyou-container .cc-question-container__text,.cc-sdk .cc-thankyou-container .cc-question-container__text p{width:100%!important;text-align:center;margin:0!important;padding:0;line-height:normal;height:auto}.cc-sdk .cc-thankyou-container .cc-question-container__text{max-width:98%}}.date-s,.date-y{display:inline-block;margin:0 12px!important;width:80px!important}.date-error{color:red;font-style:italic;visibility:hidden;margin-top:12px}.date-error.show-error{visibility:visible}[dir=rtl].cc-sdk ul{padding-right:0}[dir=rtl].cc-sdk.cc-popup-container .cc-popup-container__close{right:auto;left:0;top:0}[dir=rtl].cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text{text-align:right}[dir=rtl].cc-sdk .cc-popup-container__back{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_rtl_.svg)}[dir=rtl].cc-sdk .cc-popup-container-2__icons.cc-right-icon{right:auto;left:0}[dir=rtl].cc-sdk .cc-popup-container-2__icons.cc-left-icon{right:0;left:auto}[dir=rtl].cc-sdk.cc-question-container{margin-left:0;margin-right:0;right:0;left:auto}[dir=rtl].cc-sdk .cc-question-container__required,[dir=rtl].cc-sdk .cc-question-container__validation{right:0;left:auto}[dir=rtl].cc-sdk .cc-question-container__required-label{top:-2px;right:-2px;left:auto}[dir=rtl].cc-sdk .cc-question-container__list li{display:inline-block;padding-right:15px!important;padding-left:15px!important;vertical-align:middle}[dir=rtl].cc-sdk .cc-question-container[data-type=checkbox] .cc-question-container__list li{padding-right:0!important}[dir=rtl].cc-sdk .cc-question-container__list li span{padding-right:15px;padding-left:0;text-align:right}[dir=rtl].cc-sdk .cc-question-container:before{margin-left:-4px;margin-right:0}[dir=rtl].cc-sdk .multiline-box{margin:0 50px 0 0}[dir=rtl].cc-sdk .hl.dropdown{background-position:97%;text-align:right}[dir=rtl].cc-sdk .drop-cc-question-container .cc-question-container__text{margin-left:20px;margin-right:0}[dir=rtl].cc-sdk .detail-box .cc-question-container__content{padding-right:0;padding-left:0}[dir=rtl].cc-sdk .cc-question-container__content{text-align:right}@media (min-width:769px) and (max-width:1024px){[dir=rtl].cc-sdk .cc-big-list-container .cc-question-container__list,[dir=rtl].cc-sdk .cc-question-container__list{text-align:right}[dir=rtl].cc-sdk .multiline-box{margin:0}}@media (min-width:769px) and (max-width:992px){[dir=rtl].cc-sdk .cc-question-container__text{padding-left:20px;padding-right:0}[dir=rtl].cc-sdk .cc-question-container__content.rating-color{margin-left:0;margin-right:0}}@media (max-width:768px){[dir=rtl].cc-sdk .cc-popup-container-2__icons.cc-right-icon{left:0;right:auto}[dir=rtl].cc-sdk .cc-popup-container-2__icons.cc-left-icon{left:auto;right:0}[dir=rtl].cc-sdk .radio-toggle--more-option li span{padding-right:25px!important;padding-left:0!important}[dir=rtl].cc-sdk .radio-toggle--more-option li{padding-right:0!important;padding-left:0!important}[dir=rtl].cc-sdk .detail-box .cc-question-container__content{padding-left:0;padding-right:0}[dir=rtl].cc-sdk .cc-question-container{left:auto;right:0}[dir=rtl].cc-sdk .multiline-box{margin:0}[dir=rtl].cc-sdk .cc-question-container__text{text-align:right;width:100%;margin-right:5px;max-width:100%}[dir=rtl].cc-sdk .cc-question-container__list li span{padding-right:15px;padding-left:0}[dir=rtl].cc-sdk .cc-question-container__list li{padding-left:0;padding-right:0}[dir=rtl].cc-sdk .cc-popup-container-2__icons.left-icon{left:0;right:auto}[dir=rtl].cc-sdk .cc-popup-container-2__icons.right-icon{right:0;left:auto}[dir=rtl].cc-sdk .cc-question-container__content.rating-color{margin-left:0!important;margin-right:0!important}}.cc-sdk .option-number-item{color:#fff;float:left;font-size:13px;height:38px;box-sizing:border-box;padding-top:10px;text-align:center;width:8.5%;margin-left:1px;margin-right:0;cursor:pointer}.cc-sdk .option-number-item.option-zero{background:#853838}.cc-sdk .option-number-item.option-zero.selected,.cc-sdk .option-number-item.option-zero:hover{background:#572526}.cc-sdk .option-number-item.option-one{background:#9e4343}.cc-sdk .option-number-item.option-one.selected,.cc-sdk .option-number-item.option-one:hover{background:#642728}.cc-sdk .option-number-item.option-two{background:#c14d4d}.cc-sdk .option-number-item.option-two.selected,.cc-sdk .option-number-item.option-two:hover{background:#712827}.cc-sdk .option-number-item.option-three{background:#d94d4d}.cc-sdk .option-number-item.option-three.selected,.cc-sdk .option-number-item.option-three:hover{background:#7c2828}.cc-sdk .option-number-item.option-four{background:#ee4d4d}.cc-sdk .option-number-item.option-four.selected,.cc-sdk .option-number-item.option-four:hover{background:#852828}.cc-sdk .option-number-item.option-five{background:#ff4d4d}.cc-sdk .option-number-item.option-five.selected,.cc-sdk .option-number-item.option-five:hover{background:#844828}.cc-sdk .option-number-item.option-six{background:#ff8c4d}.cc-sdk .option-number-item.option-six.selected,.cc-sdk .option-number-item.option-six:hover{background:#844828}.cc-sdk .option-number-item.option-seven{background:#ffc74d}.cc-sdk .option-number-item.option-seven.selected,.cc-sdk .option-number-item.option-seven:hover{background:#856728}.cc-sdk .option-number-item.option-eight{background:#f5eb4d}.cc-sdk .option-number-item.option-eight.selected,.cc-sdk .option-number-item.option-eight:hover{background:#7f7a28}.cc-sdk .option-number-item.option-nine{background:#73ca81}.cc-sdk .option-number-item.option-nine.selected,.cc-sdk .option-number-item.option-nine:hover{background:#3b6942}.cc-sdk .option-number-item.option-ten{background:#4db47c}.cc-sdk .option-number-item.option-ten.selected,.cc-sdk .option-number-item.option-ten:hover{background:#285e40}.cc-sdk .option-number-item.option-7-scale-1,.cc-sdk .option-number-item.option-7-scale-2,.cc-sdk .option-number-item.option-7-scale-3{background:#ed534f}.cc-sdk .option-number-item.option-7-scale-4,.cc-sdk .option-number-item.option-7-scale-5{background:#ffbc00}.cc-sdk .option-number-item.option-7-scale-6,.cc-sdk .option-number-item.option-7-scale-7{background:#4db47c}.cc-sdk .option-number-item.option-5-scale-1,.cc-sdk .option-number-item.option-5-scale-2{background:#ed534f}.cc-sdk .option-number-item.option-5-scale-3{background:#ffbc00}.cc-sdk .option-number-item.option-5-scale-4,.cc-sdk .option-number-item.option-5-scale-5{background:#4db47c}.cc-sdk .cc-question-container[data-type=nps] .option-number-item{width:calc(9.09% - 1px)}.cc-sdk .cc-question-container[data-type=scale].scale-image-container .option-number-item{width:8.4%}.cc-sdk .cc-question-container__content.rating-color{margin-left:74px}.cc-sdk .option-left-rating-text,.cc-sdk .option-mid-rating-text,.cc-sdk .option-midnps-rating-text,.cc-sdk .option-right-rating-text{color:#424242;font-size:13px;left:0;position:absolute}.cc-sdk .option-midnps-rating-text{left:calc(7 * 9.09% - 1px)}.cc-sdk .option-left-rating-text-small-container{max-width:57px;text-align:left;max-height:37px;overflow:hidden}.cc-sdk .option-mid-rating-text-small-container,.cc-sdk .option-right-rating-text-small-container{max-width:57px;text-align:right;max-height:37px;overflow:hidden}.cc-sdk .option-left-rating-text-small-container-smile{width:40%;text-align:left;max-height:37px;overflow:hidden;bottom:auto!important;top:57px}.cc-sdk .option-right-rating-text-small-container-smile{width:40%;text-align:right;max-height:37px;overflow:hidden;bottom:auto!important;top:57px}.cc-sdk .cc-question-container[data-type=smile] .option-left-rating-text,.cc-sdk .cc-question-container[data-type=star] .option-left-rating-text{left:4px;width:40%;text-align:left}.cc-sdk .option-right-rating-text{left:auto;right:0}.cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,.cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{text-align:right;width:40%}.cc-sdk .cc-question-container[data-type=scale] .option-number-item{width:38px;margin:0 .5px;cursor:pointer;display:inline-block;float:none}.cc-sdk .cc-question-container[data-type=scale] .cc-question-container__list{display:inline-block;width:auto;position:relative}.cc-sdk .cc-question-container[data-type=scale].scale-image-container .cc-question-container__list{width:100%}.cc-sdk .rating-color{position:relative}.cc-sdk .option-smile-box,.cc-sdk .option-star-box{height:60px;margin-right:29px;width:60px;cursor:pointer;box-sizing:border-box;border:4px solid transparent;border-radius:50%;display:inline-block;background-size:100%}.cc-sdk:not([dir=rtl]) .option-smile-box:nth-child(5),.cc-sdk:not([dir=rtl]) .option-star-box:nth-child(5),.cc-sdk[dir=rtl] .option-smile-box:first-child,.cc-sdk[dir=rtl] .option-star-box:first-child{margin-right:0}.cc-sdk .option-smile-box.cc-one{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-two{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-three{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-four{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-five{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-one.selected,.cc-sdk .option-smile-box.cc-one:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-two.selected,.cc-sdk .option-smile-box.cc-two:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-three.selected,.cc-sdk .option-smile-box.cc-three:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-four.selected,.cc-sdk .option-smile-box.cc-four:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-smile-box.cc-five.selected,.cc-sdk .option-smile-box.cc-five:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5_Selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .cc-csat.cc-question-container__content.rating-color{margin-left:45px}.cc-sdk .option-csat.option-smile-box,.cc-sdk .option-csat.option-smile-box.selected,.cc-sdk .option-csat.option-smile-box:hover{background-size:25px;background-position:18px}.cc-sdk .option-csat{height:30px;margin-right:68px;width:30px;padding-left:50px;height:45px;margin-right:0;width:auto;padding-left:0;font-size:14px;vertical-align:middle;display:inline-block;margin-right:13px}.cc-sdk .option-csat span{display:inline-block;vertical-align:top;font-size:12px;padding-left:25px;position:relative;text-align:left;width:100%}.cc-sdk .option-csat .cc-checkbox label{pointer-events:none}.cc-sdk .option-star-box{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star.svg\\\") no-repeat;background-size:100%}.cc-sdk .option-star-box.selected,.cc-sdk .option-star-box:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star_selected.svg\\\") no-repeat;background-size:100%}.cc-sdk .cc-question-container[data-type=slider] .option-left-rating-text{left:4px;width:40%;text-align:left}.cc-sdk .cc-question-container[data-type=slider] .option-right-rating-text{width:40%;text-align:right}.cc-sdk .cc-question-container[data-type=smile] .cc-question-container__list,.cc-sdk .cc-question-container[data-type=star] .cc-question-container__list{position:relative;width:auto;display:inline-block}.cc-sdk .circle-image{margin:auto;width:253px;overflow:hidden;height:240px;position:relative}.cc-sdk .circle-image-scale-010-neutral{width:242px;overflow:hidden;height:230px;margin:auto}.cc-sdk .cc-nps-selected-rating{font-size:100px;display:inline-block;position:absolute;top:0;left:0;line-height:100px;right:0;margin:auto;bottom:0;width:110px;height:100px;text-align:center;font-weight:100;color:#bbb}.cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,.cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{right:4px}.cc-sdk .option-number-item.option-scale{background:#4db47c}.cc-sdk .option-number-item.option-scale.selected,.cc-sdk .option-number-item.option-scale:hover{background:#712827}.cc-sdk .cc-nps-image{cursor:pointer;position:relative;left:0}.cc-sdk .legend-container{position:relative}@media (min-width:769px) and (max-width:992px){.cc-sdk .option-smile-box,.cc-sdk .option-star-box{width:50px;height:50px;margin-right:10px}.cc-sdk .option-csat.option-smile-box,.cc-sdk .option-csat.option-smile-box.selected,.cc-sdk .option-csat.option-smile-box:hover{display:inline-block;width:168px;background-position:48px}.cc-sdk .option-csat.option-smile-box.selected span,.cc-sdk .option-csat.option-smile-box:hover span,.cc-sdk .option-csat.option-smile-box span{padding-left:40px}}@media screen and (min-width:992px){.cc-sdk span.option-csat.option-smile-box,.cc-sdk span.option-csat.option-smile-box.selected,.cc-sdk span.option-csat.option-smile-box:hover{background-position:44px}.cc-sdk span.option-csat.option-smile-box span{padding-left:40px}}@media (max-width:768px){.cc-sdk .option-smile-box,.cc-sdk .option-star-box{display:inline-block;margin-right:3px}.cc-sdk .option-csat.option-smile-box,.cc-sdk .option-csat.option-smile-box.selected,.cc-sdk .option-csat.option-smile-box:hover{display:block;background-size:40px;background-position:45px}.cc-sdk .option-csat.option-smile-box{height:65px;width:100%}.cc-sdk .option-csat.option-smile-box span{font-size:15px;padding-left:40px}.cc-sdk .option-csat.option-smile-box .cc-checkbox{top:calc(50% - 12.5px);height:57px}.cc-sdk .option-csat.option-smile-box .cc-checkbox.cc-radio label:before,.cc-sdk .option-csat.option-smile-box .cc-checkbox input[type=radio]:checked+label:after{width:25px;height:25px}.cc-sdk .option-number-item{color:#fff;float:left;font-size:15px;height:35px;box-sizing:border-box;margin-right:1px;padding-top:7px;text-align:center;width:38px;cursor:pointer;vertical-align:middle}.cc-sdk .cc-question-container[data-type=scale]{bottom:106px}.cc-sdk .cc-question-container[data-type=scale] .option-left-rating-text,.cc-sdk .cc-question-container[data-type=scale] .option-mid-rating-text,.cc-sdk .cc-question-container[data-type=scale] .option-right-rating-text{width:auto}.cc-sdk .cc-question-container[data-type=scale] .option-right-rating-text{text-align:right}.cc-sdk .option-smile-box img,.cc-sdk .option-star-box img{padding-right:5px;margin-right:0}.cc-sdk .cc-question-container[data-type=nps] .cc-question-container__content{width:100%!important}.cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,.cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{right:10px}.cc-sdk .cc-question-container[data-type=csat] .cc-question-container__list li,.cc-sdk .cc-question-container[data-type=scale] .cc-question-container__list{width:100%}}@media (max-width:381px){.cc-sdk .option-smile-box,.cc-sdk .option-star-box{display:inline-block;margin-right:0;height:50px;width:50px}.cc-sdk .option-smile-box img,.cc-sdk .option-star-box img{padding-right:5px;margin-right:0}}@media screen and (max-width:768px){.cc-sdk .cc-question-container[data-type=scale] span.radial-legend-right,.cc-sdk .radial-legend-right{text-align:left;width:35%;right:0}.cc-sdk .radial-legend-mid{width:35%;text-align:center;left:0;right:0;display:none}.cc-sdk .radial-legend-left{width:35%;text-align:right;left:0}}[dir=rtl].cc-sdk .cc-question-container[data-type=csat] .cc-question-container__content.rating-color{margin-right:45px;margin-left:0}[dir=rtl].cc-sdk .cc-question-container[data-type=csat] .cc-checkbox input[type=radio]{margin-right:0;opacity:0;outline:0}[dir=rtl].cc-sdk .option-number-item{margin-right:1px;margin-left:0;float:right}[dir=rtl].cc-sdk .cc-question-container__content.rating-color{margin-right:74px;margin-left:0}[dir=rtl].cc-sdk .option-right-rating-text{left:calc(100% - 418px);right:auto!important}[dir=rtl].cc-sdk .option-left-rating-text{right:0;left:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=nps] .option-right-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=scale] .option-right-rating-text{left:0;right:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=scale] .option-left-rating-text{right:2px}[dir=rtl].cc-sdk .cc-question-container[data-type=slider] .option-right-rating-text{left:0;width:40%;text-align:left}[dir=rtl].cc-sdk .cc-question-container[data-type=slider] .option-left-rating-text{right:0;text-align:right}[dir=rtl].cc-sdk .rating-color{position:relative}[dir=rtl].cc-sdk .option-smile-box img{margin-right:29px;margin-left:0}[dir=rtl].cc-sdk .option-star-box img{margin-left:19px;margin-right:0}[dir=rtl].cc-sdk .option-csat.option-smile-box span{padding-right:25px;text-align:right;padding-left:0}[dir=rtl].cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{left:7px;right:auto!important;text-align:left}[dir=rtl].cc-sdk .cc-question-container[data-type=smile] .option-left-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=star] .option-left-rating-text{right:7px;left:auto!important;text-align:right}[dir=rtl].cc-sdk .option-csat{width:auto;box-sizing:border-box;padding-left:0;margin-right:13px}[dir=rtl].cc-sdk .option-csat.option-smile-box,[dir=rtl].cc-sdk .option-csat.option-smile-box.selected,[dir=rtl].cc-sdk .option-csat.option-smile-box:hover{background-position:calc(100% - 44px) 50%;text-align:right}@media (min-width:769px) and (max-width:992px){[dir=rtl].cc-sdk .option-smile-box img,[dir=rtl].cc-sdk .option-star-box img{margin-left:0;margin-right:10px}[dir=rtl].cc-sdk .cc-question-container__content.rating-color{margin-right:10px;margin-left:86px!important}[dir=rtl].cc-sdk .cc-question-container[data-type=nps] .option-right-rating-text{left:17px;right:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{left:7px;text-align:left;right:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=smile] .option-left-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=star] .option-left-rating-text{right:20px;left:auto!important;text-align:right}[dir=rtl].cc-sdk .option-csat.option-smile-box,[dir=rtl].cc-sdk .option-csat.option-smile-box.selected,[dir=rtl].cc-sdk .option-csat.option-smile-box:hover{width:auto}}@media (max-width:768px){[dir=rtl].cc-sdk .option-smile-box img,[dir=rtl].cc-sdk .option-star-box img{padding-right:0;padding-left:5px;margin-right:0;margin-left:0}[dir=rtl].cc-sdk .cc-question-container[data-type=csat] .cc-checkbox input[type=radio]{margin-right:7px;opacity:0;outline:0}[dir=rtl].cc-sdk .option-csat.option-smile-box,[dir=rtl].cc-sdk .option-csat.option-smile-box.selected,[dir=rtl].cc-sdk .option-csat.option-smile-box:hover{background-position:calc(100% - 44px) 50%}[dir=rtl].cc-sdk .option-csat.option-smile-box span{padding-right:39px;text-align:right;padding-left:0}[dir=rtl].cc-sdk .cc-question-container[data-type=smile] .option-left-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=star] .option-left-rating-text,[dir=rtl].cc-sdk .option-left-rating-text{right:10px;left:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=smile] .option-right-rating-text,[dir=rtl].cc-sdk .cc-question-container[data-type=star] .option-right-rating-text{right:auto!important}[dir=rtl].cc-sdk .option-right-rating-text{left:calc(100% - 322px);right:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=scale] .option-right-rating-text{left:13px;right:auto!important}[dir=rtl].cc-sdk .cc-question-container[data-type=nps] .radial-legend-right,[dir=rtl].cc-sdk .cc-question-container[data-type=scale] .radial-legend-right{left:auto!important;right:10px!important}[dir=rtl].cc-sdk .cc-question-container[data-type=nps] .radial-legend-left,[dir=rtl].cc-sdk .cc-question-container[data-type=scale] .radial-legend-left{right:auto!important;left:10px!important}}@media (max-width:381px){[dir=rtl].cc-sdk .option-right-rating-text{left:calc(100% - 258px);right:auto!important}}.cc-sdk .cc-select-wrapper{position:relative;display:inline-block;user-select:none;z-index:11}.cc-sdk .cc-select-wrapper select{display:none}.cc-sdk .cc-select{position:relative;display:inline-block;margin-left:70px}.cc-sdk .cc-select-trigger{display:block;width:130px;padding:0 84px 0 22px;font-size:15px;font-style:italic;font-weight:300;color:#222;line-height:20px;background:transparent;border-radius:0;cursor:pointer;width:300px;border-bottom:1px solid #6d6d6d;display:inline-block;text-align:left;padding:5px 20px 5px 5px;position:relative;background-position:97%;background-repeat:no-repeat;max-height:50px;overflow:hidden}.cc-sdk .cc-select-trigger:after{position:absolute;display:block;content:\\\"\\\";width:10px;height:10px;top:50%;right:5px;margin-top:-3px;border-bottom:1px solid #222;border-right:1px solid #222;transform:rotate(45deg) translateY(-50%);transition:all .2s ease-in-out;transform-origin:50% 0}.cc-sdk .cc-select.opened .cc-select-trigger:after{margin-top:3px;transform:rotate(-135deg) translateY(-50%)}.cc-sdk .cc-select-options-container{position:absolute;display:block;top:100%;left:0;right:0;min-width:100%;margin:15px 0;border:1px solid #b5b5b5;border-radius:4px;box-sizing:border-box;box-shadow:0 2px 1px rgba(0,0,0,.07);background:#fff;transition:all .2s ease-in-out;opacity:0;visibility:hidden;pointer-events:none;transform:translateY(calc(-100% - 65px));height:auto;max-height:150px;overflow:hidden;overflow-y:scroll}.cc-sdk .cc-select-options{overflow-y:scroll;height:100%;width:110%}.cc-sdk .cc-select.opened .cc-select-options-container{opacity:1;visibility:visible;pointer-events:all;transform:translateY(-100%) translateY(-65px)}@media (min-width:769px){.cc-sdk .cc-popup-container-2.top .cc-select-options-container,.cc-sdk .cc-popup-container-2.top .cc-select.opened .cc-select-options-container{transform:translateY(-19px)}}.cc-sdk .option-hover:before{background:#f9f9f9}.cc-sdk .cc-select-option{position:relative;display:block;padding:0 12px;border-bottom:1px solid #e4e4e4;font-size:12px;font-weight:600;color:#222;line-height:34px;cursor:pointer;transition:all .2s ease-in-out;text-align:left;margin:0;width:100%}.cc-sdk .cc-select-option:first-of-type{border-radius:4px 4px 0 0}.cc-sdk .cc-select-option:last-of-type{border-bottom:0;border-radius:0 0 4px 4px}.cc-sdk .cc-select-option.selection,.cc-sdk .cc-select-option:hover{background:#eaeaea}.cc-sdk .cc-select-wrapper.down .cc-select-options-container,.cc-sdk .cc-select-wrapper.down .cc-select.opened .cc-select-options-container{transform:translateY(20px)}.cc-sdk .cc-question-container[data-type=nps] .cc-question-container__content,.cc-sdk .cc-question-container[data-type=scale] .cc-question-container__content{width:40%}@media (max-width:768px){.cc-sdk .cc-select,.cc-sdk .cc-select-wrapper{min-width:100%}.cc-sdk .cc-select{margin-left:0}.cc-sdk .cc-select-trigger{min-width:100%;width:auto}}[dir=rtl].cc-sdk .cc-select-trigger{padding:0 22px 0 84px;background-position:97%;background-repeat:no-repeat;text-align:right}[dir=rtl].cc-sdk .cc-select-trigger:after{top:50%;left:2px;right:auto}[dir=rtl].cc-sdk .cc-select-option{text-align:right}[dir=rtl].cc-sdk .cc-select-option:first-of-type{border-radius:4px 0 0 4px}[dir=rtl].cc-sdk .cc-select-option:last-of-type{border-radius:0 4px 4px 0}.cc-sdk .cc-checkbox{display:table-cell;vertical-align:middle;position:relative;text-align:center}.cc-sdk .cc-checkbox label{cursor:pointer;display:block;height:25px}.cc-sdk .cc-checkbox+span label img{width:40px;display:inline-block;vertical-align:middle}.cc-sdk .cc-checkbox label:after,.cc-sdk .cc-checkbox label:before{content:\\\"\\\";left:0;margin:auto;position:absolute;top:calc(50% - 12.5px)}.cc-sdk .cc-checkbox label:before{background:transparent;border-radius:2px;border:1px solid #424242;cursor:pointer;height:20px;transition:background .3s;width:20px}.cc-sdk .cc-checkbox input[type=checkbox]{opacity:0;outline:0}.cc-sdk .cc-checkbox input[type=checkbox]:checked+label:before{background:#fdaf19;border:none}.cc-sdk .cc-checkbox input[type=checkbox]:checked+label:after{border:3px solid #222;border-right-style:none;border-top-style:none;height:7px;top:calc(50% - 8.5px);left:4px;transform:rotate(-45deg);width:12px}.cc-sdk .cc-checkbox.cc-radio label:before{background:transparent;border:1px solid #424242;cursor:pointer;height:25px;transition:background-color .3s;width:25px}.cc-sdk .cc-checkbox input[type=radio]{opacity:0;outline:0}.cc-sdk .cc-checkbox input[type=radio]:checked+label:before{background:transparent;border-color:#fdaf19}.cc-sdk .cc-question-container__list li{display:inline-table;margin-bottom:0}.cc-sdk .cc-question-container__list li .cc-radio,.cc-sdk .cc-question-container__list li .cc-sdk .cc-checkbox{width:30px}.cc-sdk .cc-checkbox input[type=radio]:checked+label:after{-moz-transform:scale(.8);-ms-transform:scale(.8);-o-transform:scale(.8);-webkit-transform:scale(.8);background:#fdaf19;border-radius:30px;height:25px;transform:scale(.8);width:25px}.cc-sdk .cc-radio label:before{border-radius:30px}.cc-sdk .radio-toggle--more-option li span{padding-left:25px!important;width:125px!important}.cc-sdk .radio-toggle .cc-question-container__list li{padding-left:15px}@media (min-width:1000px){.cc-sdk .radio-toggle .cc-question-container__list li span label{overflow:hidden;max-height:100px;display:block}}@media (min-width:769px) and (max-width:992px){.cc-sdk .radio-toggle .cc-question-container__list li{padding-left:10px}.cc-sdk .radio-toggle .cc-question-container__list li span .label,.cc-sdk .radio-toggle .cc-question-container__list li span label{display:block;max-height:50px;overflow:hidden;text-overflow:ellipsis}}@media (max-width:768px){.cc-sdk .radio-toggle .cc-question-container__list li{padding-left:0;display:block;padding-right:50px}}.cc-sdk .progress-bar{width:100%;position:absolute;background:#a47c2b;z-index:1;height:8px;left:0}.cc-sdk .progress-line{background:#fdaf19;height:100%;display:block;width:0;transition:all .4s ease-in}@media screen and (max-width:768px){.cc-sdk .progress-bar{bottom:unset;top:0}}.cc-sdk .cc-scrollbar-wrapper{float:left;height:100%;overflow:hidden;position:relative;width:100%;z-index:1}.cc-sdk .cc-scrollbar-content{box-sizing:border-box;height:100%;overflow:auto;position:relative;width:107%}.cc-sdk .cc-scrollbar-scroll{background:#aaa;border-radius:4px;cursor:pointer;opacity:0;position:relative;top:0;transition:opacity .25s linear;width:9px;z-index:2}.cc-sdk .cc-scrollbar-container:hover .cc-scrollbar-scroll{opacity:1}.cc-sdk .cc-scrollbar-grabbed{-moz-user-select:none;-o-user-select:none;-webkit-user-select:none;user-select:none}.cc-sdk .cc-sdk-range{-webkit-appearance:none;-moz-appearance:none;width:500px;height:60px;background:transparent}.cc-sdk input[type=range]::-webkit-slider-runnable-track{-webkit-appearance:none;background:#ff403d;background:linear-gradient(135deg,#ff403d,#992a28);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=\\\"#ff403d \\\",endColorstr=\\\"#992a28 \\\",GradientType=1);height:1px}.cc-sdk input[type=range]:focus{outline:none}.cc-sdk input[type=range]::-moz-range-track{-moz-appearance:none;background:#ff403d;background:linear-gradient(135deg,#7a0806,#992a28);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=\\\"#ff403d \\\",endColorstr=\\\"#992a28 \\\",GradientType=1);height:1px}.cc-sdk input[type=range]::-ms-track{height:1px;width:500px;background-color:#ff403d}.cc-sdk input[type=range]::-webkit-slider-thumb{-webkit-appearance:none;border:1px solid #ff403d;border-radius:50%;height:32px;width:32px;max-width:80px;position:relative;bottom:16px;background-color:#fff;cursor:-webkit-grab}.cc-sdk input[type=range]::-ms-thumb{border:1px solid #ff403d;border-radius:50%;height:32px;width:32px;background:#e08692;box-sizing:border-box;cursor:pointer!important}.cc-sdk input[type=range]::-moz-range-thumb{-moz-appearance:none;border:1px solid #ff403d;border-radius:50%;height:32px;width:32px;max-width:80px;position:relative;bottom:16px;background-color:#fff;cursor:-moz-grab}.cc-sdk input[type=range]::-moz-range-thumb:before{content:\\\"asd\\\"}.cc-sdk input[type=range]::-webkit-slider-thumb:active{cursor:-webkit-grabbing}.cc-sdk input[type=range]::-moz-range-thumb:active{cursor:-moz-grabbing}.cc-sdk .cc-question-container__content.cc-sdk-range-slider{height:50px}.cc-sdk .slider-tip{background:#eb1c23;padding:8px 9px 9px;position:absolute;left:0;right:0;margin:0 auto;color:#fff;background:none;color:#424242;font-size:13px;width:100px;display:inline-block;text-align:center;font-weight:700}.cc-sdk .slider-tip:after{border-width:5px 5px 0;border-top-color:#000}@media (max-width:1024px){.cc-sdk .cc-sdk-range{width:100%}}.cc-sdk input.cc-sdk-range.cc-blue::-moz-range-track,.cc-sdk input.cc-sdk-range.cc-blue::-webkit-slider-runnable-track{background:blue}.cc-sdk .chart{box-sizing:border-box;display:inline-block;height:21px;padding-top:22px;position:relative;vertical-align:top;width:21px}.cc-sdk .cc-sdk-chart span{display:block;font-size:2em;font-weight:400}.cc-sdk .cc-sdk-chart canvas{left:0;position:absolute;top:0}.cc-sdk .cc-sdk-loader{height:21px;left:28px;position:absolute;top:8px;width:21px}@media (min-width:769px){.cc-sdk .cc-sdk-chart canvas{margin-left:10px}}@media (max-width:768px){.cc-sdk .cc-sdk-loader{position:relative;left:auto;top:0;right:auto}}[dir=rtl].cc-sdk .cc-sdk-chart canvas{right:0;left:auto}[dir=rtl].cc-sdk .cc-sdk-loader{right:28px;left:auto}@media (min-width:768px){[dir=rtl].cc-sdk .cc-sdk-chart canvas{margin-right:10px;margin-left:0}}.cc-sdk .show{display:block!important}.cc-sdk .show-inline{display:inline-block!important}.cc-sdk .hide{display:none!important}.cc-sdk.bottom{bottom:0}.cc-sdk.right,.cc-sdk .right{right:0}.cc-sdk .left{left:0}.cc-sdk .top{top:0}.ccsdk-overlay{background:#fff;bottom:0;height:100%;left:0;position:absolute;top:0;width:100%;z-index:0}.ccsdk-overlay.ccsdk-glass{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/ww.png);background-repeat:no-repeat;background-size:cover}.ccsdk-clearfix{clear:both;display:block}.ccsdk-text-normal{font-weight:400}.cc-sdk ::-webkit-input-placeholder{color:#4c4c4c;font-family:Open Sans;font-size:13px;font-style:italic;font-weight:400}.cc-sdk .cc-sdk-form-control::-moz-placeholder{font-style:italic;font-size:13px;font-weight:400;font-family:Open Sans;color:#4c4c4c}.cc-sdk .cc-sdk-form-control:-ms-input-placeholder{font-style:italic;font-size:13px;font-weight:400;font-family:Open Sans;color:#4c4c4c}.cc-sdk .cc-sdk-form-control:-moz-placeholder{font-style:italic;font-size:13px;font-weight:400;font-family:Open Sans;color:#4c4c4c}@media (min-width:769px){.desktop-hide{display:none}}@media (max-width:768px){.mobile-hide{display:none}.cc-sdk-loader{position:relative;left:auto;top:0;right:auto}.ccsdk-overlay.welcome-overlay{background:rgba(210,42,53,.87)}}[dir=rtl].cc-sdk .submit-icon{left:0;right:auto;margin-left:75px}@media (max-width:768px){[dir=rtl].cc-sdk .submit-icon{position:absolute;left:auto;top:auto;bottom:30px;padding-left:0;right:20px;margin:0}}.cc-sdk:before{width:0;height:0;overflow:hidden;position:absolute;z-index:-1}.cc-sdk .yellow .progress-bar{background:#a47c2b}.cc-sdk .yellow .progress-line{background:#fdaf19}.cc-sdk .yellow .submit-icon{background-image:url(\\\"data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%2747px%27%20height%3D%2747px%27%20viewBox%3D%270%200%2047%2047%27%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%3E%3Ctitle%3EGroup%2016%3C%2Ftitle%3E%3Cdesc%3ECreated%20with%20Sketch.%3C%2Fdesc%3E%3Cdefs%3E%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%3Cfilter%20x%3D%27-18.1%25%27%20y%3D%27-12.9%25%27%20width%3D%27136.2%25%27%20height%3D%27136.2%25%27%20filterUnits%3D%27objectBoundingBox%27%20id%3D%27filter-2%27%3E%3CfeOffset%20dx%3D%270%27%20dy%3D%272%27%20in%3D%27SourceAlpha%27%20result%3D%27shadowOffsetOuter1%27%3E%3C%2FfeOffset%3E%3CfeGaussianBlur%20stdDeviation%3D%272%27%20in%3D%27shadowOffsetOuter1%27%20result%3D%27shadowBlurOuter1%27%3E%3C%2FfeGaussianBlur%3E%3CfeColorMatrix%20values%3D%270%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200.116423234%200%27%20type%3D%27matrix%27%20in%3D%27shadowBlurOuter1%27%3E%3C%2FfeColorMatrix%3E%3C%2Ffilter%3E%3C%2Fdefs%3E%3Cg%20id%3D%27Page-1%27%20stroke%3D%27none%27%20stroke-width%3D%271%27%20fill%3D%27none%27%20fill-rule%3D%27evenodd%27%3E%3Cg%20id%3D%271-copy-20%27%20transform%3D%27translate(-1246.000000%2C%20-664.000000)%27%3E%3Cg%20id%3D%27Group-16%27%20transform%3D%27translate(1250.000000%2C%20666.000000)%27%3E%3Cg%20id%3D%27Oval-4%27%3E%3Cuse%20fill%3D%27white%27%20fill-opacity%3D%271%27%20filter%3D%27url(%23filter-2)%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3Cuse%20fill%3D%27%23d04a49%27%20fill-rule%3D%27evenodd%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3C%2Fg%3E%3Cg%20id%3D%27Group-5%27%20transform%3D%27translate(12.000000%2C%2011.000000)%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23FFFFFF%27%3E%3Cg%20id%3D%27fast-forward-arrows%27%20transform%3D%27translate(6.173934%2C%200.000000)%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3Cg%20id%3D%27fast-forward-arrows-copy%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\\\")}.cc-sdk .yellow .cc-checkbox input[type=checkbox]:checked+label:before{background:#fdaf19}.cc-sdk .yellow .cc-checkbox input[type=checkbox]:checked+label:after{border-color:#222}.cc-sdk .yellow .cc-checkbox input[type=radio]:checked+label:before{border-color:#fdaf19}.cc-sdk .yellow .cc-checkbox input[type=radio]:checked+label:after{background:#fdaf19}.cc-sdk .yellow .cc-sdk-form-control:focus{border-color:#fcaf18}.cc-sdk .yellow .cc-message-box__btn{background:#fdaf19}.cc-sdk .red .progress-bar{background:#d22a35}.cc-sdk .red .progress-line{background:#d22a35;filter:brightness(150%)}.cc-sdk .red .cc-checkbox input[type=checkbox]:checked+label:before{background:#d22a35}.cc-sdk .red .cc-checkbox input[type=checkbox]:checked+label:after{border-color:#fff}.cc-sdk .red .cc-checkbox input[type=radio]:checked+label:before{border-color:#d22a35}.cc-sdk .red .cc-checkbox input[type=radio]:checked+label:after{background:#d22a35}.cc-sdk .red .cc-sdk-form-control:focus{border-color:#d22a35}.cc-sdk .red .cc-message-box__btn{background:#d22a35;color:#fff}.cc-question-container,.hide-slide{transform:translateX(5px)}.cc-question-container,.hide-bottom-up,.hide-slide{transition:transform .3s ease,opacity .3s ease,visibility .3s ease;visibility:hidden;opacity:0}.hide-bottom-up{transform:translateY(30px)}.hide-up-bottom{transform:translateY(100%)}.hide-right-left,.hide-up-bottom{transition:transform .3s ease,opacity .3s ease,visibility .3s ease;visibility:hidden;opacity:0}.hide-right-left{transform:translateX(100%)}.hide-left-right{transform:translateX(-100%);visibility:hidden;opacity:0}.hide-left-right,.show-slide,.show-thankyou-slide{transition:transform .3s ease,opacity .3s ease,visibility .3s ease}.show-slide,.show-thankyou-slide{visibility:visible;opacity:1;transform:translateX(0) translateY(0)}.cc-sdk #timer{position:relative}.cc-sdk svg.cc-sdk-timer{position:absolute;top:0;left:0;width:40px;height:40px;transform:rotateY(-180deg) rotate(-90deg)}[dir=rtl].cc-sdk svg.cc-sdk-timer{right:0;left:auto}.cc-sdk svg.cc-sdk-timer circle{stroke-dasharray:50px;stroke-dashoffset:0px;stroke-linecap:round;stroke-width:2px;stroke:red;fill:none;animation:countdown 10s linear 1 forwards}@keyframes countdown{0%{stroke-dashoffset:0px}to{stroke-dashoffset:50px}}.cc-sdk .cc-loaderimg{position:absolute;width:100%;z-index:1000;left:0;right:0;top:0;height:100%;background:hsla(0,0%,100%,.8)}.cc-sdk .cc-loaderimg svg{width:100px}\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function() {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\tvar result = [];\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar item = this[i];\n\t\t\tif(item[2]) {\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\n\t\t\t} else {\n\t\t\t\tresult.push(item[1]);\n\t\t\t}\n\t\t}\n\t\treturn result.join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(selector) {\n\t\tif (typeof memo[selector] === \"undefined\") {\n\t\t\tmemo[selector] = fn.call(this, selector);\n\t\t}\n\n\t\treturn memo[selector]\n\t};\n})(function (target) {\n\treturn document.querySelector(target)\n});\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = __webpack_require__(20);\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton) options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n\tif (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\toptions.attrs.type = \"text/css\";\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\toptions.attrs.type = \"text/css\";\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports) {\n\n\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-survey cc-sdk\\\" id={{surveyToken}}-survey> <div class=\\\"cc-popup-container-2 {{animation}} {{location}}\\\"> <div class=\\\"ccsdk-overlay ccsdk-glass\\\"></div> <div class=\\\"cc-popup-container-2__icons cc-left-icon\\\"> <span class=\\\"is-cc-popup-container-back cc-popup-container__back act-cc-button-prev\\\"></span> <ul class=cc-sdk-loader> <li class=cc-sdk-chart data-percent=75></li> </ul> </div> <div class=\\\"cc-popup-container-2__icons cc-right-icon\\\"> <img src=https://cx.getcloudcherry.com/microsurvey-assets/Collapse_Icon.svg class=\\\"is-cc-popup-container-minimize cc-popup-container__minimize act-cc-button-minimize mobile-hide\\\"> <img src=https://cx.getcloudcherry.com/microsurvey-assets/Close_Icon.svg class=\\\"is-cc-popup-container-close cc-popup-container__close act-cc-button-close mobile-hide\\\"> <img src=https://cx.getcloudcherry.com/microsurvey-assets/Close_Icon2.svg class=\\\"is-cc-popup-container-close cc-popup-container__close cc-popup-container__close2 act-cc-button-close desktop-hide\\\"> </div> <div class=cc-survey-container> <div class=cc-survey-content> <div class=cc-questions-container> </div> </div> <div class=\\\"submit-icon act-cc-button-next\\\"></div> <div class=\\\"{{location}} progress-bar\\\" id=progressBar> <span class=progress-line id=progress-line></span> </div> </div> </div> </div>\";\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-sdk act-cc-welcome-question-box cc-popup-container {{location}} {{animation}}\\\" id={{surveyToken}}-welcome> <div class=\\\"ccsdk-overlay ccsdk-glass\\\"></div> <div class=\\\"cc-loaderimg hide\\\"> <svg version=1.1 id=L9 xmlns=http://www.w3.org/2000/svg xmlns:xlink=http://www.w3.org/1999/xlink x=0px y=0px viewBox=\\\"0 0 100 100\\\" enable-background=\\\"new 0 0 0 0\\\" xml:space=preserve> <path fill=red d=\\\"M73,50c0-12.7-10.3-23-23-23S27,37.3,27,50 M30.9,50c0-10.5,8.5-19.1,19.1-19.1S69.1,39.5,69.1,50\\\"> <animateTransform attributeName=transform attributeType=XML type=rotate dur=1s from=\\\"0 50 50\\\" to=\\\"360 50 50\\\" repeatCount=indefinite /> </path> </svg> </div> <img src=https://cx.getcloudcherry.com/microsurvey-assets/Close_Icon.svg class=\\\"is-cc-popup-container-close cc-popup-container__close act-cc-button-close\\\"> <div class=cc-message-box> <h2 class=cc-message-box__text>{{question}}</h2> <a href=javascript:void(0) class=\\\"cc-message-box__btn act-cc-{{action}} mobile-hide\\\" id=\\\"\\\">{{button}}</a> </div> </div>\";\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container single-line\\\" data-required={{isRequired}} data-type=singleline data-id={{questionId}}> <div class=cc-question-container__text> <p> <span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> <span class=cc-question-container__validation>{{validationHint}}</span> </div> <div class=cc-question-container__content> <input type=text name=\\\"\\\" id={{questionId}} placeholder=Enter.. class=cc-sdk-form-control> </div> </div>\";\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container single-line\\\" data-required={{isRequired}} data-type=number data-id={{questionId}}> <div class=cc-question-container__text> <p> <span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> <span class=cc-question-container__validation>{{validationHint}}</span> </div> <div class=cc-question-container__content> <input type=text name=\\\"\\\" id={{questionId}} placeholder=Enter.. class=cc-sdk-form-control> </div> </div>\";\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=cc-question-container data-type=multiline data-id={{questionId}} data-required={{isRequired}}> <div class=cc-question-container__text> <p> <span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> <span class=cc-question-container__validation>{{validationHint}}</span> </div> <div class=cc-question-container__content> <textarea class=\\\"multiline-box cc-sdk-form-control\\\" maxlength={{characterLimit}} id={{questionId}} placeholder=\\\"Share your thoughts...\\\"></textarea> </div> </div>\";\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=cc-question-container data-type=checkbox data-id={{questionId}} data-required={{isRequired}}> <div class=cc-question-container__text> <p> <span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=\\\"cc-question-container__content cc-big-list-container\\\" id={{questionId}}> <ul class=cc-question-container__list> {{options}} </ul> </div> </div>\";\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container radio-toggle\\\" data-type=radio data-id={{questionId}} data-required={{isRequired}}> <div class=cc-question-container__text> <p class=\\\"\\\"> <span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=cc-question-container__content id={{questionId}}> <ul class=cc-question-container__list> {{options}} </ul> </div> </div>\";\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container radio-toggle radio-toggle--image-toggle\\\" data-required={{isRequired}} data-type=radioImage data-id={{questionId}}> <div class=cc-question-container__text> <p> <span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=cc-question-container__content id={{questionId}}> <ul class=cc-question-container__list> {{options}} </ul> </div> </div>\";\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container {{scaleImageContainer}}\\\" data-type=scale data-id={{questionId}} data-required={{isRequired}}> <div class=cc-question-container__text> <p> <span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=\\\"cc-question-container__content rating-color act-cc-question-nps\\\" id={{questionId}}> <div class=cc-question-container__list> {{optionsRange}} <div class=\\\"circle-image circle-image-scale-010-neutral desktop-hide {{imageVisibility010}}\\\"> <img src={{mobileImageUrl}} class=cc-nps-image alt=\\\"\\\" usemap=#Map /> <map name=Map id=Map> <area target=\\\"\\\" alt=0 title=0 href=# class=option-number-item data-rating=0 coords=83,193,62,228,38,212,23,193,57,167 shape=poly> <area target=\\\"\\\" alt=1 title=1 href=# class=option-number-item data-rating=1 coords=54,165,21,189,11,173,4,154,2,140,43,134 shape=poly> <area target=\\\"\\\" alt=2 title=2 href=# class=option-number-item data-rating=2 coords=43,131,2,135,1,118,5,93,8,83,45,97 shape=poly> <area target=\\\"\\\" alt=3 title=3 href=# class=option-number-item data-rating=3 coords=48,92,10,78,17,61,28,44,39,32,66,66 shape=poly> <area target=\\\"\\\" alt=4 title=4 href=# class=option-number-item data-rating=4 coords=70,61,42,30,55,20,70,14,91,5,101,45 shape=poly> <area target=\\\"\\\" alt=5 title=5 href=# class=option-number-item data-rating=5 coords=105,44,92,5,113,2,134,3,147,5,139,46 shape=poly> <area target=\\\"\\\" alt=6 title=6 href=# class=option-number-item data-rating=6 coords=141,46,150,6,169,11,184,19,200,30,172,63 shape=poly> <area target=\\\"\\\" alt=7 title=7 href=# class=option-number-item data-rating=7 coords=175,63,202,34,218,48,227,66,232,78,194,93 shape=poly> <area target=\\\"\\\" alt=8 title=8 href=# class=option-number-item data-rating=8 coords=196,97,233,81,239,103,240,118,240,135,199,130 shape=poly> <area target=\\\"\\\" alt=9 title=9 href=# class=option-number-item data-rating=9 coords=199,135,240,140,236,159,229,175,221,189,187,167 shape=poly> <area target=\\\"\\\" alt=10 title=10 href=# class=option-number-item data-rating=10 coords=183,169,217,191,204,212,178,229,158,192 shape=poly> </map> <span class=\\\"cc-nps-selected-rating act-cc-nps-selected-rating desktop-hide\\\">0</span> </div> <div class=\\\"circle-image circle-image-scale-010-neutral desktop-hide {{imageVisibility110}}\\\"> <img src={{mobileImageUrl}} class=cc-nps-image alt=\\\"\\\" usemap=#Map2 /> <map name=Map2 id=Map2> <area target=\\\"\\\" alt=1 title=1 href=# class=option-number-item data-rating=1 coords=67,180,40,210,26,195,15,176,11,169,47,152 shape=poly> <area target=\\\"\\\" alt=2 title=2 href=# class=option-number-item data-rating=2 coords=48,149,9,163,2,140,1,124,3,110,45,115 shape=poly> <area target=\\\"\\\" alt=3 title=3 href=# class=option-number-item data-rating=3 coords=44,110,4,105,8,79,17,67,22,57,58,79 shape=poly> <area target=\\\"\\\" alt=4 title=4 href=# class=option-number-item data-rating=4 coords=58,76,24,54,33,39,48,29,65,18,85,54 shape=poly> <area target=\\\"\\\" alt=5 title=5 href=# class=option-number-item data-rating=5 coords=87,51,68,15,85,7,106,3,120,3,122,45 shape=poly> <area target=\\\"\\\" alt=6 title=6 href=# class=option-number-item data-rating=6 coords=123,42,123,0,141,2,163,8,176,14,157,52 shape=poly> <area target=\\\"\\\" alt=7 title=7 href=# class=option-number-item data-rating=7 coords=159,53,180,16,201,30,212,44,220,54,186,77 shape=poly> <area target=\\\"\\\" alt=8 title=8 href=# class=option-number-item data-rating=8 coords=188,80,222,55,229,69,236,83,241,108,199,111 shape=poly> <area target=\\\"\\\" alt=9 title=9 href=# class=option-number-item data-rating=9 coords=200,116,239,112,241,128,240,146,234,165,196,150 shape=poly> <area target=\\\"\\\" alt=10 title=10 href=# class=option-number-item data-rating=10 coords=193,153,233,168,225,187,212,202,202,212,175,181 shape=poly> </map> <span class=\\\"cc-nps-selected-rating act-cc-nps-selected-rating desktop-hide\\\">0</span> </div> <div class=legend-container {{legendstyle}}> <span class=\\\"option-left-rating-text {{optionLeftExtraClass}} {{radialLegend}}-left\\\" style=max-width:maxWidth>{{leftLabel}}</span> <span class=\\\"option-mid-rating-text {{optionMidExtraClass}} {{radialLegend}}-mid\\\" style=max-width:maxWidth;left:leftWidth>{{midLabel}}</span> <span class=\\\"option-right-rating-text {{optionRightExtraClass}} {{radialLegend}}-right\\\" style=max-width:maxWidth>{{rightLabel}}</span> </div> <input type=hidden value=\\\"\\\" class=option-number-input> </div> </div> </div> {{style}} \";\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=cc-question-container data-type=csat data-required={{isRequired}} data-id={{questionId}}> <div class=cc-question-container__text> <p> <span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=\\\"cc-question-container__content rating-color\\\" id={{questionId}}> <ul class=cc-question-container__list> <li> <span class=\\\"option-csat option-smile-box one\\\" data-rating=1> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-0> <label for=service-0></label> </div> <span>Completely Disagree</span> </span> </li> <li> <span class=\\\"option-csat option-smile-box two\\\" data-rating=2> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-1> <label for=service-1></label> </div> <span>Somewhat Disagree</span> </span> </li> <li> <span class=\\\"option-csat option-smile-box three\\\" data-rating=3> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-2> <label for=service-2></label> </div> <span>Agree</span> </span> </li> <li> <span class=\\\"option-csat option-smile-box four\\\" data-rating=4> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-3> <label for=service-3></label> </div> <span>Somewhat Agree</span> </span> </li> <li> <span class=\\\"option-csat option-smile-box five\\\" data-rating=5> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-4> <label for=service-4></label> </div> <span>Completely Agree</span> </span> </li> </ul> </div> </div>\";\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=cc-question-container data-type=csat data-required={{isRequired}} data-id={{questionId}}> <div class=cc-question-container__text> <p> <span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=\\\"cc-question-container__content cc-csat rating-color\\\" id={{questionId}}> <ul class=cc-question-container__list> <li> <span class=\\\"option-csat option-smile-box cc-one\\\" data-rating=1> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-0> <label for=service-0></label> </div> <span>Very Unsatisfied</span> </span> </li> <li> <span class=\\\"option-csat option-smile-box cc-two\\\" data-rating=2> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-1> <label for=service-1></label> </div> <span>Unsatisfied</span> </span> </li> <li> <span class=\\\"option-csat option-smile-box cc-three\\\" data-rating=3> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-2> <label for=service-2></label> </div> <span>Neutral</span> </span> </li> <li> <span class=\\\"option-csat option-smile-box cc-four\\\" data-rating=4> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-3> <label for=service-3></label> </div> <span>Satisfied</span> </span> </li> <li> <span class=\\\"option-csat option-smile-box cc-five\\\" data-rating=5> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-4> <label for=service-4></label> </div> <span>Very Satisfied</span> </span> </li> </ul> </div> </div>\";\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=cc-question-container data-type=nps data-id={{questionId}} data-required={{isRequired}}> <div class=cc-question-container__text> <p class=\\\"\\\"> <span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=\\\"cc-question-container__content rating-color act-cc-question-scale\\\" id={{questionId}}> <div class=cc-question-container__list> <div class=cc-options-container> <span data-rating=0 class=\\\"option-number-item mobile-hide option-zero\\\">0</span> <span data-rating=1 class=\\\"option-number-item mobile-hide option-one\\\">1</span> <span data-rating=2 class=\\\"option-number-item mobile-hide option-two\\\">2</span> <span data-rating=3 class=\\\"option-number-item mobile-hide option-three\\\">3</span> <span data-rating=4 class=\\\"option-number-item mobile-hide option-four\\\">4</span> <span data-rating=5 class=\\\"option-number-item mobile-hide option-five\\\">5</span> <span data-rating=6 class=\\\"option-number-item mobile-hide option-six\\\">6</span> <span data-rating=7 class=\\\"option-number-item mobile-hide option-seven\\\">7</span> <span data-rating=8 class=\\\"option-number-item mobile-hide option-eight\\\">8</span> <span data-rating=9 class=\\\"option-number-item mobile-hide option-nine\\\">9</span> <span data-rating=10 class=\\\"option-number-item mobile-hide option-ten\\\">10</span> <div class=\\\"circle-image desktop-hide\\\"> <img src=https://cx.getcloudcherry.com/microsurvey-assets/circle.svg class=cc-nps-image alt=\\\"\\\" usemap=#Map /> <map name=Map id=Map> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=0 coords=86,199,61,177,25,201,38,219,52,230,66,238 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=1 coords=59,173,22,198,12,180,5,160,4,146,44,138 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=2 coords=44,134,49,101,8,84,3,98,0,116,2,141 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=3 coords=49,97,71,68,42,33,25,54,14,71,10,81 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=4 coords=74,65,106,47,94,5,70,14,46,31 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=5 coords=144,47,154,4,135,1,114,1,98,4,108,48 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=6 coords=149,48,157,5,183,15,209,30,180,65 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=7 coords=183,67,211,34,231,56,243,79,204,97 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=8 coords=203,100,245,85,251,106,252,124,251,141,207,135 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=9 coords=208,140,251,146,245,169,231,197,194,172 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=10 coords=193,179,229,201,218,218,202,230,185,238,166,200 shape=poly> </map> <span class=\\\"cc-nps-selected-rating act-cc-nps-selected-rating desktop-hide\\\">0</span> </div> <span class=ccsdk-clearfix></span> <span class=\\\"option-left-rating-text radial-legend-left\\\">Not at all likely</span> <span class=\\\"option-midnps-rating-text radial-legend-mid\\\">Maybe</span> <span class=\\\"option-right-rating-text radial-legend-right\\\">Very likely</span> <input type=hidden value=\\\"\\\" class=option-number-input> </div> </div> </div> </div> \";\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container drop-cc-question-container\\\" data-required={{isRequired}} data-type=select data-id={{questionId}}> <div class=cc-question-container__text> <p> <span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=cc-question-container__content id={{questionId}}> <div class=cc-select-wrapper> <select name=sources id=sources class=\\\"cc-select cc-sdk-sources\\\" data-selection-value={{model}} placeholder=Select> {{options}} </select> </div> </div> </div>\";\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container drop-cc-question-container\\\" data-required={{isRequired}} data-type=select data-id={{questionId}}> <div class=cc-question-container__text> <p class=\\\"\\\"> <span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=cc-question-container__content id={{questionId}}> <div class=cc-select-wrapper> <select name=sources id=sources class=\\\"cc-select cc-sdk-sources\\\" placeholder=Select data-type=multiple> {{options}} </select> </div> </div> </div>\";\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=cc-question-container data-type=smile data-required={{isRequired}} data-id={{questionId}}> <div class=cc-question-container__text> <p> <span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=\\\"cc-question-container__content rating-color\\\" id={{questionId}}> <div class=cc-question-container__list> <div> <span class=\\\"option-smile-box cc-one\\\" data-rating=1></span> <span class=\\\"option-smile-box cc-two\\\" data-rating=2></span> <span class=\\\"option-smile-box cc-three\\\" data-rating=3></span> <span class=\\\"option-smile-box cc-four\\\" data-rating=4></span> <span class=\\\"option-smile-box cc-five\\\" data-rating=5></span> </div> <span class=\\\"option-left-rating-text option-left-rating-text-small-container-smile\\\">{{leftLabel}}</span> <span class=\\\"option-right-rating-text option-right-rating-text-small-container-smile\\\">{{rightLabel}}</span> </div> </div> </div>\";\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=cc-question-container data-type=smile data-required={{isRequired}} data-id={{questionId}}> <div class=cc-question-container__text> <p> <span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=\\\"cc-question-container__content rating-color\\\" id={{questionId}}> <div class=cc-question-container__list> <div> <span class=\\\"option-smile-box cc-five\\\" data-rating=5></span> <span class=\\\"option-smile-box cc-four\\\" data-rating=4></span> <span class=\\\"option-smile-box cc-three\\\" data-rating=3></span> <span class=\\\"option-smile-box cc-two\\\" data-rating=2></span> <span class=\\\"option-smile-box cc-one\\\" data-rating=1></span> </div> <span class=option-right-rating-text>{{leftLabel}}</span> <span class=option-left-rating-text>{{rightLabel}}</span> </div> </div> </div>\";\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=cc-question-container data-type=star data-required={{isRequired}} data-id={{questionId}}> <div class=cc-question-container__text> <p class=\\\"\\\"> <span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=\\\"cc-question-container__content rating-color\\\" id={{questionId}}> <div class=cc-question-container__list> <div> <span class=option-star-box data-rating=1></span> <span class=option-star-box data-rating=2></span> <span class=option-star-box data-rating=3></span> <span class=option-star-box data-rating=4></span> <span class=option-star-box data-rating=5></span> </div> <span class=\\\"option-left-rating-text option-left-rating-text-small-container-smile\\\">{{leftLabel}}</span> <span class=\\\"option-right-rating-text option-right-rating-text-small-container-smile\\\">{{rightLabel}}</span> </div> </div> </div>\";\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=cc-question-container data-required={{isRequired}} data-type=slider data-id={{questionId}}> <div class=cc-question-container__text> <p> <span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=\\\"cc-question-container__content rating-color cc-sdk-range-slider\\\" id={{questionId}}> <div class=cc-question-container__slider> <input type=range value={{min}} min={{min}} max={{max}} class=\\\"cc-sdk-range cc-blue\\\"> <div class=legend-container {{legendstyle}}> <span class=option-left-rating-text>{{minLabel}}{{min}}</span> <span class=option-right-rating-text>{{maxLabel}}{{max}}</span> <span class=\\\"slider-tip act-slider-tip\\\"></span> </div> </div> </div> </div>\";\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<li> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name={{qId}} id={{qId}}-img-service-{{labelFor}} value={{value}}> <label for={{qId}}-img-service-{{labelFor}}></label> </div> <span> <label for={{qId}}-img-service-{{labelFor}} class=\\\"option-yes-no {{labelFor}}\\\"> <img src={{image}} /> {{label}}</label> </span> </li>\";\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<li> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name={{qId}} id={{qId}}-service-{{labelFor}} value={{value}}> <label for={{qId}}-service-{{labelFor}}></label> </div> <span> <label for={{qId}}-service-{{labelFor}} class=\\\"option-yes-no {{labelFor}}\\\">{{label}}</label> </span> </li>\";\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<li> <div class=cc-checkbox> <input type=checkbox value={{value}} name=\\\"\\\" id=check-{{labelFor}}> <label for=check-{{labelFor}}> </label> </div> <span> <label for=check-{{labelFor}}>{{label}}</label> </span> </li>\";\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<li> <div class=cc-checkbox> <input type=checkbox value={{value}} name=\\\"\\\" id=check-{{labelFor}}> <label for=check-{{labelFor}}> </label> </div> <span> <label for=check-{{labelFor}}> <img src={{image}} /> {{label}}</label> </span> </li>\";\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container detail-box mobile-detail-box cc-thankyou-container\\\" id=cc-thankyou-container> <div class=cc-question-container__text> <p>{{question}}</p> <p class=\\\"cc-thankyou-powered {{branding}}\\\"><span class=cc-thankyou-logo></span>Delight powered by Cloudcherry</p> </div> <div class=cc-question-container__content> </div> </div>\";\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container single-line\\\" data-required={{isRequired}} data-type=date data-id={{questionId}}> <div class=cc-question-container__text> <p> <span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> <span class=cc-question-container__validation>{{validationHint}}</span> </div> <div class=\\\"cc-question-container__content date-container\\\"> <input type=text name=\\\"\\\" maxlength=2 id={{questionId}}-date placeholder=\\\"Date (DD)\\\" class=\\\"cc-sdk-form-control date-s\\\"> <input type=text name=\\\"\\\" maxlength=2 id={{questionId}}-month placeholder=\\\"Month (MM)\\\" class=\\\"cc-sdk-form-control date-s\\\"> <input type=text name=\\\"\\\" maxlength=4 id={{questionId}}-year placeholder=\\\"Year (YYYY)\\\" class=\\\"cc-sdk-form-control date-y\\\"> <div class=date-error>Invalid date</div> </div> </div>\";\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container drop-cc-question-container cc-language-selector\\\" data-required={{isRequired}} data-type=select data-id={{questionId}}> <div class=cc-question-container__text> <p> <span class=cc-question-container__required-label></span>Select language</p> <span class=cc-question-container__required>* Mandatory</span> </div> <div class=cc-question-container__content id={{questionId}}> <div class=cc-select-wrapper> <select name=sources id=sources class=\\\"cc-select cc-sdk-sources\\\" placeholder=Select> {{options}} </select> </div> </div> </div>\";\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar LanguageTextFilter_1 = __webpack_require__(5);\r\nvar filter_utils_1 = __webpack_require__(8);\r\nvar ConditionalTextFilter = /** @class */ (function () {\r\n    function ConditionalTextFilter() {\r\n    }\r\n    ConditionalTextFilter.filterText = function (surveyHandler, question) {\r\n        var conditionalText = question.text == null ? '' : LanguageTextFilter_1.LanguageTextFilter.translateQuestionText(surveyHandler, question);\r\n        if (question.text != null) {\r\n            var conditionalText_1 = question.text.split(':');\r\n            if (question.setName && question.text.indexOf(\":\") !== -1) {\r\n                conditionalText_1 = conditionalText_1[0] + ': <br><span class=\"text-normal\">' + conditionalText_1[1] + '</span>';\r\n            }\r\n            else {\r\n                conditionalText_1 = conditionalText_1[0];\r\n            }\r\n        }\r\n        if (question.leadingDisplayTexts == null) {\r\n            conditionalText = LanguageTextFilter_1.LanguageTextFilter.translateQuestionText(surveyHandler, question);\r\n            return conditionalText;\r\n        }\r\n        else if (question.leadingDisplayTexts.length == 0) {\r\n            conditionalText = LanguageTextFilter_1.LanguageTextFilter.translateQuestionText(surveyHandler, question);\r\n            return conditionalText;\r\n        }\r\n        else {\r\n            for (var _i = 0, _a = question.leadingDisplayTexts; _i < _a.length; _i++) {\r\n                var fOption = _a[_i];\r\n                if (fOption != null && fOption.filter != null && fOption.filter.filterquestions != null) {\r\n                    var iSatisfied = false;\r\n                    var iFailed = false;\r\n                    for (var _b = 0, _c = fOption.filter.filterquestions; _b < _c.length; _b++) {\r\n                        var filterByQuestion = _c[_b];\r\n                        if (filter_utils_1.isAnd(filterByQuestion)) {\r\n                            if (filter_utils_1.doesSatisfy(surveyHandler, filterByQuestion) && !iFailed) {\r\n                                iSatisfied = true;\r\n                            }\r\n                            else {\r\n                                iFailed = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                        else if (filter_utils_1.isOr(filterByQuestion)) {\r\n                            if (filter_utils_1.doesSatisfy(surveyHandler, filterByQuestion)) {\r\n                                iSatisfied = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (iSatisfied && !iFailed) {\r\n                        if (filter_utils_1.checkLanguage(surveyHandler, fOption)\r\n                            || (surveyHandler.ccsdk.config && surveyHandler.ccsdk.config.language\r\n                                && surveyHandler.ccsdk.config.language.toLowerCase().includes('default')\r\n                                && fOption.language === null)\r\n                            || (surveyHandler.ccsdk.config && !surveyHandler.ccsdk.config.language && fOption.language === null)) {\r\n                            var groupTitle = void 0;\r\n                            if (question.setName && conditionalText.indexOf(':') !== -1) {\r\n                                groupTitle = conditionalText.split(':')[0];\r\n                                conditionalText = groupTitle + ': <br><span class=\"text-normal\">' + fOption.text + '</span>';\r\n                            }\r\n                            else {\r\n                                conditionalText = fOption.text;\r\n                            }\r\n                        }\r\n                        conditionalText;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return conditionalText;\r\n    };\r\n    return ConditionalTextFilter;\r\n}());\r\nexports.ConditionalTextFilter = ConditionalTextFilter;\r\n\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n            t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar DomUtilities_1 = __webpack_require__(0);\r\n// import { ScrollBar } from './ScrollBar';\r\nvar Select_1 = __webpack_require__(9);\r\nvar Theme_1 = __webpack_require__(48);\r\nvar ConditionalFlowFilter_1 = __webpack_require__(10);\r\nvar Slider_1 = __webpack_require__(49);\r\nvar Constants_1 = __webpack_require__(1);\r\nvar DomSurvey = /** @class */ (function () {\r\n    function DomSurvey(ccsdk) {\r\n        this.trackSelects = [];\r\n        this.trackRadios = [];\r\n        this.currentQuestionListeners = [];\r\n        var self = this;\r\n        this.domListeners = [];\r\n        this.ccsdk = ccsdk;\r\n        this.qIndex = 0;\r\n        this.qResponse = {};\r\n        this.domSelectElements();\r\n        this.util = new DomUtilities_1.DomUtilities();\r\n        // self.scrollbar = new ScrollBar(\"data-cc-scrollbar\");\r\n        this.util.ready(function () {\r\n            // self.util.addClassAll(self.$popupContainer,'show-slide');\r\n        });\r\n    }\r\n    DomSurvey.prototype.setTheme = function (brandColor, time) {\r\n        var self = this;\r\n        this.util.ready(function () {\r\n            self.theme = new Theme_1.Theme(brandColor, time);\r\n        });\r\n    };\r\n    DomSurvey.prototype.setQIndex = function (index) {\r\n        this.qIndex = index;\r\n    };\r\n    DomSurvey.prototype.getQindex = function () {\r\n        return this.qIndex;\r\n    };\r\n    DomSurvey.prototype.domSelectElements = function () {\r\n        this.$questionContainer = document.querySelectorAll(\".cc-questions-container\");\r\n        this.$popupContainer = document.querySelectorAll(\".cc-popup-container\");\r\n        this.$popupContainer2 = document.querySelectorAll(\".cc-popup-container-2\");\r\n        this.$body = document.querySelectorAll(\"body\")[0];\r\n        // this.select = new Select();\r\n    };\r\n    DomSurvey.prototype.removePrevListener = function (id) {\r\n        for (var _i = 0, _a = this.domListeners; _i < _a.length; _i++) {\r\n            var listener = _a[_i];\r\n            if (listener.id == id) {\r\n                var index = this.domListeners.indexOf(listener);\r\n                window.ccsdkDebug ? console.log(\"removing listener\", id) : \"\";\r\n                window.ccsdkDebug\r\n                    ? console.log(\"removing listener index\", index)\r\n                    : \"\";\r\n                this.util.removeListener(this.$body, listener.type, listener.internalHandler);\r\n                if (index > -1) {\r\n                    this.domListeners.splice(index, 1);\r\n                }\r\n                window.ccsdkDebug ? console.log(this.domListeners) : \"\";\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    DomSurvey.prototype.setupListeners = function () {\r\n        var self = this;\r\n        var startSurvey = this.util.initListener(\"click\", \".act-cc-survey-start\", function () {\r\n            if (!self.util.hasClass(self.$startBtn, \"disabled\") &&\r\n                self.ccsdk.surveyStatus != \"minimized\") {\r\n                var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n                document.dispatchEvent(onSurveyClickEvent);\r\n                self.util.addClass(self.$startBtn, \"disabled\");\r\n                self.showLoader();\r\n                self.startSurvey();\r\n            }\r\n            else {\r\n                self.initSurveyDom();\r\n            }\r\n        });\r\n        this.domListeners.push(startSurvey);\r\n        startSurvey.internalHandler = this.util.listener(this.$body, startSurvey.type, startSurvey.id, startSurvey.cb);\r\n        var nextQue = this.util.initListener(\"click\", \".act-cc-button-next\", function () {\r\n            // alert(\"working\");\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            self.nextQuestion();\r\n        });\r\n        this.domListeners.push(nextQue);\r\n        nextQue.internalHandler = this.util.listener(this.$body, nextQue.type, nextQue.id, nextQue.cb);\r\n        var prevQue = this.util.initListener(\"click\", \".act-cc-button-prev\", function () {\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            self.prevQuestion();\r\n        });\r\n        this.domListeners.push(prevQue);\r\n        prevQue.internalHandler = this.util.listener(this.$body, prevQue.type, prevQue.id, prevQue.cb);\r\n        var closeSurvey = this.util.initListener(\"click\", \".act-cc-button-close\", function () {\r\n            var onSurveyCloseEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLOSE_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyCloseEvent);\r\n            self.ccsdk.survey.answers = {};\r\n            self.trackSelects = [];\r\n            self.destroyListeners();\r\n            self.util.trigger(document, \"ccclose\", undefined);\r\n            self.bodyElement = (document.getElementsByTagName(\"body\")[0]);\r\n            self.util.removeClass(self.bodyElement, \"blurr\");\r\n            self.ccsdk.survey.destroy();\r\n        });\r\n        this.domListeners.push(closeSurvey);\r\n        closeSurvey.internalHandler = this.util.listener(this.$body, closeSurvey.type, closeSurvey.id, closeSurvey.cb);\r\n        var minSurvey = this.util.initListener(\"click\", \".act-cc-button-minimize\", function () {\r\n            self.minimizeSurvey();\r\n        });\r\n        this.domListeners.push(minSurvey);\r\n        minSurvey.internalHandler = this.util.listener(self.$body, minSurvey.type, minSurvey.id, minSurvey.cb);\r\n    };\r\n    DomSurvey.prototype.minimizeSurvey = function () {\r\n        var _this = this;\r\n        // this.$popupContainer[0].removeClass('');\r\n        this.util.removeClass(this.$popupContainer2[0], \"hide-right-left\");\r\n        this.util.addClass(this.$popupContainer2[0], \"hide-right-left\");\r\n        setTimeout(function () {\r\n            _this.util.removeClass(_this.$popupContainer2[0], \"show-slide\");\r\n        }, 200);\r\n        this.util.removeClass(this.$popupContainer[0], \"hide-right-left\");\r\n        this.util.addClass(this.$popupContainer[0], \"hide-right-left\");\r\n        setTimeout(function () {\r\n            _this.util.addClass(_this.$popupContainer[0], \"show-slide\");\r\n        }, 200);\r\n        this.ccsdk.surveyStatus = \"minimized\";\r\n        var resumeText = this.ccsdk.config.resumeButtonText\r\n            ? this.ccsdk.config.resumeButtonText\r\n            : \"Resume\";\r\n        this.$startBtn.innerHTML = resumeText;\r\n        this.util.removeClass(this.$startBtn, \"disabled\");\r\n        //update all start btns\r\n        // Array.prototype.forEach.call($startBtn, (el, i) => {\r\n        //   el.innerHTML = resumeText;\r\n        // });\r\n    };\r\n    DomSurvey.prototype.destroyListeners = function () {\r\n        // (window as any).ccsdkDebug?console.log(\"Removing all listeners\"):'';\r\n        for (var _i = 0, _a = this.domListeners; _i < _a.length; _i++) {\r\n            var listener = _a[_i];\r\n            this.util.removeListener(this.$body, listener.type, listener.internalHandler);\r\n        }\r\n        for (var _b = 0, _c = this.ccsdk.survey.domListeners; _b < _c.length; _b++) {\r\n            var listener = _c[_b];\r\n            this.util.removeListener(this.$body, listener.type, listener.internalHandler);\r\n        }\r\n        if (this.ccsdk.survey.languageSelect) {\r\n            this.ccsdk.survey.languageSelect.destroyListeners();\r\n        }\r\n        if (this.select) {\r\n            this.select.destroyListeners();\r\n        }\r\n    };\r\n    DomSurvey.prototype.startSurvey = function () {\r\n        this.ccsdk.survey.cancelKillWelcomeQuestion();\r\n        this.ccsdk.getSurveyData();\r\n    };\r\n    DomSurvey.prototype.initSurveyDom = function () {\r\n        this.domSelectElements();\r\n        // (window as any).ccsdkDebug?console.log(\"click in setup listener survey start\"):'';\r\n        this.util.addClassAll(this.$popupContainer2, \"show-slide\");\r\n        this.util.removeClass(this.$popupContainer[0], \"show-slide\");\r\n        if (this.ccsdk.surveyStatus == \"minimized\") {\r\n            //resume survey\r\n        }\r\n        else {\r\n            //start survey\r\n            //check if only one language is configured\r\n            window.ccsdkDebug ? console.log(this.ccsdk.surveyData) : \"\";\r\n            if (this.ccsdk.surveyData.translated === null ||\r\n                (this.ccsdk.surveyData.translated &&\r\n                    Object.keys(this.ccsdk.surveyData.translated).length < 1)) {\r\n                this.loadFirstQuestion();\r\n            }\r\n            else {\r\n                this.ccsdk.survey.displayLanguageSelector();\r\n            }\r\n        }\r\n    };\r\n    DomSurvey.prototype.updateProgress = function () {\r\n        var el = document.querySelectorAll(\"#progress-line\")[0];\r\n        if (this.ccsdk && this.ccsdk.tracking) {\r\n            this.ccsdk.tracking.trackEvent(\"Questions Answered\", {\r\n                token: this.ccsdk.surveyToken,\r\n                data: {\r\n                    name: this.qIndex + \"/\" + this.ccsdk.survey.questionsToDisplay.length,\r\n                    action: this.currentQuestionId\r\n                }\r\n            }, null, null);\r\n        }\r\n        el.style.width =\r\n            (this.qIndex / this.ccsdk.survey.questionsToDisplay.length) * 100 + \"%\";\r\n    };\r\n    DomSurvey.prototype.loadFirstQuestion = function () {\r\n        // applyRuleToAllEl(this.$questionContainer, );\r\n        // this.util.removeClassAll(this.$questionContainer, 'show-slide');\r\n        // this.util.addClass(this.$questionContainer, 'show-slide');\r\n        this.loadQuestionSpecifics(this.$questionContainer, 0);\r\n        this.util.removeClassAll(this.$questionContainer[0].firstChild, \"show-slide\");\r\n        this.util.addClass(this.$questionContainer[0].firstChild, \"show-slide\");\r\n        var leftIcon = this.util.get(\".act-cc-button-prev\");\r\n        this.util.addClassAll(leftIcon, \"hide-slide\");\r\n        var onSurveyQuestionEvent = new CustomEvent(Constants_1.Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken);\r\n        document.dispatchEvent(onSurveyQuestionEvent);\r\n    };\r\n    DomSurvey.prototype.nextQuestion = function () {\r\n        window.ccsdkDebug\r\n            ? console.log(\"next question q response init\", this.qResponse)\r\n            : \"\";\r\n        // console.log('next question q response init',this.qResponse);\r\n        //empty the domListner\r\n        // this.util.removeAllListeners(this.domListeners);\r\n        var onSurveyQuestionEvent = new CustomEvent(Constants_1.Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken);\r\n        document.dispatchEvent(onSurveyQuestionEvent);\r\n        //submit the current response\r\n        // (window as any).ccsdkDebug?console.log('submit ',this.qResponse.type, this.qResponse):'';\r\n        var isRequired = false;\r\n        var q = this.$questionContainer[0].firstChild;\r\n        // (window as any).ccsdkDebug?console.log(this.$questionContainer):'';\r\n        var span = this.$questionContainer[0].firstChild.querySelectorAll(\".cc-question-container__required\")[0];\r\n        var validationSpan = this.$questionContainer[0].firstChild.querySelectorAll(\".cc-question-container__validation\")[0];\r\n        if (span)\r\n            this.util.removeClass(span, \"show\");\r\n        if (validationSpan)\r\n            this.util.removeClass(validationSpan, \"show\");\r\n        //check if question is required\r\n        isRequired =\r\n            q.getAttribute(\"data-required\").toLowerCase() == \"true\" ? true : false;\r\n        // console.log('required check',Object.keys(this.qResponse).length, isRequired, this.qResponse);\r\n        // if (isRequired && Object.keys(this.qResponse).length === 0) {\r\n        if (isRequired && Object.keys(this.qResponse).length === 0) {\r\n            if (span) {\r\n                this.util.addClass(span, \"show\");\r\n                this.util.removeClass(span, \"hide\");\r\n            }\r\n            return;\r\n        }\r\n        else if (isRequired && !this.qResponse.text && !this.qResponse.number) {\r\n            if (span) {\r\n                this.util.addClass(span, \"show\");\r\n                this.util.removeClass(span, \"hide\");\r\n            }\r\n            return;\r\n        }\r\n        else {\r\n            if (span) {\r\n                this.util.removeClass(span, \"show\");\r\n                this.util.addClass(span, \"hide\");\r\n            }\r\n            //check if validationRegex is set and is fulfilled\r\n            var validationRegex = this.ccsdk.survey.questionsToDisplay[this.qIndex]\r\n                .validationRegex;\r\n            if (validationRegex) {\r\n                window.ccsdkDebug\r\n                    ? console.log(\"validationRegex\", validationRegex)\r\n                    : \"\";\r\n                window.ccsdkDebug\r\n                    ? console.log(\"response\", this.qResponse)\r\n                    : \"\";\r\n                var pattern = validationRegex.match(new RegExp(\"^/(.*?)/([gimy]*)$\"));\r\n                var regex = new RegExp(validationRegex);\r\n                if (this.qResponse.text) {\r\n                    if (regex.test(this.qResponse.text)) {\r\n                        this.util.removeClass(validationSpan, \"show\");\r\n                        this.util.addClass(validationSpan, \"hide\");\r\n                    }\r\n                    else {\r\n                        if (validationSpan) {\r\n                            this.util.addClass(validationSpan, \"show\");\r\n                            this.util.removeClass(validationSpan, \"hide\");\r\n                        }\r\n                        return;\r\n                    }\r\n                }\r\n                else if (this.qResponse.number) {\r\n                    window.ccsdkDebug\r\n                        ? console.log(\"test regex text\", regex.test(this.qResponse.number))\r\n                        : \"\";\r\n                    if (regex.test(this.qResponse.number)) {\r\n                        this.util.removeClass(validationSpan, \"show\");\r\n                        this.util.addClass(validationSpan, \"hide\");\r\n                    }\r\n                    else {\r\n                        if (validationSpan) {\r\n                            this.util.addClass(validationSpan, \"show\");\r\n                            this.util.removeClass(validationSpan, \"hide\");\r\n                        }\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            if (this.qResponse !== \"undefined\") {\r\n                // (window as any).ccsdkDebug?console.log('qindex ' + this.qIndex):'';\r\n                if (typeof this.ccsdk.survey.answers[this.currentQuestionId] !==\r\n                    \"undefined\" &&\r\n                    this.qResponse.type ==\r\n                        this.ccsdk.survey.answers[this.currentQuestionId].type &&\r\n                    this.qResponse.text ==\r\n                        this.ccsdk.survey.answers[this.currentQuestionId].text &&\r\n                    this.qResponse.number ==\r\n                        this.ccsdk.survey.answers[this.currentQuestionId].number) {\r\n                    // console.log('no submit');\r\n                    //don't submit if already submitted.\r\n                }\r\n                else if (typeof this.ccsdk.survey.answers[this.currentQuestionId] !==\r\n                    \"undefined\" &&\r\n                    !this.qResponse.text &&\r\n                    !this.qResponse.number) {\r\n                    // console.log('no submit 2');\r\n                    //previous entry filled\r\n                }\r\n                else {\r\n                    // (window as any).ccsdkDebug?console.log('submitting ' + this.currentQuestionId):'';\r\n                    // console.log(this.qResponse);\r\n                    var qId = this.qResponse.questionId\r\n                        ? this.qResponse.questionId\r\n                        : this.currentQuestionId;\r\n                    this.submitQuestion(this.qIndex, this.qResponse, this.qResponse.type, qId);\r\n                    //save response\r\n                    this.ccsdk.survey.answers[this.currentQuestionId] = JSON.parse(JSON.stringify(this.qResponse));\r\n                }\r\n            }\r\n        }\r\n        ConditionalFlowFilter_1.ConditionalFlowFilter.filterQuestion(this.ccsdk.survey, this.ccsdk.survey.questionsToDisplay[this.qIndex]);\r\n        // console.log(this.ccsdk.survey.questionsToDisplay);\r\n        //go to next question\r\n        this.qIndex++;\r\n        //reset the post parameters\r\n        // this.qResponse = typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined' ? JSON.parse(JSON.stringify(this.ccsdk.survey.answers[this.currentQuestionId])) : {};\r\n        // this.qResponse = {};\r\n        var nextButtonState = \"initial\";\r\n        // (window as any).ccsdkDebug?console.log(this.$questionContainer):'';\r\n        var nextQ = this.$questionContainer;\r\n        // (window as any).ccsdkDebug?console.log(this.qIndex):'';\r\n        if (this.qIndex == this.ccsdk.survey.questionsToDisplay.length) {\r\n            //Last run to show thank you message\r\n            var leftIcon = this.util.get(\".act-cc-button-prev\");\r\n            var rightIcon = this.util.get(\".cc-icon-right\");\r\n            var nextIcon = this.util.get(\".act-cc-button-next\");\r\n            this.util.addClassAll(leftIcon, \"hide\");\r\n            this.util.addClassAll(rightIcon, \"hide\");\r\n            this.util.addClassAll(nextIcon, \"hide\");\r\n            this.util.trigger(document, \"ccdone\", undefined);\r\n            this.util.removeClass(this.$questionContainer[0].firstChild, \"show-slide\");\r\n            this.updateProgress();\r\n        }\r\n        else {\r\n            if (this.qIndex > this.ccsdk.survey.questionsToDisplay.length) {\r\n                //reset the counter to show first question\r\n                this.qIndex = 0;\r\n            }\r\n            //repopulate qResponse based on answers.\r\n            // ( window as any ).ccsdkDebug ? console.log( 'previous answer', this.ccsdk.survey.answers[ this.currentQuestionId ] ) : '';\r\n            this.qResponse =\r\n                typeof this.ccsdk.survey.answers[this.currentQuestionId] !== \"undefined\"\r\n                    ? JSON.parse(JSON.stringify(this.ccsdk.survey.answers[this.currentQuestionId]))\r\n                    : {};\r\n            // this.util.removeClassAll(this.$questionContainer[0].firstChild, 'show-slide');\r\n            // this.util.addClass(nextQ, 'show-slide');\r\n            this.updateProgress();\r\n            this.loadQuestionSpecifics(nextQ, this.qIndex);\r\n            this.util.addClass(this.$questionContainer[0].firstChild, \"show-slide\");\r\n            // if(nextButtonState === 'dirty'){\r\n            // this.submitQuestion(this.qIndex, 'test', 'multiline');\r\n            // }\r\n        }\r\n        if (this.qIndex == 0) {\r\n            var leftIcon = this.util.get(\".act-cc-button-prev\");\r\n            this.util.addClassAll(leftIcon, \"hide-slide\");\r\n        }\r\n        else {\r\n            var leftIcon = this.util.get(\".act-cc-button-prev\");\r\n            this.util.addClass(leftIcon[0], \"show-slide\");\r\n            this.util.removeClass(leftIcon[0], \"hide-slide\");\r\n        }\r\n        // ( window as any ).ccsdkDebug ? console.log( 'next question q response end', this.qResponse ) : '';\r\n        // this.qResponse = {};\r\n    };\r\n    DomSurvey.prototype.prevQuestion = function () {\r\n        this.submitQuestion(this.qIndex, __assign({}, this.qResponse), this.qResponse.type, this.currentQuestionId);\r\n        this.ccsdk.survey.answers[this.currentQuestionId] = JSON.parse(JSON.stringify(this.qResponse));\r\n        this.qIndex--;\r\n        if (!this.ccsdk.survey.questionsToDisplay.length || this.qIndex < 0) {\r\n            this.qIndex = 0;\r\n            return;\r\n            // this.qIndex = this.$questionContainer.length - 1;\r\n        }\r\n        // ( window as any ).ccsdkDebug ? console.log( this.qIndex ) : '';\r\n        var onSurveyQuestionEvent = new CustomEvent(Constants_1.Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken);\r\n        document.dispatchEvent(onSurveyQuestionEvent);\r\n        //re populate qResponse based on answers.\r\n        // this.util.removeClassAll(this.$questionContainer,'show-slide');\r\n        this.loadQuestionSpecifics(null, this.qIndex);\r\n        this.qResponse =\r\n            typeof this.ccsdk.survey.answers[this.currentQuestionId] !== \"undefined\"\r\n                ? JSON.parse(JSON.stringify(this.ccsdk.survey.answers[this.currentQuestionId]))\r\n                : {};\r\n        window.ccsdkDebug\r\n            ? console.log(\"prevQuestion qResponse\", this.qResponse)\r\n            : \"\";\r\n        this.util.addClass(this.$questionContainer[0].firstChild, \"show-slide\");\r\n        this.updateProgress();\r\n        if (this.qIndex == 0) {\r\n            var leftIcon = this.util.get(\".act-cc-button-prev\");\r\n            this.util.addClassAll(leftIcon, \"hide-slide\");\r\n            this.util.removeClassAll(leftIcon, \"show-slide\");\r\n        }\r\n    };\r\n    DomSurvey.prototype.showLoader = function () {\r\n        var $loader = document.querySelectorAll(\".cc-loaderimg\")[0];\r\n        this.util.addClass($loader, \"show\");\r\n        this.util.removeClass($loader, \"hide\");\r\n    };\r\n    DomSurvey.prototype.hideLoader = function () {\r\n        var $loader = document.querySelectorAll(\".cc-loaderimg\")[0];\r\n        this.util.removeClass($loader, \"show\");\r\n        this.util.addClass($loader, \"hide\");\r\n    };\r\n    DomSurvey.prototype.appendInBody = function (html) {\r\n        document.querySelectorAll(\"body\")[0].insertAdjacentHTML(\"afterbegin\", html);\r\n        //force update domSelect\r\n        this.domSelectElements();\r\n    };\r\n    DomSurvey.prototype.replaceInQuestionsContainer = function (html) {\r\n        this.$questionContainer[0].innerHTML = html;\r\n        this.domSelectElements();\r\n    };\r\n    DomSurvey.prototype.appendInQuestionsContainer = function (html) {\r\n        document\r\n            .querySelectorAll(\".cc-questions-container\")[0]\r\n            .insertAdjacentHTML(\"afterbegin\", html);\r\n        //force update domSelect\r\n        this.domSelectElements();\r\n    };\r\n    DomSurvey.prototype.showWelcomeContainer = function () {\r\n        var _this = this;\r\n        setTimeout(function () {\r\n            var startContainer = (document.querySelectorAll(\".act-cc-welcome-question-box\")[0]);\r\n            var bodyElement = document.getElementsByTagName(\"body\")[0];\r\n            _this.util.addClass(startContainer, \"show-slide\");\r\n            // this.util.addClass( bodyElement, \"blurr\" );\r\n        }, 200);\r\n        // console.debug()\r\n        this.$startBtn = document.querySelectorAll(\".act-cc-survey-start\")[0];\r\n    };\r\n    DomSurvey.prototype.showLanguageSelector = function () {\r\n        var _this = this;\r\n        setTimeout(function () {\r\n            var startContainer = (document.querySelectorAll(\".cc-language-selector\")[0]);\r\n            var bodyElement = document.getElementsByTagName(\"body\")[0];\r\n            _this.util.addClass(startContainer, \"show-slide\");\r\n            // this.util.addClass( bodyElement, \"blurr\" );\r\n        }, 200);\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists(\".cc-language-select\", this.domListeners)) {\r\n            // return;\r\n            // ( window as any ).ccsdkDebug ? console.log( \"language select - previous listeners exists\" ) : '';\r\n            this.removePrevListener(\".cc-language-select\");\r\n        }\r\n        var languageSelect = this.util.initListener(\"click\", \".cc-language-select\", function () {\r\n            // let onSurveyClickEvent = new CustomEvent(Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            // document.dispatchEvent(onSurveyClickEvent);\r\n            //select language show next question.\r\n            // self.startSurvey();\r\n            self.ccsdk.config.language = \"default\";\r\n            self.ccsdk.config.language = \"\"; //language selection from menu then show first question\r\n        });\r\n        languageSelect.internalHandler = this.util.listener(this.$body, languageSelect.type, languageSelect.id, languageSelect.cb);\r\n    };\r\n    DomSurvey.prototype.getSurveyContainer = function (token) {\r\n        return document.querySelectorAll(\"#\" + token + \"-survey\")[0];\r\n    };\r\n    DomSurvey.prototype.getWelcomeContainer = function (token) {\r\n        return document.querySelectorAll(\"#\" + token + \"-welcome\")[0];\r\n    };\r\n    DomSurvey.prototype.loadQuestionSpecifics = function (q, index) {\r\n        var self = this;\r\n        this.$questionContainer[0].innerHTML = \"\";\r\n        var compiledTemplate = this.ccsdk.survey.compileTemplate(this.ccsdk.survey.questionsToDisplay[index]);\r\n        this.$questionContainer[0].innerHTML += compiledTemplate;\r\n        console.log(compiledTemplate);\r\n        var qType = this.$questionContainer[0].firstChild.getAttribute(\"data-type\");\r\n        var qId = this.$questionContainer[0].firstChild.getAttribute(\"data-id\");\r\n        this.qResponse = {};\r\n        // (window as any).ccsdkDebug?console.log(\"QTYIPE AND QID \" , qType, qId):'';\r\n        this.currentQuestionId = qId.substring(2, qId.length);\r\n        // console.log( 'qtype', qType )\r\n        switch (qType) {\r\n            case \"scale\":\r\n                var allOptions1 = document.querySelectorAll(\"#\" + qId + \" .option-number-item\");\r\n                var optionWidth1 = 100 / allOptions1.length - 0.6;\r\n                // (window as any).ccsdkDebug?console.log(\"Option width\", allOptions1, optionWidth1.toFixed(2)):'';\r\n                // self.util.css(allOptions1 , 'width',  optionWidth1.toFixed(1) + '%');\r\n                this.setupListenersQuestionScale(index, qId);\r\n                break;\r\n            case \"nps\":\r\n                this.setupListenersQuestionNPS(index, qId);\r\n                break;\r\n            case \"multiline\":\r\n                this.setupListenersQuestionMultiline(index, qId);\r\n                break;\r\n            case \"select\":\r\n                if (typeof this.select !== \"undefined\") {\r\n                    this.select.destroyListeners();\r\n                }\r\n                this.setupListenersQuestionSelect(index, qId);\r\n                break;\r\n            case \"radio\":\r\n                this.setupListenersQuestionRadio(index, qId);\r\n                break;\r\n            case \"radioImage\":\r\n                this.setupListenersQuestionRadioImage(index, qId);\r\n                break;\r\n            case \"checkbox\":\r\n                this.setupListenersQuestionCheckbox(index, qId);\r\n                break;\r\n            case \"star\":\r\n                this.setupListenersQuestionStar(index, qId);\r\n                break;\r\n            case \"smile\":\r\n                this.setupListenersQuestionSmile(index, qId);\r\n                break;\r\n            case \"csat\":\r\n                this.setupListenersQuestionCsat(index, qId);\r\n                break;\r\n            case \"slider\":\r\n                this.setupListenersQuestionSlider(index, qId);\r\n                break;\r\n            case \"singleline\":\r\n                this.setupListenersQuestionSingleline(index, qId);\r\n                break;\r\n            case \"number\":\r\n                this.setupListenersQuestionNumber(index, qId);\r\n                break;\r\n            case \"date\":\r\n                this.setupListenersForDate(index, qId);\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n    // question specific listeners\r\n    DomSurvey.prototype.setupListenersQuestionScale = function (index, qId) {\r\n        var self = this;\r\n        var selectedRating = (document.querySelectorAll(\"#\" + qId + \" .cc-nps-selected-rating\")[0]);\r\n        var selectedRating1 = (document.querySelectorAll(\"#\" + qId + \" .cc-nps-selected-rating\")[1]);\r\n        //add id too.\r\n        if (this.util.checkIfListenerExists(\"#\" + qId + \" .option-number-item\", this.domListeners)) {\r\n            // return;\r\n            // ( window as any ).ccsdkDebug ? console.log( \"scale question - previous listeners exists\" ) : '';\r\n            this.removePrevListener(\"#\" + qId + \" .option-number-item\");\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        // ( window as any ).ccsdkDebug ? console.log( 'scale question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n            this.ccsdk.survey.answers[questionId] !== \"\") {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            var previousSelection = document.querySelectorAll(\"#\" + qId + ' .option-number-item[data-rating=\"' + previousValue + '\"]')[0];\r\n            // ( window as any ).ccsdkDebug ? console.log( 'scale previous selection', previousSelection ) : '';\r\n            if (typeof previousSelection !== \"undefined\") {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                self.qResponse.type = \"scale\";\r\n                self.qResponse.text = null;\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.questionId = qId;\r\n                selectedRating.innerHTML = previousValue;\r\n                selectedRating1.innerHTML = previousValue;\r\n            }\r\n        }\r\n        var ref = this.util.initListener(\"click\", \"#\" + qId + \" .option-number-item\", function () {\r\n            var allOptions = document.querySelectorAll(\"#\" + qId + \" .option-number-item\");\r\n            var rating = this.getAttribute(\"data-rating\");\r\n            self.util.removeClassAll(allOptions, \"selected\");\r\n            self.util.addClass(this, \"selected\");\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Scale selected',rating):'';\r\n            self.qResponse.type = \"scale\";\r\n            self.qResponse.text = null;\r\n            self.qResponse.number = rating;\r\n            self.qResponse.questionId = qId;\r\n            selectedRating.innerHTML = \"\" + rating;\r\n            selectedRating1.innerHTML = \"\" + rating;\r\n            //move to next question automagically\r\n            // alert('calling next questions inside scale');\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n            // self.util.trigger(document,'q-answered', {\r\n            //   index : index,\r\n            //   rating : rating,\r\n            //   type : 'scale'\r\n            // });\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionNPS = function (index, qId) {\r\n        var self = this;\r\n        var selectedRating = (document.querySelectorAll(\"#\" + qId + \" .cc-nps-selected-rating\")[0]);\r\n        var allOptions = document.querySelectorAll(\"#\" + qId + \" .option-number-item\");\r\n        //add id too.\r\n        if (this.util.checkIfListenerExists(\"#\" + qId + \" .option-number-item\", this.domListeners)) {\r\n            //remove listeners\r\n            // ( window as any ).ccsdkDebug ? console.log( \"nps question - previous listeners exists\" ) : '';\r\n            this.removePrevListener(\"#\" + qId + \" .option-number-item\");\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug\r\n            ? console.log(\"nps question\", this.ccsdk.survey.answers[questionId])\r\n            : \"\";\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n            this.ccsdk.survey.answers[questionId] !== \"\") {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            var previousSelection = document.querySelectorAll(\"#\" + qId + ' .option-number-item[data-rating=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug\r\n                ? console.log(\"nps previous selection\", previousSelection)\r\n                : \"\";\r\n            if (typeof previousSelection !== \"undefined\") {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                var $mobileRating = document.querySelectorAll(\".act-cc-nps-selected-rating\")[0];\r\n                $mobileRating.innerHTML = previousValue;\r\n                self.qResponse.type = \"nps\";\r\n                self.qResponse.text = null;\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        // (window as any).ccsdkDebug?console.log(self.domListeners):'';\r\n        var ref = this.util.initListener(\"click\", \"#\" + qId + \" .option-number-item\", function () {\r\n            var rating = this.getAttribute(\"data-rating\");\r\n            self.util.removeClassAll(allOptions, \"selected\");\r\n            self.util.addClass(this, \"selected\");\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Scale selected',rating):'';\r\n            self.qResponse.type = \"nps\";\r\n            self.qResponse.text = null;\r\n            self.qResponse.number = rating;\r\n            self.qResponse.questionId = qId;\r\n            selectedRating.innerHTML = \"\" + rating;\r\n            //move to next question automagically\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            // alert('calling next questions inside scale');\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n            // self.util.trigger(document,'q-answered', {\r\n            //   index : index,\r\n            //   rating : rating,\r\n            //   type : 'scale'\r\n            // });\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionCheckbox = function (index, qId) {\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists(\"#\" + qId + \" .cc-checkbox\", this.domListeners)) {\r\n            // return;\r\n            window.ccsdkDebug\r\n                ? console.log(\"checkbox question - previous listeners exists\")\r\n                : \"\";\r\n            this.removePrevListener(\"#\" + qId + \" .cc-checkbox\");\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug\r\n            ? console.log(\"radio question\", this.ccsdk.survey.answers[questionId])\r\n            : \"\";\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n            this.ccsdk.survey.answers[questionId] !== \"\") {\r\n            var previousValues = this.ccsdk.survey.answers[questionId].text;\r\n            if (previousValues) {\r\n                previousValues = previousValues.split(\",\");\r\n                for (var _i = 0, previousValues_1 = previousValues; _i < previousValues_1.length; _i++) {\r\n                    var previousValue = previousValues_1[_i];\r\n                    var previousSelection = document.querySelectorAll(\"#\" + qId + ' input[value=\"' + previousValue + '\"]')[0];\r\n                    window.ccsdkDebug\r\n                        ? console.log(\"radio previous selection\", previousSelection)\r\n                        : \"\";\r\n                    if (typeof previousSelection !== \"undefined\") {\r\n                        this.util.addClass(previousSelection, \"selected\");\r\n                        previousSelection.setAttribute(\"checked\", \"checked\");\r\n                        self.qResponse.type = \"checkbox\";\r\n                        self.qResponse.text = previousValue;\r\n                        self.qResponse.number = null;\r\n                        self.qResponse.questionId = qId;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        var ref = this.util.initListener(\"click\", \"#\" + qId + \" .cc-checkbox\", function () {\r\n            // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox input');\r\n            // let rating : number = this.querySelectorAll('input')[0].value;\r\n            var rating = [].filter\r\n                .call(document.querySelectorAll(\"#\" + qId + \" .cc-checkbox input\"), function (c) {\r\n                return c.checked;\r\n            })\r\n                .map(function (c) {\r\n                return c.value;\r\n            })\r\n                .join(\",\");\r\n            window.ccsdkDebug\r\n                ? console.log(\"Checkbox selected\", rating)\r\n                : \"\";\r\n            self.qResponse.type = \"checkbox\";\r\n            self.qResponse.text = rating;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n            //move to next question automagically\r\n            // self.nextQuestion();\r\n        });\r\n        this.domListeners.push(ref);\r\n        var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n        document.dispatchEvent(onSurveyClickEvent);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionRadio = function (index, qId) {\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists(\"#\" + qId + \" .cc-checkbox input\", this.domListeners)) {\r\n            // return;\r\n            //remove listeners\r\n            window.ccsdkDebug\r\n                ? console.log(\"radio question - previous listeners exists\")\r\n                : \"\";\r\n            this.removePrevListener(\"#\" + qId + \" .cc-checkbox input\");\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug\r\n            ? console.log(\"radio question\", this.ccsdk.survey.answers[questionId])\r\n            : \"\";\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n            this.ccsdk.survey.answers[questionId] !== \"\") {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].text;\r\n            var previousSelection = document.querySelectorAll(\"#\" + qId + ' input[value=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug\r\n                ? console.log(\"radio previous selection\", previousSelection)\r\n                : \"\";\r\n            if (typeof previousSelection !== \"undefined\") {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                previousSelection.setAttribute(\"checked\", \"checked\");\r\n                self.qResponse.type = \"radio\";\r\n                self.qResponse.text = previousValue;\r\n                self.qResponse.number = null;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener(\"click\", \"#\" + qId + \" .cc-checkbox input\", function () {\r\n            // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox');\r\n            var rating = this.value;\r\n            // self.util.removeClassAll(allOptions, \"selected\");\r\n            // self.util.addClass(this, \"selected\");\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\r\n            self.qResponse.type = \"radio\";\r\n            self.qResponse.text = rating;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            //move to next question automagically\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionRadioImage = function (index, qId) {\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists(\"#\" + qId + \" .cc-checkbox input\", this.domListeners)) {\r\n            window.ccsdkDebug\r\n                ? console.log(\"radio image question - previous listeners exists\")\r\n                : \"\";\r\n            this.removePrevListener(\"#\" + qId + \" .cc-checkbox input\");\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug\r\n            ? console.log(\"radio image question\", this.ccsdk.survey.answers[questionId])\r\n            : \"\";\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n            this.ccsdk.survey.answers[questionId] !== \"\") {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].text;\r\n            var previousSelection = document.querySelectorAll(\"#\" + qId + ' input[value=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug\r\n                ? console.log(\"radio image previous selection\", previousSelection)\r\n                : \"\";\r\n            if (typeof previousSelection !== \"undefined\") {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                previousSelection.setAttribute(\"checked\", \"checked\");\r\n                self.qResponse.type = \"radioImage\";\r\n                self.qResponse.text = previousValue;\r\n                self.qResponse.number = null;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener(\"click\", \"#\" + qId + \" .cc-checkbox input\", function () {\r\n            // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox');\r\n            var rating = this.value;\r\n            // self.util.removeClassAll(allOptions, \"selected\");\r\n            // self.util.addClass(this, \"selected\");\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\r\n            self.qResponse.type = \"radioImage\";\r\n            self.qResponse.text = rating;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            //move to next question automagically\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionStar = function (index, qId) {\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists(\"#\" + qId + \" .option-star-box\", this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug\r\n                ? console.log(\"smile question - previous listeners exists\")\r\n                : \"\";\r\n            this.removePrevListener(\"#\" + qId + \" .option-star-box\");\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug\r\n            ? console.log(\"star question\", this.ccsdk.survey.answers[questionId])\r\n            : \"\";\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n            this.ccsdk.survey.answers[questionId] !== \"\") {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            var previousSelection = document.querySelectorAll(\"#\" + qId + ' .option-star-box[data-rating=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug\r\n                ? console.log(\"star previous selection\", previousSelection)\r\n                : \"\";\r\n            if (typeof previousSelection !== \"undefined\" &&\r\n                previousSelection != null) {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                self.qResponse.type = \"star\";\r\n                self.qResponse.text = null;\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener(\"click\", \"#\" + qId + \" .option-star-box\", function () {\r\n            var allOptions = document.querySelectorAll(\"#\" + qId + \" .option-star-box\");\r\n            var rating = this.getAttribute(\"data-rating\");\r\n            self.util.removeClassAll(allOptions, \"selected\");\r\n            self.util.addClass(this, \"selected\");\r\n            //select previous sibling\r\n            // let child : any = this.previousSibling;\r\n            // while( ( child = child.previousSibling) != null ){\r\n            //   self.util.addClass(child, \"selected\");\r\n            // }\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\r\n            self.qResponse.type = \"star\";\r\n            self.qResponse.text = null;\r\n            self.qResponse.number = rating;\r\n            self.qResponse.questionId = qId;\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            //move to next question automagically\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionSmile = function (index, qId) {\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists(\"#\" + qId + \" .option-smile-box\", this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug\r\n                ? console.log(\"smile question - previous listeners exists\")\r\n                : \"\";\r\n            this.removePrevListener(\"#\" + qId + \" .option-smile-box\");\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug\r\n            ? console.log(\"smile question\", this.ccsdk.survey.answers[questionId])\r\n            : \"\";\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n            this.ccsdk.survey.answers[questionId] !== \"\") {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            var previousSelection = document.querySelectorAll(\"#\" + qId + ' .option-smile-box[data-rating=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug\r\n                ? console.log(\"smile previous selection\", previousSelection)\r\n                : \"\";\r\n            if (typeof previousSelection !== \"undefined\" &&\r\n                previousSelection != null) {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                self.qResponse.type = \"smile\";\r\n                self.qResponse.text = null;\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener(\"click\", \"#\" + qId + \" .option-smile-box\", function () {\r\n            var allOptions = document.querySelectorAll(\"#\" + qId + \" .option-smile-box\");\r\n            var rating = this.getAttribute(\"data-rating\");\r\n            self.util.removeClassAll(allOptions, \"selected\");\r\n            self.util.addClass(this, \"selected\");\r\n            //select previous siblings\r\n            // let child : any = this.previousSibling;\r\n            // while( ( child = child.previousSibling) != null ){\r\n            //   self.util.addClass(child, \"selected\");\r\n            // }\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Smile selected',rating):'';\r\n            self.qResponse.type = \"smile\";\r\n            self.qResponse.text = null;\r\n            self.qResponse.number = rating;\r\n            self.qResponse.questionId = qId;\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            //move to next question automagically\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionCsat = function (index, qId) {\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists(\"#\" + qId + \" .option-smile-box\", this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug\r\n                ? console.log(\"csat question - previous listeners exists\")\r\n                : \"\";\r\n            this.removePrevListener(\"#\" + qId + \" .option-smile-box\");\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug\r\n            ? console.log(\"csat question\", this.ccsdk.survey.answers[questionId])\r\n            : \"\";\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n            this.ccsdk.survey.answers[questionId] !== \"\") {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            var previousSelection = document.querySelectorAll(\"#\" + qId + ' .option-smile-box[data-rating=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug\r\n                ? console.log(\"csat previous selection\", previousSelection)\r\n                : \"\";\r\n            if (typeof previousSelection !== \"undefined\" &&\r\n                previousSelection != null) {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                previousSelection\r\n                    .querySelectorAll(\"input\")[0]\r\n                    .setAttribute(\"checked\", \"checked\");\r\n                self.qResponse.type = \"smile\";\r\n                self.qResponse.text = null;\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener(\"click\", \"#\" + qId + \" .option-smile-box\", function () {\r\n            var allOptions = document.querySelectorAll(\"#\" + qId + \" .option-smile-box\");\r\n            var rating = this.getAttribute(\"data-rating\");\r\n            self.util.removeClassAll(allOptions, \"selected\");\r\n            self.util.addClass(this, \"selected\");\r\n            this.querySelectorAll(\"input\")[0].setAttribute(\"checked\", \"checked\");\r\n            var child = this.previousSibling;\r\n            while ((child = child.previousSibling) != null) {\r\n                // (window as any).ccsdkDebug?console.log('questionscale', 'previousSiblings', child):'';\r\n                self.util.addClass(child, \"selected\");\r\n            }\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Smile selected',rating):'';\r\n            self.qResponse.type = \"smile\";\r\n            self.qResponse.text = null;\r\n            self.qResponse.number = rating;\r\n            self.qResponse.questionId = qId;\r\n            console.log(\"dispatching event in csat\", this);\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            //move to next question automagically\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionMultiline = function (index, qId) {\r\n        var self = this;\r\n        var multilineRes = \"\";\r\n        if (this.util.checkIfListenerExists(\"#\" + qId, this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug\r\n                ? console.log(\"multiine question - previous listeners exists\")\r\n                : \"\";\r\n            this.removePrevListener(\"#\" + qId);\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug\r\n            ? console.log(\"multiine question\", this.ccsdk.survey.answers[questionId])\r\n            : \"\";\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n            this.ccsdk.survey.answers[questionId] !== \"\") {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].text;\r\n            window.ccsdkDebug\r\n                ? console.log(\"multiine input box\", document.querySelectorAll(\"#\" + qId)[0])\r\n                : \"\";\r\n            var previousSelection = (document.querySelectorAll(\"#\" + qId)[0]);\r\n            window.ccsdkDebug\r\n                ? console.log(\"multiine previous selection\", previousSelection)\r\n                : \"\";\r\n            window.ccsdkDebug\r\n                ? console.log(\"multiine previous value\", previousValue)\r\n                : \"\";\r\n            if (typeof previousSelection !== \"undefined\" &&\r\n                previousSelection != null &&\r\n                typeof previousValue !== \"undefined\") {\r\n                previousSelection.value = previousValue;\r\n                self.qResponse.type = \"multiline\";\r\n                self.qResponse.text = previousValue;\r\n                self.qResponse.number = null;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener(\"change\", \"#\" + qId, function () {\r\n            multilineRes = this.value;\r\n            self.qResponse.type = \"multiline\";\r\n            self.qResponse.text = multilineRes;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionSingleline = function (index, qId) {\r\n        var self = this;\r\n        var singlelineRes = \"\";\r\n        if (this.util.checkIfListenerExists(\"#\" + qId, this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug\r\n                ? console.log(\"singleline question - previous listeners exists\")\r\n                : \"\";\r\n            this.removePrevListener(\"#\" + qId);\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug\r\n            ? console.log(\"singleline question\", this.ccsdk.survey.answers[questionId])\r\n            : \"\";\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n            this.ccsdk.survey.answers[questionId] !== \"\") {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].text;\r\n            window.ccsdkDebug\r\n                ? console.log(\"singleline input box\", document.querySelectorAll(\"#\" + qId)[0])\r\n                : \"\";\r\n            var previousSelection = (document.querySelectorAll(\"#\" + qId)[0]);\r\n            window.ccsdkDebug\r\n                ? console.log(\"singleline previous selection\", previousSelection)\r\n                : \"\";\r\n            window.ccsdkDebug\r\n                ? console.log(\"singleline previous value\", previousValue)\r\n                : \"\";\r\n            if (typeof previousSelection !== \"undefined\" &&\r\n                previousSelection != null &&\r\n                typeof previousValue !== \"undefined\") {\r\n                previousSelection.value = previousValue;\r\n                self.qResponse.type = \"singleline\";\r\n                self.qResponse.text = previousValue;\r\n                self.qResponse.number = null;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener(\"change\", \"#\" + qId, function () {\r\n            singlelineRes = this.value;\r\n            self.qResponse.type = \"singleline\";\r\n            self.qResponse.text = singlelineRes;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n        // console.log( 'singleline qResponse', self.qResponse );\r\n    };\r\n    DomSurvey.prototype.setupListenersForDate = function (index, qId) {\r\n        if (this.util.checkIfListenerExists(\".date-container\", this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug\r\n                ? console.log(\"date question - previous listeners exists\")\r\n                : \"\";\r\n            this.removePrevListener(\".date-container\");\r\n        }\r\n        var questionId;\r\n        var self = this;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug\r\n            ? console.log(\"date question\", this.ccsdk.survey.answers, questionId)\r\n            : \"\";\r\n        if (this.ccsdk.survey.answers[questionId] &&\r\n            this.ccsdk.survey.answers[questionId].number) {\r\n            var model = this.ccsdk.survey.answers[questionId].number;\r\n            var dateQuestion = this.util.get(\".date-container\")[0];\r\n            var list = model.toString().match(/\\d\\d/g);\r\n            dateQuestion.children[0].value = list[3];\r\n            dateQuestion.children[1].value = list[2];\r\n            dateQuestion.children[2].value = list[0] + list[1];\r\n            this.qResponse.type = \"date\";\r\n            this.qResponse.text = null;\r\n            this.qResponse.number = model;\r\n            this.qResponse.questionId = qId;\r\n        }\r\n        var ref = this.util.initListener(\"change\", \".date-container\", function () {\r\n            var date = this.children[0].value;\r\n            var month = this.children[1].value;\r\n            var year = this.children[2].value;\r\n            if (!date && !month && !year) {\r\n                return;\r\n            }\r\n            if (!date.match(/^\\d\\d$/)) {\r\n                self.util.addClass(this.children[3], \"show-error\");\r\n                return;\r\n            }\r\n            else if (!month.match(/^\\d\\d$/)) {\r\n                self.util.addClass(this.children[3], \"show-error\");\r\n                return;\r\n            }\r\n            else if (!year.match(/^\\d\\d\\d\\d$/)) {\r\n                self.util.addClass(this.children[3], \"show-error\");\r\n                return;\r\n            }\r\n            else {\r\n                self.util.removeClass(this.children[3], \"show-error\");\r\n                var numberRes = parseInt(year + month + date, 10);\r\n                self.qResponse.type = \"number\";\r\n                self.qResponse.text = null;\r\n                self.qResponse.number = numberRes;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionNumber = function (index, qId) {\r\n        var self = this;\r\n        var numberRes = \"\";\r\n        if (this.util.checkIfListenerExists(\"#\" + qId, this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug\r\n                ? console.log(\"number question - previous listeners exists\")\r\n                : \"\";\r\n            this.removePrevListener(\"#\" + qId);\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug\r\n            ? console.log(\"number question\", this.ccsdk.survey.answers[questionId])\r\n            : \"\";\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n            this.ccsdk.survey.answers[questionId] !== \"\") {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            window.ccsdkDebug\r\n                ? console.log(\"number input box\", document.querySelectorAll(\"#\" + qId)[0])\r\n                : \"\";\r\n            var previousSelection = (document.querySelectorAll(\"#\" + qId)[0]);\r\n            window.ccsdkDebug\r\n                ? console.log(\"number previous selection\", previousSelection)\r\n                : \"\";\r\n            window.ccsdkDebug\r\n                ? console.log(\"number previous value\", previousValue)\r\n                : \"\";\r\n            if (typeof previousSelection !== \"undefined\" &&\r\n                previousSelection != null &&\r\n                typeof previousValue !== \"undefined\") {\r\n                previousSelection.value = previousValue;\r\n                self.qResponse.type = \"number\";\r\n                self.qResponse.text = null;\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener(\"change\", \"#\" + qId, function () {\r\n            numberRes = this.value;\r\n            self.qResponse.type = \"number\";\r\n            self.qResponse.text = null;\r\n            self.qResponse.number = numberRes;\r\n            self.qResponse.questionId = qId;\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionSlider = function (index, qId) {\r\n        var self = this;\r\n        var sliderRes = \"\";\r\n        var slider = new Slider_1.Slider();\r\n        var sliderInput = (document.querySelectorAll(\"#\" + qId + \" input\")[0]);\r\n        if (this.util.checkIfListenerExists(\"#\" + qId + \" input\", this.domListeners)) {\r\n            // return;\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug\r\n            ? console.log(\"slider question\", this.ccsdk.survey.answers[questionId])\r\n            : \"\";\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n            this.ccsdk.survey.answers[questionId] !== \"\") {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            window.ccsdkDebug\r\n                ? console.log(\"slider input box\", document.querySelectorAll(\"#\" + qId)[0])\r\n                : \"\";\r\n            var previousSelection = (document.querySelectorAll(\"#\" + qId + \" .act-slider-tip\")[0]);\r\n            window.ccsdkDebug\r\n                ? console.log(\"slider previous selection\", previousSelection)\r\n                : \"\";\r\n            window.ccsdkDebug\r\n                ? console.log(\"slider previous value\", previousValue)\r\n                : \"\";\r\n            if (typeof previousSelection !== \"undefined\" &&\r\n                previousSelection != null &&\r\n                typeof previousValue !== \"undefined\") {\r\n                previousSelection.innerHTML = previousValue;\r\n                sliderInput.value = previousValue;\r\n                self.qResponse.type = \"slider\";\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.text = null;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener(\"change\", \"#\" + qId + \" input\", function () {\r\n            sliderRes = this.value;\r\n            self.qResponse.type = \"slider\";\r\n            self.qResponse.number = sliderRes;\r\n            self.qResponse.text = null;\r\n            self.qResponse.questionId = qId;\r\n            //move to next question automagically\r\n            // self.nextQuestion();\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionSelect = function (index, qId) {\r\n        var self = this;\r\n        var questionId;\r\n        window.ccsdkDebug\r\n            ? console.log(\"select que\", this.domListeners)\r\n            : \"\";\r\n        questionId = qId.substring(2, qId.length);\r\n        // (window as any).ccsdkDebug?console.log(this.ccsdk.survey.answers[questionId]):'';\r\n        // (window as any).ccsdkDebug?console.log(this.ccsdk.survey.surveyAnswers[questionId]):'';\r\n        if (this.util.checkIfListenerExists(\"#\" + qId + \" .cc-select-options .cc-select-option\", this.domListeners)) {\r\n            window.ccsdkDebug\r\n                ? console.log(\"select que listner exists\")\r\n                : \"\";\r\n            this.removePrevListener(\"#\" + qId + \" .cc-select-options .cc-select-option\");\r\n            // return;\r\n        }\r\n        window.ccsdkDebug ? console.log(\"select que\") : \"\";\r\n        // if(!self.util.arrayContains.call(self.trackSelects, qId)){\r\n        window.ccsdkDebug\r\n            ? console.log(\"select que initialize select\")\r\n            : \"\";\r\n        self.select = new Select_1.Select(qId);\r\n        self.select.destroyListeners();\r\n        self.select.init(qId);\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n            this.ccsdk.survey.answers[questionId] !== \"\") {\r\n            if (this.ccsdk.survey.answers[questionId].text) {\r\n                var question = this.ccsdk.survey.getQuestionById(questionId);\r\n                self.select.setValue(this.ccsdk.survey.answers[questionId].text, question, this.ccsdk.survey);\r\n                self.select.selectOptions(this.ccsdk.survey.answers[questionId].text);\r\n                self.qResponse.type = \"select\";\r\n                self.qResponse.text = this.ccsdk.survey.answers[questionId].text;\r\n                self.qResponse.number = null;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        self.trackSelects.push(qId);\r\n        // }\r\n        var selectRes = \"\";\r\n        var ref = this.util.initListener(\"click\", \"#\" + qId + \" .cc-select-options .cc-select-option\", function () {\r\n            // selectRes = this.getAttribute('data-value');\r\n            selectRes = document\r\n                .querySelectorAll(\"#\" + qId + \" .cc-select-trigger\")[0]\r\n                .getAttribute(\"data-selection-value\");\r\n            // (window as any).ccsdkDebug?console.log(selectRes):'';\r\n            self.qResponse.type = \"select\";\r\n            self.qResponse.text = selectRes;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n            //move to next question automagically\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            // self.nextQuestion();\r\n        });\r\n        // this.util.removeListener(this.$body, ref.type, listener.internalHandler);\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    // addListenersNextButtonSubmit(index : number, data : any, type : string){\r\n    //   let self : DomSurvey = this;\r\n    //   let btnNext = self.util.get('.act-cc-button-next')[0];\r\n    //   self.util.on('click', btnNext, this.submitQuestion(\r\n    //     index, data, type\r\n    //   ));\r\n    //\r\n    // }\r\n    // removeListenersNextButtonSubmit(index : number, data : any, type : string){\r\n    //   let self : DomSurvey = this;\r\n    //   let btnNext = self.util.get('.act-cc-button-next');\r\n    //   self.util.on('click', btnNext, this.submitQuestion(\r\n    //     index, data, type\r\n    //   ));\r\n    //   self.util.off('click', btnNext, this.submitQuestion(\r\n    //     index, data, type\r\n    //   ));\r\n    // }\r\n    DomSurvey.prototype.submitQuestion = function (index, data, type, qId) {\r\n        window.ccsdkDebug ? console.log(\"type\", type, \"res\", data) : \"\";\r\n        this.util.trigger(document, \"q-answered\", {\r\n            index: index,\r\n            data: data,\r\n            type: type,\r\n            questionId: qId.match(/^id/) ? qId.substring(2, qId.length) : qId\r\n        });\r\n    };\r\n    return DomSurvey;\r\n}());\r\nexports.DomSurvey = DomSurvey;\r\n\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar DomUtilities_1 = __webpack_require__(0);\r\nvar Theme = /** @class */ (function () {\r\n    function Theme(brandColor, time) {\r\n        this.util = new DomUtilities_1.DomUtilities();\r\n        this.brandColorDark = this.util.shadeBlendConvert(-0.3, brandColor, undefined);\r\n        this.brandColorWhite = this.util.shadeBlendConvert(0.1, brandColor, undefined);\r\n        var css = \"\\n\\t\\t.cc-sdk #progressBar{\\n\\t\\t\\tbackground : \" + this.brandColorDark + \";\\n\\t\\t}\\n\\t\\t.cc-sdk #progress-line{ \\n\\t\\t\\tbackground: \" + brandColor + \";\\n\\t\\t}\\n\\t\\t.cc-sdk .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:before {\\n\\t\\t\\tbackground:\" + brandColor + \";\\n\\t\\t}\\n\\t\\t.ccsdk-overlay.glass{\\n\\t\\t\\tbackground-color:\" + this.util.hexToRGB(brandColor, .5) + \";\\n\\t\\t}\\n\\t\\t.cc-sdk .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:after {\\n\\t\\t\\tborder-color: #fff;\\n\\t\\t}\\n\\t\\t.cc-sdk .cc-checkbox input[type=\\\"radio\\\"]:checked + label:before {\\n\\t\\t\\tborder-color: \" + brandColor + \";\\n\\t\\t}\\n\\t\\t.cc-sdk .cc-checkbox input[type=\\\"radio\\\"]:checked + label:before {\\n\\t\\t\\tborder-color: \" + brandColor + \";\\n\\t\\t}\\n\\t\\t.cc-sdk .cc-checkbox input[type=\\\"radio\\\"]:checked + label:after {\\n\\t\\t\\tbackground: \" + brandColor + \";\\n\\t\\t}\\n\\t\\t.cc-sdk .cc-sdk-form-control:focus {\\n\\t\\t\\tborder-color: \" + brandColor + \";\\n\\t\\t}\\n\\t\\t.cc-sdk .cc-message-box__btn{\\n\\t\\t\\tbackground: \" + brandColor + \";\\n\\t\\t\\tcolor:#fff;\\n\\t\\t}\\n\\t\\t\\t.cc-sdk .submit-icon{\\n\\t\\t\\t\\tbackground-image: url(\\\"data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%2747px%27%20height%3D%2747px%27%20viewBox%3D%270%200%2047%2047%27%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%3E%3Ctitle%3EGroup%2016%3C%2Ftitle%3E%3Cdesc%3ECreated%20with%20Sketch.%3C%2Fdesc%3E%3Cdefs%3E%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%3Cfilter%20x%3D%27-18.1%25%27%20y%3D%27-12.9%25%27%20width%3D%27136.2%25%27%20height%3D%27136.2%25%27%20filterUnits%3D%27objectBoundingBox%27%20id%3D%27filter-2%27%3E%3CfeOffset%20dx%3D%270%27%20dy%3D%272%27%20in%3D%27SourceAlpha%27%20result%3D%27shadowOffsetOuter1%27%3E%3C%2FfeOffset%3E%3CfeGaussianBlur%20stdDeviation%3D%272%27%20in%3D%27shadowOffsetOuter1%27%20result%3D%27shadowBlurOuter1%27%3E%3C%2FfeGaussianBlur%3E%3CfeColorMatrix%20values%3D%270%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200.116423234%200%27%20type%3D%27matrix%27%20in%3D%27shadowBlurOuter1%27%3E%3C%2FfeColorMatrix%3E%3C%2Ffilter%3E%3C%2Fdefs%3E%3Cg%20id%3D%27Page-1%27%20stroke%3D%27none%27%20stroke-width%3D%271%27%20fill%3D%27none%27%20fill-rule%3D%27evenodd%27%3E%3Cg%20id%3D%271-copy-20%27%20transform%3D%27translate(-1246.000000%2C%20-664.000000)%27%3E%3Cg%20id%3D%27Group-16%27%20transform%3D%27translate(1250.000000%2C%20666.000000)%27%3E%3Cg%20id%3D%27Oval-4%27%3E%3Cuse%20fill%3D%27white%27%20fill-opacity%3D%271%27%20filter%3D%27url(%23filter-2)%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3Cuse%20fill%3D%27\" + encodeURIComponent(brandColor) + \"%27%20fill-rule%3D%27evenodd%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3C%2Fg%3E%3Cg%20id%3D%27Group-5%27%20transform%3D%27translate(12.000000%2C%2011.000000)%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23FFFFFF%27%3E%3Cg%20id%3D%27fast-forward-arrows%27%20transform%3D%27translate(6.173934%2C%200.000000)%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3Cg%20id%3D%27fast-forward-arrows-copy%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\\\");\\n\\t\\t\\t}\\n\\t\\t\\t[dir=\\\"rtl\\\"].cc-sdk .submit-icon{\\n\\t\\t\\t\\tbackground-image: url(\\\"data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%2747px%27%20height%3D%2747px%27%20viewBox%3D%270%200%2047%2047%27%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%3E%0A%20%20%20%20%3Cdesc%3ECreated%20with%20Sketch.%3C%2Fdesc%3E%0A%20%20%20%20%3Cdefs%3E%3C%2Fdefs%3E%0A%20%20%20%20%3Cg%20id%3D%27Page-1%27%20stroke%3D%27none%27%20stroke-width%3D%271%27%20fill%3D%27none%27%20fill-rule%3D%27evenodd%27%3E%0A%20%20%20%20%20%20%20%20%3Cg%20id%3D%27Submit_Icon%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27Oval-4%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27path-1-link%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23white%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27path-1-link%27%20fill%3D%27\" + encodeURIComponent(brandColor) + \"%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27Group-5%27%20transform%3D%27translate(12.000000%2C%2011.000000)%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23ffffff%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27fast-forward-arrows%27%20transform%3D%27translate(11.173934%2C%208.500000)%20scale(-1%2C%201)%20translate(-11.173934%2C%20-8.500000)%20translate(6.173934%2C%200.000000)%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27fast-forward-arrows-copy%27%20transform%3D%27translate(5.000000%2C%208.500000)%20scale(-1%2C%201)%20translate(-5.000000%2C%20-8.500000)%20%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%3C%2Fg%3E%0A%3C%2Fsvg%3E\\\");\\n\\t\\t\\t}\\n\\t\\t\\t.cc-sdk .cc-question-container__required-label{\\n\\t\\t\\tcolor: \" + brandColor + \";\\n\\t\\t}\\n\\t\\t.cc-sdk input[type=\\\"range\\\"]::-webkit-slider-runnable-track{\\n\\t\\t\\tbackground: \" + brandColor + \" !important;\\n\\t\\t\\t   background: -moz-linear-gradient(-45deg, \" + brandColor + \" 0%, \" + this.brandColorDark + \" 100%)!important;\\n\\t\\t\\t   background: -webkit-linear-gradient(-45deg, \" + brandColor + \"' 0%,\" + this.brandColorDark + \" 100%)!important;\\n\\t\\t\\t   background: linear-gradient(135deg, \" + brandColor + \" 0%,\" + this.brandColorDark + \" 100%)!important;\\n\\t\\t\\t   filter: progid:DXImageTransform.Microsoft.gradient( startColorstr=\" + brandColor + \", endColorstr=\" + this.brandColorDark + \",GradientType=1 );\\n\\t\\t   }\\n\\t\\t.cc-sdk input[type=\\\"range\\\"]::-moz-range-track {\\n\\t\\t\\tbackground: \" + brandColor + \" !important;\\n\\t\\t\\tbackground: -moz-linear-gradient(-45deg, \" + brandColor + \" 0%, \" + this.brandColorDark + \" 100%)!important;\\n\\t\\t\\tbackground: -webkit-linear-gradient(-45deg, \" + brandColor + \" 0%, \" + this.brandColorDark + \" 100%)!important;\\n\\t\\t\\tbackground: linear-gradient(135deg, \" + brandColor + \" 0%,\" + this.brandColorDark + \" 100%)!important;\\n\\t\\t\\tfilter: progid:DXImageTransform.Microsoft.gradient( startColorstr=\" + brandColor + \", endColorstr=\" + this.brandColorDark + \",GradientType=1 );\\n\\t\\t}\\n\\t\\t   .cc-sdk input[type=\\\"range\\\"]::-webkit-slider-thumb{\\n\\t\\t\\tborder: 1px solid \" + brandColor + \" ;\\n\\t\\t\\tbackground-color: #fff;\\n\\t\\t   }\\n\\t\\t   .cc-sdk input[type=\\\"range\\\"]::-moz-range-thumb {\\n\\t\\t\\tborder: 1px solid \" + brandColor + \" ;\\n\\t\\t\\tbackground-color: #fff;\\n\\t\\t   }\\n\\t\\t   .cc-sdk svg.timer circle {\\n\\t\\t\\tanimation: countdown \" + time + \"s linear 1 forwards;\\n\\t\\t\\tstroke: \" + brandColor + \";\\n\\t\\t   }\\n\\t\\t   .cc-sdk input[type=range].selected::-webkit-slider-thumb {\\n\\t\\t\\t\\tbackground-color: \" + brandColor + \";\\n\\t\\t\\t}\\n\\t\\t\\t.cc-sdk input[type = range].selected::-moz - range - thumb {\\n\\t\\t\\t\\tbackground-color: \" + brandColor + \";\\n\\t\\t\\t}\\n\\t\\t\\t.cc-sdk .cc-checkbox label:hover:before{\\n\\t\\t\\t\\tborder: solid 1px \" + brandColor + \";\\n\\t\\t\\t}\\n\\t\\t @media (max-width: 768px){\\n\\t \\t\\t\\t.ccsdk-overlay.glass{\\n\\t \\t\\t\\tbackground-color:rgba(255,255,255,.85);\\n\\t \\t\\t\\tbackground-image:none;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t.cc-sdk.cc-popup-container{\\n\\t\\t\\t\\t\\tbackground-color : transparent;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t.cc-sdk.cc-popup-container .ccsdk-overlay.glass{\\n\\t\\t\\t\\t\\tbackground-color : \" + this.util.hexToRGB(brandColor, .9) + \";\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t.cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text{\\n\\t\\t\\t\\t\\tcolor:#fff;\\n\\t\\t\\t\\t}\\n\\t\\t\";\r\n        this.util.appendStyle(css);\r\n    }\r\n    return Theme;\r\n}());\r\nexports.Theme = Theme;\r\n\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar DomUtilities_1 = __webpack_require__(0);\r\nvar Slider = /** @class */ (function () {\r\n    function Slider() {\r\n        this.inputRange = document.getElementsByClassName('cc-sdk-range')[0];\r\n        this.rangeTip = this.inputRange.parentNode.querySelectorAll(\".act-slider-tip\")[0];\r\n        this.util = new DomUtilities_1.DomUtilities();\r\n        //  this.maxValue = 100; // the higher the smoother when dragging\r\n        this.speed = 5;\r\n        // set min/max value\r\n        // this.inputRange.min = 0;\r\n        this.inputRange.min = this.inputRange.getAttribute('min');\r\n        // this.inputRange.max = this.maxValue;\r\n        this.inputRange.max = this.inputRange.getAttribute('max');\r\n        this.setupListeners();\r\n    }\r\n    Slider.prototype.setupListeners = function () {\r\n        var self = this;\r\n        // bind events\r\n        this.inputRange.addEventListener('mouseup', this.clearTo, false);\r\n        // move gradient\r\n        this.inputRange.addEventListener('input', function () {\r\n            self.updateRangeTip();\r\n            self.util.addClass(this, 'selected');\r\n            //Change slide thumb color on way up\r\n            if (this.value > 20) {\r\n                self.inputRange.classList.add('ltpurple');\r\n            }\r\n            if (this.value > 40) {\r\n                self.inputRange.classList.add('purple');\r\n            }\r\n            if (this.value > 60) {\r\n                self.inputRange.classList.add('pink');\r\n            }\r\n            //Change slide thumb color on way down\r\n            if (this.value < 20) {\r\n                self.inputRange.classList.remove('ltpurple');\r\n            }\r\n            if (this.value < 40) {\r\n                self.inputRange.classList.remove('purple');\r\n            }\r\n            if (this.value < 60) {\r\n                self.inputRange.classList.remove('pink');\r\n            }\r\n        });\r\n    };\r\n    Slider.prototype.updateRangeTip = function () {\r\n        var self = this;\r\n        this.rangeTip.style.display = 'block';\r\n        this.rangeTip.innerHTML = this.inputRange.value;\r\n    };\r\n    Slider.prototype.clearTo = function () {\r\n        clearTimeout(this.timeout);\r\n    };\r\n    // listen for unlock\r\n    // unlockStartHandler() {\r\n    //   let self : any = this;\r\n    //   // clear raf if trying again\r\n    //   window.cancelAnimationFrame(this.rafID);\r\n    //   // set to desired value\r\n    //   this.currValue = +self.value;\r\n    // }\r\n    // unlockEndHandler() {\r\n    //   // store current value\r\n    //   this.currValue = + this.value;\r\n    //   // determine if we have reached success or not\r\n    //   if(this.currValue >= this.maxValue) {\r\n    //      this.successHandler();\r\n    //   }\r\n    //   else {\r\n    //      this.rafID = window.requestAnimationFrame(this.animateHandler);\r\n    //   }\r\n    // }\r\n    // handle range animation\r\n    Slider.prototype.animateHandler = function () {\r\n        // calculate gradient transition\r\n        var transX = this.currValue - this.maxValue;\r\n        // update input range\r\n        this.inputRange.value = this.currValue;\r\n        //Change slide thumb color on mouse up\r\n        if (this.currValue < 20) {\r\n            this.inputRange.classList.remove('ltpurple');\r\n        }\r\n        if (this.currValue < 40) {\r\n            this.inputRange.classList.remove('purple');\r\n        }\r\n        if (this.currValue < 60) {\r\n            this.inputRange.classList.remove('pink');\r\n        }\r\n        // determine if we need to continue\r\n        if (this.currValue > -1) {\r\n            window.requestAnimationFrame(this.animateHandler);\r\n        }\r\n        // decrement value\r\n        this.currValue = this.currValue - this.speed;\r\n    };\r\n    // handle successful unlock\r\n    Slider.prototype.successHandler = function () {\r\n    };\r\n    return Slider;\r\n}());\r\nexports.Slider = Slider;\r\n\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n//Manages trigger.\r\nvar Cookie_1 = __webpack_require__(2);\r\nvar Constants_1 = __webpack_require__(1);\r\n//collect initial data\r\n//if on site time is null, add on site time\r\nif (Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerSiteStartTime) == null) {\r\n    Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerSiteStartTime, new Date(), undefined, undefined);\r\n}\r\n//always add on page Time\r\nCookie_1.Cookie.set(Constants_1.Constants.CCTriggerPageStartTime, new Date(), undefined, undefined);\r\nvar sitePageViewCount = Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerSitePageViewCount);\r\nif (sitePageViewCount == null) {\r\n    Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerSitePageViewCount, 1, undefined, undefined);\r\n}\r\nelse {\r\n    sitePageViewCount = (parseInt(sitePageViewCount) + 1).toString();\r\n    Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerSitePageViewCount, sitePageViewCount, undefined, undefined);\r\n}\r\nvar individualPageViewCount = Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerIndividualPageViewCount);\r\nif (individualPageViewCount == null) {\r\n    Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerIndividualPageViewCount, 1, undefined, window.location.href);\r\n}\r\nelse {\r\n    individualPageViewCount = (parseInt(individualPageViewCount) + 1).toString();\r\n    Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerIndividualPageViewCount, individualPageViewCount, undefined, window.location.href);\r\n}\r\nwindow.click = 0;\r\nwindow.onscroll = function (e) {\r\n    // called when the window is scrolled.  \r\n    var doc = document.documentElement;\r\n    var left = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);\r\n    var top = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\r\n    window.ccsdkTopOffset = top;\r\n    TriggerManager.processScrollTriggers(top);\r\n};\r\ndocument.onclick = function (e) {\r\n    window.click++;\r\n};\r\n//TriggerManager adds to survey Queue\r\nvar TriggerManager = /** @class */ (function () {\r\n    function TriggerManager() {\r\n        //initialize triggers\r\n        //add those triggers which aren't completed yet.\r\n    }\r\n    TriggerManager.addSurvey = function (surveyId, trigger) {\r\n        TriggerManager.triggerInstances[surveyId] = trigger;\r\n        if (Object.keys(TriggerManager.triggerInstances).length >= 1) {\r\n            window.ccsdkDebug ? console.log(TriggerManager.triggerInterval) : '';\r\n            if (TriggerManager.triggerInterval == null) {\r\n                window.ccsdkDebug ? console.log(\"TriggerHandler : Setting up Interval Trigger Handlers.\") : '';\r\n                TriggerManager.triggerInterval = setInterval(TriggerManager.processIntervalTriggers, 1000);\r\n            }\r\n            //processing sequential triggers if any.\r\n            // console.log(\"TriggerHandler : Processing sequential triggers for  \" + surveyId);\r\n            // TriggerManager.processTriggersBySurveyId(surveyId);\r\n        }\r\n    };\r\n    TriggerManager.removeSurvey = function (surveyId) {\r\n        delete TriggerManager.triggerInstances[surveyId];\r\n        if (Object.keys(TriggerManager.triggerInstances).length == 0) {\r\n            clearInterval(TriggerManager.triggerInterval);\r\n        }\r\n    };\r\n    TriggerManager.processIntervalTriggers = function () {\r\n        //if some survey is already running skip processing surveys for now?or queue it?.\r\n        Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerPageElapsedTime, new Date(), undefined, window.location.href);\r\n        Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerSiteElapsedTime, new Date(), undefined, undefined);\r\n        //set cookies and call every process Interval Triggers.\r\n        for (var trigger in TriggerManager.triggerInstances) {\r\n            TriggerManager.triggerInstances[trigger].processIntervalTriggers();\r\n            TriggerManager.triggerInstances[trigger].processConditionalTriggers();\r\n        }\r\n    };\r\n    TriggerManager.processScrollTriggers = function (scrollNow) {\r\n        for (var trigger in TriggerManager.triggerInstances) {\r\n            //process all scroll triggers.\r\n            TriggerManager.triggerInstances[trigger].processScrollTriggers(scrollNow);\r\n        }\r\n    };\r\n    TriggerManager.disableTriggers = function (surveyId) {\r\n        TriggerManager.triggerInstances[surveyId].disableTriggers();\r\n    };\r\n    TriggerManager.triggerInterval = null;\r\n    TriggerManager.triggerInstances = {};\r\n    return TriggerManager;\r\n}());\r\nexports.TriggerManager = TriggerManager;\r\n;\r\n\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Cookie_1 = __webpack_require__(2);\r\nvar Constants_1 = __webpack_require__(1);\r\nvar SurveyManager_1 = __webpack_require__(3);\r\nvar TriggerUtils_1 = __webpack_require__(52);\r\nvar Triggers = /** @class */ (function () {\r\n    function Triggers(ccsdk) {\r\n        this.ccsdk = ccsdk;\r\n        this.pageCountTrigger = false;\r\n        this.siteCountTrigger = false;\r\n        this.pageTimeTrigger = false;\r\n        this.siteTimeTrigger = false;\r\n        this.urlParamTrigger = false;\r\n        this.notUrlParamTrigger = false;\r\n        this.utmParamTrigger = false;\r\n        this.scrollPixelsTrigger = false;\r\n        //disable all triggers.\r\n        this.pageCountTriggerEnabled = false;\r\n        this.siteCountTriggerEnabled = false;\r\n        this.pageTimeTriggerEnabled = false;\r\n        this.siteTimeTriggerEnabled = false;\r\n        this.urlParamTriggerEnabled = false;\r\n        this.notUrlParamTriggerEnabled = false;\r\n        this.utmParamTriggerEnabled = false;\r\n        this.scrollPixelsTriggerEnabled = false;\r\n        this.conditionalTriggers = {};\r\n    }\r\n    Triggers.prototype.enableClickTrigger = function (target, cb) {\r\n        var item = document.querySelectorAll(target)[0];\r\n        if (typeof item !== 'undefined') {\r\n            item.addEventListener('click', cb);\r\n        }\r\n    };\r\n    Triggers.prototype.enablePageCountTrigger = function (minPageCount) {\r\n        this.minPageCount = minPageCount;\r\n        this.pageCountTriggerEnabled = true;\r\n        this.TriggerPopUpByPageCount();\r\n    };\r\n    Triggers.prototype.enableSiteCountTrigger = function (minSiteCount) {\r\n        this.minSiteCount = minSiteCount;\r\n        this.pageCountTriggerEnabled = true;\r\n        this.TriggerPopUpByPageCount();\r\n    };\r\n    Triggers.prototype.enablePageTimeTrigger = function (minPageTime) {\r\n        this.minPageTime = minPageTime;\r\n        this.pageTimeTriggerEnabled = true;\r\n        this.TriggerPopUpByTimeSpentOnPage();\r\n    };\r\n    Triggers.prototype.enableSiteTimeTrigger = function (minSiteTime) {\r\n        this.minSiteTime = minSiteTime;\r\n        this.siteTimeTriggerEnabled = true;\r\n        this.TriggerPopUpByTimeSpentOnSite();\r\n    };\r\n    Triggers.prototype.enablePopUpByURLPatternTrigger = function (urlPattern) {\r\n        this.inUrl = urlPattern;\r\n        this.urlParamTriggerEnabled = true;\r\n        this.TriggerPopUpByURLPattern();\r\n    };\r\n    Triggers.prototype.enablePopUpByNotURLPatternTrigger = function (urlPattern) {\r\n        this.notinUrl = urlPattern;\r\n        this.notUrlParamTriggerEnabled = true;\r\n        this.TriggerPopUpByNotURLPattern();\r\n    };\r\n    Triggers.prototype.enablePopUpByUTMPatternTrigger = function (urlPattern) {\r\n        this.utm = urlPattern;\r\n        this.utmParamTriggerEnabled = true;\r\n        this.TriggerPopUpByUTMParameter();\r\n    };\r\n    Triggers.prototype.enableScrollPixelsTrigger = function (minScrollPixels) {\r\n        this.minScrollPixels = minScrollPixels;\r\n        this.scrollPixelsTriggerEnabled = true;\r\n    };\r\n    Triggers.prototype.processIntervalTriggers = function () {\r\n        //if survey already launched\r\n        //skip processing.\r\n        if (this.ccsdk.surveyRunning || this.ccsdk.surveyDone) {\r\n            return;\r\n        }\r\n        this.TriggerPopUpByTimeSpentOnPage();\r\n        this.TriggerPopUpByTimeSpentOnSite();\r\n    };\r\n    Triggers.prototype.setConditionalTriggers = function (config) {\r\n        window.ccsdkDebug ? console.log(config.grepURL) : '';\r\n        //\r\n        if ((typeof config.click !== 'undefined') && (config.click != 0)) {\r\n            this.conditionalTriggers.click = config.click;\r\n        }\r\n        if ((typeof config.onExitDetect !== 'undefined')) {\r\n            this.conditionalTriggers.onExitDetect = config.onExitDetect;\r\n        }\r\n        // if ((typeof config.cssSelector !== 'undefined')) {\r\n        //   this.conditionalTriggers.cssSelector = config.cssSelector;\r\n        // }\r\n        if ((typeof config.waitSeconds !== 'undefined') && (config.waitSeconds !== 0)) {\r\n            this.conditionalTriggers.waitSeconds = config.waitSeconds;\r\n        }\r\n        if ((typeof config.scrollPercent !== 'undefined') && (config.scrollPercent !== 0)) {\r\n            this.conditionalTriggers.scrollPercent = config.scrollPercent;\r\n        }\r\n        if ((typeof config.grepInvertURL !== 'undefined') && (config.grepInvertURL)) {\r\n            this.conditionalTriggers.grepInvertURL = config.grepInvertURL;\r\n        }\r\n        if ((typeof config.grepURL !== 'undefined') && (config.grepURL)) {\r\n            this.conditionalTriggers.grepURL = config.grepURL;\r\n        }\r\n    };\r\n    Triggers.prototype.processConditionalTriggers = function () {\r\n        //gather all conditional triggers and process them.\r\n        var self = this;\r\n        var isEnabled = true;\r\n        if (this.ccsdk.surveyRunning || this.ccsdk.surveyDone) {\r\n            window.ccsdkDebug ? console.log('returning') : '';\r\n            return;\r\n        }\r\n        if (typeof this.conditionalTriggers !== 'undefined') {\r\n            if (Object.keys(this.conditionalTriggers).length == 0) {\r\n                return false;\r\n            }\r\n            for (var conditionalTrigger in this.conditionalTriggers) {\r\n                if (this.conditionalTriggers[conditionalTrigger] != null) {\r\n                    switch (conditionalTrigger) {\r\n                        case \"onExitDetect\":\r\n                            var onExitDetect = self.ccsdk.util.initListener(\"mouseout\", \"document\", function () {\r\n                                window.ccsdkDebug ? console.log(\"Mouse out\") : '';\r\n                            });\r\n                            onExitDetect.internalHandler = self.ccsdk.util.listener(document, onExitDetect.type, onExitDetect.id, onExitDetect.cb);\r\n                            break;\r\n                        case \"click\":\r\n                            //find click count on screen\r\n                            //calculate click count\r\n                            // if((window as any).click > this.conditionalTriggers.click) {\r\n                            //   return SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n                            // }\r\n                            isEnabled = isEnabled && (window.click >= this.conditionalTriggers.click);\r\n                            break;\r\n                        case \"waitSeconds\":\r\n                            var pageStartTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerPageStartTime)).getTime();\r\n                            var pageTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerPageElapsedTime)).getTime();\r\n                            isEnabled = isEnabled && TriggerUtils_1.TriggerUtils.checkTimeCondition(pageTime, pageStartTime, this.conditionalTriggers[conditionalTrigger]);\r\n                            window.ccsdkDebug ? console.log('waitSeconds enabled', isEnabled) : '';\r\n                            break;\r\n                        case \"scrollPercent\":\r\n                            //fill it with current scroll position\r\n                            isEnabled = isEnabled && TriggerUtils_1.TriggerUtils.checkScroll(window.ccsdkTopOffset, this.conditionalTriggers[conditionalTrigger]);\r\n                            window.ccsdkDebug ? console.log('scrollPercent enabled', isEnabled) : '';\r\n                            break;\r\n                        case \"grepURL\":\r\n                            isEnabled = isEnabled && TriggerUtils_1.TriggerUtils.checkInUrl(this.conditionalTriggers[conditionalTrigger]);\r\n                            window.ccsdkDebug ? console.log('grepURL enabled', isEnabled) : '';\r\n                            break;\r\n                        case \"grepInvertURL\":\r\n                            isEnabled = isEnabled && !TriggerUtils_1.TriggerUtils.checkInUrl(this.conditionalTriggers[conditionalTrigger]);\r\n                            window.ccsdkDebug ? console.log('grepInvertURL enabled', isEnabled) : '';\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            if (isEnabled) {\r\n                if (this.ccsdk && this.ccsdk.tracking) {\r\n                    this.ccsdk.tracking.trackEvent('Popped Up', {\r\n                        token: this.ccsdk.tracking.token,\r\n                        data: {\r\n                            name: null,\r\n                            action: null\r\n                        }\r\n                    }, null, null);\r\n                }\r\n                SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n            }\r\n        }\r\n        else {\r\n            //do nothing.\r\n        }\r\n    };\r\n    Triggers.prototype.processNonConditionalTriggers = function () {\r\n        //process all non conditional one shot triggers here?\r\n    };\r\n    Triggers.prototype.processScrollTriggers = function (scrollNow) {\r\n        this.TriggerPopUpByScrollPixels(scrollNow);\r\n    };\r\n    Triggers.prototype.TriggerPopUpByPageCount = function () {\r\n        var pageCount = parseInt(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerSitePageViewCount));\r\n        if (pageCount == NaN) {\r\n            pageCount = 0;\r\n        }\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.pageCountTrigger && TriggerUtils_1.TriggerUtils.checkPageCount(pageCount, this.minPageCount)) {\r\n            this.pageCountTrigger = true;\r\n            //displayQuestion\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n        else {\r\n            //already executed.\r\n            //or condition not satisified yet.\r\n        }\r\n    };\r\n    //minPageTime in seconds\r\n    Triggers.prototype.TriggerPopUpByTimeSpentOnPage = function () {\r\n        var pageStartTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerPageStartTime)).getTime();\r\n        var pageTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerPageElapsedTime)).getTime();\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.pageTimeTrigger && TriggerUtils_1.TriggerUtils.checkTimeCondition(pageTime, pageStartTime, this.minPageTime)) {\r\n            this.pageTimeTrigger = true;\r\n            //displayQuestion\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n        else {\r\n            //already executed.\r\n            //or condition not satisified yet.\r\n        }\r\n    };\r\n    Triggers.prototype.TriggerPopUpByTimeSpentOnSite = function () {\r\n        var siteStartTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerSiteStartTime)).getTime();\r\n        var siteTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerSiteElapsedTime)).getTime();\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.siteTimeTrigger && TriggerUtils_1.TriggerUtils.checkTimeCondition(siteTime, siteStartTime, this.minSiteTime)) {\r\n            this.siteTimeTrigger = true;\r\n            //displayQuestion\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n        else {\r\n            //already executed.\r\n            //or condition not satisified yet.\r\n        }\r\n    };\r\n    Triggers.prototype.TriggerPopUpByInactivity = function () {\r\n    };\r\n    Triggers.prototype.TriggerPopUpByScrollPixels = function (scrollNow) {\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.scrollPixelsTrigger && TriggerUtils_1.TriggerUtils.checkScroll(scrollNow, this.minScrollPixels)) {\r\n            this.scrollPixelsTrigger = true;\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n            // this.ccsdk.initSurvey();\r\n            // SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n        else {\r\n            //already executed?\r\n            //or condition not satisified yet.\r\n        }\r\n    };\r\n    //run only once?\r\n    Triggers.prototype.TriggerPopUpByURLPattern = function () {\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.urlParamTrigger && TriggerUtils_1.TriggerUtils.checkInUrl(this.inUrl)) {\r\n            this.urlParamTrigger = true;\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n        else {\r\n        }\r\n    };\r\n    Triggers.prototype.TriggerPopUpByNotURLPattern = function () {\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.notUrlParamTrigger && !TriggerUtils_1.TriggerUtils.checkInUrl(this.inUrl)) {\r\n            this.notUrlParamTrigger = true;\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n        else {\r\n        }\r\n    };\r\n    Triggers.prototype.TriggerPopUpByUTMParameter = function () {\r\n        var utmP = this.utm.split(\"=\");\r\n        var utmVal = Cookie_1.Cookie.getParameterByName(utmP[0], undefined);\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.utmParamTrigger && utmVal === utmP[1]) {\r\n            this.utmParamTrigger = true;\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n    };\r\n    Triggers.prototype.resetTriggers = function () {\r\n        this.pageCountTrigger = false;\r\n        this.pageTimeTrigger = false;\r\n        this.siteTimeTrigger = false;\r\n        this.urlParamTrigger = false;\r\n        this.scrollPixelsTrigger = false;\r\n    };\r\n    return Triggers;\r\n}());\r\nexports.Triggers = Triggers;\r\n// function triggerHandler(surveyHandler) {\r\n//   //survey specific Trigger Handlers\r\n//   // self.surveyRunning = self.util.get('#' + self.surveyToken  + \"-survey\").length == 1;\r\n// Cookie.set(Constants.CCTriggerPageElapsedTime, new Date(), undefined, window.location.href);\r\n// Cookie.set(Constants.CCTriggerSiteElapsedTime, new Date(), undefined, undefined);\r\n//   surveyHandler.triggers.TriggerPopUpByTimeSpentOnSite(surveyHandler.siteInterval);\r\n//   // surveyHandler.surveyRunning = surveyHandler.util.get('#' + self.surveyToken  + \"-survey\").length == 1;\r\n//   surveyHandler.triggers.TriggerPopUpByTimeSpentOnPage(surveyHandler.pageInterval);\r\n// }\r\n//call below functions when survey is locked and loaded.\r\n// self.triggers.TriggerPopUpByURLPattern(/xyz=33/);\r\n// self.triggers.TriggerPopUpByUTMParameter();\r\n// self.triggerInterval = setInterval(self.triggerHandler, 1000, self);\r\n\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar TriggerUtils = /** @class */ (function () {\r\n    function TriggerUtils() {\r\n    }\r\n    TriggerUtils.checkInUrl = function (inUrl) {\r\n        return window.location.href.match(inUrl) != null && window.location.href.match(inUrl).length > 0;\r\n    };\r\n    TriggerUtils.checkTimeCondition = function (pageTime, pageStartTime, minPageTime) {\r\n        return Math.round((pageTime - pageStartTime) / 1000) > minPageTime;\r\n    };\r\n    TriggerUtils.checkScroll = function (scrollNow, minScrollPixels) {\r\n        return scrollNow > minScrollPixels;\r\n    };\r\n    TriggerUtils.checkPageCount = function (pageCount, minPageCount) {\r\n        return pageCount >= minPageCount;\r\n    };\r\n    return TriggerUtils;\r\n}());\r\nexports.TriggerUtils = TriggerUtils;\r\n\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Request_1 = __webpack_require__(4);\r\nvar MatomoTracker = /** @class */ (function () {\r\n    function MatomoTracker() {\r\n    }\r\n    MatomoTracker.prototype.trackEvent = function (event, payload, successCb, errorCb) {\r\n        var url = new URL('https://matomo.getcloudcherry.com/piwik.php');\r\n        // constants for project\r\n        var idsite = 4;\r\n        var rec = 1;\r\n        var searchParams = {\r\n            idsite: idsite,\r\n            rec: rec,\r\n            action_name: event,\r\n            url: window.location.href,\r\n            action_url: window.location.href,\r\n            uid: this.username,\r\n            _cvar: { '1': ['Token', payload.token] },\r\n            new_visit: event === 'Welcome Pop up Position' ? 1 : 0,\r\n            e_c: event,\r\n            e_a: payload.data.action,\r\n            e_n: payload.data.name,\r\n            rand: Math.ceil(Math.random() * 100)\r\n        };\r\n        Object.keys(searchParams).forEach(function (x) {\r\n            var param;\r\n            if (typeof searchParams[x] === 'string') {\r\n                param = searchParams[x];\r\n            }\r\n            else {\r\n                param = JSON.stringify(searchParams[x]);\r\n            }\r\n            url.searchParams.set(x, param);\r\n        });\r\n        return Request_1.RequestHelper.post(url.toString(), null, successCb, errorCb);\r\n    };\r\n    return MatomoTracker;\r\n}());\r\nexports.MatomoTracker = MatomoTracker;\r\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// cc.en.bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 09c603993d4f093d5324","import { templates } from '../templates';\r\nimport { Config } from '../../Config';\r\n\r\nclass DomUtilities {\r\n\r\n  sbcRip: any;\r\n\r\n  constructor() {\r\n    // HTMLElement.prototype.matches = HTMLElement.prototype.matches ||\r\n    // HTMLElement.prototype.matchesSelector ||\r\n    // HTMLElement.prototype.webkitMatchesSelector ||\r\n    // HTMLElement.prototype.mozMatchesSelector ||\r\n    // HTMLElement.prototype.msMatchesSelector ||\r\n    // HTMLElement.prototype.oMatchesSelector;\r\n  }\r\n\r\n  get( selector: string ) {\r\n    return document.querySelectorAll( selector );\r\n  }\r\n\r\n  appendStyle( css: string ): void {\r\n    let head: any = document.head || document.getElementsByTagName( 'head' )[ 0 ];\r\n    let style: any = document.createElement( 'style' );\r\n    style.type = 'text/css';\r\n    if ( style.styleSheet ) {\r\n      style.styleSheet.cssText = css;\r\n    } else {\r\n      style.appendChild( document.createTextNode( css ) );\r\n    }\r\n    head.appendChild( style );\r\n  }\r\n\r\n  remove( el: any ) {\r\n    el.parentNode.removeChild( el );\r\n  }\r\n\r\n  removeAll( elements: any ): void {\r\n    Array.prototype.forEach.call( elements, ( el, i ) => {\r\n      el.parentNode.removeChild( el );\r\n    } );\r\n  }\r\n\r\n  css( elements: any, property: string, value: any ) {\r\n    Array.prototype.forEach.call( elements, ( el, i ) => {\r\n      el.style[ property ] = value;\r\n    } );\r\n  }\r\n\r\n  removeClassAll( elements: any, className: string ): void {\r\n    Array.prototype.forEach.call( elements, ( el, i ) => {\r\n      this.removeClass( el, className );\r\n    } );\r\n  }\r\n\r\n  addClassAll( elements: any, className: string ): void {\r\n    Array.prototype.forEach.call( elements, ( el, i ) => {\r\n      this.addClass( el, className );\r\n    } );\r\n  }\r\n\r\n  removeClass( el: any, className: string ): void {\r\n    // console.log(el);\r\n    if ( !el ) {\r\n      return;\r\n    }\r\n    if ( el.classList )\r\n      el.classList.remove( className );\r\n    else\r\n      el.className = el.className.replace( new RegExp( '(^|\\\\b)' + className.split( ' ' ).join( '|' ) + '(\\\\b|$)', 'gi' ), ' ' );\r\n  }\r\n  addClass( el: any, className: string ) {\r\n    if ( !el ) {\r\n      return;\r\n    }\r\n    if ( el.classList )\r\n      el.classList.add( className );\r\n    else\r\n      el.className += ' ' + className;\r\n  }\r\n  toggleClass( el: any, className: string ): void {\r\n    if ( el.classList ) {\r\n      if ( el.classList.contains( className ) )\r\n        el.classList.remove( className );\r\n      else\r\n        el.classList.add( className );\r\n    }\r\n\r\n\r\n  }\r\n  hasClass( el: any, className: string ) {\r\n    if ( el.classList )\r\n      return el.classList.contains( className );\r\n    else\r\n      return new RegExp( '(^| )' + className + '( |$)', 'gi' ).test( el.className );\r\n  }\r\n  ready( fn: any ): void {\r\n    if ( ( <any>document ).attachEvent ? document.readyState === \"complete\" : document.readyState !== \"loading\" ) {\r\n      fn();\r\n    } else {\r\n      document.addEventListener( 'DOMContentLoaded', fn );\r\n    }\r\n  }\r\n\r\n  getParents( el: any, parentSelector: any ): any {\r\n    // If no parentSelector defined will bubble up all the way to *document*\r\n    if ( parentSelector === undefined ) {\r\n      parentSelector = document;\r\n    }\r\n\r\n    var parents = [];\r\n    var p = el.parentNode;\r\n\r\n    while ( p !== parentSelector ) {\r\n      var o = p;\r\n      parents.push( o );\r\n      p = o.parentNode;\r\n    }\r\n    parents.push( parentSelector ); // Push that parentSelector you wanted to stop at\r\n\r\n    return parents;\r\n  }\r\n\r\n  listener( el: any, evt: any, sel: any, handler: any ): any {\r\n    let selectorMatches = function ( el, selector ) {\r\n      var p = Element.prototype;\r\n      var f = p.matches || p.webkitMatchesSelector || ( <any>p ).mozMatchesSelector || ( <any>p ).msMatchesSelector || function ( s ) {\r\n        return [].indexOf.call( document.querySelectorAll( s ), this ) !== -1;\r\n      };\r\n      return f.call( el, selector );\r\n    }\r\n    let internalHandler = function ( event ) {\r\n      var t = event.target;\r\n      while ( t && t !== this ) {\r\n        if ( selectorMatches( t, sel ) ) {\r\n          handler.call( t, event );\r\n        }\r\n        t = t.parentNode;\r\n      }\r\n    };\r\n    el.addEventListener( evt, internalHandler );\r\n    return internalHandler;\r\n  }\r\n\r\n\r\n\r\n\r\n  initListener( type: string, id: string, cb: any ) {\r\n    let ref: any = {\r\n      id: id,\r\n      type: type,\r\n      cb: cb,\r\n      internalHandler: undefined,\r\n    };\r\n    return ref;\r\n  }\r\n\r\n  checkIfListenerExists( id: string, ar: any ): boolean {\r\n    for ( let listener of ar ) {\r\n      if ( listener.id == id ) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  on( evt: any, el: any, handler: any ) {\r\n    el.addEventListener( evt, handler );\r\n  }\r\n  off( evt: any, el: any, handler: any ) {\r\n    el.removeEventListener( evt, handler );\r\n  }\r\n  removeListener( el: any, evt: any, handler: any ) {\r\n    el.removeEventListener( evt, handler );\r\n  }\r\n  removeAllListeners( ar: any ): boolean {\r\n    for ( let listener of ar ) {\r\n      this.removeListener( document.querySelectorAll( \"body\" )[ 0 ], listener.type, listener.internalHandler );\r\n    }\r\n    return true;\r\n  }\r\n\r\n  trigger( el: any, eventName: string, data: Object ) {\r\n    if ( typeof CustomEvent === 'function' ) {\r\n      var event = <any>new CustomEvent( eventName, { detail: data } );\r\n    } else {\r\n      var event = <any>document.createEvent( 'CustomEvent' );\r\n      event.initCustomEvent( eventName, true, true, data );\r\n    }\r\n\r\n    el.dispatchEvent( event );\r\n  }\r\n\r\n  removeTrigger( el: any, eventName: string ) {\r\n    el.removeEventListener( eventName );\r\n  }\r\n\r\n  shadeBlendConvert( p: number, from: any, to: string ): string {\r\n    if ( typeof ( p ) != \"number\" || p < -1 || p > 1 || typeof ( from ) != \"string\" || ( from[ 0 ] != 'r' && from[ 0 ] != '#' ) || ( typeof ( to ) != \"string\" && typeof ( to ) != \"undefined\" ) ) return null; //ErrorCheck\r\n    if ( !this.sbcRip ) this.sbcRip = function ( d ) {\r\n      var l = d.length, RGB = new Object();\r\n      if ( l > 9 ) {\r\n        d = d.split( \",\" );\r\n        if ( d.length < 3 || d.length > 4 ) return null;//ErrorCheck\r\n        RGB[ 0 ] = i( d[ 0 ].slice( 4 ) ), RGB[ 1 ] = i( d[ 1 ] ), RGB[ 2 ] = i( d[ 2 ] ), RGB[ 3 ] = d[ 3 ] ? parseFloat( d[ 3 ] ) : -1;\r\n      } else {\r\n        if ( l == 8 || l == 6 || l < 4 ) return null; //ErrorCheck\r\n        if ( l < 6 ) d = \"#\" + d[ 1 ] + d[ 1 ] + d[ 2 ] + d[ 2 ] + d[ 3 ] + d[ 3 ] + ( l > 4 ? d[ 4 ] + \"\" + d[ 4 ] : \"\" ); //3 digit\r\n        d = i( d.slice( 1 ), 16 ), RGB[ 0 ] = d >> 16 & 255, RGB[ 1 ] = d >> 8 & 255, RGB[ 2 ] = d & 255, RGB[ 3 ] = l == 9 || l == 5 ? r( ( ( d >> 24 & 255 ) / 255 ) * 10000 ) / 10000 : -1;\r\n      }\r\n      return RGB;\r\n    }\r\n    var i = parseInt, r = Math.round, h = from.length > 9, h = typeof ( to ) == \"string\" ? to.length > 9 ? true : to == \"c\" ? !h : false : h, b = p < 0, p = b ? p * -1 : p, to = to && to != \"c\" ? to : b ? \"#000000\" : \"#FFFFFF\", f = this.sbcRip( from ), t = this.sbcRip( to );\r\n    if ( !f || !t ) return null; //ErrorCheck\r\n    if ( h ) return \"rgb(\" + r( ( t[ 0 ] - f[ 0 ] ) * p + f[ 0 ] ) + \",\" + r( ( t[ 1 ] - f[ 1 ] ) * p + f[ 1 ] ) + \",\" + r( ( t[ 2 ] - f[ 2 ] ) * p + f[ 2 ] ) + ( f[ 3 ] < 0 && t[ 3 ] < 0 ? \")\" : \",\" + ( f[ 3 ] > -1 && t[ 3 ] > -1 ? r( ( ( t[ 3 ] - f[ 3 ] ) * p + f[ 3 ] ) * 10000 ) / 10000 : t[ 3 ] < 0 ? f[ 3 ] : t[ 3 ] ) + \")\" );\r\n    else return \"#\" + ( 0x100000000 + ( f[ 3 ] > -1 && t[ 3 ] > -1 ? r( ( ( t[ 3 ] - f[ 3 ] ) * p + f[ 3 ] ) * 255 ) : t[ 3 ] > -1 ? r( t[ 3 ] * 255 ) : f[ 3 ] > -1 ? r( f[ 3 ] * 255 ) : 255 ) * 0x1000000 + r( ( t[ 0 ] - f[ 0 ] ) * p + f[ 0 ] ) * 0x10000 + r( ( t[ 1 ] - f[ 1 ] ) * p + f[ 1 ] ) * 0x100 + r( ( t[ 2 ] - f[ 2 ] ) * p + f[ 2 ] ) ).toString( 16 ).slice( f[ 3 ] > -1 || t[ 3 ] > -1 ? 1 : 3 );\r\n  }\r\n\r\n  hexToRGB( hex: string, alpha: any ): string {\r\n    if ( !hex || [ 4, 7 ].indexOf( hex.length ) === -1 ) {\r\n      return; // throw new Error('Bad Hex');\r\n    }\r\n\r\n    hex = hex.substr( 1 );\r\n    // if shortcuts (#F00) -> set to normal (#FF0000)\r\n    if ( hex.length === 3 ) {\r\n      hex = hex.split( '' ).map( function ( el ) {\r\n        return el + el + '';\r\n      } ).join( '' );\r\n    }\r\n\r\n    var r = parseInt( hex.slice( 0, 2 ), 16 ),\r\n      g = parseInt( hex.slice( 2, 4 ), 16 ),\r\n      b = parseInt( hex.slice( 4, 6 ), 16 );\r\n\r\n    if ( alpha ) {\r\n      return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha + \")\";\r\n    } else {\r\n      return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\r\n    }\r\n  }\r\n\r\n\r\n  arrayContains( needle ) {\r\n    // Per spec, the way to identify NaN is that it is not equal to itself\r\n    var findNaN = needle !== needle;\r\n    var indexOf;\r\n\r\n    if ( !findNaN && typeof Array.prototype.indexOf === 'function' ) {\r\n      indexOf = Array.prototype.indexOf;\r\n    } else {\r\n      indexOf = function ( needle ) {\r\n        var i = -1, index = -1;\r\n\r\n        for ( i = 0; i < this.length; i++ ) {\r\n          var item = this[ i ];\r\n\r\n          if ( ( findNaN && item !== item ) || item === needle ) {\r\n            index = i;\r\n            break;\r\n          }\r\n        }\r\n\r\n        return index;\r\n      };\r\n    }\r\n\r\n    return indexOf.call( this, needle ) > -1;\r\n  }\r\n\r\n  generateSelectOptions( arr: string[], translatedArr: string[] ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let translatedOpt = ( translatedArr[ i ] || arr[ i ] ).split( ';' );\r\n        let arrOpt = arr[ i ].split( ';' );\r\n        res += '<option value=\"' + arrOpt[ 0 ] + '\">' + ( translatedOpt[ 0 ] ) + '</option>';\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n  generateLanguageSelectOptions( arr: any ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        if ( arr[ i ] == 'default' ) {\r\n          res += '<option value=\"' + arr[ i ] + '\">English (Default)</option>';\r\n        } else {\r\n          res += '<option value=\"' + arr[ i ] + '\">' + arr[ i ] + '</option>';\r\n        }\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n  checkOptionContainsImage( arr: any ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: boolean = true;\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let opt: any = arr[ i ];\r\n        res = res && ( opt.indexOf( ';' ) !== -1 ) && ( opt.indexOf( '.' ) !== -1 );\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n\r\n  generateRadioImageOptions( arr: string[], translatedArr: string[], id: string ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let optHtml: string = templates.option_radio_image;\r\n        let opt: any = arr[ i ].split( ';' )\r\n        let translatedOpt = translatedArr[ i ].split( ';' )\r\n        //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n        //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n        optHtml = optHtml.replace( /{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[ 1 ] );\r\n        optHtml = optHtml.replace( /{{qId}}/g, \"nm\" + id );\r\n        optHtml = optHtml.replace( /{{label}}/g, translatedOpt[ 0 ] );\r\n        optHtml = optHtml.replace( /{{labelFor}}/g, translatedOpt[ 0 ].replace( /\\s+/g, '-' ) );\r\n        optHtml = optHtml.replace( /{{value}}/g, opt[ 0 ] );\r\n        res += optHtml;\r\n\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n  generateRadioIgnoreImageOptions( arr: string[], translatedArr: string[], id: string ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let optHtml: string = templates.option_radio;\r\n        let opt: any = arr[ i ].split( ';' );\r\n        let translatedOpt = translatedArr[ i ].split( ';' );\r\n        //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n        //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n        optHtml = optHtml.replace( /{{qId}}/g, \"nm\" + id );\r\n        optHtml = optHtml.replace( /{{label}}/g, translatedOpt[ 0 ] );\r\n        optHtml = optHtml.replace( /{{labelFor}}/g, translatedOpt[ 0 ].replace( /\\s+/g, '-' ) );\r\n        optHtml = optHtml.replace( /{{value}}/g, opt[ 0 ] );\r\n        res += optHtml;\r\n\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n\r\n\r\n  generateRadioOptions( arr: string, translatedArr: string[], id: string ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let optHtml: string = templates.option_radio;\r\n        let opt: any = arr[ i ].split( ';' );\r\n        let translatedOpt = translatedArr[ i ].split( ';' );\r\n        optHtml = optHtml.replace( /{{qId}}/g, \"nm\" + id );\r\n        optHtml = optHtml.replace( /{{label}}/g, translatedOpt[ 0 ] );\r\n        optHtml = optHtml.replace( /{{labelFor}}/g, translatedOpt[ 0 ].replace( /\\s+/g, '-' ) );\r\n        optHtml = optHtml.replace( /{{value}}/g, opt[ 0 ] );\r\n        res += optHtml;\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n  generateCheckboxImageOptions( arr: string[], translatedArr: string[], id: string ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let optHtml: string = templates.option_checkbox_image;\r\n        let opt: any = arr[ i ].split( ';' );\r\n        let translatedOpt = translatedArr[ i ].split( ';' );\r\n        //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n        //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n        optHtml = optHtml.replace( /{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[ 1 ] );\r\n        optHtml = optHtml.replace( /{{qId}}/g, \"nm\" + id );\r\n        optHtml = optHtml.replace( /{{label}}/g, translatedOpt[ 0 ] );\r\n        optHtml = optHtml.replace( /{{labelFor}}/g, translatedOpt[ 0 ].replace( /\\s+/g, '-' ) );\r\n        optHtml = optHtml.replace( /{{value}}/g, opt[ 0 ] );\r\n        res += optHtml;\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n\r\n  generateCheckboxIgnoreImageOptions( arr: string[], translatedArr: string[], id: string ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let optHtml: string = templates.option_checkbox;\r\n        let opt: any = arr[ i ].split( ';' );\r\n        let translatedOpt = translatedArr[ i ].split( ';' );\r\n\r\n        //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n        //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n        optHtml = optHtml.replace( /{{qId}}/g, \"nm\" + id );\r\n        optHtml = optHtml.replace( /{{label}}/g, translatedOpt[ 0 ] );\r\n        optHtml = optHtml.replace( /{{labelFor}}/g, translatedOpt[ 0 ].replace( /\\s+/g, '-' ) );\r\n        optHtml = optHtml.replace( /{{value}}/g, opt[ 0 ] );\r\n        res += optHtml;\r\n\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n\r\n  generateCheckboxOptions( arr: string[], translatedArr: string[], id: string ) {\r\n    if ( Array.isArray( arr ) ) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for ( i = 0; i < arr.length; i++ ) {\r\n        let optHtml: string = templates.option_checkbox;\r\n        let opt: any = arr[ i ].split( ';' );\r\n        let translatedOpt = translatedArr[ i ].split( ';' );\r\n        optHtml = optHtml.replace( /{{label}}/g, translatedOpt[ 0 ] );\r\n        optHtml = optHtml.replace( /{{labelFor}}/g, translatedOpt[ 0 ].replace( /\\s+/g, '-' ) );\r\n        optHtml = optHtml.replace( /{{value}}/g, opt[ 0 ] );\r\n\r\n        res += optHtml;\r\n\r\n      }\r\n      // console.log( res );\r\n      return res;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n//add Math.round\r\n\r\n\r\nexport { DomUtilities };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/dom/DomUtilities.ts","class Constants {\r\n  static CCTriggerPageStartTime = \"cc-trigger-page-start-time\";\r\n  static CCTriggerPageElapsedTime = \"cc-trigger-page-elapsed-time\";\r\n  static CCTriggerSiteStartTime = \"cc-trigger-site-start-time\";\r\n  static CCTriggerSiteElapsedTime = \"cc-trigger-site-elapsed-time\";\r\n  static CCTriggerSitePageViewCount = \"cc-trigger-site-page-count\";\r\n  static CCTriggerIndividualPageViewCount = \"cc-trigger-individual-page-count\";\r\n  static SURVEY_IMPRESSION_EVENT = \"onImpression\";\r\n  static SURVEY_START_EVENT = \"onStart\";\r\n  static SURVEY_DATA_EVENT = \"onData\";\r\n  static SURVEY_END_EVENT = \"onEnd\";\r\n  static SURVEY_CLOSE_EVENT = \"onClose\";\r\n  static SURVEY_QUESTION_EVENT = \"onQuestion\";\r\n  static SURVEY_ANSWER_EVENT = \"onAnswer\";\r\n  static SURVEY_CLICK_EVENT = \"onClick\";\r\n  static GRANT_TYPE = \"password\";\r\n  static AUTHORIZATION = \"Authorization\";\r\n  static AUTHORIZATION_BEARER = \"Bearer\";\r\n  static SURVEY_CLIENT = \"JS-MicroWeb\";\r\n}\r\n\r\nexport { Constants };\n\n\n// WEBPACK FOOTER //\n// ./src/Constants.ts","class Cookie {\r\n    /**\r\n     * Set/Overwrite a cookie value\r\n     *\r\n     * @param name\r\n     * @param value\r\n     * @param days      OPTIONAL Days till this cookie will stay valid. Default is current session\r\n     * @param path      OPTIONAL domain root will be used by default\r\n     */\r\n    static set(name : any, value : any, days : any, path : any) {\r\n      if (days) {\r\n          var date = new Date();\r\n              date.setTime(date.getTime()+(days*24*60*60*1000));\r\n          var expires = \"; expires=\"+date.toUTCString();\r\n      } else var expires = \"\";\r\n\r\n      var dir = path || '/';\r\n      document.cookie = name+\"=\"+value+expires+\"; path=\"+dir;\r\n  }\r\n\r\n  /**\r\n   * Retrieve a cookie value\r\n   *\r\n   * @param name\r\n   * @return String|null\r\n   */\r\n  static get(name) {\r\n      var nameEQ = name + \"=\";\r\n      var ca = document.cookie.split(';');\r\n      for(var i=0;i < ca.length;i++) {\r\n          var c = ca[i];\r\n          while (c.charAt(0)==' ') c = c.substring(1,c.length);\r\n          if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);\r\n      }\r\n      return null;\r\n  }\r\n\r\n  /**\r\n   * Remove a cookie\r\n   *\r\n   * @param name\r\n   */\r\n  static delete(name) {\r\n    Cookie.set(name,\"\",-1, undefined);\r\n  }\r\n\r\n  static getParameterByName(name : string, url : any) {\r\n    if (!url) url = window.location.href;\r\n    name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\r\n    var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\r\n        results = regex.exec(url);\r\n    if (!results) return null;\r\n    if (!results[2]) return '';\r\n    return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\r\n  }\r\n}\r\n\r\nexport { Cookie };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/Cookie.ts","\r\n//Survey Manager manages and queues survey.\r\n\r\nclass SurveyManager {\r\n\r\n  static surveyQueue: any = [];\r\n  static processQueueInterval: any = null;\r\n\r\n  static surveyInstances: any = {};\r\n\r\n  static initializeSurvey( surveyId: string ) {\r\n    //check if survey ran?\r\n    //do survey initialization.\r\n    if ( !SurveyManager.surveyInstances || !SurveyManager.surveyInstances[ surveyId ] ) {\r\n      console.error( 'Microsurvey not properly set up. Contact Support.' );\r\n      return;\r\n    }\r\n\r\n    SurveyManager.surveyInstances[ surveyId ].setupSurvey();\r\n  }\r\n\r\n  static addSurvey( surveyId ) {\r\n    ( window as any ).ccsdkDebug ? console.log( \"Adding survey ID : \" + surveyId ) : '';\r\n    SurveyManager.surveyQueue.push( surveyId );\r\n    if ( SurveyManager.processQueueInterval == null ) {\r\n      SurveyManager.processQueueInterval = setInterval( SurveyManager.processQueueIntervalCB, 100 );\r\n    }\r\n  }\r\n\r\n  static removeSurvey( surveyId ) {\r\n    if ( SurveyManager.surveyQueue.length > 0 ) {\r\n      for ( let survey in SurveyManager.surveyQueue ) {\r\n        if ( SurveyManager.surveyQueue[ survey ].surveyId == surveyId ) {\r\n          SurveyManager.surveyQueue.splice( survey, 1 );\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    if ( SurveyManager.surveyQueue.length == 0 ) {\r\n      clearInterval( SurveyManager.processQueueInterval );\r\n    }\r\n  }\r\n\r\n  static processQueueIntervalCB() {\r\n    if ( ( window as any ).globalSurveyRunning == true ) {\r\n      return;\r\n    } else {\r\n      let surveyId = SurveyManager.surveyQueue.pop();\r\n      ( window as any ).ccsdkDebug ? console.log( \"Processing survey ID \" + surveyId ) : '';\r\n      if ( surveyId == undefined ) {\r\n        clearInterval( SurveyManager.processQueueInterval );\r\n        SurveyManager.processQueueInterval = null;\r\n      } else {\r\n        ( window as any ).globalSurveyRunning = true;\r\n        SurveyManager.initializeSurvey( surveyId );\r\n      }\r\n    }\r\n  }\r\n\r\n  public static setSurveyRunning() {\r\n    ( window as any ).globalSurveyRunning = true;\r\n    ( window as any ).globalSurveyStartTime = new Date();\r\n  }\r\n\r\n  public static unsetSurveyRunning() {\r\n    ( window as any ).globalSurveyRunning = false;\r\n  }\r\n}\r\n\r\nexport { SurveyManager };\n\n\n// WEBPACK FOOTER //\n// ./src/SurveyManager.ts","// import 'whatwg-fetch';\r\n\r\nfunction makeRequest( method: string, url: string, postParams: string, headers: any, successcb: any, errorcb: any ): any {\r\n  var xhr = new XMLHttpRequest();\r\n  xhr.open( method, url );\r\n  xhr.onload = function () {\r\n    if ( ( this as any ).status >= 200 && ( this as any ).status < 300 ) {\r\n      if ( xhr.response ) {\r\n      }\r\n      let res: any = xhr.response && typeof xhr.response === 'string' && !xhr.response.match( 'GIF' ) ? JSON.parse( xhr.response ) : '';\r\n      if ( successcb ) successcb( res );\r\n    } else {\r\n      if ( errorcb ) {\r\n        errorcb( {\r\n          status: ( this as any ).status,\r\n          statusText: xhr.statusText\r\n        } );\r\n      }\r\n    }\r\n  };\r\n  xhr.onerror = function () {\r\n    if ( errorcb ) {\r\n      errorcb( {\r\n        status: ( this as any ).status,\r\n        statusText: xhr.statusText\r\n      } );\r\n    }\r\n  };\r\n  if ( headers ) {\r\n    Object.keys( headers ).forEach( function ( key ) {\r\n      xhr.setRequestHeader( key, headers[ key ] );\r\n    } );\r\n  }\r\n  // var params : any = postParams;\r\n  // We'll need to stringify if we've been given an object\r\n  // If we have a string, this is skipped.\r\n  // if (params && typeof params === 'object') {\r\n  //   params = Object.keys(params).map(function (key) {\r\n  //     return encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\r\n  //   }).join('&');\r\n  // }\r\n  xhr.send( postParams );\r\n}\r\n\r\nclass RequestHelper {\r\n\r\n  static getWithHeaders( url: string, headers: any, successcb: any, errorcb: any ) {\r\n    return makeRequest( \"GET\", url, null, headers, successcb, errorcb );\r\n  }\r\n\r\n  static postWithHeaders( url: string, data: Object, headers: any, successcb: any, errorcb: any ) {\r\n    headers[ \"Content-Type\" ] = \"application/json;charset=utf-8\";\r\n    return makeRequest( \"POST\", url, JSON.stringify( data ), headers, successcb, errorcb );\r\n\r\n  }\r\n\r\n  static get( url: string, successcb: any, errorcb: any ) {\r\n    return makeRequest( \"GET\", url, null, null, successcb, errorcb );\r\n    // let request : Request = new Request( (url as any) , new Object());\r\n    // return fetch(request).then( (response : Response) => {\r\n    //   if (response.status >= 200 && response.status < 300) {\r\n    //     return Promise.resolve(response);\r\n    //   } else {\r\n    //     var error = new Error(response.statusText);\r\n    //     // error.response = response;\r\n    //     throw error;\r\n    //   }\r\n    // }).then( (response : Response) => {\r\n    //   return response.json();\r\n    // }).catch( (error : Error) => {\r\n    //   (window as any).ccsdkDebug?console.log('Request failed ', error):'';\r\n    // });\r\n  }\r\n\r\n  /**\r\n   *\r\n   * var data = new FormData()\r\n   *  data.append('file', input.files[0])\r\n   *  data.append('user', 'hubot')\r\n   *\r\n   * @static\r\n   * @param {any} url\r\n   * @param {any} data\r\n   * @memberof Request\r\n   */\r\n  static post( url: string, data: Object, successcb: any, errorcb: any ) {\r\n    //consider, file upload?\r\n    // (window as any).ccsdkDebug?console.log(\"[\" + JSON.stringify(data) + \"]\"):'';\r\n    ( window as any ).ccsdkDebug ? console.log( \"Sending : \" + data ) : '';\r\n    return makeRequest( \"POST\", url, JSON.stringify( data ), {}, successcb, errorcb );\r\n    // let request : Request = new Request( (url as any), {\r\n    //   method : \"POST\",\r\n    //   headers : {\r\n    //     \"Content-Type\" : \"application/json; charset=utf-8\"\r\n    //   },\r\n    //   body : JSON.stringify(data)\r\n    // });\r\n    // return fetch(request).then( (response : Response) => {\r\n    //   if (response.status >= 200 && response.status < 300) {\r\n    //     return Promise.resolve(response);\r\n    //   } else {\r\n    //     let error : Error = new Error(response.statusText);\r\n    //     // error.response = response;\r\n    //     throw error;\r\n    //   }\r\n    // }).then( (response : Response) => {\r\n    //   return response.json();\r\n    // }).catch( (error : Error) => {\r\n    //   (window as any).ccsdkDebug?console.log('Request failed ', error):'';\r\n    // });\r\n  }\r\n\r\n}\r\n\r\nexport { RequestHelper };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/Request.ts","class LanguageTextFilter {\r\n\r\n    public static translateQuestionText( surveyHandler: any, question: any ) {\r\n        if ( surveyHandler.ccsdk.config.language.indexOf( 'Default' ) === -1 ) {\r\n            if ( question.translated != null &&\r\n                typeof question.translated[ surveyHandler.ccsdk.config.language ] !== 'undefined' ) {\r\n                if ( question.translated[ surveyHandler.ccsdk.config.language ].text ) {\r\n                    let qText = question.translated[ surveyHandler.ccsdk.config.language ].text.split( ':' );\r\n                    if ( question.translated[ surveyHandler.ccsdk.config.language ].text.indexOf( \":\" ) !== -1 ) {\r\n                        qText = qText[ 0 ] + ': <br><span class=\"text-normal\">' + qText[ 1 ] + '</span>';\r\n                    }\r\n                    return qText;\r\n                }\r\n                // else if ( question.translated[ surveyHandler.ccsdk.config.language ].text ) {\r\n                //     return question.translated[ surveyHandler.ccsdk.config.language ].text;\r\n                // }\r\n                // return question.translated[surveyHandler.ccsdk.config.language].text;\r\n            }\r\n        }\r\n        if ( question.text ) {\r\n            let qText = question.text.split( ':' );\r\n            if ( question.text.indexOf( \":\" ) !== -1 ) {\r\n                qText = qText[ 0 ] + ': <br><span class=\"text-normal\">' + qText[ 1 ] + '</span>';\r\n            }\r\n            return qText;\r\n        } else {\r\n            return question.text == null ? '' : question.text;\r\n        }\r\n    }\r\n\r\n    public static translateMessages( surveyHandler: any, type: string ) {\r\n        if ( surveyHandler.surveyData.translated != null && typeof surveyHandler.surveyData.translated[ surveyHandler.ccsdk.config.language ] !== 'undefined' ) {\r\n            if ( surveyHandler.ccsdk.config.language.indexOf( 'Default' ) === -1 ) {\r\n                if ( surveyHandler.surveyData.translated[ surveyHandler.ccsdk.config.language ] !== 'undefined' ) {\r\n                    if ( surveyHandler.surveyData.translated[ surveyHandler.ccsdk.config.language ][ type ] != null ) {\r\n                        return surveyHandler.surveyData.translated[ surveyHandler.ccsdk.config.language ][ type ];\r\n                    } else {\r\n                        return surveyHandler.surveyData[ type ];\r\n                    }\r\n                } else {\r\n                    return surveyHandler.surveyData[ type ];\r\n                }\r\n            } else {\r\n                return surveyHandler.surveyData[ type ];\r\n            }\r\n        }\r\n    }\r\n\r\n    public static translateDisplayLegend( surveyHandler: any, question: any ) {\r\n        if ( surveyHandler.ccsdk.config.language.indexOf( 'Default' ) === -1 ) {\r\n            if ( question.translated != null &&\r\n                typeof question.translated[ surveyHandler.ccsdk.config.language ] !== 'undefined' ) {\r\n                return question.translated[ surveyHandler.ccsdk.config.language ].displayLegend;\r\n            } else {\r\n                return question.displayLegend;\r\n            }\r\n        } else {\r\n            return question.displayLegend;\r\n        }\r\n    }\r\n\r\n    public static translateMultiSelect( surveyHandler: any, question: any ) {\r\n        if ( surveyHandler.ccsdk.config.language.indexOf( 'Default' ) === -1 ) {\r\n            if ( question.translated != null &&\r\n                typeof question.translated[ surveyHandler.ccsdk.config.language ] !== 'undefined' &&\r\n                question.translated[ surveyHandler.ccsdk.config.language ].multiSelect\r\n            ) {\r\n                let translatedOptions = question.translated[ surveyHandler.ccsdk.config.language ].multiSelect;\r\n                return question.multiSelect.map( ( x, i ) => {\r\n                    if ( translatedOptions[ i ] ) {\r\n                        return translatedOptions[ i ];\r\n                    } else {\r\n                        return x;\r\n                    }\r\n                } );\r\n            } else {\r\n                return question.multiSelect;\r\n            }\r\n        } else {\r\n            return question.multiSelect;\r\n        }\r\n    }\r\n\r\n    public static translateMultiSelectOption( surveyHandler: any, question: any, option: any ) {\r\n        let effectiveMultiselect = this.translateMultiSelect( surveyHandler, question );\r\n        if ( ( effectiveMultiselect instanceof Array ) && effectiveMultiselect.length > 0 ) {\r\n            for ( let i = 0; i < question.multiSelect.length; i++ ) {\r\n                let opt: any = question.multiSelect[ i ].split( ';' )\r\n                if ( opt[ 0 ] == option ) {\r\n                    return effectiveMultiselect[ i ].split( ';' )[ 0 ];\r\n                } else {\r\n\r\n                }\r\n            }\r\n        }\r\n        return option;\r\n    }\r\n\r\n}\r\n\r\nexport { LanguageTextFilter };\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/filters/LanguageTextFilter.ts","class Config {\r\n  static API_URL: String = \"https://api.getcloudcherry.com\";\r\n  static SURVEY_BY_TOKEN: String = \"/api/SurveyByToken/{token}/\";\r\n  // static SURVEY_BY_TOKEN : String  = \"/api/SurveyByToken/{token}/{tabletId}\";\r\n  static SURVEY_PARTIAL_RESPONSE: String = \"/api/PartialSurvey/{id}/{complete}/JS-MicroWeb\";\r\n  // static SURVEY_PARTIAL_RESPONSE : String =  \"/api/PartialSurvey/{id}/{complete}/JS-Web/{tabletId}\";\r\n  static CDN_URL: string = \"https://cx.getcloudcherry.com/\";\r\n  static CDN_ASSET_URL: string = \"https://cx.getcloudcherry.com/microsurvey-assets/\";\r\n  static POST_LOGIN_TOKEN = \"/api/LoginToken\";\r\n  static GET_SURVEY_THROTTLE_LOGIC = \"/api/SurveyThrottleLogic/{location}\";\r\n  static POST_THROTTLING = \"/api/Throttling\";\r\n  static POST_THROTTLING_ADD_ENTRIES = \"/api/Throttling/AddEntries\";\r\n  static POST_SURVEY_FINAL = \"/api/surveybytoken/{tokenId}\"\r\n  static GET_CAMPAIGN = \"/api/SurveyToken/Campaign/{token}/\"\r\n}\r\n\r\nexport { Config };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/Config.ts","import '../css/main.scss';\r\nimport * as QuestionSurvey from '../templates/Survey.html';\r\nimport * as QuestionStart from '../templates/QuestionStart.html';\r\nimport * as QuestionSingleline from '../templates/QuestionSingleline.html';\r\nimport * as QuestionNumber from '../templates/QuestionNumber.html';\r\nimport * as QuestionMultiline from '../templates/QuestionMultiline.html';\r\nimport * as QuestionCheckbox from '../templates/QuestionCheckbox.html';\r\nimport * as QuestionRadio from '../templates/QuestionRadio.html';\r\nimport * as QuestionRadioImage from '../templates/QuestionRadioImage.html';\r\nimport * as QuestionScale from '../templates/QuestionScale.html';\r\nimport * as QuestionCSATAgreement5 from '../templates/QuestionCSATAgreement5.html';\r\nimport * as QuestionCSATSatisfaction5 from '../templates/QuestionCSATSatisfaction5.html';\r\nimport * as QuestionNPS from '../templates/QuestionNPS.html';\r\nimport * as QuestionSelect from '../templates/QuestionSelect.html';\r\nimport * as QuestionMultiSelect from '../templates/QuestionMultiSelect.html';\r\nimport * as QuestionSmile from '../templates/QuestionSmile.html';\r\nimport * as QuestionSmileInverted from '../templates/QuestionSmileInverted.html';\r\nimport * as QuestionStar from '../templates/QuestionStar.html';\r\nimport * as QuestionSlider from '../templates/QuestionSlider.html';\r\nimport * as OptionRadioImage from '../templates/OptionRadioImage.html';\r\nimport * as OptionRadio from '../templates/OptionRadio.html';\r\nimport * as OptionCheckbox from '../templates/OptionCheckbox.html';\r\nimport * as OptionCheckboxImage from '../templates/OptionCheckboxImage.html';\r\nimport * as ThankYou from '../templates/ThankYou.html';\r\nimport * as QuestionDate from '../templates/QuestionDate.html';\r\nimport * as LanguageSelector from '../templates/LanguageSelector.html';\r\n\r\nlet templates = {\r\n  question_survey: QuestionSurvey,\r\n  question_start: QuestionStart,\r\n  question_text: QuestionSingleline,\r\n  question_number: QuestionNumber,\r\n  question_scale: QuestionScale,\r\n  question_csat_agreement_5: QuestionCSATAgreement5,\r\n  question_csat_satisfaction_5: QuestionCSATSatisfaction5,\r\n  question_nps: QuestionNPS,\r\n  question_multi_line_text: QuestionMultiline,\r\n  question_multi_select: QuestionMultiSelect,\r\n  question_radio: QuestionRadio,\r\n  question_radio_image: QuestionRadioImage,\r\n  question_checkbox: QuestionCheckbox,\r\n  question_select: QuestionSelect,\r\n  question_smile_5: QuestionSmile,\r\n  question_date: QuestionDate,\r\n  question_smile_5_inverted: QuestionSmileInverted,\r\n  question_star_5: QuestionStar,\r\n  question_slider: QuestionSlider,\r\n  option_radio_image: OptionRadioImage,\r\n  option_radio: OptionRadio,\r\n  option_checkbox: OptionCheckbox,\r\n  option_checkbox_image: OptionCheckboxImage,\r\n  thankyou: ThankYou,\r\n  language_selector: LanguageSelector\r\n};\r\n\r\nexport { templates };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/templates.ts","export function isAnd(filterQuestion: any): boolean {\r\n  if (!filterQuestion) {\r\n    return false;\r\n  }\r\n  if (filterQuestion.groupBy == null || filterQuestion.groupBy.toUpperCase() == \"AND\") {\r\n    return true;\r\n  }\r\n}\r\n\r\nexport function isOr(filterQuestion: any): boolean {\r\n  if (!filterQuestion) {\r\n    return false;\r\n  }\r\n  if (filterQuestion.groupBy != null && filterQuestion.groupBy.toUpperCase() == \"OR\") {\r\n    return true;\r\n  }\r\n}\r\n\r\nexport function isNumberCheck(filterQuestion: any): boolean {\r\n  if (!filterQuestion) {\r\n    return false;\r\n  }\r\n  if (filterQuestion.answerCheck[0] === \"lt\" || filterQuestion.answerCheck[0] === \"gt\" || filterQuestion.answerCheck[0] === \"eq\") {\r\n    return true;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n  * Contains logic to control conditional flow and whether to show or hide the questions based on the user input\r\n  *\r\n  * @param filterQuestion\r\n  * @return\r\n  */\r\nexport function doesSatisfy(surveyHandler: any, filterQuestion: any): boolean {\r\n  const answer = surveyHandler.getAnswerForQuestionId(filterQuestion.questionId);\r\n  if (isNumberCheck(filterQuestion)) {\r\n    if (filterQuestion.answerCheck[0].toLowerCase() == \"lt\") {\r\n      if (answer)\r\n        if (answer.numberInput != null && answer.numberInput < filterQuestion.number) {\r\n          return true;\r\n        }\r\n    } else if (filterQuestion.answerCheck[0].toLowerCase() == (\"gt\")) {\r\n      if (answer)\r\n        if (answer.numberInput != null && answer.numberInput > filterQuestion.number) {\r\n          return true;\r\n        }\r\n    } else if (filterQuestion.answerCheck[0].toLowerCase() == (\"eq\")) {\r\n      if (answer)\r\n        if (answer.numberInput != null && answer.numberInput == filterQuestion.number) {\r\n          return true;\r\n        }\r\n    }\r\n  } else {\r\n    // any text match for text answers\r\n    if (filterQuestion.answerCheck[0] && filterQuestion.answerCheck[0].toLowerCase() === 'any text') {\r\n      if (answer && answer.textInput && answer.textInput !== ' ') {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    let iFoundAll = false;\r\n    let question = surveyHandler.getQuestionById(filterQuestion.questionId);\r\n    let questionAnswerText = answer != null && answer.textInput != null ? answer.textInput : '';\r\n    if (!answer) {\r\n      return false;\r\n    }\r\n    for (let aAnswer of filterQuestion.answerCheck) {\r\n      if (question.displayType === 'MultiSelect') {\r\n        let selectedOptions = answer.textInput.split(',');\r\n        if (selectedOptions.indexOf(aAnswer) !== -1) {\r\n          iFoundAll = true;\r\n        }\r\n      } else if (questionAnswerText === aAnswer) {\r\n        iFoundAll = true;\r\n      }\r\n    }\r\n    return iFoundAll;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function questionCompare(a: any, b: any) {\r\n  return a.sequence - b.sequence;\r\n}\r\n\r\nexport function checkLanguage(surveyHandler, fOption) {\r\n  if (surveyHandler.ccsdk.config && surveyHandler.ccsdk.config.language) {\r\n    return fOption.language === surveyHandler.ccsdk.config.language\r\n  }\r\n  return false;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/filters/filter-utils.ts","import { DomUtilities } from \"./DomUtilities\";\r\nimport {LanguageTextFilter} from '../filters/LanguageTextFilter';\r\n\r\nclass Select {\r\n  util: DomUtilities;\r\n  $body: any;\r\n  $html: any;\r\n  qId: any;\r\n  select: any;\r\n  type: string;\r\n  listeners: any = [];\r\n  constructor( qId: string ) {\r\n    this.qId = qId;\r\n  }\r\n  init( qId: string ) {\r\n    this.util = new DomUtilities();\r\n    this.$body = document.querySelectorAll( \"body\" )[ 0 ];\r\n    this.$html = document.querySelectorAll( \"html\" )[ 0 ];\r\n    var select = document.querySelectorAll( \"#\" + qId + \" .cc-select\" );\r\n\r\n    // var divSelect = document.querySelectorAll(\"div.cc-select\");\r\n    // this.util.removeAll(divSelect);\r\n    let parent = this;\r\n\r\n    //Assumption: iterating over array but there will always be one select at a time\r\n    this.type = select[ 0 ].getAttribute( 'data-type' );\r\n    Array.prototype.forEach.call( select, function ( el, i ) {\r\n      var self = el;\r\n      var $selectOptions = document.querySelectorAll( \"#\" + qId + \" .cc-select-options\" );\r\n      var classes = self.getAttribute( \"class\" ),\r\n        id = self.getAttribute( \"id\" ),\r\n        name = self.getAttribute( \"name\" );\r\n      var template = '<div class=\"' + classes + '\">';\r\n      template += '<span class=\"cc-select-trigger\">' + self.getAttribute( \"placeholder\" ) + '</span>';\r\n      template += '<div class=\"cc-select-options-container\" cc-scrollbar-container><div class=\"cc-select-options\">';\r\n      var options = self.querySelectorAll( \"option\" );\r\n      Array.prototype.forEach.call( options, function ( el, i ) {\r\n        template += '<span class=\"cc-select-option ' + el.getAttribute( \"class\" ) + '\" data-value=\"' + el.getAttribute( \"value\" ) + '\">' + el.innerHTML + '</span>';\r\n      } );\r\n      template += '</div></div></div>';\r\n      parent.util.addClass( self, 'hide' );\r\n      self.insertAdjacentHTML( 'afterend', template );\r\n    } );\r\n    this.setupListeners();\r\n  }\r\n\r\n\r\n  setupListeners() {\r\n    var self = this;\r\n    var qId = self.qId;\r\n    let ref2 = this.util.initListener( 'click', \"#\" + qId + \" .cc-select-option\", function ( e ) {\r\n      // let ref2 = this.util.initListener(this.$body, \"click\", \"#\"+qId+\" .cc-select-option\", function(e) {\r\n      ( window as any ).ccsdkDebug ? console.log( 'click cc-select-option', this ) : '';\r\n      let selfOption = this;\r\n      let value = this.getAttribute( 'data-value' );\r\n      //select cc-select-wrapper\r\n      //todo: write a function to directly select parent via selector\r\n      let selectOptions = this.parentNode;\r\n      let select = selectOptions.parentNode.parentNode;\r\n      this.select = select;\r\n      let selectWrapper = select.parentNode;\r\n      ( window as any ).ccsdkDebug ? console.log( select ) : '';\r\n      ( window as any ).ccsdkDebug ? console.log( selectOptions ) : '';\r\n      ( window as any ).ccsdkDebug ? console.log( selectWrapper ) : '';\r\n      let selectionTrigger = select.querySelectorAll( '.cc-select-trigger' )[ 0 ];\r\n\r\n      self.util.addClass( this, \"selection\" );\r\n      let selectedOptionText = selectionTrigger.textContent;\r\n      let selectedValueText = selectionTrigger.getAttribute( 'data-selection-value' ) || '';\r\n\r\n      ( window as any ).ccsdkDebug ? console.log( 'select type', self.type ) : '';\r\n      if ( self.type !== 'multiple' ) {\r\n        ( window as any ).ccsdkDebug ? console.log( 'select type', self.type ) : '';\r\n        selectedOptionText = selfOption.textContent;\r\n        ( window as any ).ccsdkDebug ? console.log( 'selected option', selectedOptionText ) : '';\r\n        self.util.removeClassAll( document.querySelectorAll( \".cc-select\" ), \"opened\" );\r\n        selectionTrigger.setAttribute( 'data-selection-value', value );\r\n        selectWrapper.querySelectorAll( \"select\" )[ 0 ].value = value;\r\n        selectionTrigger.textContent = selectedOptionText;\r\n        self.util.removeClassAll( document.querySelectorAll( \"#\" + qId + \" .cc-select-option\" ), 'selection' );\r\n        self.util.addClass( self, 'selection' );\r\n      } else {\r\n        ( window as any ).ccsdkDebug ? console.log( selectedOptionText ) : '';\r\n        if ( selectedOptionText != 'Select' ) {\r\n            selectedOptionText = self.addOrRemoveFromList(selectedOptionText, selfOption.textContent);\r\n            selectedValueText = self.addOrRemoveFromList(selectedValueText, value);\r\n        } else {\r\n          ( window as any ).ccsdkDebug ? console.log( selfOption.textContent ) : '';\r\n          selectedOptionText = selfOption.textContent;\r\n          selectedValueText = value;\r\n        }\r\n\r\n        selectWrapper.querySelectorAll( \"select\" )[ 0 ].value = selectedValueText;\r\n        selectionTrigger.setAttribute( 'data-selection-value', selectedValueText );\r\n        self.util.removeClassAll( document.querySelectorAll( \"#\" + qId + \" .cc-select-option\" ), 'selection' );        \r\n        self.selectOptions(selectedValueText);\r\n        \r\n        selectedValueText\r\n        if ( selectedOptionText.length < 1 ) {\r\n          selectionTrigger.textContent = 'Select';\r\n        } else {\r\n          selectionTrigger.textContent = selectedOptionText;\r\n        }\r\n        return false;\r\n\r\n      }\r\n\r\n    } );\r\n    this.listeners.push( ref2 );\r\n    ref2.internalHandler = this.util.listener( this.$body, ref2.type, ref2.id, ref2.cb );\r\n    let ref = this.util.initListener( 'click', \"#\" + qId + \" .cc-select-trigger\", function ( e ) {\r\n      self.$html.addEventListener( 'click', function ( e ) {\r\n        if ( !self.util.hasClass( e.target, 'cc-select-option' ) ) {\r\n          self.util.removeClassAll( document.querySelectorAll( \".cc-select\" ), \"opened\" );\r\n          self.$html.removeEventListener( 'click', function () {\r\n          } );\r\n        }\r\n      } )\r\n      var ccSelect = this.parentNode;\r\n      ( window as any ).ccsdkDebug ? console.log( 'click cc-select-trigger', ccSelect ) : '';\r\n      self.util.toggleClass( ccSelect, \"opened\" );\r\n      e.stopPropagation();\r\n    } );\r\n    this.listeners.push( ref );\r\n    ref.internalHandler = this.util.listener( this.$body, ref.type, ref.id, ref.cb );\r\n\r\n  }\r\n\r\n  destroyListeners() {\r\n    for ( let listener of this.listeners ) {\r\n      this.util.removeListener( this.$body, listener.type, listener.internalHandler );\r\n    }\r\n    return true;\r\n  }\r\n\r\n\r\n  setValue( value: string, question, surveyHandler ) {\r\n    let self = this;\r\n    let qId = self.qId;\r\n    let select: any;\r\n\r\n    select = document.querySelectorAll( \"#\" + qId + \" select\" )[ 0 ];\r\n    select.value = value;\r\n    let selectTrigger = document.querySelectorAll( \"#\" + qId + \" .cc-select-trigger\" )[ 0 ];\r\n    let selectedValueList = value.split(',');\r\n    let translatedSelection = selectedValueList.map(x => LanguageTextFilter.translateMultiSelectOption(surveyHandler, question, x) );\r\n    selectTrigger.textContent = translatedSelection.join(',');\r\n    selectTrigger.setAttribute('data-selection-value', value);\r\n  }\r\n\r\n  selectOption( el: any ) {\r\n    this.util.addClass( el, 'selection' );\r\n  }\r\n\r\n  removeOption(el){\r\n    this.util.removeClass(el, 'selection');\r\n  }\r\n\r\n  selectOptions( csv: string ) {\r\n    let self = this;\r\n    if ( csv ) {\r\n      let allOptions = csv.split( ',' );\r\n      for ( let option of allOptions ) {\r\n        let domOptions = document.querySelectorAll( \"#\" + self.qId + \" .cc-select-option\" );\r\n        Array.prototype.forEach.call( domOptions, function ( el, i ) {\r\n          if ( el.getAttribute( 'data-value' ) == option ) {\r\n            self.selectOption( el );\r\n          } else {\r\n            \r\n          }\r\n        } );\r\n      }\r\n    }\r\n  }\r\n\r\n  addOrRemoveFromList(listAsString: string, item: string){\r\n    let list = listAsString.split(',');\r\n    let itemIndex = list.indexOf(item);\r\n    if(itemIndex !== -1){\r\n      list.splice(itemIndex, 1);\r\n    } else {\r\n      list.push(item);\r\n    }\r\n    return list.join(',');\r\n  }\r\n\r\n}\r\nexport { Select }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/dom/Select.ts","import { isArray } from \"util\";\r\nimport { LanguageTextFilter } from \"./LanguageTextFilter\";\r\nimport { isAnd, isOr, doesSatisfy, questionCompare } from './filter-utils';\r\n\r\nclass ConditionalFlowFilter {\r\n  public static filterQuestion( surveyHandler: any, question: any ) {\r\n    let aAddedCount = 0;\r\n    let aRemovedCount = 0;\r\n\r\n    if ( surveyHandler.getAnswerForQuestionId( question.id ) != null ) {\r\n      for ( let aQuestion of surveyHandler.getConditionalSurveyQuestions() ) {\r\n        // console.log( aQuestion );\r\n        if ( aQuestion.conditionalFilter != null ) {\r\n          let iSatisfied = false;\r\n          let iFailed = false;\r\n          for ( let aFilterByQuestion of aQuestion.conditionalFilter.filterquestions ) {\r\n            if ( isAnd( aFilterByQuestion ) ) {\r\n              if ( doesSatisfy( surveyHandler, aFilterByQuestion ) && !iFailed ) {\r\n                iSatisfied = true;\r\n              } else {\r\n                iFailed = true;\r\n                break;\r\n              }\r\n            } else if ( isOr( aFilterByQuestion ) ) {\r\n              if ( doesSatisfy( surveyHandler, aFilterByQuestion ) ) {\r\n                iSatisfied = true;\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          const surveyQuestions = surveyHandler.getSurveyQuestions();\r\n          if ( iSatisfied && !iFailed ) {\r\n            if ( surveyQuestions.indexOf( aQuestion ) === -1 ) {\r\n              surveyQuestions.push( aQuestion );\r\n              aAddedCount++;\r\n            }\r\n          } else {\r\n            if ( surveyQuestions.indexOf( aQuestion ) !== -1 ) {\r\n              aRemovedCount++;\r\n              surveyQuestions.splice( surveyQuestions.indexOf( aQuestion ), 1 );\r\n              // surveyHandler.removePartial(aQuestion.id);\r\n              //removing from partial requires not posting partial after each question rather than posting them all at once.\r\n              surveyHandler.removeAnswer( aQuestion.id );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if ( aAddedCount > 0 || aRemovedCount > 0 ) {\r\n      surveyHandler.getSurveyQuestions().sort( questionCompare );\r\n      // surveyHandler.sendConditionalFLowQuestionsData(surveyHandler.getSurveyQuestions().size());\r\n      return true;\r\n    } else {\r\n      // return false;\r\n    }\r\n    // ( window as any ).ccsdkDebug ? console.log( surveyHandler.getSurveyQuestions() ) : '';\r\n  }\r\n}\r\n\r\nexport { ConditionalFlowFilter };\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/filters/ConditionalFlowFilter.ts","// Production steps of ECMA-262, Edition 6, 22.1.2.1\r\nif ( !( <any>Array ).from ) {\r\n  ( <any>Array ).from = ( function () {\r\n    var toStr = Object.prototype.toString;\r\n    var isCallable = function ( fn ) {\r\n      return typeof fn === 'function' || toStr.call( fn ) === '[object Function]';\r\n    };\r\n    var toInteger = function ( value ) {\r\n      var number = Number( value );\r\n      if ( isNaN( number ) ) {\r\n        return 0;\r\n      }\r\n      if ( number === 0 || !isFinite( number ) ) {\r\n        return number;\r\n      }\r\n      return ( number > 0 ? 1 : -1 ) * Math.floor( Math.abs( number ) );\r\n    };\r\n    var maxSafeInteger = Math.pow( 2, 53 ) - 1;\r\n    var toLength = function ( value ) {\r\n      var len = toInteger( value );\r\n      return Math.min( Math.max( len, 0 ), maxSafeInteger );\r\n    };\r\n\r\n    // The length property of the from method is 1.\r\n    return function from( arrayLike /*, mapFn, thisArg */ ) {\r\n      // 1. Let C be the this value.\r\n      var C = this;\r\n\r\n      // 2. Let items be ToObject(arrayLike).\r\n      var items = Object( arrayLike );\r\n\r\n      // 3. ReturnIfAbrupt(items).\r\n      if ( arrayLike == null ) {\r\n        throw new TypeError( 'Array.from requires an array-like object - not null or undefined' );\r\n      }\r\n\r\n      // 4. If mapfn is undefined, then let mapping be false.\r\n      var mapFn = arguments.length > 1 ? arguments[ 1 ] : void undefined;\r\n      var T;\r\n      if ( typeof mapFn !== 'undefined' ) {\r\n        // 5. else\r\n        // 5. a If IsCallable(mapfn) is false, throw a TypeError exception.\r\n        if ( !isCallable( mapFn ) ) {\r\n          throw new TypeError( 'Array.from: when provided, the second argument must be a function' );\r\n        }\r\n\r\n        // 5. b. If thisArg was supplied, let T be thisArg; else let T be undefined.\r\n        if ( arguments.length > 2 ) {\r\n          T = arguments[ 2 ];\r\n        }\r\n      }\r\n\r\n      // 10. Let lenValue be Get(items, \"length\").\r\n      // 11. Let len be ToLength(lenValue).\r\n      var len = toLength( items.length );\r\n\r\n      // 13. If IsConstructor(C) is true, then\r\n      // 13. a. Let A be the result of calling the [[Construct]] internal method \r\n      // of C with an argument list containing the single item len.\r\n      // 14. a. Else, Let A be ArrayCreate(len).\r\n      var A = isCallable( C ) ? Object( new C( len ) ) : new Array( len );\r\n\r\n      // 16. Let k be 0.\r\n      var k = 0;\r\n      // 17. Repeat, while k < len… (also steps a - h)\r\n      var kValue;\r\n      while ( k < len ) {\r\n        kValue = items[ k ];\r\n        if ( mapFn ) {\r\n          A[ k ] = typeof T === 'undefined' ? mapFn( kValue, k ) : mapFn.call( T, kValue, k );\r\n        } else {\r\n          A[ k ] = kValue;\r\n        }\r\n        k += 1;\r\n      }\r\n      // 18. Let putStatus be Put(A, \"length\", len, true).\r\n      A.length = len;\r\n      // 20. Return A.\r\n      return A;\r\n    };\r\n  }() );\r\n}\r\n\r\n// custom event polyfill\r\n( function () {\r\n\r\n  if ( typeof ( <any>window ).CustomEvent === \"function\" ) return false;\r\n\r\n  function CustomEvent( event, params ) {\r\n    params = params || {\r\n      bubbles: false,\r\n      cancelable: false,\r\n      detail: undefined\r\n    };\r\n    var evt = document.createEvent( 'CustomEvent' );\r\n    evt.initCustomEvent( event, params.bubbles, params.cancelable, params.detail );\r\n    return evt;\r\n  }\r\n\r\n  CustomEvent.prototype = ( <any>window ).Event.prototype;\r\n\r\n  ( <any>window ).CustomEvent = CustomEvent;\r\n} )();\r\n\r\n// includes polyfill\r\nif ( !( <any>Array.prototype ).includes ) {\r\n  Object.defineProperty( Array.prototype, 'includes', {\r\n    value: function ( searchElement, fromIndex ) {\r\n\r\n      if ( this == null ) {\r\n        throw new TypeError( '\"this\" is null or not defined' );\r\n      }\r\n\r\n      // 1. Let O be ? ToObject(this value).\r\n      var o = Object( this );\r\n\r\n      // 2. Let len be ? ToLength(? Get(O, \"length\")).\r\n      var len = o.length >>> 0;\r\n\r\n      // 3. If len is 0, return false.\r\n      if ( len === 0 ) {\r\n        return false;\r\n      }\r\n\r\n      // 4. Let n be ? ToInteger(fromIndex).\r\n      //    (If fromIndex is undefined, this step produces the value 0.)\r\n      var n = fromIndex | 0;\r\n\r\n      // 5. If n ≥ 0, then\r\n      //  a. Let k be n.\r\n      // 6. Else n < 0,\r\n      //  a. Let k be len + n.\r\n      //  b. If k < 0, let k be 0.\r\n      var k = Math.max( n >= 0 ? n : len - Math.abs( n ), 0 );\r\n\r\n      function sameValueZero( x, y ) {\r\n        return x === y || ( typeof x === 'number' && typeof y === 'number' && isNaN( x ) && isNaN( y ) );\r\n      }\r\n\r\n      // 7. Repeat, while k < len\r\n      while ( k < len ) {\r\n        // a. Let elementK be the result of ? Get(O, ! ToString(k)).\r\n        // b. If SameValueZero(searchElement, elementK) is true, return true.\r\n        if ( sameValueZero( o[ k ], searchElement ) ) {\r\n          return true;\r\n        }\r\n        // c. Increase k by 1. \r\n        k++;\r\n      }\r\n\r\n      // 8. Return false\r\n      return false;\r\n    }\r\n  } );\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/polyfills/ccsdk.polyfill.ts","import { Cookie } from './helpers/Cookie';\r\nimport { SurveyManager } from \"./SurveyManager\";\r\nimport { Survey } from \"./Survey\";\r\nimport { PrefillsBatchOrSingle } from './types';\r\n\r\n/**\r\n * functions that are exposed to SDK User are written here.\r\n * Entry point for CCSDK.\r\n */\r\n// declare var Sentry: any;\r\n\r\nlet localCCSDK = {\r\n  init: init,\r\n  destroy: destroy,\r\n  trigger: trigger,\r\n  hide: hide,\r\n  show: show,\r\n  on: on,\r\n  prefill: prefill,\r\n  prefillByTag: prefillByTag,\r\n  prefillByNote: prefillByNote\r\n};\r\n\r\n// let instances : any = {};\r\n\r\n( window as any ).globalSurveyRunning = false;\r\n( window as any ).ccsdkDebug = false;\r\n( window as any ).isMobile = window.innerWidth <= 768 ? true : false;\r\n\r\nif ( typeof ( window as any ).CCSDK !== 'undefined' ) {\r\n  var queue = ( window as any ).CCSDK.q;\r\n  ( window as any ).CCSDK = function () {\r\n    if ( arguments && arguments.length == 0 ) {\r\n      var time = new Date();\r\n    } else {\r\n      ( window as any ).ccsdkDebug ? console.log( arguments ) : '';\r\n      var args = ( Array as any ).from( arguments );\r\n      //Call this functions as ccsdk('functionName', ['argument1', 'argument2']);\r\n      var functionName = args.splice( 0, 1 )[ 0 ];\r\n      ( window as any ).ccsdkDebug ? console.log( functionName ) : '';\r\n      return localCCSDK[ functionName ].apply( this, args );\r\n    }\r\n  };\r\n  if ( queue ) {\r\n    for ( var q of queue ) {\r\n      var args = ( Array as any ).from( q );\r\n      var functionName = args.splice( 0, 1 )[ 0 ];\r\n      localCCSDK[ functionName ].apply( this, args );\r\n    }\r\n  }\r\n  let eventCCReady: Event = document.createEvent( 'Event' );\r\n  eventCCReady.initEvent( 'ccready', true, true );\r\n  document.dispatchEvent( eventCCReady );\r\n}\r\n\r\nexport function init( surveyToken: any ) {\r\n  //config options can be set in arguments[1]\r\n  //available config options : themeColor\r\n  surveyToken = decodeURIComponent( surveyToken ).trim();\r\n  let config = ( typeof arguments[ 1 ] === 'object' ) ? arguments[ 1 ] : {};\r\n  //create survey instance\r\n  if ( typeof Cookie.get( surveyToken + '-finish' ) !== 'undefined' && Cookie.get( surveyToken + '-finish' ) ) {\r\n    return;\r\n  }\r\n  if ( typeof Cookie.get( surveyToken + '-coolDown' ) !== 'undefined' && Cookie.get( surveyToken + '-coolDown' ) ) {\r\n    return;\r\n  }\r\n\r\n  if ( typeof config.isActive !== 'undefined' && config.isActive ) {\r\n    SurveyManager.surveyInstances[ surveyToken ] = ( SurveyManager.surveyInstances[ surveyToken ] ) ? SurveyManager.surveyInstances[ surveyToken ] : new Survey( surveyToken, config );\r\n    SurveyManager.surveyInstances[ surveyToken ].tracking.trackEvent( 'Init MicroSurvey', {\r\n      token: surveyToken,\r\n      data: {\r\n        name: ( <any>window ).isMobile ? 'Mobile Mode' : 'Desktop Mode',\r\n        action: surveyToken\r\n      }\r\n    }, null, null );\r\n    return SurveyManager.surveyInstances[ surveyToken ];\r\n  } else {\r\n    //do nothing\r\n  }\r\n\r\n}\r\n\r\nexport function destroy( surveyToken: string ) {\r\n  //remove from trigger manager, delete instance.\r\n  if ( !SurveyManager ||\r\n    !SurveyManager.surveyInstances ||\r\n    !SurveyManager.surveyInstances[ surveyToken ] ||\r\n    !SurveyManager.surveyInstances[ surveyToken ].dom ) {\r\n    return;\r\n  }\r\n  SurveyManager.surveyInstances[ surveyToken ].dom.destroyListeners();\r\n  SurveyManager.surveyInstances[ surveyToken ].destroy();\r\n  delete SurveyManager.surveyInstances[ surveyToken ];\r\n}\r\n//\r\nexport function trigger( surveyToken: string, type: string, target: string ) {\r\n  ( window as any ).ccsdkDebug ? console.log( SurveyManager.surveyInstances ) : '';\r\n\r\n  if ( typeof SurveyManager.surveyInstances[ surveyToken ] != 'undefined' ) {\r\n    SurveyManager.surveyInstances[ surveyToken ].tracking.trackEvent( 'Trigger Type', {\r\n      token: surveyToken,\r\n      data: {\r\n        name: type,\r\n        action: surveyToken\r\n      }\r\n    }, null, null );\r\n    SurveyManager.surveyInstances[ surveyToken ].trigger( type, target );\r\n  }\r\n  //tell trigger manager to register trigger.\r\n}\r\n\r\nexport function on( surveyToken: string, type: string, callback: any ) {\r\n  if ( typeof SurveyManager.surveyInstances[ surveyToken ] != 'undefined' ) {\r\n    SurveyManager.surveyInstances[ surveyToken ].tracking.trackEvent( 'Event Listeners', {\r\n      token: surveyToken,\r\n      data: {\r\n        name: type,\r\n        action: surveyToken\r\n      }\r\n    }, null, null );\r\n    SurveyManager.surveyInstances[ surveyToken ].on( type, callback );\r\n  }\r\n}\r\n\r\nexport function prefill( surveyToken: string, ...restArgs: PrefillsBatchOrSingle ) {\r\n\r\n  if ( typeof SurveyManager.surveyInstances[ surveyToken ] != 'undefined' ) {\r\n    let questionId;\r\n    if ( typeof restArgs[ 0 ] === 'string' ) {\r\n      questionId = restArgs[ 0 ];\r\n    } else {\r\n      questionId = Object.keys( restArgs[ 0 ] ).length + ' Questions';\r\n    }\r\n    SurveyManager.surveyInstances[ surveyToken ].tracking.trackEvent( 'Prefill', {\r\n      token: surveyToken,\r\n      data: {\r\n        name: questionId,\r\n        action: surveyToken\r\n      }\r\n    }, null, null );\r\n    SurveyManager.surveyInstances[ surveyToken ].prefill( ...restArgs, 'DIRECT' );\r\n  }\r\n}\r\n\r\nexport function prefillByTag( surveyToken: string, ...restArgs: PrefillsBatchOrSingle ) {\r\n  if ( typeof SurveyManager.surveyInstances[ surveyToken ] != 'undefined' ) {\r\n    let questionTag;\r\n    if ( typeof restArgs[ 0 ] === 'string' ) {\r\n      questionTag = restArgs[ 0 ];\r\n    } else {\r\n      questionTag = Object.keys( restArgs[ 0 ] ).length + ' Questions';\r\n    }\r\n    SurveyManager.surveyInstances[ surveyToken ].tracking.trackEvent( 'Prefill by tag', {\r\n      token: surveyToken,\r\n      data: {\r\n        name: questionTag,\r\n        action: surveyToken\r\n      }\r\n    }, null, null );\r\n    SurveyManager.surveyInstances[ surveyToken ].prefill( ...restArgs, 'BY_TAG' );\r\n  }\r\n}\r\n\r\nexport function prefillByNote( surveyToken: string, ...restArgs: PrefillsBatchOrSingle ) {\r\n  if ( typeof SurveyManager.surveyInstances[ surveyToken ] != 'undefined' ) {\r\n    let questionNote;\r\n    if ( typeof restArgs[ 0 ] === 'string' ) {\r\n      questionNote = restArgs[ 0 ];\r\n    } else {\r\n      questionNote = Object.keys( restArgs[ 0 ] ).length + ' Questions';\r\n    }\r\n    SurveyManager.surveyInstances[ surveyToken ].tracking.trackEvent( 'Prefill by Note', {\r\n      token: surveyToken,\r\n      data: {\r\n        name: questionNote,\r\n        action: surveyToken\r\n      }\r\n    }, null, null );\r\n    SurveyManager.surveyInstances[ surveyToken ].prefill( ...restArgs, 'BY_NOTE' );\r\n  }\r\n}\r\n\r\nexport function show( surveyToken: string ) {\r\n  if ( typeof SurveyManager.surveyInstances[ surveyToken ] != 'undefined' ) {\r\n    SurveyManager.surveyInstances[ surveyToken ].show();\r\n  }\r\n}\r\n\r\nexport function hide( surveyToken: string ) {\r\n  if ( typeof SurveyManager.surveyInstances[ surveyToken ] != 'undefined' ) {\r\n    SurveyManager.surveyInstances[ surveyToken ].dom.destroyListeners();\r\n    SurveyManager.surveyInstances[ surveyToken ].destroy();\r\n    SurveyManager.surveyInstances[ surveyToken ].hide();\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/CCSDKEntry.ts","import { CCSDKConfig } from \"./interfaces/CCSDKConfig\";\r\nimport { DisplayConfig } from \"./interfaces/DisplayConfig\";\r\nimport { SurveyHandler } from \"./SurveyHandler\";\r\nimport { DomSurvey } from \"./helpers/dom/DomSurvey\";\r\nimport { DomUtilities } from \"./helpers/dom/DomUtilities\";\r\nimport { Scrollbar } from \"./helpers/dom/ScrollBar\";\r\nimport { Cookie } from './helpers/Cookie';\r\nimport { Constants } from './Constants';\r\nimport { Slider } from \"./helpers/dom/Slider\";\r\nimport { SurveyManager } from \"./SurveyManager\";\r\nimport { TriggerManager } from \"./TriggerManager\";\r\nimport { Triggers } from './Triggers';\r\nimport { RequestHelper } from './helpers/Request';\r\nimport { Config } from './Config';\r\nimport { MatomoTracker } from './helpers/tracking';\r\nimport { templates } from \"./helpers/templates\";\r\nimport { PrefillsBatchOrSingle, PrefillType } from \"./types\";\r\n\r\nclass Survey {\r\n  survey: SurveyHandler;\r\n  dom: DomSurvey;\r\n  surveyData: any;\r\n  util: DomUtilities;\r\n  scrollbar: Scrollbar;\r\n  slider: Slider;\r\n  config: CCSDKConfig;\r\n  surveyToken: string;\r\n  triggers: Triggers;\r\n  surveyRunning: boolean;\r\n  surveyDone: boolean;\r\n  surveyStatus: string;\r\n  isThrottled: boolean;\r\n  thorttlingLogic: any;\r\n  loginData: any;\r\n  debug: false;\r\n  surveyStartTime: any;\r\n  requester = new RequestHelper();\r\n  tracking: MatomoTracker;\r\n\r\n  constructor( surveyToken: string, config: CCSDKConfig ) {\r\n    this.isThrottled = true;\r\n    this.surveyDone = false;\r\n    this.surveyStatus = '';\r\n    this.surveyToken = surveyToken;\r\n    this.config = config;\r\n    this.surveyRunning = false;\r\n    this.thorttlingLogic = null;\r\n    this.tracking = new MatomoTracker();\r\n    this.tracking.token = surveyToken;\r\n    if ( typeof this.config.textDirection === 'undefined' ) {\r\n      this.config.textDirection = \"ltr\";\r\n    }\r\n\r\n    this.triggers = new Triggers( this );\r\n    TriggerManager.addSurvey( this.surveyToken, this.triggers );\r\n    this.survey = new SurveyHandler( this );\r\n    this.util = new DomUtilities;\r\n    //set themeColor of survey\r\n    this.config.brandColor = ( this.config && this.config.brandColor ) ?\r\n      this.config.brandColor : \"#db3c39\";\r\n    //use config variable textDirection and set dir\r\n    this.setHtmlTextDirection();\r\n    this.setDisplayOptions();\r\n    this.util.trigger( document, this.surveyToken + '-ready', { 'survey': this } );\r\n    //do login\r\n    this.config.username = \"test\";\r\n    this.config.password = \"test\";\r\n    this.config.location = \"location\";\r\n    this.config.language = \"English (Default)\";\r\n    //check trigger conditions and add itself to \r\n    //based on new config\r\n    //gotta and these.\r\n    this.trigger( \"click\", this.config.cssSelector );\r\n    // this.trigger(\"scroll-pixels\", this.config.scrollPercent);\r\n    // this.trigger(\"page-time\", this.config.waitSeconds);\r\n    // this.trigger(\"url-match\", this.config.grepURL);\r\n    // this.trigger(\"url-not-match\", this.config.grepInvertURL);\r\n    // this.config.scrollPercent = 10;\r\n    // this.config.waitSeconds = 5;\r\n    this.triggers.setConditionalTriggers( this.config );\r\n    // this.login(function() {\r\n    //on login\r\n    // });\r\n  }\r\n\r\n  getSurveyThrottlingLogic( cb ) {\r\n    let getThrottleUrl = Config.API_URL + Config.GET_SURVEY_THROTTLE_LOGIC.replace( '{location}', this.config.location );\r\n    let headers = {};\r\n    headers[ Constants.AUTHORIZATION ] = Constants.AUTHORIZATION_BEARER + \" \" + this.loginData.access_token;\r\n    let self = this;\r\n    let successcb = function ( data ) {\r\n      self.thorttlingLogic = data;\r\n      self.checkThrottling( cb );\r\n    };\r\n\r\n    RequestHelper.getWithHeaders( getThrottleUrl, headers, successcb, null );\r\n  }\r\n\r\n  checkThrottling( cb ) {\r\n    if ( this.thorttlingLogic != null ) {\r\n      if ( this.thorttlingLogic.inputIds == null ) {\r\n        this.thorttlingLogic.inputIds = [];\r\n      }\r\n      this.thorttlingLogic.inputIds.push( this.thorttlingLogic[ this.thorttlingLogic.uniqueIDQuestionIdOrTag.toLowerCase() ] );\r\n      if ( this.thorttlingLogic.logics != null && this.thorttlingLogic.logics.length > 0 && this.config != null ) {\r\n        this.thorttlingLogic.logics[ 0 ].filter.location = [];\r\n        this.thorttlingLogic.logics[ 0 ].filter.location.push( this.config.location );\r\n      }\r\n    }\r\n    let self = this;\r\n    let postThrottleUrl = Config.API_URL + Config.POST_THROTTLING;\r\n    let headers = {};\r\n    headers[ Constants.AUTHORIZATION ] = Constants.AUTHORIZATION + \" \" + this.loginData.access_token;\r\n    let successcb = function ( throttleResponse ) {\r\n\r\n      if ( typeof throttleResponse[ 0 ][ self.thorttlingLogic.uniqueIDQuestionIdOrTag.toLowerCase() ] && throttleResponse[ 0 ].value ) {\r\n        //get survey data?  \r\n        cb();\r\n      }\r\n    };\r\n\r\n    RequestHelper.postWithHeaders( postThrottleUrl, this.thorttlingLogic, headers, successcb, null );\r\n  }\r\n\r\n  addThrottlingEntries( isOpen: boolean ) {\r\n    let addThrottleUrl = Config.API_URL + Config.POST_THROTTLING_ADD_ENTRIES;\r\n    let headers = {};\r\n    this.loginData = { access_token: \"help\" };\r\n    headers[ Constants.AUTHORIZATION ] = Constants.AUTHORIZATION + \" \" + this.loginData.access_token;\r\n    //fill this from config and data.\r\n    let successcb = ( throttleResponse ) => {\r\n      this.debug ? console.log( throttleResponse ) : '';\r\n    }\r\n\r\n    RequestHelper.postWithHeaders( addThrottleUrl, {\r\n      user: \"\",\r\n      mobile: \"\",\r\n      emailId: \"\",\r\n      customId: \"\",\r\n      surveySentDate: \"\",\r\n      surveyOpenDate: \"\",\r\n      channel: \"\",\r\n      isOpened: isOpen\r\n    }, headers, successcb, null );\r\n\r\n  }\r\n\r\n  setupSurvey() {\r\n    // this.getSurveyData();\r\n    this.initSurvey();\r\n  }\r\n\r\n  setHtmlTextDirection() {\r\n    let ccSDKElement = document.querySelector( '.cc-sdk' );\r\n    if ( !ccSDKElement ) {\r\n      return;\r\n    }\r\n    let ccSDKDir: string = ccSDKElement.getAttribute( 'dir' );\r\n    let direction: string = ( this.config && this.config.textDirection ) ?\r\n      this.config.textDirection : ( ccSDKDir ? ccSDKDir : \"ltr\" );\r\n    ccSDKElement.setAttribute( 'dir', direction );\r\n  }\r\n\r\n  setDisplayOptions() {\r\n    this.survey.surveyDisplay.position = this.config && this.config.position ?\r\n      this.config.position : \"bottom right\";\r\n    let welcomePopupAnimation = 'hide-right-left';\r\n    // this.survey.surveyDisplay.welcomePopupAnimation =  this.config && this.config.display && this.config.display.welcomePopupAnimation ?\r\n    // \"hide-\"+ this.config.display.welcomePopupAnimation : \"hide-right-left\";\r\n    // this.survey.surveyDisplay.surveyPopupAnimation =  this.config && this.config.display && this.config.display.surveyPopupAnimation ?\r\n    // \"hide-\"+ this.config.display.surveyPopupAnimation : \"hide-right-left\";\r\n    // this.survey.surveyDisplay.surveyPosition =  this.config && this.config.display && this.config.display.surveyPosition ?\r\n    // this.config.display.surveyPosition : ( this.config.display.position.search(/bottom/gi)==-1?\"top\":\"bottom\" ) ;\r\n\r\n    switch ( this.survey.surveyDisplay.position ) {\r\n      case 'bottom right':\r\n        welcomePopupAnimation = 'hide-right-left';\r\n        break;\r\n      case 'right bottom':\r\n        welcomePopupAnimation = 'hide-right-left';\r\n        break;\r\n      case 'top right':\r\n        welcomePopupAnimation = 'hide-right-left';\r\n        break;\r\n      case 'right top':\r\n        welcomePopupAnimation = 'hide-right-left';\r\n        break;\r\n      case 'bottom left':\r\n        welcomePopupAnimation = 'hide-left-right';\r\n        break;\r\n      case 'left bottom':\r\n        welcomePopupAnimation = 'hide-left-right';\r\n        break;\r\n      case 'top left':\r\n        welcomePopupAnimation = 'hide-left-right';\r\n        break;\r\n      case 'left top':\r\n        welcomePopupAnimation = 'hide-left-right';\r\n        break;\r\n      default:\r\n        welcomePopupAnimation = 'hide-right-left';\r\n        break;\r\n    }\r\n    this.survey.surveyDisplay.welcomePopupAnimation = welcomePopupAnimation;\r\n    this.tracking.trackEvent( 'Welcome Pop up Position', {\r\n      token: this.tracking.token,\r\n      data: {\r\n        name: this.survey.surveyDisplay.position,\r\n        action: null\r\n      }\r\n    }, null, null );\r\n\r\n    this.survey.surveyDisplay.surveyPosition = this.config.position.search( /bottom/gi ) == -1 ? \"top\" : \"bottom\";\r\n  }\r\n\r\n  getSurveyData() {\r\n    let self: Survey = this;\r\n    let successcb = function ( surveyData ) {\r\n      self.debug ? console.log( surveyData ) : '';\r\n      // console.log(surveyData);\r\n\r\n      self.surveyData = surveyData;\r\n      if ( surveyData && surveyData.questions && surveyData.questions[ 0 ] ) {\r\n        self.tracking.username = surveyData.questions[ 0 ].user;\r\n      }\r\n\r\n      self.tracking.token = self.surveyToken;\r\n\r\n      self.tracking.trackEvent( 'Login Success', {\r\n        token: self.tracking.token,\r\n        data: {\r\n          name: 'Token',\r\n          action: self.surveyToken\r\n        }\r\n      }, console.log, console.error )\r\n      self.tracking.trackEvent( 'Survey Length', {\r\n        token: self.tracking.token,\r\n        data: {\r\n          name: `${ surveyData.questions.length } Questions`,\r\n          action: `${ surveyData.preFill ? surveyData.preFill.length : 0 } Prefills`\r\n        }\r\n      }, null, null );\r\n      let event = new CustomEvent( Constants.SURVEY_DATA_EVENT + \"-\" + self.surveyToken, { detail: JSON.parse( JSON.stringify( surveyData ) ) } );\r\n      document.dispatchEvent( event );\r\n      if ( !self.config.skipWelcomePage ) {\r\n        self.dom.hideLoader();\r\n      }\r\n      if ( self.surveyData ) {\r\n        self.initSurveyQuestions();\r\n      } else {\r\n        this.tracking.trackEvent( 'Expired Survey', {\r\n          token: this.tracking.token,\r\n          data: {\r\n            name: null,\r\n            action: null\r\n          }\r\n        }, null, null );\r\n        self.survey.displayWelcomeQuestion( \"The Survey has been expired\" );\r\n      }\r\n    };\r\n    let errorcb = null;\r\n    this.survey.fetchQuestions( successcb, errorcb );\r\n  }\r\n\r\n  initSurvey() {\r\n    //if survey already run don't run?\r\n    //if default trigger initiated and survey already run then don't run.\r\n    let self: Survey = this;\r\n    // if(!self.surveyRunning) {\r\n    //   self.surveyRunning = true;\r\n    // }\r\n    self.surveyRunning = true;\r\n    self.dom = new DomSurvey( this );\r\n    self.dom.setTheme( self.config.brandColor, this.config.keepAlive ? this.config.keepAlive : 0 );\r\n    // self.survey.attachSurvey(this.surveyData);\r\n    // self.config.language = \"हिन्दी\";\r\n    self.config.language = \"default\";\r\n    if ( self.surveyToken && decodeURIComponent( self.surveyToken ).trim() !== '' && !self.config.skipWelcomePage ) {\r\n      self.survey.displayWelcomeQuestion();\r\n    } else if ( self.config.skipWelcomePage ) {\r\n      let onImpressionEvent = new CustomEvent( Constants.SURVEY_IMPRESSION_EVENT + \"-\" + this.surveyToken );\r\n      document.dispatchEvent( onImpressionEvent );\r\n      self.dom.startSurvey();\r\n      self.survey.setCoolDownPeriod( self.config, self.surveyToken );\r\n      this.surveyStartTime = new Date();\r\n      self.survey.acceptAnswers();\r\n    }\r\n    self.dom.setupListeners();\r\n    // self.survey.displayLanguageSelector();\r\n    //survey start event.\r\n    // let onSurveyStartEvent = new CustomEvent(Constants.SURVEY_START_EVENT + \"-\" + this.surveyToken);\r\n    // document.dispatchEvent(onSurveyStartEvent);\r\n  }\r\n\r\n  initSurveyQuestions() {\r\n    let self: Survey = this;\r\n    self.survey.attachSurvey( this.surveyData );\r\n    // self.dom.setupListeners();\r\n    // self.config.language = \"हिन्दी\";\r\n    self.config.language = \"default\";\r\n    // self.survey.displayLanguageSelector();\r\n    //survey start event.\r\n    this.dom.initSurveyDom();\r\n    let onSurveyStartEvent = new CustomEvent( Constants.SURVEY_START_EVENT + \"-\" + this.surveyToken );\r\n    document.dispatchEvent( onSurveyStartEvent );\r\n  }\r\n\r\n  public on( type: string, callback: any ) {\r\n    document.addEventListener( type + \"-\" + this.surveyToken, function ( e: any ) {\r\n      callback( e.detail );\r\n    } );\r\n  }\r\n\r\n  public show() {\r\n    //do show and hide things.\r\n    SurveyManager.setSurveyRunning();\r\n    //show survey\r\n    this.setupSurvey();\r\n\r\n  }\r\n\r\n  public hide() {\r\n    SurveyManager.unsetSurveyRunning();\r\n    this.survey.destroy();\r\n    this.tracking.trackEvent( 'Survey Destroyed', {\r\n      token: this.tracking.token,\r\n      data: {\r\n        name: ( <any>new Date() - ( <any>window ).globalSurveyStartTime ) + 's',\r\n        action: null\r\n      }\r\n    }, null, null );\r\n  }\r\n\r\n  public destroy() {\r\n    //remove all listeners?\r\n    SurveyManager.unsetSurveyRunning();\r\n    this.survey.destroy();\r\n  }\r\n\r\n\r\n  public prefill( restOfArgs: PrefillsBatchOrSingle, type: PrefillType ) {\r\n    let prefillObject;\r\n    if ( typeof restOfArgs[ 0 ] !== 'object' ) {\r\n      prefillObject = {\r\n        [ <string>restOfArgs[ 0 ] ]: restOfArgs[ 1 ]\r\n      };\r\n    } else {\r\n      prefillObject = restOfArgs[ 0 ];\r\n    }\r\n    //save this in this.surveyHandler\r\n    if ( type === 'DIRECT' ) {\r\n      this.survey.fillPrefillDirect( prefillObject );\r\n    } else if ( type === 'BY_TAG' ) {\r\n      this.survey.fillPrefill( prefillObject );\r\n    } else if ( type === 'BY_NOTE' ) {\r\n      this.survey.fillPrefillByNote( prefillObject );\r\n    }\r\n  }\r\n\r\n\r\n  public trigger( type: string, target: any ) {\r\n    let self: Survey = this;\r\n    switch ( type ) {\r\n      case 'click':\r\n        console.log( 'enable click trigger ##' )\r\n        this.triggers.enableClickTrigger( target, function () {\r\n          // self.initSurvey();\r\n          // Scrollbar.initAll();\r\n          // self.slider = new Slider();\r\n          // self.setupSurvey();\r\n          SurveyManager.addSurvey( self.surveyToken );\r\n\r\n        } );\r\n        break;\r\n      case 'page-count':\r\n        let count: number = parseInt( target );\r\n        this.triggers.enablePageCountTrigger( count );\r\n\r\n        break;\r\n      case 'site-count':\r\n        let count2: number = parseInt( target );\r\n        this.triggers.enableSiteCountTrigger( count2 );\r\n        break;\r\n      case 'page-time':\r\n        this.triggers.enablePageTimeTrigger( parseInt( target ) );\r\n        break;\r\n      case 'site-time':\r\n        this.triggers.enableSiteTimeTrigger( parseInt( target ) );\r\n        break;\r\n      case 'url-match':\r\n        this.triggers.enablePopUpByURLPatternTrigger( target );\r\n        break;\r\n      case 'url-not-match':\r\n        this.triggers.enablePopUpByNotURLPatternTrigger( target );\r\n        break;\r\n      case 'utm-match':\r\n        this.triggers.enablePopUpByUTMPatternTrigger( target );\r\n        break;\r\n      case 'scroll-pixels':\r\n        this.triggers.enableScrollPixelsTrigger( parseInt( target ) );\r\n        break;\r\n      case 'launch':\r\n        SurveyManager.addSurvey( self.surveyToken );\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nexport { Survey };\n\n\n// WEBPACK FOOTER //\n// ./src/Survey.ts","// import 'whatwg-fetch';\r\nimport { Config } from \"./Config\";\r\nimport { DisplayConfig } from \"./interfaces/DisplayConfig\";\r\nimport { RequestHelper } from \"./helpers/Request\";\r\nimport { templates } from \"./helpers/templates\";\r\nimport { DomUtilities } from \"./helpers/dom/DomUtilities\";\r\nimport { DomSurvey } from \"./helpers/dom/DomSurvey\";\r\nimport { ConditionalTextFilter } from \"./helpers/filters/ConditionalTextFilter\";\r\nimport { Constants } from \"./Constants\";\r\nimport { LanguageTextFilter } from \"./helpers/filters/LanguageTextFilter\";\r\nimport { Select } from \"./helpers/dom/Select\";\r\nimport { Cookie } from \"./helpers/Cookie\";\r\nimport { ConditionalFlowFilter } from \"./helpers/filters/ConditionalFlowFilter\";\r\nimport { PrefillDictionary } from \"./types\";\r\nimport { start } from \"repl\";\r\n\r\nclass SurveyHandler {\r\n  surveyToken: string;\r\n  surveyData: any;\r\n  questions: any;\r\n  prefillQuestions: any;\r\n  questionsToDisplay: any;\r\n  randomNumber: Number;\r\n  welcomeQuestion: any;\r\n  welcomeQuestionButtonText: any;\r\n  prefillResponses: any;\r\n  prefillDirect: any;\r\n  prefillWithTags: any;\r\n  prefillWithNote: any;\r\n  questionResponses: any;\r\n  answers: any = {};\r\n  surveyAnswers: any = {};\r\n  util: DomUtilities;\r\n  dom: DomSurvey;\r\n  displayThankYouCb: any;\r\n  destroySurveyCb: any;\r\n  acceptAnswersCb: any;\r\n  surveyDisplay: DisplayConfig;\r\n  currentQuestion: any;\r\n  conditionalQuestions: any;\r\n  ccsdk: any;\r\n  welcomeInterval: any;\r\n  welcomeQuestionDisplayTime: any;\r\n  domListeners: any;\r\n  languageSelect: any;\r\n  private _prefillsPartiallyPosted = false;\r\n  // isPartialAvailable : Boolean;\r\n\r\n  constructor(ccsdk) {\r\n    this.surveyToken = ccsdk.surveyToken;\r\n    this.surveyData = {};\r\n    this.surveyDisplay = {\r\n      position: \"\",\r\n      surveyPosition: \"\",\r\n      welcomePopupAnimation: \"\",\r\n      surveyPopupAnimation: \"\"\r\n    };\r\n    this.ccsdk = ccsdk;\r\n    this.domListeners = [];\r\n    this.questions = [];\r\n    this.questionsToDisplay = [];\r\n    this.prefillQuestions = [];\r\n    this.conditionalQuestions = [];\r\n    this.prefillResponses = [];\r\n    this.prefillWithTags = {};\r\n    this.prefillWithNote = {};\r\n    this.prefillDirect = {};\r\n    this.answers = {};\r\n    this.util = new DomUtilities();\r\n    this.dom = ccsdk.dom;\r\n    this.displayThankYouCb = (e: any) => {\r\n      //perform final post\r\n      this.finalPost(null, null);\r\n      if (this.ccsdk && this.ccsdk.tracking) {\r\n        this.ccsdk.tracking.trackEvent(\r\n          \"Completed Survey\",\r\n          {\r\n            token: this.ccsdk.tracking.token,\r\n            data: {\r\n              name: null,\r\n              action: null\r\n            }\r\n          },\r\n          null,\r\n          null\r\n        );\r\n      }\r\n\r\n      let thankyouHtml: any = templates.thankyou;\r\n      // thankyouHtml = thankyouHtml.replace(\"{{question}}\", this.surveyData.thankyouText);\r\n      // thankyouHtml = thankyouHtml.replace(\"{{question}}\", LanguageTextFilter.translateMessages(this, \"thankyouText\"));\r\n      let thankyouText = this.ccsdk.config.thankyouText\r\n        ? this.ccsdk.config.thankyouText\r\n        : this.surveyData.thankyouText\r\n          ? this.surveyData.thankyouText\r\n          : \"Thank You\";\r\n      let startText = this.ccsdk.config.startButtonText\r\n        ? this.ccsdk.config.startButtonText\r\n        : \"Start\";\r\n      thankyouHtml = thankyouHtml.replace(\"{{question}}\", thankyouText);\r\n      thankyouHtml = thankyouHtml.replace(\"{{button}}\", startText);\r\n      thankyouHtml = thankyouHtml.replace(\r\n        \"{{branding}}\",\r\n        this.surveyData.branding &&\r\n          this.surveyData.branding.toUpperCase() === \"NONE\"\r\n          ? \"no-branding\"\r\n          : \"full-branding\"\r\n      );\r\n      this.ccsdk.dom.replaceInQuestionsContainer(thankyouHtml);\r\n      //TODO : Fix this Add class not working???\r\n      let thankyouContainer: any = this.util.get(\"#cc-thankyou-container\");\r\n      (window as any).ccsdkDebug ? console.log(thankyouContainer) : \"\";\r\n      this.util.addClass(thankyouContainer[0], \"show-thankyou-slide\");\r\n      let onSurveyEndEvent = new CustomEvent(\r\n        Constants.SURVEY_END_EVENT + \"-\" + this.ccsdk.surveyToken\r\n      );\r\n      document.dispatchEvent(onSurveyEndEvent);\r\n      //set done cookie for 30 days.\r\n      Cookie.set(this.surveyToken + \"-finish\", \"true\", 30, \"/\");\r\n      setTimeout(() => {\r\n        this.ccsdk.dom.destroyListeners();\r\n        this.destroy();\r\n      }, 2000);\r\n    };\r\n\r\n    this.destroySurveyCb = (e: any) => {\r\n      let self: SurveyHandler = this;\r\n      //send end survey event.\r\n      let onSurveyEndEvent = new CustomEvent(\r\n        Constants.SURVEY_END_EVENT + \"-\" + this.ccsdk.surveyToken\r\n      );\r\n      document.dispatchEvent(onSurveyEndEvent);\r\n      self.destroy();\r\n    };\r\n\r\n    this.acceptAnswersCb = (e: any) => {\r\n      let self: SurveyHandler = this;\r\n      // (window as any).ccsdkDebug?console.log(self):'';\r\n      // (window as any).ccsdkDebug?console.log('question answered',e:'')\r\n      let data: any = <any>e.detail;\r\n      let response: any = {};\r\n      response.questionId = data.questionId;\r\n\r\n      switch (data.type) {\r\n        case \"scale\":\r\n          response.text = null;\r\n          response.number = Number(data.data.number);\r\n          self.postPartialAnswer(data.index, response, false, null, null);\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case \"nps\":\r\n          response.text = null;\r\n          response.number = Number(data.data.number);\r\n          self.postPartialAnswer(data.index, response, false, null, null);\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case \"radio\":\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          // response.number = Number(data.data.number);\r\n          self.postPartialAnswer(data.index, response, false, null, null);\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case \"radioImage\":\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          self.postPartialAnswer(data.index, response, false, null, null);\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case \"smile\":\r\n          response.text = null;\r\n          response.number = Number(data.data.number);\r\n          self.postPartialAnswer(data.index, response, false, null, null);\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case \"star\":\r\n          response.text = null;\r\n          response.number = Number(data.data.number);\r\n          self.postPartialAnswer(data.index, response, false, null, null);\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case \"multiline\":\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer(data.index, response, false, null, null);\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex(data.index);\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case \"singleline\":\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer(data.index, response, false, null, null);\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex(data.index);\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case \"number\":\r\n          response.text = null;\r\n          response.number = Number(data.data.number);\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer(data.index, response, false, null, null);\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex(data.index);\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case \"checkbox\":\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer(data.index, response, false, null, null);\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex(data.index);\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case \"select\":\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer(data.index, response, false, null, null);\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex(data.index);\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case \"slider\":\r\n          response.text = data.data.text;\r\n          response.number = Number(data.data.number);\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer(data.index, response, false, null, null);\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex(data.index);\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    };\r\n  }\r\n\r\n  fetchQuestions(successcb, errorcb) {\r\n    this.randomNumber = parseInt(String(Math.random() * 1000));\r\n    let surveyUrl = Config.SURVEY_BY_TOKEN.replace(\r\n      \"{token}\",\r\n      \"\" + this.surveyToken\r\n    );\r\n    // surveyUrl = surveyUrl.replace(\"{tabletId}\", \"\" + this.randomNumber);\r\n    surveyUrl = Config.API_URL + surveyUrl;\r\n    RequestHelper.get(surveyUrl, successcb, errorcb);\r\n\r\n    // (window as any).ccsdkDebug?console.log(data):'';\r\n    // this.surveyData = data.then(function();\r\n    // (window as any).ccsdkDebug?console.log(this.surveyData):'';\r\n  }\r\n\r\n  removeAnswer(questionId) {\r\n    delete this.answers[questionId];\r\n    delete this.surveyAnswers[questionId];\r\n  }\r\n\r\n  attachSurvey(surveyData: any) {\r\n    this.surveyData = surveyData;\r\n    this.setupPrefill();\r\n    this.setupSurveyContainer();\r\n    //clean survey\r\n    this.cleanSurvey();\r\n    this.displayQuestions();\r\n    this.displayThankYou();\r\n    this.destroySurvey();\r\n  }\r\n\r\n  setupPrefill() {\r\n    if (\r\n      this.surveyData &&\r\n      this.surveyData.preFill &&\r\n      this.surveyData.preFill.length > 0\r\n    ) {\r\n      this.surveyData.preFill.map(response => {\r\n        this.fillPrefillQuestionObject(response.questionId, response);\r\n      });\r\n    }\r\n  }\r\n\r\n  cleanSurvey() {\r\n    this.questionsToDisplay = [];\r\n    this.answers = {};\r\n    this.surveyAnswers = {};\r\n    this.conditionalQuestions = [];\r\n  }\r\n\r\n  setupSurveyContainer() {\r\n    let surveyHtml: any = templates.question_survey;\r\n    surveyHtml = surveyHtml.replace(\"{{surveyToken}}\", this.surveyToken);\r\n    surveyHtml = surveyHtml.replace(\r\n      \"{{animation}}\",\r\n      this.surveyDisplay.surveyPopupAnimation\r\n    );\r\n    surveyHtml = surveyHtml.replace(\r\n      /{{location}}/g,\r\n      this.surveyDisplay.surveyPosition\r\n    );\r\n    this.ccsdk.dom.appendInBody(surveyHtml);\r\n  }\r\n\r\n  displayQuestionSelector() { }\r\n\r\n  displayWelcomeQuestion(warningWelcomeText?: string) {\r\n    //call this with true when welcome container is clicked.\r\n    // this.ccsdk.addThrottlingEntries(false);\r\n    let onSurveyImpressionEvent = new CustomEvent(\r\n      Constants.SURVEY_IMPRESSION_EVENT + \"-\" + this.surveyToken\r\n    );\r\n    document.dispatchEvent(onSurveyImpressionEvent);\r\n    this.ccsdk.surveyStartTime = new Date();\r\n    let self = this;\r\n    let welcomeHtml: any = templates.question_start;\r\n    welcomeHtml = welcomeHtml.replace(\"{{surveyToken}}\", this.surveyToken);\r\n    // welcomeHtml = welcomeHtml.replace(\"{{question}}\", this.surveyData.welcomeText);\r\n    let welcomeText = this.ccsdk.config.welcomeText\r\n      ? this.ccsdk.config.welcomeText\r\n      : \"Welcome\";\r\n    // welcomeHtml = welcomeHtml.replace(\"{{question}}\", LanguageTextFilter.translateMessages(this, \"welcomeText\"));\r\n    let startText = this.ccsdk.config.startButtonText\r\n      ? this.ccsdk.config.startButtonText\r\n      : \"Start\";\r\n    if (warningWelcomeText) {\r\n      document.getElementById(this.surveyToken + \"-welcome\").remove();\r\n      welcomeHtml = welcomeHtml.replace(\"{{question}}\", warningWelcomeText);\r\n      welcomeHtml = welcomeHtml.replace(\"{{button}}\", \"Close\");\r\n      welcomeHtml = welcomeHtml.replace(\"{{action}}\", \"button-close\");\r\n    } else {\r\n      welcomeHtml = welcomeHtml.replace(\"{{question}}\", welcomeText);\r\n      welcomeHtml = welcomeHtml.replace(\"{{button}}\", startText);\r\n      welcomeHtml = welcomeHtml.replace(\"{{action}}\", \"survey-start\");\r\n    }\r\n    welcomeHtml = welcomeHtml.replace(\r\n      \"{{location}}\",\r\n      this.surveyDisplay.position\r\n    );\r\n    welcomeHtml = welcomeHtml.replace(\r\n      \"{{animation}}\",\r\n      this.surveyDisplay.welcomePopupAnimation\r\n    );\r\n    // (window as any).ccsdkDebug?console.log(\"Appending in body\"):'';\r\n    this.ccsdk.dom.appendInBody(welcomeHtml);\r\n    this.ccsdk.dom.showWelcomeContainer();\r\n    this.setCoolDownPeriod(this.ccsdk.config, this.surveyToken);\r\n    if (\r\n      typeof this.ccsdk.config.keepAlive != undefined &&\r\n      this.ccsdk.config.keepAlive > 0\r\n    ) {\r\n      this.welcomeQuestionDisplayTime = new Date();\r\n      this.welcomeInterval = setInterval(() => {\r\n        self.checkWelcomeQuestionDisplay(self.ccsdk.config.keepAlive);\r\n      }, 1000);\r\n    }\r\n\r\n    this.acceptAnswers();\r\n    // self.survey.displayLanguageSelector();\r\n  }\r\n\r\n  setCoolDownPeriod(campaign, surveyToken) {\r\n    if (campaign && campaign.coolDownPeriod && campaign.coolDownPeriod != 0) {\r\n      Cookie.set(\r\n        surveyToken + \"-coolDown\",\r\n        \"true\",\r\n        campaign.coolDownPeriod / 86400,\r\n        \"/\"\r\n      );\r\n    } else {\r\n      Cookie.set(surveyToken + \"-coolDown\", \"true\", 1, \"/\");\r\n    }\r\n  }\r\n\r\n  checkWelcomeQuestionDisplay(keepAlive) {\r\n    let self = this;\r\n    let now = new Date();\r\n    if (keepAlive) {\r\n      // console.log((now.getTime() - this.welcomeQuestionDisplayTime.getTime()) / 1000);\r\n      if (\r\n        keepAlive <=\r\n        (now.getTime() - this.welcomeQuestionDisplayTime.getTime()) / 1000\r\n      ) {\r\n        self.killWelcomeQuestion();\r\n      }\r\n    }\r\n  }\r\n\r\n  killWelcomeQuestion() {\r\n    this.destroy();\r\n    clearInterval(this.welcomeInterval);\r\n  }\r\n  cancelKillWelcomeQuestion() {\r\n    clearInterval(this.welcomeInterval);\r\n  }\r\n\r\n  displayLanguageSelector() {\r\n    let self = this;\r\n    let options1: string;\r\n    let qId = \"languageSelector\";\r\n    let cTemplate1 = templates.language_selector;\r\n    options1 = this.util.generateLanguageSelectOptions([\"default\"]);\r\n    if (this.surveyData.translated) {\r\n      options1 = this.util.generateLanguageSelectOptions(\r\n        [\"default\"].concat(Object.keys(this.surveyData.translated))\r\n      );\r\n    }\r\n    cTemplate1 = cTemplate1.replace(/{{questionId}}/g, qId);\r\n    cTemplate1 = cTemplate1.replace(\"{{options}}\", options1);\r\n    cTemplate1 = cTemplate1.replace(\"{{requiredLabel}}\", true ? \"*\" : \"\");\r\n    this.ccsdk.dom.replaceInQuestionsContainer(cTemplate1);\r\n    let $questionContainer = document.querySelectorAll(\r\n      \".cc-questions-container\"\r\n    );\r\n    let $body = document.getElementsByTagName(\"body\")[0];\r\n\r\n    this.util.addClass($questionContainer[0].firstChild, \"show-slide\");\r\n    this.languageSelect = new Select(qId);\r\n    let submitBtn = document.querySelectorAll(\".submit-icon\");\r\n    this.util.removeClassAll(submitBtn, \"act-cc-button-next\");\r\n    this.util.addClassAll(submitBtn, \"act-cc-button-lang-next\");\r\n    if (this.languageSelect) {\r\n      this.languageSelect.destroyListeners();\r\n    }\r\n    this.languageSelect.init(qId);\r\n    let selectRes = \"\";\r\n    if (\r\n      this.util.checkIfListenerExists(\r\n        \"#\" + qId + \" .cc-select-options .cc-select-option\",\r\n        this.domListeners\r\n      )\r\n    ) {\r\n      // return;\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"display language select - previous listeners exists\")\r\n        : \"\";\r\n      this.removePrevListener(\r\n        \"#\" + qId + \" .cc-select-options .cc-select-option\"\r\n      );\r\n    }\r\n    let ref = this.util.initListener(\r\n      \"click\",\r\n      \"#\" + qId + \" .cc-select-options .cc-select-option\",\r\n      function () {\r\n        self.ccsdk.debug ? console.log(\"languageSelectOption\") : \"\";\r\n        selectRes = document.querySelectorAll(\r\n          \"#\" + qId + \" .cc-select-trigger\"\r\n        )[0].innerHTML;\r\n      }\r\n    );\r\n    this.domListeners.push(ref);\r\n    ref.internalHandler = this.util.listener($body, ref.type, ref.id, ref.cb);\r\n\r\n    let languageSelect2 = this.util.initListener(\r\n      \"click\",\r\n      \".act-cc-button-lang-next\",\r\n      function () {\r\n        self.ccsdk.debug ? console.log(\"languageNext\") : \"\";\r\n        self.ccsdk.config.language = \"default\";\r\n        self.ccsdk.config.language = selectRes; //language selection from menu then show first question\r\n        //set config rtl or ltr\r\n        let isRTL = /[\\u0600-\\u06FF]/.test(selectRes);\r\n        self.ccsdk.config.textDirection = isRTL ? \"rtl\" : \"ltr\";\r\n        self.ccsdk.setHtmlTextDirection();\r\n        self.util.removeClassAll(submitBtn, \"act-cc-button-lang-next\");\r\n        self.util.addClassAll(submitBtn, \"act-cc-button-next\");\r\n        self.ccsdk.dom.loadFirstQuestion(); // this.loadFirstQuestion();\r\n        // self.postPrefillPartialAnswer( false, null, null );\r\n      }\r\n    );\r\n    this.domListeners.push(languageSelect2);\r\n\r\n    languageSelect2.internalHandler = this.util.listener(\r\n      $body,\r\n      languageSelect2.type,\r\n      languageSelect2.id,\r\n      languageSelect2.cb\r\n    );\r\n\r\n    // this.util.addClass(thankyouContainer[0], 'show-thankyou-slide');\r\n\r\n    // this.ccsdk.dom.appendInBody(cTemplate1);\r\n    // this.ccsdk.dom.showLanguageSelector();\r\n    (window as any).ccsdkDebug ? console.log(cTemplate1) : \"\";\r\n  }\r\n\r\n  displayThankYou() {\r\n    let self: SurveyHandler = this;\r\n    document.addEventListener(\"ccdone\", this.displayThankYouCb);\r\n  }\r\n\r\n  displayQuestions() {\r\n    //check question is supported, based on question types.\r\n    //filter pre fill questions.\r\n    this.questions = this.surveyData.questions;\r\n\r\n    // this.questionsToDisplay = (this.surveyData.questions as any[]).filter(this.filterQuestions);\r\n    this.filterQuestions();\r\n    //sort questions and display them?\r\n    this.questionsToDisplay = this.questionsToDisplay.sort(\r\n      this.questionCompare\r\n    );\r\n    let ccSurvey: any;\r\n    ccSurvey = document.getElementsByClassName(\"cc-questions-container\");\r\n    // ccSurvey = ccSurvey[0];\r\n    let surveyObject = ccSurvey[0];\r\n    // (window as any).ccsdkDebug?console.log(this.questionsToDisplay):'';\r\n    //chec\r\n    //for now just do 1st question.\r\n    for (let question of this.questionsToDisplay) {\r\n      if (this.checkConditionals(question)) {\r\n        let compiledTemplate = this.compileTemplate(question);\r\n        question.compiledTemplate = compiledTemplate;\r\n        // surveyObject.innerHTML += compiledTemplate;\r\n        //register handlers for onclick?\r\n      } else {\r\n        if (this.isPrefillQuestion(question)) {\r\n          this.prefillQuestions.push(question);\r\n        }\r\n      }\r\n      //else don't display it.\r\n    }\r\n    // (window as any).ccsdkDebug?console.log(surveyObject.innerHTML):'';\r\n    // this.postPartialAnswer(this.questionsToDisplay[0], \"test\");\r\n  }\r\n\r\n  getSurveyQuestions(): any {\r\n    return this.questionsToDisplay;\r\n  }\r\n\r\n  getAnswerForQuestionId(questionId: string) {\r\n    let answer = this.surveyAnswers[questionId];\r\n    if (typeof answer === \"undefined\") {\r\n      for (let response of this.prefillResponses) {\r\n        if (response.questionId == questionId) {\r\n          return response;\r\n        }\r\n      }\r\n    }\r\n    return this.surveyAnswers[questionId];\r\n  }\r\n\r\n  acceptAnswers() {\r\n    let self: SurveyHandler = this;\r\n    // (window as any).ccsdkDebug?console.log('add question answered listener':'')\r\n    document.addEventListener(\"q-answered\", this.acceptAnswersCb);\r\n  }\r\n\r\n  fillPrefillQuestionObject(id: any, response: any) {\r\n    let question: any = this.getQuestionById(id);\r\n    let responseStored = this.getPrefillResponseById(id);\r\n    if (responseStored != null) {\r\n      this.updatePrefillResponseById(id, response);\r\n    } else {\r\n      this.prefillResponses.push(response);\r\n    }\r\n  }\r\n\r\n  fillPrefill(prefillObj: PrefillDictionary) {\r\n    Object.keys(prefillObj).map(x => {\r\n      this.prefillWithTags[x.toLowerCase()] = prefillObj[x];\r\n    });\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"prefillByTag\", this.prefillWithTags)\r\n      : \"\";\r\n  }\r\n\r\n  fillPrefillByNote(prefillObj: PrefillDictionary) {\r\n    Object.keys(prefillObj).map(x => {\r\n      this.prefillWithNote[x.toLowerCase()] = prefillObj[x];\r\n    });\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"prefillByNote\", this.prefillWithNote)\r\n      : \"\";\r\n  }\r\n\r\n  fillPrefillDirect(prefillObj: PrefillDictionary) {\r\n    Object.keys(prefillObj).forEach(x => {\r\n      this.prefillDirect[x] = prefillObj[x];\r\n    });\r\n\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"prefillDirect\", this.prefillDirect)\r\n      : \"\";\r\n  }\r\n\r\n  fillPrefillQuestion(id: any, value: any, valueType: string) {\r\n    let question: any = this.getQuestionById(id);\r\n\r\n    let response: any;\r\n    let responseStored = this.getPrefillResponseById(id);\r\n    if (responseStored != null) {\r\n      response = responseStored;\r\n    } else {\r\n      response = {\r\n        questionId: question.id,\r\n        questionText: question.text,\r\n        textInput: null,\r\n        numberInput: null\r\n      };\r\n    }\r\n    valueType = this.getAnswerTypeFromDisplayType(question.displayType);\r\n\r\n    if (valueType.toLowerCase() == \"number\") {\r\n      response.numberInput = value;\r\n    }\r\n    if (valueType.toLowerCase() == \"text\") {\r\n      response.textInput = value;\r\n    }\r\n    if (responseStored != null) {\r\n      this.updatePrefillResponseById(id, response);\r\n    } else {\r\n      this.prefillResponses.push(response);\r\n    }\r\n  }\r\n\r\n  postPrefillPartialAnswer(fullSubmission = false, successcb, errorcb) {\r\n    if (!fullSubmission && this._prefillsPartiallyPosted) {\r\n      return;\r\n    }\r\n    this._prefillsPartiallyPosted = true;\r\n    if (!this.surveyData.partialResponseId) {\r\n      return;\r\n    }\r\n    let surveyPartialUrl = Config.SURVEY_PARTIAL_RESPONSE.replace(\r\n      \"{id}\",\r\n      this.surveyData.partialResponseId\r\n    );\r\n    surveyPartialUrl = surveyPartialUrl.replace(\"{complete}\", \"false\");\r\n    surveyPartialUrl = Config.API_URL + surveyPartialUrl;\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"Posting Prefill Responses to Server\")\r\n      : \"\";\r\n    (window as any).ccsdkDebug ? console.log(this.prefillResponses) : \"\";\r\n\r\n    if (!this.surveyData.partialResponseId) {\r\n      // run successCB if there is one.\r\n      if (successcb) {\r\n        successcb();\r\n      }\r\n      return;\r\n    }\r\n    if (\r\n      typeof this.prefillResponses !== \"undefined\" &&\r\n      this.prefillResponses.length > 0\r\n    ) {\r\n      RequestHelper.postWithHeaders(\r\n        surveyPartialUrl,\r\n        this.prefillResponses,\r\n        {},\r\n        successcb,\r\n        errorcb\r\n      );\r\n    } else {\r\n      // console.log('No Prefill data');\r\n      return;\r\n    }\r\n  }\r\n\r\n  updatePrefillResponseById(id: any, resp: any) {\r\n    for (let response of this.prefillResponses) {\r\n      if (response.questionId == id) {\r\n        response = resp;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  getPrefillResponseById(id: any) {\r\n    return this.prefillResponses.find(x => x.id === id);\r\n  }\r\n\r\n  getQuestionById(id: any) {\r\n    return this.questions.find(x => x.id === id);\r\n  }\r\n\r\n  postPartialAnswer(\r\n    index: any,\r\n    response: any,\r\n    complete = false,\r\n    successcb,\r\n    errorcb\r\n  ) {\r\n    this.postPrefillPartialAnswer(complete, null, null);\r\n\r\n    let question: any = this.questionsToDisplay[index];\r\n\r\n    let data: any = {\r\n      questionId: question.id,\r\n      questionText: question.text,\r\n      textInput: response.text,\r\n      numberInput: response.number\r\n    };\r\n\r\n    let surveyPartialUrl = Config.SURVEY_PARTIAL_RESPONSE.replace(\r\n      \"{id}\",\r\n      this.surveyData.partialResponseId\r\n    );\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\r\n        \"partial response\",\r\n        question.id ==\r\n        this.questionsToDisplay[this.questionsToDisplay.length - 1].id\r\n      )\r\n      : \"\";\r\n    surveyPartialUrl = surveyPartialUrl.replace(\"{complete}\", `${complete}`);\r\n    surveyPartialUrl = Config.API_URL + surveyPartialUrl;\r\n\r\n    //add partial answer to main answer\r\n    this.surveyAnswers[question.id] = data;\r\n\r\n    data = [data];\r\n\r\n    let onSurveyAnswerEvent = new CustomEvent(\r\n      Constants.SURVEY_ANSWER_EVENT + \"-\" + this.surveyToken\r\n    );\r\n    document.dispatchEvent(onSurveyAnswerEvent);\r\n\r\n    if (!this.surveyData.partialResponseId) {\r\n      // run success callback and return\r\n      if (successcb) {\r\n        successcb();\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (\r\n      question.id ==\r\n      this.questionsToDisplay[this.questionsToDisplay.length - 1].id\r\n    ) {\r\n      //last question post moved to separate function\r\n      RequestHelper.postWithHeaders(\r\n        surveyPartialUrl,\r\n        data,\r\n        {},\r\n        successcb,\r\n        errorcb\r\n      );\r\n    } else {\r\n      RequestHelper.postWithHeaders(\r\n        surveyPartialUrl,\r\n        data,\r\n        {},\r\n        successcb,\r\n        errorcb\r\n      );\r\n    }\r\n  }\r\n\r\n  finalPost(successcb, errorcb) {\r\n    //last question\r\n    let postSurveyFinalUrl = Config.POST_SURVEY_FINAL.replace(\r\n      \"{tokenId}\",\r\n      this.ccsdk.surveyToken\r\n    );\r\n    postSurveyFinalUrl = Config.API_URL + postSurveyFinalUrl;\r\n    let answersAll = [];\r\n    // hack for partial flushing\r\n    let lastAnswer;\r\n\r\n    if (Object.keys(this.surveyAnswers).length == 0) {\r\n      return;\r\n    }\r\n    for (let answer in this.surveyAnswers) {\r\n      let response = this.surveyAnswers[answer];\r\n      if (\r\n        response &&\r\n        (response.textInput !== null || response.numberInput !== null)\r\n      ) {\r\n        answersAll.push(response);\r\n        lastAnswer = response;\r\n      }\r\n    }\r\n    for (let answer in this.prefillResponses) {\r\n      answersAll.push(this.prefillResponses[answer]);\r\n    }\r\n    let timeAtPost = new Date().getTime();\r\n    let finalData = {\r\n      id: this.ccsdk.surveyToken,\r\n      user: this.ccsdk.config.username,\r\n      locationId: null,\r\n      responses: answersAll,\r\n      nps: 0,\r\n      surveyClient: Constants.SURVEY_CLIENT,\r\n      responseDuration: Math.floor(\r\n        (timeAtPost - this.ccsdk.surveyStartTime.getTime()) / 1000\r\n      )\r\n    };\r\n    if (lastAnswer) {\r\n      let _lastAnswer = {\r\n        text: lastAnswer.textInput,\r\n        number: lastAnswer.numberInput\r\n      };\r\n      this.postPartialAnswer(\r\n        this.questionsToDisplay.length - 1,\r\n        _lastAnswer,\r\n        true,\r\n        null,\r\n        null\r\n      );\r\n    }\r\n\r\n    if (finalData.responses && finalData.responses.length > 0) {\r\n      RequestHelper.postWithHeaders(\r\n        postSurveyFinalUrl,\r\n        finalData,\r\n        {},\r\n        successcb,\r\n        errorcb\r\n      );\r\n    } else {\r\n      successcb();\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * check if conditions are satsified which are required to display question?\r\n   *\r\n   * @param {any} question\r\n   * @memberof Survey\r\n   */\r\n  checkConditionals(question: any) {\r\n    return true;\r\n  }\r\n\r\n  compileTemplate(question: any) {\r\n    let self: SurveyHandler = this;\r\n    //get question type\r\n    let questionTemplate;\r\n    // (window as any).ccsdkDebug?console.log(question):'';\r\n    if (question != \"undefined\") {\r\n      switch (question.displayType) {\r\n        case \"Slider\":\r\n          let displayLegend = question.displayLegend;\r\n          let opt: any = question.multiSelect[0].split(\"-\");\r\n          let optMin: any = opt[0].split(\";\");\r\n          let optMax: any = opt[1].split(\";\");\r\n          //get text question template and compile it.\r\n          questionTemplate = templates.question_slider;\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{question}}\",\r\n            ConditionalTextFilter.filterText(this, question)\r\n          );\r\n          questionTemplate = questionTemplate.replace(/{{min}}/g, optMin[0]);\r\n          if (displayLegend[0]) {\r\n            questionTemplate = questionTemplate.replace(\r\n              /{{minLabel}}/g,\r\n              displayLegend[0] + \"-\"\r\n            );\r\n          } else {\r\n            questionTemplate = questionTemplate.replace(/{{minLabel}}/g, \"\");\r\n          }\r\n          questionTemplate = questionTemplate.replace(/{{max}}/g, optMax[0]);\r\n          if (displayLegend[1]) {\r\n            questionTemplate = questionTemplate.replace(\r\n              /{{maxLabel}}/g,\r\n              displayLegend[1] + \"-\"\r\n            );\r\n          } else {\r\n            questionTemplate = questionTemplate.replace(/{{maxLabel}}/g, \"\");\r\n          }\r\n          questionTemplate = questionTemplate.replace(\r\n            /{{questionId}}/g,\r\n            \"id\" + question.id\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{isRequired}}\",\r\n            question.isRequired ? \"true\" : \"false\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{requiredLabel}}\",\r\n            question.isRequired ? \"*\" : \"\"\r\n          );\r\n          break;\r\n        case \"Scale\":\r\n          //get text question template and compile it.\r\n          (window as any).ccsdkDebug ? console.log(question.questionTags) : \"\";\r\n          if (question.questionTags.includes(\"NPS\")) {\r\n            questionTemplate = templates.question_nps;\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{question}}\",\r\n              ConditionalTextFilter.filterText(this, question)\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              /{{questionId}}/g,\r\n              \"id\" + question.id\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{isRequired}}\",\r\n              question.isRequired ? \"true\" : \"false\"\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{requiredLabel}}\",\r\n              question.isRequired ? \"*\" : \"\"\r\n            );\r\n          } else if (question.questionTags.includes(\"CSAT\")) {\r\n            if (question.questionTags.includes(\"csat_satisfaction_5\")) {\r\n              questionTemplate = templates.question_csat_satisfaction_5;\r\n            } else if (question.questionTags.includes(\"csat_agreement_5\")) {\r\n              questionTemplate = templates.question_csat_agreement_5;\r\n            }\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{question}}\",\r\n              ConditionalTextFilter.filterText(this, question)\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              /{{questionId}}/g,\r\n              \"id\" + question.id\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{isRequired}}\",\r\n              question.isRequired ? \"true\" : \"false\"\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{requiredLabel}}\",\r\n              question.isRequired ? \"*\" : \"\"\r\n            );\r\n          } else {\r\n            let tileColor = \"\";\r\n            let style = \"\";\r\n            if (\r\n              question.attributes != null &&\r\n              question.attributes.scaleColor &&\r\n              question.attributes.scaleColor.length > 0\r\n            ) {\r\n              if (question.attributes.scaleColor !== \"Gradient\") {\r\n                tileColor = question.attributes.scaleColor;\r\n              } else {\r\n                tileColor = \"#02BAEE\";\r\n              }\r\n            } else if (\r\n              question.presentationMode != null &&\r\n              question.presentationMode.indexOf(\"Color\") !== -1\r\n            ) {\r\n              tileColor = question.presentationMode.split(\":\")[1];\r\n            }\r\n            if (tileColor.length > 0) {\r\n              let tileColorDark = this.util.shadeBlendConvert(\r\n                -0.3,\r\n                tileColor,\r\n                undefined\r\n              );\r\n              style =\r\n                \"\\\r\n                <style>\\\r\n                #id\" +\r\n                question.id +\r\n                \" .option-number-item.option-scale{\\\r\n                  background-color : \" +\r\n                tileColor +\r\n                \";\\\r\n                }\\\r\n                #id\" +\r\n                question.id +\r\n                \" .option-number-item.option-scale:hover,\\\r\n                #id\" +\r\n                question.id +\r\n                \" .option-number-item.option-scale.selected{\\\r\n                  background-color : \" +\r\n                tileColorDark +\r\n                \";\\\r\n                }\\\r\n                </style>\\\r\n              \";\r\n            }\r\n\r\n            questionTemplate = templates.question_scale;\r\n            questionTemplate = questionTemplate.replace(/{{style}}/g, style);\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{question}}\",\r\n              ConditionalTextFilter.filterText(this, question)\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              /{{questionId}}/g,\r\n              \"id\" + question.id\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{isRequired}}\",\r\n              question.isRequired ? \"true\" : \"false\"\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{requiredLabel}}\",\r\n              question.isRequired ? \"*\" : \"\"\r\n            );\r\n            //construct NPS scale here....\r\n            let startRange = 0.0;\r\n            let endRange = 10.0;\r\n            let options = \"\";\r\n            let startRangeLabel = \"\";\r\n            // let startRangeLabel = \"\";\r\n            // let endRangeLabel = \"Very likely\";\r\n            let endRangeLabel = \"\";\r\n            let midRangeLabel = \"\";\r\n\r\n            if (\r\n              question.questionTags.includes(\"ces_agree_5\") ||\r\n              question.questionTags.includes(\"ces_agree_7\")\r\n            ) {\r\n              startRangeLabel = \"Strongly Disagree\";\r\n              endRangeLabel = \"Strongly Agree\";\r\n              if (question.questionTags.includes(\"ces_agree_7\")) {\r\n                midRangeLabel = \"Somewhat Agree\";\r\n              }\r\n            } else if (\r\n              question.questionTags.includes(\"ces_effort_5\") ||\r\n              question.questionTags.includes(\"ces_effort_7\")\r\n            ) {\r\n              startRangeLabel = \"High Effort\";\r\n              endRangeLabel = \"Low Effort\";\r\n              if (question.questionTags.includes(\"ces_effort_7\")) {\r\n                midRangeLabel = \"Moderate Effort\";\r\n              }\r\n            } else if (question.anchorMetricName != null) {\r\n              let metricName = question.anchorMetricName;\r\n              let customMetric = this.surveyData.customMetrics[metricName];\r\n              let optionsLength = customMetric.optionCategories.length;\r\n              startRangeLabel = customMetric.optionCategories[0].label;\r\n              if (optionsLength > 2) {\r\n                midRangeLabel = customMetric.optionCategories[1].label;\r\n              } else {\r\n                midRangeLabel = null;\r\n              }\r\n              endRangeLabel =\r\n                customMetric.optionCategories[optionsLength - 1].label;\r\n            }\r\n\r\n            let displayLegend = LanguageTextFilter.translateDisplayLegend(\r\n              this,\r\n              question\r\n            );\r\n            if (displayLegend) {\r\n              if (displayLegend.length > 0) {\r\n                startRangeLabel = displayLegend[0] ? displayLegend[0] : null;\r\n                endRangeLabel = displayLegend[1] ? displayLegend[1] : null;\r\n              }\r\n            }\r\n            if (question.multiSelect.length > 0) {\r\n              startRange = parseFloat(question.multiSelect[0].split(\"-\")[0]);\r\n              if (startRangeLabel == null) {\r\n                startRangeLabel = question.multiSelect[0]\r\n                  .split(\"-\")[0]\r\n                  .split(\";\")[1];\r\n              }\r\n              endRange = parseFloat(question.multiSelect[0].split(\"-\")[1]);\r\n              if (endRangeLabel == null) {\r\n                endRangeLabel = question.multiSelect[0]\r\n                  .split(\"-\")[1]\r\n                  .split(\";\")[1];\r\n              }\r\n            }\r\n            startRangeLabel = startRangeLabel == null ? \"\" : startRangeLabel;\r\n            endRangeLabel = endRangeLabel == null ? \"\" : endRangeLabel;\r\n            let mobileImageUrl = \"\";\r\n            let imageVisibility010 = \"hide\";\r\n            let imageVisibility110 = \"hide\";\r\n            let scaleVisibility = \"show-inline\";\r\n            let scaleImageContainer = \"\";\r\n            if (startRange == 0 && endRange == 10) {\r\n              mobileImageUrl =\r\n                \"https://cx.getcloudcherry.com/microsurvey-assets/scale-0-10-neutral.svg\";\r\n              imageVisibility010 = \"show\";\r\n              imageVisibility110 = \"hide\";\r\n              scaleVisibility = \"hide\";\r\n              scaleImageContainer = \"scale-image-container\";\r\n            } else if (startRange == 1 && endRange == 10) {\r\n              mobileImageUrl =\r\n                \"https://cx.getcloudcherry.com/microsurvey-assets/scale-1-10-neutral.svg\";\r\n              imageVisibility010 = \"hide\";\r\n              imageVisibility110 = \"show\";\r\n              scaleVisibility = \"hide\";\r\n              scaleImageContainer = \"scale-image-container\";\r\n            }\r\n            // console.log('scale', startRange, endRange);\r\n            let divider: any = 1;\r\n            if (endRange < 11) {\r\n            } else {\r\n              divider = (endRange - startRange) / 10.0;\r\n            }\r\n            let initial = 0.0;\r\n            let optionStyle = \"\";\r\n            let legendDimension;\r\n            if ((window as any).isMobile) {\r\n              if (endRange < 11) {\r\n                let parentContainer = window.innerWidth - 40;\r\n                let dimension =\r\n                  ((100 / (endRange - startRange + 1) - 0.5) *\r\n                    parentContainer) /\r\n                  100;\r\n                dimension = dimension > 48 ? 48 : dimension;\r\n                legendDimension = (endRange - startRange + 1) * (dimension + 1);\r\n                optionStyle = `width:${dimension}px;height:${dimension}px;padding:${(dimension -\r\n                  15) /\r\n                  2}px;`;\r\n              }\r\n            } else {\r\n              imageVisibility010 = \"hide\";\r\n              imageVisibility110 = \"hide\";\r\n              scaleVisibility = \"show-inline\";\r\n              scaleImageContainer = \"\";\r\n              mobileImageUrl = \"\";\r\n            }\r\n\r\n            if (question.questionTags.includes(\"CES\")) {\r\n              var leftWidth = 38 * 3 + \"px\";\r\n              for (\r\n                let initial = startRange;\r\n                initial <= endRange;\r\n                initial += divider\r\n              ) {\r\n                options +=\r\n                  '<span data-rating=\"' +\r\n                  initial +\r\n                  '\" class=\"option-number-item option-' +\r\n                  endRange +\r\n                  \"-scale-\" +\r\n                  initial +\r\n                  \" \" +\r\n                  scaleVisibility +\r\n                  '\" style=\"' +\r\n                  optionStyle +\r\n                  '\">' +\r\n                  initial +\r\n                  \"</span>\";\r\n              }\r\n            } else if (question.anchorMetricName != null) {\r\n              let metricName = question.anchorMetricName;\r\n              let customMetric = this.surveyData.customMetrics[metricName];\r\n\r\n              var cmwidthstart = customMetric.optionCategories[0].categoryRange.split(\r\n                \",\"\r\n              )[0];\r\n              var cmwidthend = customMetric.optionCategories[1].categoryRange.split(\r\n                \",\"\r\n              )[0];\r\n              var leftWidth = (cmwidthend - cmwidthstart) * 39 + \"px\";\r\n\r\n              for (var iterator in customMetric.optionCategories) {\r\n                let startRange = parseFloat(\r\n                  customMetric.optionCategories[iterator].categoryRange.split(\r\n                    \",\"\r\n                  )[0]\r\n                );\r\n                let endRange = parseFloat(\r\n                  customMetric.optionCategories[iterator].categoryRange.split(\r\n                    \",\"\r\n                  )[1]\r\n                );\r\n\r\n                imageVisibility010 = 'hide';\r\n                imageVisibility110 = 'hide';\r\n                scaleVisibility = 'show-inline';\r\n                scaleImageContainer = \"\";\r\n                mobileImageUrl = \"\";\r\n\r\n                for (\r\n                  let initial = startRange;\r\n                  initial <= endRange;\r\n                  initial += divider\r\n                ) {\r\n                  options +=\r\n                    '<span data-rating=\"' +\r\n                    initial +\r\n                    '\" class=\"option-number-item option-scale\"' +\r\n                    scaleVisibility +\r\n                    '\" style=\"background:' +\r\n                    customMetric.optionCategories[iterator].color +\r\n                    '\">' +\r\n                    initial +\r\n                    \"</span>\";\r\n                }\r\n              }\r\n              legendDimension = (endRange - startRange + 1) * 39;\r\n\r\n            } else {\r\n              for (\r\n                let initial = startRange;\r\n                initial <= endRange;\r\n                initial += divider\r\n              ) {\r\n                options +=\r\n                  '<span data-rating=\"' +\r\n                  initial +\r\n                  '\" class=\"option-number-item option-scale ' +\r\n                  scaleVisibility +\r\n                  '\" style=\"' +\r\n                  optionStyle +\r\n                  '\">' +\r\n                  initial +\r\n                  \"</span>\";\r\n              }\r\n              legendDimension = (endRange - startRange + 1) * 39;\r\n            }\r\n\r\n            if (endRange - startRange + 1 <= 11) {\r\n              var optionLeftExtraClass =\r\n                \"option-left-rating-text-small-container\";\r\n              var optionMidExtraClass =\r\n                \"option-mid-rating-text-small-container\";\r\n              var optionRightExtraClass =\r\n                \"option-right-rating-text-small-container\";\r\n              var optionMaxWidth =\r\n                ((endRange - startRange + 1) * 38) / 2 - 5 + \"px\";\r\n              // console.log(optionMaxWidth);\r\n            }\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{legendStyle}}\",\r\n              `style=\"position:relative;width:${\r\n              mobileImageUrl ? \"100%\" : legendDimension + \"px\"\r\n              };min-height: 20px;\"`\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              /\\{\\{radialLegend\\}\\}/g,\r\n              mobileImageUrl ? \"radial-legend\" : \"unknown-class\"\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{optionsRange}}\",\r\n              options\r\n            );\r\n            // questionTemplate = questionTemplate.replace(\"{{maxWidth}}\", optionMaxWidth);\r\n            questionTemplate = questionTemplate.replace(\r\n              /maxWidth/g,\r\n              mobileImageUrl ? \"35%;width:35%\" : optionMaxWidth\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              /leftWidth/g,\r\n              leftWidth\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              /{{optionLeftExtraClass}}/g,\r\n              optionLeftExtraClass\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              /{{optionMidExtraClass}}/g,\r\n              optionMidExtraClass\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              /{{optionRightExtraClass}}/g,\r\n              optionRightExtraClass\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{leftLabel}}\",\r\n              startRangeLabel\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{midLabel}}\",\r\n              midRangeLabel || \"\"\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{rightLabel}}\",\r\n              endRangeLabel\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              /{{mobileImageUrl}}/g,\r\n              '\"' + mobileImageUrl + '\"'\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{imageVisibility010}}\",\r\n              imageVisibility010\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{imageVisibility110}}\",\r\n              imageVisibility110\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{scaleImageContainer}}\",\r\n              scaleImageContainer\r\n            );\r\n          }\r\n\r\n          break;\r\n        case \"Text\":\r\n          //get text question template and compile it.\r\n          questionTemplate = templates.question_text;\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{question}}\",\r\n            ConditionalTextFilter.filterText(this, question)\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            /{{questionId}}/g,\r\n            \"id\" + question.id\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{isRequired}}\",\r\n            question.isRequired ? \"true\" : \"false\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{requiredLabel}}\",\r\n            question.isRequired ? \"*\" : \"\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{validationHint}}\",\r\n            question.validationHint ? question.validationHint : \"\"\r\n          );\r\n\r\n          break;\r\n        case \"Number\":\r\n          //get text question template and compile it.\r\n          questionTemplate = templates.question_number;\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{question}}\",\r\n            ConditionalTextFilter.filterText(this, question)\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            /{{questionId}}/g,\r\n            \"id\" + question.id\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{isRequired}}\",\r\n            question.isRequired ? \"true\" : \"false\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{requiredLabel}}\",\r\n            question.isRequired ? \"*\" : \"\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{validationHint}}\",\r\n            question.validationHint ? question.validationHint : \"\"\r\n          );\r\n          break;\r\n\r\n        case \"Date\":\r\n          questionTemplate = templates.question_date;\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{question}}\",\r\n            ConditionalTextFilter.filterText(this, question)\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            /{{questionId}}/g,\r\n            \"id\" + question.id\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{isRequired}}\",\r\n            question.isRequired ? \"true\" : \"false\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{requiredLabel}}\",\r\n            question.isRequired ? \"*\" : \"\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{validationHint}}\",\r\n            question.validationHint ? question.validationHint : \"\"\r\n          );\r\n          break;\r\n\r\n        case \"MultilineText\":\r\n          //get text question template and compile it.\r\n          questionTemplate = templates.question_multi_line_text;\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{question}}\",\r\n            ConditionalTextFilter.filterText(this, question)\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            /{{questionId}}/g,\r\n            \"id\" + question.id\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{isRequired}}\",\r\n            question.isRequired ? \"true\" : \"false\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{requiredLabel}}\",\r\n            question.isRequired ? \"*\" : \"\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{characterLimit}}\",\r\n            question.attributes && question.attributes.characterLimit\r\n              ? question.attributes.characterLimit\r\n              : \"\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{validationHint}}\",\r\n            question.validationHint ? question.validationHint : \"\"\r\n          );\r\n          break;\r\n\r\n        case \"MultiSelect\":\r\n          let acTemplate: string;\r\n          let multiSelect1;\r\n          //get text question template and compile it.\r\n          multiSelect1 = Array.prototype.slice.call(\r\n            LanguageTextFilter.translateMultiSelect(this, question)\r\n          );\r\n          if (question.presentationMode == \"Invert\") {\r\n            // console.log('selection option before reverse', multiSelect1);\r\n            multiSelect1.reverse();\r\n            // console.log('selection option after reverse', multiSelect1);\r\n            // console.log('selection api option', question.multiSelect);\r\n          }\r\n          //get text question template and compile it.\r\n          if (\r\n            (question.displayStyle == \"radiobutton/checkbox\" ||\r\n              question.displayStyle == \"icon\") &&\r\n            multiSelect1.length < 6\r\n          ) {\r\n            // (window as any).ccsdkDebug?console.log(question.displayStyle):'';\r\n            let checkOptionContainsImage: boolean = self.util.checkOptionContainsImage(\r\n              multiSelect1\r\n            );\r\n            // (window as any).ccsdkDebug?console.log('select radio image',checkOptionContainsImage):'';\r\n            if (\r\n              checkOptionContainsImage &&\r\n              ((multiSelect1.length > 0 &&\r\n                multiSelect1[0].indexOf(\"Male\") !== -1) ||\r\n                (multiSelect1.length > 0 &&\r\n                  multiSelect1[0].indexOf(\"Yes\") !== -1) ||\r\n                (multiSelect1.length > 1 &&\r\n                  multiSelect1[1].indexOf(\"Yes\") !== -1))\r\n            ) {\r\n              // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n              acTemplate = templates.question_checkbox;\r\n              let options2 = self.util.generateCheckboxImageOptions(\r\n                question.multiSelect,\r\n                multiSelect1,\r\n                question.id\r\n              );\r\n              // (window as any).ccsdkDebug?console.log(options2):'';\r\n              questionTemplate = acTemplate;\r\n              questionTemplate = questionTemplate.replace(\r\n                /{{options}}/g,\r\n                options2\r\n              );\r\n              acTemplate = questionTemplate;\r\n            } else if (checkOptionContainsImage) {\r\n              // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n              acTemplate = templates.question_checkbox;\r\n              let options2 = self.util.generateCheckboxIgnoreImageOptions(\r\n                question.multiSelect,\r\n                multiSelect1,\r\n                question.id\r\n              );\r\n              // (window as any).ccsdkDebug?console.log(options2):'';\r\n              questionTemplate = acTemplate;\r\n              questionTemplate = questionTemplate.replace(\r\n                /{{options}}/g,\r\n                options2\r\n              );\r\n              acTemplate = questionTemplate;\r\n            } else {\r\n              let options3: string = self.util.generateCheckboxOptions(\r\n                question.multiSelect,\r\n                multiSelect1,\r\n                question.id\r\n              );\r\n              // (window as any).ccsdkDebug?console.log(options2):'';\r\n              acTemplate = templates.question_checkbox;\r\n              questionTemplate = acTemplate.replace(/{{options}}/g, options3);\r\n              acTemplate = questionTemplate;\r\n            }\r\n          } else {\r\n            // (window as any).ccsdkDebug?console.log('select type 3'):'';\r\n            acTemplate = templates.question_multi_select;\r\n\r\n            // acTemplate = templates.question_select;\r\n            let options3 = self.util.generateSelectOptions(\r\n              question.multiSelect,\r\n              multiSelect1\r\n            );\r\n\r\n            if (self.ccsdk.config.language.indexOf(\"Default\") === -1) {\r\n              if (\r\n                typeof question.translated !== \"undefined\" &&\r\n                question.translated != null &&\r\n                typeof question.translated[self.ccsdk.config.language] !==\r\n                \"undefined\" &&\r\n                question.translated[self.ccsdk.config.language].multiSelect !==\r\n                \"undefined\" &&\r\n                question.translated[self.ccsdk.config.language].multiSelect\r\n                  .length > 0\r\n              ) {\r\n                multiSelect1 = Array.prototype.slice.call(\r\n                  question.translated[self.ccsdk.config.language].multiSelect\r\n                );\r\n                if (question.presentationMode == \"Invert\") {\r\n                  multiSelect1.reverse();\r\n                }\r\n                options3 = self.util.generateSelectOptions(\r\n                  question.multiSelect,\r\n                  multiSelect1\r\n                );\r\n              }\r\n            }\r\n            // questionTemplate = acTemplate;\r\n            self.ccsdk.debug ? console.log(options3) : \"\";\r\n            questionTemplate = acTemplate.replace(/{{options}}/g, options3);\r\n            acTemplate = questionTemplate;\r\n          }\r\n          questionTemplate = acTemplate;\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{question}}\",\r\n            ConditionalTextFilter.filterText(this, question)\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            /{{questionId}}/g,\r\n            \"id\" + question.id\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{isRequired}}\",\r\n            question.isRequired ? \"true\" : \"false\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{requiredLabel}}\",\r\n            question.isRequired ? \"*\" : \"\"\r\n          );\r\n\r\n          break;\r\n        case \"Select\":\r\n          let acTemplate1: string;\r\n          let acTemplate2: string;\r\n          let options1: string;\r\n          let options2: string;\r\n          let multiSelect;\r\n          //get text question template and compile it.\r\n          multiSelect = Array.prototype.slice.call(\r\n            LanguageTextFilter.translateMultiSelect(this, question)\r\n          );\r\n          let invertedMultiSelect;\r\n          if (question.presentationMode == \"Invert\") {\r\n            // console.log('selection option before reverse', multiSelect);\r\n            invertedMultiSelect = question.multiSelect\r\n              ? question.multiSelect.slice().reverse()\r\n              : [];\r\n            multiSelect.reverse();\r\n            // console.log('selection option after reverse', multiSelect);\r\n            // console.log('selection api option', question.multiSelect);\r\n          } else {\r\n            invertedMultiSelect = question.multiSelect;\r\n          }\r\n          if (\r\n            question.displayStyle == \"radiobutton/checkbox\" &&\r\n            multiSelect.length < 6\r\n          ) {\r\n            // if(question.displayStyle == 'radiobutton/checkbox'){\r\n            // (window as any).ccsdkDebug?console.log('select type 1'):'';\r\n            // (window as any).ccsdkDebug?console.log(question.displayStyle):'';\r\n            // acTemplate1 = templates.question_radio;\r\n            // questionTemplate = acTemplate1;\r\n\r\n            let checkOptionContainsImage: boolean = self.util.checkOptionContainsImage(\r\n              multiSelect\r\n            );\r\n            (window as any).ccsdkDebug\r\n              ? console.log(\"select radio image\", checkOptionContainsImage)\r\n              : \"\";\r\n            if (\r\n              checkOptionContainsImage &&\r\n              ((multiSelect.length > 0 &&\r\n                multiSelect[0].indexOf(\"Male\") !== -1) ||\r\n                (multiSelect.length > 0 &&\r\n                  multiSelect[0].indexOf(\"Yes\") !== -1) ||\r\n                (multiSelect.length > 1 &&\r\n                  multiSelect[1].indexOf(\"Yes\") !== -1))\r\n            ) {\r\n              // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n              acTemplate2 = templates.question_radio_image;\r\n\r\n              options2 = self.util.generateRadioImageOptions(\r\n                invertedMultiSelect,\r\n                multiSelect,\r\n                question.id\r\n              );\r\n              (window as any).ccsdkDebug ? console.log({ options2 }) : \"\";\r\n              questionTemplate = acTemplate2;\r\n              questionTemplate = questionTemplate.replace(\r\n                /{{options}}/g,\r\n                options2\r\n              );\r\n            } else if (checkOptionContainsImage) {\r\n              // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n              acTemplate2 = templates.question_radio_image;\r\n              options2 = self.util.generateRadioIgnoreImageOptions(\r\n                invertedMultiSelect,\r\n                multiSelect,\r\n                question.id\r\n              );\r\n              // (window as any).ccsdkDebug?console.log(options2):'';\r\n              questionTemplate = acTemplate2;\r\n              questionTemplate = questionTemplate.replace(\r\n                /{{options}}/g,\r\n                options2\r\n              );\r\n            } else {\r\n              acTemplate1 = templates.question_radio;\r\n              questionTemplate = acTemplate1;\r\n\r\n              options1 = self.util.generateRadioOptions(\r\n                invertedMultiSelect,\r\n                multiSelect,\r\n                question.id\r\n              );\r\n              questionTemplate = questionTemplate.replace(\r\n                \"{{options}}\",\r\n                options1\r\n              );\r\n            }\r\n          } else if (\r\n            question.displayStyle == \"icon\" &&\r\n            multiSelect.length < 6\r\n          ) {\r\n            acTemplate1 = templates.question_radio;\r\n            questionTemplate = acTemplate1;\r\n            let invertedMultiSelect;\r\n            if (question.presentationMode == \"Invert\") {\r\n              invertedMultiSelect = question.multiSelect\r\n                ? question.multiSelect.slice().reverse()\r\n                : [];\r\n            } else {\r\n              invertedMultiSelect = question.multiSelect;\r\n            }\r\n            options1 = self.util.generateRadioOptions(\r\n              invertedMultiSelect,\r\n              multiSelect,\r\n              question.id\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{options}}\",\r\n              options1\r\n            );\r\n          } else {\r\n            (window as any).ccsdkDebug ? console.log(\"select type 3\") : \"\";\r\n            acTemplate1 = templates.question_select;\r\n            options1 = self.util.generateSelectOptions(\r\n              invertedMultiSelect,\r\n              multiSelect\r\n            );\r\n            if (self.ccsdk.config.language.indexOf(\"Default\") === -1) {\r\n              if (\r\n                typeof question.translated !== \"undefined\" &&\r\n                question.translated != null &&\r\n                typeof question.translated[self.ccsdk.config.language] !==\r\n                \"undefined\" &&\r\n                question.translated[self.ccsdk.config.language].multiSelect !==\r\n                \"undefined\" &&\r\n                question.translated[self.ccsdk.config.language].multiSelect\r\n                  .length > 0\r\n              ) {\r\n                multiSelect = Array.prototype.slice.call(\r\n                  question.translated[self.ccsdk.config.language].multiSelect\r\n                );\r\n                if (question.presentationMode == \"Invert\") {\r\n                  multiSelect.reverse();\r\n                }\r\n                options1 = self.util.generateSelectOptions(\r\n                  invertedMultiSelect,\r\n                  multiSelect\r\n                );\r\n              }\r\n            }\r\n            questionTemplate = acTemplate1;\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{options}}\",\r\n              options1\r\n            );\r\n          }\r\n          // console.log( questionTemplate );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{question}}\",\r\n            ConditionalTextFilter.filterText(this, question)\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            /{{questionId}}/g,\r\n            \"id\" + question.id\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{isRequired}}\",\r\n            question.isRequired ? \"true\" : \"false\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{requiredLabel}}\",\r\n            question.isRequired ? \"*\" : \"\"\r\n          );\r\n          // (window as any).ccsdkDebug?console.log(questionTemplate):'';\r\n\r\n          break;\r\n        case \"Smile-5\":\r\n          //get text question template and compile it.\r\n          if (question.presentationMode == \"Invert\") {\r\n            questionTemplate = templates.question_smile_5_inverted;\r\n          } else {\r\n            questionTemplate = templates.question_smile_5;\r\n          }\r\n          // let startRangeLabel = \"Very unlikely\";\r\n          // let endRangeLabel = \"Very likely\";\r\n          let startRangeLabel = \"\";\r\n          let endRangeLabel = \"\";\r\n          let displayLegend2 = LanguageTextFilter.translateDisplayLegend(\r\n            this,\r\n            question\r\n          );\r\n\r\n          if (displayLegend2) {\r\n            if (displayLegend2.length > 0) {\r\n              startRangeLabel = displayLegend2[0] ? displayLegend2[0] : null;\r\n              endRangeLabel = displayLegend2[1] ? displayLegend2[1] : null;\r\n            }\r\n          }\r\n          startRangeLabel = startRangeLabel == null ? \"\" : startRangeLabel;\r\n          endRangeLabel = endRangeLabel == null ? \"\" : endRangeLabel;\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{question}}\",\r\n            ConditionalTextFilter.filterText(this, question)\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            /{{questionId}}/g,\r\n            \"id\" + question.id\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{isRequired}}\",\r\n            question.isRequired ? \"true\" : \"false\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{requiredLabel}}\",\r\n            question.isRequired ? \"*\" : \"\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{leftLabel}}\",\r\n            startRangeLabel\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{rightLabel}}\",\r\n            endRangeLabel\r\n          );\r\n          break;\r\n        case \"Star-5\":\r\n          //get text question template and compile it.\r\n          let startRangeLabel1 = \"\";\r\n          let endRangeLabel1 = \"\";\r\n          let displayLegend3 = LanguageTextFilter.translateDisplayLegend(\r\n            this,\r\n            question\r\n          );\r\n\r\n          if (displayLegend3) {\r\n            if (displayLegend3.length > 0) {\r\n              startRangeLabel1 = displayLegend3[0] ? displayLegend3[0] : null;\r\n              endRangeLabel1 = displayLegend3[1] ? displayLegend3[1] : null;\r\n            }\r\n          }\r\n          startRangeLabel1 = startRangeLabel1 == null ? \"\" : startRangeLabel1;\r\n          endRangeLabel1 = endRangeLabel1 == null ? \"\" : endRangeLabel1;\r\n          questionTemplate = templates.question_star_5;\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{question}}\",\r\n            ConditionalTextFilter.filterText(this, question)\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            /{{questionId}}/g,\r\n            \"id\" + question.id\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{isRequired}}\",\r\n            question.isRequired ? \"true\" : \"false\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{requiredLabel}}\",\r\n            question.isRequired ? \"*\" : \"\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{leftLabel}}\",\r\n            startRangeLabel1\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{rightLabel}}\",\r\n            endRangeLabel1\r\n          );\r\n          break;\r\n      }\r\n    }\r\n    return questionTemplate;\r\n  }\r\n\r\n  questionCompare(a: any, b: any) {\r\n    return a.sequence - b.sequence;\r\n  }\r\n\r\n  getAnswerTypeFromDisplayType(displayType: string) {\r\n    // console.log('question type',displayType);\r\n    let type: string;\r\n    switch (displayType) {\r\n      case \"Slider\":\r\n        type = \"number\";\r\n        break;\r\n      case \"Scale\":\r\n        type = \"number\";\r\n        break;\r\n      case \"Text\":\r\n        type = \"text\";\r\n        break;\r\n      case \"Number\":\r\n        type = \"number\";\r\n        break;\r\n      case \"MultilineText\":\r\n        type = \"text\";\r\n        break;\r\n      case \"MultiSelect\":\r\n        type = \"text\";\r\n        break;\r\n      case \"Select\":\r\n        type = \"text\";\r\n        break;\r\n      case \"Dropdown\":\r\n        type = \"text\";\r\n        break;\r\n      case \"Smile-5\":\r\n        type = \"number\";\r\n        break;\r\n      case \"Star-5\":\r\n        type = \"number\";\r\n        break;\r\n      case \"Date\":\r\n        type = \"number\";\r\n        break;\r\n      default:\r\n        type = \"text\";\r\n        break;\r\n    }\r\n\r\n    return type;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * filterQuestions - filters questions so that we don't display the one which satisifes any of the following condition\r\n   *  isRetired = true\r\n   *  statffFill = true\r\n   *  apiFill = true\r\n   *  preFill = true\r\n   *\r\n   * @param {any} question\r\n   * @returns\r\n   * @memberof Survey\r\n   */\r\n  filterQuestions() {\r\n    let self = this;\r\n    for (let question of this.questions) {\r\n      if (!question.isRetired) {\r\n        //filter out prefill question only if it is filled?.\r\n        // if(!this.isQuestionFilled(question)){\r\n        if (this.isPrefillTags(question)) {\r\n          self.ccsdk.debug\r\n            ? console.log(\"prefillTags\", this.prefillResponses)\r\n            : \"\";\r\n          continue;\r\n        }\r\n        if (this.isPrefillNote(question)) {\r\n          self.ccsdk.debug ? console.log(this.prefillResponses) : \"\";\r\n          continue;\r\n        }\r\n        if (this.isPrefillDirect(question)) {\r\n          self.ccsdk.debug ? console.log(this.prefillResponses) : \"\";\r\n          continue;\r\n        }\r\n        if (!this.isPrefillQuestion(question)) {\r\n          if (\r\n            question.conditionalFilter === null ||\r\n            (question.conditionalFilter != null &&\r\n              (question.conditionalFilter.filterquestions == null ||\r\n                question.conditionalFilter.filterquestions.length == 0))\r\n          ) {\r\n            //check supported display types\r\n            let supportedDisplayTypes =\r\n              \"Slider, Scale, Text, Number, MultilineText, MultiSelect, Smile-5, Star-5, Date\";\r\n            if (supportedDisplayTypes.indexOf(question.displayType) > -1) {\r\n              this.questionsToDisplay.push(question);\r\n            }\r\n          } else {\r\n            //if conditions full filled, fill it in questionsToDisplay\r\n            if (ConditionalFlowFilter.filterQuestion(this, question)) {\r\n              //auto does that\r\n            } else {\r\n              this.conditionalQuestions.push(question);\r\n            }\r\n          }\r\n        } else {\r\n          this.fillPrefillWithTags(question);\r\n          this.fillPrefillWithNote(question);\r\n          ConditionalFlowFilter.filterQuestion(this, question);\r\n        }\r\n        // }\r\n      }\r\n    }\r\n    //re condition questions.\r\n    for (let question of this.questions) {\r\n      // console.log(this.questionsToDisplay);\r\n      ConditionalFlowFilter.filterQuestion(this, question);\r\n    }\r\n\r\n    // console.log(this.conditionalQuestions);\r\n  }\r\n\r\n  isPrefillTags(question: any) {\r\n    if (\r\n      typeof question.questionTags !== \"undefined\" &&\r\n      question.questionTags &&\r\n      question.questionTags.length > 0\r\n    ) {\r\n      for (let tag of question.questionTags) {\r\n        switch (tag.toLowerCase()) {\r\n          case \"screensize\":\r\n            //add size to prefill array\r\n            this.fillPrefillQuestion(\r\n              question.id,\r\n              \"Width:\" +\r\n              window.innerWidth +\r\n              \"px / Height:\" +\r\n              window.innerHeight +\r\n              \"px\",\r\n              \"text\"\r\n            );\r\n            return true;\r\n          default:\r\n            if (typeof this.prefillWithTags[tag.toLowerCase()] != \"undefined\") {\r\n              let type = this.getAnswerTypeFromDisplayType(\r\n                question.displayType\r\n              );\r\n              this.fillPrefillQuestion(\r\n                question.id,\r\n                this.prefillWithTags[tag.toLowerCase()],\r\n                type\r\n              );\r\n              return true;\r\n            }\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  isPrefillNote(question: any) {\r\n    if (\r\n      typeof question.note !== \"undefined\" &&\r\n      question.note != null &&\r\n      question.note.length > 0 &&\r\n      this.prefillWithNote[question.note.toLowerCase()]\r\n    ) {\r\n      let type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n      this.fillPrefillQuestion(\r\n        question.id,\r\n        this.prefillWithNote[question.note.toLowerCase()],\r\n        type\r\n      );\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  isPrefillDirect(question: any) {\r\n    if (typeof question !== \"undefined\" && this.prefillDirect[question.id]) {\r\n      let type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n      this.fillPrefillQuestion(\r\n        question.id,\r\n        this.prefillDirect[question.id],\r\n        type\r\n      );\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  fillPrefillWithTags(question: any) {\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"fillprefillwithtags\", this.prefillWithTags)\r\n      : \"\";\r\n    if (\r\n      typeof question.questionTags !== \"undefined\" &&\r\n      question.questionTags.length > 0\r\n    ) {\r\n      for (let tag of question.questionTags) {\r\n        (window as any).ccsdkDebug\r\n          ? console.log(\"fillprefillwithtags\", tag)\r\n          : \"\";\r\n        if (typeof this.prefillWithTags[tag.toLowerCase()] !== \"undefined\") {\r\n          (window as any).ccsdkDebug\r\n            ? console.log(\r\n              \"prefil \",\r\n              tag.toLowerCase(),\r\n              this.prefillWithTags[tag.toLowerCase()],\r\n              this.prefillWithTags\r\n            )\r\n            : \"\";\r\n\r\n          let type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n          this.fillPrefillQuestion(\r\n            question.id,\r\n            this.prefillWithTags[tag.toLowerCase()],\r\n            type\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  fillPrefillWithNote(question: any) {\r\n    if (\r\n      typeof question.note !== \"undefined\" &&\r\n      question.note != null &&\r\n      question.note.length > 0\r\n    ) {\r\n      if (\r\n        typeof this.prefillWithNote[question.note.toLowerCase()] !== \"undefined\"\r\n      ) {\r\n        let type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n        this.fillPrefillQuestion(\r\n          question.id,\r\n          this.prefillWithNote[question.note.toLowerCase()],\r\n          type\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  getConditionalSurveyQuestions(): any {\r\n    return this.conditionalQuestions;\r\n  }\r\n\r\n  isPrefillQuestion(question: any) {\r\n    if (question.apiFill == true) {\r\n      return true;\r\n    }\r\n    if (question.staffFill == true) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  isQuestionFilled(question: any) {\r\n    for (let response of this.prefillResponses) {\r\n      if (response.questionId == question.questionId) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  removePrevListener(id: string): boolean {\r\n    for (let listener of this.domListeners) {\r\n      if (listener.id == id) {\r\n        let index = this.domListeners.indexOf(listener);\r\n        (window as any).ccsdkDebug ? console.log(\"removing listener\", id) : \"\";\r\n        (window as any).ccsdkDebug\r\n          ? console.log(\"removing listener index\", index)\r\n          : \"\";\r\n        this.util.removeListener(\r\n          document.querySelectorAll(\"body\")[0],\r\n          listener.type,\r\n          listener.internalHandler\r\n        );\r\n        if (index > -1) {\r\n          this.domListeners.splice(index, 1);\r\n        }\r\n        (window as any).ccsdkDebug ? console.log(this.domListeners) : \"\";\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  destroySurvey() {\r\n    let self: SurveyHandler = this;\r\n    document.addEventListener(\"ccclose\", this.destroySurveyCb);\r\n  }\r\n\r\n  destroy() {\r\n    let surveyContainer = this.ccsdk.dom.getSurveyContainer(this.surveyToken);\r\n    let welcomeContainer = this.ccsdk.dom.getWelcomeContainer(this.surveyToken);\r\n    if (typeof surveyContainer != \"undefined\") {\r\n      this.util.remove(surveyContainer);\r\n    }\r\n    if (typeof welcomeContainer != \"undefined\") {\r\n      this.util.remove(welcomeContainer);\r\n    }\r\n    document.removeEventListener(\"ccclose\", this.destroySurveyCb);\r\n    document.removeEventListener(\"ccdone\", this.displayThankYouCb);\r\n    document.removeEventListener(\"q-answered\", this.acceptAnswersCb);\r\n    (window as any).globalSurveyRunning = false;\r\n    // let bodyElement = <HTMLElement>document.\r\n    //   getElementsByTagName( \"body\" )[ 0 ];\r\n    // this.util.removeClass( bodyElement, \"blurr\" );\r\n  }\r\n}\r\n\r\nexport { SurveyHandler };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/SurveyHandler.ts","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/rtl-css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./main.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../node_modules/rtl-css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./main.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../node_modules/rtl-css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./main.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/css/main.scss\n// module id = 16\n// module chunks = 0","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function() {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\tvar result = [];\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar item = this[i];\n\t\t\tif(item[2]) {\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\n\t\t\t} else {\n\t\t\t\tresult.push(item[1]);\n\t\t\t}\n\t\t}\n\t\treturn result.join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rtl-css-loader/lib/css-base.js\n// module id = 18\n// module chunks = 0","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(selector) {\n\t\tif (typeof memo[selector] === \"undefined\") {\n\t\t\tmemo[selector] = fn.call(this, selector);\n\t\t}\n\n\t\treturn memo[selector]\n\t};\n})(function (target) {\n\treturn document.querySelector(target)\n});\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton) options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n\tif (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\toptions.attrs.type = \"text/css\";\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\toptions.attrs.type = \"text/css\";\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/style-loader/lib/addStyles.js\n// module id = 19\n// module chunks = 0","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/style-loader/lib/urls.js\n// module id = 20\n// module chunks = 0","\r\nimport { LanguageTextFilter } from './LanguageTextFilter';\r\nimport { isAnd, doesSatisfy, isOr, checkLanguage } from './filter-utils';\r\n\r\nclass ConditionalTextFilter {\r\n  public static filterText( surveyHandler: any, question: any ): string {\r\n    let conditionalText = question.text == null ? '' : LanguageTextFilter.translateQuestionText( surveyHandler, question );\r\n    if ( question.text != null ) {\r\n      let conditionalText: string = question.text.split( ':' );\r\n      if ( question.setName && question.text.indexOf( \":\" ) !== -1 ) {\r\n        conditionalText = conditionalText[ 0 ] + ': <br><span class=\"text-normal\">' + conditionalText[ 1 ] + '</span>';\r\n      } else {\r\n        conditionalText = conditionalText[ 0 ];\r\n      }\r\n    }\r\n    if ( question.leadingDisplayTexts == null ) {\r\n      conditionalText = LanguageTextFilter.translateQuestionText( surveyHandler, question );\r\n      return conditionalText;\r\n    } else if ( question.leadingDisplayTexts.length == 0 ) {\r\n      conditionalText = LanguageTextFilter.translateQuestionText( surveyHandler, question );\r\n      return conditionalText;\r\n    } else {\r\n      for ( let fOption of question.leadingDisplayTexts ) {\r\n        if ( fOption != null && fOption.filter != null && fOption.filter.filterquestions != null ) {\r\n          let iSatisfied: boolean = false;\r\n          let iFailed: boolean = false;\r\n          for ( let filterByQuestion of fOption.filter.filterquestions ) {\r\n            if ( isAnd( filterByQuestion ) ) {\r\n              if ( doesSatisfy( surveyHandler, filterByQuestion ) && !iFailed ) {\r\n                iSatisfied = true;\r\n              } else {\r\n                iFailed = true;\r\n                break;\r\n              }\r\n            } else if ( isOr( filterByQuestion ) ) {\r\n              if ( doesSatisfy( surveyHandler, filterByQuestion ) ) {\r\n                iSatisfied = true;\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          if ( iSatisfied && !iFailed ) {\r\n            if ( checkLanguage( surveyHandler, fOption )\r\n              || ( surveyHandler.ccsdk.config && surveyHandler.ccsdk.config.language\r\n                && surveyHandler.ccsdk.config.language.toLowerCase().includes( 'default' )\r\n                && fOption.language === null )\r\n              || ( surveyHandler.ccsdk.config && !surveyHandler.ccsdk.config.language && fOption.language === null ) ) {\r\n              let groupTitle;\r\n              if ( question.setName && conditionalText.indexOf( ':' ) !== -1 ) {\r\n                groupTitle = conditionalText.split( ':' )[ 0 ];\r\n                conditionalText = groupTitle + ': <br><span class=\"text-normal\">' + fOption.text + '</span>';\r\n              } else {\r\n                conditionalText = fOption.text;\r\n              }\r\n            }\r\n            conditionalText;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return conditionalText;\r\n  }\r\n}\r\n\r\nexport { ConditionalTextFilter };\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/filters/ConditionalTextFilter.ts","import { DomUtilities } from \"./DomUtilities\";\r\n// import { ScrollBar } from './ScrollBar';\r\nimport { Select } from \"./Select\";\r\nimport { Theme } from \"./Theme\";\r\nimport { ConditionalFlowFilter } from \"../filters/ConditionalFlowFilter\";\r\nimport { Slider } from \"./Slider\";\r\nimport { Constants } from \"../../Constants\";\r\n\r\nclass DomSurvey {\r\n  util: DomUtilities;\r\n  // scrollbar : ScrollBar;\r\n  domListeners: any;\r\n  select: Select;\r\n  theme: Theme;\r\n  qIndex: number;\r\n  currentQuestionId: string;\r\n  $questionContainer: any;\r\n  $innerQuestionContainer: any;\r\n  $popupContainer: any;\r\n  $popupContainer2: any;\r\n  $body: any;\r\n  qResponse: any;\r\n  trackSelects: any = [];\r\n  trackRadios: any = [];\r\n  ccsdk: any;\r\n  currentQuestionListeners: any = [];\r\n  trackSetupListeners: any;\r\n  $startBtn: any;\r\n  bodyElement: any;\r\n\r\n  constructor(ccsdk: any) {\r\n    let self: DomSurvey = this;\r\n    this.domListeners = [];\r\n    this.ccsdk = ccsdk;\r\n    this.qIndex = 0;\r\n    this.qResponse = {};\r\n    this.domSelectElements();\r\n    this.util = new DomUtilities();\r\n    // self.scrollbar = new ScrollBar(\"data-cc-scrollbar\");\r\n    this.util.ready(function () {\r\n      // self.util.addClassAll(self.$popupContainer,'show-slide');\r\n    });\r\n  }\r\n\r\n  setTheme(brandColor, time) {\r\n    let self: DomSurvey = this;\r\n    this.util.ready(function () {\r\n      self.theme = new Theme(brandColor, time);\r\n    });\r\n  }\r\n\r\n  setQIndex(index: number) {\r\n    this.qIndex = index;\r\n  }\r\n\r\n  getQindex() {\r\n    return this.qIndex;\r\n  }\r\n\r\n  domSelectElements() {\r\n    this.$questionContainer = document.querySelectorAll(\r\n      \".cc-questions-container\"\r\n    );\r\n    this.$popupContainer = document.querySelectorAll(\".cc-popup-container\");\r\n    this.$popupContainer2 = document.querySelectorAll(\".cc-popup-container-2\");\r\n    this.$body = document.querySelectorAll(\"body\")[0];\r\n    // this.select = new Select();\r\n  }\r\n\r\n  removePrevListener(id: string): boolean {\r\n    for (let listener of this.domListeners) {\r\n      if (listener.id == id) {\r\n        let index = this.domListeners.indexOf(listener);\r\n        (window as any).ccsdkDebug ? console.log(\"removing listener\", id) : \"\";\r\n        (window as any).ccsdkDebug\r\n          ? console.log(\"removing listener index\", index)\r\n          : \"\";\r\n        this.util.removeListener(\r\n          this.$body,\r\n          listener.type,\r\n          listener.internalHandler\r\n        );\r\n        if (index > -1) {\r\n          this.domListeners.splice(index, 1);\r\n        }\r\n        (window as any).ccsdkDebug ? console.log(this.domListeners) : \"\";\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  setupListeners() {\r\n    let self = this;\r\n    let startSurvey = this.util.initListener(\r\n      \"click\",\r\n      \".act-cc-survey-start\",\r\n      function () {\r\n        if (\r\n          !self.util.hasClass(self.$startBtn, \"disabled\") &&\r\n          self.ccsdk.surveyStatus != \"minimized\"\r\n        ) {\r\n          let onSurveyClickEvent = new CustomEvent(\r\n            Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken\r\n          );\r\n          document.dispatchEvent(onSurveyClickEvent);\r\n          self.util.addClass(self.$startBtn, \"disabled\");\r\n          self.showLoader();\r\n          self.startSurvey();\r\n        } else {\r\n          self.initSurveyDom();\r\n        }\r\n      }\r\n    );\r\n    this.domListeners.push(startSurvey);\r\n\r\n    startSurvey.internalHandler = this.util.listener(\r\n      this.$body,\r\n      startSurvey.type,\r\n      startSurvey.id,\r\n      startSurvey.cb\r\n    );\r\n\r\n    let nextQue = this.util.initListener(\r\n      \"click\",\r\n      \".act-cc-button-next\",\r\n      function () {\r\n        // alert(\"working\");\r\n        let onSurveyClickEvent = new CustomEvent(\r\n          Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken\r\n        );\r\n        document.dispatchEvent(onSurveyClickEvent);\r\n        self.nextQuestion();\r\n      }\r\n    );\r\n    this.domListeners.push(nextQue);\r\n\r\n    nextQue.internalHandler = this.util.listener(\r\n      this.$body,\r\n      nextQue.type,\r\n      nextQue.id,\r\n      nextQue.cb\r\n    );\r\n\r\n    let prevQue = this.util.initListener(\r\n      \"click\",\r\n      \".act-cc-button-prev\",\r\n      function () {\r\n        let onSurveyClickEvent = new CustomEvent(\r\n          Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken\r\n        );\r\n        document.dispatchEvent(onSurveyClickEvent);\r\n        self.prevQuestion();\r\n      }\r\n    );\r\n    this.domListeners.push(prevQue);\r\n\r\n    prevQue.internalHandler = this.util.listener(\r\n      this.$body,\r\n      prevQue.type,\r\n      prevQue.id,\r\n      prevQue.cb\r\n    );\r\n\r\n    let closeSurvey = this.util.initListener(\r\n      \"click\",\r\n      \".act-cc-button-close\",\r\n      function () {\r\n        let onSurveyCloseEvent = new CustomEvent(\r\n          Constants.SURVEY_CLOSE_EVENT + \"-\" + self.ccsdk.surveyToken\r\n        );\r\n        document.dispatchEvent(onSurveyCloseEvent);\r\n        self.ccsdk.survey.answers = {};\r\n        self.trackSelects = [];\r\n        self.destroyListeners();\r\n        self.util.trigger(document, \"ccclose\", undefined);\r\n        self.bodyElement = <HTMLElement>(\r\n          document.getElementsByTagName(\"body\")[0]\r\n        );\r\n        self.util.removeClass(self.bodyElement, \"blurr\");\r\n        self.ccsdk.survey.destroy();\r\n      }\r\n    );\r\n    this.domListeners.push(closeSurvey);\r\n\r\n    closeSurvey.internalHandler = this.util.listener(\r\n      this.$body,\r\n      closeSurvey.type,\r\n      closeSurvey.id,\r\n      closeSurvey.cb\r\n    );\r\n\r\n    let minSurvey = this.util.initListener(\r\n      \"click\",\r\n      \".act-cc-button-minimize\",\r\n      function () {\r\n        self.minimizeSurvey();\r\n      }\r\n    );\r\n    this.domListeners.push(minSurvey);\r\n\r\n    minSurvey.internalHandler = this.util.listener(\r\n      self.$body,\r\n      minSurvey.type,\r\n      minSurvey.id,\r\n      minSurvey.cb\r\n    );\r\n  }\r\n\r\n  minimizeSurvey() {\r\n    // this.$popupContainer[0].removeClass('');\r\n    this.util.removeClass(this.$popupContainer2[0], \"hide-right-left\");\r\n    this.util.addClass(this.$popupContainer2[0], \"hide-right-left\");\r\n    setTimeout(() => {\r\n      this.util.removeClass(this.$popupContainer2[0], \"show-slide\");\r\n    }, 200);\r\n    this.util.removeClass(this.$popupContainer[0], \"hide-right-left\");\r\n    this.util.addClass(this.$popupContainer[0], \"hide-right-left\");\r\n    setTimeout(() => {\r\n      this.util.addClass(this.$popupContainer[0], \"show-slide\");\r\n    }, 200);\r\n    this.ccsdk.surveyStatus = \"minimized\";\r\n    let resumeText = this.ccsdk.config.resumeButtonText\r\n      ? this.ccsdk.config.resumeButtonText\r\n      : \"Resume\";\r\n    this.$startBtn.innerHTML = resumeText;\r\n    this.util.removeClass(this.$startBtn, \"disabled\");\r\n\r\n    //update all start btns\r\n    // Array.prototype.forEach.call($startBtn, (el, i) => {\r\n    //   el.innerHTML = resumeText;\r\n    // });\r\n  }\r\n\r\n  destroyListeners() {\r\n    // (window as any).ccsdkDebug?console.log(\"Removing all listeners\"):'';\r\n    for (let listener of this.domListeners) {\r\n      this.util.removeListener(\r\n        this.$body,\r\n        listener.type,\r\n        listener.internalHandler\r\n      );\r\n    }\r\n    for (let listener of this.ccsdk.survey.domListeners) {\r\n      this.util.removeListener(\r\n        this.$body,\r\n        listener.type,\r\n        listener.internalHandler\r\n      );\r\n    }\r\n    if (this.ccsdk.survey.languageSelect) {\r\n      this.ccsdk.survey.languageSelect.destroyListeners();\r\n    }\r\n    if (this.select) {\r\n      this.select.destroyListeners();\r\n    }\r\n  }\r\n\r\n  startSurvey() {\r\n    this.ccsdk.survey.cancelKillWelcomeQuestion();\r\n    this.ccsdk.getSurveyData();\r\n  }\r\n\r\n  initSurveyDom() {\r\n    this.domSelectElements();\r\n    // (window as any).ccsdkDebug?console.log(\"click in setup listener survey start\"):'';\r\n    this.util.addClassAll(this.$popupContainer2, \"show-slide\");\r\n    this.util.removeClass(this.$popupContainer[0], \"show-slide\");\r\n    if (this.ccsdk.surveyStatus == \"minimized\") {\r\n      //resume survey\r\n    } else {\r\n      //start survey\r\n      //check if only one language is configured\r\n      (window as any).ccsdkDebug ? console.log(this.ccsdk.surveyData) : \"\";\r\n      if (\r\n        this.ccsdk.surveyData.translated === null ||\r\n        (this.ccsdk.surveyData.translated &&\r\n          Object.keys(this.ccsdk.surveyData.translated).length < 1)\r\n      ) {\r\n        this.loadFirstQuestion();\r\n      } else {\r\n        this.ccsdk.survey.displayLanguageSelector();\r\n      }\r\n    }\r\n  }\r\n\r\n  updateProgress() {\r\n    let el = <HTMLElement>document.querySelectorAll(\"#progress-line\")[0];\r\n    if (this.ccsdk && this.ccsdk.tracking) {\r\n      this.ccsdk.tracking.trackEvent(\r\n        \"Questions Answered\",\r\n        {\r\n          token: this.ccsdk.surveyToken,\r\n          data: {\r\n            name: `${this.qIndex}/${\r\n              this.ccsdk.survey.questionsToDisplay.length\r\n              }`,\r\n            action: this.currentQuestionId\r\n          }\r\n        },\r\n        null,\r\n        null\r\n      );\r\n    }\r\n    el.style.width =\r\n      (this.qIndex / this.ccsdk.survey.questionsToDisplay.length) * 100 + \"%\";\r\n  }\r\n\r\n  loadFirstQuestion() {\r\n    // applyRuleToAllEl(this.$questionContainer, );\r\n    // this.util.removeClassAll(this.$questionContainer, 'show-slide');\r\n    // this.util.addClass(this.$questionContainer, 'show-slide');\r\n\r\n    this.loadQuestionSpecifics(this.$questionContainer, 0);\r\n    this.util.removeClassAll(\r\n      this.$questionContainer[0].firstChild,\r\n      \"show-slide\"\r\n    );\r\n    this.util.addClass(this.$questionContainer[0].firstChild, \"show-slide\");\r\n    let leftIcon: any = this.util.get(\".act-cc-button-prev\");\r\n    this.util.addClassAll(leftIcon, \"hide-slide\");\r\n    let onSurveyQuestionEvent = new CustomEvent(\r\n      Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken\r\n    );\r\n    document.dispatchEvent(onSurveyQuestionEvent);\r\n  }\r\n\r\n  nextQuestion() {\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"next question q response init\", this.qResponse)\r\n      : \"\";\r\n    // console.log('next question q response init',this.qResponse);\r\n    //empty the domListner\r\n    // this.util.removeAllListeners(this.domListeners);\r\n    let onSurveyQuestionEvent = new CustomEvent(\r\n      Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken\r\n    );\r\n    document.dispatchEvent(onSurveyQuestionEvent);\r\n    //submit the current response\r\n    // (window as any).ccsdkDebug?console.log('submit ',this.qResponse.type, this.qResponse):'';\r\n    let isRequired: boolean = false;\r\n    let q: HTMLElement = this.$questionContainer[0].firstChild;\r\n    // (window as any).ccsdkDebug?console.log(this.$questionContainer):'';\r\n    let span: Element = this.$questionContainer[0].firstChild.querySelectorAll(\r\n      \".cc-question-container__required\"\r\n    )[0];\r\n    let validationSpan: Element = this.$questionContainer[0].firstChild.querySelectorAll(\r\n      \".cc-question-container__validation\"\r\n    )[0];\r\n    if (span) this.util.removeClass(span, \"show\");\r\n    if (validationSpan) this.util.removeClass(validationSpan, \"show\");\r\n\r\n    //check if question is required\r\n    isRequired =\r\n      q.getAttribute(\"data-required\").toLowerCase() == \"true\" ? true : false;\r\n    // console.log('required check',Object.keys(this.qResponse).length, isRequired, this.qResponse);\r\n    // if (isRequired && Object.keys(this.qResponse).length === 0) {\r\n    if (isRequired && Object.keys(this.qResponse).length === 0) {\r\n      if (span) {\r\n        this.util.addClass(span, \"show\");\r\n        this.util.removeClass(span, \"hide\");\r\n      }\r\n      return;\r\n    } else if (isRequired && !this.qResponse.text && !this.qResponse.number) {\r\n      if (span) {\r\n        this.util.addClass(span, \"show\");\r\n        this.util.removeClass(span, \"hide\");\r\n      }\r\n      return;\r\n    } else {\r\n      if (span) {\r\n        this.util.removeClass(span, \"show\");\r\n        this.util.addClass(span, \"hide\");\r\n      }\r\n\r\n      //check if validationRegex is set and is fulfilled\r\n      let validationRegex = this.ccsdk.survey.questionsToDisplay[this.qIndex]\r\n        .validationRegex;\r\n      if (validationRegex) {\r\n        (window as any).ccsdkDebug\r\n          ? console.log(\"validationRegex\", validationRegex)\r\n          : \"\";\r\n        (window as any).ccsdkDebug\r\n          ? console.log(\"response\", this.qResponse)\r\n          : \"\";\r\n        let pattern = validationRegex.match(new RegExp(\"^/(.*?)/([gimy]*)$\"));\r\n        let regex = new RegExp(validationRegex);\r\n        if (this.qResponse.text) {\r\n          if (regex.test(this.qResponse.text)) {\r\n            this.util.removeClass(validationSpan, \"show\");\r\n            this.util.addClass(validationSpan, \"hide\");\r\n          } else {\r\n            if (validationSpan) {\r\n              this.util.addClass(validationSpan, \"show\");\r\n              this.util.removeClass(validationSpan, \"hide\");\r\n            }\r\n            return;\r\n          }\r\n        } else if (this.qResponse.number) {\r\n          (window as any).ccsdkDebug\r\n            ? console.log(\"test regex text\", regex.test(this.qResponse.number))\r\n            : \"\";\r\n\r\n          if (regex.test(this.qResponse.number)) {\r\n            this.util.removeClass(validationSpan, \"show\");\r\n            this.util.addClass(validationSpan, \"hide\");\r\n          } else {\r\n            if (validationSpan) {\r\n              this.util.addClass(validationSpan, \"show\");\r\n              this.util.removeClass(validationSpan, \"hide\");\r\n            }\r\n            return;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (this.qResponse !== \"undefined\") {\r\n        // (window as any).ccsdkDebug?console.log('qindex ' + this.qIndex):'';\r\n        if (\r\n          typeof this.ccsdk.survey.answers[this.currentQuestionId] !==\r\n          \"undefined\" &&\r\n          this.qResponse.type ==\r\n          this.ccsdk.survey.answers[this.currentQuestionId].type &&\r\n          this.qResponse.text ==\r\n          this.ccsdk.survey.answers[this.currentQuestionId].text &&\r\n          this.qResponse.number ==\r\n          this.ccsdk.survey.answers[this.currentQuestionId].number\r\n        ) {\r\n          // console.log('no submit');\r\n          //don't submit if already submitted.\r\n        } else if (\r\n          typeof this.ccsdk.survey.answers[this.currentQuestionId] !==\r\n          \"undefined\" &&\r\n          !this.qResponse.text &&\r\n          !this.qResponse.number\r\n        ) {\r\n          // console.log('no submit 2');\r\n          //previous entry filled\r\n        } else {\r\n          // (window as any).ccsdkDebug?console.log('submitting ' + this.currentQuestionId):'';\r\n          // console.log(this.qResponse);\r\n\r\n          let qId = this.qResponse.questionId\r\n            ? this.qResponse.questionId\r\n            : this.currentQuestionId;\r\n          this.submitQuestion(\r\n            this.qIndex,\r\n            this.qResponse,\r\n            this.qResponse.type,\r\n            qId\r\n          );\r\n          //save response\r\n          this.ccsdk.survey.answers[this.currentQuestionId] = JSON.parse(\r\n            JSON.stringify(this.qResponse)\r\n          );\r\n        }\r\n      }\r\n    }\r\n    ConditionalFlowFilter.filterQuestion(\r\n      this.ccsdk.survey,\r\n      this.ccsdk.survey.questionsToDisplay[this.qIndex]\r\n    );\r\n    // console.log(this.ccsdk.survey.questionsToDisplay);\r\n    //go to next question\r\n    this.qIndex++;\r\n    //reset the post parameters\r\n    // this.qResponse = typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined' ? JSON.parse(JSON.stringify(this.ccsdk.survey.answers[this.currentQuestionId])) : {};\r\n    // this.qResponse = {};\r\n    let nextButtonState: string = \"initial\";\r\n    // (window as any).ccsdkDebug?console.log(this.$questionContainer):'';\r\n    let nextQ: HTMLElement = this.$questionContainer;\r\n    // (window as any).ccsdkDebug?console.log(this.qIndex):'';\r\n    if (this.qIndex == this.ccsdk.survey.questionsToDisplay.length) {\r\n      //Last run to show thank you message\r\n      let leftIcon: any = this.util.get(\".act-cc-button-prev\");\r\n      let rightIcon: any = this.util.get(\".cc-icon-right\");\r\n      let nextIcon: any = this.util.get(\".act-cc-button-next\");\r\n      this.util.addClassAll(leftIcon, \"hide\");\r\n      this.util.addClassAll(rightIcon, \"hide\");\r\n      this.util.addClassAll(nextIcon, \"hide\");\r\n      this.util.trigger(document, \"ccdone\", undefined);\r\n      this.util.removeClass(\r\n        this.$questionContainer[0].firstChild,\r\n        \"show-slide\"\r\n      );\r\n      this.updateProgress();\r\n    } else {\r\n      if (this.qIndex > this.ccsdk.survey.questionsToDisplay.length) {\r\n        //reset the counter to show first question\r\n        this.qIndex = 0;\r\n      }\r\n      //repopulate qResponse based on answers.\r\n      // ( window as any ).ccsdkDebug ? console.log( 'previous answer', this.ccsdk.survey.answers[ this.currentQuestionId ] ) : '';\r\n      this.qResponse =\r\n        typeof this.ccsdk.survey.answers[this.currentQuestionId] !== \"undefined\"\r\n          ? JSON.parse(\r\n            JSON.stringify(this.ccsdk.survey.answers[this.currentQuestionId])\r\n          )\r\n          : {};\r\n      // this.util.removeClassAll(this.$questionContainer[0].firstChild, 'show-slide');\r\n      // this.util.addClass(nextQ, 'show-slide');\r\n      this.updateProgress();\r\n      this.loadQuestionSpecifics(nextQ, this.qIndex);\r\n      this.util.addClass(this.$questionContainer[0].firstChild, \"show-slide\");\r\n      // if(nextButtonState === 'dirty'){\r\n      // this.submitQuestion(this.qIndex, 'test', 'multiline');\r\n      // }\r\n    }\r\n    if (this.qIndex == 0) {\r\n      let leftIcon: any = this.util.get(\".act-cc-button-prev\");\r\n      this.util.addClassAll(leftIcon, \"hide-slide\");\r\n    } else {\r\n      let leftIcon: any = this.util.get(\".act-cc-button-prev\");\r\n      this.util.addClass(leftIcon[0], \"show-slide\");\r\n      this.util.removeClass(leftIcon[0], \"hide-slide\");\r\n    }\r\n    // ( window as any ).ccsdkDebug ? console.log( 'next question q response end', this.qResponse ) : '';\r\n    // this.qResponse = {};\r\n  }\r\n\r\n  prevQuestion() {\r\n    this.submitQuestion(\r\n      this.qIndex,\r\n      { ...this.qResponse },\r\n      this.qResponse.type,\r\n      this.currentQuestionId\r\n    );\r\n    this.ccsdk.survey.answers[this.currentQuestionId] = JSON.parse(\r\n      JSON.stringify(this.qResponse)\r\n    );\r\n\r\n    this.qIndex--;\r\n    if (!this.ccsdk.survey.questionsToDisplay.length || this.qIndex < 0) {\r\n      this.qIndex = 0;\r\n      return;\r\n      // this.qIndex = this.$questionContainer.length - 1;\r\n    }\r\n    // ( window as any ).ccsdkDebug ? console.log( this.qIndex ) : '';\r\n    let onSurveyQuestionEvent = new CustomEvent(\r\n      Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken\r\n    );\r\n    document.dispatchEvent(onSurveyQuestionEvent);\r\n    //re populate qResponse based on answers.\r\n    // this.util.removeClassAll(this.$questionContainer,'show-slide');\r\n    this.loadQuestionSpecifics(null, this.qIndex);\r\n    this.qResponse =\r\n      typeof this.ccsdk.survey.answers[this.currentQuestionId] !== \"undefined\"\r\n        ? JSON.parse(\r\n          JSON.stringify(this.ccsdk.survey.answers[this.currentQuestionId])\r\n        )\r\n        : {};\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"prevQuestion qResponse\", this.qResponse)\r\n      : \"\";\r\n    this.util.addClass(this.$questionContainer[0].firstChild, \"show-slide\");\r\n    this.updateProgress();\r\n    if (this.qIndex == 0) {\r\n      let leftIcon: any = this.util.get(\".act-cc-button-prev\");\r\n      this.util.addClassAll(leftIcon, \"hide-slide\");\r\n      this.util.removeClassAll(leftIcon, \"show-slide\");\r\n    }\r\n  }\r\n\r\n  showLoader() {\r\n    let $loader = document.querySelectorAll(\".cc-loaderimg\")[0];\r\n    this.util.addClass($loader, \"show\");\r\n    this.util.removeClass($loader, \"hide\");\r\n  }\r\n  hideLoader() {\r\n    let $loader = document.querySelectorAll(\".cc-loaderimg\")[0];\r\n    this.util.removeClass($loader, \"show\");\r\n    this.util.addClass($loader, \"hide\");\r\n  }\r\n\r\n  appendInBody(html) {\r\n    document.querySelectorAll(\"body\")[0].insertAdjacentHTML(\"afterbegin\", html);\r\n    //force update domSelect\r\n    this.domSelectElements();\r\n  }\r\n\r\n  replaceInQuestionsContainer(html) {\r\n    this.$questionContainer[0].innerHTML = html;\r\n    this.domSelectElements();\r\n  }\r\n\r\n  appendInQuestionsContainer(html) {\r\n    document\r\n      .querySelectorAll(\".cc-questions-container\")[0]\r\n      .insertAdjacentHTML(\"afterbegin\", html);\r\n    //force update domSelect\r\n    this.domSelectElements();\r\n  }\r\n\r\n  showWelcomeContainer() {\r\n    setTimeout(() => {\r\n      let startContainer = <HTMLElement>(\r\n        document.querySelectorAll(\".act-cc-welcome-question-box\")[0]\r\n      );\r\n      let bodyElement = <HTMLElement>document.getElementsByTagName(\"body\")[0];\r\n      this.util.addClass(startContainer, \"show-slide\");\r\n      // this.util.addClass( bodyElement, \"blurr\" );\r\n    }, 200);\r\n    // console.debug()\r\n    this.$startBtn = document.querySelectorAll(\".act-cc-survey-start\")[0];\r\n  }\r\n\r\n  showLanguageSelector() {\r\n    setTimeout(() => {\r\n      let startContainer = <HTMLElement>(\r\n        document.querySelectorAll(\".cc-language-selector\")[0]\r\n      );\r\n      let bodyElement = <HTMLElement>document.getElementsByTagName(\"body\")[0];\r\n      this.util.addClass(startContainer, \"show-slide\");\r\n      // this.util.addClass( bodyElement, \"blurr\" );\r\n    }, 200);\r\n    let self = this;\r\n    if (\r\n      this.util.checkIfListenerExists(\".cc-language-select\", this.domListeners)\r\n    ) {\r\n      // return;\r\n      // ( window as any ).ccsdkDebug ? console.log( \"language select - previous listeners exists\" ) : '';\r\n      this.removePrevListener(\".cc-language-select\");\r\n    }\r\n    let languageSelect = this.util.initListener(\r\n      \"click\",\r\n      \".cc-language-select\",\r\n      function () {\r\n        // let onSurveyClickEvent = new CustomEvent(Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n        // document.dispatchEvent(onSurveyClickEvent);\r\n        //select language show next question.\r\n        // self.startSurvey();\r\n        self.ccsdk.config.language = \"default\";\r\n        self.ccsdk.config.language = \"\"; //language selection from menu then show first question\r\n      }\r\n    );\r\n\r\n    languageSelect.internalHandler = this.util.listener(\r\n      this.$body,\r\n      languageSelect.type,\r\n      languageSelect.id,\r\n      languageSelect.cb\r\n    );\r\n  }\r\n\r\n  getSurveyContainer(token: string) {\r\n    return document.querySelectorAll(\"#\" + token + \"-survey\")[0];\r\n  }\r\n\r\n  getWelcomeContainer(token: string) {\r\n    return document.querySelectorAll(\"#\" + token + \"-welcome\")[0];\r\n  }\r\n\r\n  loadQuestionSpecifics(q: HTMLElement, index: number) {\r\n    let self: DomSurvey = this;\r\n    this.$questionContainer[0].innerHTML = \"\";\r\n    let compiledTemplate = this.ccsdk.survey.compileTemplate(\r\n      this.ccsdk.survey.questionsToDisplay[index]\r\n    );\r\n    this.$questionContainer[0].innerHTML += compiledTemplate;\r\n    console.log(compiledTemplate);\r\n    let qType: string = this.$questionContainer[0].firstChild.getAttribute(\r\n      \"data-type\"\r\n    );\r\n    let qId: string = this.$questionContainer[0].firstChild.getAttribute(\r\n      \"data-id\"\r\n    );\r\n    this.qResponse = {};\r\n    // (window as any).ccsdkDebug?console.log(\"QTYIPE AND QID \" , qType, qId):'';\r\n    this.currentQuestionId = qId.substring(2, qId.length);\r\n    // console.log( 'qtype', qType )\r\n    switch (qType) {\r\n      case \"scale\":\r\n        let allOptions1: any = document.querySelectorAll(\r\n          \"#\" + qId + \" .option-number-item\"\r\n        );\r\n        let optionWidth1 = 100 / allOptions1.length - 0.6;\r\n        // (window as any).ccsdkDebug?console.log(\"Option width\", allOptions1, optionWidth1.toFixed(2)):'';\r\n        // self.util.css(allOptions1 , 'width',  optionWidth1.toFixed(1) + '%');\r\n        this.setupListenersQuestionScale(index, qId);\r\n        break;\r\n      case \"nps\":\r\n        this.setupListenersQuestionNPS(index, qId);\r\n        break;\r\n      case \"multiline\":\r\n        this.setupListenersQuestionMultiline(index, qId);\r\n        break;\r\n      case \"select\":\r\n        if (typeof this.select !== \"undefined\") {\r\n          this.select.destroyListeners();\r\n        }\r\n        this.setupListenersQuestionSelect(index, qId);\r\n        break;\r\n      case \"radio\":\r\n        this.setupListenersQuestionRadio(index, qId);\r\n        break;\r\n      case \"radioImage\":\r\n        this.setupListenersQuestionRadioImage(index, qId);\r\n        break;\r\n      case \"checkbox\":\r\n        this.setupListenersQuestionCheckbox(index, qId);\r\n        break;\r\n      case \"star\":\r\n        this.setupListenersQuestionStar(index, qId);\r\n        break;\r\n      case \"smile\":\r\n        this.setupListenersQuestionSmile(index, qId);\r\n        break;\r\n      case \"csat\":\r\n        this.setupListenersQuestionCsat(index, qId);\r\n        break;\r\n      case \"slider\":\r\n        this.setupListenersQuestionSlider(index, qId);\r\n        break;\r\n      case \"singleline\":\r\n        this.setupListenersQuestionSingleline(index, qId);\r\n        break;\r\n      case \"number\":\r\n        this.setupListenersQuestionNumber(index, qId);\r\n        break;\r\n      case \"date\":\r\n        this.setupListenersForDate(index, qId);\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  // question specific listeners\r\n\r\n  setupListenersQuestionScale(index: number, qId: string) {\r\n    var self: DomSurvey = this;\r\n    let selectedRating = <HTMLElement>(\r\n      document.querySelectorAll(\"#\" + qId + \" .cc-nps-selected-rating\")[0]\r\n    );\r\n    let selectedRating1 = <HTMLElement>(\r\n      document.querySelectorAll(\"#\" + qId + \" .cc-nps-selected-rating\")[1]\r\n    );\r\n    //add id too.\r\n    if (\r\n      this.util.checkIfListenerExists(\r\n        \"#\" + qId + \" .option-number-item\",\r\n        this.domListeners\r\n      )\r\n    ) {\r\n      // return;\r\n      // ( window as any ).ccsdkDebug ? console.log( \"scale question - previous listeners exists\" ) : '';\r\n      this.removePrevListener(\"#\" + qId + \" .option-number-item\");\r\n    }\r\n\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring(2, qId.length);\r\n    // ( window as any ).ccsdkDebug ? console.log( 'scale question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if (\r\n      typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n      this.ccsdk.survey.answers[questionId] !== \"\"\r\n    ) {\r\n      let previousValue = this.ccsdk.survey.answers[questionId].number;\r\n      let previousSelection = document.querySelectorAll(\r\n        \"#\" + qId + ' .option-number-item[data-rating=\"' + previousValue + '\"]'\r\n      )[0];\r\n      // ( window as any ).ccsdkDebug ? console.log( 'scale previous selection', previousSelection ) : '';\r\n      if (typeof previousSelection !== \"undefined\") {\r\n        this.util.addClass(previousSelection, \"selected\");\r\n        self.qResponse.type = \"scale\";\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n        selectedRating.innerHTML = previousValue;\r\n        selectedRating1.innerHTML = previousValue;\r\n      }\r\n    }\r\n\r\n    let ref = this.util.initListener(\r\n      \"click\",\r\n      \"#\" + qId + \" .option-number-item\",\r\n      function () {\r\n        let allOptions: any = document.querySelectorAll(\r\n          \"#\" + qId + \" .option-number-item\"\r\n        );\r\n\r\n        let rating: number = this.getAttribute(\"data-rating\");\r\n        self.util.removeClassAll(allOptions, \"selected\");\r\n        self.util.addClass(this, \"selected\");\r\n        // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n        // (window as any).ccsdkDebug?console.log('Scale selected',rating):'';\r\n        self.qResponse.type = \"scale\";\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = rating;\r\n        self.qResponse.questionId = qId;\r\n        selectedRating.innerHTML = \"\" + rating;\r\n        selectedRating1.innerHTML = \"\" + rating;\r\n\r\n        //move to next question automagically\r\n        // alert('calling next questions inside scale');\r\n        let onSurveyClickEvent = new CustomEvent(\r\n          Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken\r\n        );\r\n        document.dispatchEvent(onSurveyClickEvent);\r\n        setTimeout(() => {\r\n          self.nextQuestion();\r\n        }, 500);\r\n        // self.util.trigger(document,'q-answered', {\r\n        //   index : index,\r\n        //   rating : rating,\r\n        //   type : 'scale'\r\n        // });\r\n      }\r\n    );\r\n    this.domListeners.push(ref);\r\n\r\n    ref.internalHandler = this.util.listener(\r\n      this.$body,\r\n      ref.type,\r\n      ref.id,\r\n      ref.cb\r\n    );\r\n  }\r\n\r\n  setupListenersQuestionNPS(index: number, qId: string) {\r\n    var self: DomSurvey = this;\r\n    let selectedRating = <HTMLElement>(\r\n      document.querySelectorAll(\"#\" + qId + \" .cc-nps-selected-rating\")[0]\r\n    );\r\n    let allOptions: any = document.querySelectorAll(\r\n      \"#\" + qId + \" .option-number-item\"\r\n    );\r\n\r\n    //add id too.\r\n    if (\r\n      this.util.checkIfListenerExists(\r\n        \"#\" + qId + \" .option-number-item\",\r\n        this.domListeners\r\n      )\r\n    ) {\r\n      //remove listeners\r\n      // ( window as any ).ccsdkDebug ? console.log( \"nps question - previous listeners exists\" ) : '';\r\n      this.removePrevListener(\"#\" + qId + \" .option-number-item\");\r\n    }\r\n\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring(2, qId.length);\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"nps question\", this.ccsdk.survey.answers[questionId])\r\n      : \"\";\r\n    if (\r\n      typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n      this.ccsdk.survey.answers[questionId] !== \"\"\r\n    ) {\r\n      let previousValue = this.ccsdk.survey.answers[questionId].number;\r\n      let previousSelection = document.querySelectorAll(\r\n        \"#\" + qId + ' .option-number-item[data-rating=\"' + previousValue + '\"]'\r\n      )[0];\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"nps previous selection\", previousSelection)\r\n        : \"\";\r\n      if (typeof previousSelection !== \"undefined\") {\r\n        this.util.addClass(previousSelection, \"selected\");\r\n        let $mobileRating = document.querySelectorAll(\r\n          \".act-cc-nps-selected-rating\"\r\n        )[0];\r\n        $mobileRating.innerHTML = previousValue;\r\n        self.qResponse.type = \"nps\";\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n\r\n    // (window as any).ccsdkDebug?console.log(self.domListeners):'';\r\n    let ref = this.util.initListener(\r\n      \"click\",\r\n      \"#\" + qId + \" .option-number-item\",\r\n      function () {\r\n        let rating: number = this.getAttribute(\"data-rating\");\r\n        self.util.removeClassAll(allOptions, \"selected\");\r\n        self.util.addClass(this, \"selected\");\r\n        // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n        // (window as any).ccsdkDebug?console.log('Scale selected',rating):'';\r\n        self.qResponse.type = \"nps\";\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = rating;\r\n        self.qResponse.questionId = qId;\r\n        selectedRating.innerHTML = \"\" + rating;\r\n        //move to next question automagically\r\n\r\n        let onSurveyClickEvent = new CustomEvent(\r\n          Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken\r\n        );\r\n        document.dispatchEvent(onSurveyClickEvent);\r\n\r\n        // alert('calling next questions inside scale');\r\n        setTimeout(() => {\r\n          self.nextQuestion();\r\n        }, 500);\r\n        // self.util.trigger(document,'q-answered', {\r\n        //   index : index,\r\n        //   rating : rating,\r\n        //   type : 'scale'\r\n        // });\r\n      }\r\n    );\r\n    this.domListeners.push(ref);\r\n\r\n    ref.internalHandler = this.util.listener(\r\n      this.$body,\r\n      ref.type,\r\n      ref.id,\r\n      ref.cb\r\n    );\r\n  }\r\n\r\n  setupListenersQuestionCheckbox(index: number, qId: string) {\r\n    var self: DomSurvey = this;\r\n    if (\r\n      this.util.checkIfListenerExists(\r\n        \"#\" + qId + \" .cc-checkbox\",\r\n        this.domListeners\r\n      )\r\n    ) {\r\n      // return;\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"checkbox question - previous listeners exists\")\r\n        : \"\";\r\n      this.removePrevListener(\"#\" + qId + \" .cc-checkbox\");\r\n    }\r\n\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring(2, qId.length);\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"radio question\", this.ccsdk.survey.answers[questionId])\r\n      : \"\";\r\n    if (\r\n      typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n      this.ccsdk.survey.answers[questionId] !== \"\"\r\n    ) {\r\n      let previousValues = this.ccsdk.survey.answers[questionId].text;\r\n      if (previousValues) {\r\n        previousValues = previousValues.split(\",\");\r\n        for (let previousValue of previousValues) {\r\n          let previousSelection = document.querySelectorAll(\r\n            \"#\" + qId + ' input[value=\"' + previousValue + '\"]'\r\n          )[0];\r\n          (window as any).ccsdkDebug\r\n            ? console.log(\"radio previous selection\", previousSelection)\r\n            : \"\";\r\n          if (typeof previousSelection !== \"undefined\") {\r\n            this.util.addClass(previousSelection, \"selected\");\r\n            previousSelection.setAttribute(\"checked\", \"checked\");\r\n            self.qResponse.type = \"checkbox\";\r\n            self.qResponse.text = previousValue;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    let ref = this.util.initListener(\r\n      \"click\",\r\n      \"#\" + qId + \" .cc-checkbox\",\r\n      function () {\r\n        // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox input');\r\n        // let rating : number = this.querySelectorAll('input')[0].value;\r\n        let rating: string = [].filter\r\n          .call(\r\n            document.querySelectorAll(\"#\" + qId + \" .cc-checkbox input\"),\r\n            function (c) {\r\n              return c.checked;\r\n            }\r\n          )\r\n          .map(function (c) {\r\n            return c.value;\r\n          })\r\n          .join(\",\");\r\n\r\n        (window as any).ccsdkDebug\r\n          ? console.log(\"Checkbox selected\", rating)\r\n          : \"\";\r\n\r\n        self.qResponse.type = \"checkbox\";\r\n        self.qResponse.text = rating;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n        //move to next question automagically\r\n        // self.nextQuestion();\r\n      }\r\n    );\r\n    this.domListeners.push(ref);\r\n    let onSurveyClickEvent = new CustomEvent(\r\n      Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken\r\n    );\r\n    document.dispatchEvent(onSurveyClickEvent);\r\n    ref.internalHandler = this.util.listener(\r\n      this.$body,\r\n      ref.type,\r\n      ref.id,\r\n      ref.cb\r\n    );\r\n  }\r\n\r\n  setupListenersQuestionRadio(index: number, qId: string) {\r\n    var self: DomSurvey = this;\r\n    if (\r\n      this.util.checkIfListenerExists(\r\n        \"#\" + qId + \" .cc-checkbox input\",\r\n        this.domListeners\r\n      )\r\n    ) {\r\n      // return;\r\n      //remove listeners\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"radio question - previous listeners exists\")\r\n        : \"\";\r\n      this.removePrevListener(\"#\" + qId + \" .cc-checkbox input\");\r\n    }\r\n\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring(2, qId.length);\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"radio question\", this.ccsdk.survey.answers[questionId])\r\n      : \"\";\r\n    if (\r\n      typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n      this.ccsdk.survey.answers[questionId] !== \"\"\r\n    ) {\r\n      let previousValue = this.ccsdk.survey.answers[questionId].text;\r\n      let previousSelection = document.querySelectorAll(\r\n        \"#\" + qId + ' input[value=\"' + previousValue + '\"]'\r\n      )[0];\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"radio previous selection\", previousSelection)\r\n        : \"\";\r\n      if (typeof previousSelection !== \"undefined\") {\r\n        this.util.addClass(previousSelection, \"selected\");\r\n        previousSelection.setAttribute(\"checked\", \"checked\");\r\n        self.qResponse.type = \"radio\";\r\n        self.qResponse.text = previousValue;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n\r\n    let ref = this.util.initListener(\r\n      \"click\",\r\n      \"#\" + qId + \" .cc-checkbox input\",\r\n      function () {\r\n        // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox');\r\n        let rating: string = this.value;\r\n        // self.util.removeClassAll(allOptions, \"selected\");\r\n        // self.util.addClass(this, \"selected\");\r\n        // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n        // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\r\n        self.qResponse.type = \"radio\";\r\n        self.qResponse.text = rating;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n        let onSurveyClickEvent = new CustomEvent(\r\n          Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken\r\n        );\r\n        document.dispatchEvent(onSurveyClickEvent);\r\n        //move to next question automagically\r\n        setTimeout(() => {\r\n          self.nextQuestion();\r\n        }, 500);\r\n      }\r\n    );\r\n    this.domListeners.push(ref);\r\n\r\n    ref.internalHandler = this.util.listener(\r\n      this.$body,\r\n      ref.type,\r\n      ref.id,\r\n      ref.cb\r\n    );\r\n  }\r\n\r\n  setupListenersQuestionRadioImage(index: number, qId: string) {\r\n    var self: DomSurvey = this;\r\n    if (\r\n      this.util.checkIfListenerExists(\r\n        \"#\" + qId + \" .cc-checkbox input\",\r\n        this.domListeners\r\n      )\r\n    ) {\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"radio image question - previous listeners exists\")\r\n        : \"\";\r\n      this.removePrevListener(\"#\" + qId + \" .cc-checkbox input\");\r\n    }\r\n\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring(2, qId.length);\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\r\n        \"radio image question\",\r\n        this.ccsdk.survey.answers[questionId]\r\n      )\r\n      : \"\";\r\n    if (\r\n      typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n      this.ccsdk.survey.answers[questionId] !== \"\"\r\n    ) {\r\n      let previousValue = this.ccsdk.survey.answers[questionId].text;\r\n      let previousSelection = document.querySelectorAll(\r\n        \"#\" + qId + ' input[value=\"' + previousValue + '\"]'\r\n      )[0];\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"radio image previous selection\", previousSelection)\r\n        : \"\";\r\n      if (typeof previousSelection !== \"undefined\") {\r\n        this.util.addClass(previousSelection, \"selected\");\r\n        previousSelection.setAttribute(\"checked\", \"checked\");\r\n        self.qResponse.type = \"radioImage\";\r\n        self.qResponse.text = previousValue;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n\r\n    let ref = this.util.initListener(\r\n      \"click\",\r\n      \"#\" + qId + \" .cc-checkbox input\",\r\n      function () {\r\n        // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox');\r\n        let rating: string = this.value;\r\n        // self.util.removeClassAll(allOptions, \"selected\");\r\n        // self.util.addClass(this, \"selected\");\r\n        // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n        // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\r\n        self.qResponse.type = \"radioImage\";\r\n        self.qResponse.text = rating;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n        let onSurveyClickEvent = new CustomEvent(\r\n          Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken\r\n        );\r\n        document.dispatchEvent(onSurveyClickEvent);\r\n        //move to next question automagically\r\n        setTimeout(() => {\r\n          self.nextQuestion();\r\n        }, 500);\r\n      }\r\n    );\r\n    this.domListeners.push(ref);\r\n\r\n    ref.internalHandler = this.util.listener(\r\n      this.$body,\r\n      ref.type,\r\n      ref.id,\r\n      ref.cb\r\n    );\r\n  }\r\n\r\n  setupListenersQuestionStar(index: number, qId: string) {\r\n    var self: DomSurvey = this;\r\n    if (\r\n      this.util.checkIfListenerExists(\r\n        \"#\" + qId + \" .option-star-box\",\r\n        this.domListeners\r\n      )\r\n    ) {\r\n      //remove listeners\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"smile question - previous listeners exists\")\r\n        : \"\";\r\n      this.removePrevListener(\"#\" + qId + \" .option-star-box\");\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring(2, qId.length);\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"star question\", this.ccsdk.survey.answers[questionId])\r\n      : \"\";\r\n    if (\r\n      typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n      this.ccsdk.survey.answers[questionId] !== \"\"\r\n    ) {\r\n      let previousValue = this.ccsdk.survey.answers[questionId].number;\r\n      let previousSelection = document.querySelectorAll(\r\n        \"#\" + qId + ' .option-star-box[data-rating=\"' + previousValue + '\"]'\r\n      )[0];\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"star previous selection\", previousSelection)\r\n        : \"\";\r\n      if (\r\n        typeof previousSelection !== \"undefined\" &&\r\n        previousSelection != null\r\n      ) {\r\n        this.util.addClass(previousSelection, \"selected\");\r\n        self.qResponse.type = \"star\";\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n    let ref = this.util.initListener(\r\n      \"click\",\r\n      \"#\" + qId + \" .option-star-box\",\r\n      function () {\r\n        let allOptions: any = document.querySelectorAll(\r\n          \"#\" + qId + \" .option-star-box\"\r\n        );\r\n        let rating: number = this.getAttribute(\"data-rating\");\r\n        self.util.removeClassAll(allOptions, \"selected\");\r\n        self.util.addClass(this, \"selected\");\r\n\r\n        //select previous sibling\r\n        // let child : any = this.previousSibling;\r\n        // while( ( child = child.previousSibling) != null ){\r\n        //   self.util.addClass(child, \"selected\");\r\n        // }\r\n\r\n        // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n        // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\r\n        self.qResponse.type = \"star\";\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = rating;\r\n        self.qResponse.questionId = qId;\r\n\r\n        let onSurveyClickEvent = new CustomEvent(\r\n          Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken\r\n        );\r\n        document.dispatchEvent(onSurveyClickEvent);\r\n        //move to next question automagically\r\n        setTimeout(() => {\r\n          self.nextQuestion();\r\n        }, 500);\r\n      }\r\n    );\r\n    this.domListeners.push(ref);\r\n\r\n    ref.internalHandler = this.util.listener(\r\n      this.$body,\r\n      ref.type,\r\n      ref.id,\r\n      ref.cb\r\n    );\r\n  }\r\n\r\n  setupListenersQuestionSmile(index: number, qId: string) {\r\n    var self: DomSurvey = this;\r\n    if (\r\n      this.util.checkIfListenerExists(\r\n        \"#\" + qId + \" .option-smile-box\",\r\n        this.domListeners\r\n      )\r\n    ) {\r\n      //remove listeners\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"smile question - previous listeners exists\")\r\n        : \"\";\r\n      this.removePrevListener(\"#\" + qId + \" .option-smile-box\");\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring(2, qId.length);\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"smile question\", this.ccsdk.survey.answers[questionId])\r\n      : \"\";\r\n    if (\r\n      typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n      this.ccsdk.survey.answers[questionId] !== \"\"\r\n    ) {\r\n      let previousValue = this.ccsdk.survey.answers[questionId].number;\r\n      let previousSelection = document.querySelectorAll(\r\n        \"#\" + qId + ' .option-smile-box[data-rating=\"' + previousValue + '\"]'\r\n      )[0];\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"smile previous selection\", previousSelection)\r\n        : \"\";\r\n      if (\r\n        typeof previousSelection !== \"undefined\" &&\r\n        previousSelection != null\r\n      ) {\r\n        this.util.addClass(previousSelection, \"selected\");\r\n        self.qResponse.type = \"smile\";\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n\r\n    let ref = this.util.initListener(\r\n      \"click\",\r\n      \"#\" + qId + \" .option-smile-box\",\r\n      function () {\r\n        let allOptions: any = document.querySelectorAll(\r\n          \"#\" + qId + \" .option-smile-box\"\r\n        );\r\n        let rating: number = this.getAttribute(\"data-rating\");\r\n        self.util.removeClassAll(allOptions, \"selected\");\r\n        self.util.addClass(this, \"selected\");\r\n\r\n        //select previous siblings\r\n        // let child : any = this.previousSibling;\r\n        // while( ( child = child.previousSibling) != null ){\r\n        //   self.util.addClass(child, \"selected\");\r\n        // }\r\n        // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n        // (window as any).ccsdkDebug?console.log('Smile selected',rating):'';\r\n        self.qResponse.type = \"smile\";\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = rating;\r\n        self.qResponse.questionId = qId;\r\n\r\n        let onSurveyClickEvent = new CustomEvent(\r\n          Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken\r\n        );\r\n        document.dispatchEvent(onSurveyClickEvent);\r\n        //move to next question automagically\r\n        setTimeout(() => {\r\n          self.nextQuestion();\r\n        }, 500);\r\n      }\r\n    );\r\n    this.domListeners.push(ref);\r\n\r\n    ref.internalHandler = this.util.listener(\r\n      this.$body,\r\n      ref.type,\r\n      ref.id,\r\n      ref.cb\r\n    );\r\n  }\r\n\r\n  setupListenersQuestionCsat(index: number, qId: string) {\r\n    var self: DomSurvey = this;\r\n    if (\r\n      this.util.checkIfListenerExists(\r\n        \"#\" + qId + \" .option-smile-box\",\r\n        this.domListeners\r\n      )\r\n    ) {\r\n      //remove listeners\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"csat question - previous listeners exists\")\r\n        : \"\";\r\n      this.removePrevListener(\"#\" + qId + \" .option-smile-box\");\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring(2, qId.length);\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"csat question\", this.ccsdk.survey.answers[questionId])\r\n      : \"\";\r\n    if (\r\n      typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n      this.ccsdk.survey.answers[questionId] !== \"\"\r\n    ) {\r\n      let previousValue = this.ccsdk.survey.answers[questionId].number;\r\n      let previousSelection = document.querySelectorAll(\r\n        \"#\" + qId + ' .option-smile-box[data-rating=\"' + previousValue + '\"]'\r\n      )[0];\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"csat previous selection\", previousSelection)\r\n        : \"\";\r\n      if (\r\n        typeof previousSelection !== \"undefined\" &&\r\n        previousSelection != null\r\n      ) {\r\n        this.util.addClass(previousSelection, \"selected\");\r\n        previousSelection\r\n          .querySelectorAll(\"input\")[0]\r\n          .setAttribute(\"checked\", \"checked\");\r\n        self.qResponse.type = \"smile\";\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n\r\n    let ref = this.util.initListener(\r\n      \"click\",\r\n      \"#\" + qId + \" .option-smile-box\",\r\n      function () {\r\n        let allOptions: any = document.querySelectorAll(\r\n          \"#\" + qId + \" .option-smile-box\"\r\n        );\r\n        let rating: number = this.getAttribute(\"data-rating\");\r\n        self.util.removeClassAll(allOptions, \"selected\");\r\n        self.util.addClass(this, \"selected\");\r\n        this.querySelectorAll(\"input\")[0].setAttribute(\"checked\", \"checked\");\r\n        let child: any = this.previousSibling;\r\n        while ((child = child.previousSibling) != null) {\r\n          // (window as any).ccsdkDebug?console.log('questionscale', 'previousSiblings', child):'';\r\n          self.util.addClass(child, \"selected\");\r\n        }\r\n        // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n        // (window as any).ccsdkDebug?console.log('Smile selected',rating):'';\r\n        self.qResponse.type = \"smile\";\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = rating;\r\n        self.qResponse.questionId = qId;\r\n        console.log(\"dispatching event in csat\", this);\r\n        let onSurveyClickEvent = new CustomEvent(\r\n          Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken\r\n        );\r\n        document.dispatchEvent(onSurveyClickEvent);\r\n        //move to next question automagically\r\n        setTimeout(() => {\r\n          self.nextQuestion();\r\n        }, 500);\r\n      }\r\n    );\r\n    this.domListeners.push(ref);\r\n\r\n    ref.internalHandler = this.util.listener(\r\n      this.$body,\r\n      ref.type,\r\n      ref.id,\r\n      ref.cb\r\n    );\r\n  }\r\n\r\n  setupListenersQuestionMultiline(index: number, qId: string) {\r\n    let self: DomSurvey = this;\r\n    let multilineRes: string = \"\";\r\n    if (this.util.checkIfListenerExists(\"#\" + qId, this.domListeners)) {\r\n      //remove listeners\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"multiine question - previous listeners exists\")\r\n        : \"\";\r\n      this.removePrevListener(\"#\" + qId);\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring(2, qId.length);\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"multiine question\", this.ccsdk.survey.answers[questionId])\r\n      : \"\";\r\n    if (\r\n      typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n      this.ccsdk.survey.answers[questionId] !== \"\"\r\n    ) {\r\n      let previousValue = this.ccsdk.survey.answers[questionId].text;\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\r\n          \"multiine input box\",\r\n          document.querySelectorAll(\"#\" + qId)[0]\r\n        )\r\n        : \"\";\r\n      let previousSelection = <HTMLInputElement>(\r\n        document.querySelectorAll(\"#\" + qId)[0]\r\n      );\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"multiine previous selection\", previousSelection)\r\n        : \"\";\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"multiine previous value\", previousValue)\r\n        : \"\";\r\n      if (\r\n        typeof previousSelection !== \"undefined\" &&\r\n        previousSelection != null &&\r\n        typeof previousValue !== \"undefined\"\r\n      ) {\r\n        previousSelection.value = previousValue;\r\n        self.qResponse.type = \"multiline\";\r\n        self.qResponse.text = previousValue;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n    let ref = this.util.initListener(\"change\", \"#\" + qId, function () {\r\n      multilineRes = this.value;\r\n      self.qResponse.type = \"multiline\";\r\n      self.qResponse.text = multilineRes;\r\n      self.qResponse.number = null;\r\n      self.qResponse.questionId = qId;\r\n    });\r\n    this.domListeners.push(ref);\r\n\r\n    ref.internalHandler = this.util.listener(\r\n      this.$body,\r\n      ref.type,\r\n      ref.id,\r\n      ref.cb\r\n    );\r\n  }\r\n\r\n  setupListenersQuestionSingleline(index: number, qId: string) {\r\n    let self: DomSurvey = this;\r\n    let singlelineRes: string = \"\";\r\n    if (this.util.checkIfListenerExists(\"#\" + qId, this.domListeners)) {\r\n      //remove listeners\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"singleline question - previous listeners exists\")\r\n        : \"\";\r\n      this.removePrevListener(\"#\" + qId);\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring(2, qId.length);\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\r\n        \"singleline question\",\r\n        this.ccsdk.survey.answers[questionId]\r\n      )\r\n      : \"\";\r\n    if (\r\n      typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n      this.ccsdk.survey.answers[questionId] !== \"\"\r\n    ) {\r\n      let previousValue = this.ccsdk.survey.answers[questionId].text;\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\r\n          \"singleline input box\",\r\n          document.querySelectorAll(\"#\" + qId)[0]\r\n        )\r\n        : \"\";\r\n      let previousSelection = <HTMLInputElement>(\r\n        document.querySelectorAll(\"#\" + qId)[0]\r\n      );\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"singleline previous selection\", previousSelection)\r\n        : \"\";\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"singleline previous value\", previousValue)\r\n        : \"\";\r\n      if (\r\n        typeof previousSelection !== \"undefined\" &&\r\n        previousSelection != null &&\r\n        typeof previousValue !== \"undefined\"\r\n      ) {\r\n        previousSelection.value = previousValue;\r\n        self.qResponse.type = \"singleline\";\r\n        self.qResponse.text = previousValue;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n    let ref = this.util.initListener(\"change\", \"#\" + qId, function () {\r\n      singlelineRes = this.value;\r\n      self.qResponse.type = \"singleline\";\r\n      self.qResponse.text = singlelineRes;\r\n      self.qResponse.number = null;\r\n      self.qResponse.questionId = qId;\r\n    });\r\n    this.domListeners.push(ref);\r\n\r\n    ref.internalHandler = this.util.listener(\r\n      this.$body,\r\n      ref.type,\r\n      ref.id,\r\n      ref.cb\r\n    );\r\n\r\n    // console.log( 'singleline qResponse', self.qResponse );\r\n  }\r\n\r\n  setupListenersForDate(index: number, qId: string) {\r\n    if (this.util.checkIfListenerExists(\".date-container\", this.domListeners)) {\r\n      //remove listeners\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"date question - previous listeners exists\")\r\n        : \"\";\r\n      this.removePrevListener(\".date-container\");\r\n    }\r\n\r\n    let questionId: any;\r\n    let self = this;\r\n    questionId = qId.substring(2, qId.length);\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"date question\", this.ccsdk.survey.answers, questionId)\r\n      : \"\";\r\n    if (\r\n      this.ccsdk.survey.answers[questionId] &&\r\n      this.ccsdk.survey.answers[questionId].number\r\n    ) {\r\n      let model = this.ccsdk.survey.answers[questionId].number;\r\n      let dateQuestion = this.util.get(\".date-container\")[0];\r\n      let list = model.toString().match(/\\d\\d/g);\r\n\r\n      (<HTMLInputElement>dateQuestion.children[0]).value = list[3];\r\n      (<HTMLInputElement>dateQuestion.children[1]).value = list[2];\r\n      (<HTMLInputElement>dateQuestion.children[2]).value = list[0] + list[1];\r\n\r\n      this.qResponse.type = \"date\";\r\n      this.qResponse.text = null;\r\n      this.qResponse.number = model;\r\n      this.qResponse.questionId = qId;\r\n    }\r\n\r\n    let ref = this.util.initListener(\"change\", \".date-container\", function () {\r\n      let date = this.children[0].value;\r\n      let month = this.children[1].value;\r\n      let year = this.children[2].value;\r\n      if (!date && !month && !year) {\r\n        return;\r\n      }\r\n\r\n      if (!date.match(/^\\d\\d$/)) {\r\n        self.util.addClass(this.children[3], \"show-error\");\r\n        return;\r\n      } else if (!month.match(/^\\d\\d$/)) {\r\n        self.util.addClass(this.children[3], \"show-error\");\r\n        return;\r\n      } else if (!year.match(/^\\d\\d\\d\\d$/)) {\r\n        self.util.addClass(this.children[3], \"show-error\");\r\n        return;\r\n      } else {\r\n        self.util.removeClass(this.children[3], \"show-error\");\r\n        let numberRes = parseInt(year + month + date, 10);\r\n        self.qResponse.type = \"number\";\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = numberRes;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    });\r\n\r\n    this.domListeners.push(ref);\r\n\r\n    ref.internalHandler = this.util.listener(\r\n      this.$body,\r\n      ref.type,\r\n      ref.id,\r\n      ref.cb\r\n    );\r\n  }\r\n\r\n  setupListenersQuestionNumber(index: number, qId: string) {\r\n    let self: DomSurvey = this;\r\n    let numberRes: string = \"\";\r\n    if (this.util.checkIfListenerExists(\"#\" + qId, this.domListeners)) {\r\n      //remove listeners\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"number question - previous listeners exists\")\r\n        : \"\";\r\n      this.removePrevListener(\"#\" + qId);\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring(2, qId.length);\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"number question\", this.ccsdk.survey.answers[questionId])\r\n      : \"\";\r\n    if (\r\n      typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n      this.ccsdk.survey.answers[questionId] !== \"\"\r\n    ) {\r\n      let previousValue = this.ccsdk.survey.answers[questionId].number;\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\r\n          \"number input box\",\r\n          document.querySelectorAll(\"#\" + qId)[0]\r\n        )\r\n        : \"\";\r\n      let previousSelection = <HTMLInputElement>(\r\n        document.querySelectorAll(\"#\" + qId)[0]\r\n      );\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"number previous selection\", previousSelection)\r\n        : \"\";\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"number previous value\", previousValue)\r\n        : \"\";\r\n      if (\r\n        typeof previousSelection !== \"undefined\" &&\r\n        previousSelection != null &&\r\n        typeof previousValue !== \"undefined\"\r\n      ) {\r\n        previousSelection.value = previousValue;\r\n        self.qResponse.type = \"number\";\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n    let ref = this.util.initListener(\"change\", \"#\" + qId, function () {\r\n      numberRes = this.value;\r\n      self.qResponse.type = \"number\";\r\n      self.qResponse.text = null;\r\n      self.qResponse.number = numberRes;\r\n      self.qResponse.questionId = qId;\r\n    });\r\n    this.domListeners.push(ref);\r\n\r\n    ref.internalHandler = this.util.listener(\r\n      this.$body,\r\n      ref.type,\r\n      ref.id,\r\n      ref.cb\r\n    );\r\n  }\r\n\r\n  setupListenersQuestionSlider(index: number, qId: string) {\r\n    let self: DomSurvey = this;\r\n    let sliderRes: string = \"\";\r\n    let slider = new Slider();\r\n    let sliderInput = <HTMLInputElement>(\r\n      document.querySelectorAll(\"#\" + qId + \" input\")[0]\r\n    );\r\n\r\n    if (\r\n      this.util.checkIfListenerExists(\"#\" + qId + \" input\", this.domListeners)\r\n    ) {\r\n      // return;\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring(2, qId.length);\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"slider question\", this.ccsdk.survey.answers[questionId])\r\n      : \"\";\r\n    if (\r\n      typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n      this.ccsdk.survey.answers[questionId] !== \"\"\r\n    ) {\r\n      let previousValue = this.ccsdk.survey.answers[questionId].number;\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\r\n          \"slider input box\",\r\n          document.querySelectorAll(\"#\" + qId)[0]\r\n        )\r\n        : \"\";\r\n      let previousSelection = <HTMLInputElement>(\r\n        document.querySelectorAll(\"#\" + qId + \" .act-slider-tip\")[0]\r\n      );\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"slider previous selection\", previousSelection)\r\n        : \"\";\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"slider previous value\", previousValue)\r\n        : \"\";\r\n      if (\r\n        typeof previousSelection !== \"undefined\" &&\r\n        previousSelection != null &&\r\n        typeof previousValue !== \"undefined\"\r\n      ) {\r\n        previousSelection.innerHTML = previousValue;\r\n        sliderInput.value = previousValue;\r\n        self.qResponse.type = \"slider\";\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.text = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n    let ref = this.util.initListener(\r\n      \"change\",\r\n      \"#\" + qId + \" input\",\r\n      function () {\r\n        sliderRes = this.value;\r\n        self.qResponse.type = \"slider\";\r\n        self.qResponse.number = sliderRes;\r\n        self.qResponse.text = null;\r\n        self.qResponse.questionId = qId;\r\n        //move to next question automagically\r\n        // self.nextQuestion();\r\n      }\r\n    );\r\n    this.domListeners.push(ref);\r\n\r\n    ref.internalHandler = this.util.listener(\r\n      this.$body,\r\n      ref.type,\r\n      ref.id,\r\n      ref.cb\r\n    );\r\n  }\r\n\r\n  setupListenersQuestionSelect(index: number, qId: string) {\r\n    let self: DomSurvey = this;\r\n    let questionId: any;\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"select que\", this.domListeners)\r\n      : \"\";\r\n    questionId = qId.substring(2, qId.length);\r\n    // (window as any).ccsdkDebug?console.log(this.ccsdk.survey.answers[questionId]):'';\r\n    // (window as any).ccsdkDebug?console.log(this.ccsdk.survey.surveyAnswers[questionId]):'';\r\n    if (\r\n      this.util.checkIfListenerExists(\r\n        \"#\" + qId + \" .cc-select-options .cc-select-option\",\r\n        this.domListeners\r\n      )\r\n    ) {\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"select que listner exists\")\r\n        : \"\";\r\n      this.removePrevListener(\r\n        \"#\" + qId + \" .cc-select-options .cc-select-option\"\r\n      );\r\n\r\n      // return;\r\n    }\r\n    (window as any).ccsdkDebug ? console.log(\"select que\") : \"\";\r\n\r\n    // if(!self.util.arrayContains.call(self.trackSelects, qId)){\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"select que initialize select\")\r\n      : \"\";\r\n\r\n    self.select = new Select(qId);\r\n    self.select.destroyListeners();\r\n    self.select.init(qId);\r\n\r\n    if (\r\n      typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n      this.ccsdk.survey.answers[questionId] !== \"\"\r\n    ) {\r\n      if (this.ccsdk.survey.answers[questionId].text) {\r\n        let question = this.ccsdk.survey.getQuestionById(questionId);\r\n        self.select.setValue(\r\n          this.ccsdk.survey.answers[questionId].text,\r\n          question,\r\n          this.ccsdk.survey\r\n        );\r\n        self.select.selectOptions(this.ccsdk.survey.answers[questionId].text);\r\n        self.qResponse.type = \"select\";\r\n        self.qResponse.text = this.ccsdk.survey.answers[questionId].text;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n    self.trackSelects.push(qId);\r\n    // }\r\n    let selectRes: string = \"\";\r\n    let ref = this.util.initListener(\r\n      \"click\",\r\n      \"#\" + qId + \" .cc-select-options .cc-select-option\",\r\n      function () {\r\n        // selectRes = this.getAttribute('data-value');\r\n        selectRes = document\r\n          .querySelectorAll(\"#\" + qId + \" .cc-select-trigger\")[0]\r\n          .getAttribute(\"data-selection-value\");\r\n        // (window as any).ccsdkDebug?console.log(selectRes):'';\r\n        self.qResponse.type = \"select\";\r\n        self.qResponse.text = selectRes;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n        //move to next question automagically\r\n\r\n        let onSurveyClickEvent = new CustomEvent(\r\n          Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken\r\n        );\r\n        document.dispatchEvent(onSurveyClickEvent);\r\n\r\n        // self.nextQuestion();\r\n      }\r\n    );\r\n\r\n    // this.util.removeListener(this.$body, ref.type, listener.internalHandler);\r\n    this.domListeners.push(ref);\r\n\r\n    ref.internalHandler = this.util.listener(\r\n      this.$body,\r\n      ref.type,\r\n      ref.id,\r\n      ref.cb\r\n    );\r\n  }\r\n\r\n  // addListenersNextButtonSubmit(index : number, data : any, type : string){\r\n  //   let self : DomSurvey = this;\r\n  //   let btnNext = self.util.get('.act-cc-button-next')[0];\r\n  //   self.util.on('click', btnNext, this.submitQuestion(\r\n  //     index, data, type\r\n  //   ));\r\n  //\r\n  // }\r\n\r\n  // removeListenersNextButtonSubmit(index : number, data : any, type : string){\r\n  //   let self : DomSurvey = this;\r\n  //   let btnNext = self.util.get('.act-cc-button-next');\r\n  //   self.util.on('click', btnNext, this.submitQuestion(\r\n  //     index, data, type\r\n  //   ));\r\n  //   self.util.off('click', btnNext, this.submitQuestion(\r\n  //     index, data, type\r\n  //   ));\r\n  // }\r\n\r\n  submitQuestion(index: number, data: any, type: string, qId: string) {\r\n    (window as any).ccsdkDebug ? console.log(\"type\", type, \"res\", data) : \"\";\r\n    this.util.trigger(document, \"q-answered\", {\r\n      index: index,\r\n      data: data,\r\n      type: type,\r\n      questionId: qId.match(/^id/) ? qId.substring(2, qId.length) : qId\r\n    });\r\n  }\r\n}\r\n\r\nexport { DomSurvey };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/dom/DomSurvey.ts","import { DomUtilities } from './DomUtilities';\r\n\r\nclass Theme {\r\n\tutil: DomUtilities;\r\n\tbrandColorDark: string;\r\n\tbrandColorWhite: string;\r\n\tconstructor( brandColor, time ) {\r\n\t\tthis.util = new DomUtilities();\r\n\t\tthis.brandColorDark = this.util.shadeBlendConvert( -0.3, brandColor, undefined );\r\n\t\tthis.brandColorWhite = this.util.shadeBlendConvert( 0.1, brandColor, undefined );\r\n\t\tlet css: string = `\r\n\t\t.cc-sdk #progressBar{\r\n\t\t\tbackground : ${this.brandColorDark };\r\n\t\t}\r\n\t\t.cc-sdk #progress-line{ \r\n\t\t\tbackground: ${brandColor };\r\n\t\t}\r\n\t\t.cc-sdk .cc-checkbox input[type=\"checkbox\"]:checked + label:before {\r\n\t\t\tbackground:${brandColor };\r\n\t\t}\r\n\t\t.ccsdk-overlay.glass{\r\n\t\t\tbackground-color:${this.util.hexToRGB( brandColor, .5 ) };\r\n\t\t}\r\n\t\t.cc-sdk .cc-checkbox input[type=\"checkbox\"]:checked + label:after {\r\n\t\t\tborder-color: #fff;\r\n\t\t}\r\n\t\t.cc-sdk .cc-checkbox input[type=\"radio\"]:checked + label:before {\r\n\t\t\tborder-color: ${brandColor };\r\n\t\t}\r\n\t\t.cc-sdk .cc-checkbox input[type=\"radio\"]:checked + label:before {\r\n\t\t\tborder-color: ${brandColor };\r\n\t\t}\r\n\t\t.cc-sdk .cc-checkbox input[type=\"radio\"]:checked + label:after {\r\n\t\t\tbackground: ${brandColor };\r\n\t\t}\r\n\t\t.cc-sdk .cc-sdk-form-control:focus {\r\n\t\t\tborder-color: ${brandColor };\r\n\t\t}\r\n\t\t.cc-sdk .cc-message-box__btn{\r\n\t\t\tbackground: ${brandColor };\r\n\t\t\tcolor:#fff;\r\n\t\t}\r\n\t\t\t.cc-sdk .submit-icon{\r\n\t\t\t\tbackground-image: url(\"data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%2747px%27%20height%3D%2747px%27%20viewBox%3D%270%200%2047%2047%27%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%3E%3Ctitle%3EGroup%2016%3C%2Ftitle%3E%3Cdesc%3ECreated%20with%20Sketch.%3C%2Fdesc%3E%3Cdefs%3E%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%3Cfilter%20x%3D%27-18.1%25%27%20y%3D%27-12.9%25%27%20width%3D%27136.2%25%27%20height%3D%27136.2%25%27%20filterUnits%3D%27objectBoundingBox%27%20id%3D%27filter-2%27%3E%3CfeOffset%20dx%3D%270%27%20dy%3D%272%27%20in%3D%27SourceAlpha%27%20result%3D%27shadowOffsetOuter1%27%3E%3C%2FfeOffset%3E%3CfeGaussianBlur%20stdDeviation%3D%272%27%20in%3D%27shadowOffsetOuter1%27%20result%3D%27shadowBlurOuter1%27%3E%3C%2FfeGaussianBlur%3E%3CfeColorMatrix%20values%3D%270%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200.116423234%200%27%20type%3D%27matrix%27%20in%3D%27shadowBlurOuter1%27%3E%3C%2FfeColorMatrix%3E%3C%2Ffilter%3E%3C%2Fdefs%3E%3Cg%20id%3D%27Page-1%27%20stroke%3D%27none%27%20stroke-width%3D%271%27%20fill%3D%27none%27%20fill-rule%3D%27evenodd%27%3E%3Cg%20id%3D%271-copy-20%27%20transform%3D%27translate(-1246.000000%2C%20-664.000000)%27%3E%3Cg%20id%3D%27Group-16%27%20transform%3D%27translate(1250.000000%2C%20666.000000)%27%3E%3Cg%20id%3D%27Oval-4%27%3E%3Cuse%20fill%3D%27white%27%20fill-opacity%3D%271%27%20filter%3D%27url(%23filter-2)%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3Cuse%20fill%3D%27${encodeURIComponent( brandColor ) }%27%20fill-rule%3D%27evenodd%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3C%2Fg%3E%3Cg%20id%3D%27Group-5%27%20transform%3D%27translate(12.000000%2C%2011.000000)%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23FFFFFF%27%3E%3Cg%20id%3D%27fast-forward-arrows%27%20transform%3D%27translate(6.173934%2C%200.000000)%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3Cg%20id%3D%27fast-forward-arrows-copy%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\");\r\n\t\t\t}\r\n\t\t\t[dir=\"rtl\"].cc-sdk .submit-icon{\r\n\t\t\t\tbackground-image: url(\"data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%2747px%27%20height%3D%2747px%27%20viewBox%3D%270%200%2047%2047%27%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%3E%0A%20%20%20%20%3Cdesc%3ECreated%20with%20Sketch.%3C%2Fdesc%3E%0A%20%20%20%20%3Cdefs%3E%3C%2Fdefs%3E%0A%20%20%20%20%3Cg%20id%3D%27Page-1%27%20stroke%3D%27none%27%20stroke-width%3D%271%27%20fill%3D%27none%27%20fill-rule%3D%27evenodd%27%3E%0A%20%20%20%20%20%20%20%20%3Cg%20id%3D%27Submit_Icon%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27Oval-4%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27path-1-link%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23white%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27path-1-link%27%20fill%3D%27${encodeURIComponent( brandColor ) }%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27Group-5%27%20transform%3D%27translate(12.000000%2C%2011.000000)%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23ffffff%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27fast-forward-arrows%27%20transform%3D%27translate(11.173934%2C%208.500000)%20scale(-1%2C%201)%20translate(-11.173934%2C%20-8.500000)%20translate(6.173934%2C%200.000000)%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27fast-forward-arrows-copy%27%20transform%3D%27translate(5.000000%2C%208.500000)%20scale(-1%2C%201)%20translate(-5.000000%2C%20-8.500000)%20%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%3C%2Fg%3E%0A%3C%2Fsvg%3E\");\r\n\t\t\t}\r\n\t\t\t.cc-sdk .cc-question-container__required-label{\r\n\t\t\tcolor: ${brandColor };\r\n\t\t}\r\n\t\t.cc-sdk input[type=\"range\"]::-webkit-slider-runnable-track{\r\n\t\t\tbackground: ${brandColor } !important;\r\n\t\t\t   background: -moz-linear-gradient(-45deg, ${brandColor } 0%, ${ this.brandColorDark } 100%)!important;\r\n\t\t\t   background: -webkit-linear-gradient(-45deg, ${brandColor }' 0%,${ this.brandColorDark } 100%)!important;\r\n\t\t\t   background: linear-gradient(135deg, ${brandColor } 0%,${ this.brandColorDark } 100%)!important;\r\n\t\t\t   filter: progid:DXImageTransform.Microsoft.gradient( startColorstr=${brandColor }, endColorstr=${ this.brandColorDark },GradientType=1 );\r\n\t\t   }\r\n\t\t.cc-sdk input[type=\"range\"]::-moz-range-track {\r\n\t\t\tbackground: ${brandColor } !important;\r\n\t\t\tbackground: -moz-linear-gradient(-45deg, ${brandColor } 0%, ${ this.brandColorDark } 100%)!important;\r\n\t\t\tbackground: -webkit-linear-gradient(-45deg, ${brandColor } 0%, ${ this.brandColorDark } 100%)!important;\r\n\t\t\tbackground: linear-gradient(135deg, ${brandColor } 0%,${ this.brandColorDark } 100%)!important;\r\n\t\t\tfilter: progid:DXImageTransform.Microsoft.gradient( startColorstr=${brandColor }, endColorstr=${ this.brandColorDark },GradientType=1 );\r\n\t\t}\r\n\t\t   .cc-sdk input[type=\"range\"]::-webkit-slider-thumb{\r\n\t\t\tborder: 1px solid ${brandColor } ;\r\n\t\t\tbackground-color: #fff;\r\n\t\t   }\r\n\t\t   .cc-sdk input[type=\"range\"]::-moz-range-thumb {\r\n\t\t\tborder: 1px solid ${brandColor } ;\r\n\t\t\tbackground-color: #fff;\r\n\t\t   }\r\n\t\t   .cc-sdk svg.timer circle {\r\n\t\t\tanimation: countdown ${time }s linear 1 forwards;\r\n\t\t\tstroke: ${brandColor };\r\n\t\t   }\r\n\t\t   .cc-sdk input[type=range].selected::-webkit-slider-thumb {\r\n\t\t\t\tbackground-color: ${brandColor };\r\n\t\t\t}\r\n\t\t\t.cc-sdk input[type = range].selected::-moz - range - thumb {\r\n\t\t\t\tbackground-color: ${brandColor };\r\n\t\t\t}\r\n\t\t\t.cc-sdk .cc-checkbox label:hover:before{\r\n\t\t\t\tborder: solid 1px ${brandColor };\r\n\t\t\t}\r\n\t\t @media (max-width: 768px){\r\n\t \t\t\t.ccsdk-overlay.glass{\r\n\t \t\t\tbackground-color:rgba(255,255,255,.85);\r\n\t \t\t\tbackground-image:none;\r\n\t\t\t\t}\r\n\t\t\t\t.cc-sdk.cc-popup-container{\r\n\t\t\t\t\tbackground-color : transparent;\r\n\t\t\t\t}\r\n\t\t\t\t.cc-sdk.cc-popup-container .ccsdk-overlay.glass{\r\n\t\t\t\t\tbackground-color : ${this.util.hexToRGB( brandColor, .9 ) };\r\n\t\t\t\t}\r\n\t\t\t\t.cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text{\r\n\t\t\t\t\tcolor:#fff;\r\n\t\t\t\t}\r\n\t\t`;\r\n\t\tthis.util.appendStyle( css );\r\n\r\n\t}\r\n}\r\nexport { Theme }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/dom/Theme.ts","import { DomUtilities } from './DomUtilities';\r\nclass Slider {\r\n  inputRange: any;\r\n  rangeTip: any;\r\n  maxValue: number;\r\n  speed: number;\r\n  currValue: number;\r\n  rafID: any;\r\n  timeout: any;\r\n  util: any\r\n\r\n  constructor() {\r\n    this.inputRange = document.getElementsByClassName( 'cc-sdk-range' )[ 0 ];\r\n    this.rangeTip = this.inputRange.parentNode.querySelectorAll( \".act-slider-tip\" )[ 0 ];\r\n    this.util = new DomUtilities();\r\n    //  this.maxValue = 100; // the higher the smoother when dragging\r\n    this.speed = 5;\r\n\r\n\r\n    // set min/max value\r\n    // this.inputRange.min = 0;\r\n    this.inputRange.min = this.inputRange.getAttribute( 'min' );\r\n    // this.inputRange.max = this.maxValue;\r\n    this.inputRange.max = this.inputRange.getAttribute( 'max' );\r\n    this.setupListeners();\r\n  }\r\n\r\n  setupListeners() {\r\n    let self: Slider = this;\r\n\r\n    // bind events\r\n    this.inputRange.addEventListener( 'mouseup', this.clearTo, false );\r\n\r\n    // move gradient\r\n    this.inputRange.addEventListener( 'input', function () {\r\n      self.updateRangeTip();\r\n      self.util.addClass( this, 'selected' );\r\n\r\n      //Change slide thumb color on way up\r\n      if ( this.value > 20 ) {\r\n        self.inputRange.classList.add( 'ltpurple' );\r\n      }\r\n      if ( this.value > 40 ) {\r\n        self.inputRange.classList.add( 'purple' );\r\n      }\r\n      if ( this.value > 60 ) {\r\n        self.inputRange.classList.add( 'pink' );\r\n      }\r\n\r\n      //Change slide thumb color on way down\r\n      if ( this.value < 20 ) {\r\n        self.inputRange.classList.remove( 'ltpurple' );\r\n      }\r\n      if ( this.value < 40 ) {\r\n        self.inputRange.classList.remove( 'purple' );\r\n      }\r\n      if ( this.value < 60 ) {\r\n        self.inputRange.classList.remove( 'pink' );\r\n      }\r\n    } );\r\n  }\r\n\r\n\r\n\r\n  updateRangeTip() {\r\n    let self: Slider = this;\r\n    this.rangeTip.style.display = 'block';\r\n    this.rangeTip.innerHTML = this.inputRange.value;\r\n  }\r\n\r\n  clearTo() {\r\n    clearTimeout( this.timeout );\r\n  }\r\n\r\n  // listen for unlock\r\n  // unlockStartHandler() {\r\n  //   let self : any = this;\r\n  //   // clear raf if trying again\r\n  //   window.cancelAnimationFrame(this.rafID);\r\n  //   // set to desired value\r\n  //   this.currValue = +self.value;\r\n  // }\r\n\r\n  // unlockEndHandler() {\r\n  //   // store current value\r\n  //   this.currValue = + this.value;\r\n  //   // determine if we have reached success or not\r\n  //   if(this.currValue >= this.maxValue) {\r\n  //      this.successHandler();\r\n  //   }\r\n  //   else {\r\n  //      this.rafID = window.requestAnimationFrame(this.animateHandler);\r\n  //   }\r\n  // }\r\n\r\n  // handle range animation\r\n  animateHandler() {\r\n    // calculate gradient transition\r\n    var transX = this.currValue - this.maxValue;\r\n\r\n    // update input range\r\n    this.inputRange.value = this.currValue;\r\n\r\n    //Change slide thumb color on mouse up\r\n    if ( this.currValue < 20 ) {\r\n      this.inputRange.classList.remove( 'ltpurple' );\r\n    }\r\n    if ( this.currValue < 40 ) {\r\n      this.inputRange.classList.remove( 'purple' );\r\n    }\r\n    if ( this.currValue < 60 ) {\r\n      this.inputRange.classList.remove( 'pink' );\r\n    }\r\n\r\n    // determine if we need to continue\r\n    if ( this.currValue > -1 ) {\r\n      window.requestAnimationFrame( this.animateHandler );\r\n    }\r\n\r\n    // decrement value\r\n    this.currValue = this.currValue - this.speed;\r\n  }\r\n\r\n  // handle successful unlock\r\n  successHandler() {\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\nexport { Slider };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/dom/Slider.ts","//Manages trigger.\r\nimport { Cookie } from \"./helpers/Cookie\";\r\nimport { Constants } from \"./Constants\";\r\nimport { Triggers } from \"./Triggers\";\r\n//collect initial data\r\n//if on site time is null, add on site time\r\nif ( Cookie.get( Constants.CCTriggerSiteStartTime ) == null ) {\r\n  Cookie.set( Constants.CCTriggerSiteStartTime, new Date(), undefined, undefined );\r\n}\r\n//always add on page Time\r\nCookie.set( Constants.CCTriggerPageStartTime, new Date(), undefined, undefined );\r\n\r\nlet sitePageViewCount = Cookie.get( Constants.CCTriggerSitePageViewCount );\r\nif ( sitePageViewCount == null ) {\r\n  Cookie.set( Constants.CCTriggerSitePageViewCount, 1, undefined, undefined );\r\n} else {\r\n  sitePageViewCount = ( parseInt( sitePageViewCount ) + 1 ).toString();\r\n  Cookie.set( Constants.CCTriggerSitePageViewCount, sitePageViewCount, undefined, undefined );\r\n}\r\n\r\nlet individualPageViewCount = Cookie.get( Constants.CCTriggerIndividualPageViewCount );\r\nif ( individualPageViewCount == null ) {\r\n  Cookie.set( Constants.CCTriggerIndividualPageViewCount, 1, undefined, window.location.href );\r\n} else {\r\n  individualPageViewCount = ( parseInt( individualPageViewCount ) + 1 ).toString();\r\n  Cookie.set( Constants.CCTriggerIndividualPageViewCount, individualPageViewCount, undefined, window.location.href );\r\n}\r\n\r\n( window as any ).click = 0;\r\n\r\nwindow.onscroll = function ( e ) {\r\n  // called when the window is scrolled.  \r\n  let doc = document.documentElement;\r\n  let left = ( window.pageXOffset || doc.scrollLeft ) - ( doc.clientLeft || 0 );\r\n  let top = ( window.pageYOffset || doc.scrollTop ) - ( doc.clientTop || 0 );\r\n  ( window as any ).ccsdkTopOffset = top;\r\n  TriggerManager.processScrollTriggers( top );\r\n}\r\n\r\ndocument.onclick = function ( e ) {\r\n  ( window as any ).click++;\r\n}\r\n\r\n//TriggerManager adds to survey Queue\r\nclass TriggerManager {\r\n\r\n  static triggerInterval: any = null;\r\n  static triggerInstances: any = {};\r\n\r\n  constructor() {\r\n    //initialize triggers\r\n    //add those triggers which aren't completed yet.\r\n  }\r\n\r\n  static addSurvey( surveyId: any, trigger: Triggers ) {\r\n    TriggerManager.triggerInstances[ surveyId ] = trigger;\r\n    if ( Object.keys( TriggerManager.triggerInstances ).length >= 1 ) {\r\n      ( window as any ).ccsdkDebug ? console.log( TriggerManager.triggerInterval ) : '';\r\n      if ( TriggerManager.triggerInterval == null ) {\r\n        ( window as any ).ccsdkDebug ? console.log( \"TriggerHandler : Setting up Interval Trigger Handlers.\" ) : '';\r\n        TriggerManager.triggerInterval = setInterval( TriggerManager.processIntervalTriggers, 1000 );\r\n      }\r\n      //processing sequential triggers if any.\r\n      // console.log(\"TriggerHandler : Processing sequential triggers for  \" + surveyId);\r\n      // TriggerManager.processTriggersBySurveyId(surveyId);\r\n    }\r\n  }\r\n\r\n  static removeSurvey( surveyId: string ) {\r\n    delete TriggerManager.triggerInstances[ surveyId ];\r\n    if ( Object.keys( TriggerManager.triggerInstances ).length == 0 ) {\r\n      clearInterval( TriggerManager.triggerInterval );\r\n    }\r\n  }\r\n\r\n  static processIntervalTriggers() {\r\n    //if some survey is already running skip processing surveys for now?or queue it?.\r\n    Cookie.set( Constants.CCTriggerPageElapsedTime, new Date(), undefined, window.location.href );\r\n    Cookie.set( Constants.CCTriggerSiteElapsedTime, new Date(), undefined, undefined );\r\n    //set cookies and call every process Interval Triggers.\r\n    for ( let trigger in TriggerManager.triggerInstances ) {\r\n      TriggerManager.triggerInstances[ trigger ].processIntervalTriggers();\r\n      TriggerManager.triggerInstances[ trigger ].processConditionalTriggers();\r\n    }\r\n  }\r\n\r\n  static processScrollTriggers( scrollNow ) {\r\n    for ( let trigger in TriggerManager.triggerInstances ) {\r\n      //process all scroll triggers.\r\n      TriggerManager.triggerInstances[ trigger ].processScrollTriggers( scrollNow );\r\n    }\r\n  }\r\n\r\n  static disableTriggers( surveyId: string ) {\r\n    TriggerManager.triggerInstances[ surveyId ].disableTriggers();\r\n  }\r\n\r\n};\r\n\r\n\r\n\r\nexport { TriggerManager };\n\n\n// WEBPACK FOOTER //\n// ./src/TriggerManager.ts","import { Cookie } from \"./helpers/Cookie\";\r\nimport { Constants } from \"./Constants\";\r\nimport { SurveyManager } from \"./SurveyManager\";\r\nimport { TriggerUtils } from \"./helpers/TriggerUtils\";\r\nimport { CCSDKConfig } from \"./interfaces/CCSDKConfig\";\r\n\r\nclass Triggers {\r\n\r\n  ccsdk: any;\r\n  pageCountTrigger: boolean;\r\n  pageTimeTrigger: boolean;\r\n  siteCountTrigger: boolean;\r\n  siteTimeTrigger: boolean;\r\n  urlParamTrigger: boolean;\r\n  notUrlParamTrigger: boolean;\r\n  utmParamTrigger: boolean;\r\n  scrollPixelsTrigger: boolean;\r\n  minPageCount: number;\r\n  minSiteCount: number;\r\n  minPageTime: number;\r\n  minSiteTime: number;\r\n  minScrollPixels: number;\r\n  utm: string;\r\n  inUrl: RegExp;\r\n  notinUrl: RegExp;\r\n  pageCountTriggerEnabled: boolean;\r\n  siteCountTriggerEnabled: boolean;\r\n  pageTimeTriggerEnabled: boolean;\r\n  siteTimeTriggerEnabled: boolean;\r\n  urlParamTriggerEnabled: boolean;\r\n  notUrlParamTriggerEnabled: boolean;\r\n  utmParamTriggerEnabled: boolean;\r\n  scrollPixelsTriggerEnabled: boolean;\r\n\r\n  conditionalTriggers: any;\r\n\r\n  constructor( ccsdk ) {\r\n    this.ccsdk = ccsdk;\r\n    this.pageCountTrigger = false;\r\n    this.siteCountTrigger = false;\r\n    this.pageTimeTrigger = false;\r\n    this.siteTimeTrigger = false;\r\n    this.urlParamTrigger = false;\r\n    this.notUrlParamTrigger = false;\r\n    this.utmParamTrigger = false;\r\n    this.scrollPixelsTrigger = false;\r\n\r\n    //disable all triggers.\r\n    this.pageCountTriggerEnabled = false;\r\n    this.siteCountTriggerEnabled = false;\r\n    this.pageTimeTriggerEnabled = false;\r\n    this.siteTimeTriggerEnabled = false;\r\n    this.urlParamTriggerEnabled = false;\r\n    this.notUrlParamTriggerEnabled = false;\r\n    this.utmParamTriggerEnabled = false;\r\n    this.scrollPixelsTriggerEnabled = false;\r\n    this.conditionalTriggers = {};\r\n  }\r\n\r\n\r\n  enableClickTrigger( target: string, cb: any ) {\r\n    let item = document.querySelectorAll( target )[ 0 ];\r\n    if ( typeof item !== 'undefined' ) {\r\n      item.addEventListener( 'click', cb );\r\n    }\r\n  }\r\n\r\n  enablePageCountTrigger( minPageCount: number ) {\r\n    this.minPageCount = minPageCount;\r\n    this.pageCountTriggerEnabled = true;\r\n    this.TriggerPopUpByPageCount();\r\n  }\r\n\r\n  enableSiteCountTrigger( minSiteCount: number ) {\r\n    this.minSiteCount = minSiteCount;\r\n    this.pageCountTriggerEnabled = true;\r\n    this.TriggerPopUpByPageCount();\r\n  }\r\n\r\n  enablePageTimeTrigger( minPageTime: number ) {\r\n    this.minPageTime = minPageTime;\r\n    this.pageTimeTriggerEnabled = true;\r\n    this.TriggerPopUpByTimeSpentOnPage();\r\n  }\r\n\r\n  enableSiteTimeTrigger( minSiteTime: number ) {\r\n    this.minSiteTime = minSiteTime;\r\n    this.siteTimeTriggerEnabled = true;\r\n    this.TriggerPopUpByTimeSpentOnSite();\r\n  }\r\n\r\n  enablePopUpByURLPatternTrigger( urlPattern: RegExp ) {\r\n    this.inUrl = urlPattern;\r\n    this.urlParamTriggerEnabled = true;\r\n    this.TriggerPopUpByURLPattern();\r\n  }\r\n\r\n  enablePopUpByNotURLPatternTrigger( urlPattern: RegExp ) {\r\n    this.notinUrl = urlPattern;\r\n    this.notUrlParamTriggerEnabled = true;\r\n    this.TriggerPopUpByNotURLPattern();\r\n  }\r\n\r\n  enablePopUpByUTMPatternTrigger( urlPattern: string ) {\r\n    this.utm = urlPattern;\r\n    this.utmParamTriggerEnabled = true;\r\n    this.TriggerPopUpByUTMParameter();\r\n  }\r\n\r\n  enableScrollPixelsTrigger( minScrollPixels: number ) {\r\n    this.minScrollPixels = minScrollPixels;\r\n    this.scrollPixelsTriggerEnabled = true;\r\n\r\n  }\r\n\r\n  processIntervalTriggers() {\r\n    //if survey already launched\r\n    //skip processing.\r\n    if ( this.ccsdk.surveyRunning || this.ccsdk.surveyDone ) {\r\n      return;\r\n    }\r\n    this.TriggerPopUpByTimeSpentOnPage();\r\n    this.TriggerPopUpByTimeSpentOnSite();\r\n  }\r\n\r\n  setConditionalTriggers( config: CCSDKConfig ) {\r\n    ( window as any ).ccsdkDebug ? console.log( config.grepURL ) : '';\r\n    //\r\n    if ( ( typeof config.click !== 'undefined' ) && ( config.click != 0 ) ) {\r\n      this.conditionalTriggers.click = config.click;\r\n    }\r\n    if ( ( typeof config.onExitDetect !== 'undefined' ) ) {\r\n      this.conditionalTriggers.onExitDetect = config.onExitDetect;\r\n    }\r\n    // if ((typeof config.cssSelector !== 'undefined')) {\r\n    //   this.conditionalTriggers.cssSelector = config.cssSelector;\r\n    // }\r\n    if ( ( typeof config.waitSeconds !== 'undefined' ) && ( config.waitSeconds !== 0 ) ) {\r\n      this.conditionalTriggers.waitSeconds = config.waitSeconds;\r\n    }\r\n    if ( ( typeof config.scrollPercent !== 'undefined' ) && ( config.scrollPercent !== 0 ) ) {\r\n      this.conditionalTriggers.scrollPercent = config.scrollPercent;\r\n    }\r\n    if ( ( typeof config.grepInvertURL !== 'undefined' ) && ( config.grepInvertURL ) ) {\r\n      this.conditionalTriggers.grepInvertURL = config.grepInvertURL;\r\n    }\r\n    if ( ( typeof config.grepURL !== 'undefined' ) && ( config.grepURL ) ) {\r\n      this.conditionalTriggers.grepURL = config.grepURL;\r\n    }\r\n\r\n  }\r\n\r\n  processConditionalTriggers() {\r\n    //gather all conditional triggers and process them.\r\n    let self = this;\r\n    let isEnabled = true;\r\n    if ( this.ccsdk.surveyRunning || this.ccsdk.surveyDone ) {\r\n      ( window as any ).ccsdkDebug ? console.log( 'returning' ) : '';\r\n      return;\r\n    }\r\n    if ( typeof this.conditionalTriggers !== 'undefined' ) {\r\n      if ( Object.keys( this.conditionalTriggers ).length == 0 ) {\r\n        return false;\r\n      }\r\n      for ( let conditionalTrigger in this.conditionalTriggers ) {\r\n        if ( this.conditionalTriggers[ conditionalTrigger ] != null ) {\r\n          switch ( conditionalTrigger ) {\r\n            case \"onExitDetect\":\r\n              let onExitDetect = self.ccsdk.util.initListener( \"mouseout\", \"document\", function () {\r\n                ( window as any ).ccsdkDebug ? console.log( \"Mouse out\" ) : '';\r\n\r\n              } );\r\n\r\n              onExitDetect.internalHandler = self.ccsdk.util.listener( document, onExitDetect.type, onExitDetect.id, onExitDetect.cb );\r\n\r\n              break;\r\n            case \"click\":\r\n              //find click count on screen\r\n              //calculate click count\r\n              // if((window as any).click > this.conditionalTriggers.click) {\r\n              //   return SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n              // }\r\n              isEnabled = isEnabled && ( ( window as any ).click >= this.conditionalTriggers.click );\r\n              break;\r\n            case \"waitSeconds\":\r\n              let pageStartTime = new Date( Cookie.get( Constants.CCTriggerPageStartTime ) ).getTime();\r\n              let pageTime = new Date( Cookie.get( Constants.CCTriggerPageElapsedTime ) ).getTime();\r\n              isEnabled = isEnabled && TriggerUtils.checkTimeCondition( pageTime, pageStartTime, this.conditionalTriggers[ conditionalTrigger ] );\r\n              ( window as any ).ccsdkDebug ? console.log( 'waitSeconds enabled', isEnabled ) : '';\r\n              break;\r\n            case \"scrollPercent\":\r\n              //fill it with current scroll position\r\n              isEnabled = isEnabled && TriggerUtils.checkScroll( ( window as any ).ccsdkTopOffset, this.conditionalTriggers[ conditionalTrigger ] );\r\n              ( window as any ).ccsdkDebug ? console.log( 'scrollPercent enabled', isEnabled ) : '';\r\n\r\n              break;\r\n            case \"grepURL\":\r\n              isEnabled = isEnabled && TriggerUtils.checkInUrl( this.conditionalTriggers[ conditionalTrigger ] );\r\n              ( window as any ).ccsdkDebug ? console.log( 'grepURL enabled', isEnabled ) : '';\r\n              break;\r\n            case \"grepInvertURL\":\r\n              isEnabled = isEnabled && !TriggerUtils.checkInUrl( this.conditionalTriggers[ conditionalTrigger ] );\r\n              ( window as any ).ccsdkDebug ? console.log( 'grepInvertURL enabled', isEnabled ) : '';\r\n              break;\r\n          }\r\n        }\r\n      }\r\n      if ( isEnabled ) {\r\n        if ( this.ccsdk && this.ccsdk.tracking ) {\r\n          this.ccsdk.tracking.trackEvent( 'Popped Up', {\r\n            token: this.ccsdk.tracking.token,\r\n            data: {\r\n              name: null,\r\n              action: null\r\n            }\r\n          }, null, null )\r\n        }\r\n        SurveyManager.addSurvey( this.ccsdk.surveyToken );\r\n      }\r\n    } else {\r\n      //do nothing.\r\n    }\r\n  }\r\n\r\n  processNonConditionalTriggers() {\r\n    //process all non conditional one shot triggers here?\r\n  }\r\n\r\n  processScrollTriggers( scrollNow: number ) {\r\n    this.TriggerPopUpByScrollPixels( scrollNow );\r\n  }\r\n\r\n  TriggerPopUpByPageCount() {\r\n    let pageCount = parseInt( Cookie.get( Constants.CCTriggerSitePageViewCount ) );\r\n    if ( pageCount == NaN ) {\r\n      pageCount = 0;\r\n    }\r\n    //!(window as any).globalSurveyRunning && \r\n    if ( !this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.pageCountTrigger && TriggerUtils.checkPageCount( pageCount, this.minPageCount ) ) {\r\n      this.pageCountTrigger = true;\r\n      //displayQuestion\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey( this.ccsdk.surveyToken );\r\n    } else {\r\n      //already executed.\r\n      //or condition not satisified yet.\r\n    }\r\n  }\r\n\r\n\r\n  //minPageTime in seconds\r\n  TriggerPopUpByTimeSpentOnPage() {\r\n    let pageStartTime = new Date( Cookie.get( Constants.CCTriggerPageStartTime ) ).getTime();\r\n    let pageTime = new Date( Cookie.get( Constants.CCTriggerPageElapsedTime ) ).getTime();\r\n\r\n    //!(window as any).globalSurveyRunning && \r\n    if ( !this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.pageTimeTrigger && TriggerUtils.checkTimeCondition( pageTime, pageStartTime, this.minPageTime ) ) {\r\n      this.pageTimeTrigger = true;\r\n      //displayQuestion\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey( this.ccsdk.surveyToken );\r\n    } else {\r\n      //already executed.\r\n      //or condition not satisified yet.\r\n    }\r\n  }\r\n\r\n  TriggerPopUpByTimeSpentOnSite() {\r\n    let siteStartTime = new Date( Cookie.get( Constants.CCTriggerSiteStartTime ) ).getTime();\r\n    let siteTime = new Date( Cookie.get( Constants.CCTriggerSiteElapsedTime ) ).getTime();\r\n    //!(window as any).globalSurveyRunning && \r\n    if ( !this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.siteTimeTrigger && TriggerUtils.checkTimeCondition( siteTime, siteStartTime, this.minSiteTime ) ) {\r\n      this.siteTimeTrigger = true;\r\n      //displayQuestion\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey( this.ccsdk.surveyToken );\r\n    } else {\r\n      //already executed.\r\n      //or condition not satisified yet.\r\n    }\r\n  }\r\n\r\n  TriggerPopUpByInactivity() {\r\n\r\n  }\r\n\r\n  TriggerPopUpByScrollPixels( scrollNow: number ) {\r\n    //!(window as any).globalSurveyRunning && \r\n    if ( !this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.scrollPixelsTrigger && TriggerUtils.checkScroll( scrollNow, this.minScrollPixels ) ) {\r\n      this.scrollPixelsTrigger = true;\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey( this.ccsdk.surveyToken );\r\n      // this.ccsdk.initSurvey();\r\n      // SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n    } else {\r\n      //already executed?\r\n      //or condition not satisified yet.\r\n    }\r\n  }\r\n\r\n  //run only once?\r\n  TriggerPopUpByURLPattern() {\r\n    //!(window as any).globalSurveyRunning && \r\n    if ( !this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.urlParamTrigger && TriggerUtils.checkInUrl( this.inUrl ) ) {\r\n      this.urlParamTrigger = true;\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey( this.ccsdk.surveyToken );\r\n    } else {\r\n\r\n    }\r\n  }\r\n\r\n  TriggerPopUpByNotURLPattern() {\r\n    //!(window as any).globalSurveyRunning && \r\n    if ( !this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.notUrlParamTrigger && !TriggerUtils.checkInUrl( this.inUrl ) ) {\r\n      this.notUrlParamTrigger = true;\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey( this.ccsdk.surveyToken );\r\n    } else {\r\n\r\n    }\r\n  }\r\n\r\n  TriggerPopUpByUTMParameter() {\r\n    let utmP = this.utm.split( \"=\" );\r\n    let utmVal = Cookie.getParameterByName( utmP[ 0 ], undefined );\r\n    //!(window as any).globalSurveyRunning && \r\n    if ( !this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.utmParamTrigger && utmVal === utmP[ 1 ] ) {\r\n      this.utmParamTrigger = true;\r\n\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey( this.ccsdk.surveyToken );\r\n    }\r\n  }\r\n\r\n  resetTriggers() {\r\n    this.pageCountTrigger = false;\r\n    this.pageTimeTrigger = false;\r\n    this.siteTimeTrigger = false;\r\n    this.urlParamTrigger = false;\r\n    this.scrollPixelsTrigger = false;\r\n  }\r\n}\r\n\r\nexport { Triggers };\r\n\r\n\r\n// function triggerHandler(surveyHandler) {\r\n//   //survey specific Trigger Handlers\r\n//   // self.surveyRunning = self.util.get('#' + self.surveyToken  + \"-survey\").length == 1;\r\n  // Cookie.set(Constants.CCTriggerPageElapsedTime, new Date(), undefined, window.location.href);\r\n  // Cookie.set(Constants.CCTriggerSiteElapsedTime, new Date(), undefined, undefined);\r\n//   surveyHandler.triggers.TriggerPopUpByTimeSpentOnSite(surveyHandler.siteInterval);\r\n//   // surveyHandler.surveyRunning = surveyHandler.util.get('#' + self.surveyToken  + \"-survey\").length == 1;\r\n//   surveyHandler.triggers.TriggerPopUpByTimeSpentOnPage(surveyHandler.pageInterval);\r\n// }\r\n\r\n//call below functions when survey is locked and loaded.\r\n// self.triggers.TriggerPopUpByURLPattern(/xyz=33/);\r\n// self.triggers.TriggerPopUpByUTMParameter();\r\n// self.triggerInterval = setInterval(self.triggerHandler, 1000, self);\n\n\n// WEBPACK FOOTER //\n// ./src/Triggers.ts","class TriggerUtils {\r\n\r\n\r\n    public static checkInUrl(inUrl : RegExp) {\r\n        return window.location.href.match(inUrl) != null && window.location.href.match(inUrl).length > 0;\r\n    }\r\n\r\n    public static checkTimeCondition(pageTime : number, pageStartTime : number, minPageTime : number) {\r\n        return Math.round((pageTime - pageStartTime) / 1000) > minPageTime;\r\n    }\r\n\r\n    public static checkScroll(scrollNow : number, minScrollPixels : number) {\r\n        return scrollNow > minScrollPixels;\r\n    }\r\n\r\n    public static checkPageCount(pageCount : number, minPageCount : number) {\r\n        return pageCount >= minPageCount;\r\n    }\r\n}\r\n\r\nexport { TriggerUtils };\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/TriggerUtils.ts","import { RequestHelper } from './Request';\r\n\r\nexport class MatomoTracker {\r\n\r\n  public username;\r\n  public token;\r\n\r\n  trackEvent( event, payload, successCb, errorCb ) {\r\n    let url = new URL( 'https://matomo.getcloudcherry.com/piwik.php' );\r\n    // constants for project\r\n    const idsite = 4;\r\n    const rec = 1;\r\n\r\n    let searchParams = {\r\n      idsite,\r\n      rec,\r\n      action_name: event,\r\n      url: window.location.href,\r\n      action_url: window.location.href,\r\n      uid: this.username,\r\n      _cvar: { '1': [ 'Token', payload.token ] },\r\n      new_visit: event === 'Welcome Pop up Position' ? 1 : 0,\r\n      e_c: event,\r\n      e_a: payload.data.action,\r\n      e_n: payload.data.name,\r\n      rand: Math.ceil( Math.random() * 100 )\r\n    };\r\n    Object.keys( searchParams ).forEach( x => {\r\n      let param;\r\n      if ( typeof searchParams[ x ] === 'string' ) {\r\n        param = searchParams[ x ];\r\n      } else {\r\n        param = JSON.stringify( searchParams[ x ] );\r\n      }\r\n      url.searchParams.set( x, param );\r\n    } )\r\n    return RequestHelper.post( url.toString(), null, successCb, errorCb );\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/tracking.ts"],"sourceRoot":""}