{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/helpers/dom/DomUtilities.ts","webpack:///./src/Constants.ts","webpack:///./src/helpers/Cookie.ts","webpack:///./src/SurveyManager.ts","webpack:///./src/helpers/Request.ts","webpack:///./src/helpers/filters/LanguageTextFilter.ts","webpack:///./src/Config.ts","webpack:///./src/helpers/templates.ts","webpack:///./src/helpers/filters/filter-utils.ts","webpack:///./src/helpers/dom/Select.ts","webpack:///./src/helpers/filters/ConditionalFlowFilter.ts","webpack:///./src/polyfills/ccsdk.polyfill.ts","webpack:///./src/CCSDKEntry.ts","webpack:///./src/Survey.ts","webpack:///./src/SurveyHandler.ts","webpack:///./src/css/main.scss?8357","webpack:///./src/css/main.scss","webpack:///./node_modules/rtl-css-loader/lib/css-base.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./src/helpers/filters/ConditionalTextFilter.ts","webpack:///./src/helpers/dom/DomSurvey.ts","webpack:///./src/helpers/dom/Theme.ts","webpack:///./src/helpers/dom/Slider.ts","webpack:///./src/TriggerManager.ts","webpack:///./src/Triggers.ts","webpack:///./src/helpers/TriggerUtils.ts","webpack:///./src/helpers/tracking.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","templates_1","DomUtilities","selector","document","querySelectorAll","appendStyle","css","head","getElementsByTagName","style","createElement","type","styleSheet","cssText","appendChild","createTextNode","remove","el","parentNode","removeChild","removeAll","elements","Array","forEach","removeClassAll","className","_this","this","removeClass","addClassAll","addClass","classList","replace","RegExp","split","join","add","toggleClass","contains","hasClass","test","ready","fn","attachEvent","readyState","addEventListener","getParents","parentSelector","undefined","parents","push","listener","evt","sel","handler","internalHandler","event","target","Element","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","indexOf","initListener","id","cb","checkIfListenerExists","ar","_i","ar_1","length","on","off","removeEventListener","removeListener","removeAllListeners","ar_2","trigger","eventName","data","CustomEvent","detail","createEvent","initCustomEvent","dispatchEvent","removeTrigger","shadeBlendConvert","from","to","sbcRip","RGB","slice","parseFloat","parseInt","Math","round","h","b","f","toString","hexToRGB","hex","alpha","substr","map","g","arrayContains","needle","findNaN","index","item","generateSelectOptions","arr","translatedArr","isArray","res","translatedOpt","generateLanguageSelectOptions","checkOptionContainsImage","opt","generateRadioImageOptions","optHtml","templates","option_radio_image","generateRadioIgnoreImageOptions","option_radio","generateRadioOptions","generateCheckboxImageOptions","option_checkbox_image","generateCheckboxIgnoreImageOptions","option_checkbox","generateCheckboxOptions","Constants","CCTriggerPageStartTime","CCTriggerPageElapsedTime","CCTriggerSiteStartTime","CCTriggerSiteElapsedTime","CCTriggerSitePageViewCount","CCTriggerIndividualPageViewCount","SURVEY_IMPRESSION_EVENT","SURVEY_START_EVENT","SURVEY_DATA_EVENT","SURVEY_END_EVENT","SURVEY_CLOSE_EVENT","SURVEY_QUESTION_EVENT","SURVEY_ANSWER_EVENT","SURVEY_CLICK_EVENT","GRANT_TYPE","AUTHORIZATION","AUTHORIZATION_BEARER","SURVEY_CLIENT","Cookie","set","days","path","date","Date","setTime","getTime","expires","toUTCString","dir","cookie","nameEQ","ca","charAt","substring","delete","getParameterByName","url","window","location","href","results","exec","decodeURIComponent","SurveyManager","initializeSurvey","surveyId","surveyInstances","setupSurvey","console","error","addSurvey","ccsdkDebug","log","surveyQueue","processQueueInterval","setInterval","processQueueIntervalCB","removeSurvey","survey","splice","clearInterval","globalSurveyRunning","pop","setSurveyRunning","globalSurveyStartTime","unsetSurveyRunning","prefillQueue","makeRequest","method","postParams","headers","successcb","errorcb","xhr","XMLHttpRequest","open","onload","status","response","match","JSON","parse","statusText","onerror","keys","setRequestHeader","send","RequestHelper","getWithHeaders","postWithHeaders","stringify","post","LanguageTextFilter","translateQuestionText","surveyHandler","question","ccsdk","config","language","translated","text","qText","translateMessages","surveyData","translateDisplayLegend","displayLegend","translateMultiSelect","multiSelect","translatedOptions_1","x","translateMultiSelectOption","option","effectiveMultiselect","Config","API_URL","SURVEY_BY_TOKEN","SURVEY_PARTIAL_RESPONSE","CDN_URL","CDN_ASSET_URL","POST_LOGIN_TOKEN","GET_SURVEY_THROTTLE_LOGIC","POST_THROTTLING","POST_THROTTLING_ADD_ENTRIES","POST_SURVEY_FINAL","GET_CAMPAIGN","QuestionSurvey","QuestionStart","QuestionSingleline","QuestionNumber","QuestionMultiline","QuestionCheckbox","QuestionRadio","QuestionRadioImage","QuestionScale","QuestionCSATAgreement5","QuestionCSATSatisfaction5","QuestionNPS","QuestionSelect","QuestionMultiSelect","QuestionSmile","QuestionSmileInverted","QuestionStar","QuestionSlider","OptionRadioImage","OptionRadio","OptionCheckbox","OptionCheckboxImage","ThankYou","question_survey","question_start","question_text","question_number","question_scale","question_csat_agreement_5","question_csat_satisfaction_5","question_nps","question_multi_line_text","question_multi_select","question_radio","question_radio_image","question_checkbox","question_select","question_smile_5","question_date","question_smile_5_inverted","question_star_5","question_slider","thankyou","language_selector","isNumberCheck","filterQuestion","answerCheck","isAnd","groupBy","toUpperCase","isOr","doesSatisfy","answer","getAnswerForQuestionId","questionId","toLowerCase","textInput","iFoundAll","getQuestionById","questionAnswerText","_a","aAnswer","displayType","numberInput","number","questionCompare","a","sequence","checkLanguage","fOption","DomUtilities_1","LanguageTextFilter_1","Select","qId","listeners","init","util","$body","$html","select","parent","getAttribute","self","classes","template","options","innerHTML","insertAdjacentHTML","setupListeners","ref2","e","selectOptions","selectWrapper","selectionTrigger","selectedOptionText","textContent","selectedValueText","addOrRemoveFromList","setAttribute","ref","ccSelect","stopPropagation","destroyListeners","setValue","selectTrigger","translatedSelection","selectOption","removeOption","csv","domOptions","allOptions_1","listAsString","list","itemIndex","filter_utils_1","ConditionalFlowFilter","aAddedCount","aRemovedCount","getConditionalSurveyQuestions","aQuestion","conditionalFilter","iSatisfied","iFailed","_b","_c","filterquestions","aFilterByQuestion","surveyQuestions","getSurveyQuestions","removeAnswer","sort","toStr","isCallable","maxSafeInteger","toLength","pow","len","Number","isNaN","isFinite","floor","abs","toInteger","min","max","arrayLike","items","TypeError","T","mapFn","arguments","kValue","A","k","params","bubbles","cancelable","Event","find","predicate","thisArg","configurable","writable","Cookie_1","SurveyManager_1","Survey_1","localCCSDK","destroy","hide","show","prefill","prefillByTag","prefillByNote","isMobile","innerWidth","CCSDK","queue","q","args","functionName","apply","queue_1","eventCCReady","initEvent","surveyToken","trim","isActive","Survey","tracking","trackEvent","token","action","directPrefills","byTagPrefills","byNotePrefills","dom","callback","restArgs","questionTag","questionNote","SurveyHandler_1","DomSurvey_1","Constants_1","TriggerManager_1","Triggers_1","Request_1","Config_1","tracking_1","requester","isThrottled","surveyDone","surveyStatus","surveyRunning","thorttlingLogic","MatomoTracker","textDirection","triggers","Triggers","TriggerManager","SurveyHandler","brandColor","setHtmlTextDirection","setDisplayOptions","setTimeout","username","password","cssSelector","setConditionalTriggers","getSurveyThrottlingLogic","getThrottleUrl","loginData","access_token","checkThrottling","inputIds","uniqueIDQuestionIdOrTag","logics","filter","postThrottleUrl","throttleResponse","addThrottlingEntries","isOpen","addThrottleUrl","user","mobile","emailId","customId","surveySentDate","surveyOpenDate","channel","isOpened","debug","initSurvey","ccSDKElement","querySelector","ccSDKDir","direction","surveyDisplay","position","welcomePopupAnimation","surveyPosition","search","getSurveyData","fetchQuestions","skipWelcomePage","hideLoader","questions","err","preFill","event_1","initSurveyQuestions","displayWelcomeQuestion","DomSurvey","setTheme","keepAlive","onImpressionEvent","startSurvey","setCoolDownPeriod","surveyStartTime","acceptAnswers","attachSurvey","initSurveyDom","onSurveyStartEvent","restOfArgs","prefillObject","fillPrefillDirect","fillPrefill","fillPrefillByNote","filterQuestions","enableClickTrigger","count","enablePageCountTrigger","count2","enableSiteCountTrigger","enablePageTimeTrigger","enableSiteTimeTrigger","enablePopUpByURLPatternTrigger","enablePopUpByNotURLPatternTrigger","enablePopUpByUTMPatternTrigger","enableScrollPixelsTrigger","ConditionalTextFilter_1","Select_1","ConditionalFlowFilter_1","answers","surveyAnswers","_prefillsPartiallyPosted","retryPrefills","surveyPopupAnimation","domListeners","questionsToDisplay","prefillQuestions","conditionalQuestions","prefillResponses","prefillWithTags","prefillWithNote","prefillDirect","displayThankYouCb","finalPost","thankyouHtml","thankyouText","startText","startButtonText","branding","replaceInQuestionsContainer","thankyouContainer","onSurveyEndEvent","destroySurveyCb","acceptAnswersCb","postPartialAnswer","domSelectElements","setQIndex","randomNumber","String","random","surveyUrl","setupPrefill","setupSurveyContainer","cleanSurvey","displayQuestions","displayThankYou","destroySurvey","fillPrefillQuestionObject","surveyHtml","appendInBody","displayQuestionSelector","warningWelcomeText","onSurveyImpressionEvent","welcomeHtml","welcomeText","getElementById","showWelcomeContainer","welcomeQuestionDisplayTime","welcomeInterval","checkWelcomeQuestionDisplay","campaign","coolDownPeriod","now","killWelcomeQuestion","cancelKillWelcomeQuestion","displayLanguageSelector","options1","cTemplate1","concat","$questionContainer","firstChild","languageSelect","submitBtn","selectRes","removePrevListener","languageSelect2","languageQuestion","questionTags","fillPrefillQuestion","isRTL","loadFirstQuestion","getElementsByClassName","checkConditionals","compiledTemplate","compileTemplate","isPrefillQuestion","getPrefillResponseById","updatePrefillResponseById","prefillObj","postRecentPrefills","valueType","responseStored","questionText","getAnswerTypeFromDisplayType","postPrefillPartialAnswer","fullSubmission","partialResponseId","surveyPartialUrl","resp","postPrefillPartialAnswerWithRetry","complete","onSurveyAnswerEvent","responses","postSurveyFinalUrl","lastAnswer","answersAll","timeAtPost","finalData","locationId","nps","surveyClient","responseDuration","responseDateTime","_lastAnswer","questionTemplate","optMin","optMax","ConditionalTextFilter","filterText","isRequired","middleBlock","endBlock","dimension","tileColor","attributes","scaleColor","presentationMode","tileColorDark","startRange","endRange","endRangeLabel_1","startRangeLabel_1","midRangeLabel","anchorMetricName","customMetric","customMetrics","metricName","optionCategories","label","optionsLength","middleRange","categoryRange","endRange_1","displayLegend_1","mobileImageUrl","imageVisibility010","imageVisibility110","scaleVisibility","scaleImageContainer","divider","legendDimension","optionStyle","initial_1","cmwidthstart","cmwidthend","leftWidth","iterator","startRange_1","initial_2","endRange_2","color","initial_3","optionLeftExtraClass","optionMidExtraClass","optionRightExtraClass","optionMaxWidth","validationHint","characterLimit","acTemplate","multiSelect1","reverse","displayStyle","options2_1","options2_2","options3","acTemplate1","options2","invertedMultiSelect","acTemplate2","invertedMultiSelect_1","startRangeLabel","endRangeLabel","displayLegend2","startRangeLabel1","endRangeLabel1","displayLegend3","isRetired","isPrefillTags","isPrefillNote","isPrefillDirect","fillPrefillWithTags","fillPrefillWithNote","tag","innerHeight","note","apiFill","staffFill","isQuestionFilled","surveyContainer","getSurveyContainer","welcomeContainer","getWelcomeContainer","content","result","mediaQuery","alreadyImportedModules","memo","isOldIE","getElement","singletonCounter","addStylesToDom","styles","domStyle","stylesInDom","refs","j","parts","addStyle","listToStyles","newStyles","base","part","media","sourceMap","insertStyleElement","insertInto","Error","lastStyleElementInsertedAtTop","stylesInsertedAtTop","insertAt","nextSibling","insertBefore","removeStyleElement","idx","addAttrs","attrs","obj","update","transform","singleton","styleIndex","createStyleElement","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","btoa","rel","link","createLinkElement","fixUrls","unescape","encodeURIComponent","oldSrc","newObj","DEBUG","mayRemove","newList","textStore","replaceText","replacement","Boolean","cssNode","childNodes","baseUrl","protocol","host","currentDir","pathname","fullMatch","origUrl","newUrl","unquotedOrigUrl","$1","conditionalText","conditionalText_1","setName","leadingDisplayTexts","filterByQuestion","groupTitle","__assign","assign","trackSelects","trackRadios","currentQuestionListeners","qIndex","qResponse","time","theme","Theme_1","Theme","getQindex","$startBtn","onSurveyClickEvent","showLoader","nextQue","nextQuestion","prevQue","prevQuestion","closeSurvey","onSurveyCloseEvent","bodyElement","minSurvey","minimizeSurvey","$popupContainer2","$popupContainer","resumeText","resumeButtonText","updateProgress","currentQuestionId","width","loadQuestionSpecifics","leftIcon","onSurveyQuestionEvent","span","validationSpan","validationRegex","regex","submitQuestion","nextQ","rightIcon","nextIcon","$loader","html","appendInQuestionsContainer","startContainer","showLanguageSelector","qType","setupListenersQuestionScale","setupListenersQuestionNPS","setupListenersQuestionMultiline","setupListenersQuestionSelect","setupListenersQuestionRadio","setupListenersQuestionRadioImage","setupListenersQuestionCheckbox","setupListenersQuestionStar","setupListenersQuestionSmile","setupListenersQuestionCsat","setupListenersQuestionSlider","setupListenersQuestionSingleline","setupListenersQuestionNumber","setupListenersForDate","selectedRating","selectedRating1","previousValue","previousSelection","allOptions","rating","previousValues_1","previousValues","checked","child","previousSibling","multilineRes","singlelineRes","model","dateQuestion","children","month","year","numberRes","sliderRes","sliderInput","Slider_1","Slider","inputRange","rangeTip","speed","clearTo","updateRangeTip","display","clearTimeout","timeout","animateHandler","currValue","maxValue","requestAnimationFrame","sitePageViewCount","lastIndexOf","individualPageViewCount","click","onscroll","doc","documentElement","top","pageXOffset","scrollLeft","clientLeft","pageYOffset","scrollTop","clientTop","ccsdkTopOffset","processScrollTriggers","onclick","triggerInstances","triggerInterval","processIntervalTriggers","processConditionalTriggers","scrollNow","pageCountTrigger","siteCountTrigger","pageTimeTrigger","siteTimeTrigger","urlParamTrigger","notUrlParamTrigger","utmParamTrigger","scrollPixelsTrigger","pageCountTriggerEnabled","siteCountTriggerEnabled","pageTimeTriggerEnabled","siteTimeTriggerEnabled","urlParamTriggerEnabled","notUrlParamTriggerEnabled","utmParamTriggerEnabled","scrollPixelsTriggerEnabled","conditionalTriggers","minPageCount","TriggerPopUpByPageCount","minSiteCount","minPageTime","TriggerPopUpByTimeSpentOnPage","minSiteTime","TriggerPopUpByTimeSpentOnSite","urlPattern","inUrl","TriggerPopUpByURLPattern","notinUrl","TriggerPopUpByNotURLPattern","utm","TriggerPopUpByUTMParameter","minScrollPixels","grepURL","onExitDetect","waitSeconds","scrollPercent","grepInvertURL","conditionalTrigger","isEnabled","pageStartTime","pageTime","TriggerUtils_1","TriggerUtils","checkTimeCondition","checkScroll","checkInUrl","processNonConditionalTriggers","TriggerPopUpByScrollPixels","pageCount","NaN","checkPageCount","siteStartTime","siteTime","TriggerPopUpByInactivity","utmP","utmVal","payload","successCb","errorCb","searchParams","idsite","rec","action_name","action_url","uid","1","rand","ceil","param"],"mappings":"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","file":"cc.en.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n","import { templates } from '../templates';\r\nimport { Config } from '../../Config';\r\n\r\nclass DomUtilities {\r\n\r\n  sbcRip: any;\r\n\r\n  constructor() {\r\n    // HTMLElement.prototype.matches = HTMLElement.prototype.matches ||\r\n    // HTMLElement.prototype.matchesSelector ||\r\n    // HTMLElement.prototype.webkitMatchesSelector ||\r\n    // HTMLElement.prototype.mozMatchesSelector ||\r\n    // HTMLElement.prototype.msMatchesSelector ||\r\n    // HTMLElement.prototype.oMatchesSelector;\r\n  }\r\n\r\n  get(selector: string) {\r\n    return document.querySelectorAll(selector);\r\n  }\r\n\r\n  appendStyle(css: string): void {\r\n    let head: any = document.head || document.getElementsByTagName('head')[0];\r\n    let style: any = document.createElement('style');\r\n    style.type = 'text/css';\r\n    if (style.styleSheet) {\r\n      style.styleSheet.cssText = css;\r\n    } else {\r\n      style.appendChild(document.createTextNode(css));\r\n    }\r\n    head.appendChild(style);\r\n  }\r\n\r\n  remove(el: any) {\r\n    el.parentNode.removeChild(el);\r\n  }\r\n\r\n  removeAll(elements: any): void {\r\n    Array.prototype.forEach.call(elements, (el, i) => {\r\n      el.parentNode.removeChild(el);\r\n    });\r\n  }\r\n\r\n  css(elements: any, property: string, value: any) {\r\n    Array.prototype.forEach.call(elements, (el, i) => {\r\n      el.style[property] = value;\r\n    });\r\n  }\r\n\r\n  removeClassAll(elements: any, className: string): void {\r\n    Array.prototype.forEach.call(elements, (el, i) => {\r\n      this.removeClass(el, className);\r\n    });\r\n  }\r\n\r\n  addClassAll(elements: any, className: string): void {\r\n    Array.prototype.forEach.call(elements, (el, i) => {\r\n      this.addClass(el, className);\r\n    });\r\n  }\r\n\r\n  removeClass(el: any, className: string): void {\r\n    // console.log(el);\r\n    if (!el) {\r\n      return;\r\n    }\r\n    if (el.classList)\r\n      el.classList.remove(className);\r\n    else\r\n      el.className = el.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\r\n  }\r\n  addClass(el: any, className: string) {\r\n    if (!el) {\r\n      return;\r\n    }\r\n    if (el.classList)\r\n      el.classList.add(className);\r\n    else\r\n      el.className += ' ' + className;\r\n  }\r\n  toggleClass(el: any, className: string): void {\r\n    if (el.classList) {\r\n      if (el.classList.contains(className))\r\n        el.classList.remove(className);\r\n      else\r\n        el.classList.add(className);\r\n    }\r\n\r\n\r\n  }\r\n  hasClass(el: any, className: string) {\r\n    if (el.classList)\r\n      return el.classList.contains(className);\r\n    else\r\n      return new RegExp('(^| )' + className + '( |$)', 'gi').test(el.className);\r\n  }\r\n  ready(fn: any): void {\r\n    if ((<any>document).attachEvent ? document.readyState === \"complete\" : document.readyState !== \"loading\") {\r\n      fn();\r\n    } else {\r\n      document.addEventListener('DOMContentLoaded', fn);\r\n    }\r\n  }\r\n\r\n  getParents(el: any, parentSelector: any): any {\r\n    // If no parentSelector defined will bubble up all the way to *document*\r\n    if (parentSelector === undefined) {\r\n      parentSelector = document;\r\n    }\r\n\r\n    var parents = [];\r\n    var p = el.parentNode;\r\n\r\n    while (p !== parentSelector) {\r\n      var o = p;\r\n      parents.push(o);\r\n      p = o.parentNode;\r\n    }\r\n    parents.push(parentSelector); // Push that parentSelector you wanted to stop at\r\n\r\n    return parents;\r\n  }\r\n\r\n  listener(el: any, evt: any, sel: any, handler: any): any {\r\n    let selectorMatches = function (el, selector) {\r\n      var p = Element.prototype;\r\n      var f = p.matches || p.webkitMatchesSelector || (<any>p).mozMatchesSelector || (<any>p).msMatchesSelector || function (s) {\r\n        return [].indexOf.call(document.querySelectorAll(s), this) !== -1;\r\n      };\r\n      return f.call(el, selector);\r\n    }\r\n    let internalHandler = function (event) {\r\n      var t = event.target;\r\n      while (t && t !== this) {\r\n        if (selectorMatches(t, sel)) {\r\n          handler.call(t, event);\r\n        }\r\n        t = t.parentNode;\r\n      }\r\n    };\r\n    el.addEventListener(evt, internalHandler);\r\n    return internalHandler;\r\n  }\r\n\r\n\r\n\r\n\r\n  initListener(type: string, id: string, cb: any) {\r\n    let ref: any = {\r\n      id: id,\r\n      type: type,\r\n      cb: cb,\r\n      internalHandler: undefined,\r\n    };\r\n    return ref;\r\n  }\r\n\r\n  checkIfListenerExists(id: string, ar: any): boolean {\r\n    for (let listener of ar) {\r\n      if (listener.id == id) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  on(evt: any, el: any, handler: any) {\r\n    el.addEventListener(evt, handler);\r\n  }\r\n  off(evt: any, el: any, handler: any) {\r\n    el.removeEventListener(evt, handler);\r\n  }\r\n  removeListener(el: any, evt: any, handler: any) {\r\n    el.removeEventListener(evt, handler);\r\n  }\r\n  removeAllListeners(ar: any): boolean {\r\n    for (let listener of ar) {\r\n      this.removeListener(document.querySelectorAll(\"body\")[0], listener.type, listener.internalHandler);\r\n    }\r\n    return true;\r\n  }\r\n\r\n  trigger(el: any, eventName: string, data: Object) {\r\n    if (typeof CustomEvent === 'function') {\r\n      var event = <any>new CustomEvent(eventName, { detail: data });\r\n    } else {\r\n      var event = <any>document.createEvent('CustomEvent');\r\n      event.initCustomEvent(eventName, true, true, data);\r\n    }\r\n\r\n    el.dispatchEvent(event);\r\n  }\r\n\r\n  removeTrigger(el: any, eventName: string) {\r\n    el.removeEventListener(eventName);\r\n  }\r\n\r\n  shadeBlendConvert(p: number, from: any, to: string): string {\r\n    if (typeof (p) != \"number\" || p < -1 || p > 1 || typeof (from) != \"string\" || (from[0] != 'r' && from[0] != '#') || (typeof (to) != \"string\" && typeof (to) != \"undefined\")) return null; //ErrorCheck\r\n    if (!this.sbcRip) this.sbcRip = function (d) {\r\n      var l = d.length, RGB = new Object();\r\n      if (l > 9) {\r\n        d = d.split(\",\");\r\n        if (d.length < 3 || d.length > 4) return null;//ErrorCheck\r\n        RGB[0] = i(d[0].slice(4)), RGB[1] = i(d[1]), RGB[2] = i(d[2]), RGB[3] = d[3] ? parseFloat(d[3]) : -1;\r\n      } else {\r\n        if (l == 8 || l == 6 || l < 4) return null; //ErrorCheck\r\n        if (l < 6) d = \"#\" + d[1] + d[1] + d[2] + d[2] + d[3] + d[3] + (l > 4 ? d[4] + \"\" + d[4] : \"\"); //3 digit\r\n        d = i(d.slice(1), 16), RGB[0] = d >> 16 & 255, RGB[1] = d >> 8 & 255, RGB[2] = d & 255, RGB[3] = l == 9 || l == 5 ? r(((d >> 24 & 255) / 255) * 10000) / 10000 : -1;\r\n      }\r\n      return RGB;\r\n    }\r\n    var i = parseInt, r = Math.round, h = from.length > 9, h = typeof (to) == \"string\" ? to.length > 9 ? true : to == \"c\" ? !h : false : h, b = p < 0, p = b ? p * -1 : p, to = to && to != \"c\" ? to : b ? \"#000000\" : \"#FFFFFF\", f = this.sbcRip(from), t = this.sbcRip(to);\r\n    if (!f || !t) return null; //ErrorCheck\r\n    if (h) return \"rgb(\" + r((t[0] - f[0]) * p + f[0]) + \",\" + r((t[1] - f[1]) * p + f[1]) + \",\" + r((t[2] - f[2]) * p + f[2]) + (f[3] < 0 && t[3] < 0 ? \")\" : \",\" + (f[3] > -1 && t[3] > -1 ? r(((t[3] - f[3]) * p + f[3]) * 10000) / 10000 : t[3] < 0 ? f[3] : t[3]) + \")\");\r\n    else return \"#\" + (0x100000000 + (f[3] > -1 && t[3] > -1 ? r(((t[3] - f[3]) * p + f[3]) * 255) : t[3] > -1 ? r(t[3] * 255) : f[3] > -1 ? r(f[3] * 255) : 255) * 0x1000000 + r((t[0] - f[0]) * p + f[0]) * 0x10000 + r((t[1] - f[1]) * p + f[1]) * 0x100 + r((t[2] - f[2]) * p + f[2])).toString(16).slice(f[3] > -1 || t[3] > -1 ? 1 : 3);\r\n  }\r\n\r\n  hexToRGB(hex: string, alpha: any): string {\r\n    if (!hex || [4, 7].indexOf(hex.length) === -1) {\r\n      return; // throw new Error('Bad Hex');\r\n    }\r\n\r\n    hex = hex.substr(1);\r\n    // if shortcuts (#F00) -> set to normal (#FF0000)\r\n    if (hex.length === 3) {\r\n      hex = hex.split('').map(function (el) {\r\n        return el + el + '';\r\n      }).join('');\r\n    }\r\n\r\n    var r = parseInt(hex.slice(0, 2), 16),\r\n      g = parseInt(hex.slice(2, 4), 16),\r\n      b = parseInt(hex.slice(4, 6), 16);\r\n\r\n    if (alpha) {\r\n      return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha + \")\";\r\n    } else {\r\n      return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\r\n    }\r\n  }\r\n\r\n\r\n  arrayContains(needle) {\r\n    // Per spec, the way to identify NaN is that it is not equal to itself\r\n    var findNaN = needle !== needle;\r\n    var indexOf;\r\n\r\n    if (!findNaN && typeof Array.prototype.indexOf === 'function') {\r\n      indexOf = Array.prototype.indexOf;\r\n    } else {\r\n      indexOf = function (needle) {\r\n        var i = -1, index = -1;\r\n\r\n        for (i = 0; i < this.length; i++) {\r\n          var item = this[i];\r\n\r\n          if ((findNaN && item !== item) || item === needle) {\r\n            index = i;\r\n            break;\r\n          }\r\n        }\r\n\r\n        return index;\r\n      };\r\n    }\r\n\r\n    return indexOf.call(this, needle) > -1;\r\n  }\r\n\r\n  generateSelectOptions(arr: string[], translatedArr: string[]) {\r\n    if (Array.isArray(arr)) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for (i = 0; i < arr.length; i++) {\r\n        let translatedOpt = (translatedArr[i] || arr[i]).split(';');\r\n        let arrOpt = arr[i].split(';');\r\n        res += '<option value=\"' + arrOpt[0] + '\">' + (translatedOpt[0]) + '</option>';\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n  generateLanguageSelectOptions(arr: any) {\r\n    if (Array.isArray(arr)) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for (i = 0; i < arr.length; i++) {\r\n        if (arr[i] == 'default') {\r\n          res += '<option value=\"' + arr[i] + '\">English (Default)</option>';\r\n        } else {\r\n          res += '<option value=\"' + arr[i] + '\">' + arr[i] + '</option>';\r\n        }\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n  checkOptionContainsImage(arr: any) {\r\n    if (Array.isArray(arr)) {\r\n      let i: number = 0;\r\n      let res: boolean = true;\r\n      for (i = 0; i < arr.length; i++) {\r\n        let opt: any = arr[i];\r\n        res = res && (opt.indexOf(';') !== -1) && (opt.indexOf('.') !== -1);\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n\r\n  generateRadioImageOptions(arr: string[], translatedArr: string[], id: string) {\r\n    if (Array.isArray(arr)) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for (i = 0; i < arr.length; i++) {\r\n        let optHtml: string = templates.option_radio_image;\r\n        let opt: any = arr[i].split(';')\r\n        let translatedOpt = translatedArr[i].split(';')\r\n        //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n        //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n        optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[1]);\r\n        optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\r\n        optHtml = optHtml.replace(/{{label}}/g, translatedOpt[0]);\r\n        optHtml = optHtml.replace(/{{labelFor}}/g, translatedOpt[0].replace(/\\s+/g, '-'));\r\n        optHtml = optHtml.replace(/{{value}}/g, opt[0]);\r\n        res += optHtml;\r\n\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n  generateRadioIgnoreImageOptions(arr: string[], translatedArr: string[], id: string) {\r\n    if (Array.isArray(arr)) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for (i = 0; i < arr.length; i++) {\r\n        let optHtml: string = templates.option_radio;\r\n        let opt: any = arr[i].split(';');\r\n        let translatedOpt = translatedArr[i].split(';');\r\n        //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n        //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n        optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\r\n        optHtml = optHtml.replace(/{{label}}/g, translatedOpt[0]);\r\n        optHtml = optHtml.replace(/{{labelFor}}/g, translatedOpt[0].replace(/\\s+/g, '-'));\r\n        optHtml = optHtml.replace(/{{value}}/g, opt[0]);\r\n        res += optHtml;\r\n\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n\r\n\r\n  generateRadioOptions(arr: string, translatedArr: string[], id: string) {\r\n    if (Array.isArray(arr)) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for (i = 0; i < arr.length; i++) {\r\n        let optHtml: string = templates.option_radio;\r\n        let opt: any = arr[i].split(';');\r\n        // normal radio\r\n        let translatedOpt = translatedArr[i].split(';');\r\n        optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\r\n        optHtml = optHtml.replace(/{{label}}/g, translatedOpt[0]);\r\n        optHtml = optHtml.replace(/{{labelFor}}/g, translatedOpt[0].replace(/\\s+/g, '-'));\r\n        optHtml = optHtml.replace(/{{value}}/g, opt[0]);\r\n        res += optHtml;\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n  generateCheckboxImageOptions(arr: string[], translatedArr: string[], id: string) {\r\n    if (Array.isArray(arr)) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for (i = 0; i < arr.length; i++) {\r\n        let optHtml: string = templates.option_checkbox_image;\r\n        let opt: any = arr[i].split(';');\r\n        let translatedOpt = translatedArr[i].split(';');\r\n        //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n        //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n        optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[1]);\r\n        optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\r\n        optHtml = optHtml.replace(/{{label}}/g, translatedOpt[0]);\r\n        optHtml = optHtml.replace(/{{labelFor}}/g, translatedOpt[0].replace(/\\s+/g, '-'));\r\n        optHtml = optHtml.replace(/{{value}}/g, opt[0]);\r\n        res += optHtml;\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n\r\n  generateCheckboxIgnoreImageOptions(arr: string[], translatedArr: string[], id: string) {\r\n    if (Array.isArray(arr)) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for (i = 0; i < arr.length; i++) {\r\n        let optHtml: string = templates.option_checkbox;\r\n        let opt: any = arr[i].split(';');\r\n        let translatedOpt = translatedArr[i].split(';');\r\n\r\n        //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n        //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n        optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\r\n        optHtml = optHtml.replace(/{{label}}/g, translatedOpt[0]);\r\n        optHtml = optHtml.replace(/{{labelFor}}/g, translatedOpt[0].replace(/\\s+/g, '-'));\r\n        optHtml = optHtml.replace(/{{value}}/g, opt[0]);\r\n        res += optHtml;\r\n\r\n      }\r\n      return res;\r\n    }\r\n  }\r\n\r\n  generateCheckboxOptions(arr: string[], translatedArr: string[], id: string) {\r\n    if (Array.isArray(arr)) {\r\n      let i: number = 0;\r\n      let res: string = '';\r\n      for (i = 0; i < arr.length; i++) {\r\n        let optHtml: string = templates.option_checkbox;\r\n        let opt: any = arr[i].split(';');\r\n        let translatedOpt = translatedArr[i].split(';');\r\n        optHtml = optHtml.replace(/{{label}}/g, translatedOpt[0]);\r\n        optHtml = optHtml.replace(/{{labelFor}}/g, translatedOpt[0].replace(/\\s+/g, '-'));\r\n        optHtml = optHtml.replace(/{{value}}/g, opt[0]);\r\n\r\n        res += optHtml;\r\n\r\n      }\r\n      // console.log( res );\r\n      return res;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n//add Math.round\r\n\r\n\r\nexport { DomUtilities };\r\n","class Constants {\r\n  static CCTriggerPageStartTime = \"cc-trigger-page-start-time\";\r\n  static CCTriggerPageElapsedTime = \"cc-trigger-page-elapsed-time\";\r\n  static CCTriggerSiteStartTime = \"cc-trigger-site-start-time\";\r\n  static CCTriggerSiteElapsedTime = \"cc-trigger-site-elapsed-time\";\r\n  static CCTriggerSitePageViewCount = \"cc-trigger-site-page-count\";\r\n  static CCTriggerIndividualPageViewCount = \"cc-trigger-individual-page-count\";\r\n  static SURVEY_IMPRESSION_EVENT = \"onImpression\";\r\n  static SURVEY_START_EVENT = \"onStart\";\r\n  static SURVEY_DATA_EVENT = \"onData\";\r\n  static SURVEY_END_EVENT = \"onEnd\";\r\n  static SURVEY_CLOSE_EVENT = \"onClose\";\r\n  static SURVEY_QUESTION_EVENT = \"onQuestion\";\r\n  static SURVEY_ANSWER_EVENT = \"onAnswer\";\r\n  static SURVEY_CLICK_EVENT = \"onClick\";\r\n  static GRANT_TYPE = \"password\";\r\n  static AUTHORIZATION = \"Authorization\";\r\n  static AUTHORIZATION_BEARER = \"Bearer\";\r\n  static SURVEY_CLIENT = \"JS-MicroWeb\";\r\n}\r\n\r\nexport { Constants };","class Cookie {\r\n    /**\r\n     * Set/Overwrite a cookie value\r\n     *\r\n     * @param name\r\n     * @param value\r\n     * @param days      OPTIONAL Days till this cookie will stay valid. Default is current session\r\n     * @param path      OPTIONAL domain root will be used by default\r\n     */\r\n    static set(name : any, value : any, days : any, path : any) {\r\n      if (days) {\r\n          var date = new Date();\r\n              date.setTime(date.getTime()+(days*24*60*60*1000));\r\n          var expires = \"; expires=\"+date.toUTCString();\r\n      } else var expires = \"\";\r\n\r\n      var dir = path || '/';\r\n      document.cookie = name+\"=\"+value+expires+\"; path=\"+dir;\r\n  }\r\n\r\n  /**\r\n   * Retrieve a cookie value\r\n   *\r\n   * @param name\r\n   * @return String|null\r\n   */\r\n  static get(name) {\r\n      var nameEQ = name + \"=\";\r\n      var ca = document.cookie.split(';');\r\n      for(var i=0;i < ca.length;i++) {\r\n          var c = ca[i];\r\n          while (c.charAt(0)==' ') c = c.substring(1,c.length);\r\n          if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);\r\n      }\r\n      return null;\r\n  }\r\n\r\n  /**\r\n   * Remove a cookie\r\n   *\r\n   * @param name\r\n   */\r\n  static delete(name) {\r\n    Cookie.set(name,\"\",-1, undefined);\r\n  }\r\n\r\n  static getParameterByName(name : string, url : any) {\r\n    if (!url) url = window.location.href;\r\n    name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\r\n    var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\r\n        results = regex.exec(url);\r\n    if (!results) return null;\r\n    if (!results[2]) return '';\r\n    return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\r\n  }\r\n}\r\n\r\nexport { Cookie };\r\n","\r\n//Survey Manager manages and queues survey.\r\n\r\nclass SurveyManager {\r\n\r\n  static surveyQueue: any = [];\r\n  static processQueueInterval: any = null;\r\n  static prefillQueue: any = {};\r\n  static surveyInstances: any = {};\r\n\r\n  static initializeSurvey(surveyId: string) {\r\n    //check if survey ran?\r\n    //do survey initialization.\r\n    if (!SurveyManager.surveyInstances || !SurveyManager.surveyInstances[surveyId]) {\r\n      console.error('Microsurvey not properly set up. Contact Support.');\r\n      return;\r\n    }\r\n\r\n    SurveyManager.surveyInstances[surveyId].setupSurvey();\r\n  }\r\n\r\n  static addSurvey(surveyId) {\r\n    (window as any).ccsdkDebug ? console.log(\"Adding survey ID : \" + surveyId) : '';\r\n    if (SurveyManager.surveyQueue.indexOf(surveyId) === -1) {\r\n      SurveyManager.surveyQueue.push(surveyId);\r\n    }\r\n    if (SurveyManager.processQueueInterval == null) {\r\n      SurveyManager.processQueueInterval = setInterval(SurveyManager.processQueueIntervalCB, 100);\r\n    }\r\n  }\r\n\r\n  static removeSurvey(surveyId) {\r\n    if (SurveyManager.surveyQueue.length > 0) {\r\n      for (let survey in SurveyManager.surveyQueue) {\r\n        if (SurveyManager.surveyQueue[survey].surveyId == surveyId) {\r\n          SurveyManager.surveyQueue.splice(survey, 1);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    if (SurveyManager.surveyQueue.length == 0) {\r\n      clearInterval(SurveyManager.processQueueInterval);\r\n    }\r\n  }\r\n\r\n  static processQueueIntervalCB() {\r\n    if ((window as any).globalSurveyRunning == true) {\r\n      return;\r\n    } else {\r\n      let surveyId = SurveyManager.surveyQueue.pop();\r\n      (window as any).ccsdkDebug ? console.log(\"Processing survey ID \" + surveyId) : '';\r\n      if (surveyId == undefined) {\r\n        clearInterval(SurveyManager.processQueueInterval);\r\n        SurveyManager.processQueueInterval = null;\r\n      } else {\r\n        (window as any).globalSurveyRunning = true;\r\n        SurveyManager.initializeSurvey(surveyId);\r\n      }\r\n    }\r\n  }\r\n\r\n  public static setSurveyRunning() {\r\n    (window as any).globalSurveyRunning = true;\r\n    (window as any).globalSurveyStartTime = new Date();\r\n  }\r\n\r\n  public static unsetSurveyRunning() {\r\n    (window as any).globalSurveyRunning = false;\r\n  }\r\n}\r\n\r\nexport { SurveyManager };","// import 'whatwg-fetch';\r\n\r\nfunction makeRequest( method: string, url: string, postParams: string, headers: any, successcb: any, errorcb: any ): any {\r\n  var xhr = new XMLHttpRequest();\r\n  xhr.open( method, url );\r\n  xhr.onload = function () {\r\n    if ( ( this as any ).status >= 200 && ( this as any ).status < 300 ) {\r\n      if ( xhr.response ) {\r\n      }\r\n      let res: any = xhr.response && typeof xhr.response === 'string' && !xhr.response.match( 'GIF' ) ? JSON.parse( xhr.response ) : '';\r\n      if ( successcb ) successcb( res );\r\n    } else {\r\n      if ( errorcb ) {\r\n        errorcb( {\r\n          status: ( this as any ).status,\r\n          statusText: xhr.statusText\r\n        } );\r\n      }\r\n    }\r\n  };\r\n  xhr.onerror = function () {\r\n    if ( errorcb ) {\r\n      errorcb( {\r\n        status: ( this as any ).status,\r\n        statusText: xhr.statusText\r\n      } );\r\n    }\r\n  };\r\n  if ( headers ) {\r\n    Object.keys( headers ).forEach( function ( key ) {\r\n      xhr.setRequestHeader( key, headers[ key ] );\r\n    } );\r\n  }\r\n  // var params : any = postParams;\r\n  // We'll need to stringify if we've been given an object\r\n  // If we have a string, this is skipped.\r\n  // if (params && typeof params === 'object') {\r\n  //   params = Object.keys(params).map(function (key) {\r\n  //     return encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\r\n  //   }).join('&');\r\n  // }\r\n  xhr.send( postParams );\r\n}\r\n\r\nclass RequestHelper {\r\n\r\n  static getWithHeaders( url: string, headers: any, successcb: any, errorcb: any ) {\r\n    return makeRequest( \"GET\", url, null, headers, successcb, errorcb );\r\n  }\r\n\r\n  static postWithHeaders( url: string, data: Object, headers: any, successcb: any, errorcb: any ) {\r\n    headers[ \"Content-Type\" ] = \"application/json;charset=utf-8\";\r\n    return makeRequest( \"POST\", url, JSON.stringify( data ), headers, successcb, errorcb );\r\n\r\n  }\r\n\r\n  static get( url: string, successcb: any, errorcb: any ) {\r\n    return makeRequest( \"GET\", url, null, null, successcb, errorcb );\r\n    // let request : Request = new Request( (url as any) , new Object());\r\n    // return fetch(request).then( (response : Response) => {\r\n    //   if (response.status >= 200 && response.status < 300) {\r\n    //     return Promise.resolve(response);\r\n    //   } else {\r\n    //     var error = new Error(response.statusText);\r\n    //     // error.response = response;\r\n    //     throw error;\r\n    //   }\r\n    // }).then( (response : Response) => {\r\n    //   return response.json();\r\n    // }).catch( (error : Error) => {\r\n    //   (window as any).ccsdkDebug?console.log('Request failed ', error):'';\r\n    // });\r\n  }\r\n\r\n  /**\r\n   *\r\n   * var data = new FormData()\r\n   *  data.append('file', input.files[0])\r\n   *  data.append('user', 'hubot')\r\n   *\r\n   * @static\r\n   * @param {any} url\r\n   * @param {any} data\r\n   * @memberof Request\r\n   */\r\n  static post( url: string, data: Object, successcb: any, errorcb: any ) {\r\n    //consider, file upload?\r\n    // (window as any).ccsdkDebug?console.log(\"[\" + JSON.stringify(data) + \"]\"):'';\r\n    ( window as any ).ccsdkDebug ? console.log( \"Sending : \" + data ) : '';\r\n    return makeRequest( \"POST\", url, JSON.stringify( data ), {}, successcb, errorcb );\r\n    // let request : Request = new Request( (url as any), {\r\n    //   method : \"POST\",\r\n    //   headers : {\r\n    //     \"Content-Type\" : \"application/json; charset=utf-8\"\r\n    //   },\r\n    //   body : JSON.stringify(data)\r\n    // });\r\n    // return fetch(request).then( (response : Response) => {\r\n    //   if (response.status >= 200 && response.status < 300) {\r\n    //     return Promise.resolve(response);\r\n    //   } else {\r\n    //     let error : Error = new Error(response.statusText);\r\n    //     // error.response = response;\r\n    //     throw error;\r\n    //   }\r\n    // }).then( (response : Response) => {\r\n    //   return response.json();\r\n    // }).catch( (error : Error) => {\r\n    //   (window as any).ccsdkDebug?console.log('Request failed ', error):'';\r\n    // });\r\n  }\r\n\r\n}\r\n\r\nexport { RequestHelper };\r\n","class LanguageTextFilter {\r\n\r\n    public static translateQuestionText( surveyHandler: any, question: any ) {\r\n        if ( surveyHandler.ccsdk.config.language.indexOf( 'Default' ) === -1 ) {\r\n            if ( question.translated != null &&\r\n                typeof question.translated[ surveyHandler.ccsdk.config.language ] !== 'undefined' ) {\r\n                if ( question.translated[ surveyHandler.ccsdk.config.language ].text ) {\r\n                    let qText = question.translated[ surveyHandler.ccsdk.config.language ].text.split( ':' );\r\n                    if ( question.translated[ surveyHandler.ccsdk.config.language ].text.indexOf( \":\" ) !== -1 ) {\r\n                        qText = qText[ 0 ] + ': <br><span class=\"text-normal\">' + qText[ 1 ] + '</span>';\r\n                    }\r\n                    return qText;\r\n                }\r\n                // else if ( question.translated[ surveyHandler.ccsdk.config.language ].text ) {\r\n                //     return question.translated[ surveyHandler.ccsdk.config.language ].text;\r\n                // }\r\n                // return question.translated[surveyHandler.ccsdk.config.language].text;\r\n            }\r\n        }\r\n        if ( question.text ) {\r\n            let qText = question.text.split( ':' );\r\n            if ( question.text.indexOf( \":\" ) !== -1 ) {\r\n                qText = qText[ 0 ] + ': <br><span class=\"text-normal\">' + qText[ 1 ] + '</span>';\r\n            }\r\n            return qText;\r\n        } else {\r\n            return question.text == null ? '' : question.text;\r\n        }\r\n    }\r\n\r\n    public static translateMessages( surveyHandler: any, type: string ) {\r\n        if ( surveyHandler.surveyData.translated != null && typeof surveyHandler.surveyData.translated[ surveyHandler.ccsdk.config.language ] !== 'undefined' ) {\r\n            if ( surveyHandler.ccsdk.config.language.indexOf( 'Default' ) === -1 ) {\r\n                if ( surveyHandler.surveyData.translated[ surveyHandler.ccsdk.config.language ] !== 'undefined' ) {\r\n                    if ( surveyHandler.surveyData.translated[ surveyHandler.ccsdk.config.language ][ type ] != null ) {\r\n                        return surveyHandler.surveyData.translated[ surveyHandler.ccsdk.config.language ][ type ];\r\n                    } else {\r\n                        return surveyHandler.surveyData[ type ];\r\n                    }\r\n                } else {\r\n                    return surveyHandler.surveyData[ type ];\r\n                }\r\n            } else {\r\n                return surveyHandler.surveyData[ type ];\r\n            }\r\n        }\r\n    }\r\n\r\n    public static translateDisplayLegend( surveyHandler: any, question: any ) {\r\n        if ( surveyHandler.ccsdk.config.language.indexOf( 'Default' ) === -1 ) {\r\n            if ( question.translated != null &&\r\n                typeof question.translated[ surveyHandler.ccsdk.config.language ] !== 'undefined' ) {\r\n                return question.translated[ surveyHandler.ccsdk.config.language ].displayLegend;\r\n            } else {\r\n                return question.displayLegend;\r\n            }\r\n        } else {\r\n            return question.displayLegend;\r\n        }\r\n    }\r\n\r\n    public static translateMultiSelect( surveyHandler: any, question: any ) {\r\n        if ( surveyHandler.ccsdk.config.language.indexOf( 'Default' ) === -1 ) {\r\n            if ( question.translated != null &&\r\n                typeof question.translated[ surveyHandler.ccsdk.config.language ] !== 'undefined' &&\r\n                question.translated[ surveyHandler.ccsdk.config.language ].multiSelect\r\n            ) {\r\n                let translatedOptions = question.translated[ surveyHandler.ccsdk.config.language ].multiSelect;\r\n                return question.multiSelect.map( ( x, i ) => {\r\n                    if ( translatedOptions[ i ] ) {\r\n                        return translatedOptions[ i ];\r\n                    } else {\r\n                        return x;\r\n                    }\r\n                } );\r\n            } else {\r\n                return question.multiSelect;\r\n            }\r\n        } else {\r\n            return question.multiSelect;\r\n        }\r\n    }\r\n\r\n    public static translateMultiSelectOption( surveyHandler: any, question: any, option: any ) {\r\n        let effectiveMultiselect = this.translateMultiSelect( surveyHandler, question );\r\n        if ( ( effectiveMultiselect instanceof Array ) && effectiveMultiselect.length > 0 ) {\r\n            for ( let i = 0; i < question.multiSelect.length; i++ ) {\r\n                let opt: any = question.multiSelect[ i ].split( ';' )\r\n                if ( opt[ 0 ] == option ) {\r\n                    return effectiveMultiselect[ i ].split( ';' )[ 0 ];\r\n                } else {\r\n\r\n                }\r\n            }\r\n        }\r\n        return option;\r\n    }\r\n\r\n}\r\n\r\nexport { LanguageTextFilter };","class Config {\r\n  static API_URL: String = \"https://api.getcloudcherry.com\";\r\n  static SURVEY_BY_TOKEN: String = \"/api/SurveyByToken/{token}/\";\r\n  // static SURVEY_BY_TOKEN : String  = \"/api/SurveyByToken/{token}/{tabletId}\";\r\n  static SURVEY_PARTIAL_RESPONSE: String = \"/api/PartialSurvey/{id}/{complete}/JS-MicroWeb\";\r\n  // static SURVEY_PARTIAL_RESPONSE : String =  \"/api/PartialSurvey/{id}/{complete}/JS-Web/{tabletId}\";\r\n  static CDN_URL: string = \"https://cx.getcloudcherry.com/\";\r\n  static CDN_ASSET_URL: string = \"https://cx.getcloudcherry.com/microsurvey-assets/\";\r\n  static POST_LOGIN_TOKEN = \"/api/LoginToken\";\r\n  static GET_SURVEY_THROTTLE_LOGIC = \"/api/SurveyThrottleLogic/{location}\";\r\n  static POST_THROTTLING = \"/api/Throttling\";\r\n  static POST_THROTTLING_ADD_ENTRIES = \"/api/Throttling/AddEntries\";\r\n  static POST_SURVEY_FINAL = \"/api/surveybytoken/{tokenId}\"\r\n  static GET_CAMPAIGN = \"/api/SurveyToken/Campaign/{token}/\"\r\n}\r\n\r\nexport { Config };\r\n","import '../css/main.scss';\r\nimport * as QuestionSurvey from '../templates/Survey.html';\r\nimport * as QuestionStart from '../templates/QuestionStart.html';\r\nimport * as QuestionSingleline from '../templates/QuestionSingleline.html';\r\nimport * as QuestionNumber from '../templates/QuestionNumber.html';\r\nimport * as QuestionMultiline from '../templates/QuestionMultiline.html';\r\nimport * as QuestionCheckbox from '../templates/QuestionCheckbox.html';\r\nimport * as QuestionRadio from '../templates/QuestionRadio.html';\r\nimport * as QuestionRadioImage from '../templates/QuestionRadioImage.html';\r\nimport * as QuestionScale from '../templates/QuestionScale.html';\r\nimport * as QuestionCSATAgreement5 from '../templates/QuestionCSATAgreement5.html';\r\nimport * as QuestionCSATSatisfaction5 from '../templates/QuestionCSATSatisfaction5.html';\r\nimport * as QuestionNPS from '../templates/QuestionNPS.html';\r\nimport * as QuestionSelect from '../templates/QuestionSelect.html';\r\nimport * as QuestionMultiSelect from '../templates/QuestionMultiSelect.html';\r\nimport * as QuestionSmile from '../templates/QuestionSmile.html';\r\nimport * as QuestionSmileInverted from '../templates/QuestionSmileInverted.html';\r\nimport * as QuestionStar from '../templates/QuestionStar.html';\r\nimport * as QuestionSlider from '../templates/QuestionSlider.html';\r\nimport * as OptionRadioImage from '../templates/OptionRadioImage.html';\r\nimport * as OptionRadio from '../templates/OptionRadio.html';\r\nimport * as OptionCheckbox from '../templates/OptionCheckbox.html';\r\nimport * as OptionCheckboxImage from '../templates/OptionCheckboxImage.html';\r\nimport * as ThankYou from '../templates/ThankYou.html';\r\nimport * as QuestionDate from '../templates/QuestionDate.html';\r\nimport * as LanguageSelector from '../templates/LanguageSelector.html';\r\n\r\nlet templates = {\r\n  question_survey: QuestionSurvey,\r\n  question_start: QuestionStart,\r\n  question_text: QuestionSingleline,\r\n  question_number: QuestionNumber,\r\n  question_scale: QuestionScale,\r\n  question_csat_agreement_5: QuestionCSATAgreement5,\r\n  question_csat_satisfaction_5: QuestionCSATSatisfaction5,\r\n  question_nps: QuestionNPS,\r\n  question_multi_line_text: QuestionMultiline,\r\n  question_multi_select: QuestionMultiSelect,\r\n  question_radio: QuestionRadio,\r\n  question_radio_image: QuestionRadioImage,\r\n  question_checkbox: QuestionCheckbox,\r\n  question_select: QuestionSelect,\r\n  question_smile_5: QuestionSmile,\r\n  question_date: QuestionDate,\r\n  question_smile_5_inverted: QuestionSmileInverted,\r\n  question_star_5: QuestionStar,\r\n  question_slider: QuestionSlider,\r\n  option_radio_image: OptionRadioImage,\r\n  option_radio: OptionRadio,\r\n  option_checkbox: OptionCheckbox,\r\n  option_checkbox_image: OptionCheckboxImage,\r\n  thankyou: ThankYou,\r\n  language_selector: LanguageSelector\r\n};\r\n\r\nexport { templates };\r\n","export function isAnd(filterQuestion: any): boolean {\r\n  if (!filterQuestion) {\r\n    return false;\r\n  }\r\n  if (filterQuestion.groupBy == null || filterQuestion.groupBy.toUpperCase() == \"AND\") {\r\n    return true;\r\n  }\r\n}\r\n\r\nexport function isOr(filterQuestion: any): boolean {\r\n  if (!filterQuestion) {\r\n    return false;\r\n  }\r\n  if (filterQuestion.groupBy != null && filterQuestion.groupBy.toUpperCase() == \"OR\") {\r\n    return true;\r\n  }\r\n}\r\n\r\nexport function isNumberCheck(filterQuestion: any): boolean {\r\n  if (!filterQuestion) {\r\n    return false;\r\n  }\r\n  if (filterQuestion.answerCheck[0] === \"lt\" || filterQuestion.answerCheck[0] === \"gt\" || filterQuestion.answerCheck[0] === \"eq\") {\r\n    return true;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n  * Contains logic to control conditional flow and whether to show or hide the questions based on the user input\r\n  *\r\n  * @param filterQuestion\r\n  * @return\r\n  */\r\nexport function doesSatisfy(surveyHandler: any, filterQuestion: any): boolean {\r\n  const answer = surveyHandler.getAnswerForQuestionId(filterQuestion.questionId);\r\n  if (isNumberCheck(filterQuestion)) {\r\n    if (filterQuestion.answerCheck[0].toLowerCase() == \"lt\") {\r\n      if (answer)\r\n        if (answer.numberInput != null && answer.numberInput < filterQuestion.number) {\r\n          return true;\r\n        }\r\n    } else if (filterQuestion.answerCheck[0].toLowerCase() == (\"gt\")) {\r\n      if (answer)\r\n        if (answer.numberInput != null && answer.numberInput > filterQuestion.number) {\r\n          return true;\r\n        }\r\n    } else if (filterQuestion.answerCheck[0].toLowerCase() == (\"eq\")) {\r\n      if (answer)\r\n        if (answer.numberInput != null && answer.numberInput == filterQuestion.number) {\r\n          return true;\r\n        }\r\n    }\r\n  } else {\r\n    // any text match for text answers\r\n    if (filterQuestion.answerCheck[0] && filterQuestion.answerCheck[0].toLowerCase() === 'any text') {\r\n      if (answer && answer.textInput && answer.textInput !== ' ') {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    let iFoundAll = false;\r\n    let question = surveyHandler.getQuestionById(filterQuestion.questionId);\r\n    let questionAnswerText = answer != null && answer.textInput != null ? answer.textInput : '';\r\n    if (!answer) {\r\n      return false;\r\n    }\r\n    for (let aAnswer of filterQuestion.answerCheck) {\r\n      if (question.displayType === 'MultiSelect') {\r\n        let selectedOptions = answer.textInput.split(',');\r\n        if (selectedOptions.indexOf(aAnswer) !== -1) {\r\n          iFoundAll = true;\r\n        }\r\n      } else if (questionAnswerText === aAnswer) {\r\n        iFoundAll = true;\r\n      }\r\n    }\r\n    return iFoundAll;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function questionCompare(a: any, b: any) {\r\n  return a.sequence - b.sequence;\r\n}\r\n\r\nexport function checkLanguage(surveyHandler, fOption) {\r\n  if (surveyHandler.ccsdk.config && surveyHandler.ccsdk.config.language) {\r\n    return fOption.language === surveyHandler.ccsdk.config.language\r\n  }\r\n  return false;\r\n}\r\n","import { DomUtilities } from \"./DomUtilities\";\r\nimport { LanguageTextFilter } from '../filters/LanguageTextFilter';\r\n\r\nclass Select {\r\n  util: DomUtilities;\r\n  $body: any;\r\n  $html: any;\r\n  qId: any;\r\n  select: any;\r\n  type: string;\r\n  listeners: any = [];\r\n  constructor(qId: string) {\r\n    this.qId = qId;\r\n  }\r\n  init(qId: string) {\r\n    this.util = new DomUtilities();\r\n    this.$body = document.querySelectorAll(\"body\")[0];\r\n    this.$html = document.querySelectorAll(\"html\")[0];\r\n    var select = document.querySelectorAll(\"#\" + qId + \" .cc-select\");\r\n\r\n    // var divSelect = document.querySelectorAll(\"div.cc-select\");\r\n    // this.util.removeAll(divSelect);\r\n    let parent = this;\r\n\r\n    //Assumption: iterating over array but there will always be one select at a time\r\n    this.type = select[0].getAttribute('data-type');\r\n    Array.prototype.forEach.call(select, function (el, i) {\r\n      var self = el;\r\n      var $selectOptions = document.querySelectorAll(\"#\" + qId + \" .cc-select-options\");\r\n      var classes = self.getAttribute(\"class\"),\r\n        id = self.getAttribute(\"id\"),\r\n        name = self.getAttribute(\"name\");\r\n      var template = '<div class=\"' + classes + '\">';\r\n      template += '<span class=\"cc-select-trigger\">' + self.getAttribute(\"placeholder\") + '</span>';\r\n      template += '<div class=\"cc-select-options-container\" cc-scrollbar-container><div class=\"cc-select-options\">';\r\n      var options = self.querySelectorAll(\"option\");\r\n      Array.prototype.forEach.call(options, function (el, i) {\r\n        template += '<span class=\"cc-select-option ' + el.getAttribute(\"class\") + '\" data-value=\"' + el.getAttribute(\"value\") + '\">' + el.innerHTML + '</span>';\r\n      });\r\n      template += '</div></div></div>';\r\n      parent.util.addClass(self, 'hide');\r\n      self.insertAdjacentHTML('afterend', template);\r\n    });\r\n    this.setupListeners();\r\n  }\r\n\r\n\r\n  setupListeners() {\r\n    var self = this;\r\n    var qId = self.qId;\r\n    let ref2 = this.util.initListener('click', \"#\" + qId + \" .cc-select-option\", function (e) {\r\n      // let ref2 = this.util.initListener(this.$body, \"click\", \"#\"+qId+\" .cc-select-option\", function(e) {\r\n      (window as any).ccsdkDebug ? console.log('click cc-select-option', this) : '';\r\n      let selfOption = this;\r\n      let value = this.getAttribute('data-value');\r\n      //select cc-select-wrapper\r\n      //todo: write a function to directly select parent via selector\r\n      let selectOptions = this.parentNode;\r\n      let select = selectOptions.parentNode.parentNode;\r\n      this.select = select;\r\n      let selectWrapper = select.parentNode;\r\n      (window as any).ccsdkDebug ? console.log(select) : '';\r\n      (window as any).ccsdkDebug ? console.log(selectOptions) : '';\r\n      (window as any).ccsdkDebug ? console.log(selectWrapper) : '';\r\n      let selectionTrigger = select.querySelectorAll('.cc-select-trigger')[0];\r\n\r\n      self.util.addClass(this, \"selection\");\r\n      let selectedOptionText = selectionTrigger.textContent;\r\n      let selectedValueText = selectionTrigger.getAttribute('data-selection-value') || '';\r\n\r\n      (window as any).ccsdkDebug ? console.log('select type', self.type) : '';\r\n      if (self.type !== 'multiple') {\r\n        (window as any).ccsdkDebug ? console.log('select type', self.type) : '';\r\n        selectedOptionText = selfOption.textContent;\r\n        (window as any).ccsdkDebug ? console.log('selected option', selectedOptionText) : '';\r\n        self.util.removeClassAll(document.querySelectorAll(\".cc-select\"), \"cc-opened\");\r\n        selectionTrigger.setAttribute('data-selection-value', value);\r\n        selectWrapper.querySelectorAll(\"select\")[0].value = value;\r\n        selectionTrigger.textContent = selectedOptionText;\r\n        self.util.removeClassAll(document.querySelectorAll(\"#\" + qId + \" .cc-select-option\"), 'selection');\r\n        self.util.addClass(self, 'selection');\r\n      } else {\r\n        (window as any).ccsdkDebug ? console.log(selectedOptionText) : '';\r\n        if (selectedOptionText != 'Select') {\r\n          selectedOptionText = self.addOrRemoveFromList(selectedOptionText, selfOption.textContent);\r\n          selectedValueText = self.addOrRemoveFromList(selectedValueText, value);\r\n        } else {\r\n          (window as any).ccsdkDebug ? console.log(selfOption.textContent) : '';\r\n          selectedOptionText = selfOption.textContent;\r\n          selectedValueText = value;\r\n        }\r\n\r\n        selectWrapper.querySelectorAll(\"select\")[0].value = selectedValueText;\r\n        selectionTrigger.setAttribute('data-selection-value', selectedValueText);\r\n        self.util.removeClassAll(document.querySelectorAll(\"#\" + qId + \" .cc-select-option\"), 'selection');\r\n        self.selectOptions(selectedValueText);\r\n\r\n        selectedValueText\r\n        if (selectedOptionText.length < 1) {\r\n          selectionTrigger.textContent = 'Select';\r\n        } else {\r\n          selectionTrigger.textContent = selectedOptionText;\r\n        }\r\n        return false;\r\n\r\n      }\r\n\r\n    });\r\n    this.listeners.push(ref2);\r\n    ref2.internalHandler = this.util.listener(this.$body, ref2.type, ref2.id, ref2.cb);\r\n    let ref = this.util.initListener('click', \"#\" + qId + \" .cc-select-trigger\", function (e) {\r\n      self.$html.addEventListener('click', function (e) {\r\n        if (!self.util.hasClass(e.target, 'cc-select-option')) {\r\n          self.util.removeClassAll(document.querySelectorAll(\".cc-select\"), \"cc-opened\");\r\n          self.$html.removeEventListener('click', function () {\r\n          });\r\n        }\r\n      })\r\n      var ccSelect = this.parentNode;\r\n      (window as any).ccsdkDebug ? console.log('click cc-select-trigger', ccSelect) : '';\r\n      self.util.toggleClass(ccSelect, \"cc-opened\");\r\n      e.stopPropagation();\r\n    });\r\n    this.listeners.push(ref);\r\n    ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n\r\n  }\r\n\r\n  destroyListeners() {\r\n    for (let listener of this.listeners) {\r\n      this.util.removeListener(this.$body, listener.type, listener.internalHandler);\r\n    }\r\n    return true;\r\n  }\r\n\r\n\r\n  setValue(value: string, question, surveyHandler) {\r\n    let self = this;\r\n    let qId = self.qId;\r\n    let select: any;\r\n\r\n    select = document.querySelectorAll(\"#\" + qId + \" select\")[0];\r\n    select.value = value;\r\n    let selectTrigger = document.querySelectorAll(\"#\" + qId + \" .cc-select-trigger\")[0];\r\n    let selectedValueList = value.split(',');\r\n    let translatedSelection = selectedValueList.map(x => LanguageTextFilter.translateMultiSelectOption(surveyHandler, question, x));\r\n    selectTrigger.textContent = translatedSelection.join(',');\r\n    selectTrigger.setAttribute('data-selection-value', value);\r\n  }\r\n\r\n  selectOption(el: any) {\r\n    this.util.addClass(el, 'selection');\r\n  }\r\n\r\n  removeOption(el) {\r\n    this.util.removeClass(el, 'selection');\r\n  }\r\n\r\n  selectOptions(csv: string) {\r\n    let self = this;\r\n    if (csv) {\r\n      let allOptions = csv.split(',');\r\n      for (let option of allOptions) {\r\n        let domOptions = document.querySelectorAll(\"#\" + self.qId + \" .cc-select-option\");\r\n        Array.prototype.forEach.call(domOptions, function (el, i) {\r\n          if (el.getAttribute('data-value') == option) {\r\n            self.selectOption(el);\r\n          } else {\r\n\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  addOrRemoveFromList(listAsString: string, item: string) {\r\n    let list = listAsString.split(',');\r\n    let itemIndex = list.indexOf(item);\r\n    if (itemIndex !== -1) {\r\n      list.splice(itemIndex, 1);\r\n    } else {\r\n      list.push(item);\r\n    }\r\n    return list.join(',');\r\n  }\r\n\r\n}\r\nexport { Select }\r\n","import { isArray } from \"util\";\r\nimport { LanguageTextFilter } from \"./LanguageTextFilter\";\r\nimport { isAnd, isOr, doesSatisfy, questionCompare } from './filter-utils';\r\n\r\nclass ConditionalFlowFilter {\r\n  public static filterQuestion( surveyHandler: any, question: any ) {\r\n    let aAddedCount = 0;\r\n    let aRemovedCount = 0;\r\n\r\n    if ( surveyHandler.getAnswerForQuestionId( question.id ) != null ) {\r\n      for ( let aQuestion of surveyHandler.getConditionalSurveyQuestions() ) {\r\n        // console.log( aQuestion );\r\n        if ( aQuestion.conditionalFilter != null ) {\r\n          let iSatisfied = false;\r\n          let iFailed = false;\r\n          for ( let aFilterByQuestion of aQuestion.conditionalFilter.filterquestions ) {\r\n            if ( isAnd( aFilterByQuestion ) ) {\r\n              if ( doesSatisfy( surveyHandler, aFilterByQuestion ) && !iFailed ) {\r\n                iSatisfied = true;\r\n              } else {\r\n                iFailed = true;\r\n                break;\r\n              }\r\n            } else if ( isOr( aFilterByQuestion ) ) {\r\n              if ( doesSatisfy( surveyHandler, aFilterByQuestion ) ) {\r\n                iSatisfied = true;\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          const surveyQuestions = surveyHandler.getSurveyQuestions();\r\n          if ( iSatisfied && !iFailed ) {\r\n            if ( surveyQuestions.indexOf( aQuestion ) === -1 ) {\r\n              surveyQuestions.push( aQuestion );\r\n              aAddedCount++;\r\n            }\r\n          } else {\r\n            if ( surveyQuestions.indexOf( aQuestion ) !== -1 ) {\r\n              aRemovedCount++;\r\n              surveyQuestions.splice( surveyQuestions.indexOf( aQuestion ), 1 );\r\n              // surveyHandler.removePartial(aQuestion.id);\r\n              //removing from partial requires not posting partial after each question rather than posting them all at once.\r\n              surveyHandler.removeAnswer( aQuestion.id );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if ( aAddedCount > 0 || aRemovedCount > 0 ) {\r\n      surveyHandler.getSurveyQuestions().sort( questionCompare );\r\n      // surveyHandler.sendConditionalFLowQuestionsData(surveyHandler.getSurveyQuestions().size());\r\n      return true;\r\n    } else {\r\n      // return false;\r\n    }\r\n    // ( window as any ).ccsdkDebug ? console.log( surveyHandler.getSurveyQuestions() ) : '';\r\n  }\r\n}\r\n\r\nexport { ConditionalFlowFilter };","// Production steps of ECMA-262, Edition 6, 22.1.2.1\r\nif (!(<any>Array).from) {\r\n  (<any>Array).from = (function () {\r\n    var toStr = Object.prototype.toString;\r\n    var isCallable = function (fn) {\r\n      return typeof fn === 'function' || toStr.call(fn) === '[object Function]';\r\n    };\r\n    var toInteger = function (value) {\r\n      var number = Number(value);\r\n      if (isNaN(number)) {\r\n        return 0;\r\n      }\r\n      if (number === 0 || !isFinite(number)) {\r\n        return number;\r\n      }\r\n      return (number > 0 ? 1 : -1) * Math.floor(Math.abs(number));\r\n    };\r\n    var maxSafeInteger = Math.pow(2, 53) - 1;\r\n    var toLength = function (value) {\r\n      var len = toInteger(value);\r\n      return Math.min(Math.max(len, 0), maxSafeInteger);\r\n    };\r\n\r\n    // The length property of the from method is 1.\r\n    return function from(arrayLike /*, mapFn, thisArg */) {\r\n      // 1. Let C be the this value.\r\n      var C = this;\r\n\r\n      // 2. Let items be ToObject(arrayLike).\r\n      var items = Object(arrayLike);\r\n\r\n      // 3. ReturnIfAbrupt(items).\r\n      if (arrayLike == null) {\r\n        throw new TypeError('Array.from requires an array-like object - not null or undefined');\r\n      }\r\n\r\n      // 4. If mapfn is undefined, then let mapping be false.\r\n      var mapFn = arguments.length > 1 ? arguments[1] : void undefined;\r\n      var T;\r\n      if (typeof mapFn !== 'undefined') {\r\n        // 5. else\r\n        // 5. a If IsCallable(mapfn) is false, throw a TypeError exception.\r\n        if (!isCallable(mapFn)) {\r\n          throw new TypeError('Array.from: when provided, the second argument must be a function');\r\n        }\r\n\r\n        // 5. b. If thisArg was supplied, let T be thisArg; else let T be undefined.\r\n        if (arguments.length > 2) {\r\n          T = arguments[2];\r\n        }\r\n      }\r\n\r\n      // 10. Let lenValue be Get(items, \"length\").\r\n      // 11. Let len be ToLength(lenValue).\r\n      var len = toLength(items.length);\r\n\r\n      // 13. If IsConstructor(C) is true, then\r\n      // 13. a. Let A be the result of calling the [[Construct]] internal method \r\n      // of C with an argument list containing the single item len.\r\n      // 14. a. Else, Let A be ArrayCreate(len).\r\n      var A = isCallable(C) ? Object(new C(len)) : new Array(len);\r\n\r\n      // 16. Let k be 0.\r\n      var k = 0;\r\n      // 17. Repeat, while k < len… (also steps a - h)\r\n      var kValue;\r\n      while (k < len) {\r\n        kValue = items[k];\r\n        if (mapFn) {\r\n          A[k] = typeof T === 'undefined' ? mapFn(kValue, k) : mapFn.call(T, kValue, k);\r\n        } else {\r\n          A[k] = kValue;\r\n        }\r\n        k += 1;\r\n      }\r\n      // 18. Let putStatus be Put(A, \"length\", len, true).\r\n      A.length = len;\r\n      // 20. Return A.\r\n      return A;\r\n    };\r\n  }());\r\n}\r\n\r\n// custom event polyfill\r\n(function () {\r\n\r\n  if (typeof (<any>window).CustomEvent === \"function\") return false;\r\n\r\n  function CustomEvent(event, params) {\r\n    params = params || {\r\n      bubbles: false,\r\n      cancelable: false,\r\n      detail: undefined\r\n    };\r\n    var evt = document.createEvent('CustomEvent');\r\n    evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\r\n    return evt;\r\n  }\r\n\r\n  CustomEvent.prototype = (<any>window).Event.prototype;\r\n\r\n  (<any>window).CustomEvent = CustomEvent;\r\n})();\r\n\r\n// https://tc39.github.io/ecma262/#sec-array.prototype.find\r\nif (!(<any>Array.prototype).find) {\r\n  Object.defineProperty(Array.prototype, 'find', {\r\n    value: function (predicate) {\r\n      // 1. Let O be ? ToObject(this value).\r\n      if (this == null) {\r\n        throw new TypeError('\"this\" is null or not defined');\r\n      }\r\n\r\n      var o = Object(this);\r\n\r\n      // 2. Let len be ? ToLength(? Get(O, \"length\")).\r\n      var len = o.length >>> 0;\r\n\r\n      // 3. If IsCallable(predicate) is false, throw a TypeError exception.\r\n      if (typeof predicate !== 'function') {\r\n        throw new TypeError('predicate must be a function');\r\n      }\r\n\r\n      // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\r\n      var thisArg = arguments[1];\r\n\r\n      // 5. Let k be 0.\r\n      var k = 0;\r\n\r\n      // 6. Repeat, while k < len\r\n      while (k < len) {\r\n        // a. Let Pk be ! ToString(k).\r\n        // b. Let kValue be ? Get(O, Pk).\r\n        // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\r\n        // d. If testResult is true, return kValue.\r\n        var kValue = o[k];\r\n        if (predicate.call(thisArg, kValue, k, o)) {\r\n          return kValue;\r\n        }\r\n        // e. Increase k by 1.\r\n        k++;\r\n      }\r\n\r\n      // 7. Return undefined.\r\n      return undefined;\r\n    },\r\n    configurable: true,\r\n    writable: true\r\n  });\r\n}","import { Cookie } from './helpers/Cookie';\r\nimport { SurveyManager } from \"./SurveyManager\";\r\nimport { Survey } from \"./Survey\";\r\nimport { PrefillsBatchOrSingle, PrefillDictionary } from './types';\r\n\r\n/**\r\n * functions that are exposed to SDK User are written here.\r\n * Entry point for CCSDK.\r\n */\r\n// declare var Sentry: any;\r\n\r\nlet localCCSDK = {\r\n  init: init,\r\n  destroy: destroy,\r\n  trigger: trigger,\r\n  hide: hide,\r\n  show: show,\r\n  on: on,\r\n  prefill: prefill,\r\n  prefillByTag: prefillByTag,\r\n  prefillByNote: prefillByNote\r\n};\r\n\r\n// let instances : any = {};\r\n\r\n(window as any).globalSurveyRunning = false;\r\n(window as any).ccsdkDebug = false;\r\n(window as any).isMobile = window.innerWidth <= 768 ? true : false;\r\n\r\nif (typeof (window as any).CCSDK !== 'undefined') {\r\n  var queue = (window as any).CCSDK.q;\r\n  (window as any).CCSDK = function () {\r\n    if (arguments && arguments.length == 0) {\r\n      var time = new Date();\r\n    } else {\r\n      (window as any).ccsdkDebug ? console.log(arguments) : '';\r\n      var args = (Array as any).from(arguments);\r\n      //Call this functions as ccsdk('functionName', ['argument1', 'argument2']);\r\n      var functionName = args.splice(0, 1)[0];\r\n      (window as any).ccsdkDebug ? console.log(functionName) : '';\r\n      return localCCSDK[functionName].apply(this, args);\r\n    }\r\n  };\r\n  if (queue) {\r\n    for (var q of queue) {\r\n      var args = (Array as any).from(q);\r\n      var functionName = args.splice(0, 1)[0];\r\n      localCCSDK[functionName].apply(this, args);\r\n    }\r\n  }\r\n  let eventCCReady: Event = document.createEvent('Event');\r\n  eventCCReady.initEvent('ccready', true, true);\r\n  document.dispatchEvent(eventCCReady);\r\n}\r\n\r\nexport function init(surveyToken: any) {\r\n  //config options can be set in arguments[1]\r\n  //available config options : themeColor\r\n  surveyToken = decodeURIComponent(surveyToken).trim();\r\n  let config = (typeof arguments[1] === 'object') ? arguments[1] : {};\r\n  //create survey instance\r\n  if (typeof Cookie.get(surveyToken + '-finish') !== 'undefined' && Cookie.get(surveyToken + '-finish')) {\r\n    return;\r\n  }\r\n  if (typeof Cookie.get(surveyToken + '-coolDown') !== 'undefined' && Cookie.get(surveyToken + '-coolDown')) {\r\n    return;\r\n  }\r\n\r\n  if (typeof config.isActive !== 'undefined' && config.isActive) {\r\n    SurveyManager.surveyInstances[surveyToken] = (SurveyManager.surveyInstances[surveyToken]) ? SurveyManager.surveyInstances[surveyToken] : new Survey(surveyToken, config);\r\n    SurveyManager.surveyInstances[surveyToken].tracking.trackEvent('Init MicroSurvey', {\r\n      token: surveyToken,\r\n      data: {\r\n        name: (<any>window).isMobile ? 'Mobile Mode' : 'Desktop Mode',\r\n        action: surveyToken\r\n      }\r\n    }, null, null);\r\n\r\n    if (SurveyManager.prefillQueue[surveyToken]) {\r\n      let object = SurveyManager.prefillQueue[surveyToken];\r\n      SurveyManager.surveyInstances[surveyToken].tracking.trackEvent('Init MicroSurvey', {\r\n        token: surveyToken,\r\n        data: {\r\n          name: 'Prefill lazily',\r\n          action: surveyToken\r\n        }\r\n      }, null, null);\r\n      if (object.directPrefills) {\r\n        object.directPrefills.forEach(x => {\r\n          SurveyManager.surveyInstances[surveyToken].prefill(x, 'DIRECT');\r\n        });\r\n        delete object.directPrefills;\r\n      } else if (object.byTagPrefills) {\r\n        object.byTagPrefills.forEach(x => {\r\n          SurveyManager.surveyInstances[surveyToken].prefill(x, 'BY_TAG');\r\n        });\r\n        delete object.byTagPrefills;\r\n      } else if (object.byNotePrefills) {\r\n        object.byTagPrefills.forEach(x => {\r\n          SurveyManager.surveyInstances[surveyToken].prefill(x, 'BY_NOTE');\r\n        });\r\n        delete object.byNotePrefills;\r\n      }\r\n    }\r\n    return SurveyManager.surveyInstances[surveyToken];\r\n  } else {\r\n    //do nothing\r\n  }\r\n\r\n}\r\n\r\nexport function destroy(surveyToken: string) {\r\n  //remove from trigger manager, delete instance.\r\n  if (!SurveyManager ||\r\n    !SurveyManager.surveyInstances ||\r\n    !SurveyManager.surveyInstances[surveyToken] ||\r\n    !SurveyManager.surveyInstances[surveyToken].dom) {\r\n    return;\r\n  }\r\n  SurveyManager.surveyInstances[surveyToken].dom.destroyListeners();\r\n  SurveyManager.surveyInstances[surveyToken].destroy();\r\n  delete SurveyManager.surveyInstances[surveyToken];\r\n}\r\n//\r\nexport function trigger(surveyToken: string, type: string, target: string) {\r\n  (window as any).ccsdkDebug ? console.log(SurveyManager.surveyInstances) : '';\r\n\r\n  if (typeof SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n    SurveyManager.surveyInstances[surveyToken].tracking.trackEvent('Trigger Type', {\r\n      token: surveyToken,\r\n      data: {\r\n        name: type,\r\n        action: surveyToken\r\n      }\r\n    }, null, null);\r\n    SurveyManager.surveyInstances[surveyToken].trigger(type, target);\r\n  }\r\n  //tell trigger manager to register trigger.\r\n}\r\n\r\nexport function on(surveyToken: string, type: string, callback: any) {\r\n  if (typeof SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n    SurveyManager.surveyInstances[surveyToken].tracking.trackEvent('Event Listeners', {\r\n      token: surveyToken,\r\n      data: {\r\n        name: type,\r\n        action: surveyToken\r\n      }\r\n    }, null, null);\r\n    SurveyManager.surveyInstances[surveyToken].on(type, callback);\r\n  }\r\n}\r\n\r\nexport function prefill(surveyToken: string, ...restArgs: PrefillsBatchOrSingle) {\r\n  if (typeof SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n    let questionId;\r\n    if (typeof restArgs[0] === 'string') {\r\n      questionId = restArgs[0];\r\n    } else {\r\n      questionId = Object.keys((<PrefillDictionary>restArgs[0])).length + ' Questions';\r\n    }\r\n    SurveyManager.surveyInstances[surveyToken].tracking.trackEvent('Prefill', {\r\n      token: surveyToken,\r\n      data: {\r\n        name: questionId,\r\n        action: surveyToken\r\n      }\r\n    }, null, null);\r\n    SurveyManager.surveyInstances[surveyToken].prefill(restArgs, 'DIRECT');\r\n  } else {\r\n    if (SurveyManager.prefillQueue[surveyToken]) {\r\n      SurveyManager.prefillQueue[surveyToken].directPrefills.push(restArgs);\r\n    } else {\r\n      SurveyManager.prefillQueue[surveyToken] = {\r\n        directPrefills: [restArgs]\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport function prefillByTag(surveyToken: string, ...restArgs: PrefillsBatchOrSingle) {\r\n  if (typeof SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n    let questionTag;\r\n    if (typeof restArgs[0] === 'string') {\r\n      questionTag = restArgs[0];\r\n    } else {\r\n      questionTag = Object.keys((<PrefillDictionary>restArgs[0])).length + ' Questions';\r\n    }\r\n    SurveyManager.surveyInstances[surveyToken].tracking.trackEvent('Prefill by tag', {\r\n      token: surveyToken,\r\n      data: {\r\n        name: questionTag,\r\n        action: surveyToken\r\n      }\r\n    }, null, null);\r\n    SurveyManager.surveyInstances[surveyToken].prefill(restArgs, 'BY_TAG');\r\n  } else {\r\n    if (SurveyManager.prefillQueue[surveyToken]) {\r\n      SurveyManager.prefillQueue[surveyToken].byTagPrefills.push(restArgs);\r\n    } else {\r\n      SurveyManager.prefillQueue[surveyToken] = {\r\n        byTagPrefills: [restArgs]\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport function prefillByNote(surveyToken: string, ...restArgs: PrefillsBatchOrSingle) {\r\n  if (typeof SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n    let questionNote;\r\n    if (typeof restArgs[0] === 'string') {\r\n      questionNote = restArgs[0];\r\n    } else {\r\n      questionNote = Object.keys((<PrefillDictionary>restArgs[0])).length + ' Questions';\r\n    }\r\n    SurveyManager.surveyInstances[surveyToken].tracking.trackEvent('Prefill by Note', {\r\n      token: surveyToken,\r\n      data: {\r\n        name: questionNote,\r\n        action: surveyToken\r\n      }\r\n    }, null, null);\r\n    SurveyManager.surveyInstances[surveyToken].prefill(restArgs, 'BY_NOTE');\r\n  } else {\r\n    if (SurveyManager.prefillQueue[surveyToken]) {\r\n      SurveyManager.prefillQueue[surveyToken].byNotePrefills.push(restArgs);\r\n    } else {\r\n      SurveyManager.prefillQueue[surveyToken] = {\r\n        byNotePrefills: [restArgs]\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport function show(surveyToken: string) {\r\n  if (typeof SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n    SurveyManager.surveyInstances[surveyToken].show();\r\n  }\r\n}\r\n\r\nexport function hide(surveyToken: string) {\r\n  if (typeof SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n    SurveyManager.surveyInstances[surveyToken].dom.destroyListeners();\r\n    SurveyManager.surveyInstances[surveyToken].destroy();\r\n    SurveyManager.surveyInstances[surveyToken].hide();\r\n  }\r\n}","import { CCSDKConfig } from \"./interfaces/CCSDKConfig\";\r\nimport { DisplayConfig } from \"./interfaces/DisplayConfig\";\r\nimport { SurveyHandler } from \"./SurveyHandler\";\r\nimport { DomSurvey } from \"./helpers/dom/DomSurvey\";\r\nimport { DomUtilities } from \"./helpers/dom/DomUtilities\";\r\nimport { Scrollbar } from \"./helpers/dom/ScrollBar\";\r\nimport { Cookie } from './helpers/Cookie';\r\nimport { Constants } from './Constants';\r\nimport { Slider } from \"./helpers/dom/Slider\";\r\nimport { SurveyManager } from \"./SurveyManager\";\r\nimport { TriggerManager } from \"./TriggerManager\";\r\nimport { Triggers } from './Triggers';\r\nimport { RequestHelper } from './helpers/Request';\r\nimport { Config } from './Config';\r\nimport { MatomoTracker } from './helpers/tracking';\r\nimport { templates } from \"./helpers/templates\";\r\nimport { PrefillsBatchOrSingle, PrefillType } from \"./types\";\r\n\r\nclass Survey {\r\n  survey: SurveyHandler;\r\n  dom: DomSurvey;\r\n  surveyData: any;\r\n  util: DomUtilities;\r\n  scrollbar: Scrollbar;\r\n  slider: Slider;\r\n  config: CCSDKConfig;\r\n  surveyToken: string;\r\n  triggers: Triggers;\r\n  surveyRunning: boolean;\r\n  surveyDone: boolean;\r\n  surveyStatus: string;\r\n  isThrottled: boolean;\r\n  thorttlingLogic: any;\r\n  loginData: any;\r\n  debug: false;\r\n  surveyStartTime: any;\r\n  requester = new RequestHelper();\r\n  tracking: MatomoTracker;\r\n\r\n  constructor(surveyToken: string, config: CCSDKConfig) {\r\n    this.isThrottled = true;\r\n    this.surveyDone = false;\r\n    this.surveyStatus = '';\r\n    this.surveyToken = surveyToken;\r\n    this.config = config;\r\n    this.surveyRunning = false;\r\n    this.thorttlingLogic = null;\r\n    this.tracking = new MatomoTracker();\r\n    this.tracking.token = surveyToken;\r\n    if (typeof this.config.textDirection === 'undefined') {\r\n      this.config.textDirection = \"ltr\";\r\n    }\r\n\r\n    this.triggers = new Triggers(this);\r\n    TriggerManager.addSurvey(this.surveyToken, this.triggers);\r\n    this.survey = new SurveyHandler(this);\r\n    this.util = new DomUtilities;\r\n    //set themeColor of survey\r\n    this.config.brandColor = (this.config && this.config.brandColor) ?\r\n      this.config.brandColor : \"#db3c39\";\r\n    //use config variable textDirection and set dir\r\n    this.setHtmlTextDirection();\r\n    this.setDisplayOptions();\r\n    setTimeout(() => {\r\n      this.util.trigger(document, this.surveyToken + '-ready', { 'survey': this });\r\n    }, 100)\r\n    //do login\r\n    this.config.username = \"test\";\r\n    this.config.password = \"test\";\r\n    this.config.location = \"location\";\r\n    this.config.language = \"English (Default)\";\r\n    //check trigger conditions and add itself to \r\n    //based on new config\r\n    //gotta and these.\r\n    this.trigger(\"click\", this.config.cssSelector);\r\n    this.triggers.setConditionalTriggers(this.config);\r\n  }\r\n\r\n  getSurveyThrottlingLogic(cb) {\r\n    let getThrottleUrl = Config.API_URL + Config.GET_SURVEY_THROTTLE_LOGIC.replace('{location}', this.config.location);\r\n    let headers = {};\r\n    headers[Constants.AUTHORIZATION] = Constants.AUTHORIZATION_BEARER + \" \" + this.loginData.access_token;\r\n    let self = this;\r\n    let successcb = function (data) {\r\n      self.thorttlingLogic = data;\r\n      self.checkThrottling(cb);\r\n    };\r\n\r\n    RequestHelper.getWithHeaders(getThrottleUrl, headers, successcb, null);\r\n  }\r\n\r\n  checkThrottling(cb) {\r\n    if (this.thorttlingLogic != null) {\r\n      if (this.thorttlingLogic.inputIds == null) {\r\n        this.thorttlingLogic.inputIds = [];\r\n      }\r\n      this.thorttlingLogic.inputIds.push(this.thorttlingLogic[this.thorttlingLogic.uniqueIDQuestionIdOrTag.toLowerCase()]);\r\n      if (this.thorttlingLogic.logics != null && this.thorttlingLogic.logics.length > 0 && this.config != null) {\r\n        this.thorttlingLogic.logics[0].filter.location = [];\r\n        this.thorttlingLogic.logics[0].filter.location.push(this.config.location);\r\n      }\r\n    }\r\n    let self = this;\r\n    let postThrottleUrl = Config.API_URL + Config.POST_THROTTLING;\r\n    let headers = {};\r\n    headers[Constants.AUTHORIZATION] = Constants.AUTHORIZATION + \" \" + this.loginData.access_token;\r\n    let successcb = function (throttleResponse) {\r\n\r\n      if (typeof throttleResponse[0][self.thorttlingLogic.uniqueIDQuestionIdOrTag.toLowerCase()] && throttleResponse[0].value) {\r\n        //get survey data?  \r\n        cb();\r\n      }\r\n    };\r\n\r\n    RequestHelper.postWithHeaders(postThrottleUrl, this.thorttlingLogic, headers, successcb, null);\r\n  }\r\n\r\n  addThrottlingEntries(isOpen: boolean) {\r\n    let addThrottleUrl = Config.API_URL + Config.POST_THROTTLING_ADD_ENTRIES;\r\n    let headers = {};\r\n    this.loginData = { access_token: \"help\" };\r\n    headers[Constants.AUTHORIZATION] = Constants.AUTHORIZATION + \" \" + this.loginData.access_token;\r\n    //fill this from config and data.\r\n    let successcb = (throttleResponse) => {\r\n      this.debug ? console.log(throttleResponse) : '';\r\n    }\r\n\r\n    RequestHelper.postWithHeaders(addThrottleUrl, {\r\n      user: \"\",\r\n      mobile: \"\",\r\n      emailId: \"\",\r\n      customId: \"\",\r\n      surveySentDate: \"\",\r\n      surveyOpenDate: \"\",\r\n      channel: \"\",\r\n      isOpened: isOpen\r\n    }, headers, successcb, null);\r\n\r\n  }\r\n\r\n  setupSurvey() {\r\n    this.initSurvey();\r\n  }\r\n\r\n  setHtmlTextDirection() {\r\n    let ccSDKElement = document.querySelector('.cc-sdk');\r\n    if (!ccSDKElement) {\r\n      return;\r\n    }\r\n    let ccSDKDir: string = ccSDKElement.getAttribute('dir');\r\n    let direction: string = (this.config && this.config.textDirection) ?\r\n      this.config.textDirection : (ccSDKDir ? ccSDKDir : \"ltr\");\r\n    ccSDKElement.setAttribute('dir', direction);\r\n  }\r\n\r\n  setDisplayOptions() {\r\n    this.survey.surveyDisplay.position = this.config && this.config.position ?\r\n      this.config.position : \"bottom right\";\r\n    let welcomePopupAnimation = 'hide-right-left';\r\n\r\n    switch (this.survey.surveyDisplay.position) {\r\n      case 'bottom right':\r\n        welcomePopupAnimation = 'hide-right-left';\r\n        break;\r\n      case 'right bottom':\r\n        welcomePopupAnimation = 'hide-right-left';\r\n        break;\r\n      case 'top right':\r\n        welcomePopupAnimation = 'hide-right-left';\r\n        break;\r\n      case 'right top':\r\n        welcomePopupAnimation = 'hide-right-left';\r\n        break;\r\n      case 'bottom left':\r\n        welcomePopupAnimation = 'hide-left-right';\r\n        break;\r\n      case 'left bottom':\r\n        welcomePopupAnimation = 'hide-left-right';\r\n        break;\r\n      case 'top left':\r\n        welcomePopupAnimation = 'hide-left-right';\r\n        break;\r\n      case 'left top':\r\n        welcomePopupAnimation = 'hide-left-right';\r\n        break;\r\n      default:\r\n        welcomePopupAnimation = 'hide-right-left';\r\n        break;\r\n    }\r\n    this.survey.surveyDisplay.welcomePopupAnimation = welcomePopupAnimation;\r\n    this.tracking.trackEvent('Welcome Pop up Position', {\r\n      token: this.tracking.token,\r\n      data: {\r\n        name: this.survey.surveyDisplay.position,\r\n        action: null\r\n      }\r\n    }, null, null);\r\n\r\n    this.survey.surveyDisplay.surveyPosition = this.config.position.search(/bottom/gi) == -1 ? \"top\" : \"bottom\";\r\n  }\r\n\r\n  getSurveyData() {\r\n    let self: Survey = this;\r\n    let successcb = function (surveyData) {\r\n      self.debug ? console.log(surveyData) : '';\r\n\r\n      let event = new CustomEvent(Constants.SURVEY_DATA_EVENT + \"-\" + self.surveyToken, { detail: JSON.parse(JSON.stringify(surveyData)) });\r\n      document.dispatchEvent(event);\r\n      if (!self.config.skipWelcomePage) {\r\n        self.dom.hideLoader();\r\n      }\r\n\r\n      self.surveyData = surveyData;\r\n      if (surveyData && surveyData.questions && surveyData.questions[0]) {\r\n        self.tracking.username = surveyData.questions[0].user;\r\n      }\r\n\r\n      self.tracking.token = self.surveyToken;\r\n      if (self.surveyData) {\r\n        self.tracking.trackEvent('Login Success', {\r\n          token: self.tracking.token,\r\n          data: {\r\n            name: 'Token',\r\n            action: self.surveyToken\r\n          }\r\n        }, console.log, (err) => console.error(err));\r\n        self.tracking.trackEvent('Survey Length', {\r\n          token: self.tracking.token,\r\n          data: {\r\n            name: `${surveyData.questions.length} Questions`,\r\n            action: `${surveyData.preFill ? surveyData.preFill.length : 0} Prefills`\r\n          }\r\n        }, null, null);\r\n\r\n        let event = new CustomEvent(Constants.SURVEY_DATA_EVENT + \"-\" + self.surveyToken, { detail: JSON.parse(JSON.stringify(surveyData)) });\r\n\r\n        document.dispatchEvent(event);\r\n        if (!self.config.skipWelcomePage) {\r\n          self.dom.hideLoader();\r\n        }\r\n        if (self.surveyData) {\r\n          self.initSurveyQuestions();\r\n        }\r\n      } else {\r\n        self.tracking.trackEvent('Expired Survey', {\r\n          token: self.tracking.token,\r\n          data: {\r\n            name: null,\r\n            action: null\r\n          }\r\n        }, null, null);\r\n        self.survey.displayWelcomeQuestion(\"The Survey has been expired\");\r\n      }\r\n\r\n    };\r\n    let errorcb = null;\r\n    this.survey.fetchQuestions(successcb, errorcb);\r\n  }\r\n\r\n\r\n  initSurvey() {\r\n    //if survey already run don't run?\r\n    //if default trigger initiated and survey already run then don't run.\r\n    let self: Survey = this;\r\n\r\n    self.surveyRunning = true;\r\n    self.dom = new DomSurvey(this);\r\n    self.dom.setTheme(self.config.brandColor, this.config.keepAlive ? this.config.keepAlive : 0);\r\n    self.config.language = \"default\";\r\n    if (self.surveyToken && decodeURIComponent(self.surveyToken).trim() !== '' && !self.config.skipWelcomePage) {\r\n      self.survey.displayWelcomeQuestion();\r\n    } else if (self.config.skipWelcomePage) {\r\n      let onImpressionEvent = new CustomEvent(Constants.SURVEY_IMPRESSION_EVENT + \"-\" + this.surveyToken);\r\n      document.dispatchEvent(onImpressionEvent);\r\n      self.dom.startSurvey();\r\n      self.survey.setCoolDownPeriod(self.config, self.surveyToken);\r\n      this.surveyStartTime = new Date();\r\n      self.survey.acceptAnswers();\r\n    }\r\n    self.dom.setupListeners();\r\n  }\r\n\r\n  initSurveyQuestions() {\r\n    let self: Survey = this;\r\n    self.survey.attachSurvey(this.surveyData);\r\n    self.config.language = \"default\";\r\n\r\n    this.dom.initSurveyDom();\r\n    let onSurveyStartEvent = new CustomEvent(Constants.SURVEY_START_EVENT + \"-\" + this.surveyToken);\r\n    document.dispatchEvent(onSurveyStartEvent);\r\n  }\r\n\r\n  public on(type: string, callback: any) {\r\n    document.addEventListener(type + \"-\" + this.surveyToken, function (e: any) {\r\n      callback(e.detail);\r\n    });\r\n  }\r\n\r\n  public show() {\r\n    //do show and hide things.\r\n    SurveyManager.setSurveyRunning();\r\n    //show survey\r\n    this.setupSurvey();\r\n\r\n  }\r\n\r\n  public hide() {\r\n    SurveyManager.unsetSurveyRunning();\r\n    this.survey.destroy();\r\n    this.tracking.trackEvent('Survey Destroyed', {\r\n      token: this.tracking.token,\r\n      data: {\r\n        name: (<any>new Date() - (<any>window).globalSurveyStartTime) + 's',\r\n        action: null\r\n      }\r\n    }, null, null);\r\n  }\r\n\r\n  public destroy() {\r\n    //remove all listeners?\r\n    SurveyManager.unsetSurveyRunning();\r\n    this.survey.destroy();\r\n  }\r\n\r\n\r\n  public prefill(restOfArgs: PrefillsBatchOrSingle, type: PrefillType) {\r\n    let prefillObject;\r\n    if (typeof restOfArgs[0] !== 'object') {\r\n      prefillObject = {\r\n        [<string>restOfArgs[0]]: restOfArgs[1]\r\n      };\r\n    } else {\r\n      prefillObject = restOfArgs[0];\r\n    }\r\n    //save this in this.surveyHandler\r\n    if (type === 'DIRECT') {\r\n      this.survey.fillPrefillDirect(prefillObject);\r\n    } else if (type === 'BY_TAG') {\r\n      this.survey.fillPrefill(prefillObject);\r\n    } else if (type === 'BY_NOTE') {\r\n      this.survey.fillPrefillByNote(prefillObject);\r\n    }\r\n\r\n    // map prefills from prefill buckets to prefillQueue\r\n    this.survey.filterQuestions();\r\n  }\r\n\r\n\r\n  public trigger(type: string, target: any) {\r\n    let self: Survey = this;\r\n    switch (type) {\r\n      case 'click':\r\n        // console.log( 'enable click trigger ##' )\r\n        this.triggers.enableClickTrigger(target, function () {\r\n          SurveyManager.addSurvey(self.surveyToken);\r\n\r\n        });\r\n        break;\r\n      case 'page-count':\r\n        let count: number = parseInt(target);\r\n        this.triggers.enablePageCountTrigger(count);\r\n\r\n        break;\r\n      case 'site-count':\r\n        let count2: number = parseInt(target);\r\n        this.triggers.enableSiteCountTrigger(count2);\r\n        break;\r\n      case 'page-time':\r\n        this.triggers.enablePageTimeTrigger(parseInt(target));\r\n        break;\r\n      case 'site-time':\r\n        this.triggers.enableSiteTimeTrigger(parseInt(target));\r\n        break;\r\n      case 'url-match':\r\n        this.triggers.enablePopUpByURLPatternTrigger(target);\r\n        break;\r\n      case 'url-not-match':\r\n        this.triggers.enablePopUpByNotURLPatternTrigger(target);\r\n        break;\r\n      case 'utm-match':\r\n        this.triggers.enablePopUpByUTMPatternTrigger(target);\r\n        break;\r\n      case 'scroll-pixels':\r\n        this.triggers.enableScrollPixelsTrigger(parseInt(target));\r\n        break;\r\n      case 'launch':\r\n        SurveyManager.addSurvey(self.surveyToken);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nexport { Survey };","// import 'whatwg-fetch';\r\nimport { Config } from \"./Config\";\r\nimport { DisplayConfig } from \"./interfaces/DisplayConfig\";\r\nimport { RequestHelper } from \"./helpers/Request\";\r\nimport { templates } from \"./helpers/templates\";\r\nimport { DomUtilities } from \"./helpers/dom/DomUtilities\";\r\nimport { DomSurvey } from \"./helpers/dom/DomSurvey\";\r\nimport { ConditionalTextFilter } from \"./helpers/filters/ConditionalTextFilter\";\r\nimport { Constants } from \"./Constants\";\r\nimport { LanguageTextFilter } from \"./helpers/filters/LanguageTextFilter\";\r\nimport { Select } from \"./helpers/dom/Select\";\r\nimport { Cookie } from \"./helpers/Cookie\";\r\nimport { ConditionalFlowFilter } from \"./helpers/filters/ConditionalFlowFilter\";\r\nimport { PrefillDictionary } from \"./types\";\r\nimport { start } from \"repl\";\r\n\r\nclass SurveyHandler {\r\n  surveyToken: string;\r\n  surveyData: any;\r\n  questions: any;\r\n  prefillQuestions: any;\r\n  questionsToDisplay: any;\r\n  randomNumber: Number;\r\n  welcomeQuestion: any;\r\n  welcomeQuestionButtonText: any;\r\n  prefillResponses: any;\r\n  prefillDirect: any;\r\n  prefillWithTags: any;\r\n  prefillWithNote: any;\r\n  questionResponses: any;\r\n  answers: any = {};\r\n  surveyAnswers: any = {};\r\n  util: DomUtilities;\r\n  dom: DomSurvey;\r\n  displayThankYouCb: any;\r\n  destroySurveyCb: any;\r\n  acceptAnswersCb: any;\r\n  surveyDisplay: DisplayConfig;\r\n  currentQuestion: any;\r\n  conditionalQuestions: any;\r\n  ccsdk: any;\r\n  welcomeInterval: any;\r\n  welcomeQuestionDisplayTime: any;\r\n  domListeners: any;\r\n  languageSelect: any;\r\n  private _prefillsPartiallyPosted = false;\r\n  // isPartialAvailable : Boolean;\r\n  retryPrefills = 3;\r\n\r\n  constructor(ccsdk) {\r\n    this.surveyToken = ccsdk.surveyToken;\r\n    this.surveyData = {};\r\n    this.surveyDisplay = {\r\n      position: \"\",\r\n      surveyPosition: \"\",\r\n      welcomePopupAnimation: \"\",\r\n      surveyPopupAnimation: \"\"\r\n    };\r\n    this.ccsdk = ccsdk;\r\n    this.domListeners = [];\r\n    this.questions = [];\r\n    this.questionsToDisplay = [];\r\n    this.prefillQuestions = [];\r\n    this.conditionalQuestions = [];\r\n    this.prefillResponses = [];\r\n    this.prefillWithTags = {};\r\n    this.prefillWithNote = {};\r\n    this.prefillDirect = {};\r\n    this.answers = {};\r\n    this.util = new DomUtilities();\r\n    this.dom = ccsdk.dom;\r\n    this.displayThankYouCb = (e: any) => {\r\n      //perform final post\r\n      this.finalPost(null, null);\r\n      if (this.ccsdk && this.ccsdk.tracking) {\r\n        this.ccsdk.tracking.trackEvent(\r\n          \"Completed Survey\",\r\n          {\r\n            token: this.ccsdk.tracking.token,\r\n            data: {\r\n              name: null,\r\n              action: null\r\n            }\r\n          },\r\n          null,\r\n          null\r\n        );\r\n      }\r\n\r\n      let thankyouHtml: any = templates.thankyou;\r\n      // thankyouHtml = thankyouHtml.replace(\"{{question}}\", this.surveyData.thankyouText);\r\n      // thankyouHtml = thankyouHtml.replace(\"{{question}}\", LanguageTextFilter.translateMessages(this, \"thankyouText\"));\r\n      let thankyouText = this.ccsdk.config.thankyouText\r\n        ? this.ccsdk.config.thankyouText\r\n        : this.surveyData.thankyouText\r\n        ? this.surveyData.thankyouText\r\n        : \"Thank You\";\r\n      let startText = this.ccsdk.config.startButtonText\r\n        ? this.ccsdk.config.startButtonText\r\n        : \"Start\";\r\n      thankyouHtml = thankyouHtml.replace(\"{{question}}\", thankyouText);\r\n      thankyouHtml = thankyouHtml.replace(\"{{button}}\", startText);\r\n      thankyouHtml = thankyouHtml.replace(\r\n        \"{{branding}}\",\r\n        this.surveyData.branding &&\r\n          this.surveyData.branding.toUpperCase() === \"NONE\"\r\n          ? \"no-branding\"\r\n          : \"full-branding\"\r\n      );\r\n      this.ccsdk.dom.replaceInQuestionsContainer(thankyouHtml);\r\n      //TODO : Fix this Add class not working???\r\n      let thankyouContainer: any = this.util.get(\"#cc-thankyou-container\");\r\n      (window as any).ccsdkDebug ? console.log(thankyouContainer) : \"\";\r\n      this.util.addClass(thankyouContainer[0], \"show-thankyou-slide\");\r\n      let onSurveyEndEvent = new CustomEvent(\r\n        Constants.SURVEY_END_EVENT + \"-\" + this.ccsdk.surveyToken\r\n      );\r\n      document.dispatchEvent(onSurveyEndEvent);\r\n      //set done cookie for 30 days.\r\n      Cookie.set(this.surveyToken + \"-finish\", \"true\", 30, \"/\");\r\n      setTimeout(() => {\r\n        this.ccsdk.dom.destroyListeners();\r\n        this.destroy();\r\n      }, 2000);\r\n    };\r\n\r\n    this.destroySurveyCb = (e: any) => {\r\n      let self: SurveyHandler = this;\r\n      //send end survey event.\r\n      let onSurveyEndEvent = new CustomEvent(\r\n        Constants.SURVEY_END_EVENT + \"-\" + this.ccsdk.surveyToken\r\n      );\r\n      document.dispatchEvent(onSurveyEndEvent);\r\n      self.destroy();\r\n    };\r\n\r\n    this.acceptAnswersCb = (e: any) => {\r\n      let self: SurveyHandler = this;\r\n      // (window as any).ccsdkDebug?console.log(self):'';\r\n      // (window as any).ccsdkDebug?console.log('question answered',e:'')\r\n      let data: any = <any>e.detail;\r\n      let response: any = {};\r\n      response.questionId = data.questionId;\r\n\r\n      switch (data.type) {\r\n        case \"scale\":\r\n          response.text = null;\r\n          response.number = Number(data.data.number);\r\n          self.postPartialAnswer(data.index, response, false, null, null);\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case \"nps\":\r\n          response.text = null;\r\n          response.number = Number(data.data.number);\r\n          self.postPartialAnswer(data.index, response, false, null, null);\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case \"radio\":\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          // response.number = Number(data.data.number);\r\n          self.postPartialAnswer(data.index, response, false, null, null);\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case \"radioImage\":\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          self.postPartialAnswer(data.index, response, false, null, null);\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case \"smile\":\r\n          response.text = null;\r\n          response.number = Number(data.data.number);\r\n          self.postPartialAnswer(data.index, response, false, null, null);\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case \"star\":\r\n          response.text = null;\r\n          response.number = Number(data.data.number);\r\n          self.postPartialAnswer(data.index, response, false, null, null);\r\n          self.ccsdk.dom.domSelectElements();\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case \"multiline\":\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer(data.index, response, false, null, null);\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex(data.index);\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case \"singleline\":\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer(data.index, response, false, null, null);\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex(data.index);\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case \"number\":\r\n          response.text = null;\r\n          response.number = Number(data.data.number);\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer(data.index, response, false, null, null);\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex(data.index);\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case \"checkbox\":\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer(data.index, response, false, null, null);\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex(data.index);\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case \"select\":\r\n          response.text = data.data.text;\r\n          response.number = null;\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer(data.index, response, false, null, null);\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex(data.index);\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n        case \"slider\":\r\n          response.text = data.data.text;\r\n          response.number = Number(data.data.number);\r\n          // (window as any).ccsdkDebug?console.log(data):'';\r\n          self.postPartialAnswer(data.index, response, false, null, null);\r\n          self.ccsdk.dom.domSelectElements();\r\n          self.ccsdk.dom.setQIndex(data.index);\r\n          // self.ccsdk.dom.nextQuestion();\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    };\r\n  }\r\n\r\n  fetchQuestions(successcb, errorcb) {\r\n    this.randomNumber = parseInt(String(Math.random() * 1000));\r\n    let surveyUrl = Config.SURVEY_BY_TOKEN.replace(\r\n      \"{token}\",\r\n      \"\" + this.surveyToken\r\n    );\r\n    // surveyUrl = surveyUrl.replace(\"{tabletId}\", \"\" + this.randomNumber);\r\n    surveyUrl = Config.API_URL + surveyUrl;\r\n    RequestHelper.get(surveyUrl, successcb, errorcb);\r\n\r\n    // (window as any).ccsdkDebug?console.log(data):'';\r\n    // this.surveyData = data.then(function();\r\n    // (window as any).ccsdkDebug?console.log(this.surveyData):'';\r\n  }\r\n\r\n  removeAnswer(questionId) {\r\n    delete this.answers[questionId];\r\n    delete this.surveyAnswers[questionId];\r\n  }\r\n\r\n  attachSurvey(surveyData: any) {\r\n    this.surveyData = surveyData;\r\n    this.setupPrefill();\r\n    this.setupSurveyContainer();\r\n    //clean survey\r\n    this.cleanSurvey();\r\n    this.displayQuestions();\r\n    this.displayThankYou();\r\n    this.destroySurvey();\r\n  }\r\n\r\n  setupPrefill() {\r\n    if (\r\n      this.surveyData &&\r\n      this.surveyData.preFill &&\r\n      this.surveyData.preFill.length > 0\r\n    ) {\r\n      this.surveyData.preFill.map(response => {\r\n        this.fillPrefillQuestionObject(response.questionId, response);\r\n      });\r\n    }\r\n  }\r\n\r\n  cleanSurvey() {\r\n    this.questionsToDisplay = [];\r\n    this.answers = {};\r\n    this.surveyAnswers = {};\r\n    this.conditionalQuestions = [];\r\n  }\r\n\r\n  setupSurveyContainer() {\r\n    let surveyHtml: any = templates.question_survey;\r\n    surveyHtml = surveyHtml.replace(\"{{surveyToken}}\", this.surveyToken);\r\n    surveyHtml = surveyHtml.replace(\r\n      \"{{animation}}\",\r\n      this.surveyDisplay.surveyPopupAnimation\r\n    );\r\n    surveyHtml = surveyHtml.replace(\r\n      /{{location}}/g,\r\n      this.surveyDisplay.surveyPosition\r\n    );\r\n    this.ccsdk.dom.appendInBody(surveyHtml);\r\n  }\r\n\r\n  displayQuestionSelector() {}\r\n\r\n  displayWelcomeQuestion(warningWelcomeText?: string) {\r\n    //call this with true when welcome container is clicked.\r\n    // this.ccsdk.addThrottlingEntries(false);\r\n    let onSurveyImpressionEvent = new CustomEvent(\r\n      Constants.SURVEY_IMPRESSION_EVENT + \"-\" + this.surveyToken\r\n    );\r\n    document.dispatchEvent(onSurveyImpressionEvent);\r\n    this.ccsdk.surveyStartTime = new Date();\r\n    let self = this;\r\n    let welcomeHtml: any = templates.question_start;\r\n    welcomeHtml = welcomeHtml.replace(\"{{surveyToken}}\", this.surveyToken);\r\n    // welcomeHtml = welcomeHtml.replace(\"{{question}}\", this.surveyData.welcomeText);\r\n    let welcomeText = this.ccsdk.config.welcomeText\r\n      ? this.ccsdk.config.welcomeText\r\n      : \"Welcome\";\r\n    // welcomeHtml = welcomeHtml.replace(\"{{question}}\", LanguageTextFilter.translateMessages(this, \"welcomeText\"));\r\n    let startText = this.ccsdk.config.startButtonText\r\n      ? this.ccsdk.config.startButtonText\r\n      : \"Start\";\r\n    if (warningWelcomeText) {\r\n      document.getElementById(this.surveyToken + \"-welcome\").remove();\r\n      welcomeHtml = welcomeHtml.replace(\"{{question}}\", warningWelcomeText);\r\n      welcomeHtml = welcomeHtml.replace(\"{{button}}\", \"Close\");\r\n      welcomeHtml = welcomeHtml.replace(\"{{action}}\", \"button-close\");\r\n    } else {\r\n      welcomeHtml = welcomeHtml.replace(\"{{question}}\", welcomeText);\r\n      welcomeHtml = welcomeHtml.replace(\"{{button}}\", startText);\r\n      welcomeHtml = welcomeHtml.replace(\"{{action}}\", \"survey-start\");\r\n    }\r\n    welcomeHtml = welcomeHtml.replace(\r\n      \"{{location}}\",\r\n      this.surveyDisplay.position\r\n    );\r\n    welcomeHtml = welcomeHtml.replace(\r\n      \"{{animation}}\",\r\n      this.surveyDisplay.welcomePopupAnimation\r\n    );\r\n    // (window as any).ccsdkDebug?console.log(\"Appending in body\"):'';\r\n    this.ccsdk.dom.appendInBody(welcomeHtml);\r\n    this.ccsdk.dom.showWelcomeContainer();\r\n    this.setCoolDownPeriod(this.ccsdk.config, this.surveyToken);\r\n    if (\r\n      typeof this.ccsdk.config.keepAlive != undefined &&\r\n      this.ccsdk.config.keepAlive > 0\r\n    ) {\r\n      this.welcomeQuestionDisplayTime = new Date();\r\n      this.welcomeInterval = setInterval(() => {\r\n        self.checkWelcomeQuestionDisplay(self.ccsdk.config.keepAlive);\r\n      }, 1000);\r\n    }\r\n\r\n    this.acceptAnswers();\r\n    // self.survey.displayLanguageSelector();\r\n  }\r\n\r\n  setCoolDownPeriod(campaign, surveyToken) {\r\n    if (campaign && campaign.coolDownPeriod && campaign.coolDownPeriod != 0) {\r\n      Cookie.set(\r\n        surveyToken + \"-coolDown\",\r\n        \"true\",\r\n        campaign.coolDownPeriod / 86400,\r\n        \"/\"\r\n      );\r\n    } else {\r\n      Cookie.set(surveyToken + \"-coolDown\", \"true\", 1, \"/\");\r\n    }\r\n  }\r\n\r\n  checkWelcomeQuestionDisplay(keepAlive) {\r\n    let self = this;\r\n    let now = new Date();\r\n    if (keepAlive) {\r\n      // console.log((now.getTime() - this.welcomeQuestionDisplayTime.getTime()) / 1000);\r\n      if (\r\n        keepAlive <=\r\n        (now.getTime() - this.welcomeQuestionDisplayTime.getTime()) / 1000\r\n      ) {\r\n        self.killWelcomeQuestion();\r\n      }\r\n    }\r\n  }\r\n\r\n  killWelcomeQuestion() {\r\n    this.destroy();\r\n    clearInterval(this.welcomeInterval);\r\n  }\r\n  cancelKillWelcomeQuestion() {\r\n    clearInterval(this.welcomeInterval);\r\n  }\r\n\r\n  displayLanguageSelector() {\r\n    let self = this;\r\n    let options1: string;\r\n    let qId = \"languageSelector\";\r\n    let cTemplate1 = templates.language_selector;\r\n    options1 = this.util.generateLanguageSelectOptions([\"default\"]);\r\n    if (this.surveyData.translated) {\r\n      options1 = this.util.generateLanguageSelectOptions(\r\n        [\"default\"].concat(Object.keys(this.surveyData.translated))\r\n      );\r\n    }\r\n    cTemplate1 = cTemplate1.replace(/{{questionId}}/g, qId);\r\n    cTemplate1 = cTemplate1.replace(\"{{options}}\", options1);\r\n    cTemplate1 = cTemplate1.replace(\"{{requiredLabel}}\", true ? \"*\" : \"\");\r\n    this.ccsdk.dom.replaceInQuestionsContainer(cTemplate1);\r\n    let $questionContainer = document.querySelectorAll(\r\n      \".cc-questions-container\"\r\n    );\r\n    let $body = document.getElementsByTagName(\"body\")[0];\r\n\r\n    this.util.addClass($questionContainer[0].firstChild, \"show-slide\");\r\n    this.languageSelect = new Select(qId);\r\n    let submitBtn = document.querySelectorAll(\".submit-icon\");\r\n    this.util.removeClassAll(submitBtn, \"act-cc-button-next\");\r\n    this.util.addClassAll(submitBtn, \"act-cc-button-lang-next\");\r\n    if (this.languageSelect) {\r\n      this.languageSelect.destroyListeners();\r\n    }\r\n    this.languageSelect.init(qId);\r\n    let selectRes = \"\";\r\n    if (\r\n      this.util.checkIfListenerExists(\r\n        \"#\" + qId + \" .cc-select-options .cc-select-option\",\r\n        this.domListeners\r\n      )\r\n    ) {\r\n      // return;\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"display language select - previous listeners exists\")\r\n        : \"\";\r\n      this.removePrevListener(\r\n        \"#\" + qId + \" .cc-select-options .cc-select-option\"\r\n      );\r\n    }\r\n    let ref = this.util.initListener(\r\n      \"click\",\r\n      \"#\" + qId + \" .cc-select-options .cc-select-option\",\r\n      function() {\r\n        self.ccsdk.debug ? console.log(\"languageSelectOption\") : \"\";\r\n        selectRes = document.querySelectorAll(\r\n          \"#\" + qId + \" .cc-select-trigger\"\r\n        )[0].innerHTML;\r\n      }\r\n    );\r\n    this.domListeners.push(ref);\r\n    ref.internalHandler = this.util.listener($body, ref.type, ref.id, ref.cb);\r\n\r\n    let languageSelect2 = this.util.initListener(\r\n      \"click\",\r\n      \".act-cc-button-lang-next\",\r\n      function() {\r\n        self.ccsdk.debug ? console.log(\"languageNext\") : \"\";\r\n        self.ccsdk.config.language = \"default\";\r\n        self.ccsdk.config.language = selectRes; //language selection from menu then show first question\r\n        //set config rtl or ltr\r\n\r\n        var languageQuestion = self.surveyData.questions.find(\r\n          x => x.questionTags && x.questionTags.indexOf(\"cc_language\") !== -1\r\n        );\r\n\r\n        if (languageQuestion) {\r\n          self.fillPrefillQuestion(languageQuestion.id, selectRes, \"text\");\r\n        }\r\n        let isRTL = /[\\u0600-\\u06FF]/.test(selectRes);\r\n        self.ccsdk.config.textDirection = isRTL ? \"rtl\" : \"ltr\";\r\n        self.ccsdk.setHtmlTextDirection();\r\n        self.util.removeClassAll(submitBtn, \"act-cc-button-lang-next\");\r\n        self.util.addClassAll(submitBtn, \"act-cc-button-next\");\r\n        self.ccsdk.dom.loadFirstQuestion(); // this.loadFirstQuestion();\r\n        // self.postPrefillPartialAnswer( false, null, null );\r\n      }\r\n    );\r\n    this.domListeners.push(languageSelect2);\r\n\r\n    languageSelect2.internalHandler = this.util.listener(\r\n      $body,\r\n      languageSelect2.type,\r\n      languageSelect2.id,\r\n      languageSelect2.cb\r\n    );\r\n\r\n    // this.util.addClass(thankyouContainer[0], 'show-thankyou-slide');\r\n\r\n    // this.ccsdk.dom.appendInBody(cTemplate1);\r\n    // this.ccsdk.dom.showLanguageSelector();\r\n    (window as any).ccsdkDebug ? console.log(cTemplate1) : \"\";\r\n  }\r\n\r\n  displayThankYou() {\r\n    let self: SurveyHandler = this;\r\n    document.addEventListener(\"ccdone\", this.displayThankYouCb);\r\n  }\r\n\r\n  displayQuestions() {\r\n    //check question is supported, based on question types.\r\n    //filter pre fill questions.\r\n    this.questions = this.surveyData.questions;\r\n\r\n    // this.questionsToDisplay = (this.surveyData.questions as any[]).filter(this.filterQuestions);\r\n    this.filterQuestions();\r\n\r\n    let ccSurvey: any;\r\n    ccSurvey = document.getElementsByClassName(\"cc-questions-container\");\r\n    // ccSurvey = ccSurvey[0];\r\n    let surveyObject = ccSurvey[0];\r\n    // (window as any).ccsdkDebug?console.log(this.questionsToDisplay):'';\r\n    //chec\r\n    //for now just do 1st question.\r\n    for (let question of this.questionsToDisplay) {\r\n      if (this.checkConditionals(question)) {\r\n        let compiledTemplate = this.compileTemplate(question);\r\n        question.compiledTemplate = compiledTemplate;\r\n        // surveyObject.innerHTML += compiledTemplate;\r\n        //register handlers for onclick?\r\n      } else {\r\n        if (this.isPrefillQuestion(question)) {\r\n          this.prefillQuestions.push(question);\r\n        }\r\n      }\r\n      //else don't display it.\r\n    }\r\n    // (window as any).ccsdkDebug?console.log(surveyObject.innerHTML):'';\r\n    // this.postPartialAnswer(this.questionsToDisplay[0], \"test\");\r\n  }\r\n\r\n  getSurveyQuestions(): any {\r\n    return this.questionsToDisplay;\r\n  }\r\n\r\n  getAnswerForQuestionId(questionId: string) {\r\n    let answer = this.surveyAnswers[questionId];\r\n    if (typeof answer === \"undefined\") {\r\n      for (let response of this.prefillResponses) {\r\n        if (response.questionId == questionId) {\r\n          return response;\r\n        }\r\n      }\r\n    }\r\n    return this.surveyAnswers[questionId];\r\n  }\r\n\r\n  acceptAnswers() {\r\n    let self: SurveyHandler = this;\r\n    // (window as any).ccsdkDebug?console.log('add question answered listener':'')\r\n    document.addEventListener(\"q-answered\", this.acceptAnswersCb);\r\n  }\r\n\r\n  fillPrefillQuestionObject(id: any, response: any) {\r\n    let question: any = this.getQuestionById(id);\r\n    let responseStored = this.getPrefillResponseById(id);\r\n    if (responseStored != null) {\r\n      this.updatePrefillResponseById(id, response);\r\n    } else {\r\n      this.prefillResponses.push(response);\r\n    }\r\n  }\r\n\r\n  fillPrefill(prefillObj: PrefillDictionary) {\r\n    Object.keys(prefillObj).map(x => {\r\n      this.prefillWithTags[x.toLowerCase()] = prefillObj[x];\r\n    });\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"prefillByTag\", this.prefillWithTags)\r\n      : \"\";\r\n\r\n    if (this._prefillsPartiallyPosted) {\r\n      this.postRecentPrefills();\r\n    }\r\n  }\r\n\r\n  fillPrefillByNote(prefillObj: PrefillDictionary) {\r\n    Object.keys(prefillObj).map(x => {\r\n      this.prefillWithNote[x.toLowerCase()] = prefillObj[x];\r\n    });\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"prefillByNote\", this.prefillWithNote)\r\n      : \"\";\r\n\r\n    if (this._prefillsPartiallyPosted) {\r\n      this.postRecentPrefills();\r\n    }\r\n  }\r\n\r\n  fillPrefillDirect(prefillObj: PrefillDictionary) {\r\n    Object.keys(prefillObj).forEach(x => {\r\n      this.prefillDirect[x] = prefillObj[x];\r\n    });\r\n\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"prefillDirect\", this.prefillDirect)\r\n      : \"\";\r\n\r\n    if (this._prefillsPartiallyPosted) {\r\n      this.postRecentPrefills();\r\n    }\r\n  }\r\n\r\n  // prepares for partial posting in the next chance\r\n  postRecentPrefills() {\r\n    // clear the post partial flag\r\n    this._prefillsPartiallyPosted = false;\r\n\r\n    this.filterQuestions();\r\n  }\r\n\r\n  fillPrefillQuestion(id: any, value: any, valueType: string) {\r\n    let question: any = this.getQuestionById(id);\r\n    let response: any;\r\n    let responseStored = this.getPrefillResponseById(id);\r\n    if (responseStored != null) {\r\n      response = responseStored;\r\n    } else {\r\n      response = {\r\n        questionId: question.id,\r\n        questionText: question.text,\r\n        textInput: null,\r\n        numberInput: null\r\n      };\r\n    }\r\n    valueType = this.getAnswerTypeFromDisplayType(question.displayType);\r\n\r\n    if (valueType.toLowerCase() == \"number\") {\r\n      response.numberInput = value;\r\n    }\r\n    if (valueType.toLowerCase() == \"text\") {\r\n      response.textInput = value;\r\n    }\r\n    if (responseStored != null) {\r\n      this.updatePrefillResponseById(id, response);\r\n    } else {\r\n      this.prefillResponses.push(response);\r\n    }\r\n  }\r\n\r\n  postPrefillPartialAnswer(fullSubmission = false, successcb, errorcb) {\r\n    if (this._prefillsPartiallyPosted) {\r\n      return;\r\n    }\r\n    this._prefillsPartiallyPosted = true;\r\n    if (!this.surveyData.partialResponseId) {\r\n      return;\r\n    }\r\n    let surveyPartialUrl = Config.SURVEY_PARTIAL_RESPONSE.replace(\r\n      \"{id}\",\r\n      this.surveyData.partialResponseId\r\n    );\r\n    surveyPartialUrl = surveyPartialUrl.replace(\"{complete}\", \"false\");\r\n    surveyPartialUrl = Config.API_URL + surveyPartialUrl;\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"Posting Prefill Responses to Server\")\r\n      : \"\";\r\n    (window as any).ccsdkDebug ? console.log(this.prefillResponses) : \"\";\r\n\r\n    if (!this.surveyData.partialResponseId) {\r\n      // run successCB if there is one.\r\n      if (successcb) {\r\n        successcb();\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (\r\n      typeof this.prefillResponses === \"undefined\" ||\r\n      this.prefillResponses.length <= 0\r\n    ) {\r\n      this.filterQuestions();\r\n    }\r\n\r\n    if (this.prefillResponses.length !== 0) {\r\n      RequestHelper.postWithHeaders(\r\n        surveyPartialUrl,\r\n        this.prefillResponses,\r\n        {},\r\n        successcb,\r\n        errorcb\r\n      );\r\n    }\r\n  }\r\n\r\n  updatePrefillResponseById(id: any, resp: any) {\r\n    for (let response of this.prefillResponses) {\r\n      if (response.questionId == id) {\r\n        response = resp;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  getPrefillResponseById(id: any) {\r\n    return (\r\n      this.prefillResponses && this.prefillResponses.find(x => x.id === id)\r\n    );\r\n  }\r\n\r\n  getQuestionById(id: any) {\r\n    return this.questions.find(x => x.id === id);\r\n  }\r\n\r\n  postPrefillPartialAnswerWithRetry(complete = false) {\r\n    this.postPrefillPartialAnswer(\r\n      complete,\r\n      null,\r\n      this.retryPrefills > 0\r\n        ? () => {\r\n            this.retryPrefills -= 1;\r\n            this._prefillsPartiallyPosted = false;\r\n            this.postPrefillPartialAnswerWithRetry(complete);\r\n          }\r\n        : null\r\n    );\r\n  }\r\n\r\n  postPartialAnswer(\r\n    index: any,\r\n    response: any,\r\n    complete = false,\r\n    successcb,\r\n    errorcb\r\n  ) {\r\n    // this.postPrefillPartialAnswerWithRetry(complete);\r\n\r\n    let question: any = this.questionsToDisplay[index];\r\n    if (!question) {\r\n      return;\r\n    }\r\n    let data: any = {\r\n      questionId: question.id,\r\n      questionText: question.text,\r\n      textInput: response.text,\r\n      numberInput: response.number\r\n    };\r\n\r\n    let surveyPartialUrl = Config.SURVEY_PARTIAL_RESPONSE.replace(\r\n      \"{id}\",\r\n      this.surveyData.partialResponseId\r\n    );\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\r\n          \"partial response\",\r\n          question.id ==\r\n            this.questionsToDisplay[this.questionsToDisplay.length - 1].id\r\n        )\r\n      : \"\";\r\n    surveyPartialUrl = surveyPartialUrl.replace(\"{complete}\", `${complete}`);\r\n    surveyPartialUrl = Config.API_URL + surveyPartialUrl;\r\n\r\n    //add partial answer to main answer\r\n    this.surveyAnswers[question.id] = data;\r\n\r\n    data = [data];\r\n\r\n    let onSurveyAnswerEvent = new CustomEvent(\r\n      Constants.SURVEY_ANSWER_EVENT + \"-\" + this.surveyToken\r\n    );\r\n    document.dispatchEvent(onSurveyAnswerEvent);\r\n\r\n    if (!this.surveyData.partialResponseId) {\r\n      // run success callback and return\r\n      if (successcb) {\r\n        successcb();\r\n      }\r\n      return;\r\n    }\r\n    // console.log(data);\r\n    if (this._prefillsPartiallyPosted) {\r\n      RequestHelper.postWithHeaders(\r\n        surveyPartialUrl,\r\n        data,\r\n        {},\r\n        successcb,\r\n        errorcb\r\n      );\r\n    } else {\r\n      if (\r\n        typeof this.prefillResponses === \"undefined\" ||\r\n        this.prefillResponses.length <= 0\r\n      ) {\r\n        this.filterQuestions();\r\n      }\r\n      let responses = [...this.prefillResponses, ...data];\r\n      this._prefillsPartiallyPosted = true;\r\n      if (this.prefillResponses.length !== 0) {\r\n        RequestHelper.postWithHeaders(\r\n          surveyPartialUrl,\r\n          responses,\r\n          {},\r\n          successcb,\r\n          errorcb\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  finalPost(successcb, errorcb) {\r\n    //last question\r\n    let postSurveyFinalUrl = Config.POST_SURVEY_FINAL.replace(\r\n      \"{tokenId}\",\r\n      this.ccsdk.surveyToken\r\n    );\r\n    postSurveyFinalUrl = Config.API_URL + postSurveyFinalUrl;\r\n    let answersAll = [];\r\n    // hack for partial flushing\r\n    let lastAnswer;\r\n\r\n    if (Object.keys(this.surveyAnswers).length == 0) {\r\n      return;\r\n    }\r\n    for (let answer in this.surveyAnswers) {\r\n      let response = this.surveyAnswers[answer];\r\n      if (\r\n        response &&\r\n        (response.textInput !== null || response.numberInput !== null)\r\n      ) {\r\n        answersAll.push(response);\r\n        lastAnswer = response;\r\n      }\r\n    }\r\n    for (let answer in this.prefillResponses) {\r\n      answersAll.push(this.prefillResponses[answer]);\r\n    }\r\n\r\n    answersAll = answersAll.filter(x => x && typeof x === \"object\");\r\n\r\n    let timeAtPost = new Date().getTime();\r\n    let finalData = {\r\n      id: this.ccsdk.surveyToken,\r\n      user: this.ccsdk.config.username,\r\n      locationId: null,\r\n      responses: answersAll,\r\n      nps: 0,\r\n      surveyClient: Constants.SURVEY_CLIENT,\r\n      responseDuration: Math.floor(\r\n        (timeAtPost - this.ccsdk.surveyStartTime.getTime()) / 1000\r\n      ),\r\n      responseDateTime: new Date()\r\n    };\r\n    if (lastAnswer) {\r\n      let _lastAnswer = {\r\n        text: lastAnswer.textInput,\r\n        number: lastAnswer.numberInput\r\n      };\r\n      this.postPartialAnswer(\r\n        this.questionsToDisplay.length - 1,\r\n        _lastAnswer,\r\n        true,\r\n        null,\r\n        null\r\n      );\r\n    }\r\n\r\n    if (finalData.responses && finalData.responses.length > 0) {\r\n      RequestHelper.postWithHeaders(\r\n        postSurveyFinalUrl,\r\n        finalData,\r\n        {},\r\n        successcb,\r\n        errorcb\r\n      );\r\n    } else {\r\n      successcb();\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * check if conditions are satsified which are required to display question?\r\n   *\r\n   * @param {any} question\r\n   * @memberof Survey\r\n   */\r\n  checkConditionals(question: any) {\r\n    return true;\r\n  }\r\n\r\n  compileTemplate(question: any) {\r\n    let self: SurveyHandler = this;\r\n    //get question type\r\n    let questionTemplate;\r\n    // (window as any).ccsdkDebug?console.log(question):'';\r\n    if (question != \"undefined\") {\r\n      switch (question.displayType) {\r\n        case \"Slider\":\r\n          let displayLegend = question.displayLegend;\r\n          let opt: any = question.multiSelect[0].split(\"-\");\r\n          let optMin: any = opt[0].split(\";\");\r\n          let optMax: any = opt[1].split(\";\");\r\n          //get text question template and compile it.\r\n          questionTemplate = templates.question_slider;\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{question}}\",\r\n            ConditionalTextFilter.filterText(this, question)\r\n          );\r\n          questionTemplate = questionTemplate.replace(/{{min}}/g, optMin[0]);\r\n          if (displayLegend[0]) {\r\n            questionTemplate = questionTemplate.replace(\r\n              /{{minLabel}}/g,\r\n              displayLegend[0] + \"-\"\r\n            );\r\n          } else {\r\n            questionTemplate = questionTemplate.replace(/{{minLabel}}/g, \"\");\r\n          }\r\n          questionTemplate = questionTemplate.replace(/{{max}}/g, optMax[0]);\r\n          if (displayLegend[1]) {\r\n            questionTemplate = questionTemplate.replace(\r\n              /{{maxLabel}}/g,\r\n              displayLegend[1] + \"-\"\r\n            );\r\n          } else {\r\n            questionTemplate = questionTemplate.replace(/{{maxLabel}}/g, \"\");\r\n          }\r\n          questionTemplate = questionTemplate.replace(\r\n            /{{questionId}}/g,\r\n            \"id\" + question.id\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{isRequired}}\",\r\n            question.isRequired ? \"true\" : \"false\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{requiredLabel}}\",\r\n            question.isRequired ? \"*\" : \"\"\r\n          );\r\n          break;\r\n        case \"Scale\":\r\n          //get text question template and compile it.\r\n          var middleBlock = 0;\r\n          var endBlock = 0;\r\n          let dimension;\r\n          (window as any).ccsdkDebug ? console.log(question.questionTags) : \"\";\r\n          if (question.questionTags.indexOf(\"NPS\") !== -1) {\r\n            questionTemplate = templates.question_nps;\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{question}}\",\r\n              ConditionalTextFilter.filterText(this, question)\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              /{{questionId}}/g,\r\n              \"id\" + question.id\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{isRequired}}\",\r\n              question.isRequired ? \"true\" : \"false\"\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{requiredLabel}}\",\r\n              question.isRequired ? \"*\" : \"\"\r\n            );\r\n          } else if (question.questionTags.indexOf(\"CSAT\") !== -1) {\r\n            if (question.questionTags.indexOf(\"csat_satisfaction_5\") !== -1) {\r\n              questionTemplate = templates.question_csat_satisfaction_5;\r\n            } else if (\r\n              question.questionTags.indexOf(\"csat_agreement_5\") !== -1\r\n            ) {\r\n              questionTemplate = templates.question_csat_agreement_5;\r\n            }\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{question}}\",\r\n              ConditionalTextFilter.filterText(this, question)\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              /{{questionId}}/g,\r\n              \"id\" + question.id\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{isRequired}}\",\r\n              question.isRequired ? \"true\" : \"false\"\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{requiredLabel}}\",\r\n              question.isRequired ? \"*\" : \"\"\r\n            );\r\n          } else {\r\n            let tileColor = \"\";\r\n            let style = \"\";\r\n            if (\r\n              question.attributes != null &&\r\n              question.attributes.scaleColor &&\r\n              question.attributes.scaleColor.length > 0\r\n            ) {\r\n              if (question.attributes.scaleColor !== \"Gradient\") {\r\n                tileColor = question.attributes.scaleColor;\r\n              } else {\r\n                tileColor = \"#02BAEE\";\r\n              }\r\n            } else if (\r\n              question.presentationMode != null &&\r\n              question.presentationMode.indexOf(\"Color\") !== -1\r\n            ) {\r\n              tileColor = question.presentationMode.split(\":\")[1];\r\n            }\r\n            if (tileColor.length > 0) {\r\n              let tileColorDark = this.util.shadeBlendConvert(\r\n                -0.3,\r\n                tileColor,\r\n                undefined\r\n              );\r\n              style =\r\n                \"\\\r\n                <style>\\\r\n                #id\" +\r\n                question.id +\r\n                \" .option-number-item.option-scale{\\\r\n                  background-color : \" +\r\n                tileColor +\r\n                \";\\\r\n                }\\\r\n                #id\" +\r\n                question.id +\r\n                \" .option-number-item.option-scale:hover,\\\r\n                #id\" +\r\n                question.id +\r\n                \" .option-number-item.option-scale.selected{\\\r\n                  background-color : \" +\r\n                tileColorDark +\r\n                \";\\\r\n                }\\\r\n                </style>\\\r\n              \";\r\n            }\r\n\r\n            questionTemplate = templates.question_scale;\r\n            questionTemplate = questionTemplate.replace(/{{style}}/g, style);\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{question}}\",\r\n              ConditionalTextFilter.filterText(this, question)\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              /{{questionId}}/g,\r\n              \"id\" + question.id\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{isRequired}}\",\r\n              question.isRequired ? \"true\" : \"false\"\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{requiredLabel}}\",\r\n              question.isRequired ? \"*\" : \"\"\r\n            );\r\n            //construct NPS scale here....\r\n\r\n            let startRange = 0.0;\r\n            let endRange = 10.0;\r\n            let options = \"\";\r\n            let startRangeLabel = \"\";\r\n            // let startRangeLabel = \"\";\r\n            // let endRangeLabel = \"Very likely\";\r\n            let endRangeLabel = \"\";\r\n            let midRangeLabel = \"\";\r\n\r\n            if (\r\n              question.questionTags.indexOf(\"ces_agree_5\") !== -1 ||\r\n              question.questionTags.indexOf(\"ces_agree_7\") !== -1\r\n            ) {\r\n              startRangeLabel = \"Strongly Disagree\";\r\n              endRangeLabel = \"Strongly Agree\";\r\n              if (question.questionTags.indexOf(\"ces_agree_7\") !== -1) {\r\n                midRangeLabel = \"Somewhat Agree\";\r\n                middleBlock = 2;\r\n              }\r\n            } else if (\r\n              question.questionTags.indexOf(\"ces_effort_5\") !== -1 ||\r\n              question.questionTags.indexOf(\"ces_effort_7\") !== -1\r\n            ) {\r\n              startRangeLabel = \"High Effort\";\r\n              endRangeLabel = \"Low Effort\";\r\n              if (question.questionTags.indexOf(\"ces_effort_7\") !== -1) {\r\n                midRangeLabel = \"Moderate Effort\";\r\n                middleBlock = 0;\r\n              }\r\n            } else if (question.anchorMetricName != null) {\r\n              let metricName = question.anchorMetricName;\r\n              let customMetric = this.surveyData.customMetrics[metricName];\r\n              let optionsLength = customMetric.optionCategories.length;\r\n              startRangeLabel = customMetric.optionCategories[0].label;\r\n              if (optionsLength > 2) {\r\n                midRangeLabel = customMetric.optionCategories[1].label;\r\n                let middleRange = customMetric.optionCategories[1].categoryRange.split(\r\n                  \",\"\r\n                );\r\n                middleBlock =\r\n                  parseInt(middleRange[1], 10) -\r\n                  parseInt(middleRange[0], 10) +\r\n                  1;\r\n              } else {\r\n                midRangeLabel = null;\r\n              }\r\n              endRangeLabel =\r\n                customMetric.optionCategories[optionsLength - 1].label;\r\n\r\n              let endRange = customMetric.optionCategories[\r\n                optionsLength - 1\r\n              ].categoryRange.split(\",\");\r\n              endBlock =\r\n                parseInt(endRange[1], 10) - parseInt(endRange[0], 10) + 1;\r\n            }\r\n\r\n            let displayLegend = LanguageTextFilter.translateDisplayLegend(\r\n              this,\r\n              question\r\n            );\r\n            if (displayLegend) {\r\n              if (displayLegend.length > 0) {\r\n                startRangeLabel = displayLegend[0] ? displayLegend[0] : null;\r\n                endRangeLabel = displayLegend[1] ? displayLegend[1] : null;\r\n              }\r\n            }\r\n            if (question.multiSelect.length > 0) {\r\n              startRange = parseFloat(question.multiSelect[0].split(\"-\")[0]);\r\n              if (startRangeLabel == null) {\r\n                startRangeLabel = question.multiSelect[0]\r\n                  .split(\"-\")[0]\r\n                  .split(\";\")[1];\r\n              }\r\n              endRange = parseFloat(question.multiSelect[0].split(\"-\")[1]);\r\n              if (endRangeLabel == null) {\r\n                endRangeLabel = question.multiSelect[0]\r\n                  .split(\"-\")[1]\r\n                  .split(\";\")[1];\r\n              }\r\n            }\r\n            startRangeLabel = startRangeLabel == null ? \"\" : startRangeLabel;\r\n            endRangeLabel = endRangeLabel == null ? \"\" : endRangeLabel;\r\n            let mobileImageUrl = \"\";\r\n            let imageVisibility010 = \"hide\";\r\n            let imageVisibility110 = \"hide\";\r\n            let scaleVisibility = \"show-inline\";\r\n            let scaleImageContainer = \"\";\r\n            if (\r\n              startRange == 0 &&\r\n              endRange == 10 &&\r\n              question.anchorMetricName === null\r\n            ) {\r\n              mobileImageUrl =\r\n                \"https://cx.getcloudcherry.com/microsurvey-assets/scale-0-10-neutral.svg\";\r\n              imageVisibility010 = \"show\";\r\n              imageVisibility110 = \"hide\";\r\n              scaleVisibility = \"hide\";\r\n              scaleImageContainer = \"scale-image-container\";\r\n            } else if (\r\n              startRange == 1 &&\r\n              endRange == 10 &&\r\n              question.anchorMetricName === null\r\n            ) {\r\n              mobileImageUrl =\r\n                \"https://cx.getcloudcherry.com/microsurvey-assets/scale-1-10-neutral.svg\";\r\n              imageVisibility010 = \"hide\";\r\n              imageVisibility110 = \"show\";\r\n              scaleVisibility = \"hide\";\r\n              scaleImageContainer = \"scale-image-container\";\r\n            }\r\n            // console.log('scale', startRange, endRange);\r\n            let divider: any = 1;\r\n            if (endRange < 11) {\r\n            } else {\r\n              divider = (endRange - startRange) / 10.0;\r\n            }\r\n            let initial = 0.0;\r\n            let optionStyle = \"\";\r\n            let legendDimension;\r\n            if ((window as any).isMobile) {\r\n              if (endRange < 11) {\r\n                let parentContainer = window.innerWidth - 40;\r\n                dimension =\r\n                  ((100 / (endRange - startRange + 1) - 0.5) *\r\n                    parentContainer) /\r\n                  100;\r\n                dimension = dimension > 48 ? 48 : dimension;\r\n                legendDimension = (endRange - startRange + 1) * (dimension + 1);\r\n                optionStyle = `width:${dimension}px;height:${dimension}px;padding:${(dimension -\r\n                  15) /\r\n                  2}px;`;\r\n              }\r\n            } else {\r\n              imageVisibility010 = \"hide\";\r\n              imageVisibility110 = \"hide\";\r\n              scaleVisibility = \"show-inline\";\r\n              scaleImageContainer = \"\";\r\n              mobileImageUrl = \"\";\r\n            }\r\n            var leftWidth;\r\n            if (question.questionTags.indexOf(\"CES\") !== -1) {\r\n              if ((window as any).isMobile) {\r\n                leftWidth = dimension * 3 + \"px\";\r\n              } else {\r\n                leftWidth = 38 * 3 + \"px\";\r\n              }\r\n              for (\r\n                let initial = startRange;\r\n                initial <= endRange;\r\n                initial += divider\r\n              ) {\r\n                options +=\r\n                  '<span data-rating=\"' +\r\n                  initial +\r\n                  '\" class=\"option-number-item option-' +\r\n                  endRange +\r\n                  \"-scale-\" +\r\n                  initial +\r\n                  \" \" +\r\n                  scaleVisibility +\r\n                  '\" style=\"' +\r\n                  optionStyle +\r\n                  '\">' +\r\n                  initial +\r\n                  \"</span>\";\r\n              }\r\n            } else if (question.anchorMetricName != null) {\r\n              let metricName = question.anchorMetricName;\r\n              let customMetric = this.surveyData.customMetrics[metricName];\r\n\r\n              var cmwidthstart = customMetric.optionCategories[0].categoryRange.split(\r\n                \",\"\r\n              )[0];\r\n              var cmwidthend = customMetric.optionCategories[1].categoryRange.split(\r\n                \",\"\r\n              )[0];\r\n\r\n              if ((window as any).isMobile) {\r\n                leftWidth =\r\n                  (dimension + 1) * (cmwidthend - cmwidthstart) - 0.5 + \"px\";\r\n              } else {\r\n                leftWidth = (cmwidthend - cmwidthstart) * 39 + \"px\";\r\n              }\r\n\r\n              for (\r\n                let iterator = 0;\r\n                iterator < customMetric.optionCategories.length;\r\n                iterator++\r\n              ) {\r\n                let startRange = parseFloat(\r\n                  customMetric.optionCategories[iterator].categoryRange.split(\r\n                    \",\"\r\n                  )[0]\r\n                );\r\n                let endRange = parseFloat(\r\n                  customMetric.optionCategories[iterator].categoryRange.split(\r\n                    \",\"\r\n                  )[1]\r\n                );\r\n\r\n                imageVisibility010 = \"hide\";\r\n                imageVisibility110 = \"hide\";\r\n                scaleVisibility = \"show-inline\";\r\n                scaleImageContainer = \"\";\r\n                mobileImageUrl = \"\";\r\n\r\n                for (\r\n                  let initial = startRange;\r\n                  initial <= endRange;\r\n                  initial += divider\r\n                ) {\r\n                  options +=\r\n                    '<span data-rating=\"' +\r\n                    initial +\r\n                    '\" class=\"option-number-item option-scale\"' +\r\n                    scaleVisibility +\r\n                    '\" style=\"background:' +\r\n                    customMetric.optionCategories[iterator].color +\r\n                    \";\" +\r\n                    optionStyle +\r\n                    ';\">' +\r\n                    initial +\r\n                    \"</span>\";\r\n                }\r\n              }\r\n              if (!(window as any).isMobile) {\r\n                legendDimension = (endRange - startRange + 1) * 39;\r\n              }\r\n            } else {\r\n              for (\r\n                let initial = startRange;\r\n                initial <= endRange;\r\n                initial += divider\r\n              ) {\r\n                options +=\r\n                  '<span data-rating=\"' +\r\n                  initial +\r\n                  '\" class=\"option-number-item option-scale ' +\r\n                  scaleVisibility +\r\n                  '\" style=\"' +\r\n                  optionStyle +\r\n                  '\">' +\r\n                  initial +\r\n                  \"</span>\";\r\n              }\r\n              if (!(window as any).isMobile) {\r\n                legendDimension = (endRange - startRange + 1) * 39;\r\n              }\r\n            }\r\n\r\n            if (endRange - startRange + 1 <= 11) {\r\n              var optionLeftExtraClass =\r\n                \"option-left-rating-text-small-container\";\r\n              var optionMidExtraClass =\r\n                \"option-mid-rating-text-small-container\";\r\n              var optionRightExtraClass =\r\n                \"option-right-rating-text-small-container\";\r\n              var optionMaxWidth = ((endRange - startRange + 1) * 38) / 2 - 5;\r\n              // console.log(optionMaxWidth);\r\n            }\r\n\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{legendStyle}}\",\r\n              `style=\"position:relative;width:${\r\n                mobileImageUrl ? \"100%\" : legendDimension + \"px\"\r\n              };min-height: 20px;\"`\r\n            );\r\n\r\n            questionTemplate = questionTemplate.replace(\r\n              /\\{\\{radialLegend\\}\\}/g,\r\n              mobileImageUrl ? \"radial-legend\" : \"unknown-class\"\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{optionsRange}}\",\r\n              options\r\n            );\r\n\r\n            questionTemplate = questionTemplate.replace(\r\n              /maxWidthMiddle/g,\r\n              mobileImageUrl\r\n                ? \"35%;width:35%\"\r\n                : midRangeLabel && dimension\r\n                ? dimension * middleBlock + \"px\"\r\n                : 38 * middleBlock + \"px\"\r\n            );\r\n            // questionTemplate = questionTemplate.replace(\"{{maxWidth}}\", optionMaxWidth);\r\n            questionTemplate = questionTemplate.replace(\r\n              /maxWidthEnd/g,\r\n              mobileImageUrl\r\n                ? \"35%;width:35%\"\r\n                : endBlock && dimension\r\n                ? dimension * endBlock + \"px\"\r\n                : endBlock\r\n                ? endBlock * 38 + \"px\"\r\n                : optionMaxWidth + \"px\"\r\n            );\r\n\r\n            questionTemplate = questionTemplate.replace(\r\n              /maxWidth/g,\r\n              mobileImageUrl ? \"35%;width:35%\" : optionMaxWidth + \"px\"\r\n            );\r\n\r\n            questionTemplate = questionTemplate.replace(\r\n              /leftWidth/g,\r\n              leftWidth\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              /{{optionLeftExtraClass}}/g,\r\n              optionLeftExtraClass\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              /{{optionMidExtraClass}}/g,\r\n              optionMidExtraClass\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              /{{optionRightExtraClass}}/g,\r\n              optionRightExtraClass\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{leftLabel}}\",\r\n              startRangeLabel\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{midLabel}}\",\r\n              midRangeLabel || \"\"\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{rightLabel}}\",\r\n              endRangeLabel\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              /{{mobileImageUrl}}/g,\r\n              mobileImageUrl\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{imageVisibility010}}\",\r\n              imageVisibility010\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{imageVisibility110}}\",\r\n              imageVisibility110\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{scaleImageContainer}}\",\r\n              scaleImageContainer\r\n            );\r\n          }\r\n\r\n          break;\r\n        case \"Text\":\r\n          //get text question template and compile it.\r\n          questionTemplate = templates.question_text;\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{question}}\",\r\n            ConditionalTextFilter.filterText(this, question)\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            /{{questionId}}/g,\r\n            \"id\" + question.id\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{isRequired}}\",\r\n            question.isRequired ? \"true\" : \"false\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{requiredLabel}}\",\r\n            question.isRequired ? \"*\" : \"\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{validationHint}}\",\r\n            question.validationHint ? question.validationHint : \"\"\r\n          );\r\n\r\n          break;\r\n        case \"Number\":\r\n          //get text question template and compile it.\r\n          questionTemplate = templates.question_number;\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{question}}\",\r\n            ConditionalTextFilter.filterText(this, question)\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            /{{questionId}}/g,\r\n            \"id\" + question.id\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{isRequired}}\",\r\n            question.isRequired ? \"true\" : \"false\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{requiredLabel}}\",\r\n            question.isRequired ? \"*\" : \"\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{validationHint}}\",\r\n            question.validationHint ? question.validationHint : \"\"\r\n          );\r\n          break;\r\n\r\n        case \"Date\":\r\n          questionTemplate = templates.question_date;\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{question}}\",\r\n            ConditionalTextFilter.filterText(this, question)\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            /{{questionId}}/g,\r\n            \"id\" + question.id\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{isRequired}}\",\r\n            question.isRequired ? \"true\" : \"false\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{requiredLabel}}\",\r\n            question.isRequired ? \"*\" : \"\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{validationHint}}\",\r\n            question.validationHint ? question.validationHint : \"\"\r\n          );\r\n          break;\r\n\r\n        case \"MultilineText\":\r\n          //get text question template and compile it.\r\n          questionTemplate = templates.question_multi_line_text;\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{question}}\",\r\n            ConditionalTextFilter.filterText(this, question)\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            /{{questionId}}/g,\r\n            \"id\" + question.id\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{isRequired}}\",\r\n            question.isRequired ? \"true\" : \"false\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{requiredLabel}}\",\r\n            question.isRequired ? \"*\" : \"\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{characterLimit}}\",\r\n            question.attributes && question.attributes.characterLimit\r\n              ? question.attributes.characterLimit\r\n              : \"\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{validationHint}}\",\r\n            question.validationHint ? question.validationHint : \"\"\r\n          );\r\n          break;\r\n\r\n        case \"MultiSelect\":\r\n          let acTemplate: string;\r\n          let multiSelect1;\r\n          //get text question template and compile it.\r\n          multiSelect1 = Array.prototype.slice.call(\r\n            LanguageTextFilter.translateMultiSelect(this, question)\r\n          );\r\n          if (question.presentationMode == \"Invert\") {\r\n            // console.log('selection option before reverse', multiSelect1);\r\n            multiSelect1.reverse();\r\n            // console.log('selection option after reverse', multiSelect1);\r\n            // console.log('selection api option', question.multiSelect);\r\n          }\r\n          //get text question template and compile it.\r\n          if (\r\n            (question.displayStyle == \"radiobutton/checkbox\" ||\r\n              question.displayStyle == \"icon\") &&\r\n            multiSelect1.length < 6\r\n          ) {\r\n            // (window as any).ccsdkDebug?console.log(question.displayStyle):'';\r\n            let checkOptionContainsImage: boolean = self.util.checkOptionContainsImage(\r\n              multiSelect1\r\n            );\r\n            // (window as any).ccsdkDebug?console.log('select radio image',checkOptionContainsImage):'';\r\n            if (\r\n              checkOptionContainsImage &&\r\n              ((multiSelect1.length > 0 &&\r\n                multiSelect1[0].indexOf(\"Male\") !== -1) ||\r\n                (multiSelect1.length > 0 &&\r\n                  multiSelect1[0].indexOf(\"Yes\") !== -1) ||\r\n                (multiSelect1.length > 1 &&\r\n                  multiSelect1[1].indexOf(\"Yes\") !== -1))\r\n            ) {\r\n              // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n              acTemplate = templates.question_checkbox;\r\n              let options2 = self.util.generateCheckboxImageOptions(\r\n                question.multiSelect,\r\n                multiSelect1,\r\n                question.id\r\n              );\r\n              // (window as any).ccsdkDebug?console.log(options2):'';\r\n              questionTemplate = acTemplate;\r\n              questionTemplate = questionTemplate.replace(\r\n                /{{options}}/g,\r\n                options2\r\n              );\r\n              acTemplate = questionTemplate;\r\n            } else if (checkOptionContainsImage) {\r\n              // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n              acTemplate = templates.question_checkbox;\r\n              let options2 = self.util.generateCheckboxIgnoreImageOptions(\r\n                question.multiSelect,\r\n                multiSelect1,\r\n                question.id\r\n              );\r\n              // (window as any).ccsdkDebug?console.log(options2):'';\r\n              questionTemplate = acTemplate;\r\n              questionTemplate = questionTemplate.replace(\r\n                /{{options}}/g,\r\n                options2\r\n              );\r\n              acTemplate = questionTemplate;\r\n            } else {\r\n              let options3: string = self.util.generateCheckboxOptions(\r\n                question.multiSelect,\r\n                multiSelect1,\r\n                question.id\r\n              );\r\n              // (window as any).ccsdkDebug?console.log(options2):'';\r\n              acTemplate = templates.question_checkbox;\r\n              questionTemplate = acTemplate.replace(/{{options}}/g, options3);\r\n              acTemplate = questionTemplate;\r\n            }\r\n          } else {\r\n            // (window as any).ccsdkDebug?console.log('select type 3'):'';\r\n            acTemplate = templates.question_multi_select;\r\n\r\n            // acTemplate = templates.question_select;\r\n            let options3 = self.util.generateSelectOptions(\r\n              question.multiSelect,\r\n              multiSelect1\r\n            );\r\n\r\n            if (self.ccsdk.config.language.indexOf(\"Default\") === -1) {\r\n              if (\r\n                typeof question.translated !== \"undefined\" &&\r\n                question.translated != null &&\r\n                typeof question.translated[self.ccsdk.config.language] !==\r\n                  \"undefined\" &&\r\n                question.translated[self.ccsdk.config.language].multiSelect !==\r\n                  \"undefined\" &&\r\n                question.translated[self.ccsdk.config.language].multiSelect\r\n                  .length > 0\r\n              ) {\r\n                multiSelect1 = Array.prototype.slice.call(\r\n                  question.translated[self.ccsdk.config.language].multiSelect\r\n                );\r\n                if (question.presentationMode == \"Invert\") {\r\n                  multiSelect1.reverse();\r\n                }\r\n                options3 = self.util.generateSelectOptions(\r\n                  question.multiSelect,\r\n                  multiSelect1\r\n                );\r\n              }\r\n            }\r\n            // questionTemplate = acTemplate;\r\n            self.ccsdk.debug ? console.log(options3) : \"\";\r\n            questionTemplate = acTemplate.replace(/{{options}}/g, options3);\r\n            acTemplate = questionTemplate;\r\n          }\r\n          questionTemplate = acTemplate;\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{question}}\",\r\n            ConditionalTextFilter.filterText(this, question)\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            /{{questionId}}/g,\r\n            \"id\" + question.id\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{isRequired}}\",\r\n            question.isRequired ? \"true\" : \"false\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{requiredLabel}}\",\r\n            question.isRequired ? \"*\" : \"\"\r\n          );\r\n\r\n          break;\r\n        case \"Select\":\r\n          let acTemplate1: string;\r\n          let acTemplate2: string;\r\n          let options1: string;\r\n          let options2: string;\r\n          let multiSelect;\r\n          //get text question template and compile it.\r\n          multiSelect = Array.prototype.slice.call(\r\n            LanguageTextFilter.translateMultiSelect(this, question)\r\n          );\r\n          let invertedMultiSelect;\r\n          if (question.presentationMode == \"Invert\") {\r\n            // console.log('selection option before reverse', multiSelect);\r\n            invertedMultiSelect = question.multiSelect\r\n              ? question.multiSelect.slice().reverse()\r\n              : [];\r\n            multiSelect.reverse();\r\n            // console.log('selection option after reverse', multiSelect);\r\n            // console.log('selection api option', question.multiSelect);\r\n          } else {\r\n            invertedMultiSelect = question.multiSelect;\r\n          }\r\n          if (\r\n            question.displayStyle == \"radiobutton/checkbox\" &&\r\n            multiSelect.length < 6\r\n          ) {\r\n            // if(question.displayStyle == 'radiobutton/checkbox'){\r\n            // (window as any).ccsdkDebug?console.log('select type 1'):'';\r\n            // (window as any).ccsdkDebug?console.log(question.displayStyle):'';\r\n            // acTemplate1 = templates.question_radio;\r\n            // questionTemplate = acTemplate1;\r\n\r\n            let checkOptionContainsImage: boolean = self.util.checkOptionContainsImage(\r\n              multiSelect\r\n            );\r\n            (window as any).ccsdkDebug\r\n              ? console.log(\"select radio image\", checkOptionContainsImage)\r\n              : \"\";\r\n            if (\r\n              checkOptionContainsImage &&\r\n              ((multiSelect.length > 0 &&\r\n                multiSelect[0].indexOf(\"Male\") !== -1) ||\r\n                (multiSelect.length > 0 &&\r\n                  multiSelect[0].indexOf(\"Yes\") !== -1) ||\r\n                (multiSelect.length > 1 &&\r\n                  multiSelect[1].indexOf(\"Yes\") !== -1))\r\n            ) {\r\n              // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n              acTemplate2 = templates.question_radio_image;\r\n\r\n              options2 = self.util.generateRadioImageOptions(\r\n                invertedMultiSelect,\r\n                multiSelect,\r\n                question.id\r\n              );\r\n              (window as any).ccsdkDebug ? console.log({ options2 }) : \"\";\r\n              questionTemplate = acTemplate2;\r\n              questionTemplate = questionTemplate.replace(\r\n                /{{options}}/g,\r\n                options2\r\n              );\r\n            } else if (checkOptionContainsImage) {\r\n              // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n              acTemplate2 = templates.question_radio_image;\r\n              options2 = self.util.generateRadioIgnoreImageOptions(\r\n                invertedMultiSelect,\r\n                multiSelect,\r\n                question.id\r\n              );\r\n              // (window as any).ccsdkDebug?console.log(options2):'';\r\n              // console.log(options2, 'radio2');\r\n\r\n              questionTemplate = acTemplate2;\r\n              questionTemplate = questionTemplate.replace(\r\n                /{{options}}/g,\r\n                options2\r\n              );\r\n            } else {\r\n              acTemplate1 = templates.question_radio;\r\n              questionTemplate = acTemplate1;\r\n\r\n              options1 = self.util.generateRadioOptions(\r\n                invertedMultiSelect,\r\n                multiSelect,\r\n                question.id\r\n              );\r\n              questionTemplate = questionTemplate.replace(\r\n                \"{{options}}\",\r\n                options1\r\n              );\r\n            }\r\n          } else if (\r\n            question.displayStyle == \"icon\" &&\r\n            multiSelect.length < 6\r\n          ) {\r\n            acTemplate1 = templates.question_radio;\r\n            questionTemplate = acTemplate1;\r\n            let invertedMultiSelect;\r\n            if (question.presentationMode == \"Invert\") {\r\n              invertedMultiSelect = question.multiSelect\r\n                ? question.multiSelect.slice().reverse()\r\n                : [];\r\n            } else {\r\n              invertedMultiSelect = question.multiSelect;\r\n            }\r\n            options1 = self.util.generateRadioOptions(\r\n              invertedMultiSelect,\r\n              multiSelect,\r\n              question.id\r\n            );\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{options}}\",\r\n              options1\r\n            );\r\n          } else {\r\n            (window as any).ccsdkDebug ? console.log(\"select type 3\") : \"\";\r\n            acTemplate1 = templates.question_select;\r\n            options1 = self.util.generateSelectOptions(\r\n              invertedMultiSelect,\r\n              multiSelect\r\n            );\r\n            if (self.ccsdk.config.language.indexOf(\"Default\") === -1) {\r\n              if (\r\n                typeof question.translated !== \"undefined\" &&\r\n                question.translated != null &&\r\n                typeof question.translated[self.ccsdk.config.language] !==\r\n                  \"undefined\" &&\r\n                question.translated[self.ccsdk.config.language].multiSelect !==\r\n                  \"undefined\" &&\r\n                question.translated[self.ccsdk.config.language].multiSelect\r\n                  .length > 0\r\n              ) {\r\n                multiSelect = Array.prototype.slice.call(\r\n                  question.translated[self.ccsdk.config.language].multiSelect\r\n                );\r\n                if (question.presentationMode == \"Invert\") {\r\n                  multiSelect.reverse();\r\n                }\r\n                options1 = self.util.generateSelectOptions(\r\n                  invertedMultiSelect,\r\n                  multiSelect\r\n                );\r\n              }\r\n            }\r\n            questionTemplate = acTemplate1;\r\n            questionTemplate = questionTemplate.replace(\r\n              \"{{options}}\",\r\n              options1\r\n            );\r\n          }\r\n          // console.log( questionTemplate );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{question}}\",\r\n            ConditionalTextFilter.filterText(this, question)\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            /{{questionId}}/g,\r\n            \"id\" + question.id\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{isRequired}}\",\r\n            question.isRequired ? \"true\" : \"false\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{requiredLabel}}\",\r\n            question.isRequired ? \"*\" : \"\"\r\n          );\r\n          // (window as any).ccsdkDebug?console.log(questionTemplate):'';\r\n\r\n          break;\r\n        case \"Smile-5\":\r\n          //get text question template and compile it.\r\n          if (question.presentationMode == \"Invert\") {\r\n            questionTemplate = templates.question_smile_5_inverted;\r\n          } else {\r\n            questionTemplate = templates.question_smile_5;\r\n          }\r\n          // let startRangeLabel = \"Very unlikely\";\r\n          // let endRangeLabel = \"Very likely\";\r\n          let startRangeLabel = \"\";\r\n          let endRangeLabel = \"\";\r\n          let displayLegend2 = LanguageTextFilter.translateDisplayLegend(\r\n            this,\r\n            question\r\n          );\r\n\r\n          if (displayLegend2) {\r\n            if (displayLegend2.length > 0) {\r\n              startRangeLabel = displayLegend2[0] ? displayLegend2[0] : null;\r\n              endRangeLabel = displayLegend2[1] ? displayLegend2[1] : null;\r\n            }\r\n          }\r\n          startRangeLabel = startRangeLabel == null ? \"\" : startRangeLabel;\r\n          endRangeLabel = endRangeLabel == null ? \"\" : endRangeLabel;\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{question}}\",\r\n            ConditionalTextFilter.filterText(this, question)\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            /{{questionId}}/g,\r\n            \"id\" + question.id\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{isRequired}}\",\r\n            question.isRequired ? \"true\" : \"false\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{requiredLabel}}\",\r\n            question.isRequired ? \"*\" : \"\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{leftLabel}}\",\r\n            startRangeLabel\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{rightLabel}}\",\r\n            endRangeLabel\r\n          );\r\n          break;\r\n        case \"Star-5\":\r\n          //get text question template and compile it.\r\n          let startRangeLabel1 = \"\";\r\n          let endRangeLabel1 = \"\";\r\n          let displayLegend3 = LanguageTextFilter.translateDisplayLegend(\r\n            this,\r\n            question\r\n          );\r\n\r\n          if (displayLegend3) {\r\n            if (displayLegend3.length > 0) {\r\n              startRangeLabel1 = displayLegend3[0] ? displayLegend3[0] : null;\r\n              endRangeLabel1 = displayLegend3[1] ? displayLegend3[1] : null;\r\n            }\r\n          }\r\n          startRangeLabel1 = startRangeLabel1 == null ? \"\" : startRangeLabel1;\r\n          endRangeLabel1 = endRangeLabel1 == null ? \"\" : endRangeLabel1;\r\n          questionTemplate = templates.question_star_5;\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{question}}\",\r\n            ConditionalTextFilter.filterText(this, question)\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            /{{questionId}}/g,\r\n            \"id\" + question.id\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{isRequired}}\",\r\n            question.isRequired ? \"true\" : \"false\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{requiredLabel}}\",\r\n            question.isRequired ? \"*\" : \"\"\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{leftLabel}}\",\r\n            startRangeLabel1\r\n          );\r\n          questionTemplate = questionTemplate.replace(\r\n            \"{{rightLabel}}\",\r\n            endRangeLabel1\r\n          );\r\n          break;\r\n      }\r\n    }\r\n    return questionTemplate;\r\n  }\r\n\r\n  questionCompare(a: any, b: any) {\r\n    return a.sequence - b.sequence;\r\n  }\r\n\r\n  getAnswerTypeFromDisplayType(displayType: string) {\r\n    // console.log('question type',displayType);\r\n    let type: string;\r\n    switch (displayType) {\r\n      case \"Slider\":\r\n        type = \"number\";\r\n        break;\r\n      case \"Scale\":\r\n        type = \"number\";\r\n        break;\r\n      case \"Text\":\r\n        type = \"text\";\r\n        break;\r\n      case \"Number\":\r\n        type = \"number\";\r\n        break;\r\n      case \"MultilineText\":\r\n        type = \"text\";\r\n        break;\r\n      case \"MultiSelect\":\r\n        type = \"text\";\r\n        break;\r\n      case \"Select\":\r\n        type = \"text\";\r\n        break;\r\n      case \"Dropdown\":\r\n        type = \"text\";\r\n        break;\r\n      case \"Smile-5\":\r\n        type = \"number\";\r\n        break;\r\n      case \"Star-5\":\r\n        type = \"number\";\r\n        break;\r\n      case \"Date\":\r\n        type = \"number\";\r\n        break;\r\n      default:\r\n        type = \"text\";\r\n        break;\r\n    }\r\n\r\n    return type;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * filterQuestions - filters questions so that we don't display the one which satisifes any of the following condition\r\n   *  isRetired = true\r\n   *  statffFill = true\r\n   *  apiFill = true\r\n   *  preFill = true\r\n   *\r\n   * @param {any} question\r\n   * @returns\r\n   * @memberof Survey\r\n   */\r\n  filterQuestions() {\r\n    let self = this;\r\n    this.prefillResponses = [];\r\n    this.questionsToDisplay = [];\r\n    for (let question of this.questions) {\r\n      if (!question.isRetired) {\r\n        //filter out prefill question only if it is filled?.\r\n        // if(!this.isQuestionFilled(question)){\r\n        if (this.isPrefillTags(question)) {\r\n          self.ccsdk.debug\r\n            ? console.log(\"prefillTags\", this.prefillResponses)\r\n            : \"\";\r\n          continue;\r\n        }\r\n        if (this.isPrefillNote(question)) {\r\n          self.ccsdk.debug ? console.log(this.prefillResponses) : \"\";\r\n          continue;\r\n        }\r\n        if (this.isPrefillDirect(question)) {\r\n          self.ccsdk.debug ? console.log(this.prefillResponses) : \"\";\r\n          continue;\r\n        }\r\n        if (!this.isPrefillQuestion(question)) {\r\n          if (\r\n            question.conditionalFilter === null ||\r\n            (question.conditionalFilter != null &&\r\n              (question.conditionalFilter.filterquestions == null ||\r\n                question.conditionalFilter.filterquestions.length == 0))\r\n          ) {\r\n            //check supported display types\r\n            let supportedDisplayTypes =\r\n              \"Slider, Scale, Text, Number, MultilineText, MultiSelect, Smile-5, Star-5, Date\";\r\n            if (supportedDisplayTypes.indexOf(question.displayType) > -1) {\r\n              this.questionsToDisplay.push(question);\r\n            }\r\n          } else {\r\n            //if conditions full filled, fill it in questionsToDisplay\r\n            if (ConditionalFlowFilter.filterQuestion(this, question)) {\r\n              //auto does that\r\n            } else {\r\n              this.conditionalQuestions.push(question);\r\n            }\r\n          }\r\n        } else {\r\n          this.fillPrefillWithTags(question);\r\n          this.fillPrefillWithNote(question);\r\n          ConditionalFlowFilter.filterQuestion(this, question);\r\n        }\r\n        // }\r\n      }\r\n    }\r\n    //re condition questions.\r\n    for (let question of this.questions) {\r\n      // console.log(this.questionsToDisplay);\r\n      ConditionalFlowFilter.filterQuestion(this, question);\r\n    }\r\n    //sort questions and display them?\r\n    this.questionsToDisplay = this.questionsToDisplay.sort(\r\n      this.questionCompare\r\n    );\r\n    // console.log(this.conditionalQuestions);\r\n  }\r\n\r\n  isPrefillTags(question: any) {\r\n    if (\r\n      typeof question.questionTags !== \"undefined\" &&\r\n      question.questionTags &&\r\n      question.questionTags.length > 0\r\n    ) {\r\n      for (let tag of question.questionTags) {\r\n        switch (tag.toLowerCase()) {\r\n          case \"screensize\":\r\n            //add size to prefill array\r\n            this.fillPrefillQuestion(\r\n              question.id,\r\n              \"Width:\" +\r\n                window.innerWidth +\r\n                \"px / Height:\" +\r\n                window.innerHeight +\r\n                \"px\",\r\n              \"text\"\r\n            );\r\n            return true;\r\n          // Token prefill\r\n          case \"cc_token\":\r\n            this.fillPrefillQuestion(question.id, this.surveyToken, \"text\");\r\n            return true;\r\n          // Channel prefill\r\n          case \"cc_channel\":\r\n            this.fillPrefillQuestion(question.id, \"MicroSurvey\", \"text\");\r\n            return true;\r\n          // currentURL\r\n          case \"cc_currenturl\":\r\n            this.fillPrefillQuestion(question.id, window.location.href, \"text\");\r\n            return true;\r\n          // partial response\r\n          case \"cc_partialresponseid\":\r\n            this.fillPrefillQuestion(\r\n              question.id,\r\n              this.surveyData.partialResponseId,\r\n              \"text\"\r\n            );\r\n            return true;\r\n          default:\r\n            if (typeof this.prefillWithTags[tag.toLowerCase()] != \"undefined\") {\r\n              let type = this.getAnswerTypeFromDisplayType(\r\n                question.displayType\r\n              );\r\n              this.fillPrefillQuestion(\r\n                question.id,\r\n                this.prefillWithTags[tag.toLowerCase()],\r\n                type\r\n              );\r\n              return true;\r\n            }\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  isPrefillNote(question: any) {\r\n    if (\r\n      typeof question.note !== \"undefined\" &&\r\n      question.note != null &&\r\n      question.note.length > 0 &&\r\n      this.prefillWithNote[question.note.toLowerCase()]\r\n    ) {\r\n      let type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n      this.fillPrefillQuestion(\r\n        question.id,\r\n        this.prefillWithNote[question.note.toLowerCase()],\r\n        type\r\n      );\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  isPrefillDirect(question: any) {\r\n    if (typeof question !== \"undefined\" && this.prefillDirect[question.id]) {\r\n      let type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n      this.fillPrefillQuestion(\r\n        question.id,\r\n        this.prefillDirect[question.id],\r\n        type\r\n      );\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  fillPrefillWithTags(question: any) {\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"fillprefillwithtags\", this.prefillWithTags)\r\n      : \"\";\r\n    if (\r\n      typeof question.questionTags !== \"undefined\" &&\r\n      question.questionTags.length > 0\r\n    ) {\r\n      for (let tag of question.questionTags) {\r\n        (window as any).ccsdkDebug\r\n          ? console.log(\"fillprefillwithtags\", tag)\r\n          : \"\";\r\n        if (typeof this.prefillWithTags[tag.toLowerCase()] !== \"undefined\") {\r\n          (window as any).ccsdkDebug\r\n            ? console.log(\r\n                \"prefil \",\r\n                tag.toLowerCase(),\r\n                this.prefillWithTags[tag.toLowerCase()],\r\n                this.prefillWithTags\r\n              )\r\n            : \"\";\r\n\r\n          let type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n          this.fillPrefillQuestion(\r\n            question.id,\r\n            this.prefillWithTags[tag.toLowerCase()],\r\n            type\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  fillPrefillWithNote(question: any) {\r\n    if (\r\n      typeof question.note !== \"undefined\" &&\r\n      question.note != null &&\r\n      question.note.length > 0\r\n    ) {\r\n      if (\r\n        typeof this.prefillWithNote[question.note.toLowerCase()] !== \"undefined\"\r\n      ) {\r\n        let type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n        this.fillPrefillQuestion(\r\n          question.id,\r\n          this.prefillWithNote[question.note.toLowerCase()],\r\n          type\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  getConditionalSurveyQuestions(): any {\r\n    return this.conditionalQuestions;\r\n  }\r\n\r\n  isPrefillQuestion(question: any) {\r\n    if (question.apiFill == true) {\r\n      return true;\r\n    }\r\n    if (question.staffFill == true) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  isQuestionFilled(question: any) {\r\n    for (let response of this.prefillResponses) {\r\n      if (response.questionId == question.questionId) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  removePrevListener(id: string): boolean {\r\n    for (let listener of this.domListeners) {\r\n      if (listener.id == id) {\r\n        let index = this.domListeners.indexOf(listener);\r\n        (window as any).ccsdkDebug ? console.log(\"removing listener\", id) : \"\";\r\n        (window as any).ccsdkDebug\r\n          ? console.log(\"removing listener index\", index)\r\n          : \"\";\r\n        this.util.removeListener(\r\n          document.querySelectorAll(\"body\")[0],\r\n          listener.type,\r\n          listener.internalHandler\r\n        );\r\n        if (index > -1) {\r\n          this.domListeners.splice(index, 1);\r\n        }\r\n        (window as any).ccsdkDebug ? console.log(this.domListeners) : \"\";\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  destroySurvey() {\r\n    let self: SurveyHandler = this;\r\n    document.addEventListener(\"ccclose\", this.destroySurveyCb);\r\n  }\r\n\r\n  destroy() {\r\n    let surveyContainer = this.ccsdk.dom.getSurveyContainer(this.surveyToken);\r\n    let welcomeContainer = this.ccsdk.dom.getWelcomeContainer(this.surveyToken);\r\n    if (typeof surveyContainer != \"undefined\") {\r\n      this.util.remove(surveyContainer);\r\n    }\r\n    if (typeof welcomeContainer != \"undefined\") {\r\n      this.util.remove(welcomeContainer);\r\n    }\r\n    document.removeEventListener(\"ccclose\", this.destroySurveyCb);\r\n    document.removeEventListener(\"ccdone\", this.displayThankYouCb);\r\n    document.removeEventListener(\"q-answered\", this.acceptAnswersCb);\r\n    (window as any).globalSurveyRunning = false;\r\n    // let bodyElement = <HTMLElement>document.\r\n    //   getElementsByTagName( \"body\" )[ 0 ];\r\n    // this.util.removeClass( bodyElement, \"blurr\" );\r\n  }\r\n}\r\n\r\nexport { SurveyHandler };\r\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/rtl-css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./main.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../node_modules/rtl-css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./main.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../node_modules/rtl-css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./main.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../node_modules/rtl-css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, typeof document !== 'undefined' && document.getElementsByTagName('html')[0].getAttribute('dir') === 'rtl' ? \".cc-sdk ul {\\n  padding-right: 0;\\n  list-style-type: none;\\n  margin: 0; }\\n\\n.cc-sdk a,\\n.cc-sdk a:hover,\\n.cc-sdk a:focus {\\n  text-decoration: none;\\n  color: inherit; }\\n\\n.cc-sdk *,\\n.cc-sdk *:before,\\n.cc-sdk *:after {\\n  box-sizing: border-box; }\\n\\n.cc-sdk p {\\n  color: inherit;\\n  margin: 0; }\\n\\n.cc-sdk map area {\\n  outline: 0;\\n  cursor: pointer; }\\n\\n.cc-sdk map area.selected {\\n  outline: 0px;\\n  outline-color: #0a2135;\\n  outline-width: 0px;\\n  outline-style: solid; }\\n\\n.cc-sdk map area:hover {\\n  outline: 1; }\\n\\n.cc-sdk label {\\n  margin-bottom: 0;\\n  font-weight: normal; }\\n\\n.cc-sdk input,\\n.cc-sdk textarea {\\n  padding: 0;\\n  border: none;\\n  width: auto;\\n  margin-top: 0;\\n  font-size: inherit;\\n  font-style: inherit;\\n  font-weight: inherit;\\n  color: inherit;\\n  outline: none; }\\n\\n.cc-sdk p {\\n  font-size: inherit; }\\n\\n.cc-sdk.cc-popup-container {\\n  background: #fff;\\n  box-shadow: 0 0 4px 5px rgba(0, 0, 0, 0.05);\\n  font-family: \\\"open sans\\\", sans-serif;\\n  position: fixed;\\n  text-align: center;\\n  max-width: 500px;\\n  max-height: 500px;\\n  z-index: 1111; }\\n\\n@media (min-width: 768px) {\\n  .cc-sdk.cc-popup-container {\\n    padding: 10px; } }\\n\\n.cc-sdk.cc-popup-container.bottom {\\n  margin-bottom: 9px; }\\n\\n.cc-sdk.cc-popup-container.top {\\n  margin-top: 9px; }\\n\\n.cc-sdk #cc-thankyou-container .cc-question-container__text p {\\n  word-break: break-word; }\\n\\n.cc-sdk #cc-thankyou-container .cc-question-container__text p,\\n.cc-sdk #cc-thankyou-container .cc-question-container__text {\\n  width: 400px;\\n  max-width: initial;\\n  font-size: 17px;\\n  color: #424242; }\\n\\n.cc-sdk .cc-message-box {\\n  position: relative;\\n  z-index: 11; }\\n\\n.cc-sdk .cc-message-box__text {\\n  color: #424242;\\n  font-size: 14px;\\n  font-weight: 600;\\n  margin: 0;\\n  padding: 29px 14px 20px 14px;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-message-box__btn {\\n  background: #fdaf19;\\n  border-radius: 100px;\\n  display: inline-block;\\n  font-size: 15px;\\n  font-weight: 700;\\n  height: 32px;\\n  padding: 6px 0;\\n  width: 124px;\\n  text-align: center; }\\n\\n.cc-sdk.cc-popup-container .cc-popup-container__close {\\n  cursor: pointer;\\n  margin: 4px;\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n  z-index: 111; }\\n\\n.cc-sdk .cc-popup-container-2 {\\n  /* box-shadow: 0 0 4px 5px rgba(0,0,0,0.05); */\\n  height: 144px;\\n  position: fixed;\\n  width: 100%;\\n  z-index: 1111; }\\n\\n.cc-sdk .cc-popup-container-2.bottom {\\n  bottom: 0px; }\\n\\n.cc-sdk .cc-popup-container-2__icons,\\n.cc-sdk .cc-popup-container-2__icons {\\n  cursor: pointer;\\n  padding: 8px;\\n  position: absolute;\\n  top: 0;\\n  z-index: 111; }\\n\\n.cc-sdk .top.cc-popup-container-2 .cc-popup-container-2__icons {\\n  padding-top: 15px; }\\n\\n.cc-sdk .cc-popup-container-2__icons.cc-right-icon {\\n  left: 0; }\\n\\n.cc-sdk .cc-popup-container-2__icons.cc-left-icon {\\n  right: 0; }\\n\\n.cc-sdk .cc-popup-container__back {\\n  background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);\\n  display: inline-block;\\n  width: 21px;\\n  height: 21px; }\\n\\n.cc-sdk .cc-question-container {\\n  /* margin: auto; */\\n  padding: 20px 20px 25px;\\n  position: absolute;\\n  text-align: center;\\n  width: 100%;\\n  z-index: 11;\\n  top: 0;\\n  right: 0; }\\n\\n.cc-sdk .cc-question-container__text {\\n  /*height: 80px;*/\\n  color: #424242;\\n  display: inline-block;\\n  font-size: 15px;\\n  font-weight: 600;\\n  max-width: 230px;\\n  padding: 8px 0;\\n  text-align: center;\\n  vertical-align: middle;\\n  width: 20%;\\n  position: relative; }\\n  .cc-sdk .cc-question-container__text p {\\n    word-break: break-word; }\\n\\n.cc-sdk .cc-question-container[data-type='csat'] .cc-question-container__text {\\n  width: 11em; }\\n\\n.cc-sdk .cc-question-container[data-type='csat'] .cc-question-container__list {\\n  width: 64vw; }\\n\\n.cc-sdk .cc-question-container__required,\\n.cc-sdk .cc-question-container__validation {\\n  position: absolute;\\n  top: -14px;\\n  font-size: 11px;\\n  right: 0;\\n  width: 100%;\\n  left: 0;\\n  font-weight: normal;\\n  color: #C1272D;\\n  display: none; }\\n\\n.cc-sdk .cc-question-container__required-label {\\n  display: inline-block;\\n  position: relative;\\n  top: -2px;\\n  right: -2px; }\\n\\n.cc-sdk .cc-question-container__content {\\n  display: inline-block;\\n  max-width: 78%;\\n  vertical-align: middle;\\n  width: auto; }\\n\\n.cc-sdk .cc-question-container__list li {\\n  display: inline-block;\\n  padding-right: 29px;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-question-container__list li span {\\n  display: table-cell;\\n  font-size: 15px;\\n  padding-right: 15px;\\n  text-align: right;\\n  vertical-align: middle;\\n  width: 125px; }\\n\\n.cc-sdk .cc-question-container__list li input {\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-question-container:before {\\n  content: '';\\n  display: inline-block;\\n  height: 100%;\\n  margin-left: -4px;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-question-container {\\n  height: 100%;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-questions-container {\\n  height: 100%; }\\n\\n.cc-sdk p.cc-thankyou-powered {\\n  font-size: 13px !important;\\n  color: #404040 !important;\\n  font-style: italic;\\n  margin-top: 4px; }\\n  .cc-sdk p.cc-thankyou-powered.no-branding {\\n    display: none; }\\n\\n.cc-sdk .cc-thankyou-powered .cc-thankyou-logo {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/cc-thankyou-logo.svg\\\");\\n  background-size: cover;\\n  margin-left: 8px;\\n  display: inline-block;\\n  width: 16px;\\n  height: 16px; }\\n\\n.cc-sdk .multiline-box {\\n  background: #fff;\\n  border-radius: 2px;\\n  border: 1px #6d6d6d solid;\\n  font-family: 'Open Sans';\\n  font-size: 15px;\\n  height: 70px;\\n  margin: 0 50px 0 0px;\\n  min-width: 600px;\\n  padding: 2px 5px;\\n  resize: none; }\\n\\n.cc-sdk .multiline-box:focus {\\n  outline: 0; }\\n\\n.cc-sdk .detail-box .cc-question-container__text p {\\n  font-size: 13px;\\n  font-weight: 700; }\\n\\n.cc-sdk .detail-box .cc-question-container__text span {\\n  display: inline-block;\\n  font-size: 15px;\\n  font-weight: normal; }\\n\\n.cc-sdk .detail-box .cc-question-container__text {\\n  height: 56px; }\\n\\n.cc-sdk .detail-box[data-type=\\\"singleline\\\"] .cc-question-container__text {\\n  margin-left: 20px; }\\n\\n.cc-sdk .detail-box .cc-question-container__content .cc-sdk-form-control,\\n.cc-sdk .single-line .cc-question-container__content .cc-sdk-form-control {\\n  background: transparent;\\n  border: none;\\n  border-bottom: 1px solid #6d6d6d;\\n  font-family: \\\"open sans\\\";\\n  font-size: 15px;\\n  line-height: 26px;\\n  outline: 0;\\n  width: 300px;\\n  margin-right: 70px; }\\n\\n.cc-sdk .d-star-box.detail-box .cc-question-container__text {\\n  height: 92px; }\\n\\n.cc-sdk .hl.dropdown {\\n  background-image: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/arrow-down.black.svg\\\");\\n  background-position: 3% center;\\n  background-repeat: no-repeat;\\n  border-bottom: 1px solid #6d6d6d;\\n  display: inline-block;\\n  padding: 5px;\\n  position: relative;\\n  text-align: right;\\n  width: 300px; }\\n\\n.cc-sdk .drop-cc-question-container .cc-question-container__text {\\n  /*height: 60px;*/\\n  margin-left: 20px; }\\n\\n.cc-sdk .cc-sdk-form-control:focus {\\n  border-color: #fcaf18; }\\n\\n.cc-sdk .detail-box .cc-question-container__content {\\n  padding-right: 0; }\\n\\n.cc-sdk .cc-big-list-container .cc-question-container__list {\\n  display: table;\\n  width: 100%; }\\n\\n.cc-sdk .cc-big-list-container .cc-question-container__list li {\\n  display: table-cell;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-thankyou-container {\\n  width: 100% !important; }\\n\\n.cc-sdk .submit-icon {\\n  direction: rtl;\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n  bottom: 0;\\n  margin: auto 0;\\n  z-index: 11;\\n  margin-left: 75px;\\n  font-size: 14px;\\n  cursor: pointer;\\n  width: 47px;\\n  height: 47px; }\\n\\n@media (min-width: 1000px) {\\n  .cc-sdk .cc-big-list-container .cc-question-container__list li span label {\\n    overflow: hidden;\\n    max-height: 100px;\\n    display: block; } }\\n\\n@media (min-width: 769px) and (max-width: 875px) {\\n  .cc-sdk .cc-question-container__list li {\\n    padding-right: 0px !important; } }\\n\\n@media (min-width: 769px) and (max-width: 1024px) {\\n  .cc-sdk .cc-popup-container-2 {\\n    height: 200px; }\\n  .cc-sdk .cc-big-list-container .cc-question-container__list,\\n  .cc-sdk .cc-question-container__list {\\n    text-align: right; }\\n  .cc-sdk .cc-big-list-container .cc-question-container__list li,\\n  .cc-sdk .cc-question-container__list li {\\n    display: inline-block;\\n    margin-bottom: 15px;\\n    vertical-align: middle;\\n    width: 49%; }\\n  .cc-sdk .cc-question-container__content {\\n    display: inline-block;\\n    width: 45%; }\\n  .cc-sdk .multiline-box {\\n    min-width: 100%;\\n    margin: 0; }\\n  .cc-sdk .option-smile-box img,\\n  .cc-sdk .option-star-box img {\\n    margin-left: 11px !important; }\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text p,\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text {\\n    width: 100% !important;\\n    text-align: center;\\n    margin: 0 !important;\\n    padding: 0;\\n    line-height: initial;\\n    height: auto; }\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text {\\n    max-width: 98%; } }\\n\\n@media (min-width: 1000px) {\\n  .cc-sdk .cc-question-container__text p {\\n    max-height: 100px;\\n    overflow: hidden;\\n    max-width: 140ch; }\\n  .cc-sdk .cc-question-container__text p.ellipsis:after {\\n    content: '...';\\n    text-align: left;\\n    bottom: 9px;\\n    left: -3px;\\n    width: 12px;\\n    display: block;\\n    position: absolute;\\n    height: calc(1em * 1.2); } }\\n\\n@media (min-width: 769px) and (max-width: 992px) {\\n  .cc-sdk .cc-question-container {\\n    width: 100%;\\n    margin: auto; }\\n  .cc-sdk .cc-question-container__text {\\n    width: 24%;\\n    padding-left: 20px; }\\n  .cc-sdk .cc-question-container__text p {\\n    max-height: 110px;\\n    overflow: hidden; }\\n  .cc-sdk .cc-question-container__content.rating-color {\\n    margin-right: 0px; }\\n  .cc-sdk .submit-icon {\\n    margin-left: 40px !important; }\\n  .cc-sdk .cc-question-container__content.rating-color {\\n    margin-right: 0px !important; }\\n  .cc-sdk .cc-question-container__content {\\n    width: 50% !important; } }\\n\\n@media (max-width: 768px) {\\n  .cc-sdk .cc-survey-container,\\n  .cc-sdk .cc-survey-content {\\n    height: 100%; }\\n  .cc-sdk .cc-popup-container-2 {\\n    bottom: auto;\\n    height: 100%;\\n    top: 0; }\\n  .cc-sdk .cc-popup-container-2__icons.cc-right-icon {\\n    right: auto;\\n    left: 0;\\n    padding: 0; }\\n  .cc-sdk .cc-popup-container-2__icons.cc-left-icon {\\n    right: 0;\\n    left: auto;\\n    padding: 0; }\\n  .cc-sdk .cc-big-list-container .cc-question-container__list li,\\n  .cc-sdk[dir=\\\"rtl\\\"] .cc-big-list-container .cc-question-container__list li {\\n    display: block; }\\n  .cc-sdk .radio-toggle--more-option li span {\\n    width: 84% !important;\\n    padding-right: 25px !important; }\\n  .cc-sdk .radio-toggle--more-option li {\\n    padding-left: 0 !important;\\n    display: block !important;\\n    padding-top: 10px; }\\n  .cc-sdk .detail-box .cc-question-container__content {\\n    padding-right: 0px; }\\n  .cc-sdk .cc-question-container {\\n    bottom: 75px;\\n    height: auto;\\n    right: 0;\\n    padding: 40px 20px;\\n    position: absolute;\\n    text-align: right;\\n    top: auto;\\n    width: 100%; }\\n  .cc-sdk .cc-question-container__text {\\n    font-size: 18px;\\n    margin-bottom: 20px;\\n    max-width: 400px;\\n    text-align: right;\\n    width: 100%; }\\n  .cc-sdk .cc-question-container__content {\\n    display: block;\\n    max-width: 100%;\\n    width: 100%; }\\n  .cc-sdk .cc-question-container__list label {\\n    display: block; }\\n  .cc-sdk .cc-question-container__list li span {\\n    width: auto;\\n    padding-right: 15px; }\\n  .cc-sdk .cc-question-container__list li {\\n    padding-right: 0;\\n    margin-bottom: 10px;\\n    display: block; }\\n  .cc-sdk .cc-popup-container-2__icons {\\n    margin: 20px; }\\n  .cc-sdk .cc-popup-container-2__icons.left-icon {\\n    right: auto;\\n    left: 0; }\\n  .cc-sdk .cc-popup-container-2__icons.right-icon {\\n    left: auto;\\n    right: 0; }\\n  .cc-sdk .cc-popup-container__close {\\n    width: 27px; }\\n  .cc-sdk .cc-question-container__content.rating-color {\\n    margin-right: 0 !important; }\\n  .cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .cc-question-container__content,\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .cc-question-container__content {\\n    width: 100% !important; }\\n  .cc-sdk .multiline-box {\\n    height: 150px;\\n    margin: 0;\\n    min-width: 100%;\\n    width: 100%; }\\n  .cc-sdk .hl.dropdown {\\n    width: 100%; }\\n  .cc-sdk .detail-box .cc-question-container__content .cc-sdk-form-control {\\n    width: 100%; }\\n  .cc-sdk .detail-box .cc-question-container__text p {\\n    font-size: 18px; }\\n  .cc-sdk .mobile-detail-box .cc-question-container__text {\\n    height: auto; }\\n  .cc-sdk .cc-question-container__text p {\\n    max-height: auto; }\\n  .cc-sdk .welcome-box .cc-question-container__text p {\\n    color: #fff; }\\n  .cc-sdk .cc-questions-container {\\n    height: 100%;\\n    position: relative; }\\n  .cc-sdk .cc-message-box__btn {\\n    margin-right: 20px; } }\\n\\n@media (max-width: 768px) {\\n  .cc-sdk .detail-box .cc-question-container__content .cc-sdk-form-control,\\n  .cc-sdk .single-line .cc-question-container__content .cc-sdk-form-control {\\n    margin-right: 0; }\\n  .cc-sdk .submit-icon {\\n    position: absolute;\\n    right: 20px;\\n    top: auto;\\n    bottom: 30px;\\n    padding-left: 0; }\\n  .cc-sdk.cc-popup-container {\\n    position: fixed;\\n    bottom: 0;\\n    right: 0;\\n    left: 0;\\n    margin: 0 !important;\\n    width: 100%;\\n    height: 13em;\\n    max-width: 100%;\\n    max-height: 100%;\\n    text-align: right;\\n    background: transparent; }\\n  .cc-sdk.cc-popup-container .cc-message-box {\\n    position: absolute;\\n    bottom: 20%; }\\n  .cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text {\\n    font-size: 20px; }\\n  .cc-sdk.cc-popup-container .cc-message-box .submit-icon {\\n    position: absolute;\\n    bottom: -100%;\\n    top: auto;\\n    right: 0;\\n    margin: 0 14px; }\\n  .cc-sdk.cc-popup-container .cc-popup-container__close {\\n    margin: 20px;\\n    left: 0;\\n    top: 0; }\\n  .cc-sdk.cc-popup-container__back {\\n    background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);\\n    display: inline-block;\\n    width: 27px;\\n    height: 27px;\\n    background-size: 100%; }\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text p,\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text {\\n    width: 100% !important;\\n    text-align: center;\\n    margin: 0 !important;\\n    padding: 0;\\n    line-height: initial;\\n    height: auto; }\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text {\\n    max-width: 98%; } }\\n\\n.date-s, .date-y {\\n  display: inline-block;\\n  margin: 0 12px !important;\\n  width: 80px !important; }\\n\\n.date-error {\\n  color: red;\\n  font-style: italic;\\n  visibility: hidden;\\n  margin-top: 12px; }\\n  .date-error.show-error {\\n    visibility: visible; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk ul {\\n  padding-left: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk.cc-popup-container .cc-popup-container__close {\\n  left: auto;\\n  right: 0;\\n  top: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text {\\n  text-align: left; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-popup-container__back {\\n  background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_rtl_.svg); }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-popup-container-2__icons.cc-right-icon {\\n  left: auto;\\n  right: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-popup-container-2__icons.cc-left-icon {\\n  left: 0;\\n  right: auto; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk.cc-question-container {\\n  margin-right: 0;\\n  margin-left: 0;\\n  left: 0;\\n  right: auto; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__required,\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__validation {\\n  left: 0%;\\n  right: auto; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__required-label {\\n  top: -2px;\\n  left: -2px;\\n  right: auto; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__list li {\\n  display: inline-block;\\n  padding-left: 15px !important;\\n  padding-right: 15px !important;\\n  vertical-align: middle; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"checkbox\\\"] .cc-question-container__list li {\\n  padding-left: 0 !important; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__list li span {\\n  padding-left: 15px;\\n  padding-right: 0;\\n  text-align: left; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container:before {\\n  margin-right: -4px;\\n  margin-left: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .multiline-box {\\n  margin: 0 0px 0 50px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .hl.dropdown {\\n  background-position: 3% center;\\n  text-align: left; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .drop-cc-question-container .cc-question-container__text {\\n  margin-right: 20px;\\n  margin-left: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .detail-box .cc-question-container__content {\\n  padding-left: 0;\\n  padding-right: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__content {\\n  text-align: left; }\\n\\n@media (min-width: 769px) and (max-width: 1024px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-big-list-container .cc-question-container__list,\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__list {\\n    text-align: left; }\\n  [dir=\\\"rtl\\\"].cc-sdk .multiline-box {\\n    margin: 0 0px 0 0px; } }\\n\\n@media (min-width: 769px) and (max-width: 992px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__text {\\n    padding-right: 20px;\\n    padding-left: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__content.rating-color {\\n    margin-right: 0px;\\n    margin-left: 0px; } }\\n\\n@media (max-width: 768px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-popup-container-2__icons.cc-right-icon {\\n    right: 0;\\n    left: auto; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-popup-container-2__icons.cc-left-icon {\\n    right: auto;\\n    left: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .radio-toggle--more-option li span {\\n    padding-left: 25px !important;\\n    padding-right: 0 !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .radio-toggle--more-option li {\\n    padding-left: 0 !important;\\n    padding-right: 0 !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .detail-box .cc-question-container__content {\\n    padding-right: 0px;\\n    padding-left: 0px; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container {\\n    right: auto;\\n    left: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .multiline-box {\\n    margin: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__text {\\n    text-align: left;\\n    width: 100%;\\n    margin-left: 5px;\\n    max-width: 100%; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__list li span {\\n    padding-left: 15px;\\n    padding-right: 0px; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__list li {\\n    padding-right: 0;\\n    padding-left: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-popup-container-2__icons.left-icon {\\n    right: 0;\\n    left: auto; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-popup-container-2__icons.right-icon {\\n    left: 0;\\n    right: auto; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__content.rating-color {\\n    margin-right: 0 !important;\\n    margin-left: 0 !important; } }\\n\\n/*cc-question-container color scale css*/\\n.cc-sdk .option-number-item {\\n  color: #fff;\\n  float: right;\\n  font-size: 13px;\\n  height: 38px;\\n  box-sizing: border-box;\\n  padding-top: 10px;\\n  text-align: center;\\n  width: 8.5%;\\n  margin-right: 1px;\\n  margin-left: 0;\\n  cursor: pointer; }\\n  .cc-sdk .option-number-item.option-zero {\\n    background: #853838; }\\n  .cc-sdk .option-number-item.option-zero.selected, .cc-sdk .option-number-item.option-zero:hover {\\n    background: #572526; }\\n  .cc-sdk .option-number-item.option-one {\\n    background: #9e4343; }\\n  .cc-sdk .option-number-item.option-one.selected, .cc-sdk .option-number-item.option-one:hover {\\n    background: #642728; }\\n  .cc-sdk .option-number-item.option-two {\\n    background: #c14d4d; }\\n  .cc-sdk .option-number-item.option-two.selected, .cc-sdk .option-number-item.option-two:hover {\\n    background: #712827; }\\n  .cc-sdk .option-number-item.option-three {\\n    background: #d94d4d; }\\n  .cc-sdk .option-number-item.option-three.selected, .cc-sdk .option-number-item.option-three:hover {\\n    background: #7c2828; }\\n  .cc-sdk .option-number-item.option-four {\\n    background: #ee4d4d; }\\n  .cc-sdk .option-number-item.option-four.selected, .cc-sdk .option-number-item.option-four:hover {\\n    background: #852828; }\\n  .cc-sdk .option-number-item.option-five {\\n    background: #ff4d4d; }\\n  .cc-sdk .option-number-item.option-five.selected, .cc-sdk .option-number-item.option-five:hover {\\n    background: #844828; }\\n  .cc-sdk .option-number-item.option-six {\\n    background: #ff8c4d; }\\n  .cc-sdk .option-number-item.option-six.selected, .cc-sdk .option-number-item.option-six:hover {\\n    background: #844828; }\\n  .cc-sdk .option-number-item.option-seven {\\n    background: #ffc74d; }\\n  .cc-sdk .option-number-item.option-seven.selected, .cc-sdk .option-number-item.option-seven:hover {\\n    background: #856728; }\\n  .cc-sdk .option-number-item.option-eight {\\n    background: #f5eb4d; }\\n  .cc-sdk .option-number-item.option-eight.selected, .cc-sdk .option-number-item.option-eight:hover {\\n    background: #7f7a28; }\\n  .cc-sdk .option-number-item.option-nine {\\n    background: #73ca81; }\\n  .cc-sdk .option-number-item.option-nine.selected, .cc-sdk .option-number-item.option-nine:hover {\\n    background: #3b6942; }\\n  .cc-sdk .option-number-item.option-ten {\\n    background: #4db47c; }\\n  .cc-sdk .option-number-item.option-ten.selected, .cc-sdk .option-number-item.option-ten:hover {\\n    background: #285e40; }\\n  .cc-sdk .option-number-item.option-7-scale-1 {\\n    background: #ed534f; }\\n  .cc-sdk .option-number-item.option-7-scale-2 {\\n    background: #ed534f; }\\n  .cc-sdk .option-number-item.option-7-scale-3 {\\n    background: #ed534f; }\\n  .cc-sdk .option-number-item.option-7-scale-4 {\\n    background: #ffbc00; }\\n  .cc-sdk .option-number-item.option-7-scale-5 {\\n    background: #ffbc00; }\\n  .cc-sdk .option-number-item.option-7-scale-6 {\\n    background: #4db47c; }\\n  .cc-sdk .option-number-item.option-7-scale-7 {\\n    background: #4db47c; }\\n  .cc-sdk .option-number-item.option-5-scale-1 {\\n    background: #ed534f; }\\n  .cc-sdk .option-number-item.option-5-scale-2 {\\n    background: #ed534f; }\\n  .cc-sdk .option-number-item.option-5-scale-3 {\\n    background: #ffbc00; }\\n  .cc-sdk .option-number-item.option-5-scale-4 {\\n    background: #4db47c; }\\n  .cc-sdk .option-number-item.option-5-scale-5 {\\n    background: #4db47c; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .option-number-item {\\n  width: calc(9.09% - 1px); }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"].scale-image-container\\n.option-number-item {\\n  width: 8.4%; }\\n\\n.cc-sdk .cc-question-container__content.rating-color {\\n  margin-right: 74px; }\\n\\n.cc-sdk .option-left-rating-text,\\n.cc-sdk .option-right-rating-text,\\n.cc-sdk .option-mid-rating-text,\\n.cc-sdk .option-midnps-rating-text {\\n  color: #424242;\\n  font-size: 13px;\\n  right: 0;\\n  position: absolute; }\\n\\n.cc-sdk .option-midnps-rating-text {\\n  right: calc(7 * 9.09% - 1px); }\\n\\n.cc-sdk .option-left-rating-text-small-container {\\n  max-width: 57px;\\n  text-align: right;\\n  overflow: hidden; }\\n\\n.cc-sdk .option-mid-rating-text-small-container {\\n  max-width: 57px;\\n  text-align: right;\\n  overflow: hidden; }\\n\\n.cc-sdk .option-right-rating-text-small-container {\\n  max-width: 57px;\\n  text-align: left;\\n  overflow: hidden; }\\n\\n.cc-sdk .option-left-rating-text-small-container-smile {\\n  width: 40%;\\n  text-align: right;\\n  max-height: 37px;\\n  overflow: hidden;\\n  bottom: auto !important;\\n  top: 57px; }\\n\\n.cc-sdk .option-right-rating-text-small-container-smile {\\n  width: 40%;\\n  text-align: left;\\n  max-height: 37px;\\n  overflow: hidden;\\n  bottom: auto !important;\\n  top: 57px; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-left-rating-text,\\n.cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-left-rating-text {\\n  right: 4px;\\n  width: 40%;\\n  text-align: right; }\\n\\n.cc-sdk .option-right-rating-text {\\n  right: auto;\\n  left: 0; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n.cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n  left: 4px;\\n  text-align: left;\\n  width: 40%; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-number-item {\\n  width: 38px;\\n  margin: 0 0.5px;\\n  cursor: pointer;\\n  display: inline-block;\\n  float: none; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .cc-question-container__list {\\n  display: inline-block;\\n  width: auto;\\n  position: relative; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"].scale-image-container\\n.cc-question-container__list {\\n  width: 100%; }\\n\\n.cc-sdk .rating-color {\\n  position: relative; }\\n\\n.cc-sdk .option-smile-box,\\n.cc-sdk .option-star-box {\\n  height: 60px;\\n  margin-left: 29px;\\n  width: 60px;\\n  cursor: pointer;\\n  box-sizing: border-box;\\n  border: solid 4px transparent;\\n  border-radius: 50%;\\n  display: inline-block;\\n  background-size: 100%; }\\n\\n.cc-sdk:not([dir=\\\"rtl\\\"]) .option-star-box:nth-child(5),\\n.cc-sdk:not([dir=\\\"rtl\\\"]) .option-smile-box:nth-child(5) {\\n  margin-left: 0; }\\n\\n.cc-sdk[dir=\\\"rtl\\\"] .option-star-box:nth-child(1),\\n.cc-sdk[dir=\\\"rtl\\\"] .option-smile-box:nth-child(1) {\\n  margin-left: 0; }\\n\\n.cc-sdk .option-smile-box.cc-one {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-two {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-three {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-four {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-five {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-one.selected, .cc-sdk .option-smile-box.cc-one:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-two.selected, .cc-sdk .option-smile-box.cc-two:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-three.selected, .cc-sdk .option-smile-box.cc-three:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-four.selected, .cc-sdk .option-smile-box.cc-four:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-five.selected, .cc-sdk .option-smile-box.cc-five:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .cc-csat.cc-question-container__content.rating-color {\\n  margin-right: 45px; }\\n\\n.cc-sdk .option-csat.option-smile-box.selected,\\n.cc-sdk .option-csat.option-smile-box:hover,\\n.cc-sdk .option-csat.option-smile-box {\\n  background-size: 25px;\\n  background-position: 18px center; }\\n\\n.cc-sdk .option-csat {\\n  height: 30px;\\n  margin-left: 68px;\\n  width: 30px;\\n  padding-right: 50px;\\n  font-size: 14px; }\\n\\n.cc-sdk .option-csat {\\n  height: 45px;\\n  margin-left: 0px;\\n  width: auto;\\n  padding-right: 0px;\\n  font-size: 14px;\\n  vertical-align: middle;\\n  display: inline-block;\\n  margin-left: 13px; }\\n  .cc-sdk .option-csat span {\\n    display: inline-block;\\n    vertical-align: top;\\n    font-size: 12px;\\n    padding-right: 25px;\\n    position: relative;\\n    text-align: right;\\n    /* min-height: 32px; */\\n    width: 100%; }\\n  .cc-sdk .option-csat .cc-checkbox label {\\n    pointer-events: none; }\\n\\n.cc-sdk .option-star-box {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-star-box:hover,\\n.cc-sdk .option-star-box.selected {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star_selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"slider\\\"] .option-left-rating-text {\\n  right: 4px;\\n  width: 40%;\\n  text-align: right; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"slider\\\"] .option-right-rating-text {\\n  width: 40%;\\n  text-align: left; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .cc-question-container__list,\\n.cc-sdk .cc-question-container[data-type=\\\"star\\\"] .cc-question-container__list {\\n  position: relative;\\n  width: auto;\\n  display: inline-block; }\\n\\n.cc-sdk .circle-image {\\n  margin: auto;\\n  width: 253px;\\n  overflow: hidden;\\n  height: 240px;\\n  position: relative; }\\n\\n.cc-sdk .circle-image-scale-010-neutral {\\n  width: 242px;\\n  overflow: hidden;\\n  height: 230px;\\n  margin: auto; }\\n\\n.cc-sdk .cc-nps-selected-rating {\\n  font-size: 100px;\\n  display: inline-block;\\n  position: absolute;\\n  top: 0;\\n  right: 0px;\\n  line-height: 100px;\\n  left: 0;\\n  margin: auto;\\n  bottom: 0;\\n  width: 110px;\\n  height: 100px;\\n  text-align: center;\\n  font-weight: 100;\\n  color: #bbb; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n.cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n  left: 4px; }\\n\\n.cc-sdk .option-number-item.option-scale {\\n  background: #4db47c; }\\n\\n.cc-sdk .option-number-item.option-scale.selected,\\n.cc-sdk .option-number-item.option-scale:hover {\\n  background: #712827; }\\n\\n.cc-sdk .cc-nps-image {\\n  cursor: pointer;\\n  position: relative;\\n  right: 0; }\\n\\n.cc-sdk .legend-container {\\n  position: relative; }\\n\\n@media (min-width: 769px) and (max-width: 992px) {\\n  .cc-sdk .option-smile-box,\\n  .cc-sdk .option-star-box {\\n    width: 50px;\\n    height: 50px;\\n    margin-left: 10px; }\\n  .cc-sdk .option-csat.option-smile-box.selected,\\n  .cc-sdk .option-csat.option-smile-box:hover,\\n  .cc-sdk .option-csat.option-smile-box {\\n    display: inline-block;\\n    width: 168px;\\n    background-position: 48px center; }\\n    .cc-sdk .option-csat.option-smile-box.selected span,\\n    .cc-sdk .option-csat.option-smile-box:hover span,\\n    .cc-sdk .option-csat.option-smile-box span {\\n      padding-right: 40px; } }\\n\\n@media screen and (min-width: 992px) {\\n  .cc-sdk span.option-csat.option-smile-box {\\n    background-position: 44px center; }\\n    .cc-sdk span.option-csat.option-smile-box:hover, .cc-sdk span.option-csat.option-smile-box.selected {\\n      background-position: 44px center; }\\n    .cc-sdk span.option-csat.option-smile-box span {\\n      padding-right: 40px; } }\\n\\n@media (max-width: 768px) {\\n  .cc-sdk .option-smile-box,\\n  .cc-sdk .option-star-box {\\n    display: inline-block;\\n    margin-left: 3px; }\\n  .cc-sdk .option-csat.option-smile-box.selected,\\n  .cc-sdk .option-csat.option-smile-box:hover,\\n  .cc-sdk .option-csat.option-smile-box {\\n    display: block;\\n    background-size: 40px;\\n    background-position: 45px center; }\\n  .cc-sdk .option-csat.option-smile-box {\\n    height: 65px;\\n    width: 100%; }\\n  .cc-sdk .option-csat.option-smile-box span {\\n    font-size: 15px;\\n    padding-right: 40px; }\\n  .cc-sdk .option-csat.option-smile-box .cc-checkbox {\\n    top: calc(50% - 12.5px);\\n    height: 57px; }\\n  .cc-sdk .option-csat.option-smile-box .cc-checkbox.cc-radio label:before {\\n    width: 25px;\\n    height: 25px; }\\n  .cc-sdk .option-csat.option-smile-box\\n.cc-checkbox\\ninput[type=\\\"radio\\\"]:checked\\n+ label:after {\\n    width: 25px;\\n    height: 25px; }\\n  .cc-sdk .option-number-item {\\n    color: #fff;\\n    float: right;\\n    font-size: 15px;\\n    height: 35px;\\n    box-sizing: border-box;\\n    margin-left: 1px;\\n    padding-top: 7px;\\n    text-align: center;\\n    width: 38px;\\n    cursor: pointer;\\n    vertical-align: middle; }\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] {\\n    bottom: 106px; }\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-left-rating-text,\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-right-rating-text,\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-mid-rating-text {\\n    width: auto; }\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-right-rating-text {\\n    text-align: left; }\\n  .cc-sdk .option-smile-box img,\\n  .cc-sdk .option-star-box img {\\n    padding-left: 5px;\\n    margin-left: 0; }\\n  .cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .cc-question-container__content {\\n    width: 100% !important; }\\n  .cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n  .cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n    left: 10px; }\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .cc-question-container__list {\\n    width: 100%; }\\n  .cc-sdk .cc-question-container[data-type=\\\"csat\\\"] .cc-question-container__list li {\\n    width: 100%; } }\\n\\n@media (max-width: 381px) {\\n  .cc-sdk .option-smile-box,\\n  .cc-sdk .option-star-box {\\n    display: inline-block;\\n    margin-left: 0;\\n    height: 50px;\\n    width: 50px; }\\n  .cc-sdk .option-smile-box img,\\n  .cc-sdk .option-star-box img {\\n    padding-left: 5px;\\n    margin-left: 0; } }\\n\\n@media screen and (max-width: 768px) {\\n  .cc-sdk .radial-legend-right,\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] span.radial-legend-right {\\n    text-align: right;\\n    width: 35%;\\n    left: 0; }\\n  .cc-sdk .radial-legend-mid {\\n    width: 35%;\\n    text-align: center;\\n    right: 0;\\n    left: 0;\\n    display: none; }\\n  .cc-sdk .radial-legend-left {\\n    width: 35%;\\n    text-align: left;\\n    right: 0; } }\\n\\n/*cc-question-container color scale css*/\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"csat\\\"] .cc-question-container__content.rating-color {\\n  margin-left: 45px;\\n  margin-right: 0px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"csat\\\"] .cc-checkbox input[type=\\\"radio\\\"] {\\n  margin-left: 0px;\\n  opacity: 0;\\n  outline: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-number-item {\\n  margin-left: 1px;\\n  margin-right: 0;\\n  float: left; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__content.rating-color {\\n  margin-left: 74px;\\n  margin-right: 0px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-right-rating-text {\\n  right: calc(100% - 418px);\\n  left: auto !important; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-left-rating-text {\\n  left: 0px;\\n  right: auto !important; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .option-right-rating-text {\\n  right: 0;\\n  left: auto !important; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-right-rating-text {\\n  right: 0;\\n  left: auto !important; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-left-rating-text {\\n  left: 2px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"slider\\\"] .option-right-rating-text {\\n  right: 0;\\n  width: 40%;\\n  text-align: right; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"slider\\\"] .option-left-rating-text {\\n  left: 0;\\n  text-align: left; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .rating-color {\\n  position: relative; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-smile-box img {\\n  margin-left: 29px;\\n  margin-right: 0px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-star-box img {\\n  margin-right: 19px;\\n  margin-left: 0px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box span {\\n  padding-left: 25px;\\n  text-align: left;\\n  padding-right: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n  right: 7px;\\n  left: auto !important;\\n  text-align: right; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-left-rating-text,\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-left-rating-text {\\n  left: 7px;\\n  right: auto !important;\\n  text-align: left; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-csat {\\n  width: auto;\\n  box-sizing: border-box;\\n  padding-right: 0;\\n  margin-left: 13px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box.selected,\\n[dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box:hover,\\n[dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box {\\n  background-position: calc(100% - ( 100% - 44px)) center;\\n  text-align: left; }\\n\\n@media (min-width: 769px) and (max-width: 992px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .option-smile-box img,\\n  [dir=\\\"rtl\\\"].cc-sdk .option-star-box img {\\n    margin-right: 0px;\\n    margin-left: 10px; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__content.rating-color {\\n    margin-left: 10px;\\n    margin-right: 86px !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .option-right-rating-text {\\n    right: 17px;\\n    left: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n    right: 7px;\\n    text-align: right;\\n    left: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-left-rating-text,\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-left-rating-text {\\n    left: 20px;\\n    right: auto !important;\\n    text-align: left; }\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box.selected,\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box:hover,\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box {\\n    width: auto; } }\\n\\n@media (max-width: 768px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .option-smile-box img,\\n  [dir=\\\"rtl\\\"].cc-sdk .option-star-box img {\\n    padding-left: 0px;\\n    padding-right: 5px;\\n    margin-left: 0;\\n    margin-right: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"csat\\\"] .cc-checkbox input[type=\\\"radio\\\"] {\\n    margin-left: 7px;\\n    opacity: 0;\\n    outline: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box.selected,\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box:hover,\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box {\\n    background-position: calc(100% - ( 100% - 44px)) center; }\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box span {\\n    padding-left: 39px;\\n    text-align: left;\\n    padding-right: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-left-rating-text,\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-left-rating-text {\\n    left: 10px;\\n    right: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .option-left-rating-text {\\n    left: 10px;\\n    right: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n    left: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .option-right-rating-text {\\n    right: calc(100% - 322px);\\n    left: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-right-rating-text {\\n    right: 13px;\\n    left: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .radial-legend-right, [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .radial-legend-right {\\n    right: auto !important;\\n    left: 10px !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .radial-legend-left, [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .radial-legend-left {\\n    left: auto !important;\\n    right: 10px !important; } }\\n\\n@media (max-width: 381px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .option-right-rating-text {\\n    right: calc(100% - 258px);\\n    left: auto !important; } }\\n\\n.cc-sdk .cc-select-wrapper {\\n  position: relative;\\n  display: inline-block;\\n  user-select: none;\\n  z-index: 11; }\\n\\n.cc-sdk .cc-select-wrapper select {\\n  display: none; }\\n\\n.cc-sdk .cc-select {\\n  position: relative;\\n  display: inline-block;\\n  margin-right: 70px; }\\n\\n.cc-sdk .cc-select-trigger {\\n  position: relative;\\n  display: block;\\n  width: 130px;\\n  padding: 0 22px 0 84px;\\n  font-size: 15px;\\n  font-style: italic;\\n  font-weight: 300;\\n  color: #222;\\n  line-height: 20px;\\n  background: transparent;\\n  border-radius: 0;\\n  cursor: pointer;\\n  width: 300px;\\n  border-bottom: 1px solid #6d6d6d;\\n  display: inline-block;\\n  text-align: right;\\n  padding: 5px 5px 5px 20px;\\n  position: relative;\\n  /*background-image: url(../images/arrow-down.black.svg);*/\\n  background-position: 3% center;\\n  background-repeat: no-repeat;\\n  max-height: 50px;\\n  overflow: hidden; }\\n\\n.cc-sdk .cc-select-trigger:after {\\n  position: absolute;\\n  display: block;\\n  content: '';\\n  width: 10px;\\n  height: 10px;\\n  top: 50%;\\n  left: 5px;\\n  margin-top: -3px;\\n  border-bottom: 1px solid #222;\\n  border-left: 1px solid #222;\\n  transform: rotate(-45deg) translateY(-50%);\\n  transition: all .2s ease-in-out;\\n  transform-origin: 50% 0; }\\n\\n.cc-sdk .cc-select.cc-opened .cc-select-trigger:after {\\n  margin-top: 3px;\\n  transform: rotate(135deg) translateY(-50%); }\\n\\n.cc-sdk .cc-select-options-container {\\n  position: absolute;\\n  display: block;\\n  top: 100%;\\n  right: 0;\\n  left: 0;\\n  min-width: 100%;\\n  margin: 15px 0;\\n  border: 1px solid #b5b5b5;\\n  border-radius: 4px;\\n  box-sizing: border-box;\\n  box-shadow: 0 2px 1px rgba(0, 0, 0, 0.07);\\n  background: #fff;\\n  transition: all .2s ease-in-out;\\n  opacity: 0;\\n  visibility: hidden;\\n  pointer-events: none;\\n  transform: translateY(calc( -100% - 65px));\\n  height: auto;\\n  max-height: 150px;\\n  overflow: hidden;\\n  overflow-y: scroll; }\\n\\n.cc-sdk .cc-select-options {\\n  /*  max-height: 150px;\\r\\n    overflow-y: scroll; */\\n  overflow-y: scroll;\\n  height: 100%;\\n  width: 110%; }\\n\\n.cc-sdk .cc-select.cc-opened .cc-select-options-container {\\n  opacity: 1;\\n  visibility: visible;\\n  pointer-events: all;\\n  transform: translateY(-100%) translateY(-65px); }\\n\\n@media (min-width: 769px) {\\n  .cc-sdk .cc-popup-container-2.top .cc-select-options-container,\\n  .cc-sdk .cc-popup-container-2.top .cc-select.cc-opened .cc-select-options-container {\\n    transform: translateY(-19px); } }\\n\\n.cc-sdk .cc-select-options:before {\\n  /*       position: absolute;\\r\\n    display: block;\\r\\n    content: '';\\r\\n    bottom: 100%; right: 25px;\\r\\n    width: 7px; height: 7px;\\r\\n    margin-bottom: -4px;\\r\\n    border-top: 1px solid #b5b5b5;\\r\\n    border-left: 1px solid #b5b5b5;\\r\\n    background: #fff;\\r\\n    transform: rotate(45deg);\\r\\n    transition: all .4s ease-in-out; */ }\\n\\n.cc-sdk .option-hover:before {\\n  background: #f9f9f9; }\\n\\n.cc-sdk .cc-select-option {\\n  position: relative;\\n  display: block;\\n  padding: 0 12px;\\n  border-bottom: 1px solid #e4e4e4;\\n  font-size: 12px;\\n  font-weight: 600;\\n  color: #222;\\n  line-height: 34px;\\n  cursor: pointer;\\n  transition: all .2s ease-in-out;\\n  text-align: right;\\n  margin: 0;\\n  width: 100%; }\\n\\n.cc-sdk .cc-select-option:first-of-type {\\n  border-radius: 4px 4px 0 0; }\\n\\n.cc-sdk .cc-select-option:last-of-type {\\n  border-bottom: 0;\\n  border-radius: 0 0 4px 4px; }\\n\\n.cc-sdk .cc-select-option:hover,\\n.cc-sdk .cc-select-option.selection {\\n  background: #eaeaea; }\\n\\n.cc-sdk .cc-select-wrapper.down .cc-select-options-container {\\n  transform: translateY(calc( 20px)); }\\n\\n.cc-sdk .cc-select-wrapper.down .cc-select.cc-opened .cc-select-options-container {\\n  transform: translateY(calc( 20px)); }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .cc-question-container__content,\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .cc-question-container__content {\\n  width: 40%; }\\n\\n@media (max-width: 768px) {\\n  .cc-sdk .cc-select,\\n  .cc-sdk .cc-select-wrapper {\\n    min-width: 100%; }\\n  .cc-sdk .cc-select {\\n    margin-right: 0px; }\\n  .cc-sdk .cc-select-trigger {\\n    min-width: 100%;\\n    width: auto; } }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-select-trigger {\\n  padding: 0 84px 0 22px;\\n  background-position: 3% center;\\n  background-repeat: no-repeat;\\n  text-align: left; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-select-trigger:after {\\n  top: 50%;\\n  right: 2px;\\n  left: auto; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-select-option {\\n  text-align: left; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-select-option:first-of-type {\\n  border-radius: 0px 4px 4px 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-select-option:last-of-type {\\n  border-radius: 4px 0 0px 4px; }\\n\\n/** Checkbox **/\\n.cc-sdk .cc-checkbox {\\n  display: table-cell;\\n  vertical-align: middle;\\n  position: relative;\\n  text-align: center; }\\n\\n.cc-sdk .cc-checkbox label {\\n  cursor: pointer;\\n  display: block;\\n  height: 20px;\\n  width: 20px; }\\n\\n.cc-sdk .cc-checkbox + span label img {\\n  width: 40px;\\n  display: inline-block;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-checkbox label:before,\\n.cc-sdk .cc-checkbox label:after {\\n  content: \\\"\\\";\\n  right: 0;\\n  margin: auto;\\n  position: absolute;\\n  top: calc(50% - 12.5px); }\\n\\n.cc-sdk .cc-checkbox label:before {\\n  background: transparent;\\n  border-radius: 2px;\\n  border: 1px solid #424242;\\n  cursor: pointer;\\n  height: 20px;\\n  transition: background 0.3s;\\n  width: 20px; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"checkbox\\\"] {\\n  opacity: 0;\\n  outline: 0; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:before {\\n  background: #fdaf19;\\n  border: none; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:after {\\n  border: 3px solid #222;\\n  border-left-style: none;\\n  border-top-style: none;\\n  height: 7px;\\n  top: calc(50% - 8.5px);\\n  right: 4px;\\n  transform: rotate(45deg);\\n  width: 12px; }\\n\\n/*radio*/\\n.cc-sdk .cc-checkbox.cc-radio label:before {\\n  background: transparent;\\n  border: 1px solid #424242;\\n  cursor: pointer;\\n  height: 25px;\\n  transition: background-color 0.3s;\\n  width: 25px; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"radio\\\"] {\\n  opacity: 0;\\n  outline: 0; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"radio\\\"]:checked + label:before {\\n  background: transparent;\\n  border-color: #fdaf19; }\\n\\n.cc-sdk .cc-question-container__list li {\\n  display: inline-table;\\n  margin-bottom: 0; }\\n  .cc-sdk .cc-question-container__list li .cc-sdk .cc-checkbox,\\n  .cc-sdk .cc-question-container__list li .cc-radio {\\n    width: 30px; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"radio\\\"]:checked + label:after {\\n  -moz-transform: scale(0.8);\\n  -ms-transform: scale(0.8);\\n  -o-transform: scale(0.8);\\n  -webkit-transform: scale(0.8);\\n  background: #fdaf19;\\n  border-radius: 30px;\\n  height: 25px;\\n  transform: scale(0.8);\\n  width: 25px; }\\n\\n.cc-sdk .cc-radio label:before {\\n  border-radius: 30px; }\\n\\n.cc-sdk .radio-toggle--more-option li span {\\n  padding-right: 25px !important;\\n  width: 125px !important; }\\n\\n.cc-sdk .radio-toggle .cc-question-container__list li {\\n  padding-right: 15px; }\\n\\n@media (min-width: 1000px) {\\n  .cc-sdk .radio-toggle .cc-question-container__list li span label {\\n    overflow: hidden;\\n    max-height: 100px;\\n    display: block; } }\\n\\n@media (min-width: 769px) and (max-width: 992px) {\\n  .cc-sdk .radio-toggle .cc-question-container__list li {\\n    padding-right: 10px; }\\n  .cc-sdk .radio-toggle .cc-question-container__list li span .label {\\n    display: block;\\n    max-height: 50px;\\n    overflow: hidden;\\n    text-overflow: ellipsis; }\\n  .cc-sdk .radio-toggle .cc-question-container__list li span label {\\n    overflow: hidden;\\n    max-height: 50px;\\n    display: block;\\n    text-overflow: ellipsis; } }\\n\\n@media (max-width: 768px) {\\n  .cc-sdk .radio-toggle .cc-question-container__list li {\\n    padding-right: 0; }\\n  .cc-sdk .radio-toggle .cc-question-container__list li {\\n    display: block;\\n    padding-left: 50px; } }\\n\\n.cc-sdk .progress-bar {\\n  width: 100%;\\n  position: absolute;\\n  background: #a47c2b;\\n  z-index: 1;\\n  height: 8px;\\n  right: 0; }\\n\\n.cc-sdk .progress-line {\\n  background: #fdaf19;\\n  height: 100%;\\n  display: block;\\n  width: 0%;\\n  transition: all .4s ease-in; }\\n\\n@media screen and (max-width: 768px) {\\n  .cc-sdk .progress-bar {\\n    bottom: unset;\\n    top: 0px; } }\\n\\n/** Scrollbar\\t**/\\n.cc-sdk .cc-scrollbar-wrapper {\\n  float: right;\\n  height: 100%;\\n  overflow: hidden;\\n  position: relative;\\n  width: 100%;\\n  z-index: 1; }\\n\\n.cc-sdk .cc-scrollbar-content {\\n  -moz-box-sizing: border-box;\\n  /* padding         : 0 32px 0 0; */\\n  /* right           : -18px; */\\n  box-sizing: border-box;\\n  height: 100%;\\n  overflow: auto;\\n  position: relative;\\n  width: 107%; }\\n\\n.cc-sdk .cc-scrollbar-scroll {\\n  background: #aaa;\\n  border-radius: 4px;\\n  cursor: pointer;\\n  opacity: 0;\\n  position: relative;\\n  top: 0;\\n  transition: opacity 0.25s linear;\\n  width: 9px;\\n  z-index: 2; }\\n\\n.cc-sdk .cc-scrollbar-container:hover .cc-scrollbar-scroll {\\n  opacity: 1; }\\n\\n.cc-sdk .cc-scrollbar-grabbed {\\n  -khtml-user-select: none;\\n  -moz-user-select: none;\\n  -o-user-select: none;\\n  -webkit-user-select: none;\\n  user-select: none; }\\n\\n.cc-sdk .cc-sdk-range {\\n  -webkit-appearance: none;\\n  -moz-appearance: none;\\n  width: 500px;\\n  height: 60px;\\n  background: transparent; }\\n\\n.cc-sdk input[type=range]::-webkit-slider-runnable-track {\\n  -webkit-appearance: none;\\n  background: #ff403d;\\n  background: -moz-linear-gradient(45deg, #ff403d 0%, #992a28 100%);\\n  background: -webkit-linear-gradient(45deg, #ff403d 0%, #992a28 100%);\\n  background: linear-gradient(-135deg, #ff403d 0%, #992a28 100%);\\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ff403d ', endColorstr='#992a28 ', GradientType=1);\\n  height: 1px; }\\n\\n.cc-sdk input[type=range]:focus {\\n  outline: none; }\\n\\n.cc-sdk input[type=range]::-moz-range-track {\\n  -moz-appearance: none;\\n  background: #ff403d;\\n  background: -moz-linear-gradient(45deg, #ff403d 0%, #992a28 100%);\\n  background: -webkit-linear-gradient(45deg, #ff403d 0%, #992a28 100%);\\n  background: linear-gradient(-135deg, #7a0806 0%, #992a28 100%);\\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ff403d ', endColorstr='#992a28 ', GradientType=1);\\n  height: 1px; }\\n\\n.cc-sdk input[type=range]::-ms-track {\\n  height: 1px;\\n  width: 500px;\\n  background-color: #ff403d; }\\n\\n.cc-sdk input[type=range]::-webkit-slider-thumb {\\n  -webkit-appearance: none;\\n  border: 1px solid #ff403d;\\n  border-radius: 50%;\\n  height: 32px;\\n  width: 32px;\\n  max-width: 80px;\\n  position: relative;\\n  bottom: 16px;\\n  background-color: #fff;\\n  cursor: -webkit-grab; }\\n\\n.cc-sdk input[type=range]::-ms-thumb {\\n  border: 1px solid #ff403d;\\n  border-radius: 50%;\\n  height: 32px;\\n  width: 32px;\\n  background: #e08692;\\n  box-sizing: border-box;\\n  cursor: pointer !important; }\\n\\n.cc-sdk input[type=range]::-moz-range-thumb {\\n  -moz-appearance: none;\\n  border: 1px solid #ff403d;\\n  border-radius: 50%;\\n  height: 32px;\\n  width: 32px;\\n  max-width: 80px;\\n  position: relative;\\n  bottom: 16px;\\n  background-color: #fff;\\n  cursor: -moz-grab; }\\n\\n.cc-sdk input[type=range]::-moz-range-thumb:before {\\n  content: 'asd'; }\\n\\n.cc-sdk input[type=range]::-webkit-slider-thumb:active {\\n  cursor: -webkit-grabbing; }\\n\\n.cc-sdk input[type=range]::-moz-range-thumb:active {\\n  cursor: -moz-grabbing; }\\n\\n.cc-sdk .cc-question-container__content.cc-sdk-range-slider {\\n  height: 50px; }\\n\\n.cc-sdk .slider-tip {\\n  background: #eb1c23;\\n  padding: 8px 9px 9px 9px;\\n  position: absolute;\\n  right: 0px;\\n  left: 0;\\n  margin: 0 auto;\\n  /* border-top-left-radius: 10px; */\\n  /* border-top-right-radius: 10px; */\\n  /* border-bottom-left-radius: 100%; */\\n  /* border-bottom-right-radius: 100%; */\\n  color: #fff;\\n  /* display: none !important; */\\n  background: none;\\n  color: #424242;\\n  font-size: 13px;\\n  width: 100px;\\n  display: inline-block;\\n  text-align: center;\\n  font-weight: bold; }\\n\\n.cc-sdk .slider-tip:after {\\n  border-width: 5px 5px 0;\\n  border-top-color: #000; }\\n\\n@media (max-width: 1024px) {\\n  .cc-sdk .cc-sdk-range {\\n    width: 100%; } }\\n\\n.cc-sdk input.cc-sdk-range.cc-blue::-moz-range-track,\\n.cc-sdk input.cc-sdk-range.cc-blue::-webkit-slider-runnable-track {\\n  background: blue; }\\n\\n.cc-sdk .chart {\\n  -moz-box-sizing: border-box;\\n  -webkit-box-sizing: border-box;\\n  box-sizing: border-box;\\n  display: inline-block;\\n  height: 21px;\\n  padding-top: 22px;\\n  position: relative;\\n  vertical-align: top;\\n  width: 21px; }\\n\\n.cc-sdk .cc-sdk-chart span {\\n  display: block;\\n  font-size: 2em;\\n  font-weight: normal; }\\n\\n.cc-sdk .cc-sdk-chart canvas {\\n  right: 0;\\n  position: absolute;\\n  top: 0; }\\n\\n.cc-sdk .cc-sdk-loader {\\n  height: 21px;\\n  right: 28px;\\n  position: absolute;\\n  top: 8px;\\n  width: 21px; }\\n\\n@media (min-width: 769px) {\\n  .cc-sdk .cc-sdk-chart canvas {\\n    margin-right: 10px; } }\\n\\n@media (max-width: 768px) {\\n  .cc-sdk .cc-sdk-loader {\\n    position: relative;\\n    right: auto;\\n    top: 0;\\n    left: auto; } }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-sdk-chart canvas {\\n  left: 0;\\n  right: auto; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-sdk-loader {\\n  left: 28px;\\n  right: auto; }\\n\\n@media (min-width: 768px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-sdk-chart canvas {\\n    margin-left: 10px;\\n    margin-right: 0; } }\\n\\n/** Utilities **/\\n.cc-sdk .show {\\n  display: block !important; }\\n\\n.cc-sdk .show-inline {\\n  display: inline-block !important; }\\n\\n.cc-sdk .hide {\\n  display: none !important; }\\n\\n.cc-sdk.bottom {\\n  bottom: 0; }\\n\\n.cc-sdk.right, .cc-sdk .right {\\n  left: 0; }\\n\\n.cc-sdk .left {\\n  right: 0; }\\n\\n.cc-sdk .top {\\n  top: 0; }\\n\\n.ccsdk-overlay {\\n  background: #fff;\\n  bottom: 0;\\n  height: 100%;\\n  right: 0;\\n  position: absolute;\\n  top: 0;\\n  width: 100%;\\n  z-index: 0; }\\n\\n.ccsdk-overlay.ccsdk-glass {\\n  background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/ww.png);\\n  background-repeat: no-repeat;\\n  background-size: cover; }\\n\\n.ccsdk-clearfix {\\n  clear: both;\\n  display: block; }\\n\\n.ccsdk-text-normal {\\n  font-weight: 400; }\\n\\n.cc-sdk ::-webkit-input-placeholder {\\n  /* Chrome/Opera/Safari */\\n  color: #4c4c4c;\\n  font-family: 'Open Sans';\\n  font-size: 13px;\\n  font-style: italic;\\n  font-weight: normal; }\\n\\n.cc-sdk .cc-sdk-form-control::-moz-placeholder {\\n  /* Firefox 19+ */\\n  font-style: italic;\\n  font-size: 13px;\\n  font-weight: normal;\\n  font-family: 'Open Sans';\\n  color: #4c4c4c; }\\n\\n.cc-sdk .cc-sdk-form-control:-ms-input-placeholder {\\n  /* IE 10+ */\\n  font-style: italic;\\n  font-size: 13px;\\n  font-weight: normal;\\n  font-family: 'Open Sans';\\n  color: #4c4c4c; }\\n\\n.cc-sdk .cc-sdk-form-control:-moz-placeholder {\\n  /* Firefox 18- */\\n  font-style: italic;\\n  font-size: 13px;\\n  font-weight: normal;\\n  font-family: 'Open Sans';\\n  color: #4c4c4c; }\\n\\n@media (min-width: 769px) {\\n  .desktop-hide {\\n    display: none; } }\\n\\n@media (max-width: 768px) {\\n  .mobile-hide {\\n    display: none; }\\n  .cc-sdk-loader {\\n    position: relative;\\n    right: auto;\\n    top: 0;\\n    left: auto; }\\n  .ccsdk-overlay.welcome-overlay {\\n    /*background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/ww.png);*/\\n    background: rgba(210, 42, 53, 0.87); } }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .submit-icon {\\n  right: 0;\\n  left: auto;\\n  margin-right: 75px; }\\n\\n@media (max-width: 768px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .submit-icon {\\n    position: absolute;\\n    right: auto;\\n    top: auto;\\n    bottom: 30px;\\n    padding-right: 0;\\n    left: 20px;\\n    margin: 0; } }\\n\\n/** Themes **/\\n/** Prefetch icons **/\\n.cc-sdk::before {\\n  width: 0px;\\n  height: 0px;\\n  overflow: hidden;\\n  position: absolute;\\n  z-index: -1; }\\n\\n.cc-sdk .yellow .progress-bar {\\n  background: #a47c2b; }\\n\\n.cc-sdk .yellow .progress-line {\\n  background: #fdaf19; }\\n\\n.cc-sdk .yellow .submit-icon {\\n  background-image: url(\\\"data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%2747px%27%20height%3D%2747px%27%20viewBox%3D%270%200%2047%2047%27%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%3E%3Ctitle%3EGroup%2016%3C%2Ftitle%3E%3Cdesc%3ECreated%20with%20Sketch.%3C%2Fdesc%3E%3Cdefs%3E%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%3Cfilter%20x%3D%27-18.1%25%27%20y%3D%27-12.9%25%27%20width%3D%27136.2%25%27%20height%3D%27136.2%25%27%20filterUnits%3D%27objectBoundingBox%27%20id%3D%27filter-2%27%3E%3CfeOffset%20dx%3D%270%27%20dy%3D%272%27%20in%3D%27SourceAlpha%27%20result%3D%27shadowOffsetOuter1%27%3E%3C%2FfeOffset%3E%3CfeGaussianBlur%20stdDeviation%3D%272%27%20in%3D%27shadowOffsetOuter1%27%20result%3D%27shadowBlurOuter1%27%3E%3C%2FfeGaussianBlur%3E%3CfeColorMatrix%20values%3D%270%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200.116423234%200%27%20type%3D%27matrix%27%20in%3D%27shadowBlurOuter1%27%3E%3C%2FfeColorMatrix%3E%3C%2Ffilter%3E%3C%2Fdefs%3E%3Cg%20id%3D%27Page-1%27%20stroke%3D%27none%27%20stroke-width%3D%271%27%20fill%3D%27none%27%20fill-rule%3D%27evenodd%27%3E%3Cg%20id%3D%271-copy-20%27%20transform%3D%27translate(-1246.000000%2C%20-664.000000)%27%3E%3Cg%20id%3D%27Group-16%27%20transform%3D%27translate(1250.000000%2C%20666.000000)%27%3E%3Cg%20id%3D%27Oval-4%27%3E%3Cuse%20fill%3D%27white%27%20fill-opacity%3D%271%27%20filter%3D%27url(%23filter-2)%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3Cuse%20fill%3D%27%23d04a49%27%20fill-rule%3D%27evenodd%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3C%2Fg%3E%3Cg%20id%3D%27Group-5%27%20transform%3D%27translate(12.000000%2C%2011.000000)%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23FFFFFF%27%3E%3Cg%20id%3D%27fast-forward-arrows%27%20transform%3D%27translate(6.173934%2C%200.000000)%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3Cg%20id%3D%27fast-forward-arrows-copy%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\\\"); }\\n\\n.cc-sdk .yellow .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:before {\\n  background: #fdaf19; }\\n\\n.cc-sdk .yellow .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:after {\\n  border-color: #222; }\\n\\n.cc-sdk .yellow .cc-checkbox input[type=\\\"radio\\\"]:checked + label:before {\\n  border-color: #fdaf19; }\\n\\n.cc-sdk .yellow .cc-checkbox input[type=\\\"radio\\\"]:checked + label:after {\\n  background: #fdaf19; }\\n\\n.cc-sdk .yellow .cc-sdk-form-control:focus {\\n  border-color: #fcaf18; }\\n\\n.cc-sdk .yellow .cc-message-box__btn {\\n  background: #fdaf19; }\\n\\n.cc-sdk .red .progress-bar {\\n  /*background: rgba(130, 17, 25, 0.87);*/\\n  background: #d22a35; }\\n\\n.cc-sdk .red .progress-line {\\n  background: #d22a35;\\n  filter: brightness(150%); }\\n\\n.cc-sdk .red .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:before {\\n  background: #d22a35; }\\n\\n.cc-sdk .red .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:after {\\n  border-color: #fff; }\\n\\n.cc-sdk .red .cc-checkbox input[type=\\\"radio\\\"]:checked + label:before {\\n  border-color: #d22a35; }\\n\\n.cc-sdk .red .cc-checkbox input[type=\\\"radio\\\"]:checked + label:after {\\n  background: #d22a35; }\\n\\n.cc-sdk .red .cc-sdk-form-control:focus {\\n  border-color: #d22a35; }\\n\\n.cc-sdk .red .cc-message-box__btn {\\n  background: #d22a35;\\n  color: #fff; }\\n\\n.cc-question-container, .hide-slide {\\n  -webkit-transform: translateX(-5px);\\n  -moz-transform: translateX(-5px);\\n  -ms-transform: translateX(-5px);\\n  -o-transform: translateX(-5px);\\n  transform: translateX(-5px);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.hide-bottom-up {\\n  -webkit-transform: translateY(30px);\\n  -moz-transform: translateY(30px);\\n  -ms-transform: translateY(30px);\\n  -o-transform: translateY(30px);\\n  transform: translateY(30px);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.hide-up-bottom {\\n  -webkit-transform: translateY(100%);\\n  -moz-transform: translateY(100%);\\n  -ms-transform: translateY(100%);\\n  -o-transform: translateY(100%);\\n  transform: translateY(100%);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.hide-right-left {\\n  -webkit-transform: translateX(-100%);\\n  -moz-transform: translateX(-100%);\\n  -ms-transform: translateX(-100%);\\n  -o-transform: translateX(-100%);\\n  transform: translateX(-100%);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.hide-left-right {\\n  -webkit-transform: translateX(100%);\\n  -moz-transform: translateX(100%);\\n  -ms-transform: translateX(100%);\\n  -o-transform: translateX(100%);\\n  transform: translateX(100%);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.show-slide, .show-thankyou-slide {\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: visible;\\n  opacity: 1;\\n  -webkit-transform: translateX(0) translateY(0);\\n  -moz-transform: translateX(0) translateY(0);\\n  -ms-transform: translateX(0) translateY(0);\\n  -o-transform: translateX(0) translateY(0);\\n  transform: translateX(0) translateY(0); }\\n\\n.cc-sdk #timer {\\n  position: relative; }\\n\\n.cc-sdk svg.cc-sdk-timer {\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  width: 40px;\\n  height: 40px;\\n  transform: rotateY(-180deg) rotateZ(90deg); }\\n\\n[dir=\\\"rtl\\\"].cc-sdk svg.cc-sdk-timer {\\n  left: 0;\\n  right: auto; }\\n\\n.cc-sdk svg.cc-sdk-timer circle {\\n  stroke-dasharray: 50px;\\n  stroke-dashoffset: 0px;\\n  stroke-linecap: round;\\n  stroke-width: 2px;\\n  stroke: red;\\n  fill: none;\\n  animation: countdown 10s linear 1 forwards; }\\n\\n@keyframes countdown {\\n  from {\\n    stroke-dashoffset: 0px; }\\n  to {\\n    stroke-dashoffset: 50px; } }\\n\\n.cc-sdk .cc-loaderimg {\\n  position: absolute;\\n  width: 100%;\\n  z-index: 1000;\\n  right: 0;\\n  left: 0;\\n  top: 0;\\n  height: 100%;\\n  background: rgba(255, 255, 255, 0.8); }\\n\\n.cc-sdk .cc-loaderimg svg {\\n  width: 100px; }\\n\" : \".cc-sdk ul {\\n  padding-left: 0;\\n  list-style-type: none;\\n  margin: 0; }\\n\\n.cc-sdk a,\\n.cc-sdk a:hover,\\n.cc-sdk a:focus {\\n  text-decoration: none;\\n  color: inherit; }\\n\\n.cc-sdk *,\\n.cc-sdk *:before,\\n.cc-sdk *:after {\\n  box-sizing: border-box; }\\n\\n.cc-sdk p {\\n  color: inherit;\\n  margin: 0; }\\n\\n.cc-sdk map area {\\n  outline: 0;\\n  cursor: pointer; }\\n\\n.cc-sdk map area.selected {\\n  outline: 0px;\\n  outline-color: #0a2135;\\n  outline-width: 0px;\\n  outline-style: solid; }\\n\\n.cc-sdk map area:hover {\\n  outline: 1; }\\n\\n.cc-sdk label {\\n  margin-bottom: 0;\\n  font-weight: normal; }\\n\\n.cc-sdk input,\\n.cc-sdk textarea {\\n  padding: 0;\\n  border: none;\\n  width: auto;\\n  margin-top: 0;\\n  font-size: inherit;\\n  font-style: inherit;\\n  font-weight: inherit;\\n  color: inherit;\\n  outline: none; }\\n\\n.cc-sdk p {\\n  font-size: inherit; }\\n\\n.cc-sdk.cc-popup-container {\\n  background: #fff;\\n  box-shadow: 0 0 4px 5px rgba(0, 0, 0, 0.05);\\n  font-family: \\\"open sans\\\", sans-serif;\\n  position: fixed;\\n  text-align: center;\\n  max-width: 500px;\\n  max-height: 500px;\\n  z-index: 1111; }\\n\\n@media (min-width: 768px) {\\n  .cc-sdk.cc-popup-container {\\n    padding: 10px; } }\\n\\n.cc-sdk.cc-popup-container.bottom {\\n  margin-bottom: 9px; }\\n\\n.cc-sdk.cc-popup-container.top {\\n  margin-top: 9px; }\\n\\n.cc-sdk #cc-thankyou-container .cc-question-container__text p {\\n  word-break: break-word; }\\n\\n.cc-sdk #cc-thankyou-container .cc-question-container__text p,\\n.cc-sdk #cc-thankyou-container .cc-question-container__text {\\n  width: 400px;\\n  max-width: initial;\\n  font-size: 17px;\\n  color: #424242; }\\n\\n.cc-sdk .cc-message-box {\\n  position: relative;\\n  z-index: 11; }\\n\\n.cc-sdk .cc-message-box__text {\\n  color: #424242;\\n  font-size: 14px;\\n  font-weight: 600;\\n  margin: 0;\\n  padding: 29px 14px 20px 14px;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-message-box__btn {\\n  background: #fdaf19;\\n  border-radius: 100px;\\n  display: inline-block;\\n  font-size: 15px;\\n  font-weight: 700;\\n  height: 32px;\\n  padding: 6px 0;\\n  width: 124px;\\n  text-align: center; }\\n\\n.cc-sdk.cc-popup-container .cc-popup-container__close {\\n  cursor: pointer;\\n  margin: 4px;\\n  position: absolute;\\n  right: 0;\\n  top: 0;\\n  z-index: 111; }\\n\\n.cc-sdk .cc-popup-container-2 {\\n  /* box-shadow: 0 0 4px 5px rgba(0,0,0,0.05); */\\n  height: 144px;\\n  position: fixed;\\n  width: 100%;\\n  z-index: 1111; }\\n\\n.cc-sdk .cc-popup-container-2.bottom {\\n  bottom: 0px; }\\n\\n.cc-sdk .cc-popup-container-2__icons,\\n.cc-sdk .cc-popup-container-2__icons {\\n  cursor: pointer;\\n  padding: 8px;\\n  position: absolute;\\n  top: 0;\\n  z-index: 111; }\\n\\n.cc-sdk .top.cc-popup-container-2 .cc-popup-container-2__icons {\\n  padding-top: 15px; }\\n\\n.cc-sdk .cc-popup-container-2__icons.cc-right-icon {\\n  right: 0; }\\n\\n.cc-sdk .cc-popup-container-2__icons.cc-left-icon {\\n  left: 0; }\\n\\n.cc-sdk .cc-popup-container__back {\\n  background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);\\n  display: inline-block;\\n  width: 21px;\\n  height: 21px; }\\n\\n.cc-sdk .cc-question-container {\\n  /* margin: auto; */\\n  padding: 20px 20px 25px;\\n  position: absolute;\\n  text-align: center;\\n  width: 100%;\\n  z-index: 11;\\n  top: 0;\\n  left: 0; }\\n\\n.cc-sdk .cc-question-container__text {\\n  /*height: 80px;*/\\n  color: #424242;\\n  display: inline-block;\\n  font-size: 15px;\\n  font-weight: 600;\\n  max-width: 230px;\\n  padding: 8px 0;\\n  text-align: center;\\n  vertical-align: middle;\\n  width: 20%;\\n  position: relative; }\\n  .cc-sdk .cc-question-container__text p {\\n    word-break: break-word; }\\n\\n.cc-sdk .cc-question-container[data-type='csat'] .cc-question-container__text {\\n  width: 11em; }\\n\\n.cc-sdk .cc-question-container[data-type='csat'] .cc-question-container__list {\\n  width: 64vw; }\\n\\n.cc-sdk .cc-question-container__required,\\n.cc-sdk .cc-question-container__validation {\\n  position: absolute;\\n  top: -14px;\\n  font-size: 11px;\\n  left: 0;\\n  width: 100%;\\n  right: 0;\\n  font-weight: normal;\\n  color: #C1272D;\\n  display: none; }\\n\\n.cc-sdk .cc-question-container__required-label {\\n  display: inline-block;\\n  position: relative;\\n  top: -2px;\\n  left: -2px; }\\n\\n.cc-sdk .cc-question-container__content {\\n  display: inline-block;\\n  max-width: 78%;\\n  vertical-align: middle;\\n  width: auto; }\\n\\n.cc-sdk .cc-question-container__list li {\\n  display: inline-block;\\n  padding-left: 29px;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-question-container__list li span {\\n  display: table-cell;\\n  font-size: 15px;\\n  padding-left: 15px;\\n  text-align: left;\\n  vertical-align: middle;\\n  width: 125px; }\\n\\n.cc-sdk .cc-question-container__list li input {\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-question-container:before {\\n  content: '';\\n  display: inline-block;\\n  height: 100%;\\n  margin-right: -4px;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-question-container {\\n  height: 100%;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-questions-container {\\n  height: 100%; }\\n\\n.cc-sdk p.cc-thankyou-powered {\\n  font-size: 13px !important;\\n  color: #404040 !important;\\n  font-style: italic;\\n  margin-top: 4px; }\\n  .cc-sdk p.cc-thankyou-powered.no-branding {\\n    display: none; }\\n\\n.cc-sdk .cc-thankyou-powered .cc-thankyou-logo {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/cc-thankyou-logo.svg\\\");\\n  background-size: cover;\\n  margin-right: 8px;\\n  display: inline-block;\\n  width: 16px;\\n  height: 16px; }\\n\\n.cc-sdk .multiline-box {\\n  background: #fff;\\n  border-radius: 2px;\\n  border: 1px #6d6d6d solid;\\n  font-family: 'Open Sans';\\n  font-size: 15px;\\n  height: 70px;\\n  margin: 0 0px 0 50px;\\n  min-width: 600px;\\n  padding: 2px 5px;\\n  resize: none; }\\n\\n.cc-sdk .multiline-box:focus {\\n  outline: 0; }\\n\\n.cc-sdk .detail-box .cc-question-container__text p {\\n  font-size: 13px;\\n  font-weight: 700; }\\n\\n.cc-sdk .detail-box .cc-question-container__text span {\\n  display: inline-block;\\n  font-size: 15px;\\n  font-weight: normal; }\\n\\n.cc-sdk .detail-box .cc-question-container__text {\\n  height: 56px; }\\n\\n.cc-sdk .detail-box[data-type=\\\"singleline\\\"] .cc-question-container__text {\\n  margin-right: 20px; }\\n\\n.cc-sdk .detail-box .cc-question-container__content .cc-sdk-form-control,\\n.cc-sdk .single-line .cc-question-container__content .cc-sdk-form-control {\\n  background: transparent;\\n  border: none;\\n  border-bottom: 1px solid #6d6d6d;\\n  font-family: \\\"open sans\\\";\\n  font-size: 15px;\\n  line-height: 26px;\\n  outline: 0;\\n  width: 300px;\\n  margin-left: 70px; }\\n\\n.cc-sdk .d-star-box.detail-box .cc-question-container__text {\\n  height: 92px; }\\n\\n.cc-sdk .hl.dropdown {\\n  background-image: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/arrow-down.black.svg\\\");\\n  background-position: 97% center;\\n  background-repeat: no-repeat;\\n  border-bottom: 1px solid #6d6d6d;\\n  display: inline-block;\\n  padding: 5px;\\n  position: relative;\\n  text-align: left;\\n  width: 300px; }\\n\\n.cc-sdk .drop-cc-question-container .cc-question-container__text {\\n  /*height: 60px;*/\\n  margin-right: 20px; }\\n\\n.cc-sdk .cc-sdk-form-control:focus {\\n  border-color: #fcaf18; }\\n\\n.cc-sdk .detail-box .cc-question-container__content {\\n  padding-left: 0; }\\n\\n.cc-sdk .cc-big-list-container .cc-question-container__list {\\n  display: table;\\n  width: 100%; }\\n\\n.cc-sdk .cc-big-list-container .cc-question-container__list li {\\n  display: table-cell;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-thankyou-container {\\n  width: 100% !important; }\\n\\n.cc-sdk .submit-icon {\\n  direction: ltr;\\n  position: absolute;\\n  right: 0;\\n  top: 0;\\n  bottom: 0;\\n  margin: auto 0;\\n  z-index: 11;\\n  margin-right: 75px;\\n  font-size: 16px /*rtl:14px*/;\\n  cursor: pointer;\\n  width: 47px;\\n  height: 47px; }\\n\\n@media (min-width: 1000px) {\\n  .cc-sdk .cc-big-list-container .cc-question-container__list li span label {\\n    overflow: hidden;\\n    max-height: 100px;\\n    display: block; } }\\n\\n@media (min-width: 769px) and (max-width: 875px) {\\n  .cc-sdk .cc-question-container__list li {\\n    padding-left: 0px !important; } }\\n\\n@media (min-width: 769px) and (max-width: 1024px) {\\n  .cc-sdk .cc-popup-container-2 {\\n    height: 200px; }\\n  .cc-sdk .cc-big-list-container .cc-question-container__list,\\n  .cc-sdk .cc-question-container__list {\\n    text-align: left; }\\n  .cc-sdk .cc-big-list-container .cc-question-container__list li,\\n  .cc-sdk .cc-question-container__list li {\\n    display: inline-block;\\n    margin-bottom: 15px;\\n    vertical-align: middle;\\n    width: 49%; }\\n  .cc-sdk .cc-question-container__content {\\n    display: inline-block;\\n    width: 45%; }\\n  .cc-sdk .multiline-box {\\n    min-width: 100%;\\n    margin: 0; }\\n  .cc-sdk .option-smile-box img,\\n  .cc-sdk .option-star-box img {\\n    margin-right: 11px !important; }\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text p,\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text {\\n    width: 100% !important;\\n    text-align: center;\\n    margin: 0 !important;\\n    padding: 0;\\n    line-height: initial;\\n    height: auto; }\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text {\\n    max-width: 98%; } }\\n\\n@media (min-width: 1000px) {\\n  .cc-sdk .cc-question-container__text p {\\n    max-height: 100px;\\n    overflow: hidden;\\n    max-width: 140ch; }\\n  .cc-sdk .cc-question-container__text p.ellipsis:after {\\n    content: '...';\\n    text-align: right;\\n    bottom: 9px;\\n    right: -3px;\\n    width: 12px;\\n    display: block;\\n    position: absolute;\\n    height: calc(1em * 1.2); } }\\n\\n@media (min-width: 769px) and (max-width: 992px) {\\n  .cc-sdk .cc-question-container {\\n    width: 100%;\\n    margin: auto; }\\n  .cc-sdk .cc-question-container__text {\\n    width: 24%;\\n    padding-right: 20px; }\\n  .cc-sdk .cc-question-container__text p {\\n    max-height: 110px;\\n    overflow: hidden; }\\n  .cc-sdk .cc-question-container__content.rating-color {\\n    margin-left: 0px; }\\n  .cc-sdk .submit-icon {\\n    margin-right: 40px !important; }\\n  .cc-sdk .cc-question-container__content.rating-color {\\n    margin-left: 0px !important; }\\n  .cc-sdk .cc-question-container__content {\\n    width: 50% !important; } }\\n\\n@media (max-width: 768px) {\\n  .cc-sdk .cc-survey-container,\\n  .cc-sdk .cc-survey-content {\\n    height: 100%; }\\n  .cc-sdk .cc-popup-container-2 {\\n    bottom: auto;\\n    height: 100%;\\n    top: 0; }\\n  .cc-sdk .cc-popup-container-2__icons.cc-right-icon {\\n    left: auto;\\n    right: 0;\\n    padding: 0; }\\n  .cc-sdk .cc-popup-container-2__icons.cc-left-icon {\\n    left: 0;\\n    right: auto;\\n    padding: 0; }\\n  .cc-sdk .cc-big-list-container .cc-question-container__list li,\\n  .cc-sdk[dir=\\\"rtl\\\"] .cc-big-list-container .cc-question-container__list li {\\n    display: block; }\\n  .cc-sdk .radio-toggle--more-option li span {\\n    width: 84% !important;\\n    padding-left: 25px !important; }\\n  .cc-sdk .radio-toggle--more-option li {\\n    padding-right: 0 !important;\\n    display: block !important;\\n    padding-top: 10px; }\\n  .cc-sdk .detail-box .cc-question-container__content {\\n    padding-left: 0px; }\\n  .cc-sdk .cc-question-container {\\n    bottom: 75px;\\n    height: auto;\\n    left: 0;\\n    padding: 40px 20px;\\n    position: absolute;\\n    text-align: left;\\n    top: auto;\\n    width: 100%; }\\n  .cc-sdk .cc-question-container__text {\\n    font-size: 18px;\\n    margin-bottom: 20px;\\n    max-width: 400px;\\n    text-align: left;\\n    width: 100%; }\\n  .cc-sdk .cc-question-container__content {\\n    display: block;\\n    max-width: 100%;\\n    width: 100%; }\\n  .cc-sdk .cc-question-container__list label {\\n    display: block; }\\n  .cc-sdk .cc-question-container__list li span {\\n    width: auto;\\n    padding-left: 15px; }\\n  .cc-sdk .cc-question-container__list li {\\n    padding-left: 0;\\n    margin-bottom: 10px;\\n    display: block; }\\n  .cc-sdk .cc-popup-container-2__icons {\\n    margin: 20px; }\\n  .cc-sdk .cc-popup-container-2__icons.left-icon {\\n    left: auto;\\n    right: 0; }\\n  .cc-sdk .cc-popup-container-2__icons.right-icon {\\n    right: auto;\\n    left: 0; }\\n  .cc-sdk .cc-popup-container__close {\\n    width: 27px; }\\n  .cc-sdk .cc-question-container__content.rating-color {\\n    margin-left: 0 !important; }\\n  .cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .cc-question-container__content,\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .cc-question-container__content {\\n    width: 100% !important; }\\n  .cc-sdk .multiline-box {\\n    height: 150px;\\n    margin: 0;\\n    min-width: 100%;\\n    width: 100%; }\\n  .cc-sdk .hl.dropdown {\\n    width: 100%; }\\n  .cc-sdk .detail-box .cc-question-container__content .cc-sdk-form-control {\\n    width: 100%; }\\n  .cc-sdk .detail-box .cc-question-container__text p {\\n    font-size: 18px; }\\n  .cc-sdk .mobile-detail-box .cc-question-container__text {\\n    height: auto; }\\n  .cc-sdk .cc-question-container__text p {\\n    max-height: auto; }\\n  .cc-sdk .welcome-box .cc-question-container__text p {\\n    color: #fff; }\\n  .cc-sdk .cc-questions-container {\\n    height: 100%;\\n    position: relative; }\\n  .cc-sdk .cc-message-box__btn {\\n    margin-left: 20px; } }\\n\\n@media (max-width: 768px) {\\n  .cc-sdk .detail-box .cc-question-container__content .cc-sdk-form-control,\\n  .cc-sdk .single-line .cc-question-container__content .cc-sdk-form-control {\\n    margin-left: 0; }\\n  .cc-sdk .submit-icon {\\n    position: absolute;\\n    left: 20px;\\n    top: auto;\\n    bottom: 30px;\\n    padding-right: 0; }\\n  .cc-sdk.cc-popup-container {\\n    position: fixed;\\n    bottom: 0;\\n    left: 0;\\n    right: 0;\\n    margin: 0 !important;\\n    width: 100%;\\n    height: 13em;\\n    max-width: 100%;\\n    max-height: 100%;\\n    text-align: left;\\n    background: transparent; }\\n  .cc-sdk.cc-popup-container .cc-message-box {\\n    position: absolute;\\n    bottom: 20%; }\\n  .cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text {\\n    font-size: 20px; }\\n  .cc-sdk.cc-popup-container .cc-message-box .submit-icon {\\n    position: absolute;\\n    bottom: -100%;\\n    top: auto;\\n    left: 0;\\n    margin: 0 14px; }\\n  .cc-sdk.cc-popup-container .cc-popup-container__close {\\n    margin: 20px;\\n    right: 0;\\n    top: 0; }\\n  .cc-sdk.cc-popup-container__back {\\n    background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);\\n    display: inline-block;\\n    width: 27px;\\n    height: 27px;\\n    background-size: 100%; }\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text p,\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text {\\n    width: 100% !important;\\n    text-align: center;\\n    margin: 0 !important;\\n    padding: 0;\\n    line-height: initial;\\n    height: auto; }\\n  .cc-sdk .cc-thankyou-container .cc-question-container__text {\\n    max-width: 98%; } }\\n\\n.date-s, .date-y {\\n  display: inline-block;\\n  margin: 0 12px !important;\\n  width: 80px !important; }\\n\\n.date-error {\\n  color: red;\\n  font-style: italic;\\n  visibility: hidden;\\n  margin-top: 12px; }\\n  .date-error.show-error {\\n    visibility: visible; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk ul {\\n  padding-right: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk.cc-popup-container .cc-popup-container__close {\\n  right: auto;\\n  left: 0;\\n  top: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text {\\n  text-align: right; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-popup-container__back {\\n  background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_rtl_.svg); }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-popup-container-2__icons.cc-right-icon {\\n  right: auto;\\n  left: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-popup-container-2__icons.cc-left-icon {\\n  right: 0;\\n  left: auto; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk.cc-question-container {\\n  margin-left: 0;\\n  margin-right: 0;\\n  right: 0;\\n  left: auto; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__required,\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__validation {\\n  right: 0%;\\n  left: auto; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__required-label {\\n  top: -2px;\\n  right: -2px;\\n  left: auto; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__list li {\\n  display: inline-block;\\n  padding-right: 15px !important;\\n  padding-left: 15px !important;\\n  vertical-align: middle; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"checkbox\\\"] .cc-question-container__list li {\\n  padding-right: 0 !important; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__list li span {\\n  padding-right: 15px;\\n  padding-left: 0;\\n  text-align: right; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container:before {\\n  margin-left: -4px;\\n  margin-right: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .multiline-box {\\n  margin: 0 50px 0 0px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .hl.dropdown {\\n  background-position: 97% center;\\n  text-align: right; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .drop-cc-question-container .cc-question-container__text {\\n  margin-left: 20px;\\n  margin-right: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .detail-box .cc-question-container__content {\\n  padding-right: 0;\\n  padding-left: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__content {\\n  text-align: right; }\\n\\n@media (min-width: 769px) and (max-width: 1024px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-big-list-container .cc-question-container__list,\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__list {\\n    text-align: right; }\\n  [dir=\\\"rtl\\\"].cc-sdk .multiline-box {\\n    margin: 0 0px 0 0px; } }\\n\\n@media (min-width: 769px) and (max-width: 992px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__text {\\n    padding-left: 20px;\\n    padding-right: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__content.rating-color {\\n    margin-left: 0px;\\n    margin-right: 0px; } }\\n\\n@media (max-width: 768px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-popup-container-2__icons.cc-right-icon {\\n    left: 0;\\n    right: auto; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-popup-container-2__icons.cc-left-icon {\\n    left: auto;\\n    right: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .radio-toggle--more-option li span {\\n    padding-right: 25px !important;\\n    padding-left: 0 !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .radio-toggle--more-option li {\\n    padding-right: 0 !important;\\n    padding-left: 0 !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .detail-box .cc-question-container__content {\\n    padding-left: 0px;\\n    padding-right: 0px; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container {\\n    left: auto;\\n    right: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .multiline-box {\\n    margin: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__text {\\n    text-align: right;\\n    width: 100%;\\n    margin-right: 5px;\\n    max-width: 100%; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__list li span {\\n    padding-right: 15px;\\n    padding-left: 0px; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__list li {\\n    padding-left: 0;\\n    padding-right: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-popup-container-2__icons.left-icon {\\n    left: 0;\\n    right: auto; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-popup-container-2__icons.right-icon {\\n    right: 0;\\n    left: auto; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__content.rating-color {\\n    margin-left: 0 !important;\\n    margin-right: 0 !important; } }\\n\\n/*cc-question-container color scale css*/\\n.cc-sdk .option-number-item {\\n  color: #fff;\\n  float: left;\\n  font-size: 13px;\\n  height: 38px;\\n  box-sizing: border-box;\\n  padding-top: 10px;\\n  text-align: center;\\n  width: 8.5%;\\n  margin-left: 1px;\\n  margin-right: 0;\\n  cursor: pointer; }\\n  .cc-sdk .option-number-item.option-zero {\\n    background: #853838; }\\n  .cc-sdk .option-number-item.option-zero.selected, .cc-sdk .option-number-item.option-zero:hover {\\n    background: #572526; }\\n  .cc-sdk .option-number-item.option-one {\\n    background: #9e4343; }\\n  .cc-sdk .option-number-item.option-one.selected, .cc-sdk .option-number-item.option-one:hover {\\n    background: #642728; }\\n  .cc-sdk .option-number-item.option-two {\\n    background: #c14d4d; }\\n  .cc-sdk .option-number-item.option-two.selected, .cc-sdk .option-number-item.option-two:hover {\\n    background: #712827; }\\n  .cc-sdk .option-number-item.option-three {\\n    background: #d94d4d; }\\n  .cc-sdk .option-number-item.option-three.selected, .cc-sdk .option-number-item.option-three:hover {\\n    background: #7c2828; }\\n  .cc-sdk .option-number-item.option-four {\\n    background: #ee4d4d; }\\n  .cc-sdk .option-number-item.option-four.selected, .cc-sdk .option-number-item.option-four:hover {\\n    background: #852828; }\\n  .cc-sdk .option-number-item.option-five {\\n    background: #ff4d4d; }\\n  .cc-sdk .option-number-item.option-five.selected, .cc-sdk .option-number-item.option-five:hover {\\n    background: #844828; }\\n  .cc-sdk .option-number-item.option-six {\\n    background: #ff8c4d; }\\n  .cc-sdk .option-number-item.option-six.selected, .cc-sdk .option-number-item.option-six:hover {\\n    background: #844828; }\\n  .cc-sdk .option-number-item.option-seven {\\n    background: #ffc74d; }\\n  .cc-sdk .option-number-item.option-seven.selected, .cc-sdk .option-number-item.option-seven:hover {\\n    background: #856728; }\\n  .cc-sdk .option-number-item.option-eight {\\n    background: #f5eb4d; }\\n  .cc-sdk .option-number-item.option-eight.selected, .cc-sdk .option-number-item.option-eight:hover {\\n    background: #7f7a28; }\\n  .cc-sdk .option-number-item.option-nine {\\n    background: #73ca81; }\\n  .cc-sdk .option-number-item.option-nine.selected, .cc-sdk .option-number-item.option-nine:hover {\\n    background: #3b6942; }\\n  .cc-sdk .option-number-item.option-ten {\\n    background: #4db47c; }\\n  .cc-sdk .option-number-item.option-ten.selected, .cc-sdk .option-number-item.option-ten:hover {\\n    background: #285e40; }\\n  .cc-sdk .option-number-item.option-7-scale-1 {\\n    background: #ed534f; }\\n  .cc-sdk .option-number-item.option-7-scale-2 {\\n    background: #ed534f; }\\n  .cc-sdk .option-number-item.option-7-scale-3 {\\n    background: #ed534f; }\\n  .cc-sdk .option-number-item.option-7-scale-4 {\\n    background: #ffbc00; }\\n  .cc-sdk .option-number-item.option-7-scale-5 {\\n    background: #ffbc00; }\\n  .cc-sdk .option-number-item.option-7-scale-6 {\\n    background: #4db47c; }\\n  .cc-sdk .option-number-item.option-7-scale-7 {\\n    background: #4db47c; }\\n  .cc-sdk .option-number-item.option-5-scale-1 {\\n    background: #ed534f; }\\n  .cc-sdk .option-number-item.option-5-scale-2 {\\n    background: #ed534f; }\\n  .cc-sdk .option-number-item.option-5-scale-3 {\\n    background: #ffbc00; }\\n  .cc-sdk .option-number-item.option-5-scale-4 {\\n    background: #4db47c; }\\n  .cc-sdk .option-number-item.option-5-scale-5 {\\n    background: #4db47c; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .option-number-item {\\n  width: calc(9.09% - 1px); }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"].scale-image-container\\n.option-number-item {\\n  width: 8.4%; }\\n\\n.cc-sdk .cc-question-container__content.rating-color {\\n  margin-left: 74px; }\\n\\n.cc-sdk .option-left-rating-text,\\n.cc-sdk .option-right-rating-text,\\n.cc-sdk .option-mid-rating-text,\\n.cc-sdk .option-midnps-rating-text {\\n  color: #424242;\\n  font-size: 13px;\\n  left: 0;\\n  position: absolute; }\\n\\n.cc-sdk .option-midnps-rating-text {\\n  left: calc(7 * 9.09% - 1px); }\\n\\n.cc-sdk .option-left-rating-text-small-container {\\n  max-width: 57px;\\n  text-align: left;\\n  overflow: hidden; }\\n\\n.cc-sdk .option-mid-rating-text-small-container {\\n  max-width: 57px;\\n  text-align: left;\\n  overflow: hidden; }\\n\\n.cc-sdk .option-right-rating-text-small-container {\\n  max-width: 57px;\\n  text-align: right;\\n  overflow: hidden; }\\n\\n.cc-sdk .option-left-rating-text-small-container-smile {\\n  width: 40%;\\n  text-align: left;\\n  max-height: 37px;\\n  overflow: hidden;\\n  bottom: auto !important;\\n  top: 57px; }\\n\\n.cc-sdk .option-right-rating-text-small-container-smile {\\n  width: 40%;\\n  text-align: right;\\n  max-height: 37px;\\n  overflow: hidden;\\n  bottom: auto !important;\\n  top: 57px; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-left-rating-text,\\n.cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-left-rating-text {\\n  left: 4px;\\n  width: 40%;\\n  text-align: left; }\\n\\n.cc-sdk .option-right-rating-text {\\n  left: auto;\\n  right: 0; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n.cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n  right: 4px;\\n  text-align: right;\\n  width: 40%; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-number-item {\\n  width: 38px;\\n  margin: 0 0.5px;\\n  cursor: pointer;\\n  display: inline-block;\\n  float: none; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .cc-question-container__list {\\n  display: inline-block;\\n  width: auto;\\n  position: relative; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"].scale-image-container\\n.cc-question-container__list {\\n  width: 100%; }\\n\\n.cc-sdk .rating-color {\\n  position: relative; }\\n\\n.cc-sdk .option-smile-box,\\n.cc-sdk .option-star-box {\\n  height: 60px;\\n  margin-right: 29px;\\n  width: 60px;\\n  cursor: pointer;\\n  box-sizing: border-box;\\n  border: solid 4px transparent;\\n  border-radius: 50%;\\n  display: inline-block;\\n  background-size: 100%; }\\n\\n.cc-sdk:not([dir=\\\"rtl\\\"]) .option-star-box:nth-child(5),\\n.cc-sdk:not([dir=\\\"rtl\\\"]) .option-smile-box:nth-child(5) {\\n  margin-right: 0; }\\n\\n.cc-sdk[dir=\\\"rtl\\\"] .option-star-box:nth-child(1),\\n.cc-sdk[dir=\\\"rtl\\\"] .option-smile-box:nth-child(1) {\\n  margin-right: 0; }\\n\\n.cc-sdk .option-smile-box.cc-one {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-two {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-three {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-four {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-five {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-one.selected, .cc-sdk .option-smile-box.cc-one:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-two.selected, .cc-sdk .option-smile-box.cc-two:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-three.selected, .cc-sdk .option-smile-box.cc-three:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-four.selected, .cc-sdk .option-smile-box.cc-four:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-smile-box.cc-five.selected, .cc-sdk .option-smile-box.cc-five:hover {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5_Selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .cc-csat.cc-question-container__content.rating-color {\\n  margin-left: 45px; }\\n\\n.cc-sdk .option-csat.option-smile-box.selected,\\n.cc-sdk .option-csat.option-smile-box:hover,\\n.cc-sdk .option-csat.option-smile-box {\\n  background-size: 25px;\\n  background-position: 18px center; }\\n\\n.cc-sdk .option-csat {\\n  height: 30px;\\n  margin-right: 68px;\\n  width: 30px;\\n  padding-left: 50px;\\n  font-size: 14px; }\\n\\n.cc-sdk .option-csat {\\n  height: 45px;\\n  margin-right: 0px;\\n  width: auto;\\n  padding-left: 0px;\\n  font-size: 14px;\\n  vertical-align: middle;\\n  display: inline-block;\\n  margin-right: 13px; }\\n  .cc-sdk .option-csat span {\\n    display: inline-block;\\n    vertical-align: top;\\n    font-size: 12px;\\n    padding-left: 25px;\\n    position: relative;\\n    text-align: left;\\n    /* min-height: 32px; */\\n    width: 100%; }\\n  .cc-sdk .option-csat .cc-checkbox label {\\n    pointer-events: none; }\\n\\n.cc-sdk .option-star-box {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .option-star-box:hover,\\n.cc-sdk .option-star-box.selected {\\n  background: url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star_selected.svg\\\") no-repeat;\\n  background-size: 100%; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"slider\\\"] .option-left-rating-text {\\n  left: 4px;\\n  width: 40%;\\n  text-align: left; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"slider\\\"] .option-right-rating-text {\\n  width: 40%;\\n  text-align: right; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .cc-question-container__list,\\n.cc-sdk .cc-question-container[data-type=\\\"star\\\"] .cc-question-container__list {\\n  position: relative;\\n  width: auto;\\n  display: inline-block; }\\n\\n.cc-sdk .circle-image {\\n  margin: auto;\\n  width: 253px;\\n  overflow: hidden;\\n  height: 240px;\\n  position: relative; }\\n\\n.cc-sdk .circle-image-scale-010-neutral {\\n  width: 242px;\\n  overflow: hidden;\\n  height: 230px;\\n  margin: auto; }\\n\\n.cc-sdk .cc-nps-selected-rating {\\n  font-size: 100px;\\n  display: inline-block;\\n  position: absolute;\\n  top: 0;\\n  left: 0px;\\n  line-height: 100px;\\n  right: 0;\\n  margin: auto;\\n  bottom: 0;\\n  width: 110px;\\n  height: 100px;\\n  text-align: center;\\n  font-weight: 100;\\n  color: #bbb; }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n.cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n  right: 4px; }\\n\\n.cc-sdk .option-number-item.option-scale {\\n  background: #4db47c; }\\n\\n.cc-sdk .option-number-item.option-scale.selected,\\n.cc-sdk .option-number-item.option-scale:hover {\\n  background: #712827; }\\n\\n.cc-sdk .cc-nps-image {\\n  cursor: pointer;\\n  position: relative;\\n  left: 0; }\\n\\n.cc-sdk .legend-container {\\n  position: relative; }\\n\\n@media (min-width: 769px) and (max-width: 992px) {\\n  .cc-sdk .option-smile-box,\\n  .cc-sdk .option-star-box {\\n    width: 50px;\\n    height: 50px;\\n    margin-right: 10px; }\\n  .cc-sdk .option-csat.option-smile-box.selected,\\n  .cc-sdk .option-csat.option-smile-box:hover,\\n  .cc-sdk .option-csat.option-smile-box {\\n    display: inline-block;\\n    width: 168px;\\n    background-position: 48px center; }\\n    .cc-sdk .option-csat.option-smile-box.selected span,\\n    .cc-sdk .option-csat.option-smile-box:hover span,\\n    .cc-sdk .option-csat.option-smile-box span {\\n      padding-left: 40px; } }\\n\\n@media screen and (min-width: 992px) {\\n  .cc-sdk span.option-csat.option-smile-box {\\n    background-position: 44px center; }\\n    .cc-sdk span.option-csat.option-smile-box:hover, .cc-sdk span.option-csat.option-smile-box.selected {\\n      background-position: 44px center; }\\n    .cc-sdk span.option-csat.option-smile-box span {\\n      padding-left: 40px; } }\\n\\n@media (max-width: 768px) {\\n  .cc-sdk .option-smile-box,\\n  .cc-sdk .option-star-box {\\n    display: inline-block;\\n    margin-right: 3px; }\\n  .cc-sdk .option-csat.option-smile-box.selected,\\n  .cc-sdk .option-csat.option-smile-box:hover,\\n  .cc-sdk .option-csat.option-smile-box {\\n    display: block;\\n    background-size: 40px;\\n    background-position: 45px center; }\\n  .cc-sdk .option-csat.option-smile-box {\\n    height: 65px;\\n    width: 100%; }\\n  .cc-sdk .option-csat.option-smile-box span {\\n    font-size: 15px;\\n    padding-left: 40px; }\\n  .cc-sdk .option-csat.option-smile-box .cc-checkbox {\\n    top: calc(50% - 12.5px);\\n    height: 57px; }\\n  .cc-sdk .option-csat.option-smile-box .cc-checkbox.cc-radio label:before {\\n    width: 25px;\\n    height: 25px; }\\n  .cc-sdk .option-csat.option-smile-box\\n.cc-checkbox\\ninput[type=\\\"radio\\\"]:checked\\n+ label:after {\\n    width: 25px;\\n    height: 25px; }\\n  .cc-sdk .option-number-item {\\n    color: #fff;\\n    float: left;\\n    font-size: 15px;\\n    height: 35px;\\n    box-sizing: border-box;\\n    margin-right: 1px;\\n    padding-top: 7px;\\n    text-align: center;\\n    width: 38px;\\n    cursor: pointer;\\n    vertical-align: middle; }\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] {\\n    bottom: 106px; }\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-left-rating-text,\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-right-rating-text,\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-mid-rating-text {\\n    width: auto; }\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-right-rating-text {\\n    text-align: right; }\\n  .cc-sdk .option-smile-box img,\\n  .cc-sdk .option-star-box img {\\n    padding-right: 5px;\\n    margin-right: 0; }\\n  .cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .cc-question-container__content {\\n    width: 100% !important; }\\n  .cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n  .cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n    right: 10px; }\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .cc-question-container__list {\\n    width: 100%; }\\n  .cc-sdk .cc-question-container[data-type=\\\"csat\\\"] .cc-question-container__list li {\\n    width: 100%; } }\\n\\n@media (max-width: 381px) {\\n  .cc-sdk .option-smile-box,\\n  .cc-sdk .option-star-box {\\n    display: inline-block;\\n    margin-right: 0;\\n    height: 50px;\\n    width: 50px; }\\n  .cc-sdk .option-smile-box img,\\n  .cc-sdk .option-star-box img {\\n    padding-right: 5px;\\n    margin-right: 0; } }\\n\\n@media screen and (max-width: 768px) {\\n  .cc-sdk .radial-legend-right,\\n  .cc-sdk .cc-question-container[data-type=\\\"scale\\\"] span.radial-legend-right {\\n    text-align: left;\\n    width: 35%;\\n    right: 0; }\\n  .cc-sdk .radial-legend-mid {\\n    width: 35%;\\n    text-align: center;\\n    left: 0;\\n    right: 0;\\n    display: none; }\\n  .cc-sdk .radial-legend-left {\\n    width: 35%;\\n    text-align: right;\\n    left: 0; } }\\n\\n/*cc-question-container color scale css*/\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"csat\\\"] .cc-question-container__content.rating-color {\\n  margin-right: 45px;\\n  margin-left: 0px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"csat\\\"] .cc-checkbox input[type=\\\"radio\\\"] {\\n  margin-right: 0px;\\n  opacity: 0;\\n  outline: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-number-item {\\n  margin-right: 1px;\\n  margin-left: 0;\\n  float: right; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container__content.rating-color {\\n  margin-right: 74px;\\n  margin-left: 0px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-right-rating-text {\\n  left: calc(100% - 418px);\\n  right: auto !important; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-left-rating-text {\\n  right: 0px;\\n  left: auto !important; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .option-right-rating-text {\\n  left: 0;\\n  right: auto !important; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-right-rating-text {\\n  left: 0;\\n  right: auto !important; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-left-rating-text {\\n  right: 2px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"slider\\\"] .option-right-rating-text {\\n  left: 0;\\n  width: 40%;\\n  text-align: left; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"slider\\\"] .option-left-rating-text {\\n  right: 0;\\n  text-align: right; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .rating-color {\\n  position: relative; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-smile-box img {\\n  margin-right: 29px;\\n  margin-left: 0px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-star-box img {\\n  margin-left: 19px;\\n  margin-right: 0px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box span {\\n  padding-right: 25px;\\n  text-align: right;\\n  padding-left: 0; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n  left: 7px;\\n  right: auto !important;\\n  text-align: left; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-left-rating-text,\\n[dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-left-rating-text {\\n  right: 7px;\\n  left: auto !important;\\n  text-align: right; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-csat {\\n  width: auto;\\n  box-sizing: border-box;\\n  padding-left: 0;\\n  margin-right: 13px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box.selected,\\n[dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box:hover,\\n[dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box {\\n  background-position: calc( 100% - 44px) center;\\n  text-align: right; }\\n\\n@media (min-width: 769px) and (max-width: 992px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .option-smile-box img,\\n  [dir=\\\"rtl\\\"].cc-sdk .option-star-box img {\\n    margin-left: 0px;\\n    margin-right: 10px; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container__content.rating-color {\\n    margin-right: 10px;\\n    margin-left: 86px !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .option-right-rating-text {\\n    left: 17px;\\n    right: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n    left: 7px;\\n    text-align: left;\\n    right: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-left-rating-text,\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-left-rating-text {\\n    right: 20px;\\n    left: auto !important;\\n    text-align: right; }\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box.selected,\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box:hover,\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box {\\n    width: auto; } }\\n\\n@media (max-width: 768px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .option-smile-box img,\\n  [dir=\\\"rtl\\\"].cc-sdk .option-star-box img {\\n    padding-right: 0px;\\n    padding-left: 5px;\\n    margin-right: 0;\\n    margin-left: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"csat\\\"] .cc-checkbox input[type=\\\"radio\\\"] {\\n    margin-right: 7px;\\n    opacity: 0;\\n    outline: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box.selected,\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box:hover,\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box {\\n    background-position: calc( 100% - 44px) center; }\\n  [dir=\\\"rtl\\\"].cc-sdk .option-csat.option-smile-box span {\\n    padding-right: 39px;\\n    text-align: right;\\n    padding-left: 0; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-left-rating-text,\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-left-rating-text {\\n    right: 10px;\\n    left: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .option-left-rating-text {\\n    right: 10px;\\n    left: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"smile\\\"] .option-right-rating-text,\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"star\\\"] .option-right-rating-text {\\n    right: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .option-right-rating-text {\\n    left: calc(100% - 322px);\\n    right: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .option-right-rating-text {\\n    left: 13px;\\n    right: auto !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .radial-legend-right, [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .radial-legend-right {\\n    left: auto !important;\\n    right: 10px !important; }\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .radial-legend-left, [dir=\\\"rtl\\\"].cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .radial-legend-left {\\n    right: auto !important;\\n    left: 10px !important; } }\\n\\n@media (max-width: 381px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .option-right-rating-text {\\n    left: calc(100% - 258px);\\n    right: auto !important; } }\\n\\n.cc-sdk .cc-select-wrapper {\\n  position: relative;\\n  display: inline-block;\\n  user-select: none;\\n  z-index: 11; }\\n\\n.cc-sdk .cc-select-wrapper select {\\n  display: none; }\\n\\n.cc-sdk .cc-select {\\n  position: relative;\\n  display: inline-block;\\n  margin-left: 70px; }\\n\\n.cc-sdk .cc-select-trigger {\\n  position: relative;\\n  display: block;\\n  width: 130px;\\n  padding: 0 84px 0 22px;\\n  font-size: 15px;\\n  font-style: italic;\\n  font-weight: 300;\\n  color: #222;\\n  line-height: 20px;\\n  background: transparent;\\n  border-radius: 0;\\n  cursor: pointer;\\n  width: 300px;\\n  border-bottom: 1px solid #6d6d6d;\\n  display: inline-block;\\n  text-align: left;\\n  padding: 5px 20px 5px 5px;\\n  position: relative;\\n  /*background-image: url(../images/arrow-down.black.svg);*/\\n  background-position: 97% center;\\n  background-repeat: no-repeat;\\n  max-height: 50px;\\n  overflow: hidden; }\\n\\n.cc-sdk .cc-select-trigger:after {\\n  position: absolute;\\n  display: block;\\n  content: '';\\n  width: 10px;\\n  height: 10px;\\n  top: 50%;\\n  right: 5px;\\n  margin-top: -3px;\\n  border-bottom: 1px solid #222;\\n  border-right: 1px solid #222;\\n  transform: rotate(45deg) translateY(-50%);\\n  transition: all .2s ease-in-out;\\n  transform-origin: 50% 0; }\\n\\n.cc-sdk .cc-select.cc-opened .cc-select-trigger:after {\\n  margin-top: 3px;\\n  transform: rotate(-135deg) translateY(-50%); }\\n\\n.cc-sdk .cc-select-options-container {\\n  position: absolute;\\n  display: block;\\n  top: 100%;\\n  left: 0;\\n  right: 0;\\n  min-width: 100%;\\n  margin: 15px 0;\\n  border: 1px solid #b5b5b5;\\n  border-radius: 4px;\\n  box-sizing: border-box;\\n  box-shadow: 0 2px 1px rgba(0, 0, 0, 0.07);\\n  background: #fff;\\n  transition: all .2s ease-in-out;\\n  opacity: 0;\\n  visibility: hidden;\\n  pointer-events: none;\\n  transform: translateY(calc( -100% - 65px));\\n  height: auto;\\n  max-height: 150px;\\n  overflow: hidden;\\n  overflow-y: scroll; }\\n\\n.cc-sdk .cc-select-options {\\n  /*  max-height: 150px;\\r\\n    overflow-y: scroll; */\\n  overflow-y: scroll;\\n  height: 100%;\\n  width: 110%; }\\n\\n.cc-sdk .cc-select.cc-opened .cc-select-options-container {\\n  opacity: 1;\\n  visibility: visible;\\n  pointer-events: all;\\n  transform: translateY(-100%) translateY(-65px); }\\n\\n@media (min-width: 769px) {\\n  .cc-sdk .cc-popup-container-2.top .cc-select-options-container,\\n  .cc-sdk .cc-popup-container-2.top .cc-select.cc-opened .cc-select-options-container {\\n    transform: translateY(-19px); } }\\n\\n.cc-sdk .cc-select-options:before {\\n  /*       position: absolute;\\r\\n    display: block;\\r\\n    content: '';\\r\\n    bottom: 100%; right: 25px;\\r\\n    width: 7px; height: 7px;\\r\\n    margin-bottom: -4px;\\r\\n    border-top: 1px solid #b5b5b5;\\r\\n    border-left: 1px solid #b5b5b5;\\r\\n    background: #fff;\\r\\n    transform: rotate(45deg);\\r\\n    transition: all .4s ease-in-out; */ }\\n\\n.cc-sdk .option-hover:before {\\n  background: #f9f9f9; }\\n\\n.cc-sdk .cc-select-option {\\n  position: relative;\\n  display: block;\\n  padding: 0 12px;\\n  border-bottom: 1px solid #e4e4e4;\\n  font-size: 12px;\\n  font-weight: 600;\\n  color: #222;\\n  line-height: 34px;\\n  cursor: pointer;\\n  transition: all .2s ease-in-out;\\n  text-align: left;\\n  margin: 0;\\n  width: 100%; }\\n\\n.cc-sdk .cc-select-option:first-of-type {\\n  border-radius: 4px 4px 0 0; }\\n\\n.cc-sdk .cc-select-option:last-of-type {\\n  border-bottom: 0;\\n  border-radius: 0 0 4px 4px; }\\n\\n.cc-sdk .cc-select-option:hover,\\n.cc-sdk .cc-select-option.selection {\\n  background: #eaeaea; }\\n\\n.cc-sdk .cc-select-wrapper.down .cc-select-options-container {\\n  transform: translateY(calc( 20px)); }\\n\\n.cc-sdk .cc-select-wrapper.down .cc-select.cc-opened .cc-select-options-container {\\n  transform: translateY(calc( 20px)); }\\n\\n.cc-sdk .cc-question-container[data-type=\\\"nps\\\"] .cc-question-container__content,\\n.cc-sdk .cc-question-container[data-type=\\\"scale\\\"] .cc-question-container__content {\\n  width: 40%; }\\n\\n@media (max-width: 768px) {\\n  .cc-sdk .cc-select,\\n  .cc-sdk .cc-select-wrapper {\\n    min-width: 100%; }\\n  .cc-sdk .cc-select {\\n    margin-left: 0px; }\\n  .cc-sdk .cc-select-trigger {\\n    min-width: 100%;\\n    width: auto; } }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-select-trigger {\\n  padding: 0 22px 0 84px;\\n  background-position: 97% center;\\n  background-repeat: no-repeat;\\n  text-align: right; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-select-trigger:after {\\n  top: 50%;\\n  left: 2px;\\n  right: auto; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-select-option {\\n  text-align: right; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-select-option:first-of-type {\\n  border-radius: 4px 0px 0 4px; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-select-option:last-of-type {\\n  border-radius: 0 4px 4px 0px; }\\n\\n/** Checkbox **/\\n.cc-sdk .cc-checkbox {\\n  display: table-cell;\\n  vertical-align: middle;\\n  position: relative;\\n  text-align: center; }\\n\\n.cc-sdk .cc-checkbox label {\\n  cursor: pointer;\\n  display: block;\\n  height: 20px;\\n  width: 20px; }\\n\\n.cc-sdk .cc-checkbox + span label img {\\n  width: 40px;\\n  display: inline-block;\\n  vertical-align: middle; }\\n\\n.cc-sdk .cc-checkbox label:before,\\n.cc-sdk .cc-checkbox label:after {\\n  content: \\\"\\\";\\n  left: 0;\\n  margin: auto;\\n  position: absolute;\\n  top: calc(50% - 12.5px); }\\n\\n.cc-sdk .cc-checkbox label:before {\\n  background: transparent;\\n  border-radius: 2px;\\n  border: 1px solid #424242;\\n  cursor: pointer;\\n  height: 20px;\\n  transition: background 0.3s;\\n  width: 20px; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"checkbox\\\"] {\\n  opacity: 0;\\n  outline: 0; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:before {\\n  background: #fdaf19;\\n  border: none; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:after {\\n  border: 3px solid #222;\\n  border-right-style: none;\\n  border-top-style: none;\\n  height: 7px;\\n  top: calc(50% - 8.5px);\\n  left: 4px;\\n  transform: rotate(-45deg);\\n  width: 12px; }\\n\\n/*radio*/\\n.cc-sdk .cc-checkbox.cc-radio label:before {\\n  background: transparent;\\n  border: 1px solid #424242;\\n  cursor: pointer;\\n  height: 25px;\\n  transition: background-color 0.3s;\\n  width: 25px; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"radio\\\"] {\\n  opacity: 0;\\n  outline: 0; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"radio\\\"]:checked + label:before {\\n  background: transparent;\\n  border-color: #fdaf19; }\\n\\n.cc-sdk .cc-question-container__list li {\\n  display: inline-table;\\n  margin-bottom: 0; }\\n  .cc-sdk .cc-question-container__list li .cc-sdk .cc-checkbox,\\n  .cc-sdk .cc-question-container__list li .cc-radio {\\n    width: 30px; }\\n\\n.cc-sdk .cc-checkbox input[type=\\\"radio\\\"]:checked + label:after {\\n  -moz-transform: scale(0.8);\\n  -ms-transform: scale(0.8);\\n  -o-transform: scale(0.8);\\n  -webkit-transform: scale(0.8);\\n  background: #fdaf19;\\n  border-radius: 30px;\\n  height: 25px;\\n  transform: scale(0.8);\\n  width: 25px; }\\n\\n.cc-sdk .cc-radio label:before {\\n  border-radius: 30px; }\\n\\n.cc-sdk .radio-toggle--more-option li span {\\n  padding-left: 25px !important;\\n  width: 125px !important; }\\n\\n.cc-sdk .radio-toggle .cc-question-container__list li {\\n  padding-left: 15px; }\\n\\n@media (min-width: 1000px) {\\n  .cc-sdk .radio-toggle .cc-question-container__list li span label {\\n    overflow: hidden;\\n    max-height: 100px;\\n    display: block; } }\\n\\n@media (min-width: 769px) and (max-width: 992px) {\\n  .cc-sdk .radio-toggle .cc-question-container__list li {\\n    padding-left: 10px; }\\n  .cc-sdk .radio-toggle .cc-question-container__list li span .label {\\n    display: block;\\n    max-height: 50px;\\n    overflow: hidden;\\n    text-overflow: ellipsis; }\\n  .cc-sdk .radio-toggle .cc-question-container__list li span label {\\n    overflow: hidden;\\n    max-height: 50px;\\n    display: block;\\n    text-overflow: ellipsis; } }\\n\\n@media (max-width: 768px) {\\n  .cc-sdk .radio-toggle .cc-question-container__list li {\\n    padding-left: 0; }\\n  .cc-sdk .radio-toggle .cc-question-container__list li {\\n    display: block;\\n    padding-right: 50px; } }\\n\\n.cc-sdk .progress-bar {\\n  width: 100%;\\n  position: absolute;\\n  background: #a47c2b;\\n  z-index: 1;\\n  height: 8px;\\n  left: 0; }\\n\\n.cc-sdk .progress-line {\\n  background: #fdaf19;\\n  height: 100%;\\n  display: block;\\n  width: 0%;\\n  transition: all .4s ease-in; }\\n\\n@media screen and (max-width: 768px) {\\n  .cc-sdk .progress-bar {\\n    bottom: unset;\\n    top: 0px; } }\\n\\n/** Scrollbar\\t**/\\n.cc-sdk .cc-scrollbar-wrapper {\\n  float: left;\\n  height: 100%;\\n  overflow: hidden;\\n  position: relative;\\n  width: 100%;\\n  z-index: 1; }\\n\\n.cc-sdk .cc-scrollbar-content {\\n  -moz-box-sizing: border-box;\\n  /* padding         : 0 32px 0 0; */\\n  /* right           : -18px; */\\n  box-sizing: border-box;\\n  height: 100%;\\n  overflow: auto;\\n  position: relative;\\n  width: 107%; }\\n\\n.cc-sdk .cc-scrollbar-scroll {\\n  background: #aaa;\\n  border-radius: 4px;\\n  cursor: pointer;\\n  opacity: 0;\\n  position: relative;\\n  top: 0;\\n  transition: opacity 0.25s linear;\\n  width: 9px;\\n  z-index: 2; }\\n\\n.cc-sdk .cc-scrollbar-container:hover .cc-scrollbar-scroll {\\n  opacity: 1; }\\n\\n.cc-sdk .cc-scrollbar-grabbed {\\n  -khtml-user-select: none;\\n  -moz-user-select: none;\\n  -o-user-select: none;\\n  -webkit-user-select: none;\\n  user-select: none; }\\n\\n.cc-sdk .cc-sdk-range {\\n  -webkit-appearance: none;\\n  -moz-appearance: none;\\n  width: 500px;\\n  height: 60px;\\n  background: transparent; }\\n\\n.cc-sdk input[type=range]::-webkit-slider-runnable-track {\\n  -webkit-appearance: none;\\n  background: #ff403d;\\n  background: -moz-linear-gradient(-45deg, #ff403d 0%, #992a28 100%);\\n  background: -webkit-linear-gradient(-45deg, #ff403d 0%, #992a28 100%);\\n  background: linear-gradient(135deg, #ff403d 0%, #992a28 100%);\\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ff403d ', endColorstr='#992a28 ', GradientType=1);\\n  height: 1px; }\\n\\n.cc-sdk input[type=range]:focus {\\n  outline: none; }\\n\\n.cc-sdk input[type=range]::-moz-range-track {\\n  -moz-appearance: none;\\n  background: #ff403d;\\n  background: -moz-linear-gradient(-45deg, #ff403d 0%, #992a28 100%);\\n  background: -webkit-linear-gradient(-45deg, #ff403d 0%, #992a28 100%);\\n  background: linear-gradient(135deg, #7a0806 0%, #992a28 100%);\\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ff403d ', endColorstr='#992a28 ', GradientType=1);\\n  height: 1px; }\\n\\n.cc-sdk input[type=range]::-ms-track {\\n  height: 1px;\\n  width: 500px;\\n  background-color: #ff403d; }\\n\\n.cc-sdk input[type=range]::-webkit-slider-thumb {\\n  -webkit-appearance: none;\\n  border: 1px solid #ff403d;\\n  border-radius: 50%;\\n  height: 32px;\\n  width: 32px;\\n  max-width: 80px;\\n  position: relative;\\n  bottom: 16px;\\n  background-color: #fff;\\n  cursor: -webkit-grab; }\\n\\n.cc-sdk input[type=range]::-ms-thumb {\\n  border: 1px solid #ff403d;\\n  border-radius: 50%;\\n  height: 32px;\\n  width: 32px;\\n  background: #e08692;\\n  box-sizing: border-box;\\n  cursor: pointer !important; }\\n\\n.cc-sdk input[type=range]::-moz-range-thumb {\\n  -moz-appearance: none;\\n  border: 1px solid #ff403d;\\n  border-radius: 50%;\\n  height: 32px;\\n  width: 32px;\\n  max-width: 80px;\\n  position: relative;\\n  bottom: 16px;\\n  background-color: #fff;\\n  cursor: -moz-grab; }\\n\\n.cc-sdk input[type=range]::-moz-range-thumb:before {\\n  content: 'asd'; }\\n\\n.cc-sdk input[type=range]::-webkit-slider-thumb:active {\\n  cursor: -webkit-grabbing; }\\n\\n.cc-sdk input[type=range]::-moz-range-thumb:active {\\n  cursor: -moz-grabbing; }\\n\\n.cc-sdk .cc-question-container__content.cc-sdk-range-slider {\\n  height: 50px; }\\n\\n.cc-sdk .slider-tip {\\n  background: #eb1c23;\\n  padding: 8px 9px 9px 9px;\\n  position: absolute;\\n  left: 0px;\\n  right: 0;\\n  margin: 0 auto;\\n  /* border-top-left-radius: 10px; */\\n  /* border-top-right-radius: 10px; */\\n  /* border-bottom-left-radius: 100%; */\\n  /* border-bottom-right-radius: 100%; */\\n  color: #fff;\\n  /* display: none !important; */\\n  background: none;\\n  color: #424242;\\n  font-size: 13px;\\n  width: 100px;\\n  display: inline-block;\\n  text-align: center;\\n  font-weight: bold; }\\n\\n.cc-sdk .slider-tip:after {\\n  border-width: 5px 5px 0;\\n  border-top-color: #000; }\\n\\n@media (max-width: 1024px) {\\n  .cc-sdk .cc-sdk-range {\\n    width: 100%; } }\\n\\n.cc-sdk input.cc-sdk-range.cc-blue::-moz-range-track,\\n.cc-sdk input.cc-sdk-range.cc-blue::-webkit-slider-runnable-track {\\n  background: blue; }\\n\\n.cc-sdk .chart {\\n  -moz-box-sizing: border-box;\\n  -webkit-box-sizing: border-box;\\n  box-sizing: border-box;\\n  display: inline-block;\\n  height: 21px;\\n  padding-top: 22px;\\n  position: relative;\\n  vertical-align: top;\\n  width: 21px; }\\n\\n.cc-sdk .cc-sdk-chart span {\\n  display: block;\\n  font-size: 2em;\\n  font-weight: normal; }\\n\\n.cc-sdk .cc-sdk-chart canvas {\\n  left: 0;\\n  position: absolute;\\n  top: 0; }\\n\\n.cc-sdk .cc-sdk-loader {\\n  height: 21px;\\n  left: 28px;\\n  position: absolute;\\n  top: 8px;\\n  width: 21px; }\\n\\n@media (min-width: 769px) {\\n  .cc-sdk .cc-sdk-chart canvas {\\n    margin-left: 10px; } }\\n\\n@media (max-width: 768px) {\\n  .cc-sdk .cc-sdk-loader {\\n    position: relative;\\n    left: auto;\\n    top: 0;\\n    right: auto; } }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-sdk-chart canvas {\\n  right: 0;\\n  left: auto; }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .cc-sdk-loader {\\n  right: 28px;\\n  left: auto; }\\n\\n@media (min-width: 768px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .cc-sdk-chart canvas {\\n    margin-right: 10px;\\n    margin-left: 0; } }\\n\\n/** Utilities **/\\n.cc-sdk .show {\\n  display: block !important; }\\n\\n.cc-sdk .show-inline {\\n  display: inline-block !important; }\\n\\n.cc-sdk .hide {\\n  display: none !important; }\\n\\n.cc-sdk.bottom {\\n  bottom: 0; }\\n\\n.cc-sdk.right, .cc-sdk .right {\\n  right: 0; }\\n\\n.cc-sdk .left {\\n  left: 0; }\\n\\n.cc-sdk .top {\\n  top: 0; }\\n\\n.ccsdk-overlay {\\n  background: #fff;\\n  bottom: 0;\\n  height: 100%;\\n  left: 0;\\n  position: absolute;\\n  top: 0;\\n  width: 100%;\\n  z-index: 0; }\\n\\n.ccsdk-overlay.ccsdk-glass {\\n  background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/ww.png);\\n  background-repeat: no-repeat;\\n  background-size: cover; }\\n\\n.ccsdk-clearfix {\\n  clear: both;\\n  display: block; }\\n\\n.ccsdk-text-normal {\\n  font-weight: 400; }\\n\\n.cc-sdk ::-webkit-input-placeholder {\\n  /* Chrome/Opera/Safari */\\n  color: #4c4c4c;\\n  font-family: 'Open Sans';\\n  font-size: 13px;\\n  font-style: italic;\\n  font-weight: normal; }\\n\\n.cc-sdk .cc-sdk-form-control::-moz-placeholder {\\n  /* Firefox 19+ */\\n  font-style: italic;\\n  font-size: 13px;\\n  font-weight: normal;\\n  font-family: 'Open Sans';\\n  color: #4c4c4c; }\\n\\n.cc-sdk .cc-sdk-form-control:-ms-input-placeholder {\\n  /* IE 10+ */\\n  font-style: italic;\\n  font-size: 13px;\\n  font-weight: normal;\\n  font-family: 'Open Sans';\\n  color: #4c4c4c; }\\n\\n.cc-sdk .cc-sdk-form-control:-moz-placeholder {\\n  /* Firefox 18- */\\n  font-style: italic;\\n  font-size: 13px;\\n  font-weight: normal;\\n  font-family: 'Open Sans';\\n  color: #4c4c4c; }\\n\\n@media (min-width: 769px) {\\n  .desktop-hide {\\n    display: none; } }\\n\\n@media (max-width: 768px) {\\n  .mobile-hide {\\n    display: none; }\\n  .cc-sdk-loader {\\n    position: relative;\\n    left: auto;\\n    top: 0;\\n    right: auto; }\\n  .ccsdk-overlay.welcome-overlay {\\n    /*background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/ww.png);*/\\n    background: rgba(210, 42, 53, 0.87); } }\\n\\n[dir=\\\"rtl\\\"].cc-sdk .submit-icon {\\n  left: 0;\\n  right: auto;\\n  margin-left: 75px; }\\n\\n@media (max-width: 768px) {\\n  [dir=\\\"rtl\\\"].cc-sdk .submit-icon {\\n    position: absolute;\\n    left: auto;\\n    top: auto;\\n    bottom: 30px;\\n    padding-left: 0;\\n    right: 20px;\\n    margin: 0; } }\\n\\n/** Themes **/\\n/** Prefetch icons **/\\n.cc-sdk::before {\\n  width: 0px;\\n  height: 0px;\\n  overflow: hidden;\\n  position: absolute;\\n  z-index: -1; }\\n\\n.cc-sdk .yellow .progress-bar {\\n  background: #a47c2b; }\\n\\n.cc-sdk .yellow .progress-line {\\n  background: #fdaf19; }\\n\\n.cc-sdk .yellow .submit-icon {\\n  background-image: url(\\\"data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%2747px%27%20height%3D%2747px%27%20viewBox%3D%270%200%2047%2047%27%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%3E%3Ctitle%3EGroup%2016%3C%2Ftitle%3E%3Cdesc%3ECreated%20with%20Sketch.%3C%2Fdesc%3E%3Cdefs%3E%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%3Cfilter%20x%3D%27-18.1%25%27%20y%3D%27-12.9%25%27%20width%3D%27136.2%25%27%20height%3D%27136.2%25%27%20filterUnits%3D%27objectBoundingBox%27%20id%3D%27filter-2%27%3E%3CfeOffset%20dx%3D%270%27%20dy%3D%272%27%20in%3D%27SourceAlpha%27%20result%3D%27shadowOffsetOuter1%27%3E%3C%2FfeOffset%3E%3CfeGaussianBlur%20stdDeviation%3D%272%27%20in%3D%27shadowOffsetOuter1%27%20result%3D%27shadowBlurOuter1%27%3E%3C%2FfeGaussianBlur%3E%3CfeColorMatrix%20values%3D%270%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200.116423234%200%27%20type%3D%27matrix%27%20in%3D%27shadowBlurOuter1%27%3E%3C%2FfeColorMatrix%3E%3C%2Ffilter%3E%3C%2Fdefs%3E%3Cg%20id%3D%27Page-1%27%20stroke%3D%27none%27%20stroke-width%3D%271%27%20fill%3D%27none%27%20fill-rule%3D%27evenodd%27%3E%3Cg%20id%3D%271-copy-20%27%20transform%3D%27translate(-1246.000000%2C%20-664.000000)%27%3E%3Cg%20id%3D%27Group-16%27%20transform%3D%27translate(1250.000000%2C%20666.000000)%27%3E%3Cg%20id%3D%27Oval-4%27%3E%3Cuse%20fill%3D%27white%27%20fill-opacity%3D%271%27%20filter%3D%27url(%23filter-2)%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3Cuse%20fill%3D%27%23d04a49%27%20fill-rule%3D%27evenodd%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3C%2Fg%3E%3Cg%20id%3D%27Group-5%27%20transform%3D%27translate(12.000000%2C%2011.000000)%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23FFFFFF%27%3E%3Cg%20id%3D%27fast-forward-arrows%27%20transform%3D%27translate(6.173934%2C%200.000000)%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3Cg%20id%3D%27fast-forward-arrows-copy%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\\\"); }\\n\\n.cc-sdk .yellow .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:before {\\n  background: #fdaf19; }\\n\\n.cc-sdk .yellow .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:after {\\n  border-color: #222; }\\n\\n.cc-sdk .yellow .cc-checkbox input[type=\\\"radio\\\"]:checked + label:before {\\n  border-color: #fdaf19; }\\n\\n.cc-sdk .yellow .cc-checkbox input[type=\\\"radio\\\"]:checked + label:after {\\n  background: #fdaf19; }\\n\\n.cc-sdk .yellow .cc-sdk-form-control:focus {\\n  border-color: #fcaf18; }\\n\\n.cc-sdk .yellow .cc-message-box__btn {\\n  background: #fdaf19; }\\n\\n.cc-sdk .red .progress-bar {\\n  /*background: rgba(130, 17, 25, 0.87);*/\\n  background: #d22a35; }\\n\\n.cc-sdk .red .progress-line {\\n  background: #d22a35;\\n  filter: brightness(150%); }\\n\\n.cc-sdk .red .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:before {\\n  background: #d22a35; }\\n\\n.cc-sdk .red .cc-checkbox input[type=\\\"checkbox\\\"]:checked + label:after {\\n  border-color: #fff; }\\n\\n.cc-sdk .red .cc-checkbox input[type=\\\"radio\\\"]:checked + label:before {\\n  border-color: #d22a35; }\\n\\n.cc-sdk .red .cc-checkbox input[type=\\\"radio\\\"]:checked + label:after {\\n  background: #d22a35; }\\n\\n.cc-sdk .red .cc-sdk-form-control:focus {\\n  border-color: #d22a35; }\\n\\n.cc-sdk .red .cc-message-box__btn {\\n  background: #d22a35;\\n  color: #fff; }\\n\\n.cc-question-container, .hide-slide {\\n  -webkit-transform: translateX(5px);\\n  -moz-transform: translateX(5px);\\n  -ms-transform: translateX(5px);\\n  -o-transform: translateX(5px);\\n  transform: translateX(5px);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.hide-bottom-up {\\n  -webkit-transform: translateY(30px);\\n  -moz-transform: translateY(30px);\\n  -ms-transform: translateY(30px);\\n  -o-transform: translateY(30px);\\n  transform: translateY(30px);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.hide-up-bottom {\\n  -webkit-transform: translateY(100%);\\n  -moz-transform: translateY(100%);\\n  -ms-transform: translateY(100%);\\n  -o-transform: translateY(100%);\\n  transform: translateY(100%);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.hide-right-left {\\n  -webkit-transform: translateX(100%);\\n  -moz-transform: translateX(100%);\\n  -ms-transform: translateX(100%);\\n  -o-transform: translateX(100%);\\n  transform: translateX(100%);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.hide-left-right {\\n  -webkit-transform: translateX(-100%);\\n  -moz-transform: translateX(-100%);\\n  -ms-transform: translateX(-100%);\\n  -o-transform: translateX(-100%);\\n  transform: translateX(-100%);\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: hidden;\\n  opacity: 0; }\\n\\n.show-slide, .show-thankyou-slide {\\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\\n  visibility: visible;\\n  opacity: 1;\\n  -webkit-transform: translateX(0) translateY(0);\\n  -moz-transform: translateX(0) translateY(0);\\n  -ms-transform: translateX(0) translateY(0);\\n  -o-transform: translateX(0) translateY(0);\\n  transform: translateX(0) translateY(0); }\\n\\n.cc-sdk #timer {\\n  position: relative; }\\n\\n.cc-sdk svg.cc-sdk-timer {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 40px;\\n  height: 40px;\\n  transform: rotateY(-180deg) rotateZ(-90deg); }\\n\\n[dir=\\\"rtl\\\"].cc-sdk svg.cc-sdk-timer {\\n  right: 0;\\n  left: auto; }\\n\\n.cc-sdk svg.cc-sdk-timer circle {\\n  stroke-dasharray: 50px;\\n  stroke-dashoffset: 0px;\\n  stroke-linecap: round;\\n  stroke-width: 2px;\\n  stroke: red;\\n  fill: none;\\n  animation: countdown 10s linear 1 forwards; }\\n\\n@keyframes countdown {\\n  from {\\n    stroke-dashoffset: 0px; }\\n  to {\\n    stroke-dashoffset: 50px; } }\\n\\n.cc-sdk .cc-loaderimg {\\n  position: absolute;\\n  width: 100%;\\n  z-index: 1000;\\n  left: 0;\\n  right: 0;\\n  top: 0;\\n  height: 100%;\\n  background: rgba(255, 255, 255, 0.8); }\\n\\n.cc-sdk .cc-loaderimg svg {\\n  width: 100px; }\\n\", \"\"]);\n\n// exports\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function() {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\tvar result = [];\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar item = this[i];\n\t\t\tif(item[2]) {\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\n\t\t\t} else {\n\t\t\t\tresult.push(item[1]);\n\t\t\t}\n\t\t}\n\t\treturn result.join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(selector) {\n\t\tif (typeof memo[selector] === \"undefined\") {\n\t\t\tmemo[selector] = fn.call(this, selector);\n\t\t}\n\n\t\treturn memo[selector]\n\t};\n})(function (target) {\n\treturn document.querySelector(target)\n});\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton) options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n\tif (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\toptions.attrs.type = \"text/css\";\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\toptions.attrs.type = \"text/css\";\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","\r\nimport { LanguageTextFilter } from './LanguageTextFilter';\r\nimport { isAnd, doesSatisfy, isOr, checkLanguage } from './filter-utils';\r\n\r\nclass ConditionalTextFilter {\r\n  public static filterText(surveyHandler: any, question: any): string {\r\n    let conditionalText = question.text == null ? '' : LanguageTextFilter.translateQuestionText(surveyHandler, question);\r\n    if (question.text != null) {\r\n      let conditionalText: string = question.text.split(':');\r\n      if (question.setName && question.text.indexOf(\":\") !== -1) {\r\n        conditionalText = conditionalText[0] + ': <br><span class=\"text-normal\">' + conditionalText[1] + '</span>';\r\n      } else {\r\n        conditionalText = conditionalText[0];\r\n      }\r\n    }\r\n    if (question.leadingDisplayTexts == null) {\r\n      conditionalText = LanguageTextFilter.translateQuestionText(surveyHandler, question);\r\n      return conditionalText;\r\n    } else if (question.leadingDisplayTexts.length == 0) {\r\n      conditionalText = LanguageTextFilter.translateQuestionText(surveyHandler, question);\r\n      return conditionalText;\r\n    } else {\r\n      for (let fOption of question.leadingDisplayTexts) {\r\n        if (fOption != null && fOption.filter != null && fOption.filter.filterquestions != null) {\r\n          let iSatisfied: boolean = false;\r\n          let iFailed: boolean = false;\r\n          for (let filterByQuestion of fOption.filter.filterquestions) {\r\n            if (isAnd(filterByQuestion)) {\r\n              if (doesSatisfy(surveyHandler, filterByQuestion) && !iFailed) {\r\n                iSatisfied = true;\r\n              } else {\r\n                iFailed = true;\r\n                break;\r\n              }\r\n            } else if (isOr(filterByQuestion)) {\r\n              if (doesSatisfy(surveyHandler, filterByQuestion)) {\r\n                iSatisfied = true;\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          if (iSatisfied && !iFailed) {\r\n            if (checkLanguage(surveyHandler, fOption)\r\n              || (surveyHandler.ccsdk.config && surveyHandler.ccsdk.config.language\r\n                && surveyHandler.ccsdk.config.language.toLowerCase().indexOf('default') !== -1\r\n                && fOption.language === null)\r\n              || (surveyHandler.ccsdk.config && !surveyHandler.ccsdk.config.language && fOption.language === null)) {\r\n              let groupTitle;\r\n              if (question.setName && conditionalText.indexOf(':') !== -1) {\r\n                groupTitle = conditionalText.split(':')[0];\r\n                conditionalText = groupTitle + ': <br><span class=\"text-normal\">' + fOption.text + '</span>';\r\n              } else {\r\n                conditionalText = fOption.text;\r\n              }\r\n            }\r\n            conditionalText;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return conditionalText;\r\n  }\r\n}\r\n\r\nexport { ConditionalTextFilter };","import { DomUtilities } from \"./DomUtilities\";\r\n// import { ScrollBar } from './ScrollBar';\r\nimport { Select } from \"./Select\";\r\nimport { Theme } from \"./Theme\";\r\nimport { ConditionalFlowFilter } from \"../filters/ConditionalFlowFilter\";\r\nimport { Slider } from \"./Slider\";\r\nimport { Constants } from \"../../Constants\";\r\n\r\nclass DomSurvey {\r\n  util: DomUtilities;\r\n  // scrollbar : ScrollBar;\r\n  domListeners: any;\r\n  select: Select;\r\n  theme: Theme;\r\n  qIndex: number;\r\n  currentQuestionId: string;\r\n  $questionContainer: any;\r\n  $innerQuestionContainer: any;\r\n  $popupContainer: any;\r\n  $popupContainer2: any;\r\n  $body: any;\r\n  qResponse: any;\r\n  trackSelects: any = [];\r\n  trackRadios: any = [];\r\n  ccsdk: any;\r\n  currentQuestionListeners: any = [];\r\n  trackSetupListeners: any;\r\n  $startBtn: any;\r\n  bodyElement: any;\r\n\r\n  constructor(ccsdk: any) {\r\n    let self: DomSurvey = this;\r\n    this.domListeners = [];\r\n    this.ccsdk = ccsdk;\r\n    this.qIndex = 0;\r\n    this.qResponse = {};\r\n    this.domSelectElements();\r\n    this.util = new DomUtilities();\r\n    // self.scrollbar = new ScrollBar(\"data-cc-scrollbar\");\r\n    this.util.ready(function () {\r\n      // self.util.addClassAll(self.$popupContainer,'show-slide');\r\n    });\r\n  }\r\n\r\n  setTheme(brandColor, time) {\r\n    let self: DomSurvey = this;\r\n    this.util.ready(function () {\r\n      self.theme = new Theme(brandColor, time);\r\n    });\r\n  }\r\n\r\n  setQIndex(index: number) {\r\n    this.qIndex = index;\r\n  }\r\n\r\n  getQindex() {\r\n    return this.qIndex;\r\n  }\r\n\r\n  domSelectElements() {\r\n    this.$questionContainer = document.querySelectorAll(\r\n      \".cc-questions-container\"\r\n    );\r\n    this.$popupContainer = document.querySelectorAll(\".cc-popup-container\");\r\n    this.$popupContainer2 = document.querySelectorAll(\".cc-popup-container-2\");\r\n    this.$body = document.querySelectorAll(\"body\")[0];\r\n    // this.select = new Select();\r\n  }\r\n\r\n  removePrevListener(id: string): boolean {\r\n    for (let listener of this.domListeners) {\r\n      if (listener.id == id) {\r\n        let index = this.domListeners.indexOf(listener);\r\n        (window as any).ccsdkDebug ? console.log(\"removing listener\", id) : \"\";\r\n        (window as any).ccsdkDebug\r\n          ? console.log(\"removing listener index\", index)\r\n          : \"\";\r\n        this.util.removeListener(\r\n          this.$body,\r\n          listener.type,\r\n          listener.internalHandler\r\n        );\r\n        if (index > -1) {\r\n          this.domListeners.splice(index, 1);\r\n        }\r\n        (window as any).ccsdkDebug ? console.log(this.domListeners) : \"\";\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  setupListeners() {\r\n    let self = this;\r\n    let startSurvey = this.util.initListener(\r\n      \"click\",\r\n      \".act-cc-survey-start\",\r\n      function () {\r\n        if (\r\n          !self.util.hasClass(self.$startBtn, \"disabled\") &&\r\n          self.ccsdk.surveyStatus != \"minimized\"\r\n        ) {\r\n          let onSurveyClickEvent = new CustomEvent(\r\n            Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken\r\n          );\r\n          document.dispatchEvent(onSurveyClickEvent);\r\n          self.util.addClass(self.$startBtn, \"disabled\");\r\n          self.showLoader();\r\n          self.startSurvey();\r\n        } else {\r\n          self.initSurveyDom();\r\n        }\r\n      }\r\n    );\r\n    this.domListeners.push(startSurvey);\r\n\r\n    startSurvey.internalHandler = this.util.listener(\r\n      this.$body,\r\n      startSurvey.type,\r\n      startSurvey.id,\r\n      startSurvey.cb\r\n    );\r\n\r\n    let nextQue = this.util.initListener(\r\n      \"click\",\r\n      \".act-cc-button-next\",\r\n      function () {\r\n        // alert(\"working\");\r\n        let onSurveyClickEvent = new CustomEvent(\r\n          Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken\r\n        );\r\n        document.dispatchEvent(onSurveyClickEvent);\r\n        self.nextQuestion();\r\n      }\r\n    );\r\n    this.domListeners.push(nextQue);\r\n\r\n    nextQue.internalHandler = this.util.listener(\r\n      this.$body,\r\n      nextQue.type,\r\n      nextQue.id,\r\n      nextQue.cb\r\n    );\r\n\r\n    let prevQue = this.util.initListener(\r\n      \"click\",\r\n      \".act-cc-button-prev\",\r\n      function () {\r\n        let onSurveyClickEvent = new CustomEvent(\r\n          Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken\r\n        );\r\n        document.dispatchEvent(onSurveyClickEvent);\r\n        self.prevQuestion();\r\n      }\r\n    );\r\n    this.domListeners.push(prevQue);\r\n\r\n    prevQue.internalHandler = this.util.listener(\r\n      this.$body,\r\n      prevQue.type,\r\n      prevQue.id,\r\n      prevQue.cb\r\n    );\r\n\r\n    let closeSurvey = this.util.initListener(\r\n      \"click\",\r\n      \".act-cc-button-close\",\r\n      function () {\r\n        let onSurveyCloseEvent = new CustomEvent(\r\n          Constants.SURVEY_CLOSE_EVENT + \"-\" + self.ccsdk.surveyToken\r\n        );\r\n        document.dispatchEvent(onSurveyCloseEvent);\r\n        self.ccsdk.survey.answers = {};\r\n        self.trackSelects = [];\r\n        self.destroyListeners();\r\n        self.util.trigger(document, \"ccclose\", undefined);\r\n        self.bodyElement = <HTMLElement>(\r\n          document.getElementsByTagName(\"body\")[0]\r\n        );\r\n        self.util.removeClass(self.bodyElement, \"blurr\");\r\n        self.ccsdk.survey.destroy();\r\n      }\r\n    );\r\n    this.domListeners.push(closeSurvey);\r\n\r\n    closeSurvey.internalHandler = this.util.listener(\r\n      this.$body,\r\n      closeSurvey.type,\r\n      closeSurvey.id,\r\n      closeSurvey.cb\r\n    );\r\n\r\n    let minSurvey = this.util.initListener(\r\n      \"click\",\r\n      \".act-cc-button-minimize\",\r\n      function () {\r\n        self.minimizeSurvey();\r\n      }\r\n    );\r\n    this.domListeners.push(minSurvey);\r\n\r\n    minSurvey.internalHandler = this.util.listener(\r\n      self.$body,\r\n      minSurvey.type,\r\n      minSurvey.id,\r\n      minSurvey.cb\r\n    );\r\n  }\r\n\r\n  minimizeSurvey() {\r\n    // this.$popupContainer[0].removeClass('');\r\n    this.util.removeClass(this.$popupContainer2[0], \"hide-right-left\");\r\n    this.util.addClass(this.$popupContainer2[0], \"hide-right-left\");\r\n    setTimeout(() => {\r\n      this.util.removeClass(this.$popupContainer2[0], \"show-slide\");\r\n    }, 200);\r\n    this.util.removeClass(this.$popupContainer[0], \"hide-right-left\");\r\n    this.util.addClass(this.$popupContainer[0], \"hide-right-left\");\r\n    setTimeout(() => {\r\n      this.util.addClass(this.$popupContainer[0], \"show-slide\");\r\n    }, 200);\r\n    this.ccsdk.surveyStatus = \"minimized\";\r\n    let resumeText = this.ccsdk.config.resumeButtonText\r\n      ? this.ccsdk.config.resumeButtonText\r\n      : \"Resume\";\r\n    this.$startBtn.innerHTML = resumeText;\r\n    this.util.removeClass(this.$startBtn, \"disabled\");\r\n\r\n    //update all start btns\r\n    // Array.prototype.forEach.call($startBtn, (el, i) => {\r\n    //   el.innerHTML = resumeText;\r\n    // });\r\n  }\r\n\r\n  destroyListeners() {\r\n    // (window as any).ccsdkDebug?console.log(\"Removing all listeners\"):'';\r\n    for (let listener of this.domListeners) {\r\n      this.util.removeListener(\r\n        this.$body,\r\n        listener.type,\r\n        listener.internalHandler\r\n      );\r\n    }\r\n    for (let listener of this.ccsdk.survey.domListeners) {\r\n      this.util.removeListener(\r\n        this.$body,\r\n        listener.type,\r\n        listener.internalHandler\r\n      );\r\n    }\r\n    if (this.ccsdk.survey.languageSelect) {\r\n      this.ccsdk.survey.languageSelect.destroyListeners();\r\n    }\r\n    if (this.select) {\r\n      this.select.destroyListeners();\r\n    }\r\n  }\r\n\r\n  startSurvey() {\r\n    this.ccsdk.survey.cancelKillWelcomeQuestion();\r\n    this.ccsdk.getSurveyData();\r\n  }\r\n\r\n  initSurveyDom() {\r\n    this.domSelectElements();\r\n    // (window as any).ccsdkDebug?console.log(\"click in setup listener survey start\"):'';\r\n    this.util.addClassAll(this.$popupContainer2, \"show-slide\");\r\n    this.util.removeClass(this.$popupContainer[0], \"show-slide\");\r\n    if (this.ccsdk.surveyStatus == \"minimized\") {\r\n      //resume survey\r\n    } else {\r\n      //start survey\r\n      //check if only one language is configured\r\n      (window as any).ccsdkDebug ? console.log(this.ccsdk.surveyData) : \"\";\r\n      if (\r\n        this.ccsdk.surveyData.translated === null ||\r\n        (this.ccsdk.surveyData.translated &&\r\n          Object.keys(this.ccsdk.surveyData.translated).length < 1)\r\n      ) {\r\n        this.loadFirstQuestion();\r\n      } else {\r\n        this.ccsdk.survey.displayLanguageSelector();\r\n      }\r\n    }\r\n  }\r\n\r\n  updateProgress() {\r\n    let el = <HTMLElement>document.querySelectorAll(\"#progress-line\")[0];\r\n    if (this.ccsdk && this.ccsdk.tracking) {\r\n      this.ccsdk.tracking.trackEvent(\r\n        \"Questions Answered\",\r\n        {\r\n          token: this.ccsdk.surveyToken,\r\n          data: {\r\n            name: `${this.qIndex}/${\r\n              this.ccsdk.survey.questionsToDisplay.length\r\n              }`,\r\n            action: this.currentQuestionId\r\n          }\r\n        },\r\n        null,\r\n        null\r\n      );\r\n    }\r\n    el.style.width =\r\n      (this.qIndex / this.ccsdk.survey.questionsToDisplay.length) * 100 + \"%\";\r\n  }\r\n\r\n  loadFirstQuestion() {\r\n    // applyRuleToAllEl(this.$questionContainer, );\r\n    // this.util.removeClassAll(this.$questionContainer, 'show-slide');\r\n    // this.util.addClass(this.$questionContainer, 'show-slide');\r\n\r\n    this.loadQuestionSpecifics(this.$questionContainer, 0);\r\n    this.util.removeClassAll(\r\n      this.$questionContainer[0].firstChild,\r\n      \"show-slide\"\r\n    );\r\n    this.util.addClass(this.$questionContainer[0].firstChild, \"show-slide\");\r\n    let leftIcon: any = this.util.get(\".act-cc-button-prev\");\r\n    this.util.addClassAll(leftIcon, \"hide-slide\");\r\n    let onSurveyQuestionEvent = new CustomEvent(\r\n      Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken\r\n    );\r\n    document.dispatchEvent(onSurveyQuestionEvent);\r\n  }\r\n\r\n  nextQuestion() {\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"next question q response init\", this.qResponse)\r\n      : \"\";\r\n    // console.log('next question q response init',this.qResponse);\r\n    //empty the domListner\r\n    // this.util.removeAllListeners(this.domListeners);\r\n    let onSurveyQuestionEvent = new CustomEvent(\r\n      Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken\r\n    );\r\n    document.dispatchEvent(onSurveyQuestionEvent);\r\n    //submit the current response\r\n    // (window as any).ccsdkDebug?console.log('submit ',this.qResponse.type, this.qResponse):'';\r\n    let isRequired: boolean = false;\r\n    let q: HTMLElement = this.$questionContainer[0].firstChild;\r\n    // (window as any).ccsdkDebug?console.log(this.$questionContainer):'';\r\n    let span: Element = this.$questionContainer[0].firstChild.querySelectorAll(\r\n      \".cc-question-container__required\"\r\n    )[0];\r\n    let validationSpan: Element = this.$questionContainer[0].firstChild.querySelectorAll(\r\n      \".cc-question-container__validation\"\r\n    )[0];\r\n    if (span) this.util.removeClass(span, \"show\");\r\n    if (validationSpan) this.util.removeClass(validationSpan, \"show\");\r\n\r\n    //check if question is required\r\n    isRequired =\r\n      q.getAttribute(\"data-required\").toLowerCase() == \"true\" ? true : false;\r\n    // console.log('required check',Object.keys(this.qResponse).length, isRequired, this.qResponse);\r\n    // if (isRequired && Object.keys(this.qResponse).length === 0) {\r\n    if (isRequired && Object.keys(this.qResponse).length === 0) {\r\n      if (span) {\r\n        this.util.addClass(span, \"show\");\r\n        this.util.removeClass(span, \"hide\");\r\n      }\r\n      return;\r\n    } else if (isRequired && !this.qResponse.text && !this.qResponse.number) {\r\n      if (span) {\r\n        this.util.addClass(span, \"show\");\r\n        this.util.removeClass(span, \"hide\");\r\n      }\r\n      return;\r\n    } else {\r\n      if (span) {\r\n        this.util.removeClass(span, \"show\");\r\n        this.util.addClass(span, \"hide\");\r\n      }\r\n\r\n      //check if validationRegex is set and is fulfilled\r\n      let validationRegex = this.ccsdk.survey.questionsToDisplay[this.qIndex]\r\n        .validationRegex;\r\n      if (validationRegex) {\r\n        (window as any).ccsdkDebug\r\n          ? console.log(\"validationRegex\", validationRegex)\r\n          : \"\";\r\n        (window as any).ccsdkDebug\r\n          ? console.log(\"response\", this.qResponse)\r\n          : \"\";\r\n        let pattern = validationRegex.match(new RegExp(\"^/(.*?)/([gimy]*)$\"));\r\n        let regex = new RegExp(validationRegex);\r\n        if (this.qResponse.text) {\r\n          if (regex.test(this.qResponse.text)) {\r\n            this.util.removeClass(validationSpan, \"show\");\r\n            this.util.addClass(validationSpan, \"hide\");\r\n          } else {\r\n            if (validationSpan) {\r\n              this.util.addClass(validationSpan, \"show\");\r\n              this.util.removeClass(validationSpan, \"hide\");\r\n            }\r\n            return;\r\n          }\r\n        } else if (this.qResponse.number) {\r\n          (window as any).ccsdkDebug\r\n            ? console.log(\"test regex text\", regex.test(this.qResponse.number))\r\n            : \"\";\r\n\r\n          if (regex.test(this.qResponse.number)) {\r\n            this.util.removeClass(validationSpan, \"show\");\r\n            this.util.addClass(validationSpan, \"hide\");\r\n          } else {\r\n            if (validationSpan) {\r\n              this.util.addClass(validationSpan, \"show\");\r\n              this.util.removeClass(validationSpan, \"hide\");\r\n            }\r\n            return;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (this.qResponse !== \"undefined\") {\r\n        // (window as any).ccsdkDebug?console.log('qindex ' + this.qIndex):'';\r\n        if (\r\n          typeof this.ccsdk.survey.answers[this.currentQuestionId] !==\r\n          \"undefined\" &&\r\n          this.qResponse.type ==\r\n          this.ccsdk.survey.answers[this.currentQuestionId].type &&\r\n          this.qResponse.text ==\r\n          this.ccsdk.survey.answers[this.currentQuestionId].text &&\r\n          this.qResponse.number ==\r\n          this.ccsdk.survey.answers[this.currentQuestionId].number\r\n        ) {\r\n          // console.log('no submit');\r\n          //don't submit if already submitted.\r\n        } else if (\r\n          typeof this.ccsdk.survey.answers[this.currentQuestionId] !==\r\n          \"undefined\" &&\r\n          !this.qResponse.text &&\r\n          !this.qResponse.number\r\n        ) {\r\n          // console.log('no submit 2');\r\n          //previous entry filled\r\n        } else {\r\n          // (window as any).ccsdkDebug?console.log('submitting ' + this.currentQuestionId):'';\r\n          // console.log(this.qResponse);\r\n\r\n          let qId = this.qResponse.questionId\r\n            ? this.qResponse.questionId\r\n            : this.currentQuestionId;\r\n          this.submitQuestion(\r\n            this.qIndex,\r\n            this.qResponse,\r\n            this.qResponse.type,\r\n            qId\r\n          );\r\n          //save response\r\n          this.ccsdk.survey.answers[this.currentQuestionId] = JSON.parse(\r\n            JSON.stringify(this.qResponse)\r\n          );\r\n        }\r\n      }\r\n    }\r\n    ConditionalFlowFilter.filterQuestion(\r\n      this.ccsdk.survey,\r\n      this.ccsdk.survey.questionsToDisplay[this.qIndex]\r\n    );\r\n    // console.log(this.ccsdk.survey.questionsToDisplay);\r\n    //go to next question\r\n    this.qIndex++;\r\n    //reset the post parameters\r\n    // this.qResponse = typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined' ? JSON.parse(JSON.stringify(this.ccsdk.survey.answers[this.currentQuestionId])) : {};\r\n    // this.qResponse = {};\r\n    let nextButtonState: string = \"initial\";\r\n    // (window as any).ccsdkDebug?console.log(this.$questionContainer):'';\r\n    let nextQ: HTMLElement = this.$questionContainer;\r\n    // (window as any).ccsdkDebug?console.log(this.qIndex):'';\r\n    if (this.qIndex == this.ccsdk.survey.questionsToDisplay.length) {\r\n      //Last run to show thank you message\r\n      let leftIcon: any = this.util.get(\".act-cc-button-prev\");\r\n      let rightIcon: any = this.util.get(\".cc-icon-right\");\r\n      let nextIcon: any = this.util.get(\".act-cc-button-next\");\r\n      this.util.addClassAll(leftIcon, \"hide\");\r\n      this.util.addClassAll(rightIcon, \"hide\");\r\n      this.util.addClassAll(nextIcon, \"hide\");\r\n      this.util.trigger(document, \"ccdone\", undefined);\r\n      this.util.removeClass(\r\n        this.$questionContainer[0].firstChild,\r\n        \"show-slide\"\r\n      );\r\n      this.updateProgress();\r\n    } else {\r\n      if (this.qIndex > this.ccsdk.survey.questionsToDisplay.length) {\r\n        //reset the counter to show first question\r\n        this.qIndex = 0;\r\n      }\r\n      //repopulate qResponse based on answers.\r\n      // ( window as any ).ccsdkDebug ? console.log( 'previous answer', this.ccsdk.survey.answers[ this.currentQuestionId ] ) : '';\r\n      this.qResponse =\r\n        typeof this.ccsdk.survey.answers[this.currentQuestionId] !== \"undefined\"\r\n          ? JSON.parse(\r\n            JSON.stringify(this.ccsdk.survey.answers[this.currentQuestionId])\r\n          )\r\n          : {};\r\n      // this.util.removeClassAll(this.$questionContainer[0].firstChild, 'show-slide');\r\n      // this.util.addClass(nextQ, 'show-slide');\r\n      this.updateProgress();\r\n      this.loadQuestionSpecifics(nextQ, this.qIndex);\r\n      this.util.addClass(this.$questionContainer[0].firstChild, \"show-slide\");\r\n      // if(nextButtonState === 'dirty'){\r\n      // this.submitQuestion(this.qIndex, 'test', 'multiline');\r\n      // }\r\n    }\r\n    if (this.qIndex == 0) {\r\n      let leftIcon: any = this.util.get(\".act-cc-button-prev\");\r\n      this.util.addClassAll(leftIcon, \"hide-slide\");\r\n    } else {\r\n      let leftIcon: any = this.util.get(\".act-cc-button-prev\");\r\n      this.util.addClass(leftIcon[0], \"show-slide\");\r\n      this.util.removeClass(leftIcon[0], \"hide-slide\");\r\n    }\r\n    // ( window as any ).ccsdkDebug ? console.log( 'next question q response end', this.qResponse ) : '';\r\n    // this.qResponse = {};\r\n  }\r\n\r\n  prevQuestion() {\r\n    this.submitQuestion(\r\n      this.qIndex,\r\n      { ...this.qResponse },\r\n      this.qResponse.type,\r\n      this.currentQuestionId\r\n    );\r\n    this.ccsdk.survey.answers[this.currentQuestionId] = JSON.parse(\r\n      JSON.stringify(this.qResponse)\r\n    );\r\n\r\n    this.qIndex--;\r\n    if (!this.ccsdk.survey.questionsToDisplay.length || this.qIndex < 0) {\r\n      this.qIndex = 0;\r\n      return;\r\n      // this.qIndex = this.$questionContainer.length - 1;\r\n    }\r\n    // ( window as any ).ccsdkDebug ? console.log( this.qIndex ) : '';\r\n    let onSurveyQuestionEvent = new CustomEvent(\r\n      Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken\r\n    );\r\n    document.dispatchEvent(onSurveyQuestionEvent);\r\n    //re populate qResponse based on answers.\r\n    // this.util.removeClassAll(this.$questionContainer,'show-slide');\r\n    this.loadQuestionSpecifics(null, this.qIndex);\r\n    this.qResponse =\r\n      typeof this.ccsdk.survey.answers[this.currentQuestionId] !== \"undefined\"\r\n        ? JSON.parse(\r\n          JSON.stringify(this.ccsdk.survey.answers[this.currentQuestionId])\r\n        )\r\n        : {};\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"prevQuestion qResponse\", this.qResponse)\r\n      : \"\";\r\n    this.util.addClass(this.$questionContainer[0].firstChild, \"show-slide\");\r\n    this.updateProgress();\r\n    if (this.qIndex == 0) {\r\n      let leftIcon: any = this.util.get(\".act-cc-button-prev\");\r\n      this.util.addClassAll(leftIcon, \"hide-slide\");\r\n      this.util.removeClassAll(leftIcon, \"show-slide\");\r\n    }\r\n  }\r\n\r\n  showLoader() {\r\n    let $loader = document.querySelectorAll(\".cc-loaderimg\")[0];\r\n    this.util.addClass($loader, \"show\");\r\n    this.util.removeClass($loader, \"hide\");\r\n  }\r\n  hideLoader() {\r\n    let $loader = document.querySelectorAll(\".cc-loaderimg\")[0];\r\n    this.util.removeClass($loader, \"show\");\r\n    this.util.addClass($loader, \"hide\");\r\n  }\r\n\r\n  appendInBody(html) {\r\n    document.querySelectorAll(\"body\")[0].insertAdjacentHTML(\"afterbegin\", html);\r\n    //force update domSelect\r\n    this.domSelectElements();\r\n  }\r\n\r\n  replaceInQuestionsContainer(html) {\r\n    this.$questionContainer[0].innerHTML = html;\r\n    this.domSelectElements();\r\n  }\r\n\r\n  appendInQuestionsContainer(html) {\r\n    document\r\n      .querySelectorAll(\".cc-questions-container\")[0]\r\n      .insertAdjacentHTML(\"afterbegin\", html);\r\n    //force update domSelect\r\n    this.domSelectElements();\r\n  }\r\n\r\n  showWelcomeContainer() {\r\n    setTimeout(() => {\r\n      let startContainer = <HTMLElement>(\r\n        document.querySelectorAll(\".act-cc-welcome-question-box\")[0]\r\n      );\r\n      let bodyElement = <HTMLElement>document.getElementsByTagName(\"body\")[0];\r\n      this.util.addClass(startContainer, \"show-slide\");\r\n      // this.util.addClass( bodyElement, \"blurr\" );\r\n    }, 200);\r\n    // console.debug()\r\n    this.$startBtn = document.querySelectorAll(\".act-cc-survey-start\")[0];\r\n  }\r\n\r\n  showLanguageSelector() {\r\n    setTimeout(() => {\r\n      let startContainer = <HTMLElement>(\r\n        document.querySelectorAll(\".cc-language-selector\")[0]\r\n      );\r\n      let bodyElement = <HTMLElement>document.getElementsByTagName(\"body\")[0];\r\n      this.util.addClass(startContainer, \"show-slide\");\r\n      // this.util.addClass( bodyElement, \"blurr\" );\r\n    }, 200);\r\n    let self = this;\r\n    if (\r\n      this.util.checkIfListenerExists(\".cc-language-select\", this.domListeners)\r\n    ) {\r\n      // return;\r\n      // ( window as any ).ccsdkDebug ? console.log( \"language select - previous listeners exists\" ) : '';\r\n      this.removePrevListener(\".cc-language-select\");\r\n    }\r\n    let languageSelect = this.util.initListener(\r\n      \"click\",\r\n      \".cc-language-select\",\r\n      function () {\r\n        // let onSurveyClickEvent = new CustomEvent(Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n        // document.dispatchEvent(onSurveyClickEvent);\r\n        //select language show next question.\r\n        // self.startSurvey();\r\n        self.ccsdk.config.language = \"default\";\r\n        self.ccsdk.config.language = \"\"; //language selection from menu then show first question\r\n      }\r\n    );\r\n\r\n    languageSelect.internalHandler = this.util.listener(\r\n      this.$body,\r\n      languageSelect.type,\r\n      languageSelect.id,\r\n      languageSelect.cb\r\n    );\r\n  }\r\n\r\n  getSurveyContainer(token: string) {\r\n    return document.querySelectorAll(\"#\" + token + \"-survey\")[0];\r\n  }\r\n\r\n  getWelcomeContainer(token: string) {\r\n    return document.querySelectorAll(\"#\" + token + \"-welcome\")[0];\r\n  }\r\n\r\n  loadQuestionSpecifics(q: HTMLElement, index: number) {\r\n    let self: DomSurvey = this;\r\n    this.$questionContainer[0].innerHTML = \"\";\r\n    let compiledTemplate = this.ccsdk.survey.compileTemplate(\r\n      this.ccsdk.survey.questionsToDisplay[index]\r\n    );\r\n    this.$questionContainer[0].innerHTML += compiledTemplate;\r\n    let qType: string = this.$questionContainer[0].firstChild.getAttribute(\r\n      \"data-type\"\r\n    );\r\n    let qId: string = this.$questionContainer[0].firstChild.getAttribute(\r\n      \"data-id\"\r\n    );\r\n    this.qResponse = {};\r\n    // (window as any).ccsdkDebug?console.log(\"QTYIPE AND QID \" , qType, qId):'';\r\n    this.currentQuestionId = qId.substring(2, qId.length);\r\n    // console.log( 'qtype', qType )\r\n    switch (qType) {\r\n      case \"scale\":\r\n        let allOptions1: any = document.querySelectorAll(\r\n          \"#\" + qId + \" .option-number-item\"\r\n        );\r\n        let optionWidth1 = 100 / allOptions1.length - 0.6;\r\n        // (window as any).ccsdkDebug?console.log(\"Option width\", allOptions1, optionWidth1.toFixed(2)):'';\r\n        // self.util.css(allOptions1 , 'width',  optionWidth1.toFixed(1) + '%');\r\n        this.setupListenersQuestionScale(index, qId);\r\n        break;\r\n      case \"nps\":\r\n        this.setupListenersQuestionNPS(index, qId);\r\n        break;\r\n      case \"multiline\":\r\n        this.setupListenersQuestionMultiline(index, qId);\r\n        break;\r\n      case \"select\":\r\n        if (typeof this.select !== \"undefined\") {\r\n          this.select.destroyListeners();\r\n        }\r\n        this.setupListenersQuestionSelect(index, qId);\r\n        break;\r\n      case \"radio\":\r\n        this.setupListenersQuestionRadio(index, qId);\r\n        break;\r\n      case \"radioImage\":\r\n        this.setupListenersQuestionRadioImage(index, qId);\r\n        break;\r\n      case \"checkbox\":\r\n        this.setupListenersQuestionCheckbox(index, qId);\r\n        break;\r\n      case \"star\":\r\n        this.setupListenersQuestionStar(index, qId);\r\n        break;\r\n      case \"smile\":\r\n        this.setupListenersQuestionSmile(index, qId);\r\n        break;\r\n      case \"csat\":\r\n        this.setupListenersQuestionCsat(index, qId);\r\n        break;\r\n      case \"slider\":\r\n        this.setupListenersQuestionSlider(index, qId);\r\n        break;\r\n      case \"singleline\":\r\n        this.setupListenersQuestionSingleline(index, qId);\r\n        break;\r\n      case \"number\":\r\n        this.setupListenersQuestionNumber(index, qId);\r\n        break;\r\n      case \"date\":\r\n        this.setupListenersForDate(index, qId);\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  // question specific listeners\r\n\r\n  setupListenersQuestionScale(index: number, qId: string) {\r\n    var self: DomSurvey = this;\r\n    let selectedRating = <HTMLElement>(\r\n      document.querySelectorAll(\"#\" + qId + \" .cc-nps-selected-rating\")[0]\r\n    );\r\n    let selectedRating1 = <HTMLElement>(\r\n      document.querySelectorAll(\"#\" + qId + \" .cc-nps-selected-rating\")[1]\r\n    );\r\n    //add id too.\r\n    if (\r\n      this.util.checkIfListenerExists(\r\n        \"#\" + qId + \" .option-number-item\",\r\n        this.domListeners\r\n      )\r\n    ) {\r\n      // return;\r\n      // ( window as any ).ccsdkDebug ? console.log( \"scale question - previous listeners exists\" ) : '';\r\n      this.removePrevListener(\"#\" + qId + \" .option-number-item\");\r\n    }\r\n\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring(2, qId.length);\r\n    // ( window as any ).ccsdkDebug ? console.log( 'scale question', this.ccsdk.survey.answers[ questionId ] ) : '';\r\n    if (\r\n      typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n      this.ccsdk.survey.answers[questionId] !== \"\"\r\n    ) {\r\n      let previousValue = this.ccsdk.survey.answers[questionId].number;\r\n      let previousSelection = document.querySelectorAll(\r\n        \"#\" + qId + ' .option-number-item[data-rating=\"' + previousValue + '\"]'\r\n      )[0];\r\n      // ( window as any ).ccsdkDebug ? console.log( 'scale previous selection', previousSelection ) : '';\r\n      if (typeof previousSelection !== \"undefined\") {\r\n        this.util.addClass(previousSelection, \"selected\");\r\n        self.qResponse.type = \"scale\";\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n        selectedRating.innerHTML = previousValue;\r\n        selectedRating1.innerHTML = previousValue;\r\n      }\r\n    }\r\n\r\n    let ref = this.util.initListener(\r\n      \"click\",\r\n      \"#\" + qId + \" .option-number-item\",\r\n      function () {\r\n        let allOptions: any = document.querySelectorAll(\r\n          \"#\" + qId + \" .option-number-item\"\r\n        );\r\n\r\n        let rating: number = this.getAttribute(\"data-rating\");\r\n        self.util.removeClassAll(allOptions, \"selected\");\r\n        self.util.addClass(this, \"selected\");\r\n        // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n        // (window as any).ccsdkDebug?console.log('Scale selected',rating):'';\r\n        self.qResponse.type = \"scale\";\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = rating;\r\n        self.qResponse.questionId = qId;\r\n        selectedRating.innerHTML = \"\" + rating;\r\n        selectedRating1.innerHTML = \"\" + rating;\r\n\r\n        //move to next question automagically\r\n        // alert('calling next questions inside scale');\r\n        let onSurveyClickEvent = new CustomEvent(\r\n          Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken\r\n        );\r\n        document.dispatchEvent(onSurveyClickEvent);\r\n        setTimeout(() => {\r\n          self.nextQuestion();\r\n        }, 500);\r\n        // self.util.trigger(document,'q-answered', {\r\n        //   index : index,\r\n        //   rating : rating,\r\n        //   type : 'scale'\r\n        // });\r\n      }\r\n    );\r\n    this.domListeners.push(ref);\r\n\r\n    ref.internalHandler = this.util.listener(\r\n      this.$body,\r\n      ref.type,\r\n      ref.id,\r\n      ref.cb\r\n    );\r\n  }\r\n\r\n  setupListenersQuestionNPS(index: number, qId: string) {\r\n    var self: DomSurvey = this;\r\n    let selectedRating = <HTMLElement>(\r\n      document.querySelectorAll(\"#\" + qId + \" .cc-nps-selected-rating\")[0]\r\n    );\r\n    let allOptions: any = document.querySelectorAll(\r\n      \"#\" + qId + \" .option-number-item\"\r\n    );\r\n\r\n    //add id too.\r\n    if (\r\n      this.util.checkIfListenerExists(\r\n        \"#\" + qId + \" .option-number-item\",\r\n        this.domListeners\r\n      )\r\n    ) {\r\n      //remove listeners\r\n      // ( window as any ).ccsdkDebug ? console.log( \"nps question - previous listeners exists\" ) : '';\r\n      this.removePrevListener(\"#\" + qId + \" .option-number-item\");\r\n    }\r\n\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring(2, qId.length);\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"nps question\", this.ccsdk.survey.answers[questionId])\r\n      : \"\";\r\n    if (\r\n      typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n      this.ccsdk.survey.answers[questionId] !== \"\"\r\n    ) {\r\n      let previousValue = this.ccsdk.survey.answers[questionId].number;\r\n      let previousSelection = document.querySelectorAll(\r\n        \"#\" + qId + ' .option-number-item[data-rating=\"' + previousValue + '\"]'\r\n      )[0];\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"nps previous selection\", previousSelection)\r\n        : \"\";\r\n      if (typeof previousSelection !== \"undefined\") {\r\n        this.util.addClass(previousSelection, \"selected\");\r\n        let $mobileRating = document.querySelectorAll(\r\n          \".act-cc-nps-selected-rating\"\r\n        )[0];\r\n        $mobileRating.innerHTML = previousValue;\r\n        self.qResponse.type = \"nps\";\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n\r\n    // (window as any).ccsdkDebug?console.log(self.domListeners):'';\r\n    let ref = this.util.initListener(\r\n      \"click\",\r\n      \"#\" + qId + \" .option-number-item\",\r\n      function () {\r\n        let rating: number = this.getAttribute(\"data-rating\");\r\n        self.util.removeClassAll(allOptions, \"selected\");\r\n        self.util.addClass(this, \"selected\");\r\n        // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n        // (window as any).ccsdkDebug?console.log('Scale selected',rating):'';\r\n        self.qResponse.type = \"nps\";\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = rating;\r\n        self.qResponse.questionId = qId;\r\n        selectedRating.innerHTML = \"\" + rating;\r\n        //move to next question automagically\r\n\r\n        let onSurveyClickEvent = new CustomEvent(\r\n          Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken\r\n        );\r\n        document.dispatchEvent(onSurveyClickEvent);\r\n\r\n        // alert('calling next questions inside scale');\r\n        setTimeout(() => {\r\n          self.nextQuestion();\r\n        }, 500);\r\n        // self.util.trigger(document,'q-answered', {\r\n        //   index : index,\r\n        //   rating : rating,\r\n        //   type : 'scale'\r\n        // });\r\n      }\r\n    );\r\n    this.domListeners.push(ref);\r\n\r\n    ref.internalHandler = this.util.listener(\r\n      this.$body,\r\n      ref.type,\r\n      ref.id,\r\n      ref.cb\r\n    );\r\n  }\r\n\r\n  setupListenersQuestionCheckbox(index: number, qId: string) {\r\n    var self: DomSurvey = this;\r\n    if (\r\n      this.util.checkIfListenerExists(\r\n        \"#\" + qId + \" .cc-checkbox\",\r\n        this.domListeners\r\n      )\r\n    ) {\r\n      // return;\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"checkbox question - previous listeners exists\")\r\n        : \"\";\r\n      this.removePrevListener(\"#\" + qId + \" .cc-checkbox\");\r\n    }\r\n\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring(2, qId.length);\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"radio question\", this.ccsdk.survey.answers[questionId])\r\n      : \"\";\r\n    if (\r\n      typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n      this.ccsdk.survey.answers[questionId] !== \"\"\r\n    ) {\r\n      let previousValues = this.ccsdk.survey.answers[questionId].text;\r\n      if (previousValues) {\r\n        previousValues = previousValues.split(\",\");\r\n        for (let previousValue of previousValues) {\r\n          let previousSelection = document.querySelectorAll(\r\n            \"#\" + qId + ' input[value=\"' + previousValue + '\"]'\r\n          )[0];\r\n          (window as any).ccsdkDebug\r\n            ? console.log(\"radio previous selection\", previousSelection)\r\n            : \"\";\r\n          if (typeof previousSelection !== \"undefined\") {\r\n            this.util.addClass(previousSelection, \"selected\");\r\n            previousSelection.setAttribute(\"checked\", \"checked\");\r\n            self.qResponse.type = \"checkbox\";\r\n            self.qResponse.text = previousValue;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    let ref = this.util.initListener(\r\n      \"click\",\r\n      \"#\" + qId + \" .cc-checkbox\",\r\n      function () {\r\n        // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox input');\r\n        // let rating : number = this.querySelectorAll('input')[0].value;\r\n        let rating: string = [].filter\r\n          .call(\r\n            document.querySelectorAll(\"#\" + qId + \" .cc-checkbox input\"),\r\n            function (c) {\r\n              return c.checked;\r\n            }\r\n          )\r\n          .map(function (c) {\r\n            return c.value;\r\n          })\r\n          .join(\",\");\r\n\r\n        (window as any).ccsdkDebug\r\n          ? console.log(\"Checkbox selected\", rating)\r\n          : \"\";\r\n\r\n        self.qResponse.type = \"checkbox\";\r\n        self.qResponse.text = rating;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n        //move to next question automagically\r\n        // self.nextQuestion();\r\n      }\r\n    );\r\n    this.domListeners.push(ref);\r\n    let onSurveyClickEvent = new CustomEvent(\r\n      Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken\r\n    );\r\n    document.dispatchEvent(onSurveyClickEvent);\r\n    ref.internalHandler = this.util.listener(\r\n      this.$body,\r\n      ref.type,\r\n      ref.id,\r\n      ref.cb\r\n    );\r\n  }\r\n\r\n  setupListenersQuestionRadio(index: number, qId: string) {\r\n    var self: DomSurvey = this;\r\n    if (\r\n      this.util.checkIfListenerExists(\r\n        \"#\" + qId + \" .cc-checkbox input\",\r\n        this.domListeners\r\n      )\r\n    ) {\r\n      // return;\r\n      //remove listeners\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"radio question - previous listeners exists\")\r\n        : \"\";\r\n      this.removePrevListener(\"#\" + qId + \" .cc-checkbox input\");\r\n    }\r\n\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring(2, qId.length);\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"radio question\", this.ccsdk.survey.answers[questionId])\r\n      : \"\";\r\n    if (\r\n      typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n      this.ccsdk.survey.answers[questionId] !== \"\"\r\n    ) {\r\n      let previousValue = this.ccsdk.survey.answers[questionId].text;\r\n      let previousSelection = document.querySelectorAll(\r\n        \"#\" + qId + ' input[value=\"' + previousValue + '\"]'\r\n      )[0];\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"radio previous selection\", previousSelection)\r\n        : \"\";\r\n      if (typeof previousSelection !== \"undefined\") {\r\n        this.util.addClass(previousSelection, \"selected\");\r\n        previousSelection.setAttribute(\"checked\", \"checked\");\r\n        self.qResponse.type = \"radio\";\r\n        self.qResponse.text = previousValue;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n\r\n    let ref = this.util.initListener(\r\n      \"click\",\r\n      \"#\" + qId + \" .cc-checkbox input\",\r\n      function () {\r\n        // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox');\r\n        let rating: string = this.value;\r\n        // self.util.removeClassAll(allOptions, \"selected\");\r\n        // self.util.addClass(this, \"selected\");\r\n        // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n        // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\r\n        self.qResponse.type = \"radio\";\r\n        self.qResponse.text = rating;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n        let onSurveyClickEvent = new CustomEvent(\r\n          Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken\r\n        );\r\n        document.dispatchEvent(onSurveyClickEvent);\r\n        //move to next question automagically\r\n        setTimeout(() => {\r\n          self.nextQuestion();\r\n        }, 500);\r\n      }\r\n    );\r\n    this.domListeners.push(ref);\r\n\r\n    ref.internalHandler = this.util.listener(\r\n      this.$body,\r\n      ref.type,\r\n      ref.id,\r\n      ref.cb\r\n    );\r\n  }\r\n\r\n  setupListenersQuestionRadioImage(index: number, qId: string) {\r\n    var self: DomSurvey = this;\r\n    if (\r\n      this.util.checkIfListenerExists(\r\n        \"#\" + qId + \" .cc-checkbox input\",\r\n        this.domListeners\r\n      )\r\n    ) {\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"radio image question - previous listeners exists\")\r\n        : \"\";\r\n      this.removePrevListener(\"#\" + qId + \" .cc-checkbox input\");\r\n    }\r\n\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring(2, qId.length);\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\r\n        \"radio image question\",\r\n        this.ccsdk.survey.answers[questionId]\r\n      )\r\n      : \"\";\r\n    if (\r\n      typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n      this.ccsdk.survey.answers[questionId] !== \"\"\r\n    ) {\r\n      let previousValue = this.ccsdk.survey.answers[questionId].text;\r\n      let previousSelection = document.querySelectorAll(\r\n        \"#\" + qId + ' input[value=\"' + previousValue + '\"]'\r\n      )[0];\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"radio image previous selection\", previousSelection)\r\n        : \"\";\r\n      if (typeof previousSelection !== \"undefined\") {\r\n        this.util.addClass(previousSelection, \"selected\");\r\n        previousSelection.setAttribute(\"checked\", \"checked\");\r\n        self.qResponse.type = \"radioImage\";\r\n        self.qResponse.text = previousValue;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n\r\n    let ref = this.util.initListener(\r\n      \"click\",\r\n      \"#\" + qId + \" .cc-checkbox input\",\r\n      function () {\r\n        // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox');\r\n        let rating: string = this.value;\r\n        // self.util.removeClassAll(allOptions, \"selected\");\r\n        // self.util.addClass(this, \"selected\");\r\n        // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n        // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\r\n        self.qResponse.type = \"radioImage\";\r\n        self.qResponse.text = rating;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n        let onSurveyClickEvent = new CustomEvent(\r\n          Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken\r\n        );\r\n        document.dispatchEvent(onSurveyClickEvent);\r\n        //move to next question automagically\r\n        setTimeout(() => {\r\n          self.nextQuestion();\r\n        }, 500);\r\n      }\r\n    );\r\n    this.domListeners.push(ref);\r\n\r\n    ref.internalHandler = this.util.listener(\r\n      this.$body,\r\n      ref.type,\r\n      ref.id,\r\n      ref.cb\r\n    );\r\n  }\r\n\r\n  setupListenersQuestionStar(index: number, qId: string) {\r\n    var self: DomSurvey = this;\r\n    if (\r\n      this.util.checkIfListenerExists(\r\n        \"#\" + qId + \" .option-star-box\",\r\n        this.domListeners\r\n      )\r\n    ) {\r\n      //remove listeners\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"smile question - previous listeners exists\")\r\n        : \"\";\r\n      this.removePrevListener(\"#\" + qId + \" .option-star-box\");\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring(2, qId.length);\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"star question\", this.ccsdk.survey.answers[questionId])\r\n      : \"\";\r\n    if (\r\n      typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n      this.ccsdk.survey.answers[questionId] !== \"\"\r\n    ) {\r\n      let previousValue = this.ccsdk.survey.answers[questionId].number;\r\n      let previousSelection = document.querySelectorAll(\r\n        \"#\" + qId + ' .option-star-box[data-rating=\"' + previousValue + '\"]'\r\n      )[0];\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"star previous selection\", previousSelection)\r\n        : \"\";\r\n      if (\r\n        typeof previousSelection !== \"undefined\" &&\r\n        previousSelection != null\r\n      ) {\r\n        this.util.addClass(previousSelection, \"selected\");\r\n        self.qResponse.type = \"star\";\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n    let ref = this.util.initListener(\r\n      \"click\",\r\n      \"#\" + qId + \" .option-star-box\",\r\n      function () {\r\n        let allOptions: any = document.querySelectorAll(\r\n          \"#\" + qId + \" .option-star-box\"\r\n        );\r\n        let rating: number = this.getAttribute(\"data-rating\");\r\n        self.util.removeClassAll(allOptions, \"selected\");\r\n        self.util.addClass(this, \"selected\");\r\n\r\n        //select previous sibling\r\n        // let child : any = this.previousSibling;\r\n        // while( ( child = child.previousSibling) != null ){\r\n        //   self.util.addClass(child, \"selected\");\r\n        // }\r\n\r\n        // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n        // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\r\n        self.qResponse.type = \"star\";\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = rating;\r\n        self.qResponse.questionId = qId;\r\n\r\n        let onSurveyClickEvent = new CustomEvent(\r\n          Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken\r\n        );\r\n        document.dispatchEvent(onSurveyClickEvent);\r\n        //move to next question automagically\r\n        setTimeout(() => {\r\n          self.nextQuestion();\r\n        }, 500);\r\n      }\r\n    );\r\n    this.domListeners.push(ref);\r\n\r\n    ref.internalHandler = this.util.listener(\r\n      this.$body,\r\n      ref.type,\r\n      ref.id,\r\n      ref.cb\r\n    );\r\n  }\r\n\r\n  setupListenersQuestionSmile(index: number, qId: string) {\r\n    var self: DomSurvey = this;\r\n    if (\r\n      this.util.checkIfListenerExists(\r\n        \"#\" + qId + \" .option-smile-box\",\r\n        this.domListeners\r\n      )\r\n    ) {\r\n      //remove listeners\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"smile question - previous listeners exists\")\r\n        : \"\";\r\n      this.removePrevListener(\"#\" + qId + \" .option-smile-box\");\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring(2, qId.length);\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"smile question\", this.ccsdk.survey.answers[questionId])\r\n      : \"\";\r\n    if (\r\n      typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n      this.ccsdk.survey.answers[questionId] !== \"\"\r\n    ) {\r\n      let previousValue = this.ccsdk.survey.answers[questionId].number;\r\n      let previousSelection = document.querySelectorAll(\r\n        \"#\" + qId + ' .option-smile-box[data-rating=\"' + previousValue + '\"]'\r\n      )[0];\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"smile previous selection\", previousSelection)\r\n        : \"\";\r\n      if (\r\n        typeof previousSelection !== \"undefined\" &&\r\n        previousSelection != null\r\n      ) {\r\n        this.util.addClass(previousSelection, \"selected\");\r\n        self.qResponse.type = \"smile\";\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n\r\n    let ref = this.util.initListener(\r\n      \"click\",\r\n      \"#\" + qId + \" .option-smile-box\",\r\n      function () {\r\n        let allOptions: any = document.querySelectorAll(\r\n          \"#\" + qId + \" .option-smile-box\"\r\n        );\r\n        let rating: number = this.getAttribute(\"data-rating\");\r\n        self.util.removeClassAll(allOptions, \"selected\");\r\n        self.util.addClass(this, \"selected\");\r\n\r\n        //select previous siblings\r\n        // let child : any = this.previousSibling;\r\n        // while( ( child = child.previousSibling) != null ){\r\n        //   self.util.addClass(child, \"selected\");\r\n        // }\r\n        // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n        // (window as any).ccsdkDebug?console.log('Smile selected',rating):'';\r\n        self.qResponse.type = \"smile\";\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = rating;\r\n        self.qResponse.questionId = qId;\r\n\r\n        let onSurveyClickEvent = new CustomEvent(\r\n          Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken\r\n        );\r\n        document.dispatchEvent(onSurveyClickEvent);\r\n        //move to next question automagically\r\n        setTimeout(() => {\r\n          self.nextQuestion();\r\n        }, 500);\r\n      }\r\n    );\r\n    this.domListeners.push(ref);\r\n\r\n    ref.internalHandler = this.util.listener(\r\n      this.$body,\r\n      ref.type,\r\n      ref.id,\r\n      ref.cb\r\n    );\r\n  }\r\n\r\n  setupListenersQuestionCsat(index: number, qId: string) {\r\n    var self: DomSurvey = this;\r\n    if (\r\n      this.util.checkIfListenerExists(\r\n        \"#\" + qId + \" .option-smile-box\",\r\n        this.domListeners\r\n      )\r\n    ) {\r\n      //remove listeners\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"csat question - previous listeners exists\")\r\n        : \"\";\r\n      this.removePrevListener(\"#\" + qId + \" .option-smile-box\");\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring(2, qId.length);\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"csat question\", this.ccsdk.survey.answers[questionId])\r\n      : \"\";\r\n    if (\r\n      typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n      this.ccsdk.survey.answers[questionId] !== \"\"\r\n    ) {\r\n      let previousValue = this.ccsdk.survey.answers[questionId].number;\r\n      let previousSelection = document.querySelectorAll(\r\n        \"#\" + qId + ' .option-smile-box[data-rating=\"' + previousValue + '\"]'\r\n      )[0];\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"csat previous selection\", previousSelection)\r\n        : \"\";\r\n      if (\r\n        typeof previousSelection !== \"undefined\" &&\r\n        previousSelection != null\r\n      ) {\r\n        this.util.addClass(previousSelection, \"selected\");\r\n        previousSelection\r\n          .querySelectorAll(\"input\")[0]\r\n          .setAttribute(\"checked\", \"checked\");\r\n        self.qResponse.type = \"smile\";\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n\r\n    let ref = this.util.initListener(\r\n      \"click\",\r\n      \"#\" + qId + \" .option-smile-box\",\r\n      function () {\r\n        let allOptions: any = document.querySelectorAll(\r\n          \"#\" + qId + \" .option-smile-box\"\r\n        );\r\n        let rating: number = this.getAttribute(\"data-rating\");\r\n        self.util.removeClassAll(allOptions, \"selected\");\r\n        self.util.addClass(this, \"selected\");\r\n        this.querySelectorAll(\"input\")[0].setAttribute(\"checked\", \"checked\");\r\n        let child: any = this.previousSibling;\r\n        while ((child = child.previousSibling) != null) {\r\n          // (window as any).ccsdkDebug?console.log('questionscale', 'previousSiblings', child):'';\r\n          self.util.addClass(child, \"selected\");\r\n        }\r\n        // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n        // (window as any).ccsdkDebug?console.log('Smile selected',rating):'';\r\n        self.qResponse.type = \"smile\";\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = rating;\r\n        self.qResponse.questionId = qId;\r\n        console.log(\"dispatching event in csat\", this);\r\n        let onSurveyClickEvent = new CustomEvent(\r\n          Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken\r\n        );\r\n        document.dispatchEvent(onSurveyClickEvent);\r\n        //move to next question automagically\r\n        setTimeout(() => {\r\n          self.nextQuestion();\r\n        }, 500);\r\n      }\r\n    );\r\n    this.domListeners.push(ref);\r\n\r\n    ref.internalHandler = this.util.listener(\r\n      this.$body,\r\n      ref.type,\r\n      ref.id,\r\n      ref.cb\r\n    );\r\n  }\r\n\r\n  setupListenersQuestionMultiline(index: number, qId: string) {\r\n    let self: DomSurvey = this;\r\n    let multilineRes: string = \"\";\r\n    if (this.util.checkIfListenerExists(\"#\" + qId, this.domListeners)) {\r\n      //remove listeners\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"multiine question - previous listeners exists\")\r\n        : \"\";\r\n      this.removePrevListener(\"#\" + qId);\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring(2, qId.length);\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"multiine question\", this.ccsdk.survey.answers[questionId])\r\n      : \"\";\r\n    if (\r\n      typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n      this.ccsdk.survey.answers[questionId] !== \"\"\r\n    ) {\r\n      let previousValue = this.ccsdk.survey.answers[questionId].text;\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\r\n          \"multiine input box\",\r\n          document.querySelectorAll(\"#\" + qId)[0]\r\n        )\r\n        : \"\";\r\n      let previousSelection = <HTMLInputElement>(\r\n        document.querySelectorAll(\"#\" + qId)[0]\r\n      );\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"multiine previous selection\", previousSelection)\r\n        : \"\";\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"multiine previous value\", previousValue)\r\n        : \"\";\r\n      if (\r\n        typeof previousSelection !== \"undefined\" &&\r\n        previousSelection != null &&\r\n        typeof previousValue !== \"undefined\"\r\n      ) {\r\n        previousSelection.value = previousValue;\r\n        self.qResponse.type = \"multiline\";\r\n        self.qResponse.text = previousValue;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n    let ref = this.util.initListener(\"change\", \"#\" + qId, function () {\r\n      multilineRes = this.value;\r\n      self.qResponse.type = \"multiline\";\r\n      self.qResponse.text = multilineRes;\r\n      self.qResponse.number = null;\r\n      self.qResponse.questionId = qId;\r\n    });\r\n    this.domListeners.push(ref);\r\n\r\n    ref.internalHandler = this.util.listener(\r\n      this.$body,\r\n      ref.type,\r\n      ref.id,\r\n      ref.cb\r\n    );\r\n  }\r\n\r\n  setupListenersQuestionSingleline(index: number, qId: string) {\r\n    let self: DomSurvey = this;\r\n    let singlelineRes: string = \"\";\r\n    if (this.util.checkIfListenerExists(\"#\" + qId, this.domListeners)) {\r\n      //remove listeners\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"singleline question - previous listeners exists\")\r\n        : \"\";\r\n      this.removePrevListener(\"#\" + qId);\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring(2, qId.length);\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\r\n        \"singleline question\",\r\n        this.ccsdk.survey.answers[questionId]\r\n      )\r\n      : \"\";\r\n    if (\r\n      typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n      this.ccsdk.survey.answers[questionId] !== \"\"\r\n    ) {\r\n      let previousValue = this.ccsdk.survey.answers[questionId].text;\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\r\n          \"singleline input box\",\r\n          document.querySelectorAll(\"#\" + qId)[0]\r\n        )\r\n        : \"\";\r\n      let previousSelection = <HTMLInputElement>(\r\n        document.querySelectorAll(\"#\" + qId)[0]\r\n      );\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"singleline previous selection\", previousSelection)\r\n        : \"\";\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"singleline previous value\", previousValue)\r\n        : \"\";\r\n      if (\r\n        typeof previousSelection !== \"undefined\" &&\r\n        previousSelection != null &&\r\n        typeof previousValue !== \"undefined\"\r\n      ) {\r\n        previousSelection.value = previousValue;\r\n        self.qResponse.type = \"singleline\";\r\n        self.qResponse.text = previousValue;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n    let ref = this.util.initListener(\"change\", \"#\" + qId, function () {\r\n      singlelineRes = this.value;\r\n      self.qResponse.type = \"singleline\";\r\n      self.qResponse.text = singlelineRes;\r\n      self.qResponse.number = null;\r\n      self.qResponse.questionId = qId;\r\n    });\r\n    this.domListeners.push(ref);\r\n\r\n    ref.internalHandler = this.util.listener(\r\n      this.$body,\r\n      ref.type,\r\n      ref.id,\r\n      ref.cb\r\n    );\r\n\r\n    // console.log( 'singleline qResponse', self.qResponse );\r\n  }\r\n\r\n  setupListenersForDate(index: number, qId: string) {\r\n    if (this.util.checkIfListenerExists(\".date-container\", this.domListeners)) {\r\n      //remove listeners\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"date question - previous listeners exists\")\r\n        : \"\";\r\n      this.removePrevListener(\".date-container\");\r\n    }\r\n\r\n    let questionId: any;\r\n    let self = this;\r\n    questionId = qId.substring(2, qId.length);\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"date question\", this.ccsdk.survey.answers, questionId)\r\n      : \"\";\r\n    if (\r\n      this.ccsdk.survey.answers[questionId] &&\r\n      this.ccsdk.survey.answers[questionId].number\r\n    ) {\r\n      let model = this.ccsdk.survey.answers[questionId].number;\r\n      let dateQuestion = this.util.get(\".date-container\")[0];\r\n      let list = model.toString().match(/\\d\\d/g);\r\n\r\n      (<HTMLInputElement>dateQuestion.children[0]).value = list[3];\r\n      (<HTMLInputElement>dateQuestion.children[1]).value = list[2];\r\n      (<HTMLInputElement>dateQuestion.children[2]).value = list[0] + list[1];\r\n\r\n      this.qResponse.type = \"date\";\r\n      this.qResponse.text = null;\r\n      this.qResponse.number = model;\r\n      this.qResponse.questionId = qId;\r\n    }\r\n\r\n    let ref = this.util.initListener(\"change\", \".date-container\", function () {\r\n      let date = this.children[0].value;\r\n      let month = this.children[1].value;\r\n      let year = this.children[2].value;\r\n      if (!date && !month && !year) {\r\n        return;\r\n      }\r\n\r\n      if (!date.match(/^\\d\\d$/)) {\r\n        self.util.addClass(this.children[3], \"show-error\");\r\n        return;\r\n      } else if (!month.match(/^\\d\\d$/)) {\r\n        self.util.addClass(this.children[3], \"show-error\");\r\n        return;\r\n      } else if (!year.match(/^\\d\\d\\d\\d$/)) {\r\n        self.util.addClass(this.children[3], \"show-error\");\r\n        return;\r\n      } else {\r\n        self.util.removeClass(this.children[3], \"show-error\");\r\n        let numberRes = parseInt(year + month + date, 10);\r\n        self.qResponse.type = \"number\";\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = numberRes;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    });\r\n\r\n    this.domListeners.push(ref);\r\n\r\n    ref.internalHandler = this.util.listener(\r\n      this.$body,\r\n      ref.type,\r\n      ref.id,\r\n      ref.cb\r\n    );\r\n  }\r\n\r\n  setupListenersQuestionNumber(index: number, qId: string) {\r\n    let self: DomSurvey = this;\r\n    let numberRes: string = \"\";\r\n    if (this.util.checkIfListenerExists(\"#\" + qId, this.domListeners)) {\r\n      //remove listeners\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"number question - previous listeners exists\")\r\n        : \"\";\r\n      this.removePrevListener(\"#\" + qId);\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring(2, qId.length);\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"number question\", this.ccsdk.survey.answers[questionId])\r\n      : \"\";\r\n    if (\r\n      typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n      this.ccsdk.survey.answers[questionId] !== \"\"\r\n    ) {\r\n      let previousValue = this.ccsdk.survey.answers[questionId].number;\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\r\n          \"number input box\",\r\n          document.querySelectorAll(\"#\" + qId)[0]\r\n        )\r\n        : \"\";\r\n      let previousSelection = <HTMLInputElement>(\r\n        document.querySelectorAll(\"#\" + qId)[0]\r\n      );\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"number previous selection\", previousSelection)\r\n        : \"\";\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"number previous value\", previousValue)\r\n        : \"\";\r\n      if (\r\n        typeof previousSelection !== \"undefined\" &&\r\n        previousSelection != null &&\r\n        typeof previousValue !== \"undefined\"\r\n      ) {\r\n        previousSelection.value = previousValue;\r\n        self.qResponse.type = \"number\";\r\n        self.qResponse.text = null;\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n    let ref = this.util.initListener(\"change\", \"#\" + qId, function () {\r\n      numberRes = this.value;\r\n      self.qResponse.type = \"number\";\r\n      self.qResponse.text = null;\r\n      self.qResponse.number = numberRes;\r\n      self.qResponse.questionId = qId;\r\n    });\r\n    this.domListeners.push(ref);\r\n\r\n    ref.internalHandler = this.util.listener(\r\n      this.$body,\r\n      ref.type,\r\n      ref.id,\r\n      ref.cb\r\n    );\r\n  }\r\n\r\n  setupListenersQuestionSlider(index: number, qId: string) {\r\n    let self: DomSurvey = this;\r\n    let sliderRes: string = \"\";\r\n    let slider = new Slider();\r\n    let sliderInput = <HTMLInputElement>(\r\n      document.querySelectorAll(\"#\" + qId + \" input\")[0]\r\n    );\r\n\r\n    if (\r\n      this.util.checkIfListenerExists(\"#\" + qId + \" input\", this.domListeners)\r\n    ) {\r\n      // return;\r\n    }\r\n    //set previous value\r\n    let questionId: any;\r\n    questionId = qId.substring(2, qId.length);\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"slider question\", this.ccsdk.survey.answers[questionId])\r\n      : \"\";\r\n    if (\r\n      typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n      this.ccsdk.survey.answers[questionId] !== \"\"\r\n    ) {\r\n      let previousValue = this.ccsdk.survey.answers[questionId].number;\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\r\n          \"slider input box\",\r\n          document.querySelectorAll(\"#\" + qId)[0]\r\n        )\r\n        : \"\";\r\n      let previousSelection = <HTMLInputElement>(\r\n        document.querySelectorAll(\"#\" + qId + \" .act-slider-tip\")[0]\r\n      );\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"slider previous selection\", previousSelection)\r\n        : \"\";\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"slider previous value\", previousValue)\r\n        : \"\";\r\n      if (\r\n        typeof previousSelection !== \"undefined\" &&\r\n        previousSelection != null &&\r\n        typeof previousValue !== \"undefined\"\r\n      ) {\r\n        previousSelection.innerHTML = previousValue;\r\n        sliderInput.value = previousValue;\r\n        self.qResponse.type = \"slider\";\r\n        self.qResponse.number = previousValue;\r\n        self.qResponse.text = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n    let ref = this.util.initListener(\r\n      \"change\",\r\n      \"#\" + qId + \" input\",\r\n      function () {\r\n        sliderRes = this.value;\r\n        self.qResponse.type = \"slider\";\r\n        self.qResponse.number = sliderRes;\r\n        self.qResponse.text = null;\r\n        self.qResponse.questionId = qId;\r\n        //move to next question automagically\r\n        // self.nextQuestion();\r\n      }\r\n    );\r\n    this.domListeners.push(ref);\r\n\r\n    ref.internalHandler = this.util.listener(\r\n      this.$body,\r\n      ref.type,\r\n      ref.id,\r\n      ref.cb\r\n    );\r\n  }\r\n\r\n  setupListenersQuestionSelect(index: number, qId: string) {\r\n    let self: DomSurvey = this;\r\n    let questionId: any;\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"select que\", this.domListeners)\r\n      : \"\";\r\n    questionId = qId.substring(2, qId.length);\r\n    // (window as any).ccsdkDebug?console.log(this.ccsdk.survey.answers[questionId]):'';\r\n    // (window as any).ccsdkDebug?console.log(this.ccsdk.survey.surveyAnswers[questionId]):'';\r\n    if (\r\n      this.util.checkIfListenerExists(\r\n        \"#\" + qId + \" .cc-select-options .cc-select-option\",\r\n        this.domListeners\r\n      )\r\n    ) {\r\n      (window as any).ccsdkDebug\r\n        ? console.log(\"select que listner exists\")\r\n        : \"\";\r\n      this.removePrevListener(\r\n        \"#\" + qId + \" .cc-select-options .cc-select-option\"\r\n      );\r\n\r\n      // return;\r\n    }\r\n    (window as any).ccsdkDebug ? console.log(\"select que\") : \"\";\r\n\r\n    // if(!self.util.arrayContains.call(self.trackSelects, qId)){\r\n    (window as any).ccsdkDebug\r\n      ? console.log(\"select que initialize select\")\r\n      : \"\";\r\n\r\n    self.select = new Select(qId);\r\n    self.select.destroyListeners();\r\n    self.select.init(qId);\r\n\r\n    if (\r\n      typeof this.ccsdk.survey.answers[questionId] !== \"undefined\" &&\r\n      this.ccsdk.survey.answers[questionId] !== \"\"\r\n    ) {\r\n      if (this.ccsdk.survey.answers[questionId].text) {\r\n        let question = this.ccsdk.survey.getQuestionById(questionId);\r\n        self.select.setValue(\r\n          this.ccsdk.survey.answers[questionId].text,\r\n          question,\r\n          this.ccsdk.survey\r\n        );\r\n        self.select.selectOptions(this.ccsdk.survey.answers[questionId].text);\r\n        self.qResponse.type = \"select\";\r\n        self.qResponse.text = this.ccsdk.survey.answers[questionId].text;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n      }\r\n    }\r\n    self.trackSelects.push(qId);\r\n    // }\r\n    let selectRes: string = \"\";\r\n    let ref = this.util.initListener(\r\n      \"click\",\r\n      \"#\" + qId + \" .cc-select-options .cc-select-option\",\r\n      function () {\r\n        // selectRes = this.getAttribute('data-value');\r\n        selectRes = document\r\n          .querySelectorAll(\"#\" + qId + \" .cc-select-trigger\")[0]\r\n          .getAttribute(\"data-selection-value\");\r\n        // (window as any).ccsdkDebug?console.log(selectRes):'';\r\n        self.qResponse.type = \"select\";\r\n        self.qResponse.text = selectRes;\r\n        self.qResponse.number = null;\r\n        self.qResponse.questionId = qId;\r\n        //move to next question automagically\r\n\r\n        let onSurveyClickEvent = new CustomEvent(\r\n          Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken\r\n        );\r\n        document.dispatchEvent(onSurveyClickEvent);\r\n\r\n        // self.nextQuestion();\r\n      }\r\n    );\r\n\r\n    // this.util.removeListener(this.$body, ref.type, listener.internalHandler);\r\n    this.domListeners.push(ref);\r\n\r\n    ref.internalHandler = this.util.listener(\r\n      this.$body,\r\n      ref.type,\r\n      ref.id,\r\n      ref.cb\r\n    );\r\n  }\r\n\r\n  // addListenersNextButtonSubmit(index : number, data : any, type : string){\r\n  //   let self : DomSurvey = this;\r\n  //   let btnNext = self.util.get('.act-cc-button-next')[0];\r\n  //   self.util.on('click', btnNext, this.submitQuestion(\r\n  //     index, data, type\r\n  //   ));\r\n  //\r\n  // }\r\n\r\n  // removeListenersNextButtonSubmit(index : number, data : any, type : string){\r\n  //   let self : DomSurvey = this;\r\n  //   let btnNext = self.util.get('.act-cc-button-next');\r\n  //   self.util.on('click', btnNext, this.submitQuestion(\r\n  //     index, data, type\r\n  //   ));\r\n  //   self.util.off('click', btnNext, this.submitQuestion(\r\n  //     index, data, type\r\n  //   ));\r\n  // }\r\n\r\n  submitQuestion(index: number, data: any, type: string, qId: string) {\r\n    (window as any).ccsdkDebug ? console.log(\"type\", type, \"res\", data) : \"\";\r\n    this.util.trigger(document, \"q-answered\", {\r\n      index: index,\r\n      data: data,\r\n      type: type,\r\n      questionId: qId.match(/^id/) ? qId.substring(2, qId.length) : qId\r\n    });\r\n  }\r\n}\r\n\r\nexport { DomSurvey };\r\n","import { DomUtilities } from './DomUtilities';\r\n\r\nclass Theme {\r\n\tutil: DomUtilities;\r\n\tbrandColorDark: string;\r\n\tbrandColorWhite: string;\r\n\tconstructor( brandColor, time ) {\r\n\t\tthis.util = new DomUtilities();\r\n\t\tthis.brandColorDark = this.util.shadeBlendConvert( -0.3, brandColor, undefined );\r\n\t\tthis.brandColorWhite = this.util.shadeBlendConvert( 0.1, brandColor, undefined );\r\n\t\tlet css: string = `\r\n\t\t.cc-sdk #progressBar{\r\n\t\t\tbackground : ${this.brandColorDark };\r\n\t\t}\r\n\t\t.cc-sdk #progress-line{ \r\n\t\t\tbackground: ${brandColor };\r\n\t\t}\r\n\t\t.cc-sdk .cc-checkbox input[type=\"checkbox\"]:checked + label:before {\r\n\t\t\tbackground:${brandColor };\r\n\t\t}\r\n\t\t.ccsdk-overlay.glass{\r\n\t\t\tbackground-color:${this.util.hexToRGB( brandColor, .5 ) };\r\n\t\t}\r\n\t\t.cc-sdk .cc-checkbox input[type=\"checkbox\"]:checked + label:after {\r\n\t\t\tborder-color: #fff;\r\n\t\t}\r\n\t\t.cc-sdk .cc-checkbox input[type=\"radio\"]:checked + label:before {\r\n\t\t\tborder-color: ${brandColor };\r\n\t\t}\r\n\t\t.cc-sdk .cc-checkbox input[type=\"radio\"]:checked + label:before {\r\n\t\t\tborder-color: ${brandColor };\r\n\t\t}\r\n\t\t.cc-sdk .cc-checkbox input[type=\"radio\"]:checked + label:after {\r\n\t\t\tbackground: ${brandColor };\r\n\t\t}\r\n\t\t.cc-sdk .cc-sdk-form-control:focus {\r\n\t\t\tborder-color: ${brandColor };\r\n\t\t}\r\n\t\t.cc-sdk .cc-message-box__btn{\r\n\t\t\tbackground: ${brandColor };\r\n\t\t\tcolor:#fff;\r\n\t\t}\r\n\t\t\t.cc-sdk .submit-icon{\r\n\t\t\t\tbackground-image: url(\"data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%2747px%27%20height%3D%2747px%27%20viewBox%3D%270%200%2047%2047%27%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%3E%3Ctitle%3EGroup%2016%3C%2Ftitle%3E%3Cdesc%3ECreated%20with%20Sketch.%3C%2Fdesc%3E%3Cdefs%3E%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%3Cfilter%20x%3D%27-18.1%25%27%20y%3D%27-12.9%25%27%20width%3D%27136.2%25%27%20height%3D%27136.2%25%27%20filterUnits%3D%27objectBoundingBox%27%20id%3D%27filter-2%27%3E%3CfeOffset%20dx%3D%270%27%20dy%3D%272%27%20in%3D%27SourceAlpha%27%20result%3D%27shadowOffsetOuter1%27%3E%3C%2FfeOffset%3E%3CfeGaussianBlur%20stdDeviation%3D%272%27%20in%3D%27shadowOffsetOuter1%27%20result%3D%27shadowBlurOuter1%27%3E%3C%2FfeGaussianBlur%3E%3CfeColorMatrix%20values%3D%270%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200.116423234%200%27%20type%3D%27matrix%27%20in%3D%27shadowBlurOuter1%27%3E%3C%2FfeColorMatrix%3E%3C%2Ffilter%3E%3C%2Fdefs%3E%3Cg%20id%3D%27Page-1%27%20stroke%3D%27none%27%20stroke-width%3D%271%27%20fill%3D%27none%27%20fill-rule%3D%27evenodd%27%3E%3Cg%20id%3D%271-copy-20%27%20transform%3D%27translate(-1246.000000%2C%20-664.000000)%27%3E%3Cg%20id%3D%27Group-16%27%20transform%3D%27translate(1250.000000%2C%20666.000000)%27%3E%3Cg%20id%3D%27Oval-4%27%3E%3Cuse%20fill%3D%27white%27%20fill-opacity%3D%271%27%20filter%3D%27url(%23filter-2)%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3Cuse%20fill%3D%27${encodeURIComponent( brandColor ) }%27%20fill-rule%3D%27evenodd%27%20xlink%3Ahref%3D%27%23path-1%27%3E%3C%2Fuse%3E%3C%2Fg%3E%3Cg%20id%3D%27Group-5%27%20transform%3D%27translate(12.000000%2C%2011.000000)%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23FFFFFF%27%3E%3Cg%20id%3D%27fast-forward-arrows%27%20transform%3D%27translate(6.173934%2C%200.000000)%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3Cg%20id%3D%27fast-forward-arrows-copy%27%3E%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\");\r\n\t\t\t}\r\n\t\t\t[dir=\"rtl\"].cc-sdk .submit-icon{\r\n\t\t\t\tbackground-image: url(\"data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%2747px%27%20height%3D%2747px%27%20viewBox%3D%270%200%2047%2047%27%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%3E%0A%20%20%20%20%3Cdesc%3ECreated%20with%20Sketch.%3C%2Fdesc%3E%0A%20%20%20%20%3Cdefs%3E%3C%2Fdefs%3E%0A%20%20%20%20%3Cg%20id%3D%27Page-1%27%20stroke%3D%27none%27%20stroke-width%3D%271%27%20fill%3D%27none%27%20fill-rule%3D%27evenodd%27%3E%0A%20%20%20%20%20%20%20%20%3Cg%20id%3D%27Submit_Icon%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27Oval-4%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27path-1-link%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23white%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27path-1-link%27%20fill%3D%27${encodeURIComponent( brandColor ) }%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Ccircle%20id%3D%27path-1%27%20cx%3D%2719.3130459%27%20cy%3D%2719.3130459%27%20r%3D%2719.3130459%27%3E%3C%2Fcircle%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27Group-5%27%20transform%3D%27translate(12.000000%2C%2011.000000)%27%20fill-rule%3D%27nonzero%27%20fill%3D%27%23ffffff%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27fast-forward-arrows%27%20transform%3D%27translate(11.173934%2C%208.500000)%20scale(-1%2C%201)%20translate(-11.173934%2C%20-8.500000)%20translate(6.173934%2C%200.000000)%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cg%20id%3D%27fast-forward-arrows-copy%27%20transform%3D%27translate(5.000000%2C%208.500000)%20scale(-1%2C%201)%20translate(-5.000000%2C%20-8.500000)%20%27%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cpolygon%20id%3D%27Shape%27%20points%3D%270.993357559%200%200%200.993357559%207.30823082%208.3015552%200%2015.6097197%200.993357559%2016.6030772%209.29491276%208.3015552%27%3E%3C%2Fpolygon%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%20%20%20%20%3C%2Fg%3E%0A%20%20%20%20%3C%2Fg%3E%0A%3C%2Fsvg%3E\");\r\n\t\t\t}\r\n\t\t\t.cc-sdk .cc-question-container__required-label{\r\n\t\t\tcolor: ${brandColor };\r\n\t\t}\r\n\t\t.cc-sdk input[type=\"range\"]::-webkit-slider-runnable-track{\r\n\t\t\tbackground: ${brandColor } !important;\r\n\t\t\t   background: -moz-linear-gradient(-45deg, ${brandColor } 0%, ${ this.brandColorDark } 100%)!important;\r\n\t\t\t   background: -webkit-linear-gradient(-45deg, ${brandColor }' 0%,${ this.brandColorDark } 100%)!important;\r\n\t\t\t   background: linear-gradient(135deg, ${brandColor } 0%,${ this.brandColorDark } 100%)!important;\r\n\t\t\t   filter: progid:DXImageTransform.Microsoft.gradient( startColorstr=${brandColor }, endColorstr=${ this.brandColorDark },GradientType=1 );\r\n\t\t   }\r\n\t\t.cc-sdk input[type=\"range\"]::-moz-range-track {\r\n\t\t\tbackground: ${brandColor } !important;\r\n\t\t\tbackground: -moz-linear-gradient(-45deg, ${brandColor } 0%, ${ this.brandColorDark } 100%)!important;\r\n\t\t\tbackground: -webkit-linear-gradient(-45deg, ${brandColor } 0%, ${ this.brandColorDark } 100%)!important;\r\n\t\t\tbackground: linear-gradient(135deg, ${brandColor } 0%,${ this.brandColorDark } 100%)!important;\r\n\t\t\tfilter: progid:DXImageTransform.Microsoft.gradient( startColorstr=${brandColor }, endColorstr=${ this.brandColorDark },GradientType=1 );\r\n\t\t}\r\n\t\t   .cc-sdk input[type=\"range\"]::-webkit-slider-thumb{\r\n\t\t\tborder: 1px solid ${brandColor } ;\r\n\t\t\tbackground-color: #fff;\r\n\t\t   }\r\n\t\t   .cc-sdk input[type=\"range\"]::-moz-range-thumb {\r\n\t\t\tborder: 1px solid ${brandColor } ;\r\n\t\t\tbackground-color: #fff;\r\n\t\t   }\r\n\t\t   .cc-sdk svg.timer circle {\r\n\t\t\tanimation: countdown ${time }s linear 1 forwards;\r\n\t\t\tstroke: ${brandColor };\r\n\t\t   }\r\n\t\t   .cc-sdk input[type=range].selected::-webkit-slider-thumb {\r\n\t\t\t\tbackground-color: ${brandColor };\r\n\t\t\t}\r\n\t\t\t.cc-sdk input[type = range].selected::-moz - range - thumb {\r\n\t\t\t\tbackground-color: ${brandColor };\r\n\t\t\t}\r\n\t\t\t.cc-sdk .cc-checkbox label:hover:before{\r\n\t\t\t\tborder: solid 1px ${brandColor };\r\n\t\t\t}\r\n\t\t @media (max-width: 768px){\r\n\t \t\t\t.ccsdk-overlay.glass{\r\n\t \t\t\tbackground-color:rgba(255,255,255,.85);\r\n\t \t\t\tbackground-image:none;\r\n\t\t\t\t}\r\n\t\t\t\t.cc-sdk.cc-popup-container{\r\n\t\t\t\t\tbackground-color : transparent;\r\n\t\t\t\t}\r\n\t\t\t\t.cc-sdk.cc-popup-container .ccsdk-overlay.glass{\r\n\t\t\t\t\tbackground-color : ${this.util.hexToRGB( brandColor, .9 ) };\r\n\t\t\t\t}\r\n\t\t\t\t.cc-sdk.cc-popup-container .cc-message-box .cc-message-box__text{\r\n\t\t\t\t\tcolor:#fff;\r\n\t\t\t\t}\r\n\t\t`;\r\n\t\tthis.util.appendStyle( css );\r\n\r\n\t}\r\n}\r\nexport { Theme }\r\n","import { DomUtilities } from './DomUtilities';\r\nclass Slider {\r\n  inputRange: any;\r\n  rangeTip: any;\r\n  maxValue: number;\r\n  speed: number;\r\n  currValue: number;\r\n  rafID: any;\r\n  timeout: any;\r\n  util: any\r\n\r\n  constructor() {\r\n    this.inputRange = document.getElementsByClassName( 'cc-sdk-range' )[ 0 ];\r\n    this.rangeTip = this.inputRange.parentNode.querySelectorAll( \".act-slider-tip\" )[ 0 ];\r\n    this.util = new DomUtilities();\r\n    //  this.maxValue = 100; // the higher the smoother when dragging\r\n    this.speed = 5;\r\n\r\n\r\n    // set min/max value\r\n    // this.inputRange.min = 0;\r\n    this.inputRange.min = this.inputRange.getAttribute( 'min' );\r\n    // this.inputRange.max = this.maxValue;\r\n    this.inputRange.max = this.inputRange.getAttribute( 'max' );\r\n    this.setupListeners();\r\n  }\r\n\r\n  setupListeners() {\r\n    let self: Slider = this;\r\n\r\n    // bind events\r\n    this.inputRange.addEventListener( 'mouseup', this.clearTo, false );\r\n\r\n    // move gradient\r\n    this.inputRange.addEventListener( 'input', function () {\r\n      self.updateRangeTip();\r\n      self.util.addClass( this, 'selected' );\r\n\r\n      //Change slide thumb color on way up\r\n      if ( this.value > 20 ) {\r\n        self.inputRange.classList.add( 'ltpurple' );\r\n      }\r\n      if ( this.value > 40 ) {\r\n        self.inputRange.classList.add( 'purple' );\r\n      }\r\n      if ( this.value > 60 ) {\r\n        self.inputRange.classList.add( 'pink' );\r\n      }\r\n\r\n      //Change slide thumb color on way down\r\n      if ( this.value < 20 ) {\r\n        self.inputRange.classList.remove( 'ltpurple' );\r\n      }\r\n      if ( this.value < 40 ) {\r\n        self.inputRange.classList.remove( 'purple' );\r\n      }\r\n      if ( this.value < 60 ) {\r\n        self.inputRange.classList.remove( 'pink' );\r\n      }\r\n    } );\r\n  }\r\n\r\n\r\n\r\n  updateRangeTip() {\r\n    let self: Slider = this;\r\n    this.rangeTip.style.display = 'block';\r\n    this.rangeTip.innerHTML = this.inputRange.value;\r\n  }\r\n\r\n  clearTo() {\r\n    clearTimeout( this.timeout );\r\n  }\r\n\r\n  // listen for unlock\r\n  // unlockStartHandler() {\r\n  //   let self : any = this;\r\n  //   // clear raf if trying again\r\n  //   window.cancelAnimationFrame(this.rafID);\r\n  //   // set to desired value\r\n  //   this.currValue = +self.value;\r\n  // }\r\n\r\n  // unlockEndHandler() {\r\n  //   // store current value\r\n  //   this.currValue = + this.value;\r\n  //   // determine if we have reached success or not\r\n  //   if(this.currValue >= this.maxValue) {\r\n  //      this.successHandler();\r\n  //   }\r\n  //   else {\r\n  //      this.rafID = window.requestAnimationFrame(this.animateHandler);\r\n  //   }\r\n  // }\r\n\r\n  // handle range animation\r\n  animateHandler() {\r\n    // calculate gradient transition\r\n    var transX = this.currValue - this.maxValue;\r\n\r\n    // update input range\r\n    this.inputRange.value = this.currValue;\r\n\r\n    //Change slide thumb color on mouse up\r\n    if ( this.currValue < 20 ) {\r\n      this.inputRange.classList.remove( 'ltpurple' );\r\n    }\r\n    if ( this.currValue < 40 ) {\r\n      this.inputRange.classList.remove( 'purple' );\r\n    }\r\n    if ( this.currValue < 60 ) {\r\n      this.inputRange.classList.remove( 'pink' );\r\n    }\r\n\r\n    // determine if we need to continue\r\n    if ( this.currValue > -1 ) {\r\n      window.requestAnimationFrame( this.animateHandler );\r\n    }\r\n\r\n    // decrement value\r\n    this.currValue = this.currValue - this.speed;\r\n  }\r\n\r\n  // handle successful unlock\r\n  successHandler() {\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\nexport { Slider };\r\n","//Manages trigger.\r\nimport { Cookie } from \"./helpers/Cookie\";\r\nimport { Constants } from \"./Constants\";\r\nimport { Triggers } from \"./Triggers\";\r\n//collect initial data\r\n//if on site time is null, add on site time\r\nif (Cookie.get(Constants.CCTriggerSiteStartTime) == null) {\r\n  Cookie.set(Constants.CCTriggerSiteStartTime, new Date(), undefined, undefined);\r\n}\r\n//always add on page Time\r\nCookie.set(Constants.CCTriggerPageStartTime, new Date(), undefined, undefined);\r\n\r\nlet sitePageViewCount = Cookie.get(Constants.CCTriggerSitePageViewCount);\r\nif (sitePageViewCount == null) {\r\n  Cookie.set(Constants.CCTriggerSitePageViewCount, 1, undefined, undefined);\r\n} else {\r\n  sitePageViewCount = (parseInt(sitePageViewCount) + 1).toString();\r\n  Cookie.set(Constants.CCTriggerSitePageViewCount, sitePageViewCount, undefined, undefined);\r\n}\r\n\r\nlet pathname = window.location.pathname;\r\nif (pathname.match(/\\./)) {\r\n  pathname = pathname.substring(0, pathname.lastIndexOf('/'));\r\n}\r\nlet individualPageViewCount = Cookie.get(Constants.CCTriggerIndividualPageViewCount);\r\nif (individualPageViewCount == null) {\r\n  Cookie.set(Constants.CCTriggerIndividualPageViewCount + pathname, 1, undefined, undefined);\r\n} else {\r\n  individualPageViewCount = (parseInt(individualPageViewCount) + 1).toString();\r\n  Cookie.set(Constants.CCTriggerIndividualPageViewCount + pathname, individualPageViewCount, undefined, undefined);\r\n}\r\n\r\n(window as any).click = 0;\r\n\r\nwindow.onscroll = function (e) {\r\n  // called when the window is scrolled.  \r\n  let doc = document.documentElement;\r\n  let left = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);\r\n  let top = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\r\n  (window as any).ccsdkTopOffset = top;\r\n  TriggerManager.processScrollTriggers(top);\r\n}\r\n\r\ndocument.onclick = function (e) {\r\n  (window as any).click++;\r\n}\r\n\r\n//TriggerManager adds to survey Queue\r\nclass TriggerManager {\r\n\r\n  static triggerInterval: any = null;\r\n  static triggerInstances: any = {};\r\n\r\n  constructor() {\r\n    //initialize triggers\r\n    //add those triggers which aren't completed yet.\r\n  }\r\n\r\n  static addSurvey(surveyId: any, trigger: Triggers) {\r\n    TriggerManager.triggerInstances[surveyId] = trigger;\r\n    if (Object.keys(TriggerManager.triggerInstances).length >= 1) {\r\n      (window as any).ccsdkDebug ? console.log(TriggerManager.triggerInterval) : '';\r\n      if (TriggerManager.triggerInterval == null) {\r\n        (window as any).ccsdkDebug ? console.log(\"TriggerHandler : Setting up Interval Trigger Handlers.\") : '';\r\n        TriggerManager.triggerInterval = setInterval(TriggerManager.processIntervalTriggers, 1000);\r\n      }\r\n      //processing sequential triggers if any.\r\n      // console.log(\"TriggerHandler : Processing sequential triggers for  \" + surveyId);\r\n      // TriggerManager.processTriggersBySurveyId(surveyId);\r\n    }\r\n  }\r\n\r\n  static removeSurvey(surveyId: string) {\r\n    delete TriggerManager.triggerInstances[surveyId];\r\n    if (Object.keys(TriggerManager.triggerInstances).length == 0) {\r\n      clearInterval(TriggerManager.triggerInterval);\r\n    }\r\n  }\r\n\r\n  static processIntervalTriggers() {\r\n    //if some survey is already running skip processing surveys for now?or queue it?.\r\n    let pathname = window.location.pathname;\r\n    if (pathname.match(/\\./)) {\r\n      pathname = pathname.substring(0, pathname.lastIndexOf('/'));\r\n    }\r\n    Cookie.set(Constants.CCTriggerPageElapsedTime + pathname, new Date(), undefined, undefined);\r\n    Cookie.set(Constants.CCTriggerSiteElapsedTime, new Date(), undefined, undefined);\r\n\r\n    for (let trigger in TriggerManager.triggerInstances) {\r\n      TriggerManager.triggerInstances[trigger].processIntervalTriggers();\r\n      TriggerManager.triggerInstances[trigger].processConditionalTriggers();\r\n    }\r\n  }\r\n\r\n  static processScrollTriggers(scrollNow) {\r\n    for (let trigger in TriggerManager.triggerInstances) {\r\n      //process all scroll triggers.\r\n      TriggerManager.triggerInstances[trigger].processScrollTriggers(scrollNow);\r\n    }\r\n  }\r\n\r\n  static disableTriggers(surveyId: string) {\r\n    TriggerManager.triggerInstances[surveyId].disableTriggers();\r\n  }\r\n\r\n};\r\n\r\n\r\n\r\nexport { TriggerManager };","import { Cookie } from \"./helpers/Cookie\";\r\nimport { Constants } from \"./Constants\";\r\nimport { SurveyManager } from \"./SurveyManager\";\r\nimport { TriggerUtils } from \"./helpers/TriggerUtils\";\r\nimport { CCSDKConfig } from \"./interfaces/CCSDKConfig\";\r\n\r\nclass Triggers {\r\n\r\n  ccsdk: any;\r\n  pageCountTrigger: boolean;\r\n  pageTimeTrigger: boolean;\r\n  siteCountTrigger: boolean;\r\n  siteTimeTrigger: boolean;\r\n  urlParamTrigger: boolean;\r\n  notUrlParamTrigger: boolean;\r\n  utmParamTrigger: boolean;\r\n  scrollPixelsTrigger: boolean;\r\n  minPageCount: number;\r\n  minSiteCount: number;\r\n  minPageTime: number;\r\n  minSiteTime: number;\r\n  minScrollPixels: number;\r\n  utm: string;\r\n  inUrl: RegExp;\r\n  notinUrl: RegExp;\r\n  pageCountTriggerEnabled: boolean;\r\n  siteCountTriggerEnabled: boolean;\r\n  pageTimeTriggerEnabled: boolean;\r\n  siteTimeTriggerEnabled: boolean;\r\n  urlParamTriggerEnabled: boolean;\r\n  notUrlParamTriggerEnabled: boolean;\r\n  utmParamTriggerEnabled: boolean;\r\n  scrollPixelsTriggerEnabled: boolean;\r\n\r\n  conditionalTriggers: any;\r\n\r\n  constructor(ccsdk) {\r\n    this.ccsdk = ccsdk;\r\n    this.pageCountTrigger = false;\r\n    this.siteCountTrigger = false;\r\n    this.pageTimeTrigger = false;\r\n    this.siteTimeTrigger = false;\r\n    this.urlParamTrigger = false;\r\n    this.notUrlParamTrigger = false;\r\n    this.utmParamTrigger = false;\r\n    this.scrollPixelsTrigger = false;\r\n\r\n    //disable all triggers.\r\n    this.pageCountTriggerEnabled = false;\r\n    this.siteCountTriggerEnabled = false;\r\n    this.pageTimeTriggerEnabled = false;\r\n    this.siteTimeTriggerEnabled = false;\r\n    this.urlParamTriggerEnabled = false;\r\n    this.notUrlParamTriggerEnabled = false;\r\n    this.utmParamTriggerEnabled = false;\r\n    this.scrollPixelsTriggerEnabled = false;\r\n    this.conditionalTriggers = {};\r\n  }\r\n\r\n\r\n  enableClickTrigger(target: string, cb: any) {\r\n    let item = document.querySelectorAll(target)[0];\r\n    if (typeof item !== 'undefined') {\r\n      item.addEventListener('click', cb);\r\n    } else {\r\n      console.log('selector does not match')\r\n    }\r\n  }\r\n\r\n  enablePageCountTrigger(minPageCount: number) {\r\n    this.minPageCount = minPageCount;\r\n    this.pageCountTriggerEnabled = true;\r\n    this.TriggerPopUpByPageCount();\r\n  }\r\n\r\n  enableSiteCountTrigger(minSiteCount: number) {\r\n    this.minSiteCount = minSiteCount;\r\n    this.pageCountTriggerEnabled = true;\r\n    this.TriggerPopUpByPageCount();\r\n  }\r\n\r\n  enablePageTimeTrigger(minPageTime: number) {\r\n    this.minPageTime = minPageTime;\r\n    this.pageTimeTriggerEnabled = true;\r\n    this.TriggerPopUpByTimeSpentOnPage();\r\n  }\r\n\r\n  enableSiteTimeTrigger(minSiteTime: number) {\r\n    this.minSiteTime = minSiteTime;\r\n    this.siteTimeTriggerEnabled = true;\r\n    this.TriggerPopUpByTimeSpentOnSite();\r\n  }\r\n\r\n  enablePopUpByURLPatternTrigger(urlPattern: RegExp) {\r\n    this.inUrl = urlPattern;\r\n    this.urlParamTriggerEnabled = true;\r\n    this.TriggerPopUpByURLPattern();\r\n  }\r\n\r\n  enablePopUpByNotURLPatternTrigger(urlPattern: RegExp) {\r\n    this.notinUrl = urlPattern;\r\n    this.notUrlParamTriggerEnabled = true;\r\n    this.TriggerPopUpByNotURLPattern();\r\n  }\r\n\r\n  enablePopUpByUTMPatternTrigger(urlPattern: string) {\r\n    this.utm = urlPattern;\r\n    this.utmParamTriggerEnabled = true;\r\n    this.TriggerPopUpByUTMParameter();\r\n  }\r\n\r\n  enableScrollPixelsTrigger(minScrollPixels: number) {\r\n    this.minScrollPixels = minScrollPixels;\r\n    this.scrollPixelsTriggerEnabled = true;\r\n\r\n  }\r\n\r\n  processIntervalTriggers() {\r\n    //if survey already launched\r\n    //skip processing.\r\n    if (this.ccsdk.surveyRunning || this.ccsdk.surveyDone) {\r\n      return;\r\n    }\r\n    this.TriggerPopUpByTimeSpentOnPage();\r\n    this.TriggerPopUpByTimeSpentOnSite();\r\n  }\r\n\r\n  setConditionalTriggers(config: CCSDKConfig) {\r\n    (window as any).ccsdkDebug ? console.log(config.grepURL) : '';\r\n    //\r\n    if ((typeof config.click !== 'undefined') && (config.click != 0)) {\r\n      this.conditionalTriggers.click = config.click;\r\n    }\r\n    if ((typeof config.onExitDetect !== 'undefined')) {\r\n      this.conditionalTriggers.onExitDetect = config.onExitDetect;\r\n    }\r\n    // if ((typeof config.cssSelector !== 'undefined')) {\r\n    //   this.conditionalTriggers.cssSelector = config.cssSelector;\r\n    // }\r\n    if ((typeof config.waitSeconds !== 'undefined') && (config.waitSeconds !== 0)) {\r\n      this.conditionalTriggers.waitSeconds = config.waitSeconds;\r\n    }\r\n    if ((typeof config.scrollPercent !== 'undefined') && (config.scrollPercent !== 0)) {\r\n      this.conditionalTriggers.scrollPercent = config.scrollPercent;\r\n    }\r\n    if ((typeof config.grepInvertURL !== 'undefined') && (config.grepInvertURL)) {\r\n      this.conditionalTriggers.grepInvertURL = config.grepInvertURL;\r\n    }\r\n    if ((typeof config.grepURL !== 'undefined') && (config.grepURL)) {\r\n      this.conditionalTriggers.grepURL = config.grepURL;\r\n    }\r\n\r\n  }\r\n\r\n  processConditionalTriggers() {\r\n    //gather all conditional triggers and process them.\r\n    let self = this;\r\n    let isEnabled = true;\r\n    if (this.ccsdk.surveyRunning || this.ccsdk.surveyDone) {\r\n      (window as any).ccsdkDebug ? console.log('returning') : '';\r\n      return;\r\n    }\r\n    if (typeof this.conditionalTriggers !== 'undefined') {\r\n      if (Object.keys(this.conditionalTriggers).length == 0) {\r\n        return false;\r\n      }\r\n      for (let conditionalTrigger in this.conditionalTriggers) {\r\n        if (this.conditionalTriggers[conditionalTrigger] != null) {\r\n          switch (conditionalTrigger) {\r\n            case \"onExitDetect\":\r\n              let onExitDetect = self.ccsdk.util.initListener(\"mouseout\", \"document\", function () {\r\n                (window as any).ccsdkDebug ? console.log(\"Mouse out\") : '';\r\n\r\n              });\r\n\r\n              onExitDetect.internalHandler = self.ccsdk.util.listener(document, onExitDetect.type, onExitDetect.id, onExitDetect.cb);\r\n\r\n              break;\r\n            case \"click\":\r\n              //find click count on screen\r\n              //calculate click count\r\n              // if((window as any).click > this.conditionalTriggers.click) {\r\n              //   return SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n              // }\r\n              isEnabled = isEnabled && ((window as any).click >= this.conditionalTriggers.click);\r\n              break;\r\n            case \"waitSeconds\":\r\n              let pageStartTime = new Date(Cookie.get(Constants.CCTriggerPageStartTime)).getTime();\r\n              let pathname = window.location.pathname;\r\n              if (pathname.match(/\\./)) {\r\n                pathname = pathname.substring(0, pathname.lastIndexOf('/'));\r\n              }\r\n              let pageTime = new Date(Cookie.get(Constants.CCTriggerPageElapsedTime + pathname)).getTime();\r\n              isEnabled = isEnabled && TriggerUtils.checkTimeCondition(pageTime, pageStartTime, this.conditionalTriggers[conditionalTrigger]);\r\n              (window as any).ccsdkDebug ? console.log('waitSeconds enabled', isEnabled) : '';\r\n              break;\r\n            case \"scrollPercent\":\r\n              //fill it with current scroll position\r\n              isEnabled = isEnabled && TriggerUtils.checkScroll((window as any).ccsdkTopOffset, this.conditionalTriggers[conditionalTrigger]);\r\n              (window as any).ccsdkDebug ? console.log('scrollPercent enabled', isEnabled) : '';\r\n\r\n              break;\r\n            case \"grepURL\":\r\n              isEnabled = isEnabled && TriggerUtils.checkInUrl(this.conditionalTriggers[conditionalTrigger]);\r\n              (window as any).ccsdkDebug ? console.log('grepURL enabled', isEnabled) : '';\r\n              break;\r\n            case \"grepInvertURL\":\r\n              isEnabled = isEnabled && !TriggerUtils.checkInUrl(this.conditionalTriggers[conditionalTrigger]);\r\n              (window as any).ccsdkDebug ? console.log('grepInvertURL enabled', isEnabled) : '';\r\n              break;\r\n          }\r\n        }\r\n      }\r\n      if (isEnabled) {\r\n        if (this.ccsdk && this.ccsdk.tracking) {\r\n          this.ccsdk.tracking.trackEvent('Popped Up', {\r\n            token: this.ccsdk.tracking.token,\r\n            data: {\r\n              name: null,\r\n              action: null\r\n            }\r\n          }, null, null)\r\n        }\r\n        SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n      }\r\n    } else {\r\n      //do nothing.\r\n    }\r\n  }\r\n\r\n  processNonConditionalTriggers() {\r\n    //process all non conditional one shot triggers here?\r\n  }\r\n\r\n  processScrollTriggers(scrollNow: number) {\r\n    this.TriggerPopUpByScrollPixels(scrollNow);\r\n  }\r\n\r\n  TriggerPopUpByPageCount() {\r\n    let pageCount = parseInt(Cookie.get(Constants.CCTriggerSitePageViewCount));\r\n    if (pageCount == NaN) {\r\n      pageCount = 0;\r\n    }\r\n    //!(window as any).globalSurveyRunning && \r\n    if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.pageCountTrigger && TriggerUtils.checkPageCount(pageCount, this.minPageCount)) {\r\n      this.pageCountTrigger = true;\r\n      //displayQuestion\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n    } else {\r\n      //already executed.\r\n      //or condition not satisified yet.\r\n    }\r\n  }\r\n\r\n\r\n  //minPageTime in seconds\r\n  TriggerPopUpByTimeSpentOnPage() {\r\n    let pageStartTime = new Date(Cookie.get(Constants.CCTriggerPageStartTime)).getTime();\r\n    let pathname = window.location.pathname;\r\n    if (pathname.match(/\\./)) {\r\n      pathname = pathname.substring(0, pathname.lastIndexOf('/'));\r\n    }\r\n\r\n    let pageTime = new Date(Cookie.get(Constants.CCTriggerPageElapsedTime + pathname)).getTime();\r\n\r\n    //!(window as any).globalSurveyRunning && \r\n    if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.pageTimeTrigger && TriggerUtils.checkTimeCondition(pageTime, pageStartTime, this.minPageTime)) {\r\n      this.pageTimeTrigger = true;\r\n      //displayQuestion\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n    } else {\r\n      //already executed.\r\n      //or condition not satisified yet.\r\n    }\r\n  }\r\n\r\n  TriggerPopUpByTimeSpentOnSite() {\r\n    let siteStartTime = new Date(Cookie.get(Constants.CCTriggerSiteStartTime)).getTime();\r\n    let siteTime = new Date(Cookie.get(Constants.CCTriggerSiteElapsedTime)).getTime();\r\n    //!(window as any).globalSurveyRunning && \r\n    if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.siteTimeTrigger && TriggerUtils.checkTimeCondition(siteTime, siteStartTime, this.minSiteTime)) {\r\n      this.siteTimeTrigger = true;\r\n      //displayQuestion\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n    } else {\r\n      //already executed.\r\n      //or condition not satisified yet.\r\n    }\r\n  }\r\n\r\n  TriggerPopUpByInactivity() {\r\n\r\n  }\r\n\r\n  TriggerPopUpByScrollPixels(scrollNow: number) {\r\n    //!(window as any).globalSurveyRunning && \r\n    if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.scrollPixelsTrigger && TriggerUtils.checkScroll(scrollNow, this.minScrollPixels)) {\r\n      this.scrollPixelsTrigger = true;\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n      // this.ccsdk.initSurvey();\r\n      // SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n    } else {\r\n      //already executed?\r\n      //or condition not satisified yet.\r\n    }\r\n  }\r\n\r\n  //run only once?\r\n  TriggerPopUpByURLPattern() {\r\n    //!(window as any).globalSurveyRunning && \r\n    if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.urlParamTrigger && TriggerUtils.checkInUrl(this.inUrl)) {\r\n      this.urlParamTrigger = true;\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n    } else {\r\n\r\n    }\r\n  }\r\n\r\n  TriggerPopUpByNotURLPattern() {\r\n    //!(window as any).globalSurveyRunning && \r\n    if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.notUrlParamTrigger && !TriggerUtils.checkInUrl(this.inUrl)) {\r\n      this.notUrlParamTrigger = true;\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n    } else {\r\n\r\n    }\r\n  }\r\n\r\n  TriggerPopUpByUTMParameter() {\r\n    let utmP = this.utm.split(\"=\");\r\n    let utmVal = Cookie.getParameterByName(utmP[0], undefined);\r\n    //!(window as any).globalSurveyRunning && \r\n    if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.utmParamTrigger && utmVal === utmP[1]) {\r\n      this.utmParamTrigger = true;\r\n\r\n      // this.ccsdk.initSurvey();\r\n      SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n    }\r\n  }\r\n\r\n  resetTriggers() {\r\n    this.pageCountTrigger = false;\r\n    this.pageTimeTrigger = false;\r\n    this.siteTimeTrigger = false;\r\n    this.urlParamTrigger = false;\r\n    this.scrollPixelsTrigger = false;\r\n  }\r\n}\r\n\r\nexport { Triggers };","class TriggerUtils {\r\n\r\n\r\n    public static checkInUrl(inUrl : RegExp) {\r\n        return window.location.href.match(inUrl) != null && window.location.href.match(inUrl).length > 0;\r\n    }\r\n\r\n    public static checkTimeCondition(pageTime : number, pageStartTime : number, minPageTime : number) {\r\n        return Math.round((pageTime - pageStartTime) / 1000) > minPageTime;\r\n    }\r\n\r\n    public static checkScroll(scrollNow : number, minScrollPixels : number) {\r\n        return scrollNow > minScrollPixels;\r\n    }\r\n\r\n    public static checkPageCount(pageCount : number, minPageCount : number) {\r\n        return pageCount >= minPageCount;\r\n    }\r\n}\r\n\r\nexport { TriggerUtils };","import { RequestHelper } from './Request';\r\n\r\nexport class MatomoTracker {\r\n\r\n  public username;\r\n  public token;\r\n\r\n  trackEvent(event, payload, successCb, errorCb) {\r\n    let url\r\n    try {\r\n      url = new URL('https://matomo.getcloudcherry.com/piwik.php');\r\n    } catch (err) {\r\n      if (errorCb && typeof errorCb === 'function') {\r\n        errorCb();\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (!url || !url.searchParams) {\r\n      if (errorCb && typeof errorCb === 'function') {\r\n        errorCb();\r\n        return;\r\n      } else {\r\n        return;\r\n      }\r\n    }\r\n    // constants for project\r\n    const idsite = 4;\r\n    const rec = 1;\r\n\r\n    let searchParams = {\r\n      idsite,\r\n      rec,\r\n      action_name: event,\r\n      url: window.location.href,\r\n      action_url: window.location.href,\r\n      uid: this.username,\r\n      _cvar: { '1': ['Token', payload.token] },\r\n      new_visit: event === 'Welcome Pop up Position' ? 1 : 0,\r\n      e_c: event,\r\n      e_a: payload.data.action,\r\n      e_n: payload.data.name,\r\n      rand: Math.ceil(Math.random() * 100)\r\n    };\r\n    Object.keys(searchParams).forEach(x => {\r\n      let param;\r\n      if (typeof searchParams[x] === 'string') {\r\n        param = searchParams[x];\r\n      } else {\r\n        param = JSON.stringify(searchParams[x]);\r\n      }\r\n      url.searchParams.set(x, param);\r\n    })\r\n\r\n    return RequestHelper.post(url.toString(), null, successCb, errorCb);\r\n  }\r\n}"],"sourceRoot":""}