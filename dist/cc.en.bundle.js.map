{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///cc.en.bundle.js","webpack:///webpack/bootstrap cf1d0d5a8d669bd247bb","webpack:///./src/helpers/dom/DomUtilities.ts","webpack:///./src/Constants.ts","webpack:///./src/helpers/Cookie.ts","webpack:///./src/SurveyManager.ts","webpack:///./src/Config.ts","webpack:///./src/helpers/Request.ts","webpack:///./src/helpers/templates.ts","webpack:///./src/helpers/filters/LanguageTextFilter.ts","webpack:///./src/helpers/dom/Select.ts","webpack:///./src/helpers/filters/ConditionalFlowFilter.ts","webpack:///./src/CCSDKEntry.ts","webpack:///./src/Survey.ts","webpack:///./src/SurveyHandler.ts","webpack:///./src/css/main.scss?59d5","webpack:///./src/css/main.scss","webpack:///./node_modules/rtl-css-loader/lib/css-base.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./src/templates/Survey.html","webpack:///./src/templates/QuestionStart.html","webpack:///./src/templates/QuestionSingleline.html","webpack:///./src/templates/QuestionNumber.html","webpack:///./src/templates/QuestionMultiline.html","webpack:///./src/templates/QuestionCheckbox.html","webpack:///./src/templates/QuestionRadio.html","webpack:///./src/templates/QuestionRadioMore.html","webpack:///./src/templates/QuestionRadioImage.html","webpack:///./src/templates/QuestionScale.html","webpack:///./src/templates/QuestionCSATAgreement5.html","webpack:///./src/templates/QuestionCSATSatisfaction5.html","webpack:///./src/templates/QuestionNPS.html","webpack:///./src/templates/QuestionSelect.html","webpack:///./src/templates/QuestionMultiSelect.html","webpack:///./src/templates/QuestionSmile.html","webpack:///./src/templates/QuestionSmileInverted.html","webpack:///./src/templates/QuestionStar.html","webpack:///./src/templates/QuestionSlider.html","webpack:///./src/templates/OptionRadioImage.html","webpack:///./src/templates/OptionRadio.html","webpack:///./src/templates/OptionCheckbox.html","webpack:///./src/templates/OptionCheckboxImage.html","webpack:///./src/templates/ThankYou.html","webpack:///./src/templates/LanguageSelector.html","webpack:///./src/helpers/filters/ConditionalTextFilter.ts","webpack:///./src/helpers/dom/DomSurvey.ts","webpack:///./src/helpers/dom/Theme.ts","webpack:///./src/helpers/dom/Slider.ts","webpack:///./src/TriggerManager.ts","webpack:///./src/Triggers.ts","webpack:///./src/helpers/TriggerUtils.ts"],"names":["root","factory","exports","module","define","amd","cc","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","default","object","property","prototype","hasOwnProperty","p","s","value","templates_1","DomUtilities","selector","document","querySelectorAll","appendStyle","css","head","getElementsByTagName","style","createElement","type","styleSheet","cssText","appendChild","createTextNode","remove","el","parentNode","removeChild","removeAll","elements","Array","forEach","removeClassAll","className","_this","removeClass","addClassAll","addClass","classList","replace","RegExp","split","join","add","toggleClass","contains","hasClass","test","ready","fn","attachEvent","readyState","addEventListener","getParents","parentSelector","parents","push","listener","evt","sel","handler","internalHandler","event","t","target","matches","initListener","id","cb","checkIfListenerExists","ar","_i","ar_1","length","on","off","removeEventListener","removeListener","removeAllListeners","ar_2","trigger","eventName","data","CustomEvent","detail","createEvent","initCustomEvent","dispatchEvent","removeTrigger","shadeBlendConvert","from","to","e","sbcRip","RGB","slice","parseFloat","r","parseInt","Math","round","h","b","f","toString","hexToRGB","hex","alpha","indexOf","substr","map","g","arrayContains","needle","findNaN","index","item","generateSelectOptions","arr","isArray","res","generateLanguageSelectOptions","checkOptionContainsImage","opt","includes","generateRadioImageOptions","optHtml","templates","option_radio_image","generateRadioIgnoreImageOptions","option_radio","generateRadioOptions","generateCheckboxImageOptions","option_checkbox_image","generateCheckboxIgnoreImageOptions","option_checkbox","generateCheckboxOptions","Constants","CCTriggerPageStartTime","CCTriggerPageElapsedTime","CCTriggerSiteStartTime","CCTriggerSiteElapsedTime","CCTriggerSitePageViewCount","CCTriggerIndividualPageViewCount","SURVEY_START_EVENT","SURVEY_DATA_EVENT","SURVEY_END_EVENT","SURVEY_CLOSE_EVENT","SURVEY_QUESTION_EVENT","SURVEY_ANSWER_EVENT","SURVEY_CLICK_EVENT","GRANT_TYPE","AUTHORIZATION","AUTHORIZATION_BEARER","SURVEY_CLIENT","Cookie","set","days","path","date","Date","setTime","getTime","expires","toUTCString","dir","cookie","nameEQ","ca","charAt","substring","delete","getParameterByName","url","window","location","href","regex","results","exec","decodeURIComponent","SurveyManager","initializeSurvey","surveyId","surveyInstances","setupSurvey","addSurvey","ccsdkDebug","console","log","surveyQueue","processQueueInterval","setInterval","processQueueIntervalCB","removeSurvey","survey","splice","clearInterval","globalSurveyRunning","pop","setSurveyRunning","unsetSurveyRunning","Config","API_URL","SURVEY_BY_TOKEN","SURVEY_PARTIAL_RESPONSE","CDN_URL","CDN_ASSET_URL","POST_LOGIN_TOKEN","GET_SURVEY_THROTTLE_LOGIC","POST_THROTTLING","POST_THROTTLING_ADD_ENTRIES","POST_SURVEY_FINAL","makeRequest","method","postParams","headers","Promise","resolve","reject","xhr","XMLHttpRequest","open","onload","status","response","JSON","parse","statusText","onerror","keys","key","setRequestHeader","send","RequestHelper","getWithHeaders","postWithHeaders","stringify","post","Content-Type","QuestionSurvey","QuestionStart","QuestionSingleline","QuestionNumber","QuestionMultiline","QuestionCheckbox","QuestionRadio","QuestionRadioMore","QuestionRadioImage","QuestionScale","QuestionCSATAgreement5","QuestionCSATSatisfaction5","QuestionNPS","QuestionSelect","QuestionMultiSelect","QuestionSmile","QuestionSmileInverted","QuestionStar","QuestionSlider","OptionRadioImage","OptionRadio","OptionCheckbox","OptionCheckboxImage","ThankYou","LanguageSelector","question_survey","question_start","question_text","question_number","question_scale","question_csat_agreement_5","question_csat_satisfaction_5","question_nps","question_multi_line_text","question_multi_select","question_radio_more","question_radio","question_radio_image","question_checkbox","question_select","question_smile_5","question_smile_5_inverted","question_star_5","question_slider","thankyou","language_selector","LanguageTextFilter","translateQuestionText","surveyHandler","question","ccsdk","config","language","text","qText","translated","translateMessages","surveyData","translateDisplayLegend","displayLegend","translateMultiSelect","multiSelect","DomUtilities_1","Select","qId","listeners","init","util","$body","$html","select","parent","getAttribute","self","classes","template","options","innerHTML","insertAdjacentHTML","setupListeners","ref2","selfOption","selectOptions","selectWrapper","selectedOptionText","textContent","ref","ccSelect","stopPropagation","destroyListeners","_a","setValue","selectOption","csv","allOptions","allOptions_1","option","domOptions","ConditionalFlowFilter","filterQuestion","aAddedCount","aRemovedCount","getAnswerForQuestionId","getConditionalSurveyQuestions","aQuestion","conditionalFilter","iSatisfied","iFailed","_b","_c","filterquestions","aFilterByQuestion","isAnd","doesSatisfy","isOr","getSurveyQuestions","removeAnswer","sort","questionCompare","a","sequence","groupBy","toUpperCase","isNumberCheck","answerCheck","toLowerCase","questionId","numberInput","number","iFoundAll","aAnswer","textInput","surveyToken","arguments","Cookie_1","isActive","SurveyManager_1","Survey_1","Survey","destroy","callback","prefill","answerObject","prefillByTag","questionTag","answer","fillPrefill","prefillByNote","questionNote","fillPrefillByNote","show","hide","localCCSDK","isMobile","innerWidth","CCSDK","queue","q","args","functionName","apply","queue_1","eventCCReady","initEvent","SurveyHandler_1","DomSurvey_1","Constants_1","TriggerManager_1","Triggers_1","Request_1","Config_1","isThrottled","surveyDone","surveyStatus","surveyRunning","thorttlingLogic","textDirection","triggers","Triggers","TriggerManager","SurveyHandler","brandColor","setHtmlTextDirection","setDisplayOptions","username","password","cssSelector","setConditionalTriggers","login","loginURL","loginResponse","grant_type","debug","then","logindata","loginData","getSurveyThrottlingLogic","getThrottleUrl","access_token","getThrottleResponse","checkThrottling","inputIds","uniqueIDQuestionIdOrTag","logics","filter","postThrottleUrl","throttleResponse","addThrottlingEntries","isOpen","addThrottleUrl","user","mobile","emailId","customId","surveySentDate","surveyOpenDate","channel","isOpened","initSurvey","htmlDir","direction","setAttribute","surveyDisplay","position","welcomePopupAnimation","surveyPosition","search","getSurveyData","fetchQuestions","dom","hideLoader","initSurveyQuestions","DomSurvey","setTheme","keepAlive","displayWelcomeQuestion","attachSurvey","initSurveyDom","onSurveyStartEvent","fillPrefillDirect","enableClickTrigger","count","enablePageCountTrigger","count2","enableSiteCountTrigger","enablePageTimeTrigger","enableSiteTimeTrigger","enablePopUpByURLPatternTrigger","enablePopUpByNotURLPatternTrigger","enablePopUpByUTMPatternTrigger","enableScrollPixelsTrigger","ConditionalTextFilter_1","LanguageTextFilter_1","Select_1","ConditionalFlowFilter_1","answers","surveyAnswers","surveyPopupAnimation","domListeners","questions","questionsToDisplay","prefillQuestions","conditionalQuestions","prefillResponses","prefillWithTags","prefillWithNote","prefillDirect","displayThankYouCb","thankyouHtml","thankyouText","startText","startButtonText","replaceInQuestionsContainer","thankyouContainer","onSurveyEndEvent","setTimeout","destroySurveyCb","acceptAnswersCb","Number","postPartialAnswer","domSelectElements","setQIndex","randomNumber","String","random","surveyUrl","setupSurveyContainer","cleanSurvey","displayQuestions","displayThankYou","destroySurvey","surveyHtml","appendInBody","displayQuestionSelector","welcomeHtml","welcomeText","showWelcomeContainer","welcomeQuestionDisplayTime","welcomeInterval","checkWelcomeQuestionDisplay","acceptAnswers","now","killWelcomeQuestion","cancelKillWelcomeQuestion","displayLanguageSelector","options1","cTemplate1","concat","$questionContainer","firstChild","languageSelect","submitBtn","selectRes","isRTL","loadFirstQuestion","postPrefillPartialAnswer","filterQuestions","ccSurvey","getElementsByClassName","checkConditionals","compiledTemplate","compileTemplate","isPrefillQuestion","fillPrefillQuestionObject","getQuestionById","getPrefillResponseById","updatePrefillResponseById","tag","note","fillPrefillQuestion","valueType","responseStored","questionText","getAnswerTypeFromDisplayType","displayType","surveyPartialUrl","partialResponseId","resp","comparator","onSurveyAnswerEvent","postSurveyFinalUrl","answersAll","finalData","locationId","responses","nps","surveyClient","responseDuration","questionTemplate","optMin","optMax","ConditionalTextFilter","filterText","isRequired","questionTags","tileColor","presentationMode","tileColorDark","startRange","endRange","startRangeLabel_1","endRangeLabel_1","mobileImageUrl","imageVisibility010","imageVisibility110","scaleVisibility","scaleImageContainer","divider","optionStyle","initial_1","optionLeftExtraClass","optionRightExtraClass","validationHint","acTemplate","multiSelect1","reverse","displayStyle","options2_1","options2_2","options3","acTemplate1","acTemplate2","options2","startRangeLabel","endRangeLabel","displayLegend2","startRangeLabel1","endRangeLabel1","displayLegend3","isRetired","isPrefillTags","fillPrefillWithTags","fillPrefillWithNote","isPrefillNote","isPrefillDirect","innerHeight","apiFill","staffFill","isQuestionFilled","surveyContainer","getSurveyContainer","welcomeContainer","getWelcomeContainer","bodyElement","content","transform","locals","list","result","mediaQuery","alreadyImportedModules","addStylesToDom","styles","domStyle","stylesInDom","refs","j","parts","addStyle","listToStyles","newStyles","base","media","sourceMap","part","insertStyleElement","getElement","insertInto","Error","lastStyleElementInsertedAtTop","stylesInsertedAtTop","insertAt","nextSibling","insertBefore","removeStyleElement","idx","createStyleElement","attrs","addAttrs","createLinkElement","link","rel","obj","update","singleton","styleIndex","singletonCounter","applyToSingletonTag","bind","URL","createObjectURL","revokeObjectURL","Blob","btoa","updateLink","applyToTag","newObj","replaceText","cssNode","childNodes","autoFixUrls","convertToAbsoluteUrls","fixUrls","unescape","encodeURIComponent","blob","oldSrc","isOldIE","memo","all","atob","querySelector","DEBUG","newList","mayRemove","textStore","replacement","Boolean","baseUrl","protocol","host","currentDir","pathname","fullMatch","origUrl","unquotedOrigUrl","trim","$1","newUrl","conditionaText","conditionaText_1","leadingDisplayTexts","fOption","filterByQuestion","Theme_1","Slider_1","trackSelects","trackRadios","currentQuestionListeners","qIndex","qResponse","time","theme","Theme","getQindex","$popupContainer","$popupContainer2","removePrevListener","startSurvey","$startBtn","onSurveyClickEvent","showLoader","nextQue","nextQuestion","prevQue","prevQuestion","closeSurvey","onSurveyCloseEvent","minSurvey","minimizeSurvey","resumeText","resumeButtonText","updateProgress","width","loadQuestionSpecifics","leftIcon","onSurveyQuestionEvent","span","validationSpan","validationRegex","match","currentQuestionId","submitQuestion","nextQ","rightIcon","nextIcon","$loader","html","appendInQuestionsContainer","startContainer","showLanguageSelector","token","qType","setupListenersQuestionScale","setupListenersQuestionNPS","setupListenersQuestionMultiline","setupListenersQuestionSelect","setupListenersQuestionRadio","setupListenersQuestionRadioImage","setupListenersQuestionCheckbox","setupListenersQuestionStar","setupListenersQuestionSmile","setupListenersQuestionCsat","setupListenersQuestionSlider","setupListenersQuestionSingleline","setupListenersQuestionNumber","selectedRating","selectedRating1","previousValue","previousSelection","rating","previousValues","previousValues_1","checked","child","previousSibling","multilineRes","singlelineRes","numberRes","sliderRes","sliderInput","Slider","brandColorDark","brandColorWhite","encodeURI","inputRange","rangeTip","speed","min","max","clearTo","updateRangeTip","display","clearTimeout","timeout","animateHandler","currValue","maxValue","requestAnimationFrame","successHandler","undefined","sitePageViewCount","individualPageViewCount","click","onscroll","doc","documentElement","top","pageXOffset","scrollLeft","clientLeft","pageYOffset","scrollTop","clientTop","ccsdkTopOffset","processScrollTriggers","onclick","triggerInstances","triggerInterval","processIntervalTriggers","processConditionalTriggers","scrollNow","disableTriggers","TriggerUtils_1","pageCountTrigger","siteCountTrigger","pageTimeTrigger","siteTimeTrigger","urlParamTrigger","notUrlParamTrigger","utmParamTrigger","scrollPixelsTrigger","pageCountTriggerEnabled","siteCountTriggerEnabled","pageTimeTriggerEnabled","siteTimeTriggerEnabled","urlParamTriggerEnabled","notUrlParamTriggerEnabled","utmParamTriggerEnabled","scrollPixelsTriggerEnabled","conditionalTriggers","minPageCount","TriggerPopUpByPageCount","minSiteCount","minPageTime","TriggerPopUpByTimeSpentOnPage","minSiteTime","TriggerPopUpByTimeSpentOnSite","urlPattern","inUrl","TriggerPopUpByURLPattern","notinUrl","TriggerPopUpByNotURLPattern","utm","TriggerPopUpByUTMParameter","minScrollPixels","grepURL","onExitDetect","waitSeconds","scrollPercent","grepInvertURL","isEnabled","conditionalTrigger","pageStartTime","pageTime","TriggerUtils","checkTimeCondition","checkScroll","checkInUrl","processNonConditionalTriggers","TriggerPopUpByScrollPixels","pageCount","NaN","checkPageCount","siteStartTime","siteTime","TriggerPopUpByInactivity","utmP","utmVal","resetTriggers"],"mappings":"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","file":"cc.en.bundle.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"cc\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cc\"] = factory();\n\telse\n\t\troot[\"cc\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"cc\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cc\"] = factory();\n\telse\n\t\troot[\"cc\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 10);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar templates_1 = __webpack_require__(6);\r\nvar DomUtilities = /** @class */ (function () {\r\n    function DomUtilities() {\r\n        // HTMLElement.prototype.matches = HTMLElement.prototype.matches ||\r\n        // HTMLElement.prototype.matchesSelector ||\r\n        // HTMLElement.prototype.webkitMatchesSelector ||\r\n        // HTMLElement.prototype.mozMatchesSelector ||\r\n        // HTMLElement.prototype.msMatchesSelector ||\r\n        // HTMLElement.prototype.oMatchesSelector;\r\n    }\r\n    DomUtilities.prototype.get = function (selector) {\r\n        return document.querySelectorAll(selector);\r\n    };\r\n    DomUtilities.prototype.appendStyle = function (css) {\r\n        var head = document.head || document.getElementsByTagName('head')[0];\r\n        var style = document.createElement('style');\r\n        style.type = 'text/css';\r\n        if (style.styleSheet) {\r\n            style.styleSheet.cssText = css;\r\n        }\r\n        else {\r\n            style.appendChild(document.createTextNode(css));\r\n        }\r\n        head.appendChild(style);\r\n    };\r\n    DomUtilities.prototype.remove = function (el) {\r\n        el.parentNode.removeChild(el);\r\n    };\r\n    DomUtilities.prototype.removeAll = function (elements) {\r\n        Array.prototype.forEach.call(elements, function (el, i) {\r\n            el.parentNode.removeChild(el);\r\n        });\r\n    };\r\n    DomUtilities.prototype.css = function (elements, property, value) {\r\n        Array.prototype.forEach.call(elements, function (el, i) {\r\n            el.style[property] = value;\r\n        });\r\n    };\r\n    DomUtilities.prototype.removeClassAll = function (elements, className) {\r\n        var _this = this;\r\n        Array.prototype.forEach.call(elements, function (el, i) {\r\n            _this.removeClass(el, className);\r\n        });\r\n    };\r\n    DomUtilities.prototype.addClassAll = function (elements, className) {\r\n        var _this = this;\r\n        Array.prototype.forEach.call(elements, function (el, i) {\r\n            _this.addClass(el, className);\r\n        });\r\n    };\r\n    DomUtilities.prototype.removeClass = function (el, className) {\r\n        // console.log(el);\r\n        if (el.classList)\r\n            el.classList.remove(className);\r\n        else\r\n            el.className = el.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\r\n    };\r\n    DomUtilities.prototype.addClass = function (el, className) {\r\n        if (el.classList)\r\n            el.classList.add(className);\r\n        else\r\n            el.className += ' ' + className;\r\n    };\r\n    DomUtilities.prototype.toggleClass = function (el, className) {\r\n        if (el.classList) {\r\n            if (el.classList.contains(className))\r\n                el.classList.remove(className);\r\n            else\r\n                el.classList.add(className);\r\n        }\r\n    };\r\n    DomUtilities.prototype.hasClass = function (el, className) {\r\n        if (el.classList)\r\n            return el.classList.contains(className);\r\n        else\r\n            return new RegExp('(^| )' + className + '( |$)', 'gi').test(el.className);\r\n    };\r\n    DomUtilities.prototype.ready = function (fn) {\r\n        if (document.attachEvent ? document.readyState === \"complete\" : document.readyState !== \"loading\") {\r\n            fn();\r\n        }\r\n        else {\r\n            document.addEventListener('DOMContentLoaded', fn);\r\n        }\r\n    };\r\n    DomUtilities.prototype.getParents = function (el, parentSelector) {\r\n        // If no parentSelector defined will bubble up all the way to *document*\r\n        if (parentSelector === undefined) {\r\n            parentSelector = document;\r\n        }\r\n        var parents = [];\r\n        var p = el.parentNode;\r\n        while (p !== parentSelector) {\r\n            var o = p;\r\n            parents.push(o);\r\n            p = o.parentNode;\r\n        }\r\n        parents.push(parentSelector); // Push that parentSelector you wanted to stop at\r\n        return parents;\r\n    };\r\n    DomUtilities.prototype.listener = function (el, evt, sel, handler) {\r\n        var internalHandler = function (event) {\r\n            var t = event.target;\r\n            while (t && t !== this) {\r\n                if (t.matches(sel)) {\r\n                    handler.call(t, event);\r\n                }\r\n                t = t.parentNode;\r\n            }\r\n        };\r\n        el.addEventListener(evt, internalHandler);\r\n        return internalHandler;\r\n    };\r\n    DomUtilities.prototype.initListener = function (type, id, cb) {\r\n        var ref = {\r\n            id: id,\r\n            type: type,\r\n            cb: cb,\r\n            internalHandler: undefined,\r\n        };\r\n        return ref;\r\n    };\r\n    DomUtilities.prototype.checkIfListenerExists = function (id, ar) {\r\n        for (var _i = 0, ar_1 = ar; _i < ar_1.length; _i++) {\r\n            var listener = ar_1[_i];\r\n            if (listener.id == id) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    DomUtilities.prototype.on = function (evt, el, handler) {\r\n        el.addEventListener(evt, handler);\r\n    };\r\n    DomUtilities.prototype.off = function (evt, el, handler) {\r\n        el.removeEventListener(evt, handler);\r\n    };\r\n    DomUtilities.prototype.removeListener = function (el, evt, handler) {\r\n        el.removeEventListener(evt, handler);\r\n    };\r\n    DomUtilities.prototype.removeAllListeners = function (ar) {\r\n        for (var _i = 0, ar_2 = ar; _i < ar_2.length; _i++) {\r\n            var listener = ar_2[_i];\r\n            this.removeListener(document.querySelectorAll(\"body\")[0], listener.type, listener.internalHandler);\r\n        }\r\n        return true;\r\n    };\r\n    DomUtilities.prototype.trigger = function (el, eventName, data) {\r\n        if (typeof CustomEvent === 'function') {\r\n            var event = new CustomEvent(eventName, { detail: data });\r\n        }\r\n        else {\r\n            var event = document.createEvent('CustomEvent');\r\n            event.initCustomEvent(eventName, true, true, data);\r\n        }\r\n        el.dispatchEvent(event);\r\n    };\r\n    DomUtilities.prototype.removeTrigger = function (el, eventName) {\r\n        el.removeEventListener(eventName);\r\n    };\r\n    DomUtilities.prototype.shadeBlendConvert = function (p, from, to) {\r\n        if (typeof (p) != \"number\" || p < -1 || p > 1 || typeof (from) != \"string\" || (from[0] != 'r' && from[0] != '#') || (typeof (to) != \"string\" && typeof (to) != \"undefined\"))\r\n            return null; //ErrorCheck\r\n        if (!this.sbcRip)\r\n            this.sbcRip = function (d) {\r\n                var l = d.length, RGB = new Object();\r\n                if (l > 9) {\r\n                    d = d.split(\",\");\r\n                    if (d.length < 3 || d.length > 4)\r\n                        return null; //ErrorCheck\r\n                    RGB[0] = i(d[0].slice(4)), RGB[1] = i(d[1]), RGB[2] = i(d[2]), RGB[3] = d[3] ? parseFloat(d[3]) : -1;\r\n                }\r\n                else {\r\n                    if (l == 8 || l == 6 || l < 4)\r\n                        return null; //ErrorCheck\r\n                    if (l < 6)\r\n                        d = \"#\" + d[1] + d[1] + d[2] + d[2] + d[3] + d[3] + (l > 4 ? d[4] + \"\" + d[4] : \"\"); //3 digit\r\n                    d = i(d.slice(1), 16), RGB[0] = d >> 16 & 255, RGB[1] = d >> 8 & 255, RGB[2] = d & 255, RGB[3] = l == 9 || l == 5 ? r(((d >> 24 & 255) / 255) * 10000) / 10000 : -1;\r\n                }\r\n                return RGB;\r\n            };\r\n        var i = parseInt, r = Math.round, h = from.length > 9, h = typeof (to) == \"string\" ? to.length > 9 ? true : to == \"c\" ? !h : false : h, b = p < 0, p = b ? p * -1 : p, to = to && to != \"c\" ? to : b ? \"#000000\" : \"#FFFFFF\", f = this.sbcRip(from), t = this.sbcRip(to);\r\n        if (!f || !t)\r\n            return null; //ErrorCheck\r\n        if (h)\r\n            return \"rgb(\" + r((t[0] - f[0]) * p + f[0]) + \",\" + r((t[1] - f[1]) * p + f[1]) + \",\" + r((t[2] - f[2]) * p + f[2]) + (f[3] < 0 && t[3] < 0 ? \")\" : \",\" + (f[3] > -1 && t[3] > -1 ? r(((t[3] - f[3]) * p + f[3]) * 10000) / 10000 : t[3] < 0 ? f[3] : t[3]) + \")\");\r\n        else\r\n            return \"#\" + (0x100000000 + (f[3] > -1 && t[3] > -1 ? r(((t[3] - f[3]) * p + f[3]) * 255) : t[3] > -1 ? r(t[3] * 255) : f[3] > -1 ? r(f[3] * 255) : 255) * 0x1000000 + r((t[0] - f[0]) * p + f[0]) * 0x10000 + r((t[1] - f[1]) * p + f[1]) * 0x100 + r((t[2] - f[2]) * p + f[2])).toString(16).slice(f[3] > -1 || t[3] > -1 ? 1 : 3);\r\n    };\r\n    DomUtilities.prototype.hexToRGB = function (hex, alpha) {\r\n        if (!hex || [4, 7].indexOf(hex.length) === -1) {\r\n            return; // throw new Error('Bad Hex');\r\n        }\r\n        hex = hex.substr(1);\r\n        // if shortcuts (#F00) -> set to normal (#FF0000)\r\n        if (hex.length === 3) {\r\n            hex = hex.split('').map(function (el) {\r\n                return el + el + '';\r\n            }).join('');\r\n        }\r\n        var r = parseInt(hex.slice(0, 2), 16), g = parseInt(hex.slice(2, 4), 16), b = parseInt(hex.slice(4, 6), 16);\r\n        if (alpha) {\r\n            return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha + \")\";\r\n        }\r\n        else {\r\n            return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\r\n        }\r\n    };\r\n    DomUtilities.prototype.arrayContains = function (needle) {\r\n        // Per spec, the way to identify NaN is that it is not equal to itself\r\n        var findNaN = needle !== needle;\r\n        var indexOf;\r\n        if (!findNaN && typeof Array.prototype.indexOf === 'function') {\r\n            indexOf = Array.prototype.indexOf;\r\n        }\r\n        else {\r\n            indexOf = function (needle) {\r\n                var i = -1, index = -1;\r\n                for (i = 0; i < this.length; i++) {\r\n                    var item = this[i];\r\n                    if ((findNaN && item !== item) || item === needle) {\r\n                        index = i;\r\n                        break;\r\n                    }\r\n                }\r\n                return index;\r\n            };\r\n        }\r\n        return indexOf.call(this, needle) > -1;\r\n    };\r\n    DomUtilities.prototype.generateSelectOptions = function (arr) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                res += '<option value=\"' + arr[i] + '\">' + arr[i] + '</option>';\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateLanguageSelectOptions = function (arr) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                if (arr[i] == 'default') {\r\n                    res += '<option value=\"' + arr[i] + '\">English (Default)</option>';\r\n                }\r\n                else {\r\n                    res += '<option value=\"' + arr[i] + '\">' + arr[i] + '</option>';\r\n                }\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.checkOptionContainsImage = function (arr) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = true;\r\n            for (i = 0; i < arr.length; i++) {\r\n                var opt = arr[i];\r\n                res = res && opt.includes(';') && opt.includes('.');\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateRadioImageOptions = function (arr, id) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var optHtml = templates_1.templates.option_radio_image;\r\n                var opt = arr[i].split(';');\r\n                //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n                //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n                optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[1]);\r\n                optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\r\n                optHtml = optHtml.replace(/{{label}}/g, opt[0]);\r\n                optHtml = optHtml.replace(/{{labelFor}}/g, opt[0].replace(/\\s+/g, '-'));\r\n                optHtml = optHtml.replace(/{{value}}/g, '\"' + opt[0] + '\"');\r\n                res += optHtml;\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateRadioIgnoreImageOptions = function (arr, id) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var optHtml = templates_1.templates.option_radio;\r\n                var opt = arr[i].split(';');\r\n                //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n                //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n                optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\r\n                optHtml = optHtml.replace(/{{label}}/g, opt[0]);\r\n                optHtml = optHtml.replace(/{{labelFor}}/g, opt[0].replace(/\\s+/g, '-'));\r\n                optHtml = optHtml.replace(/{{value}}/g, '\"' + opt[0] + '\"');\r\n                res += optHtml;\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateRadioOptions = function (arr, id) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var optHtml = templates_1.templates.option_radio;\r\n                var opt = arr[i].split(';');\r\n                optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\r\n                optHtml = optHtml.replace(/{{label}}/g, opt[0]);\r\n                optHtml = optHtml.replace(/{{labelFor}}/g, opt[0].replace(/\\s+/g, '-'));\r\n                optHtml = optHtml.replace(/{{value}}/g, '\"' + opt[0] + '\"');\r\n                res += optHtml;\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateCheckboxImageOptions = function (arr, id) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var optHtml = templates_1.templates.option_checkbox_image;\r\n                var opt = arr[i].split(';');\r\n                //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n                //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n                optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[1]);\r\n                optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\r\n                optHtml = optHtml.replace(/{{label}}/g, opt[0]);\r\n                optHtml = optHtml.replace(/{{labelFor}}/g, opt[0].replace(/\\s+/g, '-'));\r\n                optHtml = optHtml.replace(/{{value}}/g, '\"' + opt[0] + '\"');\r\n                res += optHtml;\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateCheckboxIgnoreImageOptions = function (arr, id) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var optHtml = templates_1.templates.option_checkbox;\r\n                var opt = arr[i].split(';');\r\n                //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\r\n                //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\r\n                optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\r\n                optHtml = optHtml.replace(/{{label}}/g, opt[0]);\r\n                optHtml = optHtml.replace(/{{labelFor}}/g, opt[0].replace(/\\s+/g, '-'));\r\n                optHtml = optHtml.replace(/{{value}}/g, '\"' + opt[0] + '\"');\r\n                res += optHtml;\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    DomUtilities.prototype.generateCheckboxOptions = function (arr, id) {\r\n        if (Array.isArray(arr)) {\r\n            var i = 0;\r\n            var res = '';\r\n            for (i = 0; i < arr.length; i++) {\r\n                var optHtml = templates_1.templates.option_checkbox;\r\n                var opt = arr[i].split(';');\r\n                optHtml = optHtml.replace(/{{label}}/g, arr[i]);\r\n                optHtml = optHtml.replace(/{{labelFor}}/g, arr[i].replace(/\\s+/g, '-'));\r\n                optHtml = optHtml.replace(/{{value}}/g, '\"' + arr[i] + '\"');\r\n                res += optHtml;\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n    return DomUtilities;\r\n}());\r\nexports.DomUtilities = DomUtilities;\r\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Constants = /** @class */ (function () {\r\n    function Constants() {\r\n    }\r\n    Constants.CCTriggerPageStartTime = \"cc-trigger-page-start-time\";\r\n    Constants.CCTriggerPageElapsedTime = \"cc-trigger-page-elapsed-time\";\r\n    Constants.CCTriggerSiteStartTime = \"cc-trigger-site-start-time\";\r\n    Constants.CCTriggerSiteElapsedTime = \"cc-trigger-site-elapsed-time\";\r\n    Constants.CCTriggerSitePageViewCount = \"cc-trigger-site-page-count\";\r\n    Constants.CCTriggerIndividualPageViewCount = \"cc-trigger-individual-page-count\";\r\n    Constants.SURVEY_START_EVENT = \"onImpression\";\r\n    Constants.SURVEY_DATA_EVENT = \"onData\";\r\n    Constants.SURVEY_END_EVENT = \"onEnd\";\r\n    Constants.SURVEY_CLOSE_EVENT = \"onClose\";\r\n    Constants.SURVEY_QUESTION_EVENT = \"onQuestion\";\r\n    Constants.SURVEY_ANSWER_EVENT = \"onAnswer\";\r\n    Constants.SURVEY_CLICK_EVENT = \"onClick\";\r\n    Constants.GRANT_TYPE = \"password\";\r\n    Constants.AUTHORIZATION = \"Authorization\";\r\n    Constants.AUTHORIZATION_BEARER = \"Bearer\";\r\n    Constants.SURVEY_CLIENT = \"JS-MicroWeb\";\r\n    return Constants;\r\n}());\r\nexports.Constants = Constants;\r\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Cookie = /** @class */ (function () {\r\n    function Cookie() {\r\n    }\r\n    /**\r\n     * Set/Overwrite a cookie value\r\n     *\r\n     * @param name\r\n     * @param value\r\n     * @param days      OPTIONAL Days till this cookie will stay valid. Default is current session\r\n     * @param path      OPTIONAL domain root will be used by default\r\n     */\r\n    Cookie.set = function (name, value, days, path) {\r\n        if (days) {\r\n            var date = new Date();\r\n            date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));\r\n            var expires = \"; expires=\" + date.toUTCString();\r\n        }\r\n        else\r\n            var expires = \"\";\r\n        var dir = path || '/';\r\n        document.cookie = name + \"=\" + value + expires + \"; path=\" + dir;\r\n    };\r\n    /**\r\n     * Retrieve a cookie value\r\n     *\r\n     * @param name\r\n     * @return String|null\r\n     */\r\n    Cookie.get = function (name) {\r\n        var nameEQ = name + \"=\";\r\n        var ca = document.cookie.split(';');\r\n        for (var i = 0; i < ca.length; i++) {\r\n            var c = ca[i];\r\n            while (c.charAt(0) == ' ')\r\n                c = c.substring(1, c.length);\r\n            if (c.indexOf(nameEQ) == 0)\r\n                return c.substring(nameEQ.length, c.length);\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Remove a cookie\r\n     *\r\n     * @param name\r\n     */\r\n    Cookie.delete = function (name) {\r\n        Cookie.set(name, \"\", -1, undefined);\r\n    };\r\n    Cookie.getParameterByName = function (name, url) {\r\n        if (!url)\r\n            url = window.location.href;\r\n        name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\r\n        var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"), results = regex.exec(url);\r\n        if (!results)\r\n            return null;\r\n        if (!results[2])\r\n            return '';\r\n        return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\r\n    };\r\n    return Cookie;\r\n}());\r\nexports.Cookie = Cookie;\r\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n//Survey Manager manages and queues survey.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar SurveyManager = /** @class */ (function () {\r\n    function SurveyManager() {\r\n    }\r\n    SurveyManager.initializeSurvey = function (surveyId) {\r\n        //check if survey ran?\r\n        //do survey initialization.\r\n        SurveyManager.surveyInstances[surveyId].setupSurvey();\r\n    };\r\n    SurveyManager.addSurvey = function (surveyId) {\r\n        window.ccsdkDebug ? console.log(\"Adding survey ID : \" + surveyId) : '';\r\n        SurveyManager.surveyQueue.push(surveyId);\r\n        if (SurveyManager.processQueueInterval == null) {\r\n            SurveyManager.processQueueInterval = setInterval(SurveyManager.processQueueIntervalCB, 100);\r\n        }\r\n    };\r\n    SurveyManager.removeSurvey = function (surveyId) {\r\n        if (SurveyManager.surveyQueue.length > 0) {\r\n            for (var survey in SurveyManager.surveyQueue) {\r\n                if (SurveyManager.surveyQueue[survey].surveyId == surveyId) {\r\n                    SurveyManager.surveyQueue.splice(survey, 1);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (SurveyManager.surveyQueue.length == 0) {\r\n            clearInterval(SurveyManager.processQueueInterval);\r\n        }\r\n    };\r\n    SurveyManager.processQueueIntervalCB = function () {\r\n        if (window.globalSurveyRunning == true) {\r\n            return;\r\n        }\r\n        else {\r\n            var surveyId = SurveyManager.surveyQueue.pop();\r\n            window.ccsdkDebug ? console.log(\"Processing survey ID \" + surveyId) : '';\r\n            if (surveyId == undefined) {\r\n                clearInterval(SurveyManager.processQueueInterval);\r\n                SurveyManager.processQueueInterval = null;\r\n            }\r\n            else {\r\n                window.globalSurveyRunning = true;\r\n                SurveyManager.initializeSurvey(surveyId);\r\n            }\r\n        }\r\n    };\r\n    SurveyManager.setSurveyRunning = function () {\r\n        window.globalSurveyRunning = true;\r\n    };\r\n    SurveyManager.unsetSurveyRunning = function () {\r\n        window.globalSurveyRunning = false;\r\n    };\r\n    SurveyManager.surveyQueue = [];\r\n    SurveyManager.processQueueInterval = null;\r\n    SurveyManager.surveyInstances = {};\r\n    return SurveyManager;\r\n}());\r\nexports.SurveyManager = SurveyManager;\r\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Config = /** @class */ (function () {\r\n    function Config() {\r\n    }\r\n    Config.API_URL = \"https://api.getcloudcherry.com\";\r\n    Config.SURVEY_BY_TOKEN = \"/api/SurveyByToken/{token}/{tabletId}\";\r\n    Config.SURVEY_PARTIAL_RESPONSE = \"/api/PartialSurvey/{id}/{complete}\";\r\n    // static SURVEY_PARTIAL_RESPONSE : String =  \"/api/PartialSurvey/{id}/{complete}/JS-Web/{tabletId}\";\r\n    Config.CDN_URL = \"https://cx.getcloudcherry.com/\";\r\n    Config.CDN_ASSET_URL = \"https://cx.getcloudcherry.com/microsurvey-assets/\";\r\n    Config.POST_LOGIN_TOKEN = \"/api/LoginToken\";\r\n    Config.GET_SURVEY_THROTTLE_LOGIC = \"/api/SurveyThrottleLogic/{location}\";\r\n    Config.POST_THROTTLING = \"/api/Throttling\";\r\n    Config.POST_THROTTLING_ADD_ENTRIES = \"/api/Throttling/AddEntries\";\r\n    Config.POST_SURVEY_FINAL = \"/api/surveybytoken/{tokenId}\";\r\n    return Config;\r\n}());\r\nexports.Config = Config;\r\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n// import 'whatwg-fetch';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction makeRequest(method, url, postParams, headers) {\r\n    return new Promise(function (resolve, reject) {\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open(method, url);\r\n        xhr.onload = function () {\r\n            if (this.status >= 200 && this.status < 300) {\r\n                var res = xhr.response ? JSON.parse(xhr.response) : '';\r\n                resolve(res);\r\n            }\r\n            else {\r\n                reject({\r\n                    status: this.status,\r\n                    statusText: xhr.statusText\r\n                });\r\n            }\r\n        };\r\n        xhr.onerror = function () {\r\n            reject({\r\n                status: this.status,\r\n                statusText: xhr.statusText\r\n            });\r\n        };\r\n        if (headers) {\r\n            Object.keys(headers).forEach(function (key) {\r\n                xhr.setRequestHeader(key, headers[key]);\r\n            });\r\n        }\r\n        // var params : any = postParams;\r\n        // We'll need to stringify if we've been given an object\r\n        // If we have a string, this is skipped.\r\n        // if (params && typeof params === 'object') {\r\n        //   params = Object.keys(params).map(function (key) {\r\n        //     return encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\r\n        //   }).join('&');\r\n        // }\r\n        xhr.send(postParams);\r\n    });\r\n}\r\nvar RequestHelper = /** @class */ (function () {\r\n    function RequestHelper() {\r\n    }\r\n    RequestHelper.getWithHeaders = function (url, headers) {\r\n        return makeRequest(\"GET\", url, null, headers);\r\n    };\r\n    RequestHelper.postWithHeaders = function (url, data, headers) {\r\n        headers[\"Content-Type\"] = \"application/json; charset=utf-8\";\r\n        return makeRequest(\"POST\", url, JSON.stringify(data), headers);\r\n    };\r\n    RequestHelper.get = function (url) {\r\n        return makeRequest(\"GET\", url, null, null);\r\n        // let request : Request = new Request( (url as any) , new Object());\r\n        // return fetch(request).then( (response : Response) => {\r\n        //   if (response.status >= 200 && response.status < 300) {\r\n        //     return Promise.resolve(response);\r\n        //   } else {\r\n        //     var error = new Error(response.statusText);\r\n        //     // error.response = response;\r\n        //     throw error;\r\n        //   }\r\n        // }).then( (response : Response) => {\r\n        //   return response.json();\r\n        // }).catch( (error : Error) => {\r\n        //   (window as any).ccsdkDebug?console.log('Request failed ', error):'';\r\n        // });\r\n    };\r\n    /**\r\n     *\r\n     * var data = new FormData()\r\n     *  data.append('file', input.files[0])\r\n     *  data.append('user', 'hubot')\r\n     *\r\n     * @static\r\n     * @param {any} url\r\n     * @param {any} data\r\n     * @memberof Request\r\n     */\r\n    RequestHelper.post = function (url, data) {\r\n        //consider, file upload?\r\n        // (window as any).ccsdkDebug?console.log(\"[\" + JSON.stringify(data) + \"]\"):'';\r\n        window.ccsdkDebug ? console.log(\"Sending : \" + data) : '';\r\n        return makeRequest(\"POST\", url, JSON.stringify(data), { \"Content-Type\": \"application/json; charset=utf-8\" });\r\n        // let request : Request = new Request( (url as any), {\r\n        //   method : \"POST\",\r\n        //   headers : {\r\n        //     \"Content-Type\" : \"application/json; charset=utf-8\"\r\n        //   },\r\n        //   body : JSON.stringify(data)\r\n        // });\r\n        // return fetch(request).then( (response : Response) => {\r\n        //   if (response.status >= 200 && response.status < 300) {\r\n        //     return Promise.resolve(response);\r\n        //   } else {\r\n        //     let error : Error = new Error(response.statusText);\r\n        //     // error.response = response;\r\n        //     throw error;\r\n        //   }\r\n        // }).then( (response : Response) => {\r\n        //   return response.json();\r\n        // }).catch( (error : Error) => {\r\n        //   (window as any).ccsdkDebug?console.log('Request failed ', error):'';\r\n        // });\r\n    };\r\n    return RequestHelper;\r\n}());\r\nexports.RequestHelper = RequestHelper;\r\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__webpack_require__(13);\r\nvar QuestionSurvey = __webpack_require__(18);\r\nvar QuestionStart = __webpack_require__(19);\r\nvar QuestionSingleline = __webpack_require__(20);\r\nvar QuestionNumber = __webpack_require__(21);\r\nvar QuestionMultiline = __webpack_require__(22);\r\nvar QuestionCheckbox = __webpack_require__(23);\r\nvar QuestionRadio = __webpack_require__(24);\r\nvar QuestionRadioMore = __webpack_require__(25);\r\nvar QuestionRadioImage = __webpack_require__(26);\r\nvar QuestionScale = __webpack_require__(27);\r\nvar QuestionCSATAgreement5 = __webpack_require__(28);\r\nvar QuestionCSATSatisfaction5 = __webpack_require__(29);\r\nvar QuestionNPS = __webpack_require__(30);\r\nvar QuestionSelect = __webpack_require__(31);\r\nvar QuestionMultiSelect = __webpack_require__(32);\r\nvar QuestionSmile = __webpack_require__(33);\r\nvar QuestionSmileInverted = __webpack_require__(34);\r\nvar QuestionStar = __webpack_require__(35);\r\nvar QuestionSlider = __webpack_require__(36);\r\nvar OptionRadioImage = __webpack_require__(37);\r\nvar OptionRadio = __webpack_require__(38);\r\nvar OptionCheckbox = __webpack_require__(39);\r\nvar OptionCheckboxImage = __webpack_require__(40);\r\nvar ThankYou = __webpack_require__(41);\r\nvar LanguageSelector = __webpack_require__(42);\r\nvar templates = {\r\n    question_survey: \"\",\r\n    question_start: \"\",\r\n    question_text: \"\",\r\n    question_number: \"\",\r\n    question_scale: \"\",\r\n    question_csat_agreement_5: \"\",\r\n    question_csat_satisfaction_5: \"\",\r\n    question_nps: \"\",\r\n    question_multi_line_text: \"\",\r\n    question_multi_select: \"\",\r\n    question_radio_more: \"\",\r\n    question_radio: \"\",\r\n    question_radio_image: \"\",\r\n    question_checkbox: \"\",\r\n    question_select: \"\",\r\n    question_smile_5: \"\",\r\n    question_smile_5_inverted: \"\",\r\n    question_star_5: \"\",\r\n    question_slider: \"\",\r\n    option_radio_image: \"\",\r\n    option_radio: \"\",\r\n    option_checkbox: \"\",\r\n    option_checkbox_image: \"\",\r\n    thankyou: \"\",\r\n    language_selector: \"\"\r\n};\r\nexports.templates = templates;\r\ntemplates.question_survey = QuestionSurvey;\r\ntemplates.question_start = QuestionStart;\r\ntemplates.question_text = QuestionSingleline;\r\ntemplates.question_number = QuestionNumber;\r\ntemplates.question_scale = QuestionScale;\r\ntemplates.question_csat_agreement_5 = QuestionCSATAgreement5;\r\ntemplates.question_csat_satisfaction_5 = QuestionCSATSatisfaction5;\r\ntemplates.question_nps = QuestionNPS;\r\ntemplates.question_slider = QuestionSlider;\r\ntemplates.question_multi_line_text = QuestionMultiline;\r\ntemplates.question_multi_select = QuestionMultiSelect;\r\ntemplates.question_select = QuestionSelect;\r\ntemplates.question_smile_5 = QuestionSmile;\r\ntemplates.question_smile_5_inverted = QuestionSmileInverted;\r\ntemplates.question_star_5 = QuestionStar;\r\ntemplates.question_checkbox = QuestionCheckbox;\r\ntemplates.question_radio = QuestionRadio;\r\ntemplates.question_radio_more = QuestionRadioMore;\r\ntemplates.question_radio_image = QuestionRadioImage;\r\ntemplates.option_radio_image = OptionRadioImage;\r\ntemplates.option_radio = OptionRadio;\r\ntemplates.option_checkbox = OptionCheckbox;\r\ntemplates.option_checkbox_image = OptionCheckboxImage;\r\ntemplates.thankyou = ThankYou;\r\ntemplates.language_selector = LanguageSelector;\r\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar LanguageTextFilter = /** @class */ (function () {\r\n    function LanguageTextFilter() {\r\n    }\r\n    LanguageTextFilter.translateQuestionText = function (surveyHandler, question) {\r\n        if (!surveyHandler.ccsdk.config.language.includes('Default')) {\r\n            if (question.translated != null &&\r\n                typeof question.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n                if (question.translated[surveyHandler.ccsdk.config.language].text != null) {\r\n                    var qText = question.translated[surveyHandler.ccsdk.config.language].text.split(':');\r\n                    if (question.translated[surveyHandler.ccsdk.config.language].text.includes(\":\")) {\r\n                        qText = qText[0] + ': <br><span class=\"text-normal\">' + qText[1] + '</span>';\r\n                    }\r\n                    return qText;\r\n                }\r\n                else {\r\n                    return question.translated[surveyHandler.ccsdk.config.language].text == null ? '' : question.translated[surveyHandler.ccsdk.config.language].text;\r\n                }\r\n                // return question.translated[surveyHandler.ccsdk.config.language].text;\r\n            }\r\n            else {\r\n                if (question.text != null) {\r\n                    var qText = question.text.split(':');\r\n                    if (question.text.includes(\":\")) {\r\n                        qText = qText[0] + ': <br><span class=\"text-normal\">' + qText[1] + '</span>';\r\n                    }\r\n                    return qText;\r\n                }\r\n                else {\r\n                    return question.text == null ? '' : question.text;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (question.text != null) {\r\n                var qText = question.text.split(':');\r\n                if (question.text.includes(\":\")) {\r\n                    qText = qText[0] + ': <br><span class=\"text-normal\">' + qText[1] + '</span>';\r\n                }\r\n                return qText;\r\n            }\r\n            else {\r\n                return question.text == null ? '' : question.text;\r\n            }\r\n        }\r\n    };\r\n    LanguageTextFilter.translateMessages = function (surveyHandler, type) {\r\n        if (surveyHandler.surveyData.translated != null && typeof surveyHandler.surveyData.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n            if (!surveyHandler.ccsdk.config.language.includes('Default')) {\r\n                if (surveyHandler.surveyData.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n                    if (surveyHandler.surveyData.translated[surveyHandler.ccsdk.config.language][type] != null) {\r\n                        return surveyHandler.surveyData.translated[surveyHandler.ccsdk.config.language][type];\r\n                    }\r\n                    else {\r\n                        return surveyHandler.surveyData[type];\r\n                    }\r\n                }\r\n                else {\r\n                    return surveyHandler.surveyData[type];\r\n                }\r\n            }\r\n            else {\r\n                return surveyHandler.surveyData[type];\r\n            }\r\n        }\r\n    };\r\n    LanguageTextFilter.translateDisplayLegend = function (surveyHandler, question) {\r\n        if (!surveyHandler.ccsdk.config.language.includes('Default')) {\r\n            if (question.translated != null &&\r\n                typeof question.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n                return question.translated[surveyHandler.ccsdk.config.language].displayLegend;\r\n            }\r\n            else {\r\n                return question.displayLegend;\r\n            }\r\n        }\r\n        else {\r\n            return question.displayLegend;\r\n        }\r\n    };\r\n    LanguageTextFilter.translateMultiSelect = function (surveyHandler, question) {\r\n        if (!surveyHandler.ccsdk.config.language.includes('Default')) {\r\n            if (question.translated != null &&\r\n                typeof question.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n                return question.translated[surveyHandler.ccsdk.config.language].multiSelect;\r\n            }\r\n            else {\r\n                return question.multiSelect;\r\n            }\r\n        }\r\n        else {\r\n            return question.multiSelect;\r\n        }\r\n    };\r\n    return LanguageTextFilter;\r\n}());\r\nexports.LanguageTextFilter = LanguageTextFilter;\r\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar DomUtilities_1 = __webpack_require__(0);\r\nvar Select = /** @class */ (function () {\r\n    function Select(qId) {\r\n        this.listeners = [];\r\n        this.qId = qId;\r\n    }\r\n    Select.prototype.init = function (qId) {\r\n        this.util = new DomUtilities_1.DomUtilities();\r\n        this.$body = document.querySelectorAll(\"body\")[0];\r\n        this.$html = document.querySelectorAll(\"html\")[0];\r\n        var select = document.querySelectorAll(\"#\" + qId + \" .cc-select\");\r\n        // var divSelect = document.querySelectorAll(\"div.cc-select\");\r\n        // this.util.removeAll(divSelect);\r\n        var parent = this;\r\n        //Assumption: iterating over array but there will always be one select at a time\r\n        this.type = select[0].getAttribute('data-type');\r\n        Array.prototype.forEach.call(select, function (el, i) {\r\n            var self = el;\r\n            var $selectOptions = document.querySelectorAll(\"#\" + qId + \" .cc-select-options\");\r\n            var classes = self.getAttribute(\"class\"), id = self.getAttribute(\"id\"), name = self.getAttribute(\"name\");\r\n            var template = '<div class=\"' + classes + '\">';\r\n            template += '<span class=\"cc-select-trigger\">' + self.getAttribute(\"placeholder\") + '</span>';\r\n            template += '<div class=\"cc-select-options-container\" cc-scrollbar-container><div class=\"cc-select-options\">';\r\n            var options = self.querySelectorAll(\"option\");\r\n            Array.prototype.forEach.call(options, function (el, i) {\r\n                template += '<span class=\"cc-select-option ' + el.getAttribute(\"class\") + '\" data-value=\"' + el.getAttribute(\"value\") + '\">' + el.innerHTML + '</span>';\r\n            });\r\n            template += '</div></div></div>';\r\n            parent.util.addClass(self, 'hide');\r\n            self.insertAdjacentHTML('afterend', template);\r\n        });\r\n        this.setupListeners();\r\n    };\r\n    Select.prototype.setupListeners = function () {\r\n        var self = this;\r\n        var qId = self.qId;\r\n        var ref2 = this.util.initListener('click', \"#\" + qId + \" .cc-select-option\", function (e) {\r\n            // let ref2 = this.util.initListener(this.$body, \"click\", \"#\"+qId+\" .cc-select-option\", function(e) {\r\n            window.ccsdkDebug ? console.log('click cc-select-option', this) : '';\r\n            var selfOption = this;\r\n            var value = this.getAttribute('data-value');\r\n            //select cc-select-wrapper\r\n            //todo: write a function to directly select parent via selector\r\n            var selectOptions = this.parentNode;\r\n            var select = selectOptions.parentNode.parentNode;\r\n            this.select = select;\r\n            var selectWrapper = select.parentNode;\r\n            window.ccsdkDebug ? console.log(select) : '';\r\n            window.ccsdkDebug ? console.log(selectOptions) : '';\r\n            window.ccsdkDebug ? console.log(selectWrapper) : '';\r\n            //select all cc-select-option and remove class selection\r\n            // self.util.removeClassAll(selectOptions.querySelectorAll(\".cc-select-option\"), \"selection\");\r\n            // this.parents(\".cc-select-options\").find(\".cc-select-option\").removeClass(\"selection\");\r\n            self.util.addClass(this, \"selection\");\r\n            var selectedOptionText = select.querySelectorAll('.cc-select-trigger')[0].textContent;\r\n            window.ccsdkDebug ? console.log('select type', self.type) : '';\r\n            if (self.type !== 'multiple') {\r\n                window.ccsdkDebug ? console.log('select type', self.type) : '';\r\n                selectedOptionText = selfOption.textContent;\r\n                window.ccsdkDebug ? console.log('selected option', selectedOptionText) : '';\r\n                self.util.removeClassAll(document.querySelectorAll(\".cc-select\"), \"opened\");\r\n                selectWrapper.querySelectorAll(\"select\")[0].value = value;\r\n                select.querySelectorAll('.cc-select-trigger')[0].textContent = selectedOptionText;\r\n                self.util.removeClassAll(document.querySelectorAll(\"#\" + qId + \" .cc-select-option\"), 'selection');\r\n                self.util.addClass(self, 'selection');\r\n            }\r\n            else {\r\n                window.ccsdkDebug ? console.log(selectedOptionText) : '';\r\n                if (selectedOptionText != 'Select') {\r\n                    if (selectedOptionText.indexOf(selfOption.textContent) == 0) {\r\n                        selectedOptionText = selectedOptionText.replace(selfOption.textContent + ', ', '');\r\n                        selectedOptionText = selectedOptionText.replace(selfOption.textContent, '');\r\n                        self.util.removeClass(this, \"selection\");\r\n                    }\r\n                    else if (selectedOptionText.indexOf(selfOption.textContent) > 0) {\r\n                        selectedOptionText = selectedOptionText.replace(', ' + selfOption.textContent, '');\r\n                        self.util.removeClass(this, \"selection\");\r\n                    }\r\n                    else {\r\n                        selectedOptionText = selectedOptionText + ', ' + selfOption.textContent;\r\n                    }\r\n                }\r\n                else {\r\n                    window.ccsdkDebug ? console.log(selfOption.textContent) : '';\r\n                    selectedOptionText = selfOption.textContent;\r\n                }\r\n                selectWrapper.querySelectorAll(\"select\")[0].value = selectedOptionText;\r\n                if (selectedOptionText.length < 1) {\r\n                    select.querySelectorAll('.cc-select-trigger')[0].textContent = 'Select';\r\n                }\r\n                else {\r\n                    select.querySelectorAll('.cc-select-trigger')[0].textContent = selectedOptionText;\r\n                }\r\n                return false;\r\n            }\r\n        });\r\n        this.listeners.push(ref2);\r\n        ref2.internalHandler = this.util.listener(this.$body, ref2.type, ref2.id, ref2.cb);\r\n        var ref = this.util.initListener('click', \"#\" + qId + \" .cc-select-trigger\", function (e) {\r\n            self.$html.addEventListener('click', function (e) {\r\n                if (!self.util.hasClass(e.target, 'cc-select-option')) {\r\n                    self.util.removeClassAll(document.querySelectorAll(\".cc-select\"), \"opened\");\r\n                    self.$html.removeEventListener('click', function () {\r\n                    });\r\n                }\r\n            });\r\n            var ccSelect = this.parentNode;\r\n            window.ccsdkDebug ? console.log('click cc-select-trigger', ccSelect) : '';\r\n            self.util.toggleClass(ccSelect, \"opened\");\r\n            e.stopPropagation();\r\n        });\r\n        this.listeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    Select.prototype.destroyListeners = function () {\r\n        for (var _i = 0, _a = this.listeners; _i < _a.length; _i++) {\r\n            var listener = _a[_i];\r\n            this.util.removeListener(this.$body, listener.type, listener.internalHandler);\r\n        }\r\n        return true;\r\n    };\r\n    Select.prototype.setValue = function (value) {\r\n        var self = this;\r\n        var qId = self.qId;\r\n        var select;\r\n        select = document.querySelectorAll(\"#\" + qId + \" select\")[0];\r\n        select.value = value;\r\n        document.querySelectorAll(\"#\" + qId + \" .cc-select-trigger\")[0].textContent = value;\r\n    };\r\n    Select.prototype.selectOption = function (el) {\r\n        this.util.addClass(el, 'selection');\r\n    };\r\n    Select.prototype.selectOptions = function (csv) {\r\n        var self = this;\r\n        if (csv) {\r\n            var allOptions = csv.split(',');\r\n            var _loop_1 = function (option) {\r\n                var domOptions = document.querySelectorAll(\"#\" + self.qId + \" .cc-select-option\");\r\n                Array.prototype.forEach.call(domOptions, function (el, i) {\r\n                    if (el.getAttribute('data-value') == option) {\r\n                        self.selectOption(el);\r\n                    }\r\n                });\r\n            };\r\n            for (var _i = 0, allOptions_1 = allOptions; _i < allOptions_1.length; _i++) {\r\n                var option = allOptions_1[_i];\r\n                _loop_1(option);\r\n            }\r\n        }\r\n    };\r\n    return Select;\r\n}());\r\nexports.Select = Select;\r\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar ConditionalFlowFilter = /** @class */ (function () {\r\n    function ConditionalFlowFilter() {\r\n    }\r\n    ConditionalFlowFilter.filterQuestion = function (surveyHandler, question) {\r\n        var aAddedCount = 0;\r\n        var aRemovedCount = 0;\r\n        if (surveyHandler.getAnswerForQuestionId(question.id) != null) {\r\n            for (var _i = 0, _a = surveyHandler.getConditionalSurveyQuestions(); _i < _a.length; _i++) {\r\n                var aQuestion = _a[_i];\r\n                if (aQuestion.conditionalFilter != null) {\r\n                    var iSatisfied = false;\r\n                    var iFailed = false;\r\n                    for (var _b = 0, _c = aQuestion.conditionalFilter.filterquestions; _b < _c.length; _b++) {\r\n                        var aFilterByQuestion = _c[_b];\r\n                        if (ConditionalFlowFilter.isAnd(aFilterByQuestion)) {\r\n                            if (ConditionalFlowFilter.doesSatisfy(surveyHandler, aFilterByQuestion) && !iFailed) {\r\n                                iSatisfied = true;\r\n                            }\r\n                            else {\r\n                                iFailed = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                        else if (ConditionalFlowFilter.isOr(aFilterByQuestion)) {\r\n                            if (ConditionalFlowFilter.doesSatisfy(surveyHandler, aFilterByQuestion)) {\r\n                                iSatisfied = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (iSatisfied && !iFailed) {\r\n                        if (!surveyHandler.getSurveyQuestions().includes(aQuestion)) {\r\n                            surveyHandler.getSurveyQuestions().push(aQuestion);\r\n                            aAddedCount++;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (surveyHandler.getSurveyQuestions().includes(aQuestion)) {\r\n                            aRemovedCount++;\r\n                            surveyHandler.getSurveyQuestions().splice(surveyHandler.getSurveyQuestions().indexOf(aQuestion), 1);\r\n                            // surveyHandler.removePartial(aQuestion.id);\r\n                            //removing from partial requires not posting partial after each question rather than posting them all at once.\r\n                            surveyHandler.removeAnswer(aQuestion.id);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (aAddedCount > 0 || aRemovedCount > 0) {\r\n            surveyHandler.getSurveyQuestions().sort(ConditionalFlowFilter.questionCompare);\r\n            // surveyHandler.sendConditionalFLowQuestionsData(surveyHandler.getSurveyQuestions().size());\r\n            return true;\r\n        }\r\n        else {\r\n            // return false;\r\n        }\r\n        window.ccsdkDebug ? console.log(surveyHandler.getSurveyQuestions()) : '';\r\n    };\r\n    ConditionalFlowFilter.questionCompare = function (a, b) {\r\n        return a.sequence - b.sequence;\r\n    };\r\n    ConditionalFlowFilter.isAnd = function (filterQuestion) {\r\n        if (filterQuestion.groupBy == null || filterQuestion.groupBy.toUpperCase() == \"AND\") {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    ConditionalFlowFilter.isOr = function (filterQuestion) {\r\n        if (filterQuestion.groupBy != null && filterQuestion.groupBy.toUpperCase() == \"OR\") {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    ConditionalFlowFilter.isNumberCheck = function (filterQuestion) {\r\n        if (filterQuestion.answerCheck[0].includes(\"lt\") || filterQuestion.answerCheck[0].includes(\"gt\") || filterQuestion.answerCheck[0].includes(\"eq\")) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Contains logic to control conditional flow and whether to show or hide the questions based on the user input\r\n     *\r\n     * @param filterQuestion\r\n     * @return\r\n     */\r\n    ConditionalFlowFilter.doesSatisfy = function (surveyHandler, filterQuestion) {\r\n        if (ConditionalFlowFilter.isNumberCheck(filterQuestion)) {\r\n            if (filterQuestion.answerCheck[0].toLowerCase() == \"lt\") {\r\n                if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId) != null)\r\n                    if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput != null && surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput < filterQuestion.number) {\r\n                        return true;\r\n                    }\r\n            }\r\n            else if (filterQuestion.answerCheck[0].toLowerCase() == (\"gt\")) {\r\n                if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId) != null)\r\n                    if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput != null && surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput > filterQuestion.number) {\r\n                        return true;\r\n                    }\r\n            }\r\n            else if (filterQuestion.answerCheck[0].toLowerCase() == (\"eq\")) {\r\n                if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId) != null)\r\n                    if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput != null && surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput == filterQuestion.number) {\r\n                        return true;\r\n                    }\r\n            }\r\n        }\r\n        else {\r\n            var iFoundAll = false;\r\n            for (var _i = 0, _a = filterQuestion.answerCheck; _i < _a.length; _i++) {\r\n                var aAnswer = _a[_i];\r\n                //   console.log('hello',surveyHandler.getAnswerForQuestionId(filterQuestion.questionId), aAnswer);\r\n                if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId) != null)\r\n                    if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).textInput != null && surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).textInput.includes(aAnswer)) {\r\n                        iFoundAll = true;\r\n                        break;\r\n                    }\r\n                    else {\r\n                        iFoundAll = false;\r\n                        break;\r\n                    }\r\n            }\r\n            if (iFoundAll)\r\n                return true;\r\n        }\r\n        return false;\r\n    };\r\n    return ConditionalFlowFilter;\r\n}());\r\nexports.ConditionalFlowFilter = ConditionalFlowFilter;\r\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Cookie_1 = __webpack_require__(2);\r\nvar SurveyManager_1 = __webpack_require__(3);\r\nvar Survey_1 = __webpack_require__(11);\r\n/**\r\n * functions that are exposed to SDK User are written here.\r\n * Entry point for CCSDK.\r\n */\r\nvar localCCSDK = {\r\n    init: init,\r\n    destroy: destroy,\r\n    trigger: trigger,\r\n    hide: hide,\r\n    show: show,\r\n    on: on,\r\n    prefill: prefill,\r\n    prefillByTag: prefillByTag,\r\n    prefillByNote: prefillByNote\r\n};\r\n// let instances : any = {};\r\nwindow.globalSurveyRunning = false;\r\nwindow.ccsdkDebug = false;\r\nwindow.isMobile = window.innerWidth <= 768 ? true : false;\r\nif (typeof window.CCSDK !== 'undefined') {\r\n    var queue = window.CCSDK.q;\r\n    window.CCSDK = function () {\r\n        if (arguments && arguments.length == 0) {\r\n            var time = new Date();\r\n            // console.log(this.time);\r\n        }\r\n        else {\r\n            window.ccsdkDebug ? console.log(arguments) : '';\r\n            var args = Array.from(arguments);\r\n            // console.log(arguments);\r\n            //Call this functions as ccsdk('functionName', ['argument1', 'argument2']);\r\n            var functionName = args.splice(0, 1)[0];\r\n            window.ccsdkDebug ? console.log(functionName) : '';\r\n            return localCCSDK[functionName].apply(this, args);\r\n        }\r\n    };\r\n    if (queue) {\r\n        for (var _i = 0, queue_1 = queue; _i < queue_1.length; _i++) {\r\n            var q = queue_1[_i];\r\n            var args = Array.from(q);\r\n            var functionName = args.splice(0, 1)[0];\r\n            localCCSDK[functionName].apply(this, args);\r\n        }\r\n    }\r\n    var eventCCReady = document.createEvent('Event');\r\n    eventCCReady.initEvent('ccready', true, true);\r\n    document.dispatchEvent(eventCCReady);\r\n}\r\nfunction init(surveyToken) {\r\n    //config options can be set in arguments[1]\r\n    //available config options : themeColor\r\n    // console.log(arguments[arguments.length - 1]);\r\n    var config = (typeof arguments[1] === 'object') ? arguments[1] : {};\r\n    //create survey instance\r\n    if (typeof Cookie_1.Cookie.get(surveyToken + '-finish') !== 'undefined' && Cookie_1.Cookie.get(surveyToken + '-finish')) {\r\n        return;\r\n    }\r\n    if (typeof config.isActive !== 'undefined' && config.isActive) {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken] = (SurveyManager_1.SurveyManager.surveyInstances[surveyToken]) ? SurveyManager_1.SurveyManager.surveyInstances[surveyToken] : new Survey_1.Survey(surveyToken, config);\r\n        return SurveyManager_1.SurveyManager.surveyInstances[surveyToken];\r\n    }\r\n    else {\r\n        //do nothing\r\n    }\r\n}\r\nexports.init = init;\r\nfunction destroy(surveyToken) {\r\n    // this.survey.destroy();\r\n    //remove from trigger manager, delete instance.\r\n    delete SurveyManager_1.SurveyManager.surveyInstances[surveyToken];\r\n}\r\nexports.destroy = destroy;\r\n//\r\nfunction trigger(surveyToken, type, target) {\r\n    window.ccsdkDebug ? console.log(SurveyManager_1.SurveyManager.surveyInstances) : '';\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].trigger(type, target);\r\n    }\r\n    //tell trigger manager to register trigger.\r\n}\r\nexports.trigger = trigger;\r\nfunction on(surveyToken, type, callback) {\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].on(type, callback);\r\n    }\r\n}\r\nexports.on = on;\r\nfunction prefill(surveyToken, questionId, answerObject) {\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].prefill(questionId, answerObject);\r\n    }\r\n}\r\nexports.prefill = prefill;\r\nfunction prefillByTag(surveyToken, questionTag, answer) {\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].fillPrefill(questionTag, answer);\r\n    }\r\n}\r\nexports.prefillByTag = prefillByTag;\r\nfunction prefillByNote(surveyToken, questionNote, answer) {\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].fillPrefillByNote(questionNote, answer);\r\n    }\r\n}\r\nexports.prefillByNote = prefillByNote;\r\nfunction show(surveyToken) {\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].show();\r\n    }\r\n}\r\nexports.show = show;\r\nfunction hide(surveyToken) {\r\n    if (typeof SurveyManager_1.SurveyManager.surveyInstances[surveyToken] != 'undefined') {\r\n        SurveyManager_1.SurveyManager.surveyInstances[surveyToken].hide();\r\n    }\r\n}\r\nexports.hide = hide;\r\n//on exit detect\r\n//\r\n// export function prefill(id : string, value : string, valueType : string) {\r\n//   SurveyManager.surveyInstances[this.surveyToken].prefill(id, value, valueType);\r\n// }\r\n// setInterval(function() {\r\n//   //collect data and add to cookies.\r\n// }, 1000);\r\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar SurveyHandler_1 = __webpack_require__(12);\r\nvar DomSurvey_1 = __webpack_require__(44);\r\nvar DomUtilities_1 = __webpack_require__(0);\r\nvar Constants_1 = __webpack_require__(1);\r\nvar SurveyManager_1 = __webpack_require__(3);\r\nvar TriggerManager_1 = __webpack_require__(47);\r\nvar Triggers_1 = __webpack_require__(48);\r\nvar Request_1 = __webpack_require__(5);\r\nvar Config_1 = __webpack_require__(4);\r\nvar Survey = /** @class */ (function () {\r\n    function Survey(surveyToken, config) {\r\n        this.isThrottled = true;\r\n        this.surveyDone = false;\r\n        this.surveyStatus = '';\r\n        this.surveyToken = surveyToken;\r\n        this.config = config;\r\n        this.surveyRunning = false;\r\n        this.thorttlingLogic = null;\r\n        if (typeof this.config.textDirection === 'undefined') {\r\n            this.config.textDirection = \"ltr\";\r\n        }\r\n        // this.setupSurvey();\r\n        this.triggers = new Triggers_1.Triggers(this);\r\n        TriggerManager_1.TriggerManager.addSurvey(this.surveyToken, this.triggers);\r\n        this.survey = new SurveyHandler_1.SurveyHandler(this);\r\n        this.util = new DomUtilities_1.DomUtilities;\r\n        //set themeColor of survey\r\n        this.config.brandColor = (this.config && this.config.brandColor) ?\r\n            this.config.brandColor : \"#db3c39\";\r\n        //use config variable textDirection and set dir\r\n        this.setHtmlTextDirection();\r\n        this.setDisplayOptions();\r\n        this.util.trigger(document, this.surveyToken + '-ready', { 'survey': this });\r\n        //do login\r\n        this.config.username = \"test\";\r\n        this.config.password = \"test\";\r\n        this.config.location = \"location\";\r\n        this.config.language = \"English (Default)\";\r\n        //check trigger conditions and add itself to \r\n        //based on new config\r\n        //gotta and these.\r\n        this.trigger(\"click\", this.config.cssSelector);\r\n        // this.trigger(\"scroll-pixels\", this.config.scrollPercent);\r\n        // this.trigger(\"page-time\", this.config.waitSeconds);\r\n        // this.trigger(\"url-match\", this.config.grepURL);\r\n        // this.trigger(\"url-not-match\", this.config.grepInvertURL);\r\n        // this.config.scrollPercent = 10;\r\n        // this.config.waitSeconds = 5;\r\n        this.triggers.setConditionalTriggers(this.config);\r\n        // this.login(function() {\r\n        //on login\r\n        // });\r\n    }\r\n    Survey.prototype.login = function (cb) {\r\n        var loginURL = Config_1.Config.API_URL + Config_1.Config.POST_LOGIN_TOKEN;\r\n        var loginResponse = Request_1.RequestHelper.post(loginURL, { grant_type: Constants_1.Constants.GRANT_TYPE, username: this.config.username, password: this.config.password });\r\n        var self = this;\r\n        this.debug ? console.log(\"login\") : '';\r\n        loginResponse.then(function (logindata) {\r\n            self.debug ? console.log(logindata) : '';\r\n            self.loginData = logindata;\r\n            if (self.isThrottled) {\r\n                self.getSurveyThrottlingLogic(cb);\r\n            }\r\n            else {\r\n                cb();\r\n                return;\r\n            }\r\n        });\r\n    };\r\n    Survey.prototype.getSurveyThrottlingLogic = function (cb) {\r\n        var getThrottleUrl = Config_1.Config.API_URL + Config_1.Config.GET_SURVEY_THROTTLE_LOGIC.replace('{location}', this.config.location);\r\n        var headers = {};\r\n        headers[Constants_1.Constants.AUTHORIZATION] = Constants_1.Constants.AUTHORIZATION_BEARER + \" \" + this.loginData.access_token;\r\n        var getThrottleResponse = Request_1.RequestHelper.getWithHeaders(getThrottleUrl, headers);\r\n        var self = this;\r\n        getThrottleResponse.then(function (data) {\r\n            self.thorttlingLogic = data;\r\n            self.checkThrottling(cb);\r\n        });\r\n    };\r\n    Survey.prototype.checkThrottling = function (cb) {\r\n        if (this.thorttlingLogic != null) {\r\n            if (this.thorttlingLogic.inputIds == null) {\r\n                this.thorttlingLogic.inputIds = [];\r\n            }\r\n            this.thorttlingLogic.inputIds.push(this.thorttlingLogic[this.thorttlingLogic.uniqueIDQuestionIdOrTag.toLowerCase()]);\r\n            if (this.thorttlingLogic.logics != null && this.thorttlingLogic.logics.length > 0 && this.config != null) {\r\n                this.thorttlingLogic.logics[0].filter.location = [];\r\n                this.thorttlingLogic.logics[0].filter.location.push(this.config.location);\r\n            }\r\n        }\r\n        var self = this;\r\n        var postThrottleUrl = Config_1.Config.API_URL + Config_1.Config.POST_THROTTLING;\r\n        var headers = {};\r\n        headers[Constants_1.Constants.AUTHORIZATION] = Constants_1.Constants.AUTHORIZATION + \" \" + this.loginData.access_token;\r\n        var postThrottleResponse = Request_1.RequestHelper.postWithHeaders(postThrottleUrl, this.thorttlingLogic, headers);\r\n        postThrottleResponse.then(function (throttleResponse) {\r\n            if (typeof throttleResponse[0][self.thorttlingLogic.uniqueIDQuestionIdOrTag.toLowerCase()] && throttleResponse[0].value) {\r\n                //get survey data?  \r\n                cb();\r\n            }\r\n        });\r\n    };\r\n    Survey.prototype.addThrottlingEntries = function (isOpen) {\r\n        var addThrottleUrl = Config_1.Config.API_URL + Config_1.Config.POST_THROTTLING_ADD_ENTRIES;\r\n        var headers = {};\r\n        this.loginData = { access_token: \"help\" };\r\n        headers[Constants_1.Constants.AUTHORIZATION] = Constants_1.Constants.AUTHORIZATION + \" \" + this.loginData.access_token;\r\n        //fill this from config and data.\r\n        var addThrottleUrlResponse = Request_1.RequestHelper.postWithHeaders(addThrottleUrl, {\r\n            user: \"\",\r\n            mobile: \"\",\r\n            emailId: \"\",\r\n            customId: \"\",\r\n            surveySentDate: \"\",\r\n            surveyOpenDate: \"\",\r\n            channel: \"\",\r\n            isOpened: isOpen\r\n        }, headers);\r\n        addThrottleUrlResponse.then(function (throttleResponse) {\r\n            this.debug ? console.log(throttleResponse) : '';\r\n        });\r\n    };\r\n    Survey.prototype.setupSurvey = function () {\r\n        // this.getSurveyData();\r\n        this.initSurvey();\r\n    };\r\n    Survey.prototype.setHtmlTextDirection = function () {\r\n        var htmlDir = document.getElementsByTagName('html')[0].getAttribute('dir');\r\n        var direction = (this.config && this.config.textDirection) ?\r\n            this.config.textDirection : (htmlDir ? htmlDir : \"ltr\");\r\n        document.getElementsByTagName('html')[0].setAttribute('dir', direction);\r\n    };\r\n    Survey.prototype.setDisplayOptions = function () {\r\n        this.survey.surveyDisplay.position = this.config && this.config.position ?\r\n            this.config.position : \"bottom right\";\r\n        var welcomePopupAnimation = 'hide-right-left';\r\n        // this.survey.surveyDisplay.welcomePopupAnimation =  this.config && this.config.display && this.config.display.welcomePopupAnimation ?\r\n        // \"hide-\"+ this.config.display.welcomePopupAnimation : \"hide-right-left\";\r\n        // this.survey.surveyDisplay.surveyPopupAnimation =  this.config && this.config.display && this.config.display.surveyPopupAnimation ?\r\n        // \"hide-\"+ this.config.display.surveyPopupAnimation : \"hide-right-left\";\r\n        // this.survey.surveyDisplay.surveyPosition =  this.config && this.config.display && this.config.display.surveyPosition ?\r\n        // this.config.display.surveyPosition : ( this.config.display.position.search(/bottom/gi)==-1?\"top\":\"bottom\" ) ;\r\n        switch (this.survey.surveyDisplay.position) {\r\n            case 'bottom right':\r\n                welcomePopupAnimation = 'hide-right-left';\r\n                break;\r\n            case 'right bottom':\r\n                welcomePopupAnimation = 'hide-right-left';\r\n                break;\r\n            case 'top right':\r\n                welcomePopupAnimation = 'hide-right-left';\r\n                break;\r\n            case 'right top':\r\n                welcomePopupAnimation = 'hide-right-left';\r\n                break;\r\n            case 'bottom left':\r\n                welcomePopupAnimation = 'hide-left-right';\r\n                break;\r\n            case 'left bottom':\r\n                welcomePopupAnimation = 'hide-left-right';\r\n                break;\r\n            case 'top left':\r\n                welcomePopupAnimation = 'hide-left-right';\r\n                break;\r\n            case 'left top':\r\n                welcomePopupAnimation = 'hide-left-right';\r\n                break;\r\n            default:\r\n                welcomePopupAnimation = 'hide-right-left';\r\n                break;\r\n        }\r\n        this.survey.surveyDisplay.welcomePopupAnimation = welcomePopupAnimation;\r\n        this.survey.surveyDisplay.surveyPosition = this.config.position.search(/bottom/gi) == -1 ? \"top\" : \"bottom\";\r\n    };\r\n    Survey.prototype.getSurveyData = function () {\r\n        var data = this.survey.fetchQuestions();\r\n        var self = this;\r\n        data.then(function (surveyData) {\r\n            self.debug ? console.log(surveyData) : '';\r\n            self.surveyData = surveyData;\r\n            //copy data.\r\n            var event = new CustomEvent(Constants_1.Constants.SURVEY_DATA_EVENT + \"-\" + self.surveyToken, { detail: JSON.parse(JSON.stringify(surveyData)) });\r\n            document.dispatchEvent(event);\r\n            self.dom.hideLoader();\r\n            self.initSurveyQuestions();\r\n        });\r\n    };\r\n    Survey.prototype.initSurvey = function () {\r\n        //if survey already run don't run?\r\n        //if default trigger initiated and survey already run then don't run.\r\n        var self = this;\r\n        // if(!self.surveyRunning) {\r\n        //   self.surveyRunning = true;\r\n        // }\r\n        self.surveyRunning = true;\r\n        self.dom = new DomSurvey_1.DomSurvey(this);\r\n        self.dom.setTheme(self.config.brandColor, this.config.keepAlive ? this.config.keepAlive : 0);\r\n        // self.survey.attachSurvey(this.surveyData);\r\n        // self.config.language = \"हिन्दी\";\r\n        self.config.language = \"default\";\r\n        self.survey.displayWelcomeQuestion();\r\n        self.dom.setupListeners();\r\n        // self.survey.displayLanguageSelector();\r\n        //survey start event.\r\n        // let onSurveyStartEvent = new CustomEvent(Constants.SURVEY_START_EVENT + \"-\" + this.surveyToken);\r\n        // document.dispatchEvent(onSurveyStartEvent);\r\n    };\r\n    Survey.prototype.initSurveyQuestions = function () {\r\n        var self = this;\r\n        self.survey.attachSurvey(this.surveyData);\r\n        // self.dom.setupListeners();\r\n        // self.config.language = \"हिन्दी\";\r\n        self.config.language = \"default\";\r\n        // self.survey.displayLanguageSelector();\r\n        //survey start event.\r\n        this.dom.initSurveyDom();\r\n        var onSurveyStartEvent = new CustomEvent(Constants_1.Constants.SURVEY_START_EVENT + \"-\" + this.surveyToken);\r\n        document.dispatchEvent(onSurveyStartEvent);\r\n    };\r\n    Survey.prototype.on = function (type, callback) {\r\n        document.addEventListener(type + \"-\" + this.surveyToken, function (e) {\r\n            callback(e.detail);\r\n        });\r\n    };\r\n    Survey.prototype.show = function () {\r\n        //do show and hide things.\r\n        SurveyManager_1.SurveyManager.setSurveyRunning();\r\n        //show survey\r\n        this.setupSurvey();\r\n    };\r\n    Survey.prototype.hide = function () {\r\n        SurveyManager_1.SurveyManager.unsetSurveyRunning();\r\n        this.survey.destroy();\r\n    };\r\n    Survey.prototype.destroy = function () {\r\n        //remove all listeners?\r\n        SurveyManager_1.SurveyManager.unsetSurveyRunning();\r\n        this.survey.destroy();\r\n    };\r\n    Survey.prototype.prefill = function (questionId, answer) {\r\n        //save this in this.surveyHandler\r\n        // this.survey.fillPrefillQuestionObject(questionId, answerObject);\r\n        this.survey.fillPrefillDirect(questionId, answer);\r\n    };\r\n    Survey.prototype.fillPrefill = function (questionTag, answer) {\r\n        //save this in this.surveyHandler\r\n        this.survey.fillPrefill(questionTag, answer);\r\n    };\r\n    Survey.prototype.fillPrefillByNote = function (questionNote, answer) {\r\n        this.survey.fillPrefillByNote(questionNote, answer);\r\n    };\r\n    Survey.prototype.trigger = function (type, target) {\r\n        var self = this;\r\n        switch (type) {\r\n            case 'click':\r\n                this.triggers.enableClickTrigger(target, function () {\r\n                    // self.initSurvey();\r\n                    // Scrollbar.initAll();\r\n                    // self.slider = new Slider();\r\n                    // self.setupSurvey();\r\n                    SurveyManager_1.SurveyManager.addSurvey(self.surveyToken);\r\n                });\r\n                break;\r\n            case 'page-count':\r\n                var count = parseInt(target);\r\n                this.triggers.enablePageCountTrigger(count);\r\n                break;\r\n            case 'site-count':\r\n                var count2 = parseInt(target);\r\n                this.triggers.enableSiteCountTrigger(count2);\r\n                break;\r\n            case 'page-time':\r\n                this.triggers.enablePageTimeTrigger(parseInt(target));\r\n                break;\r\n            case 'site-time':\r\n                this.triggers.enableSiteTimeTrigger(parseInt(target));\r\n                break;\r\n            case 'url-match':\r\n                this.triggers.enablePopUpByURLPatternTrigger(target);\r\n                break;\r\n            case 'url-not-match':\r\n                this.triggers.enablePopUpByNotURLPatternTrigger(target);\r\n                break;\r\n            case 'utm-match':\r\n                this.triggers.enablePopUpByUTMPatternTrigger(target);\r\n                break;\r\n            case 'scroll-pixels':\r\n                this.triggers.enableScrollPixelsTrigger(parseInt(target));\r\n                break;\r\n            case 'launch':\r\n                SurveyManager_1.SurveyManager.addSurvey(self.surveyToken);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n    return Survey;\r\n}());\r\nexports.Survey = Survey;\r\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// import 'whatwg-fetch';\r\nvar Config_1 = __webpack_require__(4);\r\nvar Request_1 = __webpack_require__(5);\r\nvar templates_1 = __webpack_require__(6);\r\nvar DomUtilities_1 = __webpack_require__(0);\r\nvar ConditionalTextFilter_1 = __webpack_require__(43);\r\nvar Constants_1 = __webpack_require__(1);\r\nvar LanguageTextFilter_1 = __webpack_require__(7);\r\nvar Select_1 = __webpack_require__(8);\r\nvar Cookie_1 = __webpack_require__(2);\r\nvar ConditionalFlowFilter_1 = __webpack_require__(9);\r\nvar SurveyHandler = /** @class */ (function () {\r\n    // isPartialAvailable : Boolean;\r\n    function SurveyHandler(ccsdk) {\r\n        var _this = this;\r\n        this.answers = {};\r\n        this.surveyAnswers = {};\r\n        this.surveyToken = ccsdk.surveyToken;\r\n        this.surveyData = {};\r\n        this.surveyDisplay = {\r\n            'position': '',\r\n            'surveyPosition': '',\r\n            'welcomePopupAnimation': '',\r\n            'surveyPopupAnimation': '',\r\n        };\r\n        this.ccsdk = ccsdk;\r\n        this.domListeners = [];\r\n        this.questions = [];\r\n        this.questionsToDisplay = [];\r\n        this.prefillQuestions = [];\r\n        this.conditionalQuestions = [];\r\n        this.prefillResponses = [];\r\n        this.prefillWithTags = {};\r\n        this.prefillWithNote = {};\r\n        this.prefillDirect = {};\r\n        this.answers = {};\r\n        this.util = new DomUtilities_1.DomUtilities();\r\n        this.dom = ccsdk.dom;\r\n        this.displayThankYouCb = function (e) {\r\n            var thankyouHtml = templates_1.templates.thankyou;\r\n            // thankyouHtml = thankyouHtml.replace(\"{{question}}\", this.surveyData.thankyouText);\r\n            // thankyouHtml = thankyouHtml.replace(\"{{question}}\", LanguageTextFilter.translateMessages(this, \"thankyouText\"));\r\n            var thankyouText = _this.ccsdk.config.thankyouText ? _this.ccsdk.config.thankyouText : (_this.surveyData.thankyouText ? _this.surveyData.thankyouText : 'Thank You');\r\n            var startText = _this.ccsdk.config.startButtonText ? _this.ccsdk.config.startButtonText : 'Start';\r\n            thankyouHtml = thankyouHtml.replace(\"{{question}}\", thankyouText);\r\n            thankyouHtml = thankyouHtml.replace(\"{{button}}\", startText);\r\n            _this.ccsdk.dom.replaceInQuestionsContainer(thankyouHtml);\r\n            //TODO : Fix this Add class not working???\r\n            var thankyouContainer = _this.util.get(\"#cc-thankyou-container\");\r\n            window.ccsdkDebug ? console.log(thankyouContainer) : '';\r\n            _this.util.addClass(thankyouContainer[0], 'show-thankyou-slide');\r\n            var onSurveyEndEvent = new CustomEvent(Constants_1.Constants.SURVEY_END_EVENT + \"-\" + _this.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyEndEvent);\r\n            //set done cookie for 30 days.\r\n            Cookie_1.Cookie.set(_this.surveyToken + '-finish', 'true', 30, '/');\r\n            setTimeout(function () {\r\n                _this.destroy();\r\n            }, 2000);\r\n        };\r\n        this.destroySurveyCb = function (e) {\r\n            var self = _this;\r\n            //send end survey event.\r\n            var onSurveyEndEvent = new CustomEvent(Constants_1.Constants.SURVEY_END_EVENT + \"-\" + _this.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyEndEvent);\r\n            self.destroy();\r\n        };\r\n        this.acceptAnswersCb = function (e) {\r\n            var self = _this;\r\n            // (window as any).ccsdkDebug?console.log(self):'';\r\n            // (window as any).ccsdkDebug?console.log('question answered',e:'')\r\n            var data = e.detail;\r\n            var response = {};\r\n            response.questionId = data.questionId;\r\n            switch (data.type) {\r\n                case 'scale':\r\n                    response.text = null;\r\n                    response.number = Number(data.data.number);\r\n                    self.postPartialAnswer(data.index, response);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'nps':\r\n                    response.text = null;\r\n                    response.number = Number(data.data.number);\r\n                    self.postPartialAnswer(data.index, response);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'radio':\r\n                    response.text = null;\r\n                    response.number = Number(data.data.number);\r\n                    self.postPartialAnswer(data.index, response);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'radioImage':\r\n                    response.text = data.data.text;\r\n                    response.number = null;\r\n                    self.postPartialAnswer(data.index, response);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'smile':\r\n                    response.text = null;\r\n                    response.number = Number(data.data.number);\r\n                    self.postPartialAnswer(data.index, response);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'star':\r\n                    response.text = null;\r\n                    response.number = Number(data.data.number);\r\n                    self.postPartialAnswer(data.index, response);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'multiline':\r\n                    response.text = data.data.text;\r\n                    response.number = null;\r\n                    // (window as any).ccsdkDebug?console.log(data):'';\r\n                    self.postPartialAnswer(data.index, response);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    self.ccsdk.dom.setQIndex(data.index);\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'singleline':\r\n                    response.text = data.data.text;\r\n                    response.number = null;\r\n                    // (window as any).ccsdkDebug?console.log(data):'';\r\n                    self.postPartialAnswer(data.index, response);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    self.ccsdk.dom.setQIndex(data.index);\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'number':\r\n                    response.text = null;\r\n                    response.number = Number(data.data.number);\r\n                    // (window as any).ccsdkDebug?console.log(data):'';\r\n                    self.postPartialAnswer(data.index, response);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    self.ccsdk.dom.setQIndex(data.index);\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'checkbox':\r\n                    response.text = data.data.text;\r\n                    response.number = null;\r\n                    // (window as any).ccsdkDebug?console.log(data):'';\r\n                    self.postPartialAnswer(data.index, response);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    self.ccsdk.dom.setQIndex(data.index);\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'select':\r\n                    response.text = data.data.text;\r\n                    response.number = null;\r\n                    // (window as any).ccsdkDebug?console.log(data):'';\r\n                    self.postPartialAnswer(data.index, response);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    self.ccsdk.dom.setQIndex(data.index);\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                case 'slider':\r\n                    response.text = data.data.text;\r\n                    response.number = Number(data.data.number);\r\n                    // (window as any).ccsdkDebug?console.log(data):'';\r\n                    self.postPartialAnswer(data.index, response);\r\n                    self.ccsdk.dom.domSelectElements();\r\n                    self.ccsdk.dom.setQIndex(data.index);\r\n                    // self.ccsdk.dom.nextQuestion();\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        };\r\n    }\r\n    SurveyHandler.prototype.fetchQuestions = function () {\r\n        this.randomNumber = parseInt((String)(Math.random() * 1000));\r\n        var surveyUrl = Config_1.Config.SURVEY_BY_TOKEN.replace(\"{token}\", \"\" + this.surveyToken);\r\n        surveyUrl = surveyUrl.replace(\"{tabletId}\", \"\" + this.randomNumber);\r\n        surveyUrl = Config_1.Config.API_URL + surveyUrl;\r\n        var data = Request_1.RequestHelper.get(surveyUrl);\r\n        // (window as any).ccsdkDebug?console.log(data):'';\r\n        return data;\r\n        // this.surveyData = data.then(function();\r\n        // (window as any).ccsdkDebug?console.log(this.surveyData):'';\r\n    };\r\n    SurveyHandler.prototype.removeAnswer = function (questionId) {\r\n        delete this.answers[questionId];\r\n        delete this.surveyAnswers[questionId];\r\n    };\r\n    SurveyHandler.prototype.attachSurvey = function (surveyData) {\r\n        this.surveyData = surveyData;\r\n        this.setupSurveyContainer();\r\n        //clean survey\r\n        this.cleanSurvey();\r\n        this.displayQuestions();\r\n        this.displayThankYou();\r\n        this.destroySurvey();\r\n    };\r\n    SurveyHandler.prototype.cleanSurvey = function () {\r\n        this.questionsToDisplay = [];\r\n        this.answers = {};\r\n        this.surveyAnswers = {};\r\n        this.conditionalQuestions = [];\r\n    };\r\n    SurveyHandler.prototype.setupSurveyContainer = function () {\r\n        var surveyHtml = templates_1.templates.question_survey;\r\n        surveyHtml = surveyHtml.replace(\"{{surveyToken}}\", this.surveyToken);\r\n        surveyHtml = surveyHtml.replace(\"{{animation}}\", this.surveyDisplay.surveyPopupAnimation);\r\n        surveyHtml = surveyHtml.replace(/{{location}}/g, this.surveyDisplay.surveyPosition);\r\n        this.ccsdk.dom.appendInBody(surveyHtml);\r\n    };\r\n    SurveyHandler.prototype.displayQuestionSelector = function () {\r\n    };\r\n    SurveyHandler.prototype.displayWelcomeQuestion = function () {\r\n        //call this with true when welcome container is clicked.\r\n        // this.ccsdk.addThrottlingEntries(false);\r\n        var self = this;\r\n        var welcomeHtml = templates_1.templates.question_start;\r\n        welcomeHtml = welcomeHtml.replace(\"{{surveyToken}}\", this.surveyToken);\r\n        // welcomeHtml = welcomeHtml.replace(\"{{question}}\", this.surveyData.welcomeText);\r\n        var welcomeText = this.ccsdk.config.welcomeText ? this.ccsdk.config.welcomeText : 'Welcome';\r\n        welcomeHtml = welcomeHtml.replace(\"{{question}}\", welcomeText);\r\n        // welcomeHtml = welcomeHtml.replace(\"{{question}}\", LanguageTextFilter.translateMessages(this, \"welcomeText\"));\r\n        var startText = this.ccsdk.config.startButtonText ? this.ccsdk.config.startButtonText : 'Start';\r\n        welcomeHtml = welcomeHtml.replace(\"{{button}}\", startText);\r\n        welcomeHtml = welcomeHtml.replace(\"{{location}}\", this.surveyDisplay.position);\r\n        welcomeHtml = welcomeHtml.replace(\"{{animation}}\", this.surveyDisplay.welcomePopupAnimation);\r\n        // (window as any).ccsdkDebug?console.log(\"Appending in body\"):'';\r\n        this.ccsdk.dom.appendInBody(welcomeHtml);\r\n        this.ccsdk.dom.showWelcomeContainer();\r\n        if ((typeof this.ccsdk.config.keepAlive != undefined) && (this.ccsdk.config.keepAlive > 0)) {\r\n            this.welcomeQuestionDisplayTime = new Date();\r\n            this.welcomeInterval = setInterval(function () { self.checkWelcomeQuestionDisplay(self.ccsdk.config.keepAlive); }, 1000);\r\n        }\r\n        this.acceptAnswers();\r\n        // self.survey.displayLanguageSelector();\r\n    };\r\n    SurveyHandler.prototype.checkWelcomeQuestionDisplay = function (keepAlive) {\r\n        var self = this;\r\n        var now = new Date();\r\n        if (keepAlive) {\r\n            console.log((now.getTime() - this.welcomeQuestionDisplayTime.getTime()) / 1000);\r\n            if (keepAlive <= (now.getTime() - this.welcomeQuestionDisplayTime.getTime()) / 1000) {\r\n                self.killWelcomeQuestion();\r\n            }\r\n        }\r\n    };\r\n    SurveyHandler.prototype.killWelcomeQuestion = function () {\r\n        this.destroy();\r\n        clearInterval(this.welcomeInterval);\r\n    };\r\n    SurveyHandler.prototype.cancelKillWelcomeQuestion = function () {\r\n        clearInterval(this.welcomeInterval);\r\n    };\r\n    SurveyHandler.prototype.displayLanguageSelector = function () {\r\n        var self = this;\r\n        var options1;\r\n        var qId = 'languageSelector';\r\n        var cTemplate1 = templates_1.templates.language_selector;\r\n        options1 = this.util.generateLanguageSelectOptions([\"default\"].concat(Object.keys(this.surveyData.translated)));\r\n        cTemplate1 = cTemplate1.replace(/{{questionId}}/g, qId);\r\n        cTemplate1 = cTemplate1.replace(\"{{options}}\", options1);\r\n        cTemplate1 = cTemplate1.replace(\"{{requiredLabel}}\", true ? \"*\" : \"\");\r\n        this.ccsdk.dom.replaceInQuestionsContainer(cTemplate1);\r\n        var $questionContainer = document.\r\n            querySelectorAll(\".cc-questions-container\");\r\n        var $body = document.getElementsByTagName(\"body\")[0];\r\n        this.util.addClass($questionContainer[0].firstChild, 'show-slide');\r\n        this.languageSelect = new Select_1.Select(qId);\r\n        var submitBtn = document.querySelectorAll('.submit-icon');\r\n        this.util.removeClassAll(submitBtn, 'act-cc-button-next');\r\n        this.util.addClassAll(submitBtn, 'act-cc-button-lang-next');\r\n        this.languageSelect.init(qId);\r\n        var selectRes = '';\r\n        var ref = this.util.initListener('click', '#' + qId + \" .cc-select-options .cc-select-option\", function () {\r\n            self.ccsdk.debug ? console.log('languageSelectOption') : '';\r\n            selectRes = document.querySelectorAll('#' + qId + \" .cc-select-trigger\")[0].innerHTML;\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener($body, ref.type, ref.id, ref.cb);\r\n        var languageSelect = this.util.initListener(\"click\", \".act-cc-button-lang-next\", function () {\r\n            self.ccsdk.debug ? console.log('languageNext') : '';\r\n            self.ccsdk.config.language = \"default\";\r\n            self.ccsdk.config.language = selectRes; //language selection from menu then show first question\r\n            //set config rtl or ltr\r\n            var isRTL = /[\\u0600-\\u06FF]/.test(selectRes);\r\n            self.ccsdk.config.textDirection = isRTL ? 'rtl' : 'ltr';\r\n            self.ccsdk.setHtmlTextDirection();\r\n            self.util.removeClassAll(submitBtn, 'act-cc-button-lang-next');\r\n            self.util.addClassAll(submitBtn, 'act-cc-button-next');\r\n            self.ccsdk.dom.loadFirstQuestion(); // this.loadFirstQuestion();\r\n            self.postPrefillPartialAnswer();\r\n        });\r\n        this.domListeners.push(languageSelect);\r\n        languageSelect.internalHandler = this.util.listener($body, languageSelect.type, languageSelect.id, languageSelect.cb);\r\n        // this.util.addClass(thankyouContainer[0], 'show-thankyou-slide');\r\n        // this.ccsdk.dom.appendInBody(cTemplate1);\r\n        // this.ccsdk.dom.showLanguageSelector();\r\n        window.ccsdkDebug ? console.log(cTemplate1) : '';\r\n    };\r\n    SurveyHandler.prototype.displayThankYou = function () {\r\n        var self = this;\r\n        document.addEventListener('ccdone', this.displayThankYouCb);\r\n    };\r\n    SurveyHandler.prototype.displayQuestions = function () {\r\n        //check question is supported, based on question types.\r\n        //filter pre fill questions.\r\n        this.questions = this.surveyData.questions;\r\n        // this.questionsToDisplay = (this.surveyData.questions as any[]).filter(this.filterQuestions);\r\n        this.filterQuestions();\r\n        //sort questions and display them?\r\n        this.questionsToDisplay = this.questionsToDisplay.sort(this.questionCompare);\r\n        var ccSurvey;\r\n        ccSurvey = document.getElementsByClassName(\"cc-questions-container\");\r\n        // ccSurvey = ccSurvey[0];\r\n        var surveyObject = ccSurvey[0];\r\n        // (window as any).ccsdkDebug?console.log(this.questionsToDisplay):'';\r\n        //chec\r\n        //for now just do 1st question.\r\n        for (var _i = 0, _a = this.questionsToDisplay; _i < _a.length; _i++) {\r\n            var question = _a[_i];\r\n            if (this.checkConditionals(question)) {\r\n                var compiledTemplate = this.compileTemplate(question);\r\n                question.compiledTemplate = compiledTemplate;\r\n                // surveyObject.innerHTML += compiledTemplate;\r\n                //register handlers for onclick?\r\n            }\r\n            else {\r\n                if (this.isPrefillQuestion(question)) {\r\n                    this.prefillQuestions.push(question);\r\n                }\r\n            }\r\n            //else don't display it.\r\n        }\r\n        // (window as any).ccsdkDebug?console.log(surveyObject.innerHTML):'';\r\n        // this.postPartialAnswer(this.questionsToDisplay[0], \"test\");\r\n    };\r\n    SurveyHandler.prototype.getSurveyQuestions = function () {\r\n        return this.questionsToDisplay;\r\n    };\r\n    SurveyHandler.prototype.getAnswerForQuestionId = function (questionId) {\r\n        var answer = this.surveyAnswers[questionId];\r\n        if (typeof answer === 'undefined') {\r\n            for (var _i = 0, _a = this.prefillResponses; _i < _a.length; _i++) {\r\n                var response = _a[_i];\r\n                if (response.questionId == questionId) {\r\n                    return response;\r\n                }\r\n            }\r\n        }\r\n        return this.surveyAnswers[questionId];\r\n    };\r\n    SurveyHandler.prototype.acceptAnswers = function () {\r\n        var self = this;\r\n        // (window as any).ccsdkDebug?console.log('add question answered listener':'')\r\n        document.addEventListener('q-answered', this.acceptAnswersCb);\r\n    };\r\n    SurveyHandler.prototype.fillPrefillQuestionObject = function (id, response) {\r\n        var question = this.getQuestionById(id);\r\n        var responseStored = this.getPrefillResponseById(id);\r\n        if (responseStored != null) {\r\n            this.updatePrefillResponseById(id, response);\r\n        }\r\n        else {\r\n            this.prefillResponses.push(response);\r\n        }\r\n    };\r\n    SurveyHandler.prototype.fillPrefill = function (tag, value) {\r\n        this.prefillWithTags[tag.toLowerCase()] = value;\r\n        window.ccsdkDebug ? console.log('prefillByTag', this.prefillWithTags) : '';\r\n    };\r\n    SurveyHandler.prototype.fillPrefillByNote = function (note, value) {\r\n        this.prefillWithNote[note.toLowerCase()] = value;\r\n        window.ccsdkDebug ? console.log('prefillByNote', this.prefillWithNote) : '';\r\n    };\r\n    SurveyHandler.prototype.fillPrefillDirect = function (questionId, value) {\r\n        this.prefillDirect[questionId] = value;\r\n        window.ccsdkDebug ? console.log('prefillDirect', this.prefillDirect) : '';\r\n    };\r\n    SurveyHandler.prototype.fillPrefillQuestion = function (id, value, valueType) {\r\n        var question = this.getQuestionById(id);\r\n        console.log(this.questions);\r\n        var response;\r\n        var responseStored = this.getPrefillResponseById(id);\r\n        if (responseStored != null) {\r\n            response = responseStored;\r\n        }\r\n        else {\r\n            response = {\r\n                questionId: question.id,\r\n                questionText: question.text,\r\n                textInput: null,\r\n                numberInput: null\r\n            };\r\n        }\r\n        valueType = this.getAnswerTypeFromDisplayType(question.displayType);\r\n        if (valueType.toLowerCase() == \"number\") {\r\n            response.numberInput = value;\r\n        }\r\n        if (valueType.toLowerCase() == \"text\") {\r\n            response.textInput = value;\r\n        }\r\n        if (responseStored != null) {\r\n            this.updatePrefillResponseById(id, response);\r\n        }\r\n        else {\r\n            this.prefillResponses.push(response);\r\n        }\r\n    };\r\n    SurveyHandler.prototype.postPrefillPartialAnswer = function () {\r\n        var surveyPartialUrl = Config_1.Config.SURVEY_PARTIAL_RESPONSE.replace(\"{id}\", this.surveyData.partialResponseId);\r\n        surveyPartialUrl = surveyPartialUrl.replace(\"{complete}\", \"false\");\r\n        surveyPartialUrl = surveyPartialUrl.replace(\"{tabletId}\", \"\" + this.randomNumber);\r\n        surveyPartialUrl = Config_1.Config.API_URL + surveyPartialUrl;\r\n        window.ccsdkDebug ? console.log(\"Posting Prefill Responses to Server\") : '';\r\n        window.ccsdkDebug ? console.log(this.prefillResponses) : '';\r\n        if (typeof this.prefillResponses !== 'undefined' && this.prefillResponses.length > 0) {\r\n            return Request_1.RequestHelper.post(surveyPartialUrl, this.prefillResponses);\r\n        }\r\n        else {\r\n            console.log('No Prefill data');\r\n            return;\r\n        }\r\n    };\r\n    SurveyHandler.prototype.updatePrefillResponseById = function (id, resp) {\r\n        for (var _i = 0, _a = this.prefillResponses; _i < _a.length; _i++) {\r\n            var response = _a[_i];\r\n            if (response.questionId == id) {\r\n                response = resp;\r\n            }\r\n        }\r\n    };\r\n    SurveyHandler.prototype.getPrefillResponseById = function (id) {\r\n        for (var _i = 0, _a = this.prefillResponses; _i < _a.length; _i++) {\r\n            var response = _a[_i];\r\n            if (response.questionId == id) {\r\n                return response;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    SurveyHandler.prototype.getQuestionById = function (id) {\r\n        for (var _i = 0, _a = this.questions; _i < _a.length; _i++) {\r\n            var question = _a[_i];\r\n            if (question.id == id) {\r\n                return question;\r\n            }\r\n        }\r\n    };\r\n    SurveyHandler.prototype.postPartialAnswer = function (index, response) {\r\n        // let data = new FormData();\r\n        //in case of file.\r\n        // let input = document.querySelector('input[type=\"file\"]') ;\r\n        // data.append('file', input.files[0]);\r\n        var question = this.questionsToDisplay[index];\r\n        if (typeof question === 'undefined') {\r\n            //now?\r\n            // return (window as any).ccsdkDebug?console.log(\"No Partial Remaining\"):'';\r\n        }\r\n        var data = {\r\n            comparator: 0,\r\n            questionId: question.id,\r\n            questionText: question.text,\r\n            textInput: response.text,\r\n            numberInput: response.number\r\n        };\r\n        // if(this.isPartialAvailable == false) {\r\n        //   this.answers.push(data);\r\n        //   return;\r\n        // }\r\n        // (window as any).ccsdkDebug?console.log(\"Submitting for : \" + index):'';\r\n        var surveyPartialUrl = Config_1.Config.SURVEY_PARTIAL_RESPONSE.replace(\"{id}\", this.surveyData.partialResponseId);\r\n        //if this is the last of displayed question\r\n        window.ccsdkDebug ? console.log(\"partial response\", question.id == this.questionsToDisplay[this.questionsToDisplay.length - 1].id) : '';\r\n        if (question.id == this.questionsToDisplay[this.questionsToDisplay.length - 1].id) {\r\n            surveyPartialUrl = surveyPartialUrl.replace(\"{complete}\", \"true\");\r\n        }\r\n        else {\r\n            surveyPartialUrl = surveyPartialUrl.replace(\"{complete}\", \"false\");\r\n        }\r\n        surveyPartialUrl = surveyPartialUrl.replace(\"{tabletId}\", \"\" + this.randomNumber);\r\n        surveyPartialUrl = Config_1.Config.API_URL + surveyPartialUrl;\r\n        //add partial answer to main answer\r\n        this.surveyAnswers[question.id] = data;\r\n        data = [data];\r\n        // let result = RequestHelper.post(surveyPartialUrl, \"[\" + JSON.stringify(data) + \"]\");\r\n        var onSurveyAnswerEvent = new CustomEvent(Constants_1.Constants.SURVEY_ANSWER_EVENT + \"-\" + this.surveyToken);\r\n        document.dispatchEvent(onSurveyAnswerEvent);\r\n        if (question.id == this.questionsToDisplay[this.questionsToDisplay.length - 1].id) {\r\n            //last question\r\n            var postSurveyFinalUrl = Config_1.Config.POST_SURVEY_FINAL.replace(\"{tokenId}\", this.ccsdk.surveyToken);\r\n            postSurveyFinalUrl = Config_1.Config.API_URL + postSurveyFinalUrl;\r\n            Request_1.RequestHelper.post(surveyPartialUrl, data);\r\n            var answersAll = [];\r\n            for (var answer in this.surveyAnswers) {\r\n                answersAll.push(this.surveyAnswers[answer]);\r\n            }\r\n            var finalData = {\r\n                id: this.ccsdk.surveyToken,\r\n                user: this.ccsdk.config.username,\r\n                locationId: null,\r\n                responses: answersAll,\r\n                nps: 0,\r\n                surveyClient: Constants_1.Constants.SURVEY_CLIENT,\r\n                responseDuration: 0\r\n            };\r\n            return Request_1.RequestHelper.post(postSurveyFinalUrl, finalData);\r\n        }\r\n        else {\r\n            return Request_1.RequestHelper.post(surveyPartialUrl, data);\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * check if conditions are satsified which are required to display question?\r\n     *\r\n     * @param {any} question\r\n     * @memberof Survey\r\n     */\r\n    SurveyHandler.prototype.checkConditionals = function (question) {\r\n        return true;\r\n    };\r\n    SurveyHandler.prototype.compileTemplate = function (question) {\r\n        var self = this;\r\n        //get question type\r\n        var questionTemplate;\r\n        // (window as any).ccsdkDebug?console.log(question):'';\r\n        if (question != 'undefined') {\r\n            switch (question.displayType) {\r\n                case \"Slider\":\r\n                    var opt = question.multiSelect[0].split(\"-\");\r\n                    var optMin = opt[0].split(\";\");\r\n                    var optMax = opt[1].split(\";\");\r\n                    //get text question template and compile it.\r\n                    questionTemplate = templates_1.templates.question_slider;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{min}}/g, optMin[0]);\r\n                    if (optMin[1]) {\r\n                        questionTemplate = questionTemplate.replace(/{{minLabel}}/g, optMin[1] + \"-\");\r\n                    }\r\n                    else {\r\n                        questionTemplate = questionTemplate.replace(/{{minLabel}}/g, \"\");\r\n                    }\r\n                    questionTemplate = questionTemplate.replace(/{{max}}/g, optMax[0]);\r\n                    if (optMax[1]) {\r\n                        questionTemplate = questionTemplate.replace(/{{maxLabel}}/g, optMax[1] + \"-\");\r\n                    }\r\n                    else {\r\n                        questionTemplate = questionTemplate.replace(/{{maxLabel}}/g, \"\");\r\n                    }\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    break;\r\n                case \"Scale\":\r\n                    //get text question template and compile it.\r\n                    window.ccsdkDebug ? console.log(question.questionTags) : '';\r\n                    if (question.questionTags.includes(\"NPS\")) {\r\n                        questionTemplate = templates_1.templates.question_nps;\r\n                        questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                        questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                        questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                        questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    }\r\n                    else if (question.questionTags.includes(\"CSAT\")) {\r\n                        if (question.questionTags.includes(\"csat_satisfaction_5\")) {\r\n                            questionTemplate = templates_1.templates.question_csat_satisfaction_5;\r\n                        }\r\n                        else if (question.questionTags.includes(\"csat_agreement_5\")) {\r\n                            questionTemplate = templates_1.templates.question_csat_agreement_5;\r\n                        }\r\n                        questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                        questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                        questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                        questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    }\r\n                    else {\r\n                        var tileColor = '';\r\n                        var style = '';\r\n                        if (question.presentationMode != null && question.presentationMode.includes(\"Color\")) {\r\n                            tileColor = question.presentationMode.split(':')[1];\r\n                            var tileColorDark = this.util.shadeBlendConvert(-0.3, tileColor, undefined);\r\n                            style = '\\\n                <style>\\\n                #id' + question.id + ' .option-number-item.option-scale{\\\n                  background-color : ' + tileColor + ';\\\n                }\\\n                #id' + question.id + ' .option-number-item.option-scale:hover,\\\n                #id' + question.id + ' .option-number-item.option-scale.selected{\\\n                  background-color : ' + tileColorDark + ';\\\n                }\\\n                </style>\\\n              ';\r\n                        }\r\n                        questionTemplate = templates_1.templates.question_scale;\r\n                        questionTemplate = questionTemplate.replace(/{{style}}/g, style);\r\n                        questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                        questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                        questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                        questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                        //construct NPS scale here....\r\n                        var startRange = 0.0;\r\n                        var endRange = 10.0;\r\n                        var options = \"\";\r\n                        var startRangeLabel_1 = \"\";\r\n                        // let startRangeLabel = \"\";\r\n                        // let endRangeLabel = \"Very likely\";\r\n                        var endRangeLabel_1 = \"\";\r\n                        var displayLegend = LanguageTextFilter_1.LanguageTextFilter.translateDisplayLegend(this, question);\r\n                        if (displayLegend) {\r\n                            if (displayLegend.length > 0) {\r\n                                startRangeLabel_1 = displayLegend[0] ? displayLegend[0] : null;\r\n                                endRangeLabel_1 = displayLegend[1] ? displayLegend[1] : null;\r\n                            }\r\n                        }\r\n                        if (question.multiSelect.length > 0) {\r\n                            startRange = parseFloat(question.multiSelect[0].split(\"-\")[0]);\r\n                            if (startRangeLabel_1 == null) {\r\n                                startRangeLabel_1 = question.multiSelect[0].split(\"-\")[0].split(\";\")[1];\r\n                            }\r\n                            endRange = parseFloat(question.multiSelect[0].split(\"-\")[1]);\r\n                            if (endRangeLabel_1 == null) {\r\n                                endRangeLabel_1 = question.multiSelect[0].split(\"-\")[1].split(\";\")[1];\r\n                            }\r\n                        }\r\n                        startRangeLabel_1 = startRangeLabel_1 == null ? \"\" : startRangeLabel_1;\r\n                        endRangeLabel_1 = endRangeLabel_1 == null ? \"\" : endRangeLabel_1;\r\n                        var mobileImageUrl = '';\r\n                        var imageVisibility010 = 'hide';\r\n                        var imageVisibility110 = 'hide';\r\n                        var scaleVisibility = 'show-inline';\r\n                        var scaleImageContainer = '';\r\n                        if (startRange == 0 && endRange == 10) {\r\n                            mobileImageUrl = \"https://cx.getcloudcherry.com/microsurvey-assets/scale-0-10-neutral.svg\";\r\n                            imageVisibility010 = 'show';\r\n                            imageVisibility110 = 'hide';\r\n                            scaleVisibility = 'hide';\r\n                            scaleImageContainer = 'scale-image-container';\r\n                        }\r\n                        else if (startRange == 1 && endRange == 10) {\r\n                            mobileImageUrl = \"https://cx.getcloudcherry.com/microsurvey-assets/scale-1-10-neutral.svg\";\r\n                            imageVisibility010 = 'hide';\r\n                            imageVisibility110 = 'show';\r\n                            scaleVisibility = 'hide';\r\n                            scaleImageContainer = 'scale-image-container';\r\n                        }\r\n                        console.log('scale', startRange, endRange);\r\n                        var divider = 1;\r\n                        if (endRange < 11) {\r\n                        }\r\n                        else {\r\n                            divider = (endRange - startRange) / 10.0;\r\n                        }\r\n                        var initial = 0.0;\r\n                        var optionStyle = '';\r\n                        console.log(window.isMobile);\r\n                        if (window.isMobile) {\r\n                            if (endRange > 6 && endRange < 11) {\r\n                                optionStyle = 'width:' + ((100 / (endRange - startRange + 1)) - .5) + '%';\r\n                            }\r\n                        }\r\n                        else {\r\n                            imageVisibility010 = 'hide';\r\n                            imageVisibility110 = 'hide';\r\n                            scaleVisibility = 'show-inline';\r\n                            scaleImageContainer = '';\r\n                        }\r\n                        for (var initial_1 = startRange; initial_1 <= endRange; initial_1 += divider) {\r\n                            options += '<span data-rating=\"' + initial_1 + '\" class=\"option-number-item option-scale ' + scaleVisibility + '\" style=\"' + optionStyle + '\">' + initial_1 + '</span>';\r\n                        }\r\n                        if ((endRange - startRange + 1) < 5) {\r\n                            var oleft = document.querySelectorAll(\".option-left-rating-text\")[0];\r\n                            var oright = document.querySelectorAll(\".option-right-rating-text\")[0];\r\n                            var optionLeftExtraClass = 'option-left-rating-text-small-container';\r\n                            var optionRightExtraClass = 'option-right-rating-text-small-container';\r\n                        }\r\n                        questionTemplate = questionTemplate.replace(\"{{optionsRange}}\", options);\r\n                        questionTemplate = questionTemplate.replace(/{{optionLeftExtraClass}}/g, optionLeftExtraClass);\r\n                        questionTemplate = questionTemplate.replace(/{{optionRightExtraClass}}/g, optionRightExtraClass);\r\n                        questionTemplate = questionTemplate.replace(\"{{leftLabel}}\", startRangeLabel_1);\r\n                        questionTemplate = questionTemplate.replace(\"{{rightLabel}}\", endRangeLabel_1);\r\n                        questionTemplate = questionTemplate.replace(/{{mobileImageUrl}}/g, mobileImageUrl);\r\n                        questionTemplate = questionTemplate.replace(\"{{imageVisibility010}}\", imageVisibility010);\r\n                        questionTemplate = questionTemplate.replace(\"{{imageVisibility110}}\", imageVisibility110);\r\n                        questionTemplate = questionTemplate.replace(\"{{scaleImageContainer}}\", scaleImageContainer);\r\n                    }\r\n                    break;\r\n                case \"Text\":\r\n                    //get text question template and compile it.\r\n                    questionTemplate = templates_1.templates.question_text;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    questionTemplate = questionTemplate.replace(\"{{validationHint}}\", question.validationHint ? question.validationHint : \"\");\r\n                    break;\r\n                case \"Number\":\r\n                    //get text question template and compile it.\r\n                    questionTemplate = templates_1.templates.question_number;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    questionTemplate = questionTemplate.replace(\"{{validationHint}}\", question.validationHint ? question.validationHint : \"\");\r\n                    break;\r\n                case \"MultilineText\":\r\n                    //get text question template and compile it.\r\n                    questionTemplate = templates_1.templates.question_multi_line_text;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    questionTemplate = questionTemplate.replace(\"{{validationHint}}\", question.validationHint ? question.validationHint : \"\");\r\n                    break;\r\n                case \"MultiSelect\":\r\n                    var acTemplate = void 0;\r\n                    var multiSelect1 = void 0;\r\n                    //get text question template and compile it.\r\n                    multiSelect1 = Array.prototype.slice.call(LanguageTextFilter_1.LanguageTextFilter.translateMultiSelect(this, question));\r\n                    if (question.presentationMode == 'Invert') {\r\n                        // console.log('selection option before reverse', multiSelect1);\r\n                        multiSelect1.reverse();\r\n                        // console.log('selection option after reverse', multiSelect1);\r\n                        // console.log('selection api option', question.multiSelect);\r\n                    }\r\n                    //get text question template and compile it.\r\n                    if (((question.displayStyle == 'radiobutton/checkbox') || (question.displayStyle == 'icon')) && (multiSelect1.length < 6)) {\r\n                        // (window as any).ccsdkDebug?console.log(question.displayStyle):'';\r\n                        var checkOptionContainsImage = self.util.checkOptionContainsImage(multiSelect1);\r\n                        // (window as any).ccsdkDebug?console.log('select radio image',checkOptionContainsImage):'';\r\n                        if (checkOptionContainsImage\r\n                            && (((multiSelect1.length > 0) && multiSelect1[0].includes(\"Male\"))\r\n                                || ((multiSelect1.length > 0) && multiSelect1[0].includes(\"Yes\"))\r\n                                || ((multiSelect1.length > 1) && multiSelect1[1].includes(\"Yes\")))) {\r\n                            // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n                            acTemplate = templates_1.templates.question_checkbox;\r\n                            var options2_1 = self.util.generateCheckboxImageOptions(multiSelect1, question.id);\r\n                            // (window as any).ccsdkDebug?console.log(options2):'';\r\n                            questionTemplate = acTemplate;\r\n                            questionTemplate = questionTemplate.replace(/{{options}}/g, options2_1);\r\n                            acTemplate = questionTemplate;\r\n                        }\r\n                        else if (checkOptionContainsImage) {\r\n                            // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n                            acTemplate = templates_1.templates.question_checkbox;\r\n                            var options2_2 = self.util.generateCheckboxIgnoreImageOptions(multiSelect1, question.id);\r\n                            // (window as any).ccsdkDebug?console.log(options2):'';\r\n                            questionTemplate = acTemplate;\r\n                            questionTemplate = questionTemplate.replace(/{{options}}/g, options2_2);\r\n                            acTemplate = questionTemplate;\r\n                        }\r\n                        else {\r\n                            var options3 = self.util.generateCheckboxOptions(multiSelect1, question.id);\r\n                            // (window as any).ccsdkDebug?console.log(options2):'';\r\n                            acTemplate = templates_1.templates.question_checkbox;\r\n                            questionTemplate = acTemplate.replace(/{{options}}/g, options3);\r\n                            acTemplate = questionTemplate;\r\n                        }\r\n                    }\r\n                    else {\r\n                        // (window as any).ccsdkDebug?console.log('select type 3'):'';\r\n                        acTemplate = templates_1.templates.question_multi_select;\r\n                        // acTemplate = templates.question_select;\r\n                        var options3 = self.util.generateSelectOptions(multiSelect1);\r\n                        if (!self.ccsdk.config.language.includes('Default')) {\r\n                            if (typeof question.translated !== 'undefined'\r\n                                && question.translated != null\r\n                                && typeof question.translated[self.ccsdk.config.language] !== 'undefined'\r\n                                && question.translated[self.ccsdk.config.language].multiSelect !== 'undefined'\r\n                                && question.translated[self.ccsdk.config.language].multiSelect.length > 0) {\r\n                                multiSelect1 = Array.prototype.slice.call(question.translated[self.ccsdk.config.language].multiSelect);\r\n                                if (question.presentationMode == 'Invert') {\r\n                                    multiSelect1.reverse();\r\n                                }\r\n                                options3 = self.util.generateSelectOptions(multiSelect1);\r\n                            }\r\n                        }\r\n                        // questionTemplate = acTemplate;\r\n                        self.ccsdk.debug ? console.log(options3) : '';\r\n                        questionTemplate = acTemplate.replace(/{{options}}/g, options3);\r\n                        acTemplate = questionTemplate;\r\n                    }\r\n                    questionTemplate = acTemplate;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    break;\r\n                case \"Select\":\r\n                    var acTemplate1 = void 0;\r\n                    var acTemplate2 = void 0;\r\n                    var options1 = void 0;\r\n                    var options2 = void 0;\r\n                    var multiSelect = void 0;\r\n                    //get text question template and compile it.\r\n                    multiSelect = Array.prototype.slice.call(LanguageTextFilter_1.LanguageTextFilter.translateMultiSelect(this, question));\r\n                    if (question.presentationMode == 'Invert') {\r\n                        // console.log('selection option before reverse', multiSelect);\r\n                        multiSelect.reverse();\r\n                        // console.log('selection option after reverse', multiSelect);\r\n                        // console.log('selection api option', question.multiSelect);\r\n                    }\r\n                    if ((question.displayStyle == 'radiobutton/checkbox') && (multiSelect.length < 6)) {\r\n                        // if(question.displayStyle == 'radiobutton/checkbox'){\r\n                        // (window as any).ccsdkDebug?console.log('select type 1'):'';\r\n                        // (window as any).ccsdkDebug?console.log(question.displayStyle):'';\r\n                        // acTemplate1 = templates.question_radio;\r\n                        // questionTemplate = acTemplate1;\r\n                        var checkOptionContainsImage = self.util.checkOptionContainsImage(multiSelect);\r\n                        // (window as any).ccsdkDebug?console.log('select radio image',checkOptionContainsImage):'';\r\n                        if (checkOptionContainsImage\r\n                            && (((multiSelect.length > 0) && multiSelect[0].includes(\"Male\"))\r\n                                || ((multiSelect.length > 0) && multiSelect[0].includes(\"Yes\"))\r\n                                || ((multiSelect.length > 1) && multiSelect[1].includes(\"Yes\")))) {\r\n                            // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n                            acTemplate2 = templates_1.templates.question_radio_image;\r\n                            options2 = self.util.generateRadioImageOptions(multiSelect, question.id);\r\n                            // (window as any).ccsdkDebug?console.log(options2):'';\r\n                            questionTemplate = acTemplate2;\r\n                            questionTemplate = questionTemplate.replace(/{{options}}/g, options2);\r\n                        }\r\n                        else if (checkOptionContainsImage) {\r\n                            // (window as any).ccsdkDebug?console.log('select type 2'):'';\r\n                            acTemplate2 = templates_1.templates.question_radio_image;\r\n                            options2 = self.util.generateRadioIgnoreImageOptions(multiSelect, question.id);\r\n                            // (window as any).ccsdkDebug?console.log(options2):'';\r\n                            questionTemplate = acTemplate2;\r\n                            questionTemplate = questionTemplate.replace(/{{options}}/g, options2);\r\n                        }\r\n                        else {\r\n                            acTemplate1 = templates_1.templates.question_radio;\r\n                            questionTemplate = acTemplate1;\r\n                            options1 = self.util.generateRadioOptions(multiSelect, question.id);\r\n                            questionTemplate = questionTemplate.replace(\"{{options}}\", options1);\r\n                        }\r\n                    }\r\n                    else if ((question.displayStyle == 'icon') && (multiSelect.length < 6)) {\r\n                        acTemplate1 = templates_1.templates.question_radio;\r\n                        questionTemplate = acTemplate1;\r\n                        options1 = self.util.generateRadioOptions(multiSelect, question.id);\r\n                        questionTemplate = questionTemplate.replace(\"{{options}}\", options1);\r\n                    }\r\n                    else {\r\n                        // (window as any).ccsdkDebug?console.log('select type 3'):'';\r\n                        acTemplate1 = templates_1.templates.question_select;\r\n                        options1 = self.util.generateSelectOptions(multiSelect);\r\n                        if (!self.ccsdk.config.language.includes('Default')) {\r\n                            if (typeof question.translated !== 'undefined'\r\n                                && question.translated != null\r\n                                && typeof question.translated[self.ccsdk.config.language] !== 'undefined'\r\n                                && question.translated[self.ccsdk.config.language].multiSelect !== 'undefined'\r\n                                && question.translated[self.ccsdk.config.language].multiSelect.length > 0) {\r\n                                multiSelect = Array.prototype.slice.call(question.translated[self.ccsdk.config.language].multiSelect);\r\n                                if (question.presentationMode == 'Invert') {\r\n                                    multiSelect.reverse();\r\n                                }\r\n                                options1 = self.util.generateSelectOptions(multiSelect);\r\n                            }\r\n                        }\r\n                        questionTemplate = acTemplate1;\r\n                        questionTemplate = questionTemplate.replace(\"{{options}}\", options1);\r\n                    }\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    // (window as any).ccsdkDebug?console.log(questionTemplate):'';\r\n                    break;\r\n                case \"Smile-5\":\r\n                    //get text question template and compile it.\r\n                    if (question.presentationMode == \"Invert\") {\r\n                        questionTemplate = templates_1.templates.question_smile_5_inverted;\r\n                    }\r\n                    else {\r\n                        questionTemplate = templates_1.templates.question_smile_5;\r\n                    }\r\n                    // let startRangeLabel = \"Very unlikely\";\r\n                    // let endRangeLabel = \"Very likely\";\r\n                    var startRangeLabel = \"\";\r\n                    var endRangeLabel = \"\";\r\n                    var displayLegend2 = LanguageTextFilter_1.LanguageTextFilter.translateDisplayLegend(this, question);\r\n                    if (displayLegend2) {\r\n                        if (displayLegend2.length > 0) {\r\n                            startRangeLabel = displayLegend2[0] ? displayLegend2[0] : null;\r\n                            endRangeLabel = displayLegend2[1] ? displayLegend2[1] : null;\r\n                        }\r\n                    }\r\n                    startRangeLabel = startRangeLabel == null ? \"\" : startRangeLabel;\r\n                    endRangeLabel = endRangeLabel == null ? \"\" : endRangeLabel;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    questionTemplate = questionTemplate.replace(\"{{leftLabel}}\", startRangeLabel);\r\n                    questionTemplate = questionTemplate.replace(\"{{rightLabel}}\", endRangeLabel);\r\n                    break;\r\n                case \"Star-5\":\r\n                    //get text question template and compile it.\r\n                    var startRangeLabel1 = \"\";\r\n                    var endRangeLabel1 = \"\";\r\n                    var displayLegend3 = LanguageTextFilter_1.LanguageTextFilter.translateDisplayLegend(this, question);\r\n                    if (displayLegend3) {\r\n                        if (displayLegend3.length > 0) {\r\n                            startRangeLabel1 = displayLegend3[0] ? displayLegend3[0] : null;\r\n                            endRangeLabel1 = displayLegend3[1] ? displayLegend3[1] : null;\r\n                        }\r\n                    }\r\n                    startRangeLabel1 = startRangeLabel1 == null ? \"\" : startRangeLabel1;\r\n                    endRangeLabel1 = endRangeLabel1 == null ? \"\" : endRangeLabel1;\r\n                    questionTemplate = templates_1.templates.question_star_5;\r\n                    questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));\r\n                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\r\n                    questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\r\n                    questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\r\n                    questionTemplate = questionTemplate.replace(\"{{leftLabel}}\", startRangeLabel1);\r\n                    questionTemplate = questionTemplate.replace(\"{{rightLabel}}\", endRangeLabel1);\r\n                    break;\r\n            }\r\n        }\r\n        return questionTemplate;\r\n    };\r\n    SurveyHandler.prototype.questionCompare = function (a, b) {\r\n        return a.sequence - b.sequence;\r\n    };\r\n    SurveyHandler.prototype.getAnswerTypeFromDisplayType = function (displayType) {\r\n        // console.log('question type',displayType);\r\n        var type;\r\n        switch (displayType) {\r\n            case \"Slider\":\r\n                type = \"number\";\r\n                break;\r\n            case \"Scale\":\r\n                type = \"number\";\r\n                break;\r\n            case \"Text\":\r\n                type = \"text\";\r\n                break;\r\n            case \"Number\":\r\n                type = \"number\";\r\n                break;\r\n            case \"MultilineText\":\r\n                type = \"text\";\r\n                break;\r\n            case \"MultiSelect\":\r\n                type = \"text\";\r\n                break;\r\n            case \"Select\":\r\n                type = \"text\";\r\n                break;\r\n            case \"Smile-5\":\r\n                type = \"number\";\r\n                break;\r\n            case \"Star-5\":\r\n                type = \"number\";\r\n                break;\r\n            default:\r\n                type = \"text\";\r\n                break;\r\n        }\r\n        return type;\r\n    };\r\n    /**\r\n     *\r\n     * filterQuestions - filters questions so that we don't display the one which satisifes any of the following condition\r\n     *  isRetired = true\r\n     *  statffFill = true\r\n     *  apiFill = true\r\n     *  preFill = true\r\n     *\r\n     * @param {any} question\r\n     * @returns\r\n     * @memberof Survey\r\n     */\r\n    SurveyHandler.prototype.filterQuestions = function () {\r\n        var self = this;\r\n        for (var _i = 0, _a = this.questions; _i < _a.length; _i++) {\r\n            var question = _a[_i];\r\n            if (!question.isRetired) {\r\n                //filter out prefill question only if it is filled?.\r\n                // if(!this.isQuestionFilled(question)){\r\n                if (this.isPrefillTags(question)) {\r\n                    self.ccsdk.debug ? console.log(this.prefillResponses) : '';\r\n                    continue;\r\n                }\r\n                if (!(this.isPrefillQuestion(question))) {\r\n                    // if (this.isPrefillTags(question)) {\r\n                    //   self.ccsdk.debug ? console.log(this.prefillResponses) : '';\r\n                    //   continue;\r\n                    // }\r\n                    if (this.isPrefillNote(question)) {\r\n                        self.ccsdk.debug ? console.log(this.prefillResponses) : '';\r\n                        continue;\r\n                    }\r\n                    if (this.isPrefillDirect(question)) {\r\n                        self.ccsdk.debug ? console.log(this.prefillResponses) : '';\r\n                        continue;\r\n                    }\r\n                    if (question.conditionalFilter != null &&\r\n                        (question.conditionalFilter.filterquestions == null\r\n                            || question.conditionalFilter.filterquestions.length == 0)) {\r\n                        //check supported display types\r\n                        var supportedDisplayTypes = \"Slider, Scale, Text, Number, MultilineText, MultiSelect, Smile - 5, Star - 5\";\r\n                        if (supportedDisplayTypes.indexOf(question.displayType) > -1) {\r\n                            this.questionsToDisplay.push(question);\r\n                        }\r\n                    }\r\n                    else {\r\n                        //if conditions full filled, fill it in questionsToDisplay\r\n                        if (ConditionalFlowFilter_1.ConditionalFlowFilter.filterQuestion(this, question)) {\r\n                            //auto does that\r\n                        }\r\n                        else {\r\n                            this.conditionalQuestions.push(question);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    this.fillPrefillWithTags(question);\r\n                    this.fillPrefillWithNote(question);\r\n                    ConditionalFlowFilter_1.ConditionalFlowFilter.filterQuestion(this, question);\r\n                }\r\n                // }\r\n            }\r\n        }\r\n        //re condition questions.\r\n        for (var _b = 0, _c = this.questions; _b < _c.length; _b++) {\r\n            var question = _c[_b];\r\n            ConditionalFlowFilter_1.ConditionalFlowFilter.filterQuestion(this, question);\r\n        }\r\n        // console.log(this.conditionalQuestions);\r\n    };\r\n    SurveyHandler.prototype.isPrefillTags = function (question) {\r\n        if (typeof question.questionTags !== 'undefined' && question.questionTags.length > 0) {\r\n            for (var _i = 0, _a = question.questionTags; _i < _a.length; _i++) {\r\n                var tag = _a[_i];\r\n                switch (tag.toLowerCase()) {\r\n                    case \"screensize\":\r\n                        //add size to prefill array\r\n                        this.fillPrefillQuestion(question.id, \"Width:\" + window.innerWidth + \"px / Height:\" + window.innerHeight + \"px\", \"text\");\r\n                        return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    SurveyHandler.prototype.isPrefillNote = function (question) {\r\n        if (typeof question.note !== 'undefined'\r\n            && question.note != null\r\n            && question.note.length > 0\r\n            && this.prefillWithNote[question.note.toLowerCase()]) {\r\n            var type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n            this.fillPrefillQuestion(question.id, this.prefillWithNote[question.note.toLowerCase()], type);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    SurveyHandler.prototype.isPrefillDirect = function (question) {\r\n        if (typeof question !== 'undefined'\r\n            && this.prefillDirect[question.id]) {\r\n            var type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n            this.fillPrefillQuestion(question.id, this.prefillDirect[question.id], type);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    SurveyHandler.prototype.fillPrefillWithTags = function (question) {\r\n        // console.log(this.prefillWithTags);\r\n        if (typeof question.questionTags !== 'undefined' && question.questionTags.length > 0) {\r\n            for (var _i = 0, _a = question.questionTags; _i < _a.length; _i++) {\r\n                var tag = _a[_i];\r\n                if (typeof this.prefillWithTags[tag.toLowerCase()] !== 'undefined') {\r\n                    var type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n                    this.fillPrefillQuestion(question.id, this.prefillWithTags[tag.toLowerCase()], type);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    SurveyHandler.prototype.fillPrefillWithNote = function (question) {\r\n        if (typeof question.note !== 'undefined' && question.note != null && question.note.length > 0) {\r\n            if (typeof this.prefillWithNote[question.note.toLowerCase()] !== 'undefined') {\r\n                var type = this.getAnswerTypeFromDisplayType(question.displayType);\r\n                this.fillPrefillQuestion(question.id, this.prefillWithNote[question.note.toLowerCase()], type);\r\n            }\r\n        }\r\n    };\r\n    SurveyHandler.prototype.getConditionalSurveyQuestions = function () {\r\n        return this.conditionalQuestions;\r\n    };\r\n    SurveyHandler.prototype.isPrefillQuestion = function (question) {\r\n        if (question.apiFill == true) {\r\n            return true;\r\n        }\r\n        if (question.staffFill == true) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    SurveyHandler.prototype.isQuestionFilled = function (question) {\r\n        for (var _i = 0, _a = this.prefillResponses; _i < _a.length; _i++) {\r\n            var response = _a[_i];\r\n            if (response.questionId == question.questionId) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    SurveyHandler.prototype.destroySurvey = function () {\r\n        var self = this;\r\n        document.addEventListener('ccclose', this.destroySurveyCb);\r\n    };\r\n    SurveyHandler.prototype.destroy = function () {\r\n        var surveyContainer = this.ccsdk.dom.getSurveyContainer(this.surveyToken);\r\n        var welcomeContainer = this.ccsdk.dom.getWelcomeContainer(this.surveyToken);\r\n        if (typeof surveyContainer != 'undefined') {\r\n            this.util.remove(surveyContainer);\r\n        }\r\n        if (typeof welcomeContainer != 'undefined') {\r\n            this.util.remove(welcomeContainer);\r\n        }\r\n        document.removeEventListener('ccclose', this.destroySurveyCb);\r\n        document.removeEventListener('ccdone', this.displayThankYouCb);\r\n        document.removeEventListener('q-answered', this.acceptAnswersCb);\r\n        window.globalSurveyRunning = false;\r\n        var bodyElement = document.\r\n            getElementsByTagName(\"body\")[0];\r\n        this.util.removeClass(bodyElement, \"blurr\");\r\n    };\r\n    return SurveyHandler;\r\n}());\r\nexports.SurveyHandler = SurveyHandler;\r\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(14);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = __webpack_require__(16)(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../node_modules/rtl-css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./main.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../node_modules/rtl-css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./main.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(15)();\n// imports\n\n\n// module\nexports.push([module.i, typeof document !== 'undefined' && document.getElementsByTagName('html')[0].getAttribute('dir') === 'rtl' ? \"body{padding:0;font-family:open sans,sans-serif}body,ul{margin:0}ul{padding-right:0;list-style-type:none}a,a:focus,a:hover{text-decoration:none;color:inherit}*,:after,:before{box-sizing:border-box}p{color:inherit;margin:0}map area{outline:0;cursor:pointer}map area.selected{outline:0;outline-color:#0a2135;outline-width:0;outline-style:solid}map area:hover{outline:1}.cc-popup-container{background:#fff;box-shadow:0 0 4px 5px rgba(0,0,0,.05);font-family:open sans,sans-serif;position:fixed;text-align:center;max-width:500px;max-height:500px;z-index:1111;padding:10px}.cc-popup-container.bottom{margin-bottom:9px}.cc-popup-container.top{margin-top:9px}#cc-thankyou-container .cc-question-container__text,#cc-thankyou-container .cc-question-container__text p{width:400px;max-width:none;font-size:17px;color:#424242}.cc-message-box{position:relative;z-index:11}.cc-message-box__text{color:#424242;font-size:14px;font-weight:600;margin:0;padding:29px 14px 20px;vertical-align:middle}.cc-message-box__btn{background:#fdaf19;border-radius:100px;display:inline-block;font-size:15px;font-weight:700;height:32px;padding:6px 0;width:124px}.cc-popup-container .cc-popup-container__close{cursor:pointer;margin:4px;position:absolute;left:0;top:0;z-index:111}.cc-popup-container-2{height:144px;position:fixed;width:100%;z-index:1111}.cc-popup-container-2__icons{cursor:pointer;padding:8px;position:absolute;top:0;z-index:111}.top.cc-popup-container-2 .cc-popup-container-2__icons{padding-top:15px}.cc-popup-container-2__icons.cc-right-icon{left:0}.cc-popup-container-2__icons.cc-left-icon{right:0}.cc-popup-container__back{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);display:inline-block;width:21px;height:21px}.cc-question-container{margin-left:147px;padding:20px 20px 25px;position:absolute;text-align:center;width:calc(100% - 147px);z-index:11;top:0;right:0}.cc-question-container__text{color:#424242;display:inline-block;font-size:15px;font-weight:600;max-width:230px;padding:8px 0;text-align:center;vertical-align:middle;width:20%;position:relative}.cc-question-container__required,.cc-question-container__validation{position:absolute;top:-14px;font-size:11px;right:0;left:0;font-weight:400;color:#c1272d;display:none}.cc-question-container__required-label{display:inline-block;position:relative;top:-2px;right:-2px}.cc-question-container__content{display:inline-block;max-width:78%;vertical-align:middle;width:auto}.cc-question-container__list li{display:inline-block;padding-right:29px;vertical-align:middle}.cc-question-container__list li span{display:table-cell;font-size:15px;padding-right:15px;text-align:right;vertical-align:middle;width:125px}.cc-question-container__list li input{vertical-align:middle}.cc-question-container:before{content:\\\"\\\";display:inline-block;margin-left:-4px}.cc-question-container,.cc-question-container:before{height:100%;vertical-align:middle}.cc-questions-container{height:100%}p.cc-thankyou-powered{font-size:13px!important;color:#404040!important;font-style:italic;margin-top:4px}.cc-thankyou-powered .cc-thankyou-logo{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/cc-thankyou-logo.svg\\\");background-size:cover;margin-left:8px;display:inline-block;width:16px;height:16px}.multiline-box{background:#fff;border-radius:2px;border:1px solid #6d6d6d;font-family:Open Sans;font-size:15px;height:70px;margin:0 50px 0 0;min-width:600px;padding:2px 5px;resize:none}.multiline-box:focus{outline:0}.detail-box .cc-question-container__text p{font-size:13px;font-weight:700}.detail-box .cc-question-container__text span{display:inline-block;font-size:15px;font-weight:400}.detail-box .cc-question-container__text{height:56px}.detail-box[data-type=singleline] .cc-question-container__text{margin-left:20px}.detail-box .cc-question-container__content .form-control,.single-line .cc-question-container__content .form-control{background:transparent;border:none;border-bottom:1px solid #6d6d6d;font-family:open sans;font-size:15px;line-height:26px;outline:0;width:300px;margin-right:70px}.d-star-box.detail-box .cc-question-container__text{height:92px}.hl.dropdown{background-image:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/arrow-down.black.svg\\\");background-position:3%;background-repeat:no-repeat;border-bottom:1px solid #6d6d6d;display:inline-block;padding:5px;position:relative;text-align:right;width:300px}.drop-cc-question-container .cc-question-container__text{margin-left:20px}.form-control:focus{border-color:#fcaf18}.detail-box .cc-question-container__content{padding-right:0}.cc-big-list-container .cc-question-container__list{display:table;width:100%}.cc-big-list-container .cc-question-container__list li{display:table-cell;vertical-align:middle}.cc-thankyou-container{width:100%!important}.submit-icon{direction:rtl;position:absolute;left:0;top:0;bottom:0;margin:auto 0;z-index:11;margin-left:75px;font-size:16px;cursor:pointer;background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg width='47' height='47' viewBox='0 0 47 47' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Ctitle%3EGroup 16%3C/title%3E%3Cdefs%3E%3Ccircle id='b' cx='19.313' cy='19.313' r='19.313'/%3E%3Cfilter x='-18.1%25' y='-12.9%25' width='136.2%25' height='136.2%25' filterUnits='objectBoundingBox' id='a'%3E%3CfeOffset dy='2' in='SourceAlpha' result='shadowOffsetOuter1'/%3E%3CfeGaussianBlur stdDeviation='2' in='shadowOffsetOuter1' result='shadowBlurOuter1'/%3E%3CfeColorMatrix values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.116423234 0' in='shadowBlurOuter1'/%3E%3C/filter%3E%3C/defs%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg transform='translate(4 2)'%3E%3Cuse fill='%23000' filter='url(%23a)' xlink:href='%23b'/%3E%3Cuse xlink:href='%23b'/%3E%3C/g%3E%3Cg fill-rule='nonzero' fill='%23404041'%3E%3Cpath d='M23.167 13l-.993.993 7.308 7.309-7.308 7.308.993.993 8.302-8.301z'/%3E%3Cpath d='M16.993 13l-.993.993 7.308 7.309L16 28.61l.993.993 8.302-8.301z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\\\");width:47px;height:47px}@media (min-width:1000px){.cc-big-list-container .cc-question-container__list li span label{overflow:hidden;max-height:100px;display:block}.cc-question-container__content{max-height:100px}}@media (min-width:767px) and (max-width:1024px){.cc-popup-container-2{height:200px}.cc-big-list-container .cc-question-container__list,.cc-question-container__list{text-align:right}.cc-big-list-container .cc-question-container__list li,.cc-question-container__list li{display:inline-block;margin-bottom:15px;vertical-align:middle;width:49%}.cc-question-container__content{display:inline-block;width:45%}.multiline-box{min-width:100%;margin:0}.option-smile-box img,.option-star-box img{margin-left:11px!important}.cc-thankyou-container .cc-question-container__text,.cc-thankyou-container .cc-question-container__text p{width:100%!important;text-align:center;margin:0!important;padding:0;line-height:normal;height:auto}.cc-thankyou-container .cc-question-container__text{max-width:98%}}@media (min-width:1000px){.cc-question-container__text{max-height:110px;overflow:hidden}}@media (min-width:767px) and (max-width:992px){.cc-question-container{width:100%;margin:auto}.cc-question-container__text{width:24%;padding-left:20px;max-height:110px;overflow:hidden}.cc-question-container__content.rating-color{margin-right:0}.submit-icon{margin-left:40px!important}.cc-question-container__content.rating-color{margin-right:0!important}.cc-question-container__content{width:50%!important}}@media (max-width:767px){.cc-survey-container,.cc-survey-content{height:100%}.cc-popup-container-2{bottom:auto;height:100%;top:0}.cc-popup-container-2__icons.cc-right-icon{right:auto;left:0;padding:0}.cc-popup-container-2__icons.cc-left-icon{right:0;left:auto;padding:0}.cc-big-list-container .cc-question-container__list li{display:block}.radio-toggle--more-option li span{width:84%!important;padding-right:25px!important}.radio-toggle--more-option li{padding-left:0!important;display:block!important;padding-top:10px}.detail-box .cc-question-container__content{padding-right:0}.cc-question-container{bottom:75px;height:auto;right:0;padding:40px 20px;position:absolute;text-align:right;top:auto;width:100%}.cc-question-container__text{font-size:18px;margin-bottom:20px;max-width:400px;text-align:right;width:100%}.cc-question-container__content{display:block;max-width:100%;width:100%}.cc-question-container__list label{display:block}.cc-question-container__list li span{width:auto;padding-right:15px}.cc-question-container__list li{padding-right:0;margin-bottom:10px;display:block}.cc-popup-container-2__icons{margin:20px}.cc-popup-container-2__icons.left-icon{right:auto;left:0}.cc-popup-container-2__icons.right-icon{left:auto;right:0}.cc-popup-container__close{width:27px}.cc-question-container__content.rating-color{margin-right:0!important}.cc-question-container[data-type=nps] .cc-question-container__content,.cc-question-container[data-type=scale] .cc-question-container__content{width:100%!important}.multiline-box{height:150px;margin:0;min-width:100%;width:100%}.detail-box .cc-question-container__content .form-control,.hl.dropdown{width:100%}.detail-box .cc-question-container__text p{font-size:18px}.mobile-detail-box .cc-question-container__text{height:auto}.welcome-box .cc-question-container__text p{color:#fff}.cc-questions-container{height:100%;position:relative}}@media (max-width:767px){.detail-box .cc-question-container__content .form-control,.single-line .cc-question-container__content .form-control{margin-right:0}.submit-icon{position:absolute;right:20px;top:auto;bottom:30px;padding-left:0}.cc-popup-container{position:fixed;top:0;right:0;left:0;margin:0;width:100%;height:100%;max-width:100%;max-height:100%;text-align:right;background:transparent}.cc-popup-container .cc-message-box{position:absolute;bottom:20%}.cc-popup-container .cc-message-box .cc-message-box__text{font-size:20px}.cc-popup-container .cc-message-box .submit-icon{position:absolute;bottom:-100%;top:auto;right:0;margin:0 14px}.cc-popup-container .cc-popup-container__close{margin:20px;left:0;top:0}.cc-popup-container__back{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);display:inline-block;width:27px;height:27px;background-size:100%}.cc-question-container__required-label{display:block;right:0;top:2px}.cc-thankyou-container .cc-question-container__text,.cc-thankyou-container .cc-question-container__text p{width:100%!important;text-align:center;margin:0!important;padding:0;line-height:normal;height:auto}.cc-thankyou-container .cc-question-container__text{max-width:98%}}html[dir=rtl] ul{padding-left:0}html[dir=rtl] .cc-popup-container .cc-popup-container__close{left:auto;right:0;top:0}html[dir=rtl] .cc-popup-container .cc-message-box .cc-message-box__text{text-align:left}html[dir=rtl] .cc-popup-container__back{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_rtl_.svg)}html[dir=rtl] .cc-popup-container-2__icons.cc-right-icon{left:auto;right:0}html[dir=rtl] .cc-popup-container-2__icons.cc-left-icon{left:0;right:auto}html[dir=rtl] .cc-question-container{margin-right:147px;margin-left:0;left:0;right:auto}html[dir=rtl] .cc-question-container__required,html[dir=rtl] .cc-question-container__validation{left:0;right:auto}html[dir=rtl] .cc-question-container__required-label{top:-2px;left:-2px;right:auto}html[dir=rtl] .cc-question-container__list li{display:inline-block;padding-left:15px!important;padding-right:15px!important;vertical-align:middle}html[dir=rtl] .cc-question-container[data-type=checkbox] .cc-question-container__list li{padding-left:0!important}html[dir=rtl] .cc-question-container__list li span{padding-left:15px;padding-right:0;text-align:left}html[dir=rtl] .cc-question-container:before{margin-right:-4px;margin-left:0}html[dir=rtl] .multiline-box{margin:0 0 0 50px}html[dir=rtl] .hl.dropdown{background-position:3%;text-align:left}html[dir=rtl] .drop-cc-question-container .cc-question-container__text{margin-right:20px;margin-left:0}html[dir=rtl] .detail-box .cc-question-container__content{padding-left:0;padding-right:0}html[dir=rtl] .cc-nps-image{right:31px}html[dir=rtl] .cc-question-container__content{text-align:left}@media (min-width:767px) and (max-width:1024px){html[dir=rtl] .cc-big-list-container .cc-question-container__list,html[dir=rtl] .cc-question-container__list{text-align:left}html[dir=rtl] .multiline-box{margin:0}}@media (min-width:767px) and (max-width:992px){html[dir=rtl] .cc-question-container__text{padding-right:20px;padding-left:0}html[dir=rtl] .cc-question-container__content.rating-color{margin-right:0;margin-left:0}}@media (max-width:767px){html[dir=rtl] .cc-popup-container-2__icons.cc-right-icon{right:auto;left:0}html[dir=rtl] .cc-popup-container-2__icons.cc-left-icon{right:0;left:auto}html[dir=rtl] .radio-toggle--more-option li span{padding-left:25px!important;padding-right:0!important}html[dir=rtl] .radio-toggle--more-option li{padding-left:0!important;padding-right:0!important}html[dir=rtl] .detail-box .cc-question-container__content{padding-right:0;padding-left:0}html[dir=rtl] .cc-question-container{right:auto;left:0}html[dir=rtl] .multiline-box{margin:0}html[dir=rtl] .cc-question-container__text{text-align:left;width:100%;margin-left:5px;max-width:100%}html[dir=rtl] .cc-question-container__list li span{padding-left:15px;padding-right:0}html[dir=rtl] .cc-question-container__list li{padding-right:0;padding-left:0}html[dir=rtl] .cc-popup-container-2__icons.left-icon{right:0;left:auto}html[dir=rtl] .cc-popup-container-2__icons.right-icon{left:0;right:auto}html[dir=rtl] .cc-question-container__content.rating-color{margin-right:0!important;margin-left:0!important}}.option-number-item{color:#fff;float:right;font-size:13px;height:38px;padding-top:10px;text-align:center;width:8.5%;margin:0 .25%;cursor:pointer}.option-number-item.option-zero{background:#853838}.option-number-item.option-zero.selected,.option-number-item.option-zero:hover{background:#572526}.option-number-item.option-one{background:#9e4343}.option-number-item.option-one.selected,.option-number-item.option-one:hover{background:#642728}.option-number-item.option-two{background:#c14d4d}.option-number-item.option-two.selected,.option-number-item.option-two:hover{background:#712827}.option-number-item.option-three{background:#d94d4d}.option-number-item.option-three.selected,.option-number-item.option-three:hover{background:#7c2828}.option-number-item.option-four{background:#ee4d4d}.option-number-item.option-four.selected,.option-number-item.option-four:hover{background:#852828}.option-number-item.option-five{background:#ff4d4d}.option-number-item.option-five.selected,.option-number-item.option-five:hover{background:#844828}.option-number-item.option-six{background:#ff8c4d}.option-number-item.option-six.selected,.option-number-item.option-six:hover{background:#844828}.option-number-item.option-seven{background:#ffc74d}.option-number-item.option-seven.selected,.option-number-item.option-seven:hover{background:#856728}.option-number-item.option-eight{background:#f5eb4d}.option-number-item.option-eight.selected,.option-number-item.option-eight:hover{background:#7f7a28}.option-number-item.option-nine{background:#73ca81}.option-number-item.option-nine.selected,.option-number-item.option-nine:hover{background:#3b6942}.option-number-item.option-ten{background:#4db47c}.option-number-item.option-ten.selected,.option-number-item.option-ten:hover{background:#285e40}.cc-question-container[data-type=nps] .option-number-item{width:8.4%}.cc-question-container[data-type=nps] .option-number-item.option-nine,.cc-question-container[data-type=nps] .option-number-item.option-seven{margin-right:4px}.cc-question-container[data-type=scale].scale-image-container .option-number-item{width:8.4%}.cc-question-container__content.rating-color{margin-right:74px}.option-left-rating-text,.option-right-rating-text{bottom:-25px;color:#424242;font-size:13px;right:0;position:absolute}.option-left-rating-text-small-container{max-width:57px;text-align:right;max-height:37px;overflow:hidden;bottom:-44px}.option-right-rating-text-small-container{max-width:57px;text-align:left;max-height:37px;overflow:hidden;bottom:-44px}.cc-question-container[data-type=smile] .option-left-rating-text,.cc-question-container[data-type=star] .option-left-rating-text{right:7px;bottom:-12px}.option-right-rating-text{right:auto;left:5px}.cc-question-container[data-type=smile] .option-right-rating-text,.cc-question-container[data-type=star] .option-right-rating-text{left:36px;bottom:-12px}.cc-question-container[data-type=scale] .option-number-item{width:38px;margin:0 .5px;cursor:pointer;display:inline-block;float:none}.cc-question-container[data-type=scale] .cc-question-container__list{display:inline-block;width:auto;position:relative}.cc-question-container[data-type=scale].scale-image-container .cc-question-container__list{width:100%}.rating-color{position:relative}.option-smile-box,.option-star-box{height:60px;margin-left:29px;width:60px;cursor:pointer;border:4px solid transparent;border-radius:50%;display:inline-block;background-size:100%}.option-smile-box.one{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1.svg\\\") no-repeat;background-size:100%}.option-smile-box.two{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2.svg\\\") no-repeat;background-size:100%}.option-smile-box.three{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3.svg\\\") no-repeat;background-size:100%}.option-smile-box.four{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4.svg\\\") no-repeat;background-size:100%}.option-smile-box.five{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5.svg\\\") no-repeat;background-size:100%}.option-smile-box.one.selected,.option-smile-box.one:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1_Selected.svg\\\") no-repeat;background-size:100%}.option-smile-box.two.selected,.option-smile-box.two:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2_Selected.svg\\\") no-repeat;background-size:100%}.option-smile-box.three.selected,.option-smile-box.three:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3_Selected.svg\\\") no-repeat;background-size:100%}.option-smile-box.four.selected,.option-smile-box.four:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4_Selected.svg\\\") no-repeat;background-size:100%}.option-smile-box.five.selected,.option-smile-box.five:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5_Selected.svg\\\") no-repeat;background-size:100%}.cc-csat.cc-question-container__content.rating-color{margin-right:45px}.option-csat.option-smile-box,.option-csat.option-smile-box.selected,.option-csat.option-smile-box:hover{background-size:25px;background-position:18px;background:none}.option-csat{height:30px;margin-left:68px;width:30px;padding-right:50px;height:45px;margin-left:0;width:auto;padding-right:0;font-size:14px;vertical-align:middle;display:inline-block;margin-left:13px}.option-csat span{display:inline-block;vertical-align:top;font-size:12px;padding-right:25px;position:relative;top:-10px;text-align:right;width:100%}.option-csat .cc-checkbox{top:8px}.option-csat .cc-checkbox.cc-radio label:before,.option-csat .cc-checkbox input[type=radio]:checked+label:after{height:15px;width:15px}.option-star-box{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star.svg\\\") no-repeat;background-size:100%}.option-star-box.selected,.option-star-box:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star_selected.svg\\\") no-repeat;background-size:100%}.cc-question-container[data-type=slider] .option-left-rating-text{right:4px}.cc-question-container[data-type=smile] .cc-question-container__list,.cc-question-container[data-type=star] .cc-question-container__list{position:relative;width:auto;display:inline-block}@media (min-width:767px) and (max-width:992px){.option-smile-box,.option-star-box{width:50px;height:50px;margin-left:10px}.option-csat.option-smile-box,.option-csat.option-smile-box.selected,.option-csat.option-smile-box:hover{display:inline-block;width:168px}.cc-question-container[data-type=smile] .option-right-rating-text,.cc-question-container[data-type=star] .option-right-rating-text{left:16px}}@media (max-width:767px){.option-smile-box,.option-star-box{display:inline-block;margin-left:3px}.option-csat.option-smile-box,.option-csat.option-smile-box.selected,.option-csat.option-smile-box:hover{display:block;background-size:40px;background-position:29px}.option-csat.option-smile-box{height:65px;width:100%}.option-csat.option-smile-box span{font-size:15px;padding-right:74px;top:0}.option-csat.option-smile-box .cc-checkbox{top:19px}.option-csat.option-smile-box .cc-checkbox.cc-radio label:before,.option-csat.option-smile-box .cc-checkbox input[type=radio]:checked+label:after{width:25px;height:25px}.option-number-item{color:#fff;float:right;font-size:15px;height:35px;margin-left:1px;padding-top:7px;text-align:center;width:38px;cursor:pointer;vertical-align:middle}.cc-question-container[data-type=scale]{bottom:106px}.cc-question-container[data-type=scale] .option-left-rating-text,.cc-question-container[data-type=scale] .option-right-rating-text{bottom:-44px;width:auto}.cc-question-container[data-type=scale] .option-right-rating-text{text-align:left}.option-smile-box img,.option-star-box img{padding-left:5px;margin-left:0}.cc-question-container[data-type=nps] .cc-question-container__content{width:100%!important}.cc-question-container[data-type=smile] .option-right-rating-text,.cc-question-container[data-type=star] .option-right-rating-text{left:10px}.cc-question-container[data-type=scale] .cc-question-container__list{width:100%}}@media (max-width:381px){.option-smile-box,.option-star-box{display:inline-block;margin-left:0;height:50px;width:50px}.option-smile-box img,.option-star-box img{padding-left:5px;margin-left:0}}.option-number-item.option-scale{background:#4db47c}.option-number-item.option-scale.selected,.option-number-item.option-scale:hover{background:#712827}.cc-nps-image{cursor:pointer;position:relative;right:0}.circle-image{margin:auto;width:253px;overflow:hidden;height:240px;position:relative}.circle-image-scale-010-neutral{width:242px;overflow:hidden;height:230px;margin:auto}.cc-nps-selected-rating{font-size:100px;display:inline-block;position:absolute;top:0;right:0;line-height:100px;left:0;margin:auto;bottom:0;width:110px;height:100px;text-align:center;font-weight:100;color:#bbb}html[dir=rtl] .cc-question-container[data-type=csat] .cc-question-container__content.rating-color{margin-left:45px;margin-right:0}html[dir=rtl] .cc-question-container[data-type=csat] .cc-checkbox input[type=radio]{margin-left:0;opacity:0;outline:0}html[dir=rtl] .option-number-item{margin-left:1px;margin-right:0;float:left}html[dir=rtl] .cc-question-container__content.rating-color{margin-left:74px;margin-right:0}html[dir=rtl] .option-right-rating-text{right:calc(100% - 418px);left:auto!important}html[dir=rtl] .option-left-rating-text{left:0;right:auto!important}html[dir=rtl] .cc-question-container[data-type=nps] .option-right-rating-text{right:8px;left:auto!important}html[dir=rtl] .cc-question-container[data-type=scale] .option-right-rating-text{right:13px;width:auto!important}html[dir=rtl] .cc-question-container[data-type=scale] .option-left-rating-text{left:2px}html[dir=rtl] .cc-question-container[data-type=slider] .option-right-rating-text{right:0}html[dir=rtl] .rating-color{position:relative}html[dir=rtl] .option-smile-box img{margin-left:29px;margin-right:0}html[dir=rtl] .option-star-box img{margin-right:19px;margin-left:0}html[dir=rtl] .option-csat.option-smile-box span{padding-left:25px;text-align:left;padding-right:0}html[dir=rtl] .cc-question-container[data-type=smile] .option-right-rating-text,html[dir=rtl] .cc-question-container[data-type=star] .option-right-rating-text{right:7px;left:auto!important}html[dir=rtl] .cc-question-container[data-type=smile] .option-left-rating-text,html[dir=rtl] .cc-question-container[data-type=star] .option-left-rating-text{left:35px;right:auto!important}html[dir=rtl] .option-csat{width:auto;padding-right:0;margin-left:13px}html[dir=rtl] .option-csat.option-smile-box,html[dir=rtl] .option-csat.option-smile-box.selected,html[dir=rtl] .option-csat.option-smile-box:hover{background-position:calc(100% - (100% - 19px)) 50%;text-align:left}@media (min-width:767px) and (max-width:992px){html[dir=rtl] .option-smile-box img,html[dir=rtl] .option-star-box img{margin-right:0;margin-left:10px}html[dir=rtl] .cc-question-container__content.rating-color{margin-left:10px;margin-right:86px!important}html[dir=rtl] .cc-question-container[data-type=nps] .option-right-rating-text{right:17px;left:auto!important}html[dir=rtl] .cc-question-container[data-type=smile] .option-right-rating-text,html[dir=rtl] .cc-question-container[data-type=star] .option-right-rating-text{right:7px;left:auto!important}html[dir=rtl] .cc-question-container[data-type=smile] .option-left-rating-text,html[dir=rtl] .cc-question-container[data-type=star] .option-left-rating-text{left:20px;right:auto!important}html[dir=rtl] .option-csat.option-smile-box,html[dir=rtl] .option-csat.option-smile-box.selected,html[dir=rtl] .option-csat.option-smile-box:hover{width:auto}}@media (max-width:767px){html[dir=rtl] .option-smile-box img,html[dir=rtl] .option-star-box img{padding-left:0;padding-right:5px;margin-left:0;margin-right:0}html[dir=rtl] .cc-question-container[data-type=csat] .cc-checkbox input[type=radio]{margin-left:7px;opacity:0;outline:0}html[dir=rtl] .option-csat.option-smile-box,html[dir=rtl] .option-csat.option-smile-box.selected,html[dir=rtl] .option-csat.option-smile-box:hover{background-position:calc(100% - (100% - 30px)) 50%}html[dir=rtl] .option-csat.option-smile-box span{padding-left:39px;text-align:left;padding-right:0}html[dir=rtl] .cc-question-container[data-type=smile] .option-left-rating-text,html[dir=rtl] .cc-question-container[data-type=star] .option-left-rating-text,html[dir=rtl] .option-left-rating-text{left:10px;right:auto!important}html[dir=rtl] .cc-question-container[data-type=smile] .option-right-rating-text,html[dir=rtl] .cc-question-container[data-type=star] .option-right-rating-text{left:auto!important}html[dir=rtl] .option-right-rating-text{right:calc(100% - 322px);left:auto!important}html[dir=rtl] .cc-question-container[data-type=scale] .option-right-rating-text{right:13px;width:auto!important}}@media (max-width:381px){html[dir=rtl] .option-right-rating-text{right:calc(100% - 258px);left:auto!important}}.cc-select-wrapper{position:relative;display:inline-block;user-select:none;z-index:11}.cc-select-wrapper select{display:none}.cc-select{position:relative;display:inline-block;margin-right:70px}.cc-select-trigger{display:block;width:130px;padding:0 22px 0 84px;font-size:15px;font-style:italic;font-weight:300;color:#222;line-height:20px;background:transparent;border-radius:0;cursor:pointer;width:300px;border-bottom:1px solid #6d6d6d;display:inline-block;text-align:right;padding:5px 5px 5px 20px;position:relative;background-position:3%;background-repeat:no-repeat;max-height:50px;overflow:hidden}.cc-select-trigger:after{position:absolute;display:block;content:\\\"\\\";width:10px;height:10px;top:50%;left:5px;margin-top:-3px;border-bottom:1px solid #222;border-left:1px solid #222;transform:rotate(-45deg) translateY(-50%);transition:all .2s ease-in-out;transform-origin:50% 0}.cc-select.opened .cc-select-trigger:after{margin-top:3px;transform:rotate(135deg) translateY(-50%)}.cc-select-options-container{position:absolute;display:block;top:100%;right:0;left:0;min-width:100%;margin:15px 0;border:1px solid #b5b5b5;border-radius:4px;box-sizing:border-box;box-shadow:0 2px 1px rgba(0,0,0,.07);background:#fff;transition:all .2s ease-in-out;opacity:0;visibility:hidden;pointer-events:none;transform:translateY(calc(-100% - 65px));height:auto;max-height:150px;overflow:hidden;overflow-y:scroll}.cc-select-options{overflow-y:scroll;height:100%;width:110%}.cc-select.opened .cc-select-options-container{opacity:1;visibility:visible;pointer-events:all;transform:translateY(calc(-100% - 65px))}.cc-popup-container-2.top .cc-select-options-container,.cc-popup-container-2.top .cc-select.opened .cc-select-options-container{transform:translateY(calc(-100% + 75px))}.option-hover:before{background:#f9f9f9}.cc-select-option{position:relative;display:block;padding:0 12px;border-bottom:1px solid #e4e4e4;font-size:12px;font-weight:600;color:#222;line-height:34px;cursor:pointer;transition:all .2s ease-in-out;text-align:right;margin:0;width:100%}.cc-select-option:first-of-type{border-radius:4px 4px 0 0}.cc-select-option:last-of-type{border-bottom:0;border-radius:0 0 4px 4px}.cc-select-option.selection,.cc-select-option:hover{background:#eaeaea}.cc-select-wrapper.down .cc-select-options-container,.cc-select-wrapper.down .cc-select.opened .cc-select-options-container{transform:translateY(20px)}.cc-question-container[data-type=nps] .cc-question-container__content,.cc-question-container[data-type=scale] .cc-question-container__content{width:40%}@media (max-width:767px){.cc-select,.cc-select-wrapper{min-width:100%}.cc-select{margin-right:0}.cc-select-trigger{min-width:100%;width:auto}}html[dir=rtl] .cc-select-trigger{padding:0 84px 0 22px;background-position:3%;background-repeat:no-repeat;text-align:left}html[dir=rtl] .cc-select-trigger:after{top:50%;right:2px;left:auto}html[dir=rtl] .cc-select-option{text-align:left}html[dir=rtl] .cc-select-option:first-of-type{border-radius:0 4px 4px 0}html[dir=rtl] .cc-select-option:last-of-type{border-radius:4px 0 0 4px}.cc-checkbox{display:table-cell;position:relative;text-align:right;vertical-align:middle}.cc-checkbox label{cursor:pointer}.cc-checkbox+span label img{width:40px;display:inline-block;vertical-align:middle}.cc-checkbox label:after,.cc-checkbox label:before{bottom:0;content:\\\"\\\";right:0;margin:auto;position:absolute;top:0}.cc-checkbox label:before{background:transparent;border-radius:2px;border:1px solid #424242;cursor:pointer;height:20px;transition:background .3s;width:20px}.cc-checkbox input[type=checkbox]{margin-left:10px;opacity:0;outline:0}.cc-checkbox input[type=checkbox]:checked+label:before{background:#fdaf19;border:none}.cc-checkbox input[type=checkbox]:checked+label:after{border:3px solid #222;border-left-style:none;border-top-style:none;height:7px;right:4px;top:-3px;transform:rotate(45deg);width:12px}.cc-checkbox.cc-radio label:before{background:transparent;border:1px solid #424242;cursor:pointer;height:25px;transition:background .3s;width:25px}.cc-checkbox input[type=radio]{margin-left:10px;opacity:0;outline:0}.cc-checkbox input[type=radio]:checked+label:before{background:transparent;border-color:#fdaf19}.cc-checkbox input[type=radio]:checked+label:after{-moz-transform:scale(.8);-ms-transform:scale(.8);-o-transform:scale(.8);-webkit-transform:scale(.8);background:#fdaf19;border-radius:30px;height:25px;transform:scale(.8);width:25px}.cc-radio label:before{border-radius:30px}.radio-toggle--more-option li span{padding-right:25px!important;width:125px!important}.radio-toggle .cc-question-container__list li{padding-right:15px}.radio-toggle .cc-question-container__list li span{padding:10px}@media (min-width:1000px){.radio-toggle .cc-question-container__list li span label{overflow:hidden;max-height:100px;display:block}}@media (min-width:767px) and (max-width:992px){.radio-toggle .cc-question-container__list li{padding-right:10px}.radio-toggle .cc-question-container__list li span{padding:10px}}@media (max-width:767px){.radio-toggle .cc-question-container__list li{padding-right:0;display:inline-block;padding-left:50px}}.progress-bar{width:100%;position:absolute;background:#a47c2b;z-index:1;height:8px;right:0}.progress-line{background:#fdaf19;height:100%;display:block;width:0;transition:all .4s ease-in}.cc-scrollbar-wrapper{float:right;height:100%;overflow:hidden;position:relative;width:100%;z-index:1}.cc-scrollbar-content{box-sizing:border-box;height:100%;overflow:auto;position:relative;width:107%}.cc-scrollbar-scroll{background:#aaa;border-radius:4px;cursor:pointer;opacity:0;position:relative;top:0;transition:opacity .25s linear;width:9px;z-index:2}.cc-scrollbar-container:hover .cc-scrollbar-scroll{opacity:1}.cc-scrollbar-grabbed{-moz-user-select:none;-o-user-select:none;-webkit-user-select:none;user-select:none}.range{-webkit-appearance:none;-moz-appearance:none;width:500px}input[type=range]::-webkit-slider-runnable-track{-webkit-appearance:none;background:#ff403d;background:linear-gradient(-135deg,#ff403d,#992a28);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=\\\"#ff403d \\\",endColorstr=\\\"#992a28 \\\",GradientType=1);height:1px}input[type=range]:focus{outline:none}input[type=range]::-moz-range-track{-moz-appearance:none;background:#ff403d;background:linear-gradient(-135deg,#ff403d,#992a28);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=\\\"#ff403d \\\",endColorstr=\\\"#992a28 \\\",GradientType=1);height:1px}input[type=range]::-webkit-slider-thumb{-webkit-appearance:none;border:1px solid #ff403d;border-radius:50%;height:32px;width:32px;max-width:80px;position:relative;bottom:16px;background-color:#fff;cursor:-webkit-grab}input[type=range]::-moz-range-thumb{-moz-appearance:none;border:1px solid #ff403d;border-radius:50%;height:32px;width:32px;max-width:80px;position:relative;bottom:16px;background-color:#fff;cursor:-moz-grab}input[type=range]::-moz-range-thumb:before{content:\\\"asd\\\"}input[type=range]::-webkit-slider-thumb:active{cursor:-webkit-grabbing}input[type=range]::-moz-range-thumb:active{cursor:-moz-grabbing}.cc-question-container__content.range-slider{height:50px;padding-top:9px}.slider-tip{background:#eb1c23;padding:8px 9px 9px;position:absolute;top:51px;right:0;left:0;margin:0 auto;color:#fff;background:none;color:#424242;font-size:13px;width:100px;display:inline-block;text-align:center;font-weight:700}.slider-tip:after{border-width:5px 5px 0;border-top-color:#000}@media (max-width:1024px){.range{width:100%}}input.range.blue::-moz-range-track,input.range.blue::-webkit-slider-runnable-track{background:blue}.chart{box-sizing:border-box;display:inline-block;height:21px;padding-top:22px;position:relative;vertical-align:top;width:21px}.chart span{display:block;font-size:2em;font-weight:400}.chart canvas{right:0;position:absolute;top:0}.loader{height:21px;right:28px;position:absolute;top:8px;width:21px}@media (min-width:767px){.chart canvas{margin-right:10px}}@media (max-width:767px){.loader{position:relative;right:auto;top:0;left:auto}}html[dir=rtl] .chart canvas{left:0;right:auto}html[dir=rtl] .loader{left:28px;right:auto}@media (min-width:767px){html[dir=rtl] .chart canvas{margin-left:10px;margin-right:0}}.show{display:block!important}.show-inline{display:inline-block!important}.hide{display:none!important}.bottom{bottom:0}.right{left:0}.left{right:0}.top{top:0}.overlay{background:#fff;bottom:0;height:100%;right:0;position:absolute;top:0;width:100%;z-index:0}.overlay.glass{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/ww.png);background-repeat:no-repeat;background-size:cover}.clearfix{clear:both;display:block}.text-normal{font-weight:400}.form-control::-webkit-input-placeholder{color:#4c4c4c;font-family:Open Sans;font-size:13px;font-style:italic;font-weight:400}.form-control::-moz-placeholder{font-style:italic;font-size:13px;font-weight:400;font-family:Open Sans;color:#4c4c4c}.form-control:-ms-input-placeholder{font-style:italic;font-size:13px;font-weight:400;font-family:Open Sans;color:#4c4c4c}.form-control:-moz-placeholder{font-style:italic;font-size:13px;font-weight:400;font-family:Open Sans;color:#4c4c4c}@media (min-width:767px){.desktop-hide{display:none}}@media (max-width:767px){.mobile-hide{display:none}.loader{position:relative;right:auto;top:0;left:auto}.overlay.welcome-overlay{background:rgba(210,42,53,.87)}body.blurr>:not(.cc-popup-container):not(.cc-survey),iframe{-webkit-filter:blur(15px);-moz-filter:blur(15px);-ms-filter:blur(15px);-o-filter:blur(15px);filter:blur(15px)}}html[dir=rtl] .submit-icon{right:0;left:auto;margin-right:75px;background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg width='47' height='47' viewBox='0 0 47 47' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Ccircle cx='19.313' cy='19.313' r='19.313' fill-rule='nonzero' fill='%23white'/%3E%3Ccircle cx='19.313' cy='19.313' r='19.313' fill='%23FCAF18'/%3E%3Cg fill-rule='nonzero' fill='%23404041'%3E%3Cpath d='M27.18 11l.994.993-7.308 7.309 7.308 7.308-.993.993-8.302-8.301z'/%3E%3Cpath d='M21.007 11l.993.993-7.308 7.309L22 26.61l-.993.993-8.302-8.301z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\\\")}@media (max-width:767px){html[dir=rtl] .submit-icon{position:absolute;left:30px;right:auto;top:auto;bottom:30px;padding-right:0;left:20px;margin:0}}.yellow .progress-bar{background:#a47c2b}.yellow .progress-line{background:#fdaf19}.yellow .submit-icon{background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg width='47' height='47' viewBox='0 0 47 47' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Ctitle%3EGroup 16%3C/title%3E%3Cdefs%3E%3Ccircle id='b' cx='19.313' cy='19.313' r='19.313'/%3E%3Cfilter x='-18.1%25' y='-12.9%25' width='136.2%25' height='136.2%25' filterUnits='objectBoundingBox' id='a'%3E%3CfeOffset dy='2' in='SourceAlpha' result='shadowOffsetOuter1'/%3E%3CfeGaussianBlur stdDeviation='2' in='shadowOffsetOuter1' result='shadowBlurOuter1'/%3E%3CfeColorMatrix values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.116423234 0' in='shadowBlurOuter1'/%3E%3C/filter%3E%3C/defs%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg transform='translate(4 2)'%3E%3Cuse fill='%23000' filter='url(%23a)' xlink:href='%23b'/%3E%3Cuse xlink:href='%23b'/%3E%3C/g%3E%3Cg fill-rule='nonzero' fill='%23404041'%3E%3Cpath d='M23.167 13l-.993.993 7.308 7.309-7.308 7.308.993.993 8.302-8.301z'/%3E%3Cpath d='M16.993 13l-.993.993 7.308 7.309L16 28.61l.993.993 8.302-8.301z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\\\")}.yellow .cc-checkbox input[type=checkbox]:checked+label:before{background:#fdaf19}.yellow .cc-checkbox input[type=checkbox]:checked+label:after{border-color:#222}.yellow .cc-checkbox input[type=radio]:checked+label:before{border-color:#fdaf19}.yellow .cc-checkbox input[type=radio]:checked+label:after{background:#fdaf19}.yellow .form-control:focus{border-color:#fcaf18}.yellow .cc-message-box__btn{background:#fdaf19}.red .progress-bar{background:#d22a35}.red .progress-line{background:#d22a35;filter:brightness(150%)}.red .cc-checkbox input[type=checkbox]:checked+label:before{background:#d22a35}.red .cc-checkbox input[type=checkbox]:checked+label:after{border-color:#fff}.red .cc-checkbox input[type=radio]:checked+label:before{border-color:#d22a35}.red .cc-checkbox input[type=radio]:checked+label:after{background:#d22a35}.red .form-control:focus{border-color:#d22a35}.red .cc-message-box__btn{background:#d22a35;color:#fff}.red .submit-icon{background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg width='47' height='47' viewBox='0 0 47 47' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Ctitle%3EGroup 16%3C/title%3E%3Cdefs%3E%3Ccircle id='b' cx='19.313' cy='19.313' r='19.313'/%3E%3Cfilter x='-18.1%25' y='-12.9%25' width='136.2%25' height='136.2%25' filterUnits='objectBoundingBox' id='a'%3E%3CfeOffset dy='2' in='SourceAlpha' result='shadowOffsetOuter1'/%3E%3CfeGaussianBlur stdDeviation='2' in='shadowOffsetOuter1' result='shadowBlurOuter1'/%3E%3CfeColorMatrix values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.116423234 0' in='shadowBlurOuter1'/%3E%3C/filter%3E%3C/defs%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg transform='translate(4 2)'%3E%3Cuse fill='%23fff' filter='url(%23a)' xlink:href='%23b'/%3E%3Cuse fill='rgba(210, 42, 53, 1)' xlink:href='%23b'/%3E%3C/g%3E%3Cg fill-rule='nonzero' fill='%23FFF'%3E%3Cpath d='M23.167 13l-.993.993 7.308 7.309-7.308 7.308.993.993 8.302-8.301z'/%3E%3Cpath d='M16.993 13l-.993.993 7.308 7.309L16 28.61l.993.993 8.302-8.301z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\\\")}.cc-question-container,.hide-slide{-webkit-transform:translateX(-5px);transform:translateX(-5px)}.cc-question-container,.hide-bottom-up,.hide-slide{transition:transform .3s ease,opacity .3s ease,visibility .3s ease;visibility:hidden;opacity:0}.hide-bottom-up{-webkit-transform:translateY(30px);transform:translateY(30px)}.hide-up-bottom{-webkit-transform:translateY(100%);transform:translateY(100%)}.hide-right-left,.hide-up-bottom{transition:transform .3s ease,opacity .3s ease,visibility .3s ease;visibility:hidden;opacity:0}.hide-right-left{-webkit-transform:translateX(-100%);transform:translateX(-100%)}.hide-left-right{-webkit-transform:translateX(100%);transform:translateX(100%);visibility:hidden;opacity:0}.hide-left-right,.show-slide,.show-thankyou-slide{transition:transform .3s ease,opacity .3s ease,visibility .3s ease}.show-slide,.show-thankyou-slide{visibility:visible;opacity:1;-webkit-transform:translateX(0) translateY(0);transform:translateX(0) translateY(0)}#timer{position:relative}svg.timer{position:absolute;top:0;right:0;width:40px;height:40px;transform:rotateY(-180deg) rotate(90deg)}html[dir=rtl] svg.timer{left:0;right:auto}svg.timer circle{stroke-dasharray:50px;stroke-dashoffset:0px;stroke-linecap:round;stroke-width:2px;stroke:red;fill:none;animation:countdown 10s linear 1 forwards}@keyframes countdown{0%{stroke-dashoffset:0px}to{stroke-dashoffset:50px}}.cc-loaderimg{position:absolute;width:100%;z-index:1000;right:0;left:0;top:0;height:100%;background:hsla(0,0%,100%,.8)}.cc-loaderimg svg{width:100px}\" : \"body{padding:0;font-family:open sans,sans-serif}body,ul{margin:0}ul{padding-left:0;list-style-type:none}a,a:focus,a:hover{text-decoration:none;color:inherit}*,:after,:before{box-sizing:border-box}p{color:inherit;margin:0}map area{outline:0;cursor:pointer}map area.selected{outline:0;outline-color:#0a2135;outline-width:0;outline-style:solid}map area:hover{outline:1}.cc-popup-container{background:#fff;box-shadow:0 0 4px 5px rgba(0,0,0,.05);font-family:open sans,sans-serif;position:fixed;text-align:center;max-width:500px;max-height:500px;z-index:1111;padding:10px}.cc-popup-container.bottom{margin-bottom:9px}.cc-popup-container.top{margin-top:9px}#cc-thankyou-container .cc-question-container__text,#cc-thankyou-container .cc-question-container__text p{width:400px;max-width:none;font-size:17px;color:#424242}.cc-message-box{position:relative;z-index:11}.cc-message-box__text{color:#424242;font-size:14px;font-weight:600;margin:0;padding:29px 14px 20px;vertical-align:middle}.cc-message-box__btn{background:#fdaf19;border-radius:100px;display:inline-block;font-size:15px;font-weight:700;height:32px;padding:6px 0;width:124px}.cc-popup-container .cc-popup-container__close{cursor:pointer;margin:4px;position:absolute;right:0;top:0;z-index:111}.cc-popup-container-2{height:144px;position:fixed;width:100%;z-index:1111}.cc-popup-container-2__icons{cursor:pointer;padding:8px;position:absolute;top:0;z-index:111}.top.cc-popup-container-2 .cc-popup-container-2__icons{padding-top:15px}.cc-popup-container-2__icons.cc-right-icon{right:0}.cc-popup-container-2__icons.cc-left-icon{left:0}.cc-popup-container__back{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);display:inline-block;width:21px;height:21px}.cc-question-container{margin-right:147px;padding:20px 20px 25px;position:absolute;text-align:center;width:calc(100% - 147px);z-index:11;top:0;left:0}.cc-question-container__text{color:#424242;display:inline-block;font-size:15px;font-weight:600;max-width:230px;padding:8px 0;text-align:center;vertical-align:middle;width:20%;position:relative}.cc-question-container__required,.cc-question-container__validation{position:absolute;top:-14px;font-size:11px;left:0;right:0;font-weight:400;color:#c1272d;display:none}.cc-question-container__required-label{display:inline-block;position:relative;top:-2px;left:-2px}.cc-question-container__content{display:inline-block;max-width:78%;vertical-align:middle;width:auto}.cc-question-container__list li{display:inline-block;padding-left:29px;vertical-align:middle}.cc-question-container__list li span{display:table-cell;font-size:15px;padding-left:15px;text-align:left;vertical-align:middle;width:125px}.cc-question-container__list li input{vertical-align:middle}.cc-question-container:before{content:\\\"\\\";display:inline-block;margin-right:-4px}.cc-question-container,.cc-question-container:before{height:100%;vertical-align:middle}.cc-questions-container{height:100%}p.cc-thankyou-powered{font-size:13px!important;color:#404040!important;font-style:italic;margin-top:4px}.cc-thankyou-powered .cc-thankyou-logo{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/cc-thankyou-logo.svg\\\");background-size:cover;margin-right:8px;display:inline-block;width:16px;height:16px}.multiline-box{background:#fff;border-radius:2px;border:1px solid #6d6d6d;font-family:Open Sans;font-size:15px;height:70px;margin:0 0 0 50px;min-width:600px;padding:2px 5px;resize:none}.multiline-box:focus{outline:0}.detail-box .cc-question-container__text p{font-size:13px;font-weight:700}.detail-box .cc-question-container__text span{display:inline-block;font-size:15px;font-weight:400}.detail-box .cc-question-container__text{height:56px}.detail-box[data-type=singleline] .cc-question-container__text{margin-right:20px}.detail-box .cc-question-container__content .form-control,.single-line .cc-question-container__content .form-control{background:transparent;border:none;border-bottom:1px solid #6d6d6d;font-family:open sans;font-size:15px;line-height:26px;outline:0;width:300px;margin-left:70px}.d-star-box.detail-box .cc-question-container__text{height:92px}.hl.dropdown{background-image:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/arrow-down.black.svg\\\");background-position:97%;background-repeat:no-repeat;border-bottom:1px solid #6d6d6d;display:inline-block;padding:5px;position:relative;text-align:left;width:300px}.drop-cc-question-container .cc-question-container__text{margin-right:20px}.form-control:focus{border-color:#fcaf18}.detail-box .cc-question-container__content{padding-left:0}.cc-big-list-container .cc-question-container__list{display:table;width:100%}.cc-big-list-container .cc-question-container__list li{display:table-cell;vertical-align:middle}.cc-thankyou-container{width:100%!important}.submit-icon{direction:ltr;position:absolute;right:0;top:0;bottom:0;margin:auto 0;z-index:11;margin-right:75px;font-size:16px;cursor:pointer;background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg width='47' height='47' viewBox='0 0 47 47' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Ctitle%3EGroup 16%3C/title%3E%3Cdefs%3E%3Ccircle id='b' cx='19.313' cy='19.313' r='19.313'/%3E%3Cfilter x='-18.1%25' y='-12.9%25' width='136.2%25' height='136.2%25' filterUnits='objectBoundingBox' id='a'%3E%3CfeOffset dy='2' in='SourceAlpha' result='shadowOffsetOuter1'/%3E%3CfeGaussianBlur stdDeviation='2' in='shadowOffsetOuter1' result='shadowBlurOuter1'/%3E%3CfeColorMatrix values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.116423234 0' in='shadowBlurOuter1'/%3E%3C/filter%3E%3C/defs%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg transform='translate(4 2)'%3E%3Cuse fill='%23000' filter='url(%23a)' xlink:href='%23b'/%3E%3Cuse xlink:href='%23b'/%3E%3C/g%3E%3Cg fill-rule='nonzero' fill='%23404041'%3E%3Cpath d='M23.167 13l-.993.993 7.308 7.309-7.308 7.308.993.993 8.302-8.301z'/%3E%3Cpath d='M16.993 13l-.993.993 7.308 7.309L16 28.61l.993.993 8.302-8.301z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\\\");width:47px;height:47px}@media (min-width:1000px){.cc-big-list-container .cc-question-container__list li span label{overflow:hidden;max-height:100px;display:block}.cc-question-container__content{max-height:100px}}@media (min-width:767px) and (max-width:1024px){.cc-popup-container-2{height:200px}.cc-big-list-container .cc-question-container__list,.cc-question-container__list{text-align:left}.cc-big-list-container .cc-question-container__list li,.cc-question-container__list li{display:inline-block;margin-bottom:15px;vertical-align:middle;width:49%}.cc-question-container__content{display:inline-block;width:45%}.multiline-box{min-width:100%;margin:0}.option-smile-box img,.option-star-box img{margin-right:11px!important}.cc-thankyou-container .cc-question-container__text,.cc-thankyou-container .cc-question-container__text p{width:100%!important;text-align:center;margin:0!important;padding:0;line-height:normal;height:auto}.cc-thankyou-container .cc-question-container__text{max-width:98%}}@media (min-width:1000px){.cc-question-container__text{max-height:110px;overflow:hidden}}@media (min-width:767px) and (max-width:992px){.cc-question-container{width:100%;margin:auto}.cc-question-container__text{width:24%;padding-right:20px;max-height:110px;overflow:hidden}.cc-question-container__content.rating-color{margin-left:0}.submit-icon{margin-right:40px!important}.cc-question-container__content.rating-color{margin-left:0!important}.cc-question-container__content{width:50%!important}}@media (max-width:767px){.cc-survey-container,.cc-survey-content{height:100%}.cc-popup-container-2{bottom:auto;height:100%;top:0}.cc-popup-container-2__icons.cc-right-icon{left:auto;right:0;padding:0}.cc-popup-container-2__icons.cc-left-icon{left:0;right:auto;padding:0}.cc-big-list-container .cc-question-container__list li{display:block}.radio-toggle--more-option li span{width:84%!important;padding-left:25px!important}.radio-toggle--more-option li{padding-right:0!important;display:block!important;padding-top:10px}.detail-box .cc-question-container__content{padding-left:0}.cc-question-container{bottom:75px;height:auto;left:0;padding:40px 20px;position:absolute;text-align:left;top:auto;width:100%}.cc-question-container__text{font-size:18px;margin-bottom:20px;max-width:400px;text-align:left;width:100%}.cc-question-container__content{display:block;max-width:100%;width:100%}.cc-question-container__list label{display:block}.cc-question-container__list li span{width:auto;padding-left:15px}.cc-question-container__list li{padding-left:0;margin-bottom:10px;display:block}.cc-popup-container-2__icons{margin:20px}.cc-popup-container-2__icons.left-icon{left:auto;right:0}.cc-popup-container-2__icons.right-icon{right:auto;left:0}.cc-popup-container__close{width:27px}.cc-question-container__content.rating-color{margin-left:0!important}.cc-question-container[data-type=nps] .cc-question-container__content,.cc-question-container[data-type=scale] .cc-question-container__content{width:100%!important}.multiline-box{height:150px;margin:0;min-width:100%;width:100%}.detail-box .cc-question-container__content .form-control,.hl.dropdown{width:100%}.detail-box .cc-question-container__text p{font-size:18px}.mobile-detail-box .cc-question-container__text{height:auto}.welcome-box .cc-question-container__text p{color:#fff}.cc-questions-container{height:100%;position:relative}}@media (max-width:767px){.detail-box .cc-question-container__content .form-control,.single-line .cc-question-container__content .form-control{margin-left:0}.submit-icon{position:absolute;left:20px;top:auto;bottom:30px;padding-right:0}.cc-popup-container{position:fixed;top:0;left:0;right:0;margin:0;width:100%;height:100%;max-width:100%;max-height:100%;text-align:left;background:transparent}.cc-popup-container .cc-message-box{position:absolute;bottom:20%}.cc-popup-container .cc-message-box .cc-message-box__text{font-size:20px}.cc-popup-container .cc-message-box .submit-icon{position:absolute;bottom:-100%;top:auto;left:0;margin:0 14px}.cc-popup-container .cc-popup-container__close{margin:20px;right:0;top:0}.cc-popup-container__back{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);display:inline-block;width:27px;height:27px;background-size:100%}.cc-question-container__required-label{display:block;left:0;top:2px}.cc-thankyou-container .cc-question-container__text,.cc-thankyou-container .cc-question-container__text p{width:100%!important;text-align:center;margin:0!important;padding:0;line-height:normal;height:auto}.cc-thankyou-container .cc-question-container__text{max-width:98%}}html[dir=rtl] ul{padding-right:0}html[dir=rtl] .cc-popup-container .cc-popup-container__close{right:auto;left:0;top:0}html[dir=rtl] .cc-popup-container .cc-message-box .cc-message-box__text{text-align:right}html[dir=rtl] .cc-popup-container__back{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_rtl_.svg)}html[dir=rtl] .cc-popup-container-2__icons.cc-right-icon{right:auto;left:0}html[dir=rtl] .cc-popup-container-2__icons.cc-left-icon{right:0;left:auto}html[dir=rtl] .cc-question-container{margin-left:147px;margin-right:0;right:0;left:auto}html[dir=rtl] .cc-question-container__required,html[dir=rtl] .cc-question-container__validation{right:0;left:auto}html[dir=rtl] .cc-question-container__required-label{top:-2px;right:-2px;left:auto}html[dir=rtl] .cc-question-container__list li{display:inline-block;padding-right:15px!important;padding-left:15px!important;vertical-align:middle}html[dir=rtl] .cc-question-container[data-type=checkbox] .cc-question-container__list li{padding-right:0!important}html[dir=rtl] .cc-question-container__list li span{padding-right:15px;padding-left:0;text-align:right}html[dir=rtl] .cc-question-container:before{margin-left:-4px;margin-right:0}html[dir=rtl] .multiline-box{margin:0 50px 0 0}html[dir=rtl] .hl.dropdown{background-position:97%;text-align:right}html[dir=rtl] .drop-cc-question-container .cc-question-container__text{margin-left:20px;margin-right:0}html[dir=rtl] .detail-box .cc-question-container__content{padding-right:0;padding-left:0}html[dir=rtl] .cc-nps-image{left:31px}html[dir=rtl] .cc-question-container__content{text-align:right}@media (min-width:767px) and (max-width:1024px){html[dir=rtl] .cc-big-list-container .cc-question-container__list,html[dir=rtl] .cc-question-container__list{text-align:right}html[dir=rtl] .multiline-box{margin:0}}@media (min-width:767px) and (max-width:992px){html[dir=rtl] .cc-question-container__text{padding-left:20px;padding-right:0}html[dir=rtl] .cc-question-container__content.rating-color{margin-left:0;margin-right:0}}@media (max-width:767px){html[dir=rtl] .cc-popup-container-2__icons.cc-right-icon{left:auto;right:0}html[dir=rtl] .cc-popup-container-2__icons.cc-left-icon{left:0;right:auto}html[dir=rtl] .radio-toggle--more-option li span{padding-right:25px!important;padding-left:0!important}html[dir=rtl] .radio-toggle--more-option li{padding-right:0!important;padding-left:0!important}html[dir=rtl] .detail-box .cc-question-container__content{padding-left:0;padding-right:0}html[dir=rtl] .cc-question-container{left:auto;right:0}html[dir=rtl] .multiline-box{margin:0}html[dir=rtl] .cc-question-container__text{text-align:right;width:100%;margin-right:5px;max-width:100%}html[dir=rtl] .cc-question-container__list li span{padding-right:15px;padding-left:0}html[dir=rtl] .cc-question-container__list li{padding-left:0;padding-right:0}html[dir=rtl] .cc-popup-container-2__icons.left-icon{left:0;right:auto}html[dir=rtl] .cc-popup-container-2__icons.right-icon{right:0;left:auto}html[dir=rtl] .cc-question-container__content.rating-color{margin-left:0!important;margin-right:0!important}}.option-number-item{color:#fff;float:left;font-size:13px;height:38px;padding-top:10px;text-align:center;width:8.5%;margin:0 .25%;cursor:pointer}.option-number-item.option-zero{background:#853838}.option-number-item.option-zero.selected,.option-number-item.option-zero:hover{background:#572526}.option-number-item.option-one{background:#9e4343}.option-number-item.option-one.selected,.option-number-item.option-one:hover{background:#642728}.option-number-item.option-two{background:#c14d4d}.option-number-item.option-two.selected,.option-number-item.option-two:hover{background:#712827}.option-number-item.option-three{background:#d94d4d}.option-number-item.option-three.selected,.option-number-item.option-three:hover{background:#7c2828}.option-number-item.option-four{background:#ee4d4d}.option-number-item.option-four.selected,.option-number-item.option-four:hover{background:#852828}.option-number-item.option-five{background:#ff4d4d}.option-number-item.option-five.selected,.option-number-item.option-five:hover{background:#844828}.option-number-item.option-six{background:#ff8c4d}.option-number-item.option-six.selected,.option-number-item.option-six:hover{background:#844828}.option-number-item.option-seven{background:#ffc74d}.option-number-item.option-seven.selected,.option-number-item.option-seven:hover{background:#856728}.option-number-item.option-eight{background:#f5eb4d}.option-number-item.option-eight.selected,.option-number-item.option-eight:hover{background:#7f7a28}.option-number-item.option-nine{background:#73ca81}.option-number-item.option-nine.selected,.option-number-item.option-nine:hover{background:#3b6942}.option-number-item.option-ten{background:#4db47c}.option-number-item.option-ten.selected,.option-number-item.option-ten:hover{background:#285e40}.cc-question-container[data-type=nps] .option-number-item{width:8.4%}.cc-question-container[data-type=nps] .option-number-item.option-nine,.cc-question-container[data-type=nps] .option-number-item.option-seven{margin-left:4px}.cc-question-container[data-type=scale].scale-image-container .option-number-item{width:8.4%}.cc-question-container__content.rating-color{margin-left:74px}.option-left-rating-text,.option-right-rating-text{bottom:-25px;color:#424242;font-size:13px;left:0;position:absolute}.option-left-rating-text-small-container{max-width:57px;text-align:left;max-height:37px;overflow:hidden;bottom:-44px}.option-right-rating-text-small-container{max-width:57px;text-align:right;max-height:37px;overflow:hidden;bottom:-44px}.cc-question-container[data-type=smile] .option-left-rating-text,.cc-question-container[data-type=star] .option-left-rating-text{left:7px;bottom:-12px}.option-right-rating-text{left:auto;right:5px}.cc-question-container[data-type=smile] .option-right-rating-text,.cc-question-container[data-type=star] .option-right-rating-text{right:36px;bottom:-12px}.cc-question-container[data-type=scale] .option-number-item{width:38px;margin:0 .5px;cursor:pointer;display:inline-block;float:none}.cc-question-container[data-type=scale] .cc-question-container__list{display:inline-block;width:auto;position:relative}.cc-question-container[data-type=scale].scale-image-container .cc-question-container__list{width:100%}.rating-color{position:relative}.option-smile-box,.option-star-box{height:60px;margin-right:29px;width:60px;cursor:pointer;border:4px solid transparent;border-radius:50%;display:inline-block;background-size:100%}.option-smile-box.one{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1.svg\\\") no-repeat;background-size:100%}.option-smile-box.two{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2.svg\\\") no-repeat;background-size:100%}.option-smile-box.three{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3.svg\\\") no-repeat;background-size:100%}.option-smile-box.four{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4.svg\\\") no-repeat;background-size:100%}.option-smile-box.five{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5.svg\\\") no-repeat;background-size:100%}.option-smile-box.one.selected,.option-smile-box.one:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1_Selected.svg\\\") no-repeat;background-size:100%}.option-smile-box.two.selected,.option-smile-box.two:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2_Selected.svg\\\") no-repeat;background-size:100%}.option-smile-box.three.selected,.option-smile-box.three:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3_Selected.svg\\\") no-repeat;background-size:100%}.option-smile-box.four.selected,.option-smile-box.four:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4_Selected.svg\\\") no-repeat;background-size:100%}.option-smile-box.five.selected,.option-smile-box.five:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5_Selected.svg\\\") no-repeat;background-size:100%}.cc-csat.cc-question-container__content.rating-color{margin-left:45px}.option-csat.option-smile-box,.option-csat.option-smile-box.selected,.option-csat.option-smile-box:hover{background-size:25px;background-position:18px;background:none}.option-csat{height:30px;margin-right:68px;width:30px;padding-left:50px;height:45px;margin-right:0;width:auto;padding-left:0;font-size:14px;vertical-align:middle;display:inline-block;margin-right:13px}.option-csat span{display:inline-block;vertical-align:top;font-size:12px;padding-left:25px;position:relative;top:-10px;text-align:left;width:100%}.option-csat .cc-checkbox{top:8px}.option-csat .cc-checkbox.cc-radio label:before,.option-csat .cc-checkbox input[type=radio]:checked+label:after{height:15px;width:15px}.option-star-box{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star.svg\\\") no-repeat;background-size:100%}.option-star-box.selected,.option-star-box:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star_selected.svg\\\") no-repeat;background-size:100%}.cc-question-container[data-type=slider] .option-left-rating-text{left:4px}.cc-question-container[data-type=smile] .cc-question-container__list,.cc-question-container[data-type=star] .cc-question-container__list{position:relative;width:auto;display:inline-block}@media (min-width:767px) and (max-width:992px){.option-smile-box,.option-star-box{width:50px;height:50px;margin-right:10px}.option-csat.option-smile-box,.option-csat.option-smile-box.selected,.option-csat.option-smile-box:hover{display:inline-block;width:168px}.cc-question-container[data-type=smile] .option-right-rating-text,.cc-question-container[data-type=star] .option-right-rating-text{right:16px}}@media (max-width:767px){.option-smile-box,.option-star-box{display:inline-block;margin-right:3px}.option-csat.option-smile-box,.option-csat.option-smile-box.selected,.option-csat.option-smile-box:hover{display:block;background-size:40px;background-position:29px}.option-csat.option-smile-box{height:65px;width:100%}.option-csat.option-smile-box span{font-size:15px;padding-left:74px;top:0}.option-csat.option-smile-box .cc-checkbox{top:19px}.option-csat.option-smile-box .cc-checkbox.cc-radio label:before,.option-csat.option-smile-box .cc-checkbox input[type=radio]:checked+label:after{width:25px;height:25px}.option-number-item{color:#fff;float:left;font-size:15px;height:35px;margin-right:1px;padding-top:7px;text-align:center;width:38px;cursor:pointer;vertical-align:middle}.cc-question-container[data-type=scale]{bottom:106px}.cc-question-container[data-type=scale] .option-left-rating-text,.cc-question-container[data-type=scale] .option-right-rating-text{bottom:-44px;width:auto}.cc-question-container[data-type=scale] .option-right-rating-text{text-align:right}.option-smile-box img,.option-star-box img{padding-right:5px;margin-right:0}.cc-question-container[data-type=nps] .cc-question-container__content{width:100%!important}.cc-question-container[data-type=smile] .option-right-rating-text,.cc-question-container[data-type=star] .option-right-rating-text{right:10px}.cc-question-container[data-type=scale] .cc-question-container__list{width:100%}}@media (max-width:381px){.option-smile-box,.option-star-box{display:inline-block;margin-right:0;height:50px;width:50px}.option-smile-box img,.option-star-box img{padding-right:5px;margin-right:0}}.option-number-item.option-scale{background:#4db47c}.option-number-item.option-scale.selected,.option-number-item.option-scale:hover{background:#712827}.cc-nps-image{cursor:pointer;position:relative;left:0}.circle-image{margin:auto;width:253px;overflow:hidden;height:240px;position:relative}.circle-image-scale-010-neutral{width:242px;overflow:hidden;height:230px;margin:auto}.cc-nps-selected-rating{font-size:100px;display:inline-block;position:absolute;top:0;left:0;line-height:100px;right:0;margin:auto;bottom:0;width:110px;height:100px;text-align:center;font-weight:100;color:#bbb}html[dir=rtl] .cc-question-container[data-type=csat] .cc-question-container__content.rating-color{margin-right:45px;margin-left:0}html[dir=rtl] .cc-question-container[data-type=csat] .cc-checkbox input[type=radio]{margin-right:0;opacity:0;outline:0}html[dir=rtl] .option-number-item{margin-right:1px;margin-left:0;float:right}html[dir=rtl] .cc-question-container__content.rating-color{margin-right:74px;margin-left:0}html[dir=rtl] .option-right-rating-text{left:calc(100% - 418px);right:auto!important}html[dir=rtl] .option-left-rating-text{right:0;left:auto!important}html[dir=rtl] .cc-question-container[data-type=nps] .option-right-rating-text{left:8px;right:auto!important}html[dir=rtl] .cc-question-container[data-type=scale] .option-right-rating-text{left:13px;width:auto!important}html[dir=rtl] .cc-question-container[data-type=scale] .option-left-rating-text{right:2px}html[dir=rtl] .cc-question-container[data-type=slider] .option-right-rating-text{left:0}html[dir=rtl] .rating-color{position:relative}html[dir=rtl] .option-smile-box img{margin-right:29px;margin-left:0}html[dir=rtl] .option-star-box img{margin-left:19px;margin-right:0}html[dir=rtl] .option-csat.option-smile-box span{padding-right:25px;text-align:right;padding-left:0}html[dir=rtl] .cc-question-container[data-type=smile] .option-right-rating-text,html[dir=rtl] .cc-question-container[data-type=star] .option-right-rating-text{left:7px;right:auto!important}html[dir=rtl] .cc-question-container[data-type=smile] .option-left-rating-text,html[dir=rtl] .cc-question-container[data-type=star] .option-left-rating-text{right:35px;left:auto!important}html[dir=rtl] .option-csat{width:auto;padding-left:0;margin-right:13px}html[dir=rtl] .option-csat.option-smile-box,html[dir=rtl] .option-csat.option-smile-box.selected,html[dir=rtl] .option-csat.option-smile-box:hover{background-position:calc(100% - 19px) 50%;text-align:right}@media (min-width:767px) and (max-width:992px){html[dir=rtl] .option-smile-box img,html[dir=rtl] .option-star-box img{margin-left:0;margin-right:10px}html[dir=rtl] .cc-question-container__content.rating-color{margin-right:10px;margin-left:86px!important}html[dir=rtl] .cc-question-container[data-type=nps] .option-right-rating-text{left:17px;right:auto!important}html[dir=rtl] .cc-question-container[data-type=smile] .option-right-rating-text,html[dir=rtl] .cc-question-container[data-type=star] .option-right-rating-text{left:7px;right:auto!important}html[dir=rtl] .cc-question-container[data-type=smile] .option-left-rating-text,html[dir=rtl] .cc-question-container[data-type=star] .option-left-rating-text{right:20px;left:auto!important}html[dir=rtl] .option-csat.option-smile-box,html[dir=rtl] .option-csat.option-smile-box.selected,html[dir=rtl] .option-csat.option-smile-box:hover{width:auto}}@media (max-width:767px){html[dir=rtl] .option-smile-box img,html[dir=rtl] .option-star-box img{padding-right:0;padding-left:5px;margin-right:0;margin-left:0}html[dir=rtl] .cc-question-container[data-type=csat] .cc-checkbox input[type=radio]{margin-right:7px;opacity:0;outline:0}html[dir=rtl] .option-csat.option-smile-box,html[dir=rtl] .option-csat.option-smile-box.selected,html[dir=rtl] .option-csat.option-smile-box:hover{background-position:calc(100% - 30px) 50%}html[dir=rtl] .option-csat.option-smile-box span{padding-right:39px;text-align:right;padding-left:0}html[dir=rtl] .cc-question-container[data-type=smile] .option-left-rating-text,html[dir=rtl] .cc-question-container[data-type=star] .option-left-rating-text,html[dir=rtl] .option-left-rating-text{right:10px;left:auto!important}html[dir=rtl] .cc-question-container[data-type=smile] .option-right-rating-text,html[dir=rtl] .cc-question-container[data-type=star] .option-right-rating-text{right:auto!important}html[dir=rtl] .option-right-rating-text{left:calc(100% - 322px);right:auto!important}html[dir=rtl] .cc-question-container[data-type=scale] .option-right-rating-text{left:13px;width:auto!important}}@media (max-width:381px){html[dir=rtl] .option-right-rating-text{left:calc(100% - 258px);right:auto!important}}.cc-select-wrapper{position:relative;display:inline-block;user-select:none;z-index:11}.cc-select-wrapper select{display:none}.cc-select{position:relative;display:inline-block;margin-left:70px}.cc-select-trigger{display:block;width:130px;padding:0 84px 0 22px;font-size:15px;font-style:italic;font-weight:300;color:#222;line-height:20px;background:transparent;border-radius:0;cursor:pointer;width:300px;border-bottom:1px solid #6d6d6d;display:inline-block;text-align:left;padding:5px 20px 5px 5px;position:relative;background-position:97%;background-repeat:no-repeat;max-height:50px;overflow:hidden}.cc-select-trigger:after{position:absolute;display:block;content:\\\"\\\";width:10px;height:10px;top:50%;right:5px;margin-top:-3px;border-bottom:1px solid #222;border-right:1px solid #222;transform:rotate(45deg) translateY(-50%);transition:all .2s ease-in-out;transform-origin:50% 0}.cc-select.opened .cc-select-trigger:after{margin-top:3px;transform:rotate(-135deg) translateY(-50%)}.cc-select-options-container{position:absolute;display:block;top:100%;left:0;right:0;min-width:100%;margin:15px 0;border:1px solid #b5b5b5;border-radius:4px;box-sizing:border-box;box-shadow:0 2px 1px rgba(0,0,0,.07);background:#fff;transition:all .2s ease-in-out;opacity:0;visibility:hidden;pointer-events:none;transform:translateY(calc(-100% - 65px));height:auto;max-height:150px;overflow:hidden;overflow-y:scroll}.cc-select-options{overflow-y:scroll;height:100%;width:110%}.cc-select.opened .cc-select-options-container{opacity:1;visibility:visible;pointer-events:all;transform:translateY(calc(-100% - 65px))}.cc-popup-container-2.top .cc-select-options-container,.cc-popup-container-2.top .cc-select.opened .cc-select-options-container{transform:translateY(calc(-100% + 75px))}.option-hover:before{background:#f9f9f9}.cc-select-option{position:relative;display:block;padding:0 12px;border-bottom:1px solid #e4e4e4;font-size:12px;font-weight:600;color:#222;line-height:34px;cursor:pointer;transition:all .2s ease-in-out;text-align:left;margin:0;width:100%}.cc-select-option:first-of-type{border-radius:4px 4px 0 0}.cc-select-option:last-of-type{border-bottom:0;border-radius:0 0 4px 4px}.cc-select-option.selection,.cc-select-option:hover{background:#eaeaea}.cc-select-wrapper.down .cc-select-options-container,.cc-select-wrapper.down .cc-select.opened .cc-select-options-container{transform:translateY(20px)}.cc-question-container[data-type=nps] .cc-question-container__content,.cc-question-container[data-type=scale] .cc-question-container__content{width:40%}@media (max-width:767px){.cc-select,.cc-select-wrapper{min-width:100%}.cc-select{margin-left:0}.cc-select-trigger{min-width:100%;width:auto}}html[dir=rtl] .cc-select-trigger{padding:0 22px 0 84px;background-position:97%;background-repeat:no-repeat;text-align:right}html[dir=rtl] .cc-select-trigger:after{top:50%;left:2px;right:auto}html[dir=rtl] .cc-select-option{text-align:right}html[dir=rtl] .cc-select-option:first-of-type{border-radius:4px 0 0 4px}html[dir=rtl] .cc-select-option:last-of-type{border-radius:0 4px 4px 0}.cc-checkbox{display:table-cell;position:relative;text-align:left;vertical-align:middle}.cc-checkbox label{cursor:pointer}.cc-checkbox+span label img{width:40px;display:inline-block;vertical-align:middle}.cc-checkbox label:after,.cc-checkbox label:before{bottom:0;content:\\\"\\\";left:0;margin:auto;position:absolute;top:0}.cc-checkbox label:before{background:transparent;border-radius:2px;border:1px solid #424242;cursor:pointer;height:20px;transition:background .3s;width:20px}.cc-checkbox input[type=checkbox]{margin-right:10px;opacity:0;outline:0}.cc-checkbox input[type=checkbox]:checked+label:before{background:#fdaf19;border:none}.cc-checkbox input[type=checkbox]:checked+label:after{border:3px solid #222;border-right-style:none;border-top-style:none;height:7px;left:4px;top:-3px;transform:rotate(-45deg);width:12px}.cc-checkbox.cc-radio label:before{background:transparent;border:1px solid #424242;cursor:pointer;height:25px;transition:background .3s;width:25px}.cc-checkbox input[type=radio]{margin-right:10px;opacity:0;outline:0}.cc-checkbox input[type=radio]:checked+label:before{background:transparent;border-color:#fdaf19}.cc-checkbox input[type=radio]:checked+label:after{-moz-transform:scale(.8);-ms-transform:scale(.8);-o-transform:scale(.8);-webkit-transform:scale(.8);background:#fdaf19;border-radius:30px;height:25px;transform:scale(.8);width:25px}.cc-radio label:before{border-radius:30px}.radio-toggle--more-option li span{padding-left:25px!important;width:125px!important}.radio-toggle .cc-question-container__list li{padding-left:15px}.radio-toggle .cc-question-container__list li span{padding:10px}@media (min-width:1000px){.radio-toggle .cc-question-container__list li span label{overflow:hidden;max-height:100px;display:block}}@media (min-width:767px) and (max-width:992px){.radio-toggle .cc-question-container__list li{padding-left:10px}.radio-toggle .cc-question-container__list li span{padding:10px}}@media (max-width:767px){.radio-toggle .cc-question-container__list li{padding-left:0;display:inline-block;padding-right:50px}}.progress-bar{width:100%;position:absolute;background:#a47c2b;z-index:1;height:8px;left:0}.progress-line{background:#fdaf19;height:100%;display:block;width:0;transition:all .4s ease-in}.cc-scrollbar-wrapper{float:left;height:100%;overflow:hidden;position:relative;width:100%;z-index:1}.cc-scrollbar-content{box-sizing:border-box;height:100%;overflow:auto;position:relative;width:107%}.cc-scrollbar-scroll{background:#aaa;border-radius:4px;cursor:pointer;opacity:0;position:relative;top:0;transition:opacity .25s linear;width:9px;z-index:2}.cc-scrollbar-container:hover .cc-scrollbar-scroll{opacity:1}.cc-scrollbar-grabbed{-moz-user-select:none;-o-user-select:none;-webkit-user-select:none;user-select:none}.range{-webkit-appearance:none;-moz-appearance:none;width:500px}input[type=range]::-webkit-slider-runnable-track{-webkit-appearance:none;background:#ff403d;background:linear-gradient(135deg,#ff403d,#992a28);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=\\\"#ff403d \\\",endColorstr=\\\"#992a28 \\\",GradientType=1);height:1px}input[type=range]:focus{outline:none}input[type=range]::-moz-range-track{-moz-appearance:none;background:#ff403d;background:linear-gradient(135deg,#ff403d,#992a28);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=\\\"#ff403d \\\",endColorstr=\\\"#992a28 \\\",GradientType=1);height:1px}input[type=range]::-webkit-slider-thumb{-webkit-appearance:none;border:1px solid #ff403d;border-radius:50%;height:32px;width:32px;max-width:80px;position:relative;bottom:16px;background-color:#fff;cursor:-webkit-grab}input[type=range]::-moz-range-thumb{-moz-appearance:none;border:1px solid #ff403d;border-radius:50%;height:32px;width:32px;max-width:80px;position:relative;bottom:16px;background-color:#fff;cursor:-moz-grab}input[type=range]::-moz-range-thumb:before{content:\\\"asd\\\"}input[type=range]::-webkit-slider-thumb:active{cursor:-webkit-grabbing}input[type=range]::-moz-range-thumb:active{cursor:-moz-grabbing}.cc-question-container__content.range-slider{height:50px;padding-top:9px}.slider-tip{background:#eb1c23;padding:8px 9px 9px;position:absolute;top:51px;left:0;right:0;margin:0 auto;color:#fff;background:none;color:#424242;font-size:13px;width:100px;display:inline-block;text-align:center;font-weight:700}.slider-tip:after{border-width:5px 5px 0;border-top-color:#000}@media (max-width:1024px){.range{width:100%}}input.range.blue::-moz-range-track,input.range.blue::-webkit-slider-runnable-track{background:blue}.chart{box-sizing:border-box;display:inline-block;height:21px;padding-top:22px;position:relative;vertical-align:top;width:21px}.chart span{display:block;font-size:2em;font-weight:400}.chart canvas{left:0;position:absolute;top:0}.loader{height:21px;left:28px;position:absolute;top:8px;width:21px}@media (min-width:767px){.chart canvas{margin-left:10px}}@media (max-width:767px){.loader{position:relative;left:auto;top:0;right:auto}}html[dir=rtl] .chart canvas{right:0;left:auto}html[dir=rtl] .loader{right:28px;left:auto}@media (min-width:767px){html[dir=rtl] .chart canvas{margin-right:10px;margin-left:0}}.show{display:block!important}.show-inline{display:inline-block!important}.hide{display:none!important}.bottom{bottom:0}.right{right:0}.left{left:0}.top{top:0}.overlay{background:#fff;bottom:0;height:100%;left:0;position:absolute;top:0;width:100%;z-index:0}.overlay.glass{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/ww.png);background-repeat:no-repeat;background-size:cover}.clearfix{clear:both;display:block}.text-normal{font-weight:400}.form-control::-webkit-input-placeholder{color:#4c4c4c;font-family:Open Sans;font-size:13px;font-style:italic;font-weight:400}.form-control::-moz-placeholder{font-style:italic;font-size:13px;font-weight:400;font-family:Open Sans;color:#4c4c4c}.form-control:-ms-input-placeholder{font-style:italic;font-size:13px;font-weight:400;font-family:Open Sans;color:#4c4c4c}.form-control:-moz-placeholder{font-style:italic;font-size:13px;font-weight:400;font-family:Open Sans;color:#4c4c4c}@media (min-width:767px){.desktop-hide{display:none}}@media (max-width:767px){.mobile-hide{display:none}.loader{position:relative;left:auto;top:0;right:auto}.overlay.welcome-overlay{background:rgba(210,42,53,.87)}body.blurr>:not(.cc-popup-container):not(.cc-survey),iframe{-webkit-filter:blur(15px);-moz-filter:blur(15px);-ms-filter:blur(15px);-o-filter:blur(15px);filter:blur(15px)}}html[dir=rtl] .submit-icon{left:0;right:auto;margin-left:75px;background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg width='47' height='47' viewBox='0 0 47 47' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Ccircle cx='19.313' cy='19.313' r='19.313' fill-rule='nonzero' fill='%23white'/%3E%3Ccircle cx='19.313' cy='19.313' r='19.313' fill='%23FCAF18'/%3E%3Cg fill-rule='nonzero' fill='%23404041'%3E%3Cpath d='M27.18 11l.994.993-7.308 7.309 7.308 7.308-.993.993-8.302-8.301z'/%3E%3Cpath d='M21.007 11l.993.993-7.308 7.309L22 26.61l-.993.993-8.302-8.301z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\\\")}@media (max-width:767px){html[dir=rtl] .submit-icon{position:absolute;right:30px;left:auto;top:auto;bottom:30px;padding-left:0;right:20px;margin:0}}.yellow .progress-bar{background:#a47c2b}.yellow .progress-line{background:#fdaf19}.yellow .submit-icon{background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg width='47' height='47' viewBox='0 0 47 47' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Ctitle%3EGroup 16%3C/title%3E%3Cdefs%3E%3Ccircle id='b' cx='19.313' cy='19.313' r='19.313'/%3E%3Cfilter x='-18.1%25' y='-12.9%25' width='136.2%25' height='136.2%25' filterUnits='objectBoundingBox' id='a'%3E%3CfeOffset dy='2' in='SourceAlpha' result='shadowOffsetOuter1'/%3E%3CfeGaussianBlur stdDeviation='2' in='shadowOffsetOuter1' result='shadowBlurOuter1'/%3E%3CfeColorMatrix values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.116423234 0' in='shadowBlurOuter1'/%3E%3C/filter%3E%3C/defs%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg transform='translate(4 2)'%3E%3Cuse fill='%23000' filter='url(%23a)' xlink:href='%23b'/%3E%3Cuse xlink:href='%23b'/%3E%3C/g%3E%3Cg fill-rule='nonzero' fill='%23404041'%3E%3Cpath d='M23.167 13l-.993.993 7.308 7.309-7.308 7.308.993.993 8.302-8.301z'/%3E%3Cpath d='M16.993 13l-.993.993 7.308 7.309L16 28.61l.993.993 8.302-8.301z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\\\")}.yellow .cc-checkbox input[type=checkbox]:checked+label:before{background:#fdaf19}.yellow .cc-checkbox input[type=checkbox]:checked+label:after{border-color:#222}.yellow .cc-checkbox input[type=radio]:checked+label:before{border-color:#fdaf19}.yellow .cc-checkbox input[type=radio]:checked+label:after{background:#fdaf19}.yellow .form-control:focus{border-color:#fcaf18}.yellow .cc-message-box__btn{background:#fdaf19}.red .progress-bar{background:#d22a35}.red .progress-line{background:#d22a35;filter:brightness(150%)}.red .cc-checkbox input[type=checkbox]:checked+label:before{background:#d22a35}.red .cc-checkbox input[type=checkbox]:checked+label:after{border-color:#fff}.red .cc-checkbox input[type=radio]:checked+label:before{border-color:#d22a35}.red .cc-checkbox input[type=radio]:checked+label:after{background:#d22a35}.red .form-control:focus{border-color:#d22a35}.red .cc-message-box__btn{background:#d22a35;color:#fff}.red .submit-icon{background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg width='47' height='47' viewBox='0 0 47 47' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Ctitle%3EGroup 16%3C/title%3E%3Cdefs%3E%3Ccircle id='b' cx='19.313' cy='19.313' r='19.313'/%3E%3Cfilter x='-18.1%25' y='-12.9%25' width='136.2%25' height='136.2%25' filterUnits='objectBoundingBox' id='a'%3E%3CfeOffset dy='2' in='SourceAlpha' result='shadowOffsetOuter1'/%3E%3CfeGaussianBlur stdDeviation='2' in='shadowOffsetOuter1' result='shadowBlurOuter1'/%3E%3CfeColorMatrix values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.116423234 0' in='shadowBlurOuter1'/%3E%3C/filter%3E%3C/defs%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg transform='translate(4 2)'%3E%3Cuse fill='%23fff' filter='url(%23a)' xlink:href='%23b'/%3E%3Cuse fill='rgba(210, 42, 53, 1)' xlink:href='%23b'/%3E%3C/g%3E%3Cg fill-rule='nonzero' fill='%23FFF'%3E%3Cpath d='M23.167 13l-.993.993 7.308 7.309-7.308 7.308.993.993 8.302-8.301z'/%3E%3Cpath d='M16.993 13l-.993.993 7.308 7.309L16 28.61l.993.993 8.302-8.301z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\\\")}.cc-question-container,.hide-slide{-webkit-transform:translateX(5px);transform:translateX(5px)}.cc-question-container,.hide-bottom-up,.hide-slide{transition:transform .3s ease,opacity .3s ease,visibility .3s ease;visibility:hidden;opacity:0}.hide-bottom-up{-webkit-transform:translateY(30px);transform:translateY(30px)}.hide-up-bottom{-webkit-transform:translateY(100%);transform:translateY(100%)}.hide-right-left,.hide-up-bottom{transition:transform .3s ease,opacity .3s ease,visibility .3s ease;visibility:hidden;opacity:0}.hide-right-left{-webkit-transform:translateX(100%);transform:translateX(100%)}.hide-left-right{-webkit-transform:translateX(-100%);transform:translateX(-100%);visibility:hidden;opacity:0}.hide-left-right,.show-slide,.show-thankyou-slide{transition:transform .3s ease,opacity .3s ease,visibility .3s ease}.show-slide,.show-thankyou-slide{visibility:visible;opacity:1;-webkit-transform:translateX(0) translateY(0);transform:translateX(0) translateY(0)}#timer{position:relative}svg.timer{position:absolute;top:0;left:0;width:40px;height:40px;transform:rotateY(-180deg) rotate(-90deg)}html[dir=rtl] svg.timer{right:0;left:auto}svg.timer circle{stroke-dasharray:50px;stroke-dashoffset:0px;stroke-linecap:round;stroke-width:2px;stroke:red;fill:none;animation:countdown 10s linear 1 forwards}@keyframes countdown{0%{stroke-dashoffset:0px}to{stroke-dashoffset:50px}}.cc-loaderimg{position:absolute;width:100%;z-index:1000;left:0;right:0;top:0;height:100%;background:hsla(0,0%,100%,.8)}.cc-loaderimg svg{width:100px}\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function() {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\tvar result = [];\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar item = this[i];\n\t\t\tif(item[2]) {\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\n\t\t\t} else {\n\t\t\t\tresult.push(item[1]);\n\t\t\t}\n\t\t}\n\t\treturn result.join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(selector) {\n\t\tif (typeof memo[selector] === \"undefined\") {\n\t\t\tmemo[selector] = fn.call(this, selector);\n\t\t}\n\n\t\treturn memo[selector]\n\t};\n})(function (target) {\n\treturn document.querySelector(target)\n});\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = __webpack_require__(17);\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton) options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n\tif (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\toptions.attrs.type = \"text/css\";\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\toptions.attrs.type = \"text/css\";\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports) {\n\n\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=cc-survey id={{surveyToken}}-survey> <div class=\\\"cc-popup-container-2 {{animation}} {{location}}\\\"> <div class=\\\"overlay glass\\\"></div> <div class=\\\"cc-popup-container-2__icons cc-left-icon\\\"> <span class=\\\"is-cc-popup-container-back cc-popup-container__back act-cc-button-prev\\\"></span> <ul class=loader> <li class=chart data-percent=75></li> </ul> </div> <div class=\\\"cc-popup-container-2__icons cc-right-icon\\\"> <img src=https://cx.getcloudcherry.com/microsurvey-assets/Collapse_Icon.svg class=\\\"is-cc-popup-container-minimize cc-popup-container__minimize act-cc-button-minimize mobile-hide\\\"> <img src=https://cx.getcloudcherry.com/microsurvey-assets/Close_Icon.svg class=\\\"is-cc-popup-container-close cc-popup-container__close act-cc-button-close mobile-hide\\\"> <img src=https://cx.getcloudcherry.com/microsurvey-assets/Close_Icon2.svg class=\\\"is-cc-popup-container-close cc-popup-container__close cc-popup-container__close2 act-cc-button-close desktop-hide\\\"> </div> <div class=cc-survey-container> <div class=cc-survey-content> <div class=cc-questions-container> </div> </div> <div class=\\\"submit-icon act-cc-button-next\\\"></div> <div class=\\\"{{location}} progress-bar\\\" id=progressBar> <span class=progress-line id=progress-line></span> </div> </div> </div> </div> \";\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"act-cc-welcome-question-box cc-popup-container {{location}} {{animation}}\\\" id={{surveyToken}}-welcome> <div class=\\\"overlay glass\\\"></div> <div class=\\\"cc-loaderimg hide\\\"> <svg version=1.1 id=L9 xmlns=http://www.w3.org/2000/svg xmlns:xlink=http://www.w3.org/1999/xlink x=0px y=0px viewBox=\\\"0 0 100 100\\\" enable-background=\\\"new 0 0 0 0\\\" xml:space=preserve> <path fill=red d=\\\"M73,50c0-12.7-10.3-23-23-23S27,37.3,27,50 M30.9,50c0-10.5,8.5-19.1,19.1-19.1S69.1,39.5,69.1,50\\\"> <animateTransform attributeName=transform attributeType=XML type=rotate dur=1s from=\\\"0 50 50\\\" to=\\\"360 50 50\\\" repeatCount=indefinite /> </path> </svg> </div> <svg class=timer> <circle r=8 cx=20 cy=20 stroke=black stroke-width=0 fill=red></circle> </svg> <img src=https://cx.getcloudcherry.com/microsurvey-assets/Close_Icon.svg class=\\\"is-cc-popup-container-close cc-popup-container__close act-cc-button-close\\\"> <div class=cc-message-box> <h2 class=cc-message-box__text>{{question}}</h2> <a href=javascript:void(0) class=\\\"cc-message-box__btn act-cc-survey-start mobile-hide\\\" id=\\\"\\\">{{button}}</a> <div class=\\\"submit-icon act-cc-survey-start desktop-hide\\\"></div> </div> </div> \";\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container single-line\\\" data-required={{isRequired}} data-type=singleline data-id={{questionId}}> <div class=cc-question-container__text> <p><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> <span class=cc-question-container__validation>{{validationHint}}</span> </div> <div class=cc-question-container__content> <input type=text name=\\\"\\\" id={{questionId}} placeholder=Enter.. class=form-control> </div> </div> \";\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container single-line\\\" data-required={{isRequired}} data-type=number data-id={{questionId}}> <div class=cc-question-container__text> <p><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> <span class=cc-question-container__validation>{{validationHint}}</span> </div> <div class=cc-question-container__content> <input type=text name=\\\"\\\" id={{questionId}} placeholder=Enter.. class=form-control> </div> </div> \";\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=cc-question-container data-type=multiline data-id={{questionId}} data-required={{isRequired}}> <div class=cc-question-container__text> <p><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> <span class=cc-question-container__validation>{{validationHint}}</span> </div> <div class=cc-question-container__content> <textarea class=\\\"multiline-box form-control\\\" id={{questionId}} placeholder=\\\"Share your thoughts...\\\"></textarea> </div> </div> \";\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=cc-question-container data-type=checkbox data-id={{questionId}} data-required={{isRequired}}> <div class=cc-question-container__text> <p><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=\\\"cc-question-container__content cc-big-list-container\\\" id={{questionId}}> <ul class=cc-question-container__list> {{options}} </ul> </div> </div> \";\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container radio-toggle\\\" data-type=radio data-id={{questionId}} data-required={{isRequired}}> <div class=cc-question-container__text> <p><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=cc-question-container__content id={{questionId}}> <ul class=cc-question-container__list> {{options}} </ul> </div> </div> \";\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container radio-toggle radio-toggle--more-option\\\" data-required={{isRequired}} data-type=radioMore data-id={{questionId}}> <div class=cc-question-container__text> <p><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=cc-question-container__content id={{questionId}}> <ul class=cc-question-container__list> <li> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-one> <label class=\\\"ui checkbox\\\" for=service-one></label> </div> <span><label for=service-one>Learn more about a product</label></span> </li> <li> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-two> <label class=\\\"ui checkbox\\\" for=service-two></label> </div> <span><label for=service-two>Troubleshoot an error</label></span> </li> <li> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-three> <label class=\\\"ui checkbox\\\" for=service-three></label> </div> <span><label for=service-three>Understand a product</label></span> </li> </ul> </div> </div> \";\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container radio-toggle radio-toggle--image-toggle\\\" data-required={{isRequired}} data-type=radioImage data-id={{questionId}}> <div class=cc-question-container__text> <p><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=cc-question-container__content id={{questionId}}> <ul class=cc-question-container__list> {{options}} </ul> </div> </div> \";\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container {{scaleImageContainer}}\\\" data-type=scale data-id={{questionId}} data-required={{isRequired}}> <div class=cc-question-container__text> <p><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=\\\"cc-question-container__content rating-color act-cc-question-nps\\\" id={{questionId}}> <div class=cc-question-container__list> {{optionsRange}} <div class=\\\"circle-image circle-image-scale-010-neutral desktop-hide {{imageVisibility010}}\\\"> <img src={{mobileImageUrl}} class=cc-nps-image alt=\\\"\\\" usemap=#Map /> <map name=Map id=Map> <area target=\\\"\\\" alt=0 title=0 href=# class=option-number-item data-rating=0 coords=83,193,62,228,38,212,23,193,57,167 shape=poly> <area target=\\\"\\\" alt=1 title=1 href=# class=option-number-item data-rating=1 coords=54,165,21,189,11,173,4,154,2,140,43,134 shape=poly> <area target=\\\"\\\" alt=2 title=2 href=# class=option-number-item data-rating=2 coords=43,131,2,135,1,118,5,93,8,83,45,97 shape=poly> <area target=\\\"\\\" alt=3 title=3 href=# class=option-number-item data-rating=3 coords=48,92,10,78,17,61,28,44,39,32,66,66 shape=poly> <area target=\\\"\\\" alt=4 title=4 href=# class=option-number-item data-rating=4 coords=70,61,42,30,55,20,70,14,91,5,101,45 shape=poly> <area target=\\\"\\\" alt=5 title=5 href=# class=option-number-item data-rating=5 coords=105,44,92,5,113,2,134,3,147,5,139,46 shape=poly> <area target=\\\"\\\" alt=6 title=6 href=# class=option-number-item data-rating=6 coords=141,46,150,6,169,11,184,19,200,30,172,63 shape=poly> <area target=\\\"\\\" alt=7 title=7 href=# class=option-number-item data-rating=7 coords=175,63,202,34,218,48,227,66,232,78,194,93 shape=poly> <area target=\\\"\\\" alt=8 title=8 href=# class=option-number-item data-rating=8 coords=196,97,233,81,239,103,240,118,240,135,199,130 shape=poly> <area target=\\\"\\\" alt=9 title=9 href=# class=option-number-item data-rating=9 coords=199,135,240,140,236,159,229,175,221,189,187,167 shape=poly> <area target=\\\"\\\" alt=10 title=10 href=# class=option-number-item data-rating=10 coords=183,169,217,191,204,212,178,229,158,192 shape=poly> </map> <span class=\\\"cc-nps-selected-rating act-cc-nps-selected-rating desktop-hide\\\">0</span> </div> <div class=\\\"circle-image circle-image-scale-010-neutral desktop-hide {{imageVisibility110}}\\\"> <img src={{mobileImageUrl}} class=cc-nps-image alt=\\\"\\\" usemap=#Map2 /> <map name=Map2 id=Map2> <area target=\\\"\\\" alt=1 title=1 href=# class=option-number-item data-rating=1 coords=67,180,40,210,26,195,15,176,11,169,47,152 shape=poly> <area target=\\\"\\\" alt=2 title=2 href=# class=option-number-item data-rating=2 coords=48,149,9,163,2,140,1,124,3,110,45,115 shape=poly> <area target=\\\"\\\" alt=3 title=3 href=# class=option-number-item data-rating=3 coords=44,110,4,105,8,79,17,67,22,57,58,79 shape=poly> <area target=\\\"\\\" alt=4 title=4 href=# class=option-number-item data-rating=4 coords=58,76,24,54,33,39,48,29,65,18,85,54 shape=poly> <area target=\\\"\\\" alt=5 title=5 href=# class=option-number-item data-rating=5 coords=87,51,68,15,85,7,106,3,120,3,122,45 shape=poly> <area target=\\\"\\\" alt=6 title=6 href=# class=option-number-item data-rating=6 coords=123,42,123,0,141,2,163,8,176,14,157,52 shape=poly> <area target=\\\"\\\" alt=7 title=7 href=# class=option-number-item data-rating=7 coords=159,53,180,16,201,30,212,44,220,54,186,77 shape=poly> <area target=\\\"\\\" alt=8 title=8 href=# class=option-number-item data-rating=8 coords=188,80,222,55,229,69,236,83,241,108,199,111 shape=poly> <area target=\\\"\\\" alt=9 title=9 href=# class=option-number-item data-rating=9 coords=200,116,239,112,241,128,240,146,234,165,196,150 shape=poly> <area target=\\\"\\\" alt=10 title=10 href=# class=option-number-item data-rating=10 coords=193,153,233,168,225,187,212,202,202,212,175,181 shape=poly> </map> <span class=\\\"cc-nps-selected-rating act-cc-nps-selected-rating desktop-hide\\\">0</span> </div> <span class=clearfix></span> <span class=\\\"option-left-rating-text {{optionLeftExtraClass}}\\\">{{leftLabel}}</span> <span class=\\\"option-right-rating-text {{optionRightExtraClass}}\\\">{{rightLabel}}</span> <input type=hidden value=\\\"\\\" class=option-number-input> </div> </div> </div> {{style}} \";\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=cc-question-container data-type=csat data-required={{isRequired}} data-id={{questionId}}> <div class=cc-question-container__text> <p><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=\\\"cc-question-container__content rating-color\\\" id={{questionId}}> <div class=cc-question-container__list> <span class=\\\"option-csat option-smile-box one\\\" data-rating=1> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-yes> <label class=\\\"ui checkbox\\\" for=service-yes></label> </div> <span>Completely Agree</span> </span> <span class=\\\"option-csat option-smile-box two\\\" data-rating=2> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-yes> <label class=\\\"ui checkbox\\\" for=service-yes></label> </div> <span>Somewhat Agree</span> </span> <span class=\\\"option-csat option-smile-box three\\\" data-rating=3> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-yes> <label class=\\\"ui checkbox\\\" for=service-yes></label> </div> <span>Agree</span> </span> <span class=\\\"option-csat option-smile-box four\\\" data-rating=4> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-yes> <label class=\\\"ui checkbox\\\" for=service-yes></label> </div> <span>Somewhat Disagree</span> </span> <span class=\\\"option-csat option-smile-box five\\\" data-rating=5> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-yes> <label class=\\\"ui checkbox\\\" for=service-yes></label> </div> <span>Completely Disagree</span> </span> </div> </div> </div> \";\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=cc-question-container data-type=csat data-required={{isRequired}} data-id={{questionId}}> <div class=cc-question-container__text> <p><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=\\\"cc-question-container__content cc-csat rating-color\\\" id={{questionId}}> <div class=cc-question-container__list> <span class=\\\"option-csat option-smile-box one\\\" data-rating=1> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-yes> <label class=\\\"ui checkbox\\\" for=service-yes></label> </div> <span>Extremely Satisfied</span> </span> <span class=\\\"option-csat option-smile-box two\\\" data-rating=2> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-yes> <label class=\\\"ui checkbox\\\" for=service-yes></label> </div> <span>Very Satisfied</span> </span> <span class=\\\"option-csat option-smile-box three\\\" data-rating=3> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-yes> <label class=\\\"ui checkbox\\\" for=service-yes></label> </div> <span>Satisfied</span> </span> <span class=\\\"option-csat option-smile-box four\\\" data-rating=4> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-yes> <label class=\\\"ui checkbox\\\" for=service-yes></label> </div> <span>Somewhat Dissatisfied</span> </span> <span class=\\\"option-csat option-smile-box five\\\" data-rating=5> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-yes> <label class=\\\"ui checkbox\\\" for=service-yes></label> </div> <span>Very Dissatisfied</span> </span> </div> </div> </div> \";\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=cc-question-container data-type=nps data-id={{questionId}} data-required={{isRequired}}> <div class=cc-question-container__text> <p><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=\\\"cc-question-container__content rating-color act-cc-question-scale\\\" id={{questionId}}> <div class=cc-question-container__list> <div class=cc-options-container> <span data-rating=0 class=\\\"option-number-item mobile-hide option-zero\\\">0</span> <span data-rating=1 class=\\\"option-number-item mobile-hide option-one\\\">1</span> <span data-rating=2 class=\\\"option-number-item mobile-hide option-two\\\">2</span> <span data-rating=3 class=\\\"option-number-item mobile-hide option-three\\\">3</span> <span data-rating=4 class=\\\"option-number-item mobile-hide option-four\\\">4</span> <span data-rating=5 class=\\\"option-number-item mobile-hide option-five\\\">5</span> <span data-rating=6 class=\\\"option-number-item mobile-hide option-six\\\">6</span> <span data-rating=7 class=\\\"option-number-item mobile-hide option-seven\\\">7</span> <span data-rating=8 class=\\\"option-number-item mobile-hide option-eight\\\">8</span> <span data-rating=9 class=\\\"option-number-item mobile-hide option-nine\\\">9</span> <span data-rating=10 class=\\\"option-number-item mobile-hide option-ten\\\">10</span> <div class=\\\"circle-image desktop-hide\\\"> <img src=https://cx.getcloudcherry.com/microsurvey-assets/circle.svg class=cc-nps-image alt=\\\"\\\" usemap=#Map /> <map name=Map id=Map> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=0 coords=86,199,61,177,25,201,38,219,52,230,66,238 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=1 coords=59,173,22,198,12,180,5,160,4,146,44,138 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=2 coords=44,134,49,101,8,84,3,98,0,116,2,141 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=3 coords=49,97,71,68,42,33,25,54,14,71,10,81 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=4 coords=74,65,106,47,94,5,70,14,46,31 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=5 coords=144,47,154,4,135,1,114,1,98,4,108,48 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=6 coords=149,48,157,5,183,15,209,30,180,65 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=7 coords=183,67,211,34,231,56,243,79,204,97 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=8 coords=203,100,245,85,251,106,252,124,251,141,207,135 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=9 coords=208,140,251,146,245,169,231,197,194,172 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=10 coords=193,179,229,201,218,218,202,230,185,238,166,200 shape=poly> </map> <span class=\\\"cc-nps-selected-rating act-cc-nps-selected-rating desktop-hide\\\">0</span> </div> <span class=clearfix></span> <span class=\\\"option-left-rating-text mobile-hide\\\">Not at all likely</span> <span class=\\\"option-right-rating-text mobile-hide\\\">Very likely</span> <input type=hidden value=\\\"\\\" class=option-number-input> </div> </div> </div> </div>\";\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container drop-cc-question-container\\\" data-required={{isRequired}} data-type=select data-id={{questionId}}> <div class=cc-question-container__text> <p><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=cc-question-container__content id={{questionId}}> <div class=cc-select-wrapper> <select name=sources id=sources class=\\\"cc-select sources\\\" placeholder=Select> {{options}} </select> </div> </div> </div> \";\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container drop-cc-question-container\\\" data-required={{isRequired}} data-type=select data-id={{questionId}}> <div class=cc-question-container__text> <p><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=cc-question-container__content id={{questionId}}> <div class=cc-select-wrapper> <select name=sources id=sources class=\\\"cc-select sources\\\" placeholder=Select data-type=multiple> {{options}} </select> </div> </div> </div> \";\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=cc-question-container data-type=smile data-required={{isRequired}} data-id={{questionId}}> <div class=cc-question-container__text> <p><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=\\\"cc-question-container__content rating-color\\\" id={{questionId}}> <div class=cc-question-container__list> <span class=\\\"option-smile-box one\\\" data-rating=1></span> <span class=\\\"option-smile-box two\\\" data-rating=2></span> <span class=\\\"option-smile-box three\\\" data-rating=3></span> <span class=\\\"option-smile-box four\\\" data-rating=4></span> <span class=\\\"option-smile-box five\\\" data-rating=5></span> <span class=option-left-rating-text>{{leftLabel}}</span> <span class=option-right-rating-text>{{rightLabel}}</span> </div> </div> </div> \";\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=cc-question-container data-type=smile data-required={{isRequired}} data-id={{questionId}}> <div class=cc-question-container__text> <p><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=\\\"cc-question-container__content rating-color\\\" id={{questionId}}> <div class=cc-question-container__list> <span class=\\\"option-smile-box five\\\" data-rating=5></span> <span class=\\\"option-smile-box four\\\" data-rating=4></span> <span class=\\\"option-smile-box three\\\" data-rating=3></span> <span class=\\\"option-smile-box two\\\" data-rating=2></span> <span class=\\\"option-smile-box one\\\" data-rating=1></span> <span class=option-right-rating-text>{{leftLabel}}</span> <span class=option-left-rating-text>{{rightLabel}}</span> </div> </div> </div> \";\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=cc-question-container data-type=star data-required={{isRequired}} data-id={{questionId}}> <div class=cc-question-container__text> <p><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=\\\"cc-question-container__content rating-color\\\" id={{questionId}}> <div class=cc-question-container__list> <span class=option-star-box data-rating=1></span> <span class=option-star-box data-rating=2></span> <span class=option-star-box data-rating=3></span> <span class=option-star-box data-rating=4></span> <span class=option-star-box data-rating=5></span> <span class=option-left-rating-text>{{leftLabel}}</span> <span class=option-right-rating-text>{{rightLabel}}</span> </div> </div> </div> \";\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=cc-question-container data-required={{isRequired}} data-type=slider data-id={{questionId}}> <div class=cc-question-container__text> <p><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=\\\"cc-question-container__content rating-color range-slider\\\" id={{questionId}}> <div class=cc-question-container__slider> <input type=range name=\\\"\\\" value={{min}} min={{min}} max={{max}} class=\\\"range blue\\\"> <span class=option-left-rating-text>{{minLabel}}{{min}}</span> <span class=option-right-rating-text>{{maxLabel}}{{max}}</span> <span class=\\\"slider-tip act-slider-tip\\\"></span> </div> </div> </div> \";\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<li> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name={{qId}} id={{qId}}-img-service-{{labelFor}} value={{value}}> <label class=\\\"ui checkbox\\\" for={{qId}}-img-service-{{labelFor}}></label> </div> <span><label for={{qId}}-img-service-{{labelFor}} class=\\\"option-yes-no {{labelFor}}\\\"><img src={{image}} /> {{label}}</label></span> </li> \";\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<li> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name={{qId}} id={{qId}}-service-{{labelFor}} value={{value}}> <label class=\\\"ui checkbox\\\" for={{qId}}-service-{{labelFor}}></label> </div> <span><label for={{qId}}-service-{{labelFor}} class=\\\"option-yes-no {{labelFor}}\\\">{{label}}</label></span> </li>\";\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<li> <div class=cc-checkbox> <input type=checkbox value={{value}} name=\\\"\\\" id=check-{{labelFor}}> <label class=\\\"ui checkbox\\\" for=check-{{labelFor}}> </label> </div> <span><label for=check-{{labelFor}}>{{label}}</label></span> </li>\";\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<li> <div class=cc-checkbox> <input type=checkbox value={{value}} name=\\\"\\\" id=check-{{labelFor}}> <label class=\\\"ui checkbox\\\" for=check-{{labelFor}}> </label> </div> <span><label for=check-{{labelFor}}><img src={{image}} /> {{label}}</label></span> </li> \";\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container detail-box mobile-detail-box cc-thankyou-container\\\" id=cc-thankyou-container> <div class=cc-question-container__text> <p>{{question}}</p> <p class=cc-thankyou-powered><span class=cc-thankyou-logo></span>Delight powered by Cloudcherry</p> </div> <div class=cc-question-container__content> </div> </div> \";\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"cc-question-container drop-cc-question-container cc-language-selector\\\" data-required={{isRequired}} data-type=select data-id={{questionId}}> <div class=cc-question-container__text> <p><span class=cc-question-container__required-label></span>Select language</p> <span class=cc-question-container__required>* Mandatory</span> </div> <div class=cc-question-container__content id={{questionId}}> <div class=cc-select-wrapper> <select name=sources id=sources class=\\\"cc-select sources\\\" placeholder=Select> {{options}} </select> </div> </div> </div> \";\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar LanguageTextFilter_1 = __webpack_require__(7);\r\nvar ConditionalTextFilter = /** @class */ (function () {\r\n    function ConditionalTextFilter() {\r\n    }\r\n    ConditionalTextFilter.filterText = function (surveyHandler, question) {\r\n        var conditionaText = question.text == null ? '' : LanguageTextFilter_1.LanguageTextFilter.translateQuestionText(surveyHandler, question);\r\n        if (question.text != null) {\r\n            var conditionaText_1 = question.text.split(':');\r\n            if (question.text.includes(\":\")) {\r\n                conditionaText_1 = conditionaText_1[0] + ': <br><span class=\"text-normal\">' + conditionaText_1[1] + '</span>';\r\n            }\r\n            else {\r\n                conditionaText_1 = conditionaText_1[0];\r\n            }\r\n        }\r\n        if (question.leadingDisplayTexts == null) {\r\n            conditionaText = LanguageTextFilter_1.LanguageTextFilter.translateQuestionText(surveyHandler, question);\r\n            return conditionaText;\r\n        }\r\n        else if (question.leadingDisplayTexts.length == 0) {\r\n            conditionaText = LanguageTextFilter_1.LanguageTextFilter.translateQuestionText(surveyHandler, question);\r\n            return conditionaText;\r\n        }\r\n        else {\r\n            for (var _i = 0, _a = question.leadingDisplayTexts; _i < _a.length; _i++) {\r\n                var fOption = _a[_i];\r\n                if (fOption != null && fOption.filter != null && fOption.filter.filterquestions != null) {\r\n                    var iSatisfied = false;\r\n                    var iFailed = false;\r\n                    for (var _b = 0, _c = fOption.filter.filterquestions; _b < _c.length; _b++) {\r\n                        var filterByQuestion = _c[_b];\r\n                        if (ConditionalTextFilter.isAnd(filterByQuestion)) {\r\n                            if (ConditionalTextFilter.doesSatisfy(surveyHandler, filterByQuestion) && !iFailed) {\r\n                                iSatisfied = true;\r\n                            }\r\n                            else {\r\n                                iFailed = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                        else if (ConditionalTextFilter.isOr(filterByQuestion)) {\r\n                            if (ConditionalTextFilter.doesSatisfy(surveyHandler, filterByQuestion)) {\r\n                                iSatisfied = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (iSatisfied && !iFailed) {\r\n                        conditionaText = fOption.text;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return conditionaText;\r\n    };\r\n    ConditionalTextFilter.isAnd = function (filterQuestion) {\r\n        if (filterQuestion.groupBy == null || filterQuestion.groupBy.toUpperCase() == \"AND\") {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    ConditionalTextFilter.isOr = function (filterQuestion) {\r\n        if (filterQuestion.groupBy != null && filterQuestion.groupBy.toUpperCase() == \"OR\") {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    ConditionalTextFilter.isNumberCheck = function (filterQuestion) {\r\n        if (filterQuestion.answerCheck[0].includes(\"lt\") || filterQuestion.answerCheck[0].includes(\"gt\") || filterQuestion.answerCheck[0].includes(\"eq\")) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    ConditionalTextFilter.doesSatisfy = function (surveyHandler, filterQuestion) {\r\n        if (ConditionalTextFilter.isNumberCheck(filterQuestion)) {\r\n            if (filterQuestion.answerCheck[0].toLowerCase() == \"lt\") {\r\n                if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId) != null)\r\n                    if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput != null && surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput < filterQuestion.number) {\r\n                        return true;\r\n                    }\r\n            }\r\n            else if (filterQuestion.answerCheck[0].toLowerCase() == \"gt\") {\r\n                if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId) != null)\r\n                    if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput != null && surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput > filterQuestion.number) {\r\n                        return true;\r\n                    }\r\n            }\r\n            else if (filterQuestion.answerCheck[0].toLowerCase() == \"eq\") {\r\n                if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId) != null)\r\n                    if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput != null && surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput == filterQuestion.number) {\r\n                        return true;\r\n                    }\r\n            }\r\n        }\r\n        else {\r\n            var iFoundAll = false;\r\n            for (var _i = 0, _a = filterQuestion.answerCheck; _i < _a.length; _i++) {\r\n                var aAnswer = _a[_i];\r\n                if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId) != null)\r\n                    if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).textInput != null && surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).textInput.includes(aAnswer)) {\r\n                        iFoundAll = true;\r\n                        break;\r\n                    }\r\n                    else {\r\n                        iFoundAll = false;\r\n                        break;\r\n                    }\r\n            }\r\n            if (iFoundAll)\r\n                return true;\r\n        }\r\n        return false;\r\n    };\r\n    return ConditionalTextFilter;\r\n}());\r\nexports.ConditionalTextFilter = ConditionalTextFilter;\r\n\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar DomUtilities_1 = __webpack_require__(0);\r\n// import { ScrollBar } from './ScrollBar';\r\nvar Select_1 = __webpack_require__(8);\r\nvar Theme_1 = __webpack_require__(45);\r\nvar ConditionalFlowFilter_1 = __webpack_require__(9);\r\nvar Slider_1 = __webpack_require__(46);\r\nvar Constants_1 = __webpack_require__(1);\r\nvar DomSurvey = /** @class */ (function () {\r\n    function DomSurvey(ccsdk) {\r\n        this.trackSelects = [];\r\n        this.trackRadios = [];\r\n        this.currentQuestionListeners = [];\r\n        var self = this;\r\n        this.domListeners = [];\r\n        this.ccsdk = ccsdk;\r\n        this.qIndex = 0;\r\n        this.qResponse = {};\r\n        this.domSelectElements();\r\n        this.util = new DomUtilities_1.DomUtilities();\r\n        // self.scrollbar = new ScrollBar(\"data-cc-scrollbar\");\r\n        this.util.ready(function () {\r\n            // self.util.addClassAll(self.$popupContainer,'show-slide');\r\n        });\r\n    }\r\n    DomSurvey.prototype.setTheme = function (brandColor, time) {\r\n        var self = this;\r\n        this.util.ready(function () {\r\n            self.theme = new Theme_1.Theme(brandColor, time);\r\n        });\r\n    };\r\n    DomSurvey.prototype.setQIndex = function (index) {\r\n        this.qIndex = index;\r\n    };\r\n    DomSurvey.prototype.getQindex = function () {\r\n        return this.qIndex;\r\n    };\r\n    DomSurvey.prototype.domSelectElements = function () {\r\n        this.$questionContainer = document.\r\n            querySelectorAll(\".cc-questions-container\");\r\n        this.$popupContainer = document.querySelectorAll(\".cc-popup-container\");\r\n        this.$popupContainer2 = document.querySelectorAll(\".cc-popup-container-2\");\r\n        this.$body = document.querySelectorAll(\"body\")[0];\r\n        // this.select = new Select();\r\n    };\r\n    DomSurvey.prototype.removePrevListener = function (id) {\r\n        for (var _i = 0, _a = this.domListeners; _i < _a.length; _i++) {\r\n            var listener = _a[_i];\r\n            if (listener.id == id) {\r\n                var index = this.domListeners.indexOf(listener);\r\n                window.ccsdkDebug ? console.log(\"removing listener\", id) : '';\r\n                window.ccsdkDebug ? console.log(\"removing listener index\", index) : '';\r\n                this.util.removeListener(this.$body, listener.type, listener.internalHandler);\r\n                if (index > -1) {\r\n                    this.domListeners.splice(index, 1);\r\n                }\r\n                window.ccsdkDebug ? console.log(this.domListeners) : '';\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    DomSurvey.prototype.setupListeners = function () {\r\n        var self = this;\r\n        var startSurvey = this.util.initListener(\"click\", \".act-cc-survey-start\", function () {\r\n            if ((!self.util.hasClass(self.$startBtn, 'disabled')) && (self.ccsdk.surveyStatus != 'minimized')) {\r\n                var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n                document.dispatchEvent(onSurveyClickEvent);\r\n                self.util.addClass(self.$startBtn, 'disabled');\r\n                self.showLoader();\r\n                self.startSurvey();\r\n            }\r\n            else {\r\n                self.initSurveyDom();\r\n            }\r\n        });\r\n        this.domListeners.push(startSurvey);\r\n        startSurvey.internalHandler = this.util.listener(this.$body, startSurvey.type, startSurvey.id, startSurvey.cb);\r\n        var nextQue = this.util.initListener(\"click\", \".act-cc-button-next\", function () {\r\n            // alert(\"working\");\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            self.nextQuestion();\r\n        });\r\n        this.domListeners.push(nextQue);\r\n        nextQue.internalHandler = this.util.listener(this.$body, nextQue.type, nextQue.id, nextQue.cb);\r\n        var prevQue = this.util.initListener(\"click\", \".act-cc-button-prev\", function () {\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            self.prevQuestion();\r\n        });\r\n        this.domListeners.push(prevQue);\r\n        prevQue.internalHandler = this.util.listener(this.$body, prevQue.type, prevQue.id, prevQue.cb);\r\n        var closeSurvey = this.util.initListener(\"click\", \".act-cc-button-close\", function () {\r\n            var onSurveyCloseEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLOSE_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyCloseEvent);\r\n            self.ccsdk.survey.answers = {};\r\n            self.trackSelects = [];\r\n            self.destroyListeners();\r\n            self.util.trigger(document, 'ccclose', undefined);\r\n            self.bodyElement = document.\r\n                getElementsByTagName(\"body\")[0];\r\n            self.util.removeClass(self.bodyElement, \"blurr\");\r\n            self.ccsdk.survey.destroy();\r\n        });\r\n        this.domListeners.push(closeSurvey);\r\n        closeSurvey.internalHandler = this.util.listener(this.$body, closeSurvey.type, closeSurvey.id, closeSurvey.cb);\r\n        var minSurvey = this.util.initListener(\"click\", \".act-cc-button-minimize\", function () {\r\n            self.minimizeSurvey();\r\n        });\r\n        this.domListeners.push(minSurvey);\r\n        minSurvey.internalHandler = this.util.listener(self.$body, minSurvey.type, minSurvey.id, minSurvey.cb);\r\n    };\r\n    DomSurvey.prototype.minimizeSurvey = function () {\r\n        var _this = this;\r\n        // this.$popupContainer[0].removeClass('');\r\n        this.util.removeClass(this.$popupContainer2[0], 'hide-right-left');\r\n        this.util.addClass(this.$popupContainer2[0], 'hide-right-left');\r\n        setTimeout(function () {\r\n            _this.util.removeClass(_this.$popupContainer2[0], 'show-slide');\r\n        }, 200);\r\n        this.util.removeClass(this.$popupContainer[0], 'hide-right-left');\r\n        this.util.addClass(this.$popupContainer[0], 'hide-right-left');\r\n        setTimeout(function () {\r\n            _this.util.addClass(_this.$popupContainer[0], 'show-slide');\r\n        }, 200);\r\n        this.ccsdk.surveyStatus = 'minimized';\r\n        var resumeText = this.ccsdk.config.resumeButtonText ? this.ccsdk.config.resumeButtonText : 'Resume';\r\n        this.$startBtn.innerHTML = resumeText;\r\n        this.util.removeClass(this.$startBtn, 'disabled');\r\n        //update all start btns\r\n        // Array.prototype.forEach.call($startBtn, (el, i) => {\r\n        //   el.innerHTML = resumeText;\r\n        // });\r\n    };\r\n    DomSurvey.prototype.destroyListeners = function () {\r\n        // (window as any).ccsdkDebug?console.log(\"Removing all listeners\"):'';\r\n        for (var _i = 0, _a = this.domListeners; _i < _a.length; _i++) {\r\n            var listener = _a[_i];\r\n            this.util.removeListener(this.$body, listener.type, listener.internalHandler);\r\n        }\r\n        for (var _b = 0, _c = this.ccsdk.survey.domListeners; _b < _c.length; _b++) {\r\n            var listener = _c[_b];\r\n            this.util.removeListener(this.$body, listener.type, listener.internalHandler);\r\n        }\r\n        if (this.ccsdk.survey.languageSelect) {\r\n            this.ccsdk.survey.languageSelect.destroyListeners();\r\n        }\r\n        if (this.select) {\r\n            this.select.destroyListeners();\r\n        }\r\n    };\r\n    DomSurvey.prototype.startSurvey = function () {\r\n        this.ccsdk.survey.cancelKillWelcomeQuestion();\r\n        this.ccsdk.getSurveyData();\r\n    };\r\n    DomSurvey.prototype.initSurveyDom = function () {\r\n        this.domSelectElements();\r\n        // (window as any).ccsdkDebug?console.log(\"click in setup listener survey start\"):'';\r\n        this.util.addClassAll(this.$popupContainer2, 'show-slide');\r\n        this.util.removeClass(this.$popupContainer[0], 'show-slide');\r\n        if (this.ccsdk.surveyStatus == 'minimized') {\r\n            //resume survey\r\n        }\r\n        else {\r\n            //start survey\r\n            //check if only one language is configured\r\n            window.ccsdkDebug ? console.log(this.ccsdk.surveyData) : '';\r\n            if (typeof this.ccsdk.surveyData.translated == undefined || Object.keys(this.ccsdk.surveyData.translated).length < 1) {\r\n                this.loadFirstQuestion();\r\n            }\r\n            else {\r\n                this.ccsdk.survey.displayLanguageSelector();\r\n            }\r\n        }\r\n    };\r\n    DomSurvey.prototype.updateProgress = function () {\r\n        var el = document.querySelectorAll(\"#progress-line\")[0];\r\n        el.style.width = (this.qIndex / this.ccsdk.survey.questionsToDisplay.length) * 100 + '%';\r\n    };\r\n    DomSurvey.prototype.loadFirstQuestion = function () {\r\n        // applyRuleToAllEl(this.$questionContainer, );\r\n        // this.util.removeClassAll(this.$questionContainer, 'show-slide');\r\n        // this.util.addClass(this.$questionContainer, 'show-slide');\r\n        this.loadQuestionSpecifics(this.$questionContainer, 0);\r\n        this.util.removeClassAll(this.$questionContainer[0].firstChild, 'show-slide');\r\n        this.util.addClass(this.$questionContainer[0].firstChild, 'show-slide');\r\n        var leftIcon = this.util.get('.act-cc-button-prev');\r\n        this.util.addClassAll(leftIcon, 'hide-slide');\r\n        var onSurveyQuestionEvent = new CustomEvent(Constants_1.Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken);\r\n        document.dispatchEvent(onSurveyQuestionEvent);\r\n    };\r\n    DomSurvey.prototype.nextQuestion = function () {\r\n        window.ccsdkDebug ? console.log('next question q response init', this.qResponse) : '';\r\n        // console.log('next question q response init',this.qResponse);\r\n        //empty the domListner\r\n        // this.util.removeAllListeners(this.domListeners);\r\n        var onSurveyQuestionEvent = new CustomEvent(Constants_1.Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken);\r\n        document.dispatchEvent(onSurveyQuestionEvent);\r\n        //submit the current response\r\n        // (window as any).ccsdkDebug?console.log('submit ',this.qResponse.type, this.qResponse):'';\r\n        var isRequired = false;\r\n        var q = this.$questionContainer[0].firstChild;\r\n        // (window as any).ccsdkDebug?console.log(this.$questionContainer):'';\r\n        var span = this.$questionContainer[0].firstChild.querySelectorAll(\".cc-question-container__required\")[0];\r\n        var validationSpan = this.$questionContainer[0].firstChild.querySelectorAll(\".cc-question-container__validation\")[0];\r\n        if (span)\r\n            this.util.removeClass(span, \"show\");\r\n        if (validationSpan)\r\n            this.util.removeClass(validationSpan, \"show\");\r\n        //check if question is required \r\n        isRequired = q.getAttribute('data-required').toLowerCase() == 'true' ? true : false;\r\n        // console.log('required check',Object.keys(this.qResponse).length, isRequired, this.qResponse);\r\n        // if (isRequired && Object.keys(this.qResponse).length === 0) {\r\n        if (isRequired && (Object.keys(this.qResponse).length === 0)) {\r\n            if (span) {\r\n                this.util.addClass(span, \"show\");\r\n                this.util.removeClass(span, \"hide\");\r\n            }\r\n            return;\r\n        }\r\n        else if (isRequired && (!this.qResponse.text) && (!this.qResponse.number)) {\r\n            if (span) {\r\n                this.util.addClass(span, \"show\");\r\n                this.util.removeClass(span, \"hide\");\r\n            }\r\n            return;\r\n        }\r\n        else {\r\n            if (span) {\r\n                this.util.removeClass(span, \"show\");\r\n                this.util.addClass(span, \"hide\");\r\n            }\r\n            //check if validationRegex is set and is fulfilled\r\n            var validationRegex = this.ccsdk.survey.questionsToDisplay[this.qIndex].validationRegex;\r\n            if (validationRegex) {\r\n                window.ccsdkDebug ? console.log('validationRegex', validationRegex) : '';\r\n                window.ccsdkDebug ? console.log('response', this.qResponse) : '';\r\n                var pattern = validationRegex.match(new RegExp('^/(.*?)/([gimy]*)$'));\r\n                var regex = new RegExp(validationRegex);\r\n                if (this.qResponse.text) {\r\n                    console.log('test regex text', regex.test(this.qResponse.text));\r\n                    if (regex.test(this.qResponse.text)) {\r\n                        this.util.removeClass(validationSpan, \"show\");\r\n                        this.util.addClass(validationSpan, \"hide\");\r\n                    }\r\n                    else {\r\n                        if (validationSpan) {\r\n                            this.util.addClass(validationSpan, \"show\");\r\n                            this.util.removeClass(validationSpan, \"hide\");\r\n                        }\r\n                        return;\r\n                    }\r\n                }\r\n                else if (this.qResponse.number) {\r\n                    window.ccsdkDebug ? console.log('test regex text', regex.test(this.qResponse.number)) : '';\r\n                    if (regex.test(this.qResponse.number)) {\r\n                        this.util.removeClass(validationSpan, \"show\");\r\n                        this.util.addClass(validationSpan, \"hide\");\r\n                    }\r\n                    else {\r\n                        if (validationSpan) {\r\n                            this.util.addClass(validationSpan, \"show\");\r\n                            this.util.removeClass(validationSpan, \"hide\");\r\n                        }\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            if (this.qResponse !== 'undefined') {\r\n                // (window as any).ccsdkDebug?console.log('qindex ' + this.qIndex):'';\r\n                if (typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined'\r\n                    && this.qResponse.type == this.ccsdk.survey.answers[this.currentQuestionId].type\r\n                    && this.qResponse.text == this.ccsdk.survey.answers[this.currentQuestionId].text\r\n                    && this.qResponse.number == this.ccsdk.survey.answers[this.currentQuestionId].number) {\r\n                    console.log('no submit');\r\n                    //don't submit if already submitted.\r\n                }\r\n                else if (typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined'\r\n                    && !this.qResponse.text\r\n                    && !this.qResponse.number) {\r\n                    // console.log('no submit 2');\r\n                    //previous entry filled\r\n                }\r\n                else {\r\n                    // (window as any).ccsdkDebug?console.log('submitting ' + this.currentQuestionId):'';\r\n                    // console.log(this.qResponse);\r\n                    var qId = this.qResponse.questionId ? this.qResponse.questionId : this.currentQuestionId;\r\n                    this.submitQuestion(this.qIndex, this.qResponse, this.qResponse.type, qId);\r\n                    //save response\r\n                    this.ccsdk.survey.answers[this.currentQuestionId] = JSON.parse(JSON.stringify(this.qResponse));\r\n                }\r\n            }\r\n        }\r\n        ConditionalFlowFilter_1.ConditionalFlowFilter.filterQuestion(this.ccsdk.survey, this.ccsdk.survey.questionsToDisplay[this.qIndex]);\r\n        // console.log(this.ccsdk.survey.questionsToDisplay);\r\n        //go to next question\r\n        this.qIndex++;\r\n        //reset the post parameters\r\n        // this.qResponse = typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined' ? JSON.parse(JSON.stringify(this.ccsdk.survey.answers[this.currentQuestionId])) : {};\r\n        // this.qResponse = {};\r\n        var nextButtonState = 'initial';\r\n        // (window as any).ccsdkDebug?console.log(this.$questionContainer):'';\r\n        var nextQ = this.$questionContainer;\r\n        // (window as any).ccsdkDebug?console.log(this.qIndex):'';\r\n        if (this.qIndex == this.ccsdk.survey.questionsToDisplay.length) {\r\n            //Last run to show thank you message\r\n            var leftIcon = this.util.get('.act-cc-button-prev');\r\n            var rightIcon = this.util.get('.cc-icon-right');\r\n            var nextIcon = this.util.get('.act-cc-button-next');\r\n            this.util.addClassAll(leftIcon, 'hide');\r\n            this.util.addClassAll(rightIcon, 'hide');\r\n            this.util.addClassAll(nextIcon, 'hide');\r\n            this.util.trigger(document, 'ccdone', undefined);\r\n            this.util.removeClass(this.$questionContainer[0].firstChild, 'show-slide');\r\n            this.updateProgress();\r\n        }\r\n        else {\r\n            if ((this.qIndex > this.ccsdk.survey.questionsToDisplay.length)) {\r\n                //reset the counter to show first question\r\n                this.qIndex = 0;\r\n            }\r\n            //repopulate qResponse based on answers.\r\n            window.ccsdkDebug ? console.log('previous answer', this.ccsdk.survey.answers[this.currentQuestionId]) : '';\r\n            this.qResponse = typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined' ? JSON.parse(JSON.stringify(this.ccsdk.survey.answers[this.currentQuestionId])) : {};\r\n            // this.util.removeClassAll(this.$questionContainer[0].firstChild, 'show-slide');\r\n            // this.util.addClass(nextQ, 'show-slide');\r\n            this.updateProgress();\r\n            this.loadQuestionSpecifics(nextQ, this.qIndex);\r\n            this.util.addClass(this.$questionContainer[0].firstChild, 'show-slide');\r\n            // if(nextButtonState === 'dirty'){\r\n            // this.submitQuestion(this.qIndex, 'test', 'multiline');\r\n            // }\r\n        }\r\n        if (this.qIndex == 0) {\r\n            var leftIcon = this.util.get('.act-cc-button-prev');\r\n            this.util.addClassAll(leftIcon, 'hide-slide');\r\n        }\r\n        else {\r\n            var leftIcon = this.util.get('.act-cc-button-prev');\r\n            this.util.addClass(leftIcon[0], 'show-slide');\r\n            this.util.removeClass(leftIcon[0], 'hide-slide');\r\n        }\r\n        window.ccsdkDebug ? console.log('next question q response end', this.qResponse) : '';\r\n        // this.qResponse = {};\r\n    };\r\n    DomSurvey.prototype.prevQuestion = function () {\r\n        this.qIndex--;\r\n        if (!this.ccsdk.survey.questionsToDisplay.length || this.qIndex < 0) {\r\n            this.qIndex = 0;\r\n            return;\r\n            // this.qIndex = this.$questionContainer.length - 1;\r\n        }\r\n        window.ccsdkDebug ? console.log(this.qIndex) : '';\r\n        var onSurveyQuestionEvent = new CustomEvent(Constants_1.Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken);\r\n        document.dispatchEvent(onSurveyQuestionEvent);\r\n        //re populate qResponse based on answers.\r\n        // this.util.removeClassAll(this.$questionContainer,'show-slide');\r\n        this.loadQuestionSpecifics(null, this.qIndex);\r\n        this.qResponse = typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined' ? JSON.parse(JSON.stringify(this.ccsdk.survey.answers[this.currentQuestionId])) : {};\r\n        window.ccsdkDebug ? console.log(\"prevQuestion qResponse\", this.qResponse) : '';\r\n        this.util.addClass(this.$questionContainer[0].firstChild, 'show-slide');\r\n        this.updateProgress();\r\n        if (this.qIndex == 0) {\r\n            var leftIcon = this.util.get('.act-cc-button-prev');\r\n            this.util.addClassAll(leftIcon, 'hide-slide');\r\n            this.util.removeClassAll(leftIcon, 'show-slide');\r\n        }\r\n    };\r\n    DomSurvey.prototype.showLoader = function () {\r\n        var $loader = document.querySelectorAll(\".cc-loaderimg\")[0];\r\n        this.util.addClass($loader, 'show');\r\n        this.util.removeClass($loader, 'hide');\r\n    };\r\n    DomSurvey.prototype.hideLoader = function () {\r\n        var $loader = document.querySelectorAll(\".cc-loaderimg\")[0];\r\n        this.util.removeClass($loader, 'show');\r\n        this.util.addClass($loader, 'hide');\r\n    };\r\n    DomSurvey.prototype.appendInBody = function (html) {\r\n        document.querySelectorAll(\"body\")[0].insertAdjacentHTML('afterbegin', html);\r\n        //force update domSelect\r\n        this.domSelectElements();\r\n    };\r\n    DomSurvey.prototype.replaceInQuestionsContainer = function (html) {\r\n        this.$questionContainer[0].innerHTML = html;\r\n        this.domSelectElements();\r\n    };\r\n    DomSurvey.prototype.appendInQuestionsContainer = function (html) {\r\n        document.querySelectorAll(\".cc-questions-container\")[0].insertAdjacentHTML('afterbegin', html);\r\n        //force update domSelect\r\n        this.domSelectElements();\r\n    };\r\n    DomSurvey.prototype.showWelcomeContainer = function () {\r\n        var _this = this;\r\n        setTimeout(function () {\r\n            var startContainer = document.\r\n                querySelectorAll(\".act-cc-welcome-question-box\")[0];\r\n            var bodyElement = document.\r\n                getElementsByTagName(\"body\")[0];\r\n            _this.util.addClass(startContainer, \"show-slide\");\r\n            _this.util.addClass(bodyElement, \"blurr\");\r\n        }, 200);\r\n        this.$startBtn = document.querySelectorAll(\".act-cc-survey-start\")[0];\r\n    };\r\n    DomSurvey.prototype.showLanguageSelector = function () {\r\n        var _this = this;\r\n        setTimeout(function () {\r\n            var startContainer = document.\r\n                querySelectorAll(\".cc-language-selector\")[0];\r\n            var bodyElement = document.\r\n                getElementsByTagName(\"body\")[0];\r\n            _this.util.addClass(startContainer, \"show-slide\");\r\n            _this.util.addClass(bodyElement, \"blurr\");\r\n        }, 200);\r\n        var self = this;\r\n        var languageSelect = this.util.initListener(\"click\", \".cc-language-select\", function () {\r\n            // let onSurveyClickEvent = new CustomEvent(Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            // document.dispatchEvent(onSurveyClickEvent);\r\n            //select language show next question.\r\n            // self.startSurvey();\r\n            self.ccsdk.config.language = \"default\";\r\n            self.ccsdk.config.language = \"\"; //language selection from menu then show first question\r\n        });\r\n        languageSelect.internalHandler = this.util.listener(this.$body, languageSelect.type, languageSelect.id, languageSelect.cb);\r\n    };\r\n    DomSurvey.prototype.getSurveyContainer = function (token) {\r\n        return document.querySelectorAll(\"#\" + token + \"-survey\")[0];\r\n    };\r\n    DomSurvey.prototype.getWelcomeContainer = function (token) {\r\n        return document.querySelectorAll(\"#\" + token + \"-welcome\")[0];\r\n    };\r\n    DomSurvey.prototype.loadQuestionSpecifics = function (q, index) {\r\n        var self = this;\r\n        this.$questionContainer[0].innerHTML = \"\";\r\n        var compiledTemplate = this.ccsdk.survey.compileTemplate(this.ccsdk.survey.questionsToDisplay[index]);\r\n        this.$questionContainer[0].innerHTML += compiledTemplate;\r\n        var qType = this.$questionContainer[0].firstChild.getAttribute('data-type');\r\n        var qId = this.$questionContainer[0].firstChild.getAttribute('data-id');\r\n        this.qResponse = {};\r\n        // (window as any).ccsdkDebug?console.log(\"QTYIPE AND QID \" , qType, qId):'';\r\n        this.currentQuestionId = qId.substring(2, qId.length);\r\n        switch (qType) {\r\n            case 'scale':\r\n                var allOptions1 = document.querySelectorAll('#' + qId + ' .option-number-item');\r\n                var optionWidth1 = (100 / allOptions1.length) - .6;\r\n                // (window as any).ccsdkDebug?console.log(\"Option width\", allOptions1, optionWidth1.toFixed(2)):'';\r\n                // self.util.css(allOptions1 , 'width',  optionWidth1.toFixed(1) + '%');\r\n                this.setupListenersQuestionScale(index, qId);\r\n                break;\r\n            case 'nps':\r\n                this.setupListenersQuestionNPS(index, qId);\r\n                break;\r\n            case 'multiline':\r\n                this.setupListenersQuestionMultiline(index, qId);\r\n                break;\r\n            case 'select':\r\n                if (typeof this.select !== 'undefined') {\r\n                    this.select.destroyListeners();\r\n                }\r\n                this.setupListenersQuestionSelect(index, qId);\r\n                break;\r\n            case 'radio':\r\n                this.setupListenersQuestionRadio(index, qId);\r\n                break;\r\n            case 'radioImage':\r\n                this.setupListenersQuestionRadioImage(index, qId);\r\n                break;\r\n            case 'checkbox':\r\n                this.setupListenersQuestionCheckbox(index, qId);\r\n                break;\r\n            case 'star':\r\n                this.setupListenersQuestionStar(index, qId);\r\n                break;\r\n            case 'smile':\r\n                this.setupListenersQuestionSmile(index, qId);\r\n                break;\r\n            case 'csat':\r\n                this.setupListenersQuestionCsat(index, qId);\r\n                break;\r\n            case 'slider':\r\n                this.setupListenersQuestionSlider(index, qId);\r\n                break;\r\n            case 'singleline':\r\n                this.setupListenersQuestionSingleline(index, qId);\r\n                break;\r\n            case 'number':\r\n                this.setupListenersQuestionNumber(index, qId);\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n    // question specific listeners\r\n    DomSurvey.prototype.setupListenersQuestionScale = function (index, qId) {\r\n        var self = this;\r\n        var selectedRating = document.querySelectorAll('#' + qId + ' .cc-nps-selected-rating')[0];\r\n        var selectedRating1 = document.querySelectorAll('#' + qId + ' .cc-nps-selected-rating')[1];\r\n        //add id too.\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .option-number-item', this.domListeners)) {\r\n            // return;\r\n            window.ccsdkDebug ? console.log(\"scale question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + ' .option-number-item');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('scale question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            var previousSelection = document.querySelectorAll('#' + qId + ' .option-number-item[data-rating=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug ? console.log('scale previous selection', previousSelection) : '';\r\n            if (typeof previousSelection !== 'undefined') {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                self.qResponse.type = 'scale';\r\n                self.qResponse.text = null;\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.questionId = qId;\r\n                selectedRating.innerHTML = previousValue;\r\n                selectedRating1.innerHTML = previousValue;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('click', '#' + qId + ' .option-number-item', function () {\r\n            var allOptions = document.querySelectorAll('#' + qId + ' .option-number-item');\r\n            var rating = this.getAttribute('data-rating');\r\n            self.util.removeClassAll(allOptions, \"selected\");\r\n            self.util.addClass(this, \"selected\");\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Scale selected',rating):'';\r\n            self.qResponse.type = 'scale';\r\n            self.qResponse.text = null;\r\n            self.qResponse.number = rating;\r\n            self.qResponse.questionId = qId;\r\n            selectedRating.innerHTML = '' + rating;\r\n            selectedRating1.innerHTML = '' + rating;\r\n            //move to next question automagically\r\n            // alert('calling next questions inside scale');\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n            // self.util.trigger(document,'q-answered', {\r\n            //   index : index,\r\n            //   rating : rating,\r\n            //   type : 'scale'\r\n            // });\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionNPS = function (index, qId) {\r\n        var self = this;\r\n        var selectedRating = document.querySelectorAll('#' + qId + ' .cc-nps-selected-rating')[0];\r\n        var allOptions = document.querySelectorAll('#' + qId + ' .option-number-item');\r\n        //add id too.\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .option-number-item', this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug ? console.log(\"nps question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + ' .option-number-item');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('nps question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            var previousSelection = document.querySelectorAll('#' + qId + ' .option-number-item[data-rating=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug ? console.log('nps previous selection', previousSelection) : '';\r\n            if (typeof previousSelection !== 'undefined') {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                var $mobileRating = document.querySelectorAll(\".act-cc-nps-selected-rating\")[0];\r\n                $mobileRating.innerHTML = previousValue;\r\n                self.qResponse.type = 'nps';\r\n                self.qResponse.text = null;\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        // (window as any).ccsdkDebug?console.log(self.domListeners):'';\r\n        var ref = this.util.initListener('click', '#' + qId + ' .option-number-item', function () {\r\n            var rating = this.getAttribute('data-rating');\r\n            self.util.removeClassAll(allOptions, \"selected\");\r\n            self.util.addClass(this, \"selected\");\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Scale selected',rating):'';\r\n            self.qResponse.type = 'nps';\r\n            self.qResponse.text = null;\r\n            self.qResponse.number = rating;\r\n            self.qResponse.questionId = qId;\r\n            selectedRating.innerHTML = '' + rating;\r\n            //move to next question automagically\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            // alert('calling next questions inside scale');\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n            // self.util.trigger(document,'q-answered', {\r\n            //   index : index,\r\n            //   rating : rating,\r\n            //   type : 'scale'\r\n            // });\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionCheckbox = function (index, qId) {\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .cc-checkbox', this.domListeners)) {\r\n            // return;\r\n            window.ccsdkDebug ? console.log(\"checkbox question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + ' .cc-checkbox');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('radio question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValues = this.ccsdk.survey.answers[questionId].text;\r\n            if (previousValues) {\r\n                previousValues = previousValues.split(',');\r\n                for (var _i = 0, previousValues_1 = previousValues; _i < previousValues_1.length; _i++) {\r\n                    var previousValue = previousValues_1[_i];\r\n                    var previousSelection = document.querySelectorAll('#' + qId + ' input[value=\"' + previousValue + '\"]')[0];\r\n                    window.ccsdkDebug ? console.log('radio previous selection', previousSelection) : '';\r\n                    if (typeof previousSelection !== 'undefined') {\r\n                        this.util.addClass(previousSelection, \"selected\");\r\n                        previousSelection.setAttribute('checked', 'checked');\r\n                        self.qResponse.type = 'checkbox';\r\n                        self.qResponse.text = previousValue;\r\n                        self.qResponse.number = null;\r\n                        self.qResponse.questionId = qId;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        var ref = this.util.initListener('click', '#' + qId + ' .cc-checkbox', function () {\r\n            // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox input');\r\n            // let rating : number = this.querySelectorAll('input')[0].value;\r\n            var rating = [].filter.call(document.querySelectorAll('#' + qId + ' .cc-checkbox input'), function (c) {\r\n                return c.checked;\r\n            }).map(function (c) {\r\n                return c.value;\r\n            }).join(',');\r\n            // (window as any).ccsdkDebug?console.log('Checkbox selected',rating):'';\r\n            self.qResponse.type = 'checkbox';\r\n            self.qResponse.text = rating;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n            //move to next question automagically\r\n            // self.nextQuestion();\r\n        });\r\n        this.domListeners.push(ref);\r\n        var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n        document.dispatchEvent(onSurveyClickEvent);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionRadio = function (index, qId) {\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .cc-checkbox input', this.domListeners)) {\r\n            // return;\r\n            //remove listeners\r\n            window.ccsdkDebug ? console.log(\"radio question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + ' .cc-checkbox input');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('radio question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            var previousSelection = document.querySelectorAll('#' + qId + ' input[value=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug ? console.log('radio previous selection', previousSelection) : '';\r\n            if (typeof previousSelection !== 'undefined') {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                previousSelection.setAttribute('checked', 'checked');\r\n                self.qResponse.type = 'radio';\r\n                self.qResponse.text = null;\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('click', '#' + qId + ' .cc-checkbox input', function () {\r\n            // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox');\r\n            var rating = this.value;\r\n            // self.util.removeClassAll(allOptions, \"selected\");\r\n            // self.util.addClass(this, \"selected\");\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\r\n            self.qResponse.type = 'radio';\r\n            self.qResponse.text = null;\r\n            self.qResponse.number = rating;\r\n            self.qResponse.questionId = qId;\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            //move to next question automagically\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionRadioImage = function (index, qId) {\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .cc-checkbox input', this.domListeners)) {\r\n            window.ccsdkDebug ? console.log(\"radio image question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + ' .cc-checkbox input');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('radio image question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].text;\r\n            var previousSelection = document.querySelectorAll('#' + qId + ' input[value=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug ? console.log('radio image previous selection', previousSelection) : '';\r\n            if (typeof previousSelection !== 'undefined') {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                previousSelection.setAttribute('checked', 'checked');\r\n                self.qResponse.type = 'radioImage';\r\n                self.qResponse.text = previousValue;\r\n                self.qResponse.number = null;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('click', '#' + qId + ' .cc-checkbox input', function () {\r\n            // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox');\r\n            var rating = this.value;\r\n            // self.util.removeClassAll(allOptions, \"selected\");\r\n            // self.util.addClass(this, \"selected\");\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\r\n            self.qResponse.type = 'radioImage';\r\n            self.qResponse.text = rating;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            //move to next question automagically\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionStar = function (index, qId) {\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .option-star-box', this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug ? console.log(\"smile question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + ' .option-smile-box');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('star question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            var previousSelection = document.querySelectorAll('#' + qId + ' .option-star-box[data-rating=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug ? console.log('star previous selection', previousSelection) : '';\r\n            if (typeof previousSelection !== 'undefined' && previousSelection != null) {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                self.qResponse.type = 'star';\r\n                self.qResponse.text = null;\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('click', '#' + qId + ' .option-star-box', function () {\r\n            var allOptions = document.querySelectorAll('#' + qId + ' .option-star-box');\r\n            var rating = this.getAttribute('data-rating');\r\n            self.util.removeClassAll(allOptions, \"selected\");\r\n            self.util.addClass(this, \"selected\");\r\n            //select previous sibling\r\n            // let child : any = this.previousSibling;\r\n            // while( ( child = child.previousSibling) != null ){\r\n            //   self.util.addClass(child, \"selected\");\r\n            // }\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\r\n            self.qResponse.type = 'star';\r\n            self.qResponse.text = null;\r\n            self.qResponse.number = rating;\r\n            self.qResponse.questionId = qId;\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            //move to next question automagically\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionSmile = function (index, qId) {\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .option-smile-box', this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug ? console.log(\"smile question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + ' .option-smile-box');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('smile question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            var previousSelection = document.querySelectorAll('#' + qId + ' .option-smile-box[data-rating=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug ? console.log('smile previous selection', previousSelection) : '';\r\n            if (typeof previousSelection !== 'undefined' && previousSelection != null) {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                self.qResponse.type = 'smile';\r\n                self.qResponse.text = null;\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('click', '#' + qId + ' .option-smile-box', function () {\r\n            var allOptions = document.querySelectorAll('#' + qId + ' .option-smile-box');\r\n            var rating = this.getAttribute('data-rating');\r\n            self.util.removeClassAll(allOptions, \"selected\");\r\n            self.util.addClass(this, \"selected\");\r\n            //select previous siblings\r\n            // let child : any = this.previousSibling;\r\n            // while( ( child = child.previousSibling) != null ){\r\n            //   self.util.addClass(child, \"selected\");\r\n            // }\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Smile selected',rating):'';\r\n            self.qResponse.type = 'smile';\r\n            self.qResponse.text = null;\r\n            self.qResponse.number = rating;\r\n            self.qResponse.questionId = qId;\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            //move to next question automagically\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionCsat = function (index, qId) {\r\n        var self = this;\r\n        if (this.util.checkIfListenerExists('#' + qId + ' .option-smile-box', this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug ? console.log(\"csat question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId + ' .option-smile-box');\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('csat question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            var previousSelection = document.querySelectorAll('#' + qId + ' .option-smile-box[data-rating=\"' + previousValue + '\"]')[0];\r\n            window.ccsdkDebug ? console.log('csat previous selection', previousSelection) : '';\r\n            if (typeof previousSelection !== 'undefined' && previousSelection != null) {\r\n                this.util.addClass(previousSelection, \"selected\");\r\n                previousSelection.querySelectorAll(\"input\")[0].setAttribute('checked', 'checked');\r\n                self.qResponse.type = 'smile';\r\n                self.qResponse.text = null;\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('click', '#' + qId + ' .option-smile-box', function () {\r\n            var allOptions = document.querySelectorAll('#' + qId + ' .option-smile-box');\r\n            var rating = this.getAttribute('data-rating');\r\n            self.util.removeClassAll(allOptions, \"selected\");\r\n            self.util.addClass(this, \"selected\");\r\n            this.querySelectorAll(\"input\")[0].setAttribute('checked', 'checked');\r\n            var child = this.previousSibling;\r\n            while ((child = child.previousSibling) != null) {\r\n                // (window as any).ccsdkDebug?console.log('questionscale', 'previousSiblings', child):'';\r\n                self.util.addClass(child, \"selected\");\r\n            }\r\n            // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\r\n            // (window as any).ccsdkDebug?console.log('Smile selected',rating):'';\r\n            self.qResponse.type = 'smile';\r\n            self.qResponse.text = null;\r\n            self.qResponse.number = rating;\r\n            self.qResponse.questionId = qId;\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            //move to next question automagically\r\n            setTimeout(function () {\r\n                self.nextQuestion();\r\n            }, 500);\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionMultiline = function (index, qId) {\r\n        var self = this;\r\n        var multilineRes = '';\r\n        if (this.util.checkIfListenerExists('#' + qId, this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug ? console.log(\"multiine question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId);\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('multiine question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].text;\r\n            window.ccsdkDebug ? console.log('multiine input box', document.querySelectorAll('#' + qId)[0]) : '';\r\n            var previousSelection = document.querySelectorAll('#' + qId)[0];\r\n            window.ccsdkDebug ? console.log('multiine previous selection', previousSelection) : '';\r\n            window.ccsdkDebug ? console.log('multiine previous value', previousValue) : '';\r\n            if (typeof previousSelection !== 'undefined' &&\r\n                previousSelection != null &&\r\n                typeof previousValue !== 'undefined') {\r\n                previousSelection.value = previousValue;\r\n                self.qResponse.type = 'multiline';\r\n                self.qResponse.text = previousValue;\r\n                self.qResponse.number = null;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('change', '#' + qId, function () {\r\n            multilineRes = this.value;\r\n            self.qResponse.type = 'multiline';\r\n            self.qResponse.text = multilineRes;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionSingleline = function (index, qId) {\r\n        var self = this;\r\n        var singlelineRes = '';\r\n        if (this.util.checkIfListenerExists('#' + qId, this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug ? console.log(\"singleline question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId);\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('singleline question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].text;\r\n            window.ccsdkDebug ? console.log('singleline input box', document.querySelectorAll('#' + qId)[0]) : '';\r\n            var previousSelection = document.querySelectorAll('#' + qId)[0];\r\n            window.ccsdkDebug ? console.log('singleline previous selection', previousSelection) : '';\r\n            window.ccsdkDebug ? console.log('singleline previous value', previousValue) : '';\r\n            if (typeof previousSelection !== 'undefined' &&\r\n                previousSelection != null &&\r\n                typeof previousValue !== 'undefined') {\r\n                previousSelection.value = previousValue;\r\n                self.qResponse.type = 'singleline';\r\n                self.qResponse.text = previousValue;\r\n                self.qResponse.number = null;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('change', '#' + qId, function () {\r\n            singlelineRes = this.value;\r\n            self.qResponse.type = 'singleline';\r\n            self.qResponse.text = singlelineRes;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n        console.log('singleline qResponse', self.qResponse);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionNumber = function (index, qId) {\r\n        var self = this;\r\n        var numberRes = '';\r\n        if (this.util.checkIfListenerExists('#' + qId, this.domListeners)) {\r\n            //remove listeners\r\n            window.ccsdkDebug ? console.log(\"number question - previous listeners exists\") : '';\r\n            this.removePrevListener('#' + qId);\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('number question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            window.ccsdkDebug ? console.log('number input box', document.querySelectorAll('#' + qId)[0]) : '';\r\n            var previousSelection = document.querySelectorAll('#' + qId)[0];\r\n            window.ccsdkDebug ? console.log('number previous selection', previousSelection) : '';\r\n            window.ccsdkDebug ? console.log('number previous value', previousValue) : '';\r\n            if (typeof previousSelection !== 'undefined' &&\r\n                previousSelection != null &&\r\n                typeof previousValue !== 'undefined') {\r\n                previousSelection.value = previousValue;\r\n                self.qResponse.type = 'number';\r\n                self.qResponse.text = null;\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener('change', '#' + qId, function () {\r\n            numberRes = this.value;\r\n            self.qResponse.type = 'number';\r\n            self.qResponse.text = null;\r\n            self.qResponse.number = numberRes;\r\n            self.qResponse.questionId = qId;\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionSlider = function (index, qId) {\r\n        var self = this;\r\n        var sliderRes = '';\r\n        var slider = new Slider_1.Slider();\r\n        var sliderInput = document.querySelectorAll('#' + qId + \" input\")[0];\r\n        if (this.util.checkIfListenerExists('#' + qId + \" input\", this.domListeners)) {\r\n            // return;\r\n        }\r\n        //set previous value\r\n        var questionId;\r\n        questionId = qId.substring(2, qId.length);\r\n        window.ccsdkDebug ? console.log('slider question', this.ccsdk.survey.answers[questionId]) : '';\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            var previousValue = this.ccsdk.survey.answers[questionId].number;\r\n            window.ccsdkDebug ? console.log('slider input box', document.querySelectorAll('#' + qId)[0]) : '';\r\n            var previousSelection = document.querySelectorAll('#' + qId + \" .act-slider-tip\")[0];\r\n            window.ccsdkDebug ? console.log('slider previous selection', previousSelection) : '';\r\n            window.ccsdkDebug ? console.log('slider previous value', previousValue) : '';\r\n            if (typeof previousSelection !== 'undefined' &&\r\n                previousSelection != null &&\r\n                typeof previousValue !== 'undefined') {\r\n                previousSelection.innerHTML = previousValue;\r\n                sliderInput.value = previousValue;\r\n                self.qResponse.type = 'slider';\r\n                self.qResponse.number = previousValue;\r\n                self.qResponse.text = null;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        var ref = this.util.initListener(\"change\", '#' + qId + \" input\", function () {\r\n            sliderRes = this.value;\r\n            self.qResponse.type = 'slider';\r\n            self.qResponse.number = sliderRes;\r\n            self.qResponse.text = null;\r\n            self.qResponse.questionId = qId;\r\n            //move to next question automagically\r\n            // self.nextQuestion();\r\n        });\r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    DomSurvey.prototype.setupListenersQuestionSelect = function (index, qId) {\r\n        var self = this;\r\n        var questionId;\r\n        window.ccsdkDebug ? console.log('select que', this.domListeners) : '';\r\n        questionId = qId.substring(2, qId.length);\r\n        // (window as any).ccsdkDebug?console.log(this.ccsdk.survey.answers[questionId]):'';\r\n        // (window as any).ccsdkDebug?console.log(this.ccsdk.survey.surveyAnswers[questionId]):'';\r\n        if (this.util.checkIfListenerExists('#' + qId + \" .cc-select-options .cc-select-option\", this.domListeners)) {\r\n            window.ccsdkDebug ? console.log('select que listner exists') : '';\r\n            this.removePrevListener('#' + qId + \" .cc-select-options .cc-select-option\");\r\n            // return;\r\n        }\r\n        window.ccsdkDebug ? console.log('select que') : '';\r\n        // if(!self.util.arrayContains.call(self.trackSelects, qId)){\r\n        window.ccsdkDebug ? console.log('select que initialize select') : '';\r\n        self.select = new Select_1.Select(qId);\r\n        self.select.destroyListeners();\r\n        self.select.init(qId);\r\n        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\r\n            if (this.ccsdk.survey.answers[questionId].text) {\r\n                self.select.setValue(this.ccsdk.survey.answers[questionId].text);\r\n                self.select.selectOptions(this.ccsdk.survey.answers[questionId].text);\r\n                self.qResponse.type = 'select';\r\n                self.qResponse.text = this.ccsdk.survey.answers[questionId].text;\r\n                self.qResponse.number = null;\r\n                self.qResponse.questionId = qId;\r\n            }\r\n        }\r\n        self.trackSelects.push(qId);\r\n        // }\r\n        var selectRes = '';\r\n        var ref = this.util.initListener('click', '#' + qId + \" .cc-select-options .cc-select-option\", function () {\r\n            // selectRes = this.getAttribute('data-value');\r\n            selectRes = document.querySelectorAll('#' + qId + \" .cc-select-trigger\")[0].innerHTML;\r\n            // (window as any).ccsdkDebug?console.log(selectRes):'';\r\n            self.qResponse.type = 'select';\r\n            self.qResponse.text = selectRes;\r\n            self.qResponse.number = null;\r\n            self.qResponse.questionId = qId;\r\n            //move to next question automagically\r\n            var onSurveyClickEvent = new CustomEvent(Constants_1.Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\r\n            document.dispatchEvent(onSurveyClickEvent);\r\n            // self.nextQuestion();\r\n        });\r\n        // this.util.removeListener(this.$body, ref.type, listener.internalHandler);    \r\n        this.domListeners.push(ref);\r\n        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\r\n    };\r\n    // addListenersNextButtonSubmit(index : number, data : any, type : string){\r\n    //   let self : DomSurvey = this;\r\n    //   let btnNext = self.util.get('.act-cc-button-next')[0];\r\n    //   self.util.on('click', btnNext, this.submitQuestion(\r\n    //     index, data, type\r\n    //   ));\r\n    //\r\n    // }\r\n    // removeListenersNextButtonSubmit(index : number, data : any, type : string){\r\n    //   let self : DomSurvey = this;\r\n    //   let btnNext = self.util.get('.act-cc-button-next');\r\n    //   self.util.on('click', btnNext, this.submitQuestion(\r\n    //     index, data, type\r\n    //   ));\r\n    //   self.util.off('click', btnNext, this.submitQuestion(\r\n    //     index, data, type\r\n    //   ));\r\n    // }\r\n    DomSurvey.prototype.submitQuestion = function (index, data, type, qId) {\r\n        // (window as any).ccsdkDebug?console.log('type', type ,'res',data):'';\r\n        this.util.trigger(document, 'q-answered', {\r\n            index: index,\r\n            data: data,\r\n            type: type,\r\n            questionId: qId.substring(2, qId.length)\r\n        });\r\n    };\r\n    return DomSurvey;\r\n}());\r\nexports.DomSurvey = DomSurvey;\r\n\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar DomUtilities_1 = __webpack_require__(0);\r\nvar Theme = /** @class */ (function () {\r\n    function Theme(brandColor, time) {\r\n        this.util = new DomUtilities_1.DomUtilities();\r\n        this.brandColorDark = this.util.shadeBlendConvert(-0.3, brandColor, undefined);\r\n        this.brandColorWhite = this.util.shadeBlendConvert(0.1, brandColor, undefined);\r\n        var css = '\\\n\t\t#progressBar{ \\\n\t\t\tbackground : ' + this.brandColorDark + ';\\\n\t\t}\\\n\t\t#progress-line{ \\\n\t\t\tbackground: ' + brandColor + ' \\\n\t\t}\\\n\t\t.cc-checkbox input[type=\"checkbox\"]:checked + label:before {\\\n\t\t\tbackground:' + brandColor + ';\\\n\t\t}\\\n\t\t.overlay.glass{\\\n\t\t\tbackground-color:' + this.util.hexToRGB(brandColor, .5) + ';\\\n\t\t}\\\n\t\t.cc-checkbox input[type=\"checkbox\"]:checked + label:after {\\\n\t\t\tborder-color: #fff;\\\n\t\t}\\\n\t\t.cc-checkbox input[type=\"radio\"]:checked + label:before {\\\n\t\t\tborder-color: ' + brandColor + ';\\\n\t\t}\\\n\t\t.cc-checkbox input[type=\"radio\"]:checked + label:before {\\\n\t\t\tborder-color: ' + brandColor + ';\\\n\t\t}\\\n\t\t.cc-checkbox input[type=\"radio\"]:checked + label:after {\\\n\t\t\tbackground: ' + brandColor + ';\\\n\t\t}\\\n\t\t.form-control:focus {\\\n\t\t\tborder-color: ' + brandColor + ';\\\n\t\t}\\\n\t\t.cc-message-box__btn{\\\n\t\t\tbackground: ' + brandColor + ';\\\n\t\t\tcolor:#fff;\\\n\t\t}\\\n\t\t.submit-icon{\\\n\t\t\t background-image: url(\"data:image/svg+xml,%3Csvg width=\\'47px\\' height=\\'47px\\' viewBox=\\'0 0 47 47\\' version=\\'1.1\\' xmlns=\\'http://www.w3.org/2000/svg\\' xmlns:xlink=\\'http://www.w3.org/1999/xlink\\'%3E%3C!-- Generator: Sketch 46 %2844423%29 - http://www.bohemiancoding.com/sketch --%3E%3Ctitle%3EGroup 16%3C/title%3E%3Cdesc%3ECreated with Sketch.%3C/desc%3E%3Cdefs%3E%3Ccircle id=\\'path-1\\' cx=\\'19.3130459\\' cy=\\'19.3130459\\' r=\\'19.3130459\\'%3E%3C/circle%3E%3Cfilter x=\\'-18.1%25\\' y=\\'-12.9%25\\' width=\\'136.2%25\\' height=\\'136.2%25\\' filterUnits=\\'objectBoundingBox\\' id=\\'filter-2\\'%3E%3CfeOffset dx=\\'0\\' dy=\\'2\\' in=\\'SourceAlpha\\' result=\\'shadowOffsetOuter1\\'%3E%3C/feOffset%3E%3CfeGaussianBlur stdDeviation=\\'2\\' in=\\'shadowOffsetOuter1\\' result=\\'shadowBlurOuter1\\'%3E%3C/feGaussianBlur%3E%3CfeColorMatrix values=\\'0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.116423234 0\\' type=\\'matrix\\' in=\\'shadowBlurOuter1\\'%3E%3C/feColorMatrix%3E%3C/filter%3E%3C/defs%3E%3Cg id=\\'Page-1\\' stroke=\\'none\\' stroke-width=\\'1\\' fill=\\'none\\' fill-rule=\\'evenodd\\'%3E%3Cg id=\\'1-copy-20\\' transform=\\'translate%28-1246.000000, -664.000000%29\\'%3E%3Cg id=\\'Group-16\\' transform=\\'translate%281250.000000, 666.000000%29\\'%3E%3Cg id=\\'Oval-4\\'%3E%3Cuse fill=\\'white\\' fill-opacity=\\'1\\' filter=\\'url%28%23filter-2%29\\' xlink:href=\\'%23path-1\\'%3E%3C/use%3E%3Cuse fill=\\'' + encodeURI(brandColor) + '\\' fill-rule=\\'evenodd\\' xlink:href=\\'%23path-1\\'%3E%3C/use%3E%3C/g%3E%3Cg id=\\'Group-5\\' transform=\\'translate%2812.000000, 11.000000%29\\' fill-rule=\\'nonzero\\' fill=\\'%23FFFFFF\\'%3E%3Cg id=\\'fast-forward-arrows\\' transform=\\'translate%286.173934, 0.000000%29\\'%3E%3Cpolygon id=\\'Shape\\' points=\\'0.993357559 0 0 0.993357559 7.30823082 8.3015552 0 15.6097197 0.993357559 16.6030772 9.29491276 8.3015552\\'%3E%3C/polygon%3E%3C/g%3E%3Cg id=\\'fast-forward-arrows-copy\\'%3E%3Cpolygon id=\\'Shape\\' points=\\'0.993357559 0 0 0.993357559 7.30823082 8.3015552 0 15.6097197 0.993357559 16.6030772 9.29491276 8.3015552\\'%3E%3C/polygon%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/svg%3E\");\\\n\t\t }\\\n\t\thtml[dir=\"rtl\"] .submit-icon{\\\n\t\t\tbackground-image: url(\"data:image/svg+xml,%3Csvg width=\\'47px\\' height=\\'47px\\' viewBox=\\'0 0 47 47\\' version=\\'1.1\\' xmlns=\\'http://www.w3.org/2000/svg\\' xmlns:xlink=\\'http://www.w3.org/1999/xlink\\'%3E%3C!-- Generator: Sketch 46.2 %2844496%29 - http://www.bohemiancoding.com/sketch --%3E%3Cdesc%3ECreated with Sketch.%3C/desc%3E%3Cdefs%3E%3C/defs%3E%3Cg id=\\'Page-1\\' stroke=\\'none\\' stroke-width=\\'1\\' fill=\\'none\\' fill-rule=\\'evenodd\\'%3E%3Cg id=\\'Submit_Icon\\'%3E%3Cg id=\\'Oval-4\\'%3E%3Cg id=\\'path-1-link\\' fill-rule=\\'nonzero\\' fill=\\'%23white\\'%3E%3Ccircle id=\\'path-1\\' cx=\\'19.3130459\\' cy=\\'19.3130459\\' r=\\'19.3130459\\'%3E%3C/circle%3E%3C/g%3E%3Cg id=\\'path-1-link\\' fill=\\'' + encodeURI(brandColor) + '\\'%3E%3Ccircle id=\\'path-1\\' cx=\\'19.3130459\\' cy=\\'19.3130459\\' r=\\'19.3130459\\'%3E%3C/circle%3E%3C/g%3E%3C/g%3E%3Cg id=\\'Group-5\\' transform=\\'translate%2812.000000, 11.000000%29\\' fill-rule=\\'nonzero\\' fill=\\'%23ffffff\\'%3E%3Cg id=\\'fast-forward-arrows\\' transform=\\'translate%2811.173934, 8.500000%29 scale%28-1, 1%29 translate%28-11.173934, -8.500000%29 translate%286.173934, 0.000000%29\\'%3E%3Cpolygon id=\\'Shape\\' points=\\'0.993357559 0 0 0.993357559 7.30823082 8.3015552 0 15.6097197 0.993357559 16.6030772 9.29491276 8.3015552\\'%3E%3C/polygon%3E%3C/g%3E%3Cg id=\\'fast-forward-arrows-copy\\' transform=\\'translate%285.000000, 8.500000%29 scale%28-1, 1%29 translate%28-5.000000, -8.500000%29 \\'%3E%3Cpolygon id=\\'Shape\\' points=\\'0.993357559 0 0 0.993357559 7.30823082 8.3015552 0 15.6097197 0.993357559 16.6030772 9.29491276 8.3015552\\'%3E%3C/polygon%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/svg%3E%0A\");\\\n\t\t}\\\n\t\t.cc-question-container__required-label{\\\n\t\t\tcolor: ' + brandColor + ';\\\n\t\t}\\\n\t\tinput[type=\"range\"]::-webkit-slider-runnable-track{\\\n\t\t\tbackground: ' + brandColor + ' !important;\\\n\t\t\t   background: -moz-linear-gradient(-45deg, ' + brandColor + ' 0%, ' + this.brandColorDark + ' 100%)!important;\\\n\t\t\t   background: -webkit-linear-gradient(-45deg, ' + brandColor + ' 0%,' + this.brandColorDark + ' 100%)!important;\\\n\t\t\t   background: linear-gradient(135deg, ' + brandColor + ' 0%,' + this.brandColorDark + ' 100%)!important;\\\n\t\t\t   filter: progid:DXImageTransform.Microsoft.gradient( startColorstr=' + brandColor + ', endColorstr=' + this.brandColorDark + ',GradientType=1 );\\\n\t\t   }\\\n\t\tinput[type=\"range\"]::-moz-range-track {\\\n\t\t\tbackground: ' + brandColor + ' !important;\\\n\t\t\tbackground: -moz-linear-gradient(-45deg, ' + brandColor + ' 0%, ' + this.brandColorDark + ' 100%)!important;\\\n\t\t\tbackground: -webkit-linear-gradient(-45deg, ' + brandColor + ' 0%,' + this.brandColorDark + ' 100%)!important;\\\n\t\t\tbackground: linear-gradient(135deg, ' + brandColor + ' 0%,' + this.brandColorDark + ' 100%)!important;\\\n\t\t\tfilter: progid:DXImageTransform.Microsoft.gradient( startColorstr=' + brandColor + ', endColorstr=' + this.brandColorDark + ',GradientType=1 );\\\n\t\t}\\\n\t\t   input[type=\"range\"]::-webkit-slider-thumb{\\\n\t\t\tborder: 1px solid ' + brandColor + ' ;\\\n\t\t\tbackground-color: #fff;\\\n\t\t   }\\\n\t\t   input[type=\"range\"]::-moz-range-thumb {\\\n\t\t\tborder: 1px solid ' + brandColor + ' ;\\\n\t\t\tbackground-color: #fff;\\\n\t\t   }\\\n\t\t   svg.timer circle {\\\n\t\t\tanimation: countdown ' + time + 's linear 1 forwards;\\\n\t\t\tstroke: ' + brandColor + ';\\\n\t\t   }\\\n\t\t   input[type=range].selected::-webkit-slider-thumb {\\\n\t\t\t\tbackground-color: ' + brandColor + ';\\\n\t\t\t}\\\n\t\t\tinput[type = range].selected::-moz - range - thumb {\\\n\t\t\t\tbackground-color: ' + brandColor + ';\\\n\t\t\t}\\\n\t\t\t.cc-checkbox label:hover:before{\\\n\t\t\t\tborder: solid 1px ' + brandColor + ';\\\n\t\t\t}\\\n\t\t @media (max-width: 767px){\\\n\t \t\t\t.overlay.glass{\\\n\t \t\t\tbackground-color:rgba(255,255,255,.85);\\\n\t \t\t\tbackground-image:none;\\\n\t\t\t\t}\\\n\t\t\t\t.cc-popup-container{\\\n\t\t\t\t\tbackground-color : transparent;\\\n\t\t\t\t}\\\n\t\t\t\t.cc-popup-container .overlay.glass{\\\n\t\t\t\t\tbackground-color : ' + this.util.hexToRGB(brandColor, .9) + ';\\\n\t\t\t\t}\\\n\t\t\t\t.cc-popup-container .cc-message-box .cc-message-box__text{\\\n\t\t\t\t\tcolor:#fff;\\\n\t\t\t\t}\\\n\t\t';\r\n        this.util.appendStyle(css);\r\n    }\r\n    return Theme;\r\n}());\r\nexports.Theme = Theme;\r\n\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar DomUtilities_1 = __webpack_require__(0);\r\nvar Slider = /** @class */ (function () {\r\n    function Slider() {\r\n        this.inputRange = document.getElementsByClassName('range')[0];\r\n        this.rangeTip = this.inputRange.parentNode.querySelectorAll(\".act-slider-tip\")[0];\r\n        this.util = new DomUtilities_1.DomUtilities();\r\n        //  this.maxValue = 100; // the higher the smoother when dragging\r\n        this.speed = 5;\r\n        // set min/max value\r\n        // this.inputRange.min = 0;\r\n        this.inputRange.min = this.inputRange.getAttribute('min');\r\n        // this.inputRange.max = this.maxValue;\r\n        this.inputRange.max = this.inputRange.getAttribute('max');\r\n        this.setupListeners();\r\n    }\r\n    Slider.prototype.setupListeners = function () {\r\n        var self = this;\r\n        // bind events\r\n        this.inputRange.addEventListener('mouseup', this.clearTo, false);\r\n        // this.inputRange.addEventListener('mousedown', this.updateRangeTip, false);\r\n        // this.inputRange.addEventListener('mousedown', this.unlockStartHandler, false);\r\n        // this.inputRange.addEventListener('mousestart', this.unlockStartHandler, false);\r\n        // this.inputRange.addEventListener('mouseup', this.unlockEndHandler, false);\r\n        // this.inputRange.addEventListener('touchend', this.unlockEndHandler, false);\r\n        // move gradient\r\n        this.inputRange.addEventListener('input', function () {\r\n            self.updateRangeTip();\r\n            self.util.addClass(this, 'selected');\r\n            //Change slide thumb color on way up\r\n            if (this.value > 20) {\r\n                self.inputRange.classList.add('ltpurple');\r\n            }\r\n            if (this.value > 40) {\r\n                self.inputRange.classList.add('purple');\r\n            }\r\n            if (this.value > 60) {\r\n                self.inputRange.classList.add('pink');\r\n            }\r\n            //Change slide thumb color on way down\r\n            if (this.value < 20) {\r\n                self.inputRange.classList.remove('ltpurple');\r\n            }\r\n            if (this.value < 40) {\r\n                self.inputRange.classList.remove('purple');\r\n            }\r\n            if (this.value < 60) {\r\n                self.inputRange.classList.remove('pink');\r\n            }\r\n        });\r\n    };\r\n    Slider.prototype.updateRangeTip = function () {\r\n        var self = this;\r\n        this.rangeTip.style.display = 'block';\r\n        this.rangeTip.innerHTML = this.inputRange.value;\r\n        // console.log(( parseFloat(this.inputRange.value)/parseFloat(this.inputRange.max) )*100);\r\n        // console.log(( parseFloat(this.inputRange.value)/parseFloat(this.inputRange.max) ) * parseFloat(this.inputRange.getBoundingClientRect().width) + \"px\");\r\n        // this.rangeTip.style.left = ( parseFloat(this.inputRange.value)/parseFloat(this.inputRange.max) ) * parseFloat(this.inputRange.getBoundingClientRect().width) + \"px\" ;\r\n        // if( parseFloat(this.inputRange.value)/parseFloat(this.inputRange.max) * 100 < 50.0 ) {\r\n        //   // this.rangeTip.style.left = ( parseFloat(this.inputRange.value)/parseFloat(this.inputRange.max) ) * parseFloat(this.inputRange.getBoundingClientRect().width) + this.rangeTip.getBoundingClientRect().width / 2  + \"px\" ;\r\n        // } else {\r\n        //   // this.rangeTip.style.left = ( parseFloat(this.inputRange.value)/parseFloat(this.inputRange.max) ) * parseFloat(this.inputRange.getBoundingClientRect().width) - this.rangeTip.getBoundingClientRect().width / 2 + \"px\" ;\r\n        // }\r\n        // if(parseInt(this.rangeTip.style.left) <= 50 ){\r\n        //   // console.log(\"calc( \"+ this.rangeTip.style.left +\" + \"+ this.rangeTip.getBoundingClientRect().width + \"px )\");\r\n        //   this.rangeTip.style.left = \" calc( \"+ this.rangeTip.style.left +\" + \"+ 12 + \"px )\";\r\n        // }else{\r\n        //   console.log(\"calc( \"+ this.rangeTip.style.left +\" - \"+ this.rangeTip.getBoundingClientRect().width + \"px )\");\r\n        //   this.rangeTip.style.left = \" calc( \"+ this.rangeTip.style.left +\" - \"+ this.rangeTip.getBoundingClientRect().width + \"px )\";\r\n        // }\r\n        // console.log(this.rangeTip.style.left);\r\n        // if(this.timeout){\r\n        //   clearTimeout(this.timeout);\r\n        // }\r\n        // this.timeout = setTimeout(function(){\r\n        //   self.rangeTip.style.display = 'none' ;\r\n        // },300)\r\n    };\r\n    Slider.prototype.clearTo = function () {\r\n        clearTimeout(this.timeout);\r\n    };\r\n    // listen for unlock\r\n    // unlockStartHandler() {\r\n    //   let self : any = this;\r\n    //   // clear raf if trying again\r\n    //   window.cancelAnimationFrame(this.rafID);\r\n    //   // set to desired value\r\n    //   this.currValue = +self.value;\r\n    // }\r\n    // unlockEndHandler() {\r\n    //   // store current value\r\n    //   this.currValue = + this.value;\r\n    //   // determine if we have reached success or not\r\n    //   if(this.currValue >= this.maxValue) {\r\n    //      this.successHandler();\r\n    //   }\r\n    //   else {\r\n    //      this.rafID = window.requestAnimationFrame(this.animateHandler);\r\n    //   }\r\n    // }\r\n    // handle range animation\r\n    Slider.prototype.animateHandler = function () {\r\n        // calculate gradient transition\r\n        var transX = this.currValue - this.maxValue;\r\n        // update input range\r\n        this.inputRange.value = this.currValue;\r\n        //Change slide thumb color on mouse up\r\n        if (this.currValue < 20) {\r\n            this.inputRange.classList.remove('ltpurple');\r\n        }\r\n        if (this.currValue < 40) {\r\n            this.inputRange.classList.remove('purple');\r\n        }\r\n        if (this.currValue < 60) {\r\n            this.inputRange.classList.remove('pink');\r\n        }\r\n        // determine if we need to continue\r\n        if (this.currValue > -1) {\r\n            window.requestAnimationFrame(this.animateHandler);\r\n        }\r\n        // decrement value\r\n        this.currValue = this.currValue - this.speed;\r\n    };\r\n    // handle successful unlock\r\n    Slider.prototype.successHandler = function () {\r\n    };\r\n    return Slider;\r\n}());\r\nexports.Slider = Slider;\r\n\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n//Manages trigger.\r\nvar Cookie_1 = __webpack_require__(2);\r\nvar Constants_1 = __webpack_require__(1);\r\n//collect initial data\r\n//if on site time is null, add on site time\r\nif (Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerSiteStartTime) == null) {\r\n    Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerSiteStartTime, new Date(), undefined, undefined);\r\n}\r\n//always add on page Time\r\nCookie_1.Cookie.set(Constants_1.Constants.CCTriggerPageStartTime, new Date(), undefined, undefined);\r\nvar sitePageViewCount = Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerSitePageViewCount);\r\nif (sitePageViewCount == null) {\r\n    Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerSitePageViewCount, 1, undefined, undefined);\r\n}\r\nelse {\r\n    sitePageViewCount = (parseInt(sitePageViewCount) + 1).toString();\r\n    Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerSitePageViewCount, sitePageViewCount, undefined, undefined);\r\n}\r\nvar individualPageViewCount = Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerIndividualPageViewCount);\r\nif (individualPageViewCount == null) {\r\n    Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerIndividualPageViewCount, 1, undefined, window.location.href);\r\n}\r\nelse {\r\n    individualPageViewCount = (parseInt(individualPageViewCount) + 1).toString();\r\n    Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerIndividualPageViewCount, individualPageViewCount, undefined, window.location.href);\r\n}\r\nwindow.click = 0;\r\nwindow.onscroll = function (e) {\r\n    // called when the window is scrolled.  \r\n    var doc = document.documentElement;\r\n    var left = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);\r\n    var top = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\r\n    window.ccsdkTopOffset = top;\r\n    TriggerManager.processScrollTriggers(top);\r\n};\r\ndocument.onclick = function (e) {\r\n    window.click++;\r\n};\r\n//TriggerManager adds to survey Queue\r\nvar TriggerManager = /** @class */ (function () {\r\n    function TriggerManager() {\r\n        //initialize triggers\r\n        //add those triggers which aren't completed yet.\r\n    }\r\n    TriggerManager.addSurvey = function (surveyId, trigger) {\r\n        TriggerManager.triggerInstances[surveyId] = trigger;\r\n        if (Object.keys(TriggerManager.triggerInstances).length >= 1) {\r\n            window.ccsdkDebug ? console.log(TriggerManager.triggerInterval) : '';\r\n            if (TriggerManager.triggerInterval == null) {\r\n                window.ccsdkDebug ? console.log(\"TriggerHandler : Setting up Interval Trigger Handlers.\") : '';\r\n                TriggerManager.triggerInterval = setInterval(TriggerManager.processIntervalTriggers, 1000);\r\n            }\r\n            //processing sequential triggers if any.\r\n            // console.log(\"TriggerHandler : Processing sequential triggers for  \" + surveyId);\r\n            // TriggerManager.processTriggersBySurveyId(surveyId);\r\n        }\r\n    };\r\n    TriggerManager.removeSurvey = function (surveyId) {\r\n        delete TriggerManager.triggerInstances[surveyId];\r\n        if (Object.keys(TriggerManager.triggerInstances).length == 0) {\r\n            clearInterval(TriggerManager.triggerInterval);\r\n        }\r\n    };\r\n    TriggerManager.processIntervalTriggers = function () {\r\n        //if some survey is already running skip processing surveys for now?or queue it?.\r\n        Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerPageElapsedTime, new Date(), undefined, window.location.href);\r\n        Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerSiteElapsedTime, new Date(), undefined, undefined);\r\n        //set cookies and call every process Interval Triggers.\r\n        for (var trigger in TriggerManager.triggerInstances) {\r\n            TriggerManager.triggerInstances[trigger].processIntervalTriggers();\r\n            TriggerManager.triggerInstances[trigger].processConditionalTriggers();\r\n        }\r\n    };\r\n    TriggerManager.processScrollTriggers = function (scrollNow) {\r\n        for (var trigger in TriggerManager.triggerInstances) {\r\n            //process all scroll triggers.\r\n            TriggerManager.triggerInstances[trigger].processScrollTriggers(scrollNow);\r\n        }\r\n    };\r\n    TriggerManager.disableTriggers = function (surveyId) {\r\n        TriggerManager.triggerInstances[surveyId].disableTriggers();\r\n    };\r\n    TriggerManager.triggerInterval = null;\r\n    TriggerManager.triggerInstances = {};\r\n    return TriggerManager;\r\n}());\r\nexports.TriggerManager = TriggerManager;\r\n;\r\n\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Cookie_1 = __webpack_require__(2);\r\nvar Constants_1 = __webpack_require__(1);\r\nvar SurveyManager_1 = __webpack_require__(3);\r\nvar TriggerUtils_1 = __webpack_require__(49);\r\nvar Triggers = /** @class */ (function () {\r\n    function Triggers(ccsdk) {\r\n        this.ccsdk = ccsdk;\r\n        this.pageCountTrigger = false;\r\n        this.siteCountTrigger = false;\r\n        this.pageTimeTrigger = false;\r\n        this.siteTimeTrigger = false;\r\n        this.urlParamTrigger = false;\r\n        this.notUrlParamTrigger = false;\r\n        this.utmParamTrigger = false;\r\n        this.scrollPixelsTrigger = false;\r\n        //disable all triggers.\r\n        this.pageCountTriggerEnabled = false;\r\n        this.siteCountTriggerEnabled = false;\r\n        this.pageTimeTriggerEnabled = false;\r\n        this.siteTimeTriggerEnabled = false;\r\n        this.urlParamTriggerEnabled = false;\r\n        this.notUrlParamTriggerEnabled = false;\r\n        this.utmParamTriggerEnabled = false;\r\n        this.scrollPixelsTriggerEnabled = false;\r\n        this.conditionalTriggers = {};\r\n    }\r\n    Triggers.prototype.enableClickTrigger = function (target, cb) {\r\n        var item = document.querySelectorAll(target)[0];\r\n        if (typeof item !== 'undefined') {\r\n            item.addEventListener('click', cb);\r\n        }\r\n    };\r\n    Triggers.prototype.enablePageCountTrigger = function (minPageCount) {\r\n        this.minPageCount = minPageCount;\r\n        this.pageCountTriggerEnabled = true;\r\n        this.TriggerPopUpByPageCount();\r\n    };\r\n    Triggers.prototype.enableSiteCountTrigger = function (minSiteCount) {\r\n        this.minSiteCount = minSiteCount;\r\n        this.pageCountTriggerEnabled = true;\r\n        this.TriggerPopUpByPageCount();\r\n    };\r\n    Triggers.prototype.enablePageTimeTrigger = function (minPageTime) {\r\n        this.minPageTime = minPageTime;\r\n        this.pageTimeTriggerEnabled = true;\r\n        this.TriggerPopUpByTimeSpentOnPage();\r\n    };\r\n    Triggers.prototype.enableSiteTimeTrigger = function (minSiteTime) {\r\n        this.minSiteTime = minSiteTime;\r\n        this.siteTimeTriggerEnabled = true;\r\n        this.TriggerPopUpByTimeSpentOnSite();\r\n    };\r\n    Triggers.prototype.enablePopUpByURLPatternTrigger = function (urlPattern) {\r\n        this.inUrl = urlPattern;\r\n        this.urlParamTriggerEnabled = true;\r\n        this.TriggerPopUpByURLPattern();\r\n    };\r\n    Triggers.prototype.enablePopUpByNotURLPatternTrigger = function (urlPattern) {\r\n        this.notinUrl = urlPattern;\r\n        this.notUrlParamTriggerEnabled = true;\r\n        this.TriggerPopUpByNotURLPattern();\r\n    };\r\n    Triggers.prototype.enablePopUpByUTMPatternTrigger = function (urlPattern) {\r\n        this.utm = urlPattern;\r\n        this.utmParamTriggerEnabled = true;\r\n        this.TriggerPopUpByUTMParameter();\r\n    };\r\n    Triggers.prototype.enableScrollPixelsTrigger = function (minScrollPixels) {\r\n        this.minScrollPixels = minScrollPixels;\r\n        this.scrollPixelsTriggerEnabled = true;\r\n    };\r\n    Triggers.prototype.processIntervalTriggers = function () {\r\n        //if survey already launched\r\n        //skip processing.\r\n        if (this.ccsdk.surveyRunning || this.ccsdk.surveyDone) {\r\n            return;\r\n        }\r\n        this.TriggerPopUpByTimeSpentOnPage();\r\n        this.TriggerPopUpByTimeSpentOnSite();\r\n    };\r\n    Triggers.prototype.setConditionalTriggers = function (config) {\r\n        window.ccsdkDebug ? console.log(config.grepURL) : '';\r\n        //\r\n        if ((typeof config.click !== 'undefined') && (config.click != 0)) {\r\n            this.conditionalTriggers.click = config.click;\r\n        }\r\n        if ((typeof config.onExitDetect !== 'undefined')) {\r\n            this.conditionalTriggers.onExitDetect = config.onExitDetect;\r\n        }\r\n        // if ((typeof config.cssSelector !== 'undefined')) {\r\n        //   this.conditionalTriggers.cssSelector = config.cssSelector;\r\n        // }\r\n        if ((typeof config.waitSeconds !== 'undefined') && (config.waitSeconds !== 0)) {\r\n            this.conditionalTriggers.waitSeconds = config.waitSeconds;\r\n        }\r\n        if ((typeof config.scrollPercent !== 'undefined') && (config.scrollPercent !== 0)) {\r\n            this.conditionalTriggers.scrollPercent = config.scrollPercent;\r\n        }\r\n        if ((typeof config.grepInvertURL !== 'undefined') && (config.grepInvertURL)) {\r\n            this.conditionalTriggers.grepInvertURL = config.grepInvertURL;\r\n        }\r\n        if ((typeof config.grepURL !== 'undefined') && (config.grepURL)) {\r\n            this.conditionalTriggers.grepURL = config.grepURL;\r\n        }\r\n    };\r\n    Triggers.prototype.processConditionalTriggers = function () {\r\n        //gather all conditional triggers and process them.\r\n        var self = this;\r\n        var isEnabled = true;\r\n        if (this.ccsdk.surveyRunning || this.ccsdk.surveyDone) {\r\n            window.ccsdkDebug ? console.log('returning') : '';\r\n            return;\r\n        }\r\n        if (typeof this.conditionalTriggers !== 'undefined') {\r\n            if (Object.keys(this.conditionalTriggers).length == 0) {\r\n                return false;\r\n            }\r\n            for (var conditionalTrigger in this.conditionalTriggers) {\r\n                if (this.conditionalTriggers[conditionalTrigger] != null) {\r\n                    switch (conditionalTrigger) {\r\n                        case \"onExitDetect\":\r\n                            var onExitDetect = self.ccsdk.util.initListener(\"mouseout\", \"document\", function () {\r\n                                window.ccsdkDebug ? console.log(\"Mouse out\") : '';\r\n                            });\r\n                            onExitDetect.internalHandler = self.ccsdk.util.listener(document, onExitDetect.type, onExitDetect.id, onExitDetect.cb);\r\n                            break;\r\n                        case \"click\":\r\n                            //find click count on screen\r\n                            //calculate click count\r\n                            // if((window as any).click > this.conditionalTriggers.click) {\r\n                            //   return SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n                            // }\r\n                            isEnabled = isEnabled && (window.click >= this.conditionalTriggers.click);\r\n                            break;\r\n                        case \"waitSeconds\":\r\n                            var pageStartTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerPageStartTime)).getTime();\r\n                            var pageTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerPageElapsedTime)).getTime();\r\n                            isEnabled = isEnabled && TriggerUtils_1.TriggerUtils.checkTimeCondition(pageTime, pageStartTime, this.conditionalTriggers[conditionalTrigger]);\r\n                            window.ccsdkDebug ? console.log('waitSeconds enabled', isEnabled) : '';\r\n                            break;\r\n                        case \"scrollPercent\":\r\n                            //fill it with current scroll position\r\n                            isEnabled = isEnabled && TriggerUtils_1.TriggerUtils.checkScroll(window.ccsdkTopOffset, this.conditionalTriggers[conditionalTrigger]);\r\n                            window.ccsdkDebug ? console.log('scrollPercent enabled', isEnabled) : '';\r\n                            break;\r\n                        case \"grepURL\":\r\n                            isEnabled = isEnabled && TriggerUtils_1.TriggerUtils.checkInUrl(this.conditionalTriggers[conditionalTrigger]);\r\n                            window.ccsdkDebug ? console.log('grepURL enabled', isEnabled) : '';\r\n                            break;\r\n                        case \"grepInvertURL\":\r\n                            isEnabled = isEnabled && !TriggerUtils_1.TriggerUtils.checkInUrl(this.conditionalTriggers[conditionalTrigger]);\r\n                            window.ccsdkDebug ? console.log('grepInvertURL enabled', isEnabled) : '';\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            if (isEnabled) {\r\n                SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n            }\r\n        }\r\n        else {\r\n            //do nothing.\r\n        }\r\n    };\r\n    Triggers.prototype.processNonConditionalTriggers = function () {\r\n        //process all non conditional one shot triggers here?\r\n    };\r\n    Triggers.prototype.processScrollTriggers = function (scrollNow) {\r\n        this.TriggerPopUpByScrollPixels(scrollNow);\r\n    };\r\n    Triggers.prototype.TriggerPopUpByPageCount = function () {\r\n        var pageCount = parseInt(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerSitePageViewCount));\r\n        if (pageCount == NaN) {\r\n            pageCount = 0;\r\n        }\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.pageCountTrigger && TriggerUtils_1.TriggerUtils.checkPageCount(pageCount, this.minPageCount)) {\r\n            this.pageCountTrigger = true;\r\n            //displayQuestion\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n        else {\r\n            //already executed.\r\n            //or condition not satisified yet.\r\n        }\r\n    };\r\n    //minPageTime in seconds\r\n    Triggers.prototype.TriggerPopUpByTimeSpentOnPage = function () {\r\n        var pageStartTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerPageStartTime)).getTime();\r\n        var pageTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerPageElapsedTime)).getTime();\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.pageTimeTrigger && TriggerUtils_1.TriggerUtils.checkTimeCondition(pageTime, pageStartTime, this.minPageTime)) {\r\n            this.pageTimeTrigger = true;\r\n            //displayQuestion\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n        else {\r\n            //already executed.\r\n            //or condition not satisified yet.\r\n        }\r\n    };\r\n    Triggers.prototype.TriggerPopUpByTimeSpentOnSite = function () {\r\n        var siteStartTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerSiteStartTime)).getTime();\r\n        var siteTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerSiteElapsedTime)).getTime();\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.siteTimeTrigger && TriggerUtils_1.TriggerUtils.checkTimeCondition(siteTime, siteStartTime, this.minSiteTime)) {\r\n            this.siteTimeTrigger = true;\r\n            //displayQuestion\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n        else {\r\n            //already executed.\r\n            //or condition not satisified yet.\r\n        }\r\n    };\r\n    Triggers.prototype.TriggerPopUpByInactivity = function () {\r\n    };\r\n    Triggers.prototype.TriggerPopUpByScrollPixels = function (scrollNow) {\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.scrollPixelsTrigger && TriggerUtils_1.TriggerUtils.checkScroll(scrollNow, this.minScrollPixels)) {\r\n            this.scrollPixelsTrigger = true;\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n            // this.ccsdk.initSurvey();\r\n            // SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n        else {\r\n            //already executed?\r\n            //or condition not satisified yet.\r\n        }\r\n    };\r\n    //run only once?\r\n    Triggers.prototype.TriggerPopUpByURLPattern = function () {\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.urlParamTrigger && TriggerUtils_1.TriggerUtils.checkInUrl(this.inUrl)) {\r\n            this.urlParamTrigger = true;\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n        else {\r\n        }\r\n    };\r\n    Triggers.prototype.TriggerPopUpByNotURLPattern = function () {\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.notUrlParamTrigger && !TriggerUtils_1.TriggerUtils.checkInUrl(this.inUrl)) {\r\n            this.notUrlParamTrigger = true;\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n        else {\r\n        }\r\n    };\r\n    Triggers.prototype.TriggerPopUpByUTMParameter = function () {\r\n        var utmP = this.utm.split(\"=\");\r\n        var utmVal = Cookie_1.Cookie.getParameterByName(utmP[0], undefined);\r\n        //!(window as any).globalSurveyRunning && \r\n        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.utmParamTrigger && utmVal === utmP[1]) {\r\n            this.utmParamTrigger = true;\r\n            // this.ccsdk.initSurvey();\r\n            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);\r\n        }\r\n    };\r\n    Triggers.prototype.resetTriggers = function () {\r\n        this.pageCountTrigger = false;\r\n        this.pageTimeTrigger = false;\r\n        this.siteTimeTrigger = false;\r\n        this.urlParamTrigger = false;\r\n        this.scrollPixelsTrigger = false;\r\n    };\r\n    return Triggers;\r\n}());\r\nexports.Triggers = Triggers;\r\n// function triggerHandler(surveyHandler) {\r\n//   //survey specific Trigger Handlers\r\n//   // self.surveyRunning = self.util.get('#' + self.surveyToken  + \"-survey\").length == 1;\r\n// Cookie.set(Constants.CCTriggerPageElapsedTime, new Date(), undefined, window.location.href);\r\n// Cookie.set(Constants.CCTriggerSiteElapsedTime, new Date(), undefined, undefined);\r\n//   surveyHandler.triggers.TriggerPopUpByTimeSpentOnSite(surveyHandler.siteInterval);\r\n//   // surveyHandler.surveyRunning = surveyHandler.util.get('#' + self.surveyToken  + \"-survey\").length == 1;\r\n//   surveyHandler.triggers.TriggerPopUpByTimeSpentOnPage(surveyHandler.pageInterval);\r\n// }\r\n//call below functions when survey is locked and loaded.\r\n// self.triggers.TriggerPopUpByURLPattern(/xyz=33/);\r\n// self.triggers.TriggerPopUpByUTMParameter();\r\n// self.triggerInterval = setInterval(self.triggerHandler, 1000, self); \r\n\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar TriggerUtils = /** @class */ (function () {\r\n    function TriggerUtils() {\r\n    }\r\n    TriggerUtils.checkInUrl = function (inUrl) {\r\n        return window.location.href.match(inUrl) != null && window.location.href.match(inUrl).length > 0;\r\n    };\r\n    TriggerUtils.checkTimeCondition = function (pageTime, pageStartTime, minPageTime) {\r\n        return Math.round((pageTime - pageStartTime) / 1000) > minPageTime;\r\n    };\r\n    TriggerUtils.checkScroll = function (scrollNow, minScrollPixels) {\r\n        return scrollNow > minScrollPixels;\r\n    };\r\n    TriggerUtils.checkPageCount = function (pageCount, minPageCount) {\r\n        return pageCount >= minPageCount;\r\n    };\r\n    return TriggerUtils;\r\n}());\r\nexports.TriggerUtils = TriggerUtils;\r\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// cc.en.bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap cf1d0d5a8d669bd247bb","import { templates } from '../templates';\nimport { Config } from '../../Config';\n\nclass DomUtilities{\n\n  sbcRip : any;\n\n  constructor(){\n    // HTMLElement.prototype.matches = HTMLElement.prototype.matches ||\n    // HTMLElement.prototype.matchesSelector ||\n    // HTMLElement.prototype.webkitMatchesSelector ||\n    // HTMLElement.prototype.mozMatchesSelector ||\n    // HTMLElement.prototype.msMatchesSelector ||\n    // HTMLElement.prototype.oMatchesSelector;\n  }\n\n  get(selector : string){\n    return document.querySelectorAll(selector);\n  }\n\n   appendStyle(css : string) : void {\n\t\tlet head : any = document.head || document.getElementsByTagName('head')[0];\n    let style : any = document.createElement('style');\n\t\tstyle.type = 'text/css';\n\t\tif (style.styleSheet){\n\t\t  style.styleSheet.cssText = css;\n\t\t} else {\n\t\t  style.appendChild(document.createTextNode(css));\n\t\t}\n\t\thead.appendChild(style);\n\t}\n\n  remove( el : any ){\n    el.parentNode.removeChild(el);\n  }\n\n  removeAll(elements : any) : void {\n\t\tArray.prototype.forEach.call(elements, (el, i) => {\n      el.parentNode.removeChild(el);\n\t\t});\n  }\n  \n  css(elements : any, property: string, value : any){\n    Array.prototype.forEach.call(elements, (el, i) => {\n      el.style[property] = value; \n    });\n  }\n\n\tremoveClassAll(elements : any, className : string) : void {\n\t\tArray.prototype.forEach.call(elements, (el, i) => {\n\t\t\tthis.removeClass(el,className);\n\t\t});\n\t}\n\n\taddClassAll(elements : any, className : string) : void {\n\t\tArray.prototype.forEach.call(elements, (el, i) => {\n\t\t\tthis.addClass(el,className);\n\t\t});\n\t}\n\n\tremoveClass(el : any, className : string) : void{\n    // console.log(el);\n\t\tif (el.classList)\n\t\t  el.classList.remove(className);\n\t\telse\n\t\t  el.className = el.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\n\t}\n\taddClass(el : any, className : string){\n\t\tif (el.classList)\n\t\t  el.classList.add(className);\n\t\telse\n\t\t  el.className += ' ' + className;\n\t}\n\ttoggleClass(el : any, className : string) : void {\n\t\tif (el.classList){\n\t\t\tif(el.classList.contains(className))\n\t\t\t\tel.classList.remove(className);\n\t\t\telse\n\t\t\t\tel.classList.add(className);\n\t\t}\n\n\n  }\n  hasClass(el:any, className:string){\n    if (el.classList)\n      return el.classList.contains(className);\n    else\n      return new RegExp('(^| )' + className + '( |$)', 'gi').test(el.className);\n  }\n\tready(fn : any) : void {\n\t  if ((<any>document).attachEvent ? document.readyState === \"complete\" : document.readyState !== \"loading\"){\n\t    fn();\n\t  } else {\n\t    document.addEventListener('DOMContentLoaded', fn);\n\t  }\n\t}\n\n\tgetParents(el : any, parentSelector : any) : any {\n    // If no parentSelector defined will bubble up all the way to *document*\n    if (parentSelector === undefined) {\n        parentSelector = document;\n    }\n\n    var parents = [];\n    var p = el.parentNode;\n\n    while (p !== parentSelector) {\n        var o = p;\n        parents.push(o);\n        p = o.parentNode;\n    }\n    parents.push(parentSelector); // Push that parentSelector you wanted to stop at\n\n    return parents;\n\t}\n\n\tlistener(el : any, evt : any, sel : any, handler : any) : any {\n    let internalHandler = function(event) {\n        var t = event.target;\n        while (t && t !== this) {\n            if (t.matches(sel)) {\n                handler.call(t, event);\n            }\n            t = t.parentNode;\n        }\n    };\n    el.addEventListener(evt, internalHandler);\n    return internalHandler;\n  }\n\n\n\n  initListener(type : string, id : string, cb : any) {\n    let ref : any =  {\n      id : id,\n      type : type,\n      cb : cb,\n      internalHandler: undefined,\n    };\n    return ref;\n  }\n\n  checkIfListenerExists(id : string, ar : any) : boolean {\n    for(let listener of ar) {\n      if(listener.id == id) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  on( evt : any, el : any, handler : any){\n    el.addEventListener(evt, handler);\n  }\n  off( evt : any, el : any, handler : any){\n    el.removeEventListener(evt, handler);\n  }\n  removeListener(el : any, evt : any, handler : any ){\n    el.removeEventListener(evt, handler);\n  }\n  removeAllListeners(ar:any) : boolean {\n    for(let listener of ar) {\n        this.removeListener(document.querySelectorAll(\"body\")[0], listener.type, listener.internalHandler);\n    }\n    return true;\n  }\n\n  trigger(el : any, eventName : string, data : Object){\n    if (typeof CustomEvent === 'function') {\n      var event = new CustomEvent(eventName, {detail: data});\n    } else {\n      var event = document.createEvent('CustomEvent');\n      event.initCustomEvent(eventName, true, true, data);\n    }\n\n    el.dispatchEvent(event);\n  }\n\n  removeTrigger(el : any, eventName : string){\n    el.removeEventListener(eventName);\n  }\n\n   shadeBlendConvert(p : number, from : any, to : string) : string {\n\t    if(typeof(p)!=\"number\"||p<-1||p>1||typeof(from)!=\"string\"||(from[0]!='r'&&from[0]!='#')||(typeof(to)!=\"string\"&&typeof(to)!=\"undefined\"))return null; //ErrorCheck\n\t    if(!this.sbcRip)this.sbcRip=function(d){\n\t        var l=d.length,RGB=new Object();\n\t        if(l>9){\n\t            d=d.split(\",\");\n\t            if(d.length<3||d.length>4)return null;//ErrorCheck\n\t            RGB[0]=i(d[0].slice(4)),RGB[1]=i(d[1]),RGB[2]=i(d[2]),RGB[3]=d[3]?parseFloat(d[3]):-1;\n\t        }else{\n\t            if(l==8||l==6||l<4)return null; //ErrorCheck\n\t            if(l<6)d=\"#\"+d[1]+d[1]+d[2]+d[2]+d[3]+d[3]+(l>4?d[4]+\"\"+d[4]:\"\"); //3 digit\n\t            d=i(d.slice(1),16),RGB[0]=d>>16&255,RGB[1]=d>>8&255,RGB[2]=d&255,RGB[3]=l==9||l==5?r(((d>>24&255)/255)*10000)/10000:-1;\n\t        }\n\t        return RGB;}\n\t    var i=parseInt,r=Math.round,h=from.length>9,h=typeof(to)==\"string\"?to.length>9?true:to==\"c\"?!h:false:h,b=p<0,p=b?p*-1:p,to=to&&to!=\"c\"?to:b?\"#000000\":\"#FFFFFF\",f=this.sbcRip(from),t=this.sbcRip(to);\n\t    if(!f||!t)return null; //ErrorCheck\n\t    if(h)return \"rgb(\"+r((t[0]-f[0])*p+f[0])+\",\"+r((t[1]-f[1])*p+f[1])+\",\"+r((t[2]-f[2])*p+f[2])+(f[3]<0&&t[3]<0?\")\":\",\"+(f[3]>-1&&t[3]>-1?r(((t[3]-f[3])*p+f[3])*10000)/10000:t[3]<0?f[3]:t[3])+\")\");\n\t    else return \"#\"+(0x100000000+(f[3]>-1&&t[3]>-1?r(((t[3]-f[3])*p+f[3])*255):t[3]>-1?r(t[3]*255):f[3]>-1?r(f[3]*255):255)*0x1000000+r((t[0]-f[0])*p+f[0])*0x10000+r((t[1]-f[1])*p+f[1])*0x100+r((t[2]-f[2])*p+f[2])).toString(16).slice(f[3]>-1||t[3]>-1?1:3);\n\t}\n\n   hexToRGB(hex : string, alpha : any) : string {\n\t    if (!hex || [4, 7].indexOf(hex.length) === -1) {\n\t        return; // throw new Error('Bad Hex');\n\t    }\n\n\t    hex = hex.substr(1);\n\t    // if shortcuts (#F00) -> set to normal (#FF0000)\n\t    if (hex.length === 3) {\n\t        hex = hex.split('').map(function(el){\n\t              return el + el + '';\n\t            }).join('');\n\t    }\n\n\t    var r = parseInt(hex.slice(0, 2), 16),\n\t        g = parseInt(hex.slice(2, 4), 16),\n\t        b = parseInt(hex.slice(4, 6), 16);\n\n\t    if (alpha) {\n\t        return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha + \")\";\n\t    } else {\n\t        return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\n\t    }\n\t}\n\n\n  arrayContains(needle) {\n    // Per spec, the way to identify NaN is that it is not equal to itself\n    var findNaN = needle !== needle;\n    var indexOf;\n\n    if(!findNaN && typeof Array.prototype.indexOf === 'function') {\n        indexOf = Array.prototype.indexOf;\n    } else {\n        indexOf = function(needle) {\n            var i = -1, index = -1;\n\n            for(i = 0; i < this.length; i++) {\n                var item = this[i];\n\n                if((findNaN && item !== item) || item === needle) {\n                    index = i;\n                    break;\n                }\n            }\n\n            return index;\n        };\n    }\n\n    return indexOf.call(this, needle) > -1;\n}\n\ngenerateSelectOptions(arr : any){\n  if(Array.isArray(arr)){\n    let i : number = 0;\n    let res : string = '';\n    for(i=0;i<arr.length;i++){\n       res += '<option value=\"'+arr[i]+'\">'+arr[i]+'</option>';\n    }\n    return res;\n  }\n}\n  generateLanguageSelectOptions(arr: any) {\n    if (Array.isArray(arr)) {\n      let i: number = 0;\n      let res: string = '';\n      for (i = 0; i < arr.length; i++) {\n        if (arr[i] == 'default'){\n          res += '<option value=\"' + arr[i] + '\">English (Default)</option>';\n        }else{\n          res += '<option value=\"' + arr[i] + '\">' + arr[i] + '</option>';\n        }\n      }\n      return res;\n    }\n  }\ncheckOptionContainsImage(arr : any){\n  if(Array.isArray(arr)){\n    let i : number = 0;\n    let res : boolean = true;\n    for(i=0;i<arr.length;i++){\n       let opt : any = arr[i];\n       res = res && opt.includes(';') && opt.includes('.');\n    }\n    return res;\n  }\n}\n\ngenerateRadioImageOptions(arr : any, id : string){\n  if(Array.isArray(arr)){\n    let i : number = 0;\n    let res : string = '' ;\n    for(i=0;i<arr.length;i++){\n       let optHtml : string = templates.option_radio_image;\n       let opt : any = arr[i].split(';')\n      //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\n      //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\n       optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/'+opt[1] );\n       optHtml = optHtml.replace(/{{qId}}/g, \"nm\"+id );\n       optHtml = optHtml.replace(/{{label}}/g, opt[0] );\n      optHtml = optHtml.replace(/{{labelFor}}/g, opt[0].replace(/\\s+/g, '-'));\n       optHtml = optHtml.replace(/{{value}}/g, '\"'+opt[0]+'\"' );\n       res += optHtml;\n\n    }\n    return res;\n  }\n}\n  generateRadioIgnoreImageOptions(arr: any, id: string) {\n    if (Array.isArray(arr)) {\n      let i: number = 0;\n      let res: string = '';\n      for (i = 0; i < arr.length; i++) {\n        let optHtml: string = templates.option_radio;\n        let opt: any = arr[i].split(';')\n        //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\n        //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\n        optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\n        optHtml = optHtml.replace(/{{label}}/g, opt[0]);\n        optHtml = optHtml.replace(/{{labelFor}}/g, opt[0].replace(/\\s+/g, '-'));\n        optHtml = optHtml.replace(/{{value}}/g, '\"'+opt[0]+'\"');\n        res += optHtml;\n\n      }\n      return res;\n    }\n  }\n\n\n  generateRadioOptions(arr: any, id: string) {\n    if (Array.isArray(arr)) {\n      let i: number = 0;\n      let res: string = '';\n      for (i = 0; i < arr.length; i++) {\n        let optHtml: string = templates.option_radio;\n        let opt: any = arr[i].split(';')\n        optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\n        optHtml = optHtml.replace(/{{label}}/g, opt[0]);\n        optHtml = optHtml.replace(/{{labelFor}}/g, opt[0].replace(/\\s+/g, '-'));\n        optHtml = optHtml.replace(/{{value}}/g, '\"'+opt[0]+'\"');\n        res += optHtml;\n\n      }\n      return res;\n    }\n  }\n  generateCheckboxImageOptions(arr: any, id: string) {\n    if (Array.isArray(arr)) {\n      let i: number = 0;\n      let res: string = '';\n      for (i = 0; i < arr.length; i++) {\n        let optHtml: string = templates.option_checkbox_image;\n        let opt: any = arr[i].split(';')\n        //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\n        //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\n        optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[1]);\n        optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\n        optHtml = optHtml.replace(/{{label}}/g, opt[0]);\n        optHtml = optHtml.replace(/{{labelFor}}/g, opt[0].replace(/\\s+/g, '-'));\n        optHtml = optHtml.replace(/{{value}}/g, '\"'+opt[0]+'\"');\n        res += optHtml;\n\n      }\n      return res;\n    }\n  }\n\n  generateCheckboxIgnoreImageOptions(arr: any, id: string) {\n    if (Array.isArray(arr)) {\n      let i: number = 0;\n      let res: string = '';\n      for (i = 0; i < arr.length; i++) {\n        let optHtml: string = templates.option_checkbox;\n        let opt: any = arr[i].split(';')\n        //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );\n        //  optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');\n        optHtml = optHtml.replace(/{{qId}}/g, \"nm\" + id);\n        optHtml = optHtml.replace(/{{label}}/g, opt[0]);\n        optHtml = optHtml.replace(/{{labelFor}}/g, opt[0].replace(/\\s+/g, '-'));\n        optHtml = optHtml.replace(/{{value}}/g, '\"'+opt[0]+'\"');\n        res += optHtml;\n\n      }\n      return res;\n    }\n  }\n\ngenerateCheckboxOptions(arr : any, id : string){\n  if(Array.isArray(arr)){\n    let i : number = 0;\n    let res : string = '' ;\n    for(i=0;i<arr.length;i++){\n       let optHtml : string = templates.option_checkbox;\n       let opt : any = arr[i].split(';')\n       optHtml = optHtml.replace(/{{label}}/g, arr[i] );\n      optHtml = optHtml.replace(/{{labelFor}}/g, arr[i].replace(/\\s+/g, '-'));\n      optHtml = optHtml.replace(/{{value}}/g, '\"'+arr[i]+'\"');\n       \n       res += optHtml;\n\n    }\n    return res;\n  }\n}\n\n\n\n}\n\n\n//add Math.round\n\n\nexport { DomUtilities };\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/dom/DomUtilities.ts","class Constants {\n  static CCTriggerPageStartTime = \"cc-trigger-page-start-time\";\n  static CCTriggerPageElapsedTime = \"cc-trigger-page-elapsed-time\";\n  static CCTriggerSiteStartTime = \"cc-trigger-site-start-time\";\n  static CCTriggerSiteElapsedTime = \"cc-trigger-site-elapsed-time\";\n  static CCTriggerSitePageViewCount = \"cc-trigger-site-page-count\";\n  static CCTriggerIndividualPageViewCount = \"cc-trigger-individual-page-count\";\n  static SURVEY_START_EVENT = \"onImpression\";\n  static SURVEY_DATA_EVENT = \"onData\";\n  static SURVEY_END_EVENT = \"onEnd\";\n  static SURVEY_CLOSE_EVENT = \"onClose\";\n  static SURVEY_QUESTION_EVENT = \"onQuestion\";\n  static SURVEY_ANSWER_EVENT = \"onAnswer\";\n  static SURVEY_CLICK_EVENT = \"onClick\";\n  static GRANT_TYPE = \"password\";\n  static AUTHORIZATION = \"Authorization\";\n  static AUTHORIZATION_BEARER = \"Bearer\";\n  static SURVEY_CLIENT = \"JS-MicroWeb\";\n}\n\nexport { Constants };\n\n\n// WEBPACK FOOTER //\n// ./src/Constants.ts","class Cookie {\n    /**\n     * Set/Overwrite a cookie value\n     *\n     * @param name\n     * @param value\n     * @param days      OPTIONAL Days till this cookie will stay valid. Default is current session\n     * @param path      OPTIONAL domain root will be used by default\n     */\n    static set(name : any, value : any, days : any, path : any) {\n      if (days) {\n          var date = new Date();\n              date.setTime(date.getTime()+(days*24*60*60*1000));\n          var expires = \"; expires=\"+date.toUTCString();\n      } else var expires = \"\";\n\n      var dir = path || '/';\n      document.cookie = name+\"=\"+value+expires+\"; path=\"+dir;\n  }\n\n  /**\n   * Retrieve a cookie value\n   *\n   * @param name\n   * @return String|null\n   */\n  static get(name) {\n      var nameEQ = name + \"=\";\n      var ca = document.cookie.split(';');\n      for(var i=0;i < ca.length;i++) {\n          var c = ca[i];\n          while (c.charAt(0)==' ') c = c.substring(1,c.length);\n          if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);\n      }\n      return null;\n  }\n\n  /**\n   * Remove a cookie\n   *\n   * @param name\n   */\n  static delete(name) {\n    Cookie.set(name,\"\",-1, undefined);\n  }\n\n  static getParameterByName(name : string, url : any) {\n    if (!url) url = window.location.href;\n    name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\n    var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n  }\n}\n\nexport { Cookie };\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/Cookie.ts","\r\n//Survey Manager manages and queues survey.\r\n\r\nclass SurveyManager {\r\n\r\n  static surveyQueue : any = [];\r\n  static processQueueInterval : any = null;\r\n\r\n  static surveyInstances : any = {};\r\n\r\n  static initializeSurvey(surveyId : string) {\r\n    //check if survey ran?\r\n    //do survey initialization.\r\n    SurveyManager.surveyInstances[surveyId].setupSurvey();\r\n  }\r\n\r\n  static addSurvey(surveyId) {\r\n    (window as any).ccsdkDebug?console.log(\"Adding survey ID : \" + surveyId):'';\r\n    SurveyManager.surveyQueue.push(surveyId);\r\n    if(SurveyManager.processQueueInterval == null) {\r\n      SurveyManager.processQueueInterval = setInterval(SurveyManager.processQueueIntervalCB, 100);\r\n    }\r\n  }\r\n\r\n  static removeSurvey(surveyId) {\r\n    if(SurveyManager.surveyQueue.length > 0) {\r\n      for(let survey in SurveyManager.surveyQueue) {\r\n        if(SurveyManager.surveyQueue[survey].surveyId == surveyId) {\r\n          SurveyManager.surveyQueue.splice(survey, 1);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    if(SurveyManager.surveyQueue.length == 0) {\r\n      clearInterval(SurveyManager.processQueueInterval);\r\n    }\r\n  }\r\n\r\n  static processQueueIntervalCB() {\r\n    if((window as any).globalSurveyRunning == true) {\r\n      return;\r\n    } else {\r\n      let surveyId = SurveyManager.surveyQueue.pop();\r\n      (window as any).ccsdkDebug?console.log(\"Processing survey ID \" + surveyId):'';\r\n      if(surveyId == undefined) {\r\n        clearInterval(SurveyManager.processQueueInterval);\r\n        SurveyManager.processQueueInterval = null;\r\n      } else {\r\n        (window as any).globalSurveyRunning = true;\r\n        SurveyManager.initializeSurvey(surveyId);\r\n      }\r\n    }\r\n  }\r\n\r\n  public static setSurveyRunning() {\r\n    (window as any).globalSurveyRunning = true;\r\n  }\r\n\r\n  public static unsetSurveyRunning() {\r\n    (window as any).globalSurveyRunning = false;\r\n  }\r\n}\r\n\r\nexport { SurveyManager };\n\n\n// WEBPACK FOOTER //\n// ./src/SurveyManager.ts","class Config {\n  static API_URL : String = \"https://api.getcloudcherry.com\";\n  static SURVEY_BY_TOKEN : String  = \"/api/SurveyByToken/{token}/{tabletId}\";\n  static SURVEY_PARTIAL_RESPONSE : String =  \"/api/PartialSurvey/{id}/{complete}\";\n  // static SURVEY_PARTIAL_RESPONSE : String =  \"/api/PartialSurvey/{id}/{complete}/JS-Web/{tabletId}\";\n  static CDN_URL : string = \"https://cx.getcloudcherry.com/\";\n  static CDN_ASSET_URL : string = \"https://cx.getcloudcherry.com/microsurvey-assets/\";\n  static POST_LOGIN_TOKEN = \"/api/LoginToken\";\n  static GET_SURVEY_THROTTLE_LOGIC = \"/api/SurveyThrottleLogic/{location}\";\n  static POST_THROTTLING = \"/api/Throttling\";\n  static POST_THROTTLING_ADD_ENTRIES = \"/api/Throttling/AddEntries\";\n  static POST_SURVEY_FINAL = \"/api/surveybytoken/{tokenId}\"\n}\n\nexport {Config};\n\n\n\n// WEBPACK FOOTER //\n// ./src/Config.ts","// import 'whatwg-fetch';\n\nfunction makeRequest (method : string, url : string, postParams : string, headers : any) : any {\n  return new Promise(function (resolve, reject) {\n    var xhr = new XMLHttpRequest();\n    xhr.open(method, url);\n    xhr.onload = function () {\n      if ((this as any).status >= 200 && (this as any).status < 300) {\n        let res : any = xhr.response?JSON.parse(xhr.response):'';\n        resolve(res);\n      } else {\n        reject({\n          status: (this as any).status,\n          statusText: xhr.statusText\n        });\n      }\n    };\n    xhr.onerror = function () {\n      reject({\n        status: (this as any).status,\n        statusText: xhr.statusText\n      });\n    };\n    if (headers) {\n      Object.keys(headers).forEach(function (key) {\n        xhr.setRequestHeader(key, headers[key]);\n      });\n    }\n    // var params : any = postParams;\n    // We'll need to stringify if we've been given an object\n    // If we have a string, this is skipped.\n    // if (params && typeof params === 'object') {\n    //   params = Object.keys(params).map(function (key) {\n    //     return encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\n    //   }).join('&');\n    // }\n    xhr.send(postParams);\n  });\n}\n\nclass RequestHelper {\n\n  static getWithHeaders(url : string, headers : any) {\n    return makeRequest(\"GET\", url, null, headers);\n  }\n\n  static postWithHeaders(url : string, data : Object, headers : any) {\n    headers[\"Content-Type\"] = \"application/json; charset=utf-8\";\n    return makeRequest(\"POST\", url, JSON.stringify(data), headers);\n    \n  }\n\n  static get(url : string) {\n    return makeRequest(\"GET\", url, null, null);\n    // let request : Request = new Request( (url as any) , new Object());\n    // return fetch(request).then( (response : Response) => {\n    //   if (response.status >= 200 && response.status < 300) {\n    //     return Promise.resolve(response);\n    //   } else {\n    //     var error = new Error(response.statusText);\n    //     // error.response = response;\n    //     throw error;\n    //   }\n    // }).then( (response : Response) => {\n    //   return response.json();\n    // }).catch( (error : Error) => {\n    //   (window as any).ccsdkDebug?console.log('Request failed ', error):'';\n    // });\n  }\n\n  /**\n   *\n   * var data = new FormData()\n   *  data.append('file', input.files[0])\n   *  data.append('user', 'hubot')\n   *\n   * @static\n   * @param {any} url\n   * @param {any} data\n   * @memberof Request\n   */\n  static post(url : string, data : Object) {\n    //consider, file upload?\n    // (window as any).ccsdkDebug?console.log(\"[\" + JSON.stringify(data) + \"]\"):'';\n    (window as any).ccsdkDebug?console.log(\"Sending : \" + data):'';\n    return makeRequest(\"POST\", url, JSON.stringify(data), { \"Content-Type\" : \"application/json; charset=utf-8\" });\n    // let request : Request = new Request( (url as any), {\n    //   method : \"POST\",\n    //   headers : {\n    //     \"Content-Type\" : \"application/json; charset=utf-8\"\n    //   },\n    //   body : JSON.stringify(data)\n    // });\n    // return fetch(request).then( (response : Response) => {\n    //   if (response.status >= 200 && response.status < 300) {\n    //     return Promise.resolve(response);\n    //   } else {\n    //     let error : Error = new Error(response.statusText);\n    //     // error.response = response;\n    //     throw error;\n    //   }\n    // }).then( (response : Response) => {\n    //   return response.json();\n    // }).catch( (error : Error) => {\n    //   (window as any).ccsdkDebug?console.log('Request failed ', error):'';\n    // });\n  }\n\n}\n\nexport { RequestHelper };\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/Request.ts","import '../css/main.scss';\nimport  * as QuestionSurvey from '../templates/Survey.html';\nimport  * as QuestionStart from '../templates/QuestionStart.html';\nimport  * as QuestionSingleline from '../templates/QuestionSingleline.html';\nimport  * as QuestionNumber from '../templates/QuestionNumber.html';\nimport  * as QuestionMultiline from '../templates/QuestionMultiline.html';\nimport  * as QuestionCheckbox from '../templates/QuestionCheckbox.html';\nimport  * as QuestionRadio from '../templates/QuestionRadio.html';\nimport  * as QuestionRadioMore from '../templates/QuestionRadioMore.html';\nimport  * as QuestionRadioImage from '../templates/QuestionRadioImage.html';\nimport  * as QuestionScale from '../templates/QuestionScale.html';\nimport  * as QuestionCSATAgreement5 from '../templates/QuestionCSATAgreement5.html';\nimport  * as QuestionCSATSatisfaction5 from '../templates/QuestionCSATSatisfaction5.html';\nimport  * as QuestionNPS from '../templates/QuestionNPS.html';\nimport  * as QuestionSelect from '../templates/QuestionSelect.html';\nimport  * as QuestionMultiSelect from '../templates/QuestionMultiSelect.html';\nimport * as QuestionSmile from '../templates/QuestionSmile.html';\nimport  * as QuestionSmileInverted from '../templates/QuestionSmileInverted.html';\nimport  * as QuestionStar from '../templates/QuestionStar.html';\nimport  * as QuestionSlider from '../templates/QuestionSlider.html';\nimport * as OptionRadioImage from '../templates/OptionRadioImage.html';\nimport  * as OptionRadio from '../templates/OptionRadio.html';\nimport * as OptionCheckbox from '../templates/OptionCheckbox.html';\nimport  * as OptionCheckboxImage from '../templates/OptionCheckboxImage.html';\nimport  * as ThankYou from '../templates/ThankYou.html';\n\nimport  * as LanguageSelector from '../templates/LanguageSelector.html';\n\nlet templates = {\n  question_survey : \"\",\n  question_start : \"\",\n  question_text : \"\",\n  question_number: \"\",\n  question_scale : \"\",\n  question_csat_agreement_5 : \"\",\n  question_csat_satisfaction_5 : \"\",\n  question_nps : \"\",\n  question_multi_line_text : \"\",\n  question_multi_select : \"\",\n  question_radio_more : \"\",\n  question_radio : \"\",\n  question_radio_image : \"\",\n  question_checkbox : \"\",\n  question_select : \"\",\n  question_smile_5: \"\",\n  question_smile_5_inverted : \"\",\n  question_star_5 : \"\",\n  question_slider : \"\",\n  option_radio_image: \"\",\n  option_radio : \"\",\n  option_checkbox: \"\",\n  option_checkbox_image : \"\",\n  thankyou : \"\",\n  language_selector : \"\"\n\n};\n\n\ntemplates.question_survey = QuestionSurvey;\n\ntemplates.question_start = QuestionStart;\n\ntemplates.question_text = QuestionSingleline;\ntemplates.question_number= QuestionNumber;\n\n\ntemplates.question_scale = QuestionScale;\ntemplates.question_csat_agreement_5 = QuestionCSATAgreement5;\ntemplates.question_csat_satisfaction_5 = QuestionCSATSatisfaction5;\ntemplates.question_nps = QuestionNPS;\n\ntemplates.question_slider = QuestionSlider;\n\n\ntemplates.question_multi_line_text = QuestionMultiline;\n\n\ntemplates.question_multi_select = QuestionMultiSelect;\n\n\ntemplates.question_select = QuestionSelect;\n\n\ntemplates.question_smile_5 = QuestionSmile;\ntemplates.question_smile_5_inverted = QuestionSmileInverted;\n\ntemplates.question_star_5 = QuestionStar;\n\ntemplates.question_checkbox = QuestionCheckbox;\n\ntemplates.question_radio = QuestionRadio;\n\ntemplates.question_radio_more = QuestionRadioMore;\n\ntemplates.question_radio_image = QuestionRadioImage;\ntemplates.option_radio_image = OptionRadioImage;\ntemplates.option_radio = OptionRadio;\ntemplates.option_checkbox = OptionCheckbox;\ntemplates.option_checkbox_image = OptionCheckboxImage;\n\ntemplates.thankyou = ThankYou;\n\ntemplates.language_selector = LanguageSelector;\n\n\nexport {templates};\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/templates.ts","class LanguageTextFilter {\r\n\r\n    public static translateQuestionText(surveyHandler : any, question : any) {\r\n        if(!surveyHandler.ccsdk.config.language.includes('Default')) {\r\n            if( question.translated != null && \r\n                typeof question.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n                if (question.translated[surveyHandler.ccsdk.config.language].text != null) {\r\n                    let qText = question.translated[surveyHandler.ccsdk.config.language].text.split(':');\r\n                    if (question.translated[surveyHandler.ccsdk.config.language].text.includes(\":\")) {\r\n                        qText = qText[0] + ': <br><span class=\"text-normal\">' + qText[1] + '</span>';\r\n                    }\r\n                    return qText;\r\n                } else {\r\n                    return question.translated[surveyHandler.ccsdk.config.language].text == null ? '' : question.translated[surveyHandler.ccsdk.config.language].text;\r\n                }\r\n                // return question.translated[surveyHandler.ccsdk.config.language].text;\r\n            } else {\r\n                if(question.text != null){\r\n                    let qText = question.text.split(':');\r\n                    if (question.text.includes(\":\")) {\r\n                        qText = qText[0] + ': <br><span class=\"text-normal\">' + qText[1] + '</span>';\r\n                    }\r\n                    return qText ;\r\n                }else{\r\n                    return question.text == null ? '':question.text;\r\n                }\r\n            }\r\n        } else {\r\n            if (question.text != null) {\r\n                let qText = question.text.split(':');\r\n                if (question.text.includes(\":\")) {\r\n                    qText = qText[0] + ': <br><span class=\"text-normal\">' + qText[1] + '</span>';\r\n                }\r\n                return qText;\r\n            } else {\r\n                return question.text == null ? '' : question.text;\r\n            }\r\n        }\r\n    }\r\n\r\n    public static translateMessages(surveyHandler : any, type : string) {\r\n        if (surveyHandler.surveyData.translated != null && typeof surveyHandler.surveyData.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n            if(!surveyHandler.ccsdk.config.language.includes('Default')) {\r\n                if(surveyHandler.surveyData.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n                    if(surveyHandler.surveyData.translated[surveyHandler.ccsdk.config.language][type] != null) {\r\n                        return surveyHandler.surveyData.translated[surveyHandler.ccsdk.config.language][type];\r\n                    } else {\r\n                        return surveyHandler.surveyData[type];\r\n                    }\r\n                } else {\r\n                    return surveyHandler.surveyData[type];\r\n                }\r\n            } else {\r\n                return surveyHandler.surveyData[type];\r\n            }\r\n        }\r\n    }\r\n\r\n    public static translateDisplayLegend(surveyHandler: any, question: any) {\r\n        if (!surveyHandler.ccsdk.config.language.includes('Default')) {\r\n            if (question.translated != null &&\r\n                typeof question.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n                return question.translated[surveyHandler.ccsdk.config.language].displayLegend;\r\n            } else {\r\n                return question.displayLegend;\r\n            }\r\n        } else {\r\n            return question.displayLegend;\r\n        }\r\n    }\r\n\r\n    public static translateMultiSelect(surveyHandler: any, question: any) {\r\n        if (!surveyHandler.ccsdk.config.language.includes('Default')) {\r\n            if (question.translated != null &&\r\n                typeof question.translated[surveyHandler.ccsdk.config.language] !== 'undefined') {\r\n                return question.translated[surveyHandler.ccsdk.config.language].multiSelect;\r\n            } else {\r\n                return question.multiSelect;\r\n            }\r\n        } else {\r\n            return question.multiSelect;\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport { LanguageTextFilter };\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/filters/LanguageTextFilter.ts","import { DomUtilities } from \"./DomUtilities\";\nclass Select{\n  util : DomUtilities;\n  $body : any ;\n  $html : any ;\n  qId : any ;\n  select : any;\n  type : string;\n  listeners : any = [];\n  constructor(qId : string){\n    this.qId = qId;\n\t}\n  init(qId : string){\n    this.util = new DomUtilities();\n    this.$body = document.querySelectorAll(\"body\")[0];\n    this.$html = document.querySelectorAll(\"html\")[0];\n    var select = document.querySelectorAll(\"#\"+qId+\" .cc-select\");\n\n  \t\t// var divSelect = document.querySelectorAll(\"div.cc-select\");\n      // this.util.removeAll(divSelect);\n      let parent = this;\n\n      //Assumption: iterating over array but there will always be one select at a time\n      this.type = select[0].getAttribute('data-type');\n  \t\tArray.prototype.forEach.call(select, function(el, i){\n  \t\t  var self = el;\n  \t\t\tvar $selectOptions = document.querySelectorAll(\"#\"+qId+\" .cc-select-options\");\n  \t\t  var classes = self.getAttribute(\"class\"),\n  \t\t      id      = self.getAttribute(\"id\"),\n  \t\t      name    = self.getAttribute(\"name\");\n  \t\t  var template =  '<div class=\"' + classes + '\">';\n  \t\t      template += '<span class=\"cc-select-trigger\">' + self.getAttribute(\"placeholder\") + '</span>';\n  \t\t      template += '<div class=\"cc-select-options-container\" cc-scrollbar-container><div class=\"cc-select-options\">';\n  \t\t\tvar options = self.querySelectorAll(\"option\");\n  \t\t\t\tArray.prototype.forEach.call(options, function(el, i){\n  \t\t        template += '<span class=\"cc-select-option ' + el.getAttribute(\"class\") + '\" data-value=\"' + el.getAttribute(\"value\") + '\">' + el.innerHTML+ '</span>';\n  \t\t      });\n  \t\t  template += '</div></div></div>';\n  \t\t  parent.util.addClass(self, 'hide');\n  \t\t  self.insertAdjacentHTML('afterend',template);\n  \t\t});\n      this.setupListeners();\n  }\n\n  \n  setupListeners(){\n    var self = this;\n    var qId = self.qId;\n    let ref2 = this.util.initListener('click',  \"#\"+qId+\" .cc-select-option\", function(e){      \n    // let ref2 = this.util.initListener(this.$body, \"click\", \"#\"+qId+\" .cc-select-option\", function(e) {\n      (window as any).ccsdkDebug?console.log('click cc-select-option',this):'';\n      let selfOption = this;\n      let value = this.getAttribute('data-value');\n      //select cc-select-wrapper\n      //todo: write a function to directly select parent via selector\n      let selectOptions = this.parentNode;\n      let select = selectOptions.parentNode.parentNode;\n      this.select = select;\n      let selectWrapper = select.parentNode;\n      (window as any).ccsdkDebug?console.log(select):'';\n      (window as any).ccsdkDebug?console.log(selectOptions):'';\n      (window as any).ccsdkDebug?console.log(selectWrapper):'';\n      //select all cc-select-option and remove class selection\n      // self.util.removeClassAll(selectOptions.querySelectorAll(\".cc-select-option\"), \"selection\");\n      // this.parents(\".cc-select-options\").find(\".cc-select-option\").removeClass(\"selection\");\n\n      self.util.addClass(this,\"selection\");\n      let selectedOptionText = select.querySelectorAll('.cc-select-trigger')[0].textContent;\n      (window as any).ccsdkDebug?console.log('select type', self.type):'';\n      if(self.type !== 'multiple'){\n        (window as any).ccsdkDebug?console.log('select type', self.type):'';\n        selectedOptionText = selfOption.textContent;\n        (window as any).ccsdkDebug?console.log('selected option', selectedOptionText):'';\n        self.util.removeClassAll(document.querySelectorAll(\".cc-select\"), \"opened\");\n        selectWrapper.querySelectorAll(\"select\")[0].value = value;\n        select.querySelectorAll('.cc-select-trigger')[0].textContent = selectedOptionText;\n        self.util.removeClassAll(document.querySelectorAll(\"#\" + qId + \" .cc-select-option\"), 'selection');\n        self.util.addClass(self, 'selection');\n      \n      }else{\n        (window as any).ccsdkDebug?console.log(selectedOptionText):'' ;\n        if(selectedOptionText != 'Select'){\n          if(selectedOptionText.indexOf(selfOption.textContent) == 0){\n            selectedOptionText = selectedOptionText.replace(selfOption.textContent + ', ', '') ;   \n            selectedOptionText = selectedOptionText.replace(selfOption.textContent, '') ;   \n            self.util.removeClass(this,\"selection\");\n          }else if(selectedOptionText.indexOf(selfOption.textContent) > 0){\n            selectedOptionText = selectedOptionText.replace(', ' + selfOption.textContent, '') ;    \n            self.util.removeClass(this,\"selection\");\n          }else{\n            selectedOptionText = selectedOptionText + ', ' + selfOption.textContent;\n          }\n        \n        }else{\n          (window as any).ccsdkDebug?console.log(selfOption.textContent):'';\n          selectedOptionText = selfOption.textContent;\n        }\n        selectWrapper.querySelectorAll(\"select\")[0].value = selectedOptionText;\n        \n        if(selectedOptionText.length < 1){\n          select.querySelectorAll('.cc-select-trigger')[0].textContent = 'Select';\n        }else{\n          select.querySelectorAll('.cc-select-trigger')[0].textContent = selectedOptionText;\n        }\n        return false;\n        \n      }\n\n    });\n    this.listeners.push(ref2);    \n    ref2.internalHandler = this.util.listener(this.$body, ref2.type, ref2.id, ref2.cb);\n    let ref = this.util.initListener('click',  \"#\"+qId+\" .cc-select-trigger\", function(e){\n      self.$html.addEventListener('click',function(e){\n        if(!self.util.hasClass(e.target, 'cc-select-option')){\n          self.util.removeClassAll(document.querySelectorAll(\".cc-select\"), \"opened\");\n          self.$html.removeEventListener('click', function(){\n          });\n        }\n      })\n      var ccSelect = this.parentNode;\n      (window as any).ccsdkDebug?console.log('click cc-select-trigger',ccSelect):'';\n      self.util.toggleClass(ccSelect, \"opened\");\n      e.stopPropagation();\n    });\n    this.listeners.push(ref);    \n    ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\n  \n  }\n\n  destroyListeners(){\n    for(let listener of this.listeners) {\n        this.util.removeListener(this.$body, listener.type, listener.internalHandler);\n    }\n    return true;\n  }\n\n\n  setValue(value : string){\n    let self = this;\n    let qId = self.qId;\n    let select :any;\n\n    select =  document.querySelectorAll(\"#\"+qId+\" select\")[0];\n    select.value = value;\n    document.querySelectorAll(\"#\"+qId+\" .cc-select-trigger\")[0].textContent = value;\n  }\n\n  selectOption(el:any){\n    this.util.addClass(el, 'selection');\n  }\n\n  selectOptions(csv : string){\n    let self = this;\n    if(csv){\n      let allOptions = csv.split(',');\n      for(let option of allOptions){\n        let domOptions = document.querySelectorAll(\"#\"+self.qId+\" .cc-select-option\");\n        Array.prototype.forEach.call(domOptions, function(el, i){\n          if(el.getAttribute('data-value') == option){\n            self.selectOption(el);\n          }\n        });\n          \n      }\n    }\n  }\n\n}\nexport { Select }\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/dom/Select.ts","\r\nclass ConditionalFlowFilter {\r\n  public static filterQuestion(surveyHandler : any, question : any) {\r\n    let aAddedCount = 0;\r\n    let aRemovedCount = 0;\r\n\r\n    if (surveyHandler.getAnswerForQuestionId(question.id) != null) {\r\n        for (let aQuestion of surveyHandler.getConditionalSurveyQuestions()) {\r\n            if (aQuestion.conditionalFilter != null) {\r\n                let iSatisfied = false;\r\n                let iFailed = false;\r\n                for (let aFilterByQuestion of aQuestion.conditionalFilter.filterquestions) {\r\n                    if (ConditionalFlowFilter.isAnd(aFilterByQuestion)) {\r\n                        if (ConditionalFlowFilter.doesSatisfy(surveyHandler, aFilterByQuestion) && !iFailed) {\r\n                            iSatisfied = true;\r\n                        } else {\r\n                            iFailed = true;\r\n                            break;\r\n                        }\r\n                    } else if (ConditionalFlowFilter.isOr(aFilterByQuestion)) {\r\n                        if (ConditionalFlowFilter.doesSatisfy(surveyHandler, aFilterByQuestion)) {\r\n                            iSatisfied = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (iSatisfied && !iFailed) {\r\n                    if (!surveyHandler.getSurveyQuestions().includes(aQuestion)) {\r\n                        surveyHandler.getSurveyQuestions().push(aQuestion);\r\n                        aAddedCount++;\r\n                    }\r\n                } else {\r\n                    if (surveyHandler.getSurveyQuestions().includes(aQuestion)) {\r\n                        aRemovedCount++;\r\n                        surveyHandler.getSurveyQuestions().splice(surveyHandler.getSurveyQuestions().indexOf(aQuestion), 1);\r\n                        // surveyHandler.removePartial(aQuestion.id);\r\n                        //removing from partial requires not posting partial after each question rather than posting them all at once.\r\n                        surveyHandler.removeAnswer(aQuestion.id);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (aAddedCount > 0 || aRemovedCount > 0) {\r\n        surveyHandler.getSurveyQuestions().sort(ConditionalFlowFilter.questionCompare);\r\n        // surveyHandler.sendConditionalFLowQuestionsData(surveyHandler.getSurveyQuestions().size());\r\n        return true;\r\n    } else {\r\n      // return false;\r\n    }\r\n    (window as any).ccsdkDebug?console.log(surveyHandler.getSurveyQuestions()):'';\r\n  }\r\n\r\n  private static questionCompare(a : any, b : any) {\r\n    return a.sequence - b.sequence;\r\n  }\r\n\r\n  private static isAnd(filterQuestion : any) : boolean {\r\n      if (filterQuestion.groupBy == null || filterQuestion.groupBy.toUpperCase() == \"AND\") {\r\n          return true;\r\n      }\r\n      return false;\r\n  }\r\n\r\n  private static isOr(filterQuestion : any) : boolean{\r\n      if (filterQuestion.groupBy != null && filterQuestion.groupBy.toUpperCase() == \"OR\") {\r\n          return true;\r\n      }\r\n      return false;\r\n  }\r\n\r\n  private static isNumberCheck(filterQuestion : any) : boolean  {\r\n      if (filterQuestion.answerCheck[0].includes(\"lt\") || filterQuestion.answerCheck[0].includes(\"gt\") || filterQuestion.answerCheck[0].includes(\"eq\")) {\r\n          return true;\r\n      }\r\n      return false;\r\n  }\r\n\r\n  /**\r\n   * Contains logic to control conditional flow and whether to show or hide the questions based on the user input\r\n   *\r\n   * @param filterQuestion\r\n   * @return\r\n   */\r\n  private static doesSatisfy(surveyHandler : any, filterQuestion : any) : boolean {\r\n      if (ConditionalFlowFilter.isNumberCheck(filterQuestion)) {\r\n          if (filterQuestion.answerCheck[0].toLowerCase() == \"lt\") {\r\n              if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId) != null)\r\n                  if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput != null && surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput < filterQuestion.number) {\r\n                      return true;\r\n                  }\r\n          } else if (filterQuestion.answerCheck[0].toLowerCase() == (\"gt\")) {\r\n              if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId) != null)\r\n                  if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput != null && surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput > filterQuestion.number) {\r\n                      return true;\r\n                  }\r\n          } else if (filterQuestion.answerCheck[0].toLowerCase() == (\"eq\")) {\r\n              if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId) != null)\r\n                  if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput != null && surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput == filterQuestion.number) {\r\n                      return true;\r\n                  }\r\n          }\r\n      } else {\r\n          let iFoundAll = false;\r\n          for (let aAnswer of filterQuestion.answerCheck) {\r\n            //   console.log('hello',surveyHandler.getAnswerForQuestionId(filterQuestion.questionId), aAnswer);\r\n\r\n              if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId) != null)\r\n                  if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).textInput != null && surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).textInput.includes(aAnswer)) {\r\n                      iFoundAll = true;\r\n                      break;\r\n                  } else {\r\n                      iFoundAll = false;\r\n                      break;\r\n                  }\r\n          }\r\n          if (iFoundAll)\r\n              return true;\r\n      }\r\n\r\n      return false;\r\n  }\r\n}\r\n\r\nexport { ConditionalFlowFilter };\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/filters/ConditionalFlowFilter.ts","import { CCSDKConfig } from \"./interfaces/CCSDKConfig\";\nimport { DisplayConfig } from \"./interfaces/DisplayConfig\";\nimport { SurveyHandler } from \"./SurveyHandler\";\nimport { DomSurvey } from \"./helpers/dom/DomSurvey\";\nimport { DomUtilities } from \"./helpers/dom/DomUtilities\";\nimport { Scrollbar } from \"./helpers/dom/ScrollBar\";\nimport { Cookie } from './helpers/Cookie';\nimport { Constants } from './Constants';\nimport { Slider } from \"./helpers/dom/Slider\";\nimport { SurveyManager } from \"./SurveyManager\";\nimport { Triggers } from './Triggers';\nimport { Survey } from \"./Survey\";\n/**\n * functions that are exposed to SDK User are written here.\n * Entry point for CCSDK.\n */\n\n\nlet localCCSDK = {\n  init : init,\n  destroy : destroy,\n  trigger : trigger,\n  hide : hide,\n  show : show,\n  on : on,\n  prefill : prefill,\n  prefillByTag: prefillByTag,\n  prefillByNote : prefillByNote\n};\n\n// let instances : any = {};\n\n(window as any).globalSurveyRunning = false;\n(window as any).ccsdkDebug = false;\n(window as any).isMobile = window.innerWidth <= 768 ? true:false;\n\nif(typeof (window as any).CCSDK !== 'undefined') {\n  var queue = (window as any).CCSDK.q;\n  (window as any).CCSDK = function()   {\n      if(arguments && arguments.length == 0)   {\n          var time = new Date();\n          // console.log(this.time);\n      } else {\n          (window as any).ccsdkDebug?console.log(arguments):'';\n          var args = (Array as any).from(arguments);\n          // console.log(arguments);\n          //Call this functions as ccsdk('functionName', ['argument1', 'argument2']);\n          var functionName = args.splice(0,1)[0];\n        (window as any).ccsdkDebug ?console.log(functionName):'';\n          return localCCSDK[functionName].apply(this, args);\n      }\n  };\n  if(queue){\n    for(var q of queue) {\n        var args = (Array as any).from(q);\n        var functionName = args.splice(0, 1)[0];\n        localCCSDK[functionName].apply(this, args);\n    }\n  }\n  let eventCCReady : Event = document.createEvent('Event');\n  eventCCReady.initEvent('ccready', true, true);\n  document.dispatchEvent(eventCCReady);\n\n}\n\nexport function init(surveyToken : any) {\n  //config options can be set in arguments[1]\n  //available config options : themeColor\n  // console.log(arguments[arguments.length - 1]);\n  let config = (typeof arguments[1] === 'object')? arguments[1] : {};\n  //create survey instance\n  if(typeof Cookie.get(surveyToken + '-finish') !== 'undefined' && Cookie.get(surveyToken + '-finish')) {\n    return;\n  }\n  if(typeof config.isActive !== 'undefined' && config.isActive) {\n    SurveyManager.surveyInstances[surveyToken] = (SurveyManager.surveyInstances[surveyToken]) ? SurveyManager.surveyInstances[surveyToken] : new Survey(surveyToken, config);\n    return SurveyManager.surveyInstances[surveyToken];\n  } else {\n    //do nothing\n  }\n  \n}\n\nexport function destroy(surveyToken : string){\n  // this.survey.destroy();\n  //remove from trigger manager, delete instance.\n  delete SurveyManager.surveyInstances[surveyToken];\n}\n//\nexport function trigger(surveyToken : string, type : string, target : string) {\n  (window as any).ccsdkDebug ?console.log(SurveyManager.surveyInstances):'';\n  if(typeof SurveyManager.surveyInstances[surveyToken] != 'undefined'){\n    SurveyManager.surveyInstances[surveyToken].trigger(type, target);\n  }\n  //tell trigger manager to register trigger.\n}\n\nexport function on(surveyToken : string, type : string, callback : any) {\n  if (typeof SurveyManager.surveyInstances[surveyToken] != 'undefined') {  \n    SurveyManager.surveyInstances[surveyToken].on(type, callback);\n  }\n}\n\nexport function prefill(surveyToken : string, questionId : string, answerObject : any) {\n  if (typeof SurveyManager.surveyInstances[surveyToken] != 'undefined') {  \n    SurveyManager.surveyInstances[surveyToken].prefill(questionId, answerObject);\n  }\n}\n\nexport function prefillByTag(surveyToken : string, questionTag : string, answer : any) {\n  if (typeof SurveyManager.surveyInstances[surveyToken] != 'undefined') { \n    SurveyManager.surveyInstances[surveyToken].fillPrefill(questionTag, answer);\n  }\n}\n\nexport function prefillByNote(surveyToken : string, questionNote : string, answer : any){\n  if (typeof SurveyManager.surveyInstances[surveyToken] != 'undefined') {  \n    SurveyManager.surveyInstances[surveyToken].fillPrefillByNote(questionNote, answer);\n  }\n}\n\nexport function show(surveyToken : string) {\n  if (typeof SurveyManager.surveyInstances[surveyToken] != 'undefined') {  \n    SurveyManager.surveyInstances[surveyToken].show();\n  }\n}\n\nexport function hide(surveyToken : string) {\n  if (typeof SurveyManager.surveyInstances[surveyToken] != 'undefined') {  \n    SurveyManager.surveyInstances[surveyToken].hide();\n  }\n}\n\n//on exit detect\n\n\n//\n// export function prefill(id : string, value : string, valueType : string) {\n//   SurveyManager.surveyInstances[this.surveyToken].prefill(id, value, valueType);\n// }\n\n// setInterval(function() {\n//   //collect data and add to cookies.\n// }, 1000);\n\n\n\n// WEBPACK FOOTER //\n// ./src/CCSDKEntry.ts","import { CCSDKConfig } from \"./interfaces/CCSDKConfig\";\r\nimport { DisplayConfig } from \"./interfaces/DisplayConfig\";\r\nimport { SurveyHandler } from \"./SurveyHandler\";\r\nimport { DomSurvey } from \"./helpers/dom/DomSurvey\";\r\nimport { DomUtilities } from \"./helpers/dom/DomUtilities\";\r\nimport { Scrollbar } from \"./helpers/dom/ScrollBar\";\r\nimport { Cookie } from './helpers/Cookie';\r\nimport { Constants } from './Constants';\r\nimport { Slider } from \"./helpers/dom/Slider\";\r\nimport { SurveyManager } from \"./SurveyManager\";\r\nimport { TriggerManager } from \"./TriggerManager\";\r\nimport { Triggers } from './Triggers';\r\nimport { RequestHelper } from './helpers/Request';\r\nimport { Config } from './Config';\r\n\r\nimport { templates } from \"./helpers/templates\"\r\n\r\nclass Survey {\r\n  survey : SurveyHandler;\r\n  dom : DomSurvey;\r\n  surveyData : any;\r\n  util : DomUtilities;\r\n  scrollbar : Scrollbar;\r\n  slider : Slider;\r\n  config : CCSDKConfig;\r\n  surveyToken : string;\r\n  triggers : Triggers;\r\n  surveyRunning : boolean;\r\n  surveyDone : boolean;\r\n  surveyStatus : string;\r\n  isThrottled : boolean;\r\n  thorttlingLogic : any;\r\n  loginData : any;\r\n  debug : false;\r\n\r\n  constructor(surveyToken : string, config : CCSDKConfig) {\r\n    this.isThrottled = true;\r\n    this.surveyDone = false;\r\n    this.surveyStatus = '';\r\n    this.surveyToken = surveyToken;\r\n    this.config = config;\r\n    this.surveyRunning = false;\r\n    this.thorttlingLogic = null;\r\n    if(typeof this.config.textDirection === 'undefined') {\r\n      this.config.textDirection = \"ltr\";\r\n    }\r\n    // this.setupSurvey();\r\n    this.triggers = new Triggers(this);\r\n    TriggerManager.addSurvey(this.surveyToken, this.triggers);\r\n    this.survey = new SurveyHandler(this);\r\n    this.util = new DomUtilities;\r\n    //set themeColor of survey\r\n    this.config.brandColor = ( this.config && this.config.brandColor )?\r\n    this.config.brandColor:\"#db3c39\";\r\n      //use config variable textDirection and set dir\r\n    this.setHtmlTextDirection();\r\n    this.setDisplayOptions();\r\n    this.util.trigger(document, this.surveyToken + '-ready', {'survey' : this});\r\n    //do login\r\n    this.config.username = \"test\";\r\n    this.config.password = \"test\";\r\n    this.config.location = \"location\";\r\n    this.config.language = \"English (Default)\";\r\n    //check trigger conditions and add itself to \r\n    //based on new config\r\n    //gotta and these.\r\n    this.trigger(\"click\", this.config.cssSelector);\r\n    // this.trigger(\"scroll-pixels\", this.config.scrollPercent);\r\n    // this.trigger(\"page-time\", this.config.waitSeconds);\r\n    // this.trigger(\"url-match\", this.config.grepURL);\r\n    // this.trigger(\"url-not-match\", this.config.grepInvertURL);\r\n    // this.config.scrollPercent = 10;\r\n    // this.config.waitSeconds = 5;\r\n    this.triggers.setConditionalTriggers(this.config);\r\n    // this.login(function() {\r\n      //on login\r\n    // });\r\n  }\r\n\r\n  login(cb) {\r\n    let loginURL = Config.API_URL + Config.POST_LOGIN_TOKEN;\r\n    let loginResponse = RequestHelper.post(loginURL,  { grant_type : Constants.GRANT_TYPE, username : this.config.username, password : this.config.password });\r\n    let self = this;\r\n    this.debug?console.log(\"login\"):'';\r\n    loginResponse.then(function(logindata) {\r\n      self.debug?console.log(logindata):'';\r\n      self.loginData = logindata;\r\n      if(self.isThrottled) {\r\n        self.getSurveyThrottlingLogic(cb);\r\n      } else {\r\n        cb();\r\n        return;\r\n      }\r\n      \r\n    });\r\n  }\r\n\r\n  getSurveyThrottlingLogic(cb) {\r\n    let getThrottleUrl = Config.API_URL + Config.GET_SURVEY_THROTTLE_LOGIC.replace('{location}', this.config.location);\r\n    let headers = {};\r\n    headers[Constants.AUTHORIZATION] = Constants.AUTHORIZATION_BEARER + \" \" + this.loginData.access_token;\r\n    let getThrottleResponse = RequestHelper.getWithHeaders(getThrottleUrl, headers);\r\n    let self = this;\r\n    getThrottleResponse.then(function(data) {\r\n      self.thorttlingLogic = data;\r\n      self.checkThrottling(cb);\r\n    });\r\n  }\r\n\r\n  checkThrottling(cb) {\r\n    if(this.thorttlingLogic != null) {\r\n      if (this.thorttlingLogic.inputIds == null) {\r\n        this.thorttlingLogic.inputIds = [];\r\n      }\r\n      this.thorttlingLogic.inputIds.push(this.thorttlingLogic[this.thorttlingLogic.uniqueIDQuestionIdOrTag.toLowerCase()]);\r\n      if (this.thorttlingLogic.logics != null && this.thorttlingLogic.logics.length > 0 && this.config != null) {\r\n          this.thorttlingLogic.logics[0].filter.location = [];\r\n          this.thorttlingLogic.logics[0].filter.location.push(this.config.location);\r\n      }\r\n    }\r\n    let self = this;\r\n    let postThrottleUrl = Config.API_URL + Config.POST_THROTTLING;\r\n    let headers = {};\r\n    headers[Constants.AUTHORIZATION] = Constants.AUTHORIZATION + \" \" + this.loginData.access_token;\r\n    let postThrottleResponse = RequestHelper.postWithHeaders(postThrottleUrl, this.thorttlingLogic, headers);\r\n    postThrottleResponse.then(function(throttleResponse) {\r\n      \r\n      if(typeof throttleResponse[0][self.thorttlingLogic.uniqueIDQuestionIdOrTag.toLowerCase()] && throttleResponse[0].value) {\r\n        //get survey data?  \r\n        cb();\r\n      }\r\n    });\r\n  }\r\n\r\n  addThrottlingEntries(isOpen : boolean) {\r\n    let addThrottleUrl = Config.API_URL + Config.POST_THROTTLING_ADD_ENTRIES;\r\n    let headers = {};\r\n    this.loginData = { access_token : \"help\" };\r\n    headers[Constants.AUTHORIZATION] = Constants.AUTHORIZATION + \" \" + this.loginData.access_token;\r\n    //fill this from config and data.\r\n    let addThrottleUrlResponse = RequestHelper.postWithHeaders(addThrottleUrl, { \r\n      user : \"\", \r\n      mobile : \"\", \r\n      emailId : \"\", \r\n      customId : \"\", \r\n      surveySentDate : \"\", \r\n      surveyOpenDate : \"\", \r\n      channel : \"\", \r\n      isOpened : isOpen\r\n    }, headers);\r\n    addThrottleUrlResponse.then(function(throttleResponse) {\r\n      this.debug?console.log(throttleResponse):'';\r\n    })\r\n  }\r\n\r\n  setupSurvey(){\r\n    // this.getSurveyData();\r\n    this.initSurvey();\r\n  }\r\n\r\n  setHtmlTextDirection(){\r\n    let htmlDir : string = document.getElementsByTagName('html')[0].getAttribute('dir');\r\n    let direction : string = ( this.config && this.config.textDirection )?\r\n    this.config.textDirection:(htmlDir?htmlDir:\"ltr\");\r\n    document.getElementsByTagName('html')[0].setAttribute('dir', direction);\r\n  }\r\n\r\n  setDisplayOptions(){\r\n    this.survey.surveyDisplay.position =  this.config && this.config.position ?\r\n    this.config.position : \"bottom right\";\r\n    let welcomePopupAnimation = 'hide-right-left';\r\n    // this.survey.surveyDisplay.welcomePopupAnimation =  this.config && this.config.display && this.config.display.welcomePopupAnimation ?\r\n    // \"hide-\"+ this.config.display.welcomePopupAnimation : \"hide-right-left\";\r\n    // this.survey.surveyDisplay.surveyPopupAnimation =  this.config && this.config.display && this.config.display.surveyPopupAnimation ?\r\n    // \"hide-\"+ this.config.display.surveyPopupAnimation : \"hide-right-left\";\r\n    // this.survey.surveyDisplay.surveyPosition =  this.config && this.config.display && this.config.display.surveyPosition ?\r\n    // this.config.display.surveyPosition : ( this.config.display.position.search(/bottom/gi)==-1?\"top\":\"bottom\" ) ;\r\n\r\n    switch (this.survey.surveyDisplay.position) {\r\n      case 'bottom right':\r\n        welcomePopupAnimation = 'hide-right-left';\r\n        break;\r\n      case 'right bottom':\r\n        welcomePopupAnimation = 'hide-right-left';\r\n        break;\r\n      case 'top right':\r\n        welcomePopupAnimation = 'hide-right-left';\r\n        break;\r\n      case 'right top':\r\n        welcomePopupAnimation = 'hide-right-left';\r\n        break;\r\n      case 'bottom left':\r\n        welcomePopupAnimation = 'hide-left-right';\r\n        break;\r\n      case 'left bottom':\r\n        welcomePopupAnimation = 'hide-left-right';\r\n        break;\r\n      case 'top left':\r\n        welcomePopupAnimation = 'hide-left-right';\r\n        break;\r\n      case 'left top':\r\n        welcomePopupAnimation = 'hide-left-right';\r\n        break;\r\n      default:\r\n        welcomePopupAnimation = 'hide-right-left';\r\n        break;\r\n    }\r\n    this.survey.surveyDisplay.welcomePopupAnimation = welcomePopupAnimation;\r\n    this.survey.surveyDisplay.surveyPosition = this.config.position.search(/bottom/gi) == -1 ? \"top\" : \"bottom\";\r\n  }\r\n\r\n  getSurveyData(){\r\n    let data = this.survey.fetchQuestions();\r\n    let self : Survey = this;\r\n    data.then(function(surveyData) {\r\n        self.debug?console.log(surveyData):'';\r\n        self.surveyData = surveyData;\r\n        //copy data.\r\n        let event = new CustomEvent(Constants.SURVEY_DATA_EVENT + \"-\" + self.surveyToken , { detail : JSON.parse(JSON.stringify(surveyData)) });\r\n        document.dispatchEvent(event);\r\n        self.dom.hideLoader();\r\n        self.initSurveyQuestions();\r\n    });\r\n  }\r\n\r\n  initSurvey() {\r\n    //if survey already run don't run?\r\n    //if default trigger initiated and survey already run then don't run.\r\n    let self : Survey = this;\r\n    // if(!self.surveyRunning) {\r\n    //   self.surveyRunning = true;\r\n    // }\r\n    self.surveyRunning = true;\r\n    self.dom = new DomSurvey(this);\r\n    self.dom.setTheme(self.config.brandColor, this.config.keepAlive ? this.config.keepAlive:0);\r\n    // self.survey.attachSurvey(this.surveyData);\r\n    // self.config.language = \"हिन्दी\";\r\n    self.config.language = \"default\";\r\n    \r\n    self.survey.displayWelcomeQuestion();\r\n    self.dom.setupListeners();\r\n    // self.survey.displayLanguageSelector();\r\n    //survey start event.\r\n    // let onSurveyStartEvent = new CustomEvent(Constants.SURVEY_START_EVENT + \"-\" + this.surveyToken);\r\n    // document.dispatchEvent(onSurveyStartEvent);\r\n  }\r\n\r\n  initSurveyQuestions(){\r\n    let self: Survey = this;\r\n    self.survey.attachSurvey(this.surveyData);\r\n    // self.dom.setupListeners();\r\n    // self.config.language = \"हिन्दी\";\r\n    self.config.language = \"default\";\r\n    // self.survey.displayLanguageSelector();\r\n    //survey start event.\r\n    this.dom.initSurveyDom();\r\n    let onSurveyStartEvent = new CustomEvent(Constants.SURVEY_START_EVENT + \"-\" + this.surveyToken);\r\n    document.dispatchEvent(onSurveyStartEvent);\r\n  }\r\n\r\n  public on(type: string, callback : any) {\r\n    document.addEventListener(type + \"-\" + this.surveyToken, function(e : any) {\r\n      callback(e.detail);\r\n    });\r\n  }\r\n\r\n  public show() {\r\n    //do show and hide things.\r\n    SurveyManager.setSurveyRunning();\r\n    //show survey\r\n    this.setupSurvey();\r\n\r\n  }\r\n\r\n  public hide() {\r\n    SurveyManager.unsetSurveyRunning();\r\n    this.survey.destroy();\r\n  }\r\n\r\n  public destroy() {\r\n    //remove all listeners?\r\n    SurveyManager.unsetSurveyRunning();\r\n    this.survey.destroy();\r\n  }\r\n  \r\n\r\n  public prefill(questionId : string, answer : any) {\r\n    //save this in this.surveyHandler\r\n    // this.survey.fillPrefillQuestionObject(questionId, answerObject);\r\n    this.survey.fillPrefillDirect(questionId, answer);\r\n  }\r\n\r\n  public fillPrefill(questionTag : string, answer : any) {\r\n    //save this in this.surveyHandler\r\n    this.survey.fillPrefill(questionTag, answer);\r\n  }\r\n\r\n  public fillPrefillByNote(questionNote : string, answer : any){\r\n    this.survey.fillPrefillByNote(questionNote, answer);\r\n  }\r\n\r\n  public trigger(type : string, target : any) {\r\n    let self : Survey = this;\r\n    switch( type ){\r\n      case 'click':\r\n        this.triggers.enableClickTrigger(target, function(){\r\n          // self.initSurvey();\r\n          // Scrollbar.initAll();\r\n          // self.slider = new Slider();\r\n          // self.setupSurvey();\r\n          SurveyManager.addSurvey(self.surveyToken);\r\n\r\n        });\r\n        break;\r\n      case 'page-count':\r\n        let count : number  = parseInt(target);\r\n        this.triggers.enablePageCountTrigger(count);\r\n\r\n      break;\r\n      case 'site-count':\r\n        let count2 : number  = parseInt(target);\r\n        this.triggers.enableSiteCountTrigger(count2);\r\n      break;\r\n      case 'page-time':\r\n        this.triggers.enablePageTimeTrigger(parseInt(target));\r\n      break;\r\n      case 'site-time':\r\n        this.triggers.enableSiteTimeTrigger(parseInt(target));\r\n      break;\r\n      case 'url-match':\r\n        this.triggers.enablePopUpByURLPatternTrigger(target);\r\n      break;\r\n      case 'url-not-match':\r\n        this.triggers.enablePopUpByNotURLPatternTrigger(target);\r\n      break;\r\n      case 'utm-match':\r\n        this.triggers.enablePopUpByUTMPatternTrigger(target);\r\n        break;\r\n      case 'scroll-pixels':\r\n        this.triggers.enableScrollPixelsTrigger(parseInt(target));\r\n        break;\r\n      case 'launch':\r\n        SurveyManager.addSurvey(self.surveyToken);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nexport { Survey };\n\n\n// WEBPACK FOOTER //\n// ./src/Survey.ts","\n// import 'whatwg-fetch';\nimport { Config } from \"./Config\";\nimport { DisplayConfig } from \"./interfaces/DisplayConfig\";\nimport { RequestHelper } from './helpers/Request';\nimport { templates } from \"./helpers/templates\";\nimport { DomUtilities } from \"./helpers/dom/DomUtilities\";\nimport { DomSurvey } from \"./helpers/dom/DomSurvey\";\nimport { ConditionalTextFilter } from \"./helpers/filters/ConditionalTextFilter\";\nimport { Constants } from \"./Constants\";\nimport { LanguageTextFilter } from \"./helpers/filters/LanguageTextFilter\";\nimport { Select } from './helpers/dom/Select';\nimport { Cookie } from './helpers/Cookie';\nimport { ConditionalFlowFilter } from './helpers/filters/ConditionalFlowFilter';\n\n\nclass SurveyHandler {\n  surveyToken: string;\n  surveyData: any;\n  questions: any;\n  prefillQuestions: any;\n  questionsToDisplay: any;\n  randomNumber: Number;\n  welcomeQuestion: any;\n  welcomeQuestionButtonText: any;\n  prefillResponses: any;\n  prefillDirect : any;\n  prefillWithTags: any;\n  prefillWithNote : any;\n  questionResponses: any;\n  answers: any = {};\n  surveyAnswers: any = {};\n  util: DomUtilities;\n  dom: DomSurvey;\n  displayThankYouCb: any;\n  destroySurveyCb: any;\n  acceptAnswersCb: any;\n  surveyDisplay: DisplayConfig;\n  currentQuestion: any;\n  conditionalQuestions: any;\n  ccsdk: any;\n  welcomeInterval: any;\n  welcomeQuestionDisplayTime: any;\n  domListeners: any;\n  languageSelect: any;\n  // isPartialAvailable : Boolean;\n\n  constructor(ccsdk) {\n    this.surveyToken = ccsdk.surveyToken;\n    this.surveyData = {};\n    this.surveyDisplay = {\n      'position': '',\n      'surveyPosition': '',\n      'welcomePopupAnimation': '',\n      'surveyPopupAnimation': '',\n    };\n    this.ccsdk = ccsdk;\n    this.domListeners = [];\n    this.questions = [];\n    this.questionsToDisplay = [];\n    this.prefillQuestions = [];\n    this.conditionalQuestions = [];\n    this.prefillResponses = [];\n    this.prefillWithTags = {};\n    this.prefillWithNote = {};\n    this.prefillDirect = {};\n    this.answers = {};\n    this.util = new DomUtilities();\n    this.dom = ccsdk.dom;\n    this.displayThankYouCb = (e: any) => {\n      let thankyouHtml: any = templates.thankyou;\n      // thankyouHtml = thankyouHtml.replace(\"{{question}}\", this.surveyData.thankyouText);\n      // thankyouHtml = thankyouHtml.replace(\"{{question}}\", LanguageTextFilter.translateMessages(this, \"thankyouText\"));\n      let thankyouText = this.ccsdk.config.thankyouText ? this.ccsdk.config.thankyouText : (this.surveyData.thankyouText ? this.surveyData.thankyouText : 'Thank You');\n      let startText = this.ccsdk.config.startButtonText ? this.ccsdk.config.startButtonText : 'Start';\n      thankyouHtml = thankyouHtml.replace(\"{{question}}\", thankyouText);\n      thankyouHtml = thankyouHtml.replace(\"{{button}}\", startText);\n      this.ccsdk.dom.replaceInQuestionsContainer(thankyouHtml);\n      //TODO : Fix this Add class not working???\n      let thankyouContainer: any = this.util.get(\"#cc-thankyou-container\");\n      (window as any).ccsdkDebug ? console.log(thankyouContainer) : '';\n      this.util.addClass(thankyouContainer[0], 'show-thankyou-slide');\n      let onSurveyEndEvent = new CustomEvent(Constants.SURVEY_END_EVENT + \"-\" + this.ccsdk.surveyToken);\n      document.dispatchEvent(onSurveyEndEvent);\n      //set done cookie for 30 days.\n      Cookie.set(this.surveyToken + '-finish', 'true', 30, '/');\n      setTimeout(() => {\n        this.destroy();\n      }, 2000);\n    }\n\n    this.destroySurveyCb = (e: any) => {\n      let self: SurveyHandler = this;\n      //send end survey event.\n      let onSurveyEndEvent = new CustomEvent(Constants.SURVEY_END_EVENT + \"-\" + this.ccsdk.surveyToken);\n      document.dispatchEvent(onSurveyEndEvent);\n      self.destroy();\n    }\n\n    this.acceptAnswersCb = (e: any) => {\n      let self: SurveyHandler = this;\n      // (window as any).ccsdkDebug?console.log(self):'';\n      // (window as any).ccsdkDebug?console.log('question answered',e:'')\n      let data: any = <any>e.detail;\n      let response: any = {};\n      response.questionId = data.questionId;\n      switch (data.type) {\n        case 'scale':\n          response.text = null;\n          response.number = Number(data.data.number);\n          self.postPartialAnswer(data.index, response);\n          self.ccsdk.dom.domSelectElements();\n          // self.ccsdk.dom.nextQuestion();\n          break;\n        case 'nps':\n          response.text = null;\n          response.number = Number(data.data.number);\n          self.postPartialAnswer(data.index, response);\n          self.ccsdk.dom.domSelectElements();\n          // self.ccsdk.dom.nextQuestion();\n          break;\n        case 'radio':\n          response.text = null;\n          response.number = Number(data.data.number);\n          self.postPartialAnswer(data.index, response);\n          self.ccsdk.dom.domSelectElements();\n          // self.ccsdk.dom.nextQuestion();\n          break;\n        case 'radioImage':\n          response.text = data.data.text;\n          response.number = null;\n          self.postPartialAnswer(data.index, response);\n          self.ccsdk.dom.domSelectElements();\n          // self.ccsdk.dom.nextQuestion();\n          break;\n        case 'smile':\n          response.text = null;\n          response.number = Number(data.data.number);\n          self.postPartialAnswer(data.index, response);\n          self.ccsdk.dom.domSelectElements();\n          // self.ccsdk.dom.nextQuestion();\n          break;\n        case 'star':\n          response.text = null;\n          response.number = Number(data.data.number);\n          self.postPartialAnswer(data.index, response);\n          self.ccsdk.dom.domSelectElements();\n          // self.ccsdk.dom.nextQuestion();\n          break;\n        case 'multiline':\n          response.text = data.data.text;\n          response.number = null;\n          // (window as any).ccsdkDebug?console.log(data):'';\n          self.postPartialAnswer(data.index, response);\n          self.ccsdk.dom.domSelectElements();\n          self.ccsdk.dom.setQIndex(data.index);\n          // self.ccsdk.dom.nextQuestion();\n          break;\n        case 'singleline':\n          response.text = data.data.text;\n          response.number = null;\n          // (window as any).ccsdkDebug?console.log(data):'';\n          self.postPartialAnswer(data.index, response);\n          self.ccsdk.dom.domSelectElements();\n          self.ccsdk.dom.setQIndex(data.index);\n          // self.ccsdk.dom.nextQuestion();\n          break;\n        case 'number':\n          response.text = null;\n          response.number = Number(data.data.number);\n          // (window as any).ccsdkDebug?console.log(data):'';\n          self.postPartialAnswer(data.index, response);\n          self.ccsdk.dom.domSelectElements();\n          self.ccsdk.dom.setQIndex(data.index);\n          // self.ccsdk.dom.nextQuestion();\n          break;\n        case 'checkbox':\n          response.text = data.data.text;\n          response.number = null;\n          // (window as any).ccsdkDebug?console.log(data):'';\n          self.postPartialAnswer(data.index, response);\n          self.ccsdk.dom.domSelectElements();\n          self.ccsdk.dom.setQIndex(data.index);\n          // self.ccsdk.dom.nextQuestion();\n          break;\n        case 'select':\n          response.text = data.data.text;\n          response.number = null;\n          // (window as any).ccsdkDebug?console.log(data):'';\n          self.postPartialAnswer(data.index, response);\n          self.ccsdk.dom.domSelectElements();\n          self.ccsdk.dom.setQIndex(data.index);\n          // self.ccsdk.dom.nextQuestion();\n          break;\n        case 'slider':\n          response.text = data.data.text;\n          response.number = Number(data.data.number);\n          // (window as any).ccsdkDebug?console.log(data):'';\n          self.postPartialAnswer(data.index, response);\n          self.ccsdk.dom.domSelectElements();\n          self.ccsdk.dom.setQIndex(data.index);\n          // self.ccsdk.dom.nextQuestion();\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  fetchQuestions() {\n    this.randomNumber = parseInt((String)(Math.random() * 1000));\n    let surveyUrl = Config.SURVEY_BY_TOKEN.replace(\"{token}\", \"\" + this.surveyToken);\n    surveyUrl = surveyUrl.replace(\"{tabletId}\", \"\" + this.randomNumber);\n    surveyUrl = Config.API_URL + surveyUrl;\n    let data = RequestHelper.get(surveyUrl);\n    // (window as any).ccsdkDebug?console.log(data):'';\n    return data;\n    // this.surveyData = data.then(function();\n    // (window as any).ccsdkDebug?console.log(this.surveyData):'';\n  }\n\n  removeAnswer(questionId) {\n    delete this.answers[questionId];\n    delete this.surveyAnswers[questionId];\n  }\n\n  attachSurvey(surveyData: any) {\n    this.surveyData = surveyData;\n    this.setupSurveyContainer();\n    //clean survey\n    this.cleanSurvey();\n    this.displayQuestions();\n    this.displayThankYou();\n    this.destroySurvey();\n  }\n\n  cleanSurvey() {\n    this.questionsToDisplay = [];\n    this.answers = {};\n    this.surveyAnswers = {};\n    this.conditionalQuestions = [];\n  }\n\n  setupSurveyContainer() {\n    let surveyHtml: any = templates.question_survey;\n    surveyHtml = surveyHtml.replace(\"{{surveyToken}}\", this.surveyToken);\n    surveyHtml = surveyHtml.replace(\"{{animation}}\", this.surveyDisplay.surveyPopupAnimation);\n    surveyHtml = surveyHtml.replace(/{{location}}/g, this.surveyDisplay.surveyPosition);\n    this.ccsdk.dom.appendInBody(surveyHtml);\n  }\n\n  displayQuestionSelector() {\n\n  }\n\n  displayWelcomeQuestion() {\n    //call this with true when welcome container is clicked.\n    // this.ccsdk.addThrottlingEntries(false);\n    let self = this;\n    let welcomeHtml: any = templates.question_start;\n    welcomeHtml = welcomeHtml.replace(\"{{surveyToken}}\", this.surveyToken);\n    // welcomeHtml = welcomeHtml.replace(\"{{question}}\", this.surveyData.welcomeText);\n    let welcomeText = this.ccsdk.config.welcomeText ? this.ccsdk.config.welcomeText : 'Welcome';\n    welcomeHtml = welcomeHtml.replace(\"{{question}}\", welcomeText);\n    // welcomeHtml = welcomeHtml.replace(\"{{question}}\", LanguageTextFilter.translateMessages(this, \"welcomeText\"));\n    let startText = this.ccsdk.config.startButtonText ? this.ccsdk.config.startButtonText : 'Start';\n    welcomeHtml = welcomeHtml.replace(\"{{button}}\", startText);\n    welcomeHtml = welcomeHtml.replace(\"{{location}}\", this.surveyDisplay.position);\n    welcomeHtml = welcomeHtml.replace(\"{{animation}}\", this.surveyDisplay.welcomePopupAnimation);\n    // (window as any).ccsdkDebug?console.log(\"Appending in body\"):'';\n    this.ccsdk.dom.appendInBody(welcomeHtml);\n    this.ccsdk.dom.showWelcomeContainer();\n    if ((typeof this.ccsdk.config.keepAlive != undefined) && (this.ccsdk.config.keepAlive > 0)) {\n      this.welcomeQuestionDisplayTime = new Date();\n      this.welcomeInterval = setInterval(() => { self.checkWelcomeQuestionDisplay(self.ccsdk.config.keepAlive) }\n        , 1000);\n    }\n\n    this.acceptAnswers();\n    // self.survey.displayLanguageSelector();\n\n  }\n\n  checkWelcomeQuestionDisplay(keepAlive) {\n    let self = this;\n    let now = new Date();\n    if (keepAlive) {\n      console.log((now.getTime() - this.welcomeQuestionDisplayTime.getTime()) / 1000);\n      if (keepAlive <= (now.getTime() - this.welcomeQuestionDisplayTime.getTime()) / 1000) {\n        self.killWelcomeQuestion();\n      }\n    }\n  }\n\n  killWelcomeQuestion() {\n    this.destroy();\n    clearInterval(this.welcomeInterval);\n  }\n  cancelKillWelcomeQuestion() {\n    clearInterval(this.welcomeInterval);\n  }\n\n  displayLanguageSelector() {\n    let self = this;\n    let options1: string;\n    let qId = 'languageSelector';\n    let cTemplate1 = templates.language_selector;\n    options1 = this.util.generateLanguageSelectOptions([\"default\"].concat(Object.keys(this.surveyData.translated)));\n    cTemplate1 = cTemplate1.replace(/{{questionId}}/g, qId);\n    cTemplate1 = cTemplate1.replace(\"{{options}}\", options1);\n    cTemplate1 = cTemplate1.replace(\"{{requiredLabel}}\", true ? \"*\" : \"\");\n    this.ccsdk.dom.replaceInQuestionsContainer(cTemplate1);\n    let $questionContainer = document.\n      querySelectorAll(\".cc-questions-container\");\n    let $body = document.getElementsByTagName(\"body\")[0];\n\n    this.util.addClass($questionContainer[0].firstChild, 'show-slide');\n    this.languageSelect = new Select(qId);\n    let submitBtn = document.querySelectorAll('.submit-icon');\n    this.util.removeClassAll(submitBtn, 'act-cc-button-next');\n    this.util.addClassAll(submitBtn, 'act-cc-button-lang-next');\n    this.languageSelect.init(qId);\n    let selectRes = '';\n    let ref = this.util.initListener('click', '#' + qId + \" .cc-select-options .cc-select-option\", function () {\n      self.ccsdk.debug ? console.log('languageSelectOption') : '';\n      selectRes = document.querySelectorAll('#' + qId + \" .cc-select-trigger\")[0].innerHTML;\n    });\n    this.domListeners.push(ref);\n    ref.internalHandler = this.util.listener($body, ref.type, ref.id, ref.cb);\n\n\n    let languageSelect = this.util.initListener(\"click\", \".act-cc-button-lang-next\", function () {\n      self.ccsdk.debug ? console.log('languageNext') : '';\n      self.ccsdk.config.language = \"default\";\n      self.ccsdk.config.language = selectRes; //language selection from menu then show first question\n      //set config rtl or ltr\n      let isRTL = /[\\u0600-\\u06FF]/.test(selectRes);\n      self.ccsdk.config.textDirection = isRTL?'rtl':'ltr';\n      self.ccsdk.setHtmlTextDirection();\n      self.util.removeClassAll(submitBtn, 'act-cc-button-lang-next');\n      self.util.addClassAll(submitBtn, 'act-cc-button-next');\n      self.ccsdk.dom.loadFirstQuestion();        // this.loadFirstQuestion();\n      self.postPrefillPartialAnswer();\n      \n\n    });\n    this.domListeners.push(languageSelect);\n\n    languageSelect.internalHandler = this.util.listener($body, languageSelect.type, languageSelect.id, languageSelect.cb);\n\n\n\n    // this.util.addClass(thankyouContainer[0], 'show-thankyou-slide');\n\n    // this.ccsdk.dom.appendInBody(cTemplate1);\n    // this.ccsdk.dom.showLanguageSelector();\n    (window as any).ccsdkDebug ? console.log(cTemplate1) : '';\n  }\n\n  displayThankYou() {\n    let self: SurveyHandler = this;\n    document.addEventListener('ccdone', this.displayThankYouCb);\n  }\n\n\n  displayQuestions() {\n    //check question is supported, based on question types.\n    //filter pre fill questions.\n    this.questions = this.surveyData.questions;\n    // this.questionsToDisplay = (this.surveyData.questions as any[]).filter(this.filterQuestions);\n    this.filterQuestions();\n    //sort questions and display them?\n    this.questionsToDisplay = this.questionsToDisplay.sort(this.questionCompare);\n    let ccSurvey: any;\n    ccSurvey = document.getElementsByClassName(\"cc-questions-container\");\n    // ccSurvey = ccSurvey[0];\n    let surveyObject = ccSurvey[0];\n    // (window as any).ccsdkDebug?console.log(this.questionsToDisplay):'';\n    //chec\n    //for now just do 1st question.\n    for (let question of this.questionsToDisplay) {\n      if (this.checkConditionals(question)) {\n        let compiledTemplate = this.compileTemplate(question);\n        question.compiledTemplate = compiledTemplate;\n        // surveyObject.innerHTML += compiledTemplate;\n        //register handlers for onclick?\n      } else {\n        if (this.isPrefillQuestion(question)) {\n          this.prefillQuestions.push(question);\n        }\n      }\n      //else don't display it.\n    }\n    // (window as any).ccsdkDebug?console.log(surveyObject.innerHTML):'';\n    // this.postPartialAnswer(this.questionsToDisplay[0], \"test\");\n\n  }\n\n  getSurveyQuestions(): any {\n    return this.questionsToDisplay;\n  }\n\n  getAnswerForQuestionId(questionId: string) {\n    let answer = this.surveyAnswers[questionId];\n    if(typeof answer  === 'undefined') {\n      for(let response of this.prefillResponses) {\n        if(response.questionId == questionId) {\n          return response;\n        }\n      }\n    }\n    return this.surveyAnswers[questionId];\n  }\n\n  acceptAnswers() {\n    let self: SurveyHandler = this;\n    // (window as any).ccsdkDebug?console.log('add question answered listener':'')\n    document.addEventListener('q-answered', this.acceptAnswersCb);\n  }\n\n  fillPrefillQuestionObject(id: any, response: any) {\n    let question: any = this.getQuestionById(id);\n    let responseStored = this.getPrefillResponseById(id);\n    if (responseStored != null) {\n      this.updatePrefillResponseById(id, response);\n    } else {\n      this.prefillResponses.push(response)\n    }\n  }\n\n  fillPrefill(tag: any, value: object) {\n    this.prefillWithTags[tag.toLowerCase()] = value;\n    (window as any).ccsdkDebug ? console.log('prefillByTag', this.prefillWithTags) : '';\n  }\n\n  fillPrefillByNote(note:any, value: object){\n    this.prefillWithNote[note.toLowerCase()] = value;\n    (window as any).ccsdkDebug ? console.log('prefillByNote', this.prefillWithNote) : '';\n    \n  }\n\n  fillPrefillDirect(questionId : string, value : object){\n    this.prefillDirect[questionId] = value;\n    (window as any).ccsdkDebug ? console.log('prefillDirect', this.prefillDirect) : '';\n    \n  }\n\n  fillPrefillQuestion(id: any, value: any, valueType: string) {\n    let question: any = this.getQuestionById(id);\n    console.log(this.questions);\n    let response: any;\n    let responseStored = this.getPrefillResponseById(id);\n    if (responseStored != null) {\n      response = responseStored;\n    } else {\n      response = {\n        questionId: question.id,\n        questionText: question.text,\n        textInput: null,\n        numberInput: null\n      };\n    }\n    valueType = this.getAnswerTypeFromDisplayType(question.displayType);\n\n    if (valueType.toLowerCase() == \"number\") {\n      response.numberInput = value;\n    }\n    if (valueType.toLowerCase() == \"text\") {\n      response.textInput = value;\n    }\n    if (responseStored != null) {\n      this.updatePrefillResponseById(id, response);\n    } else {\n      this.prefillResponses.push(response)\n    }\n\n  }\n\n  postPrefillPartialAnswer() {\n    let surveyPartialUrl = Config.SURVEY_PARTIAL_RESPONSE.replace(\"{id}\", this.surveyData.partialResponseId);\n    surveyPartialUrl = surveyPartialUrl.replace(\"{complete}\", \"false\");\n    surveyPartialUrl = surveyPartialUrl.replace(\"{tabletId}\", \"\" + this.randomNumber);\n    surveyPartialUrl = Config.API_URL + surveyPartialUrl;\n    (window as any).ccsdkDebug ? console.log(\"Posting Prefill Responses to Server\") : '';\n    (window as any).ccsdkDebug ? console.log(this.prefillResponses) : '';\n    if(typeof this.prefillResponses !== 'undefined' && this.prefillResponses.length > 0) {\n      return RequestHelper.post(surveyPartialUrl, this.prefillResponses);\n    } else {\n      console.log('No Prefill data');\n      return;\n    }\n  }\n\n  updatePrefillResponseById(id: any, resp: any) {\n    for (let response of this.prefillResponses) {\n      if (response.questionId == id) {\n        response = resp;\n      }\n    }\n  }\n\n  getPrefillResponseById(id: any) {\n    for (let response of this.prefillResponses) {\n      if (response.questionId == id) {\n        return response;\n      }\n    }\n    return null;\n  }\n\n  getQuestionById(id: any) {\n    for (let question of this.questions) {\n      if (question.id == id) {\n        return question;\n      }\n    }\n  }\n\n  postPartialAnswer(index: any, response: any) {\n    // let data = new FormData();\n    //in case of file.\n    // let input = document.querySelector('input[type=\"file\"]') ;\n    // data.append('file', input.files[0]);\n    let question: any = this.questionsToDisplay[index];\n    if (typeof question === 'undefined') {\n      //now?\n      // return (window as any).ccsdkDebug?console.log(\"No Partial Remaining\"):'';\n    }\n    let data: any = {\n      comparator: 0,\n      questionId: question.id,\n      questionText: question.text,\n      textInput: response.text,\n      numberInput: response.number\n    };\n    // if(this.isPartialAvailable == false) {\n    //   this.answers.push(data);\n    //   return;\n    // }\n    // (window as any).ccsdkDebug?console.log(\"Submitting for : \" + index):'';\n    let surveyPartialUrl = Config.SURVEY_PARTIAL_RESPONSE.replace(\"{id}\", this.surveyData.partialResponseId);\n    //if this is the last of displayed question\n    (window as any).ccsdkDebug ? console.log(\"partial response\", question.id == this.questionsToDisplay[this.questionsToDisplay.length - 1].id) : '';\n    if (question.id == this.questionsToDisplay[this.questionsToDisplay.length - 1].id) {\n      surveyPartialUrl = surveyPartialUrl.replace(\"{complete}\", \"true\");\n    } else {\n      surveyPartialUrl = surveyPartialUrl.replace(\"{complete}\", \"false\");\n    }\n    surveyPartialUrl = surveyPartialUrl.replace(\"{tabletId}\", \"\" + this.randomNumber);\n    surveyPartialUrl = Config.API_URL + surveyPartialUrl;\n    //add partial answer to main answer\n    this.surveyAnswers[question.id] = data;\n\n    data = [data];\n    // let result = RequestHelper.post(surveyPartialUrl, \"[\" + JSON.stringify(data) + \"]\");\n    let onSurveyAnswerEvent = new CustomEvent(Constants.SURVEY_ANSWER_EVENT + \"-\" + this.surveyToken);\n    document.dispatchEvent(onSurveyAnswerEvent);\n    if (question.id == this.questionsToDisplay[this.questionsToDisplay.length - 1].id) {\n      //last question\n      let postSurveyFinalUrl = Config.POST_SURVEY_FINAL.replace(\"{tokenId}\", this.ccsdk.surveyToken);\n      postSurveyFinalUrl = Config.API_URL + postSurveyFinalUrl;\n      RequestHelper.post(surveyPartialUrl, data);\n      let answersAll = [];\n      for (let answer in this.surveyAnswers) {\n        answersAll.push(this.surveyAnswers[answer]);\n      }\n      let finalData = {\n        id: this.ccsdk.surveyToken,\n        user: this.ccsdk.config.username,\n        locationId: null,\n        responses: answersAll,\n        nps: 0,\n        surveyClient: Constants.SURVEY_CLIENT,\n        responseDuration: 0\n      };\n      return RequestHelper.post(postSurveyFinalUrl, finalData);\n    } else {\n      return RequestHelper.post(surveyPartialUrl, data);\n    }\n\n  }\n\n  /**\n   *\n   * check if conditions are satsified which are required to display question?\n   *\n   * @param {any} question\n   * @memberof Survey\n   */\n  checkConditionals(question: any) {\n    return true;\n  }\n\n  compileTemplate(question: any) {\n    let self: SurveyHandler = this;\n    //get question type\n    let questionTemplate;\n    // (window as any).ccsdkDebug?console.log(question):'';\n    if(question != 'undefined'){\n      switch (question.displayType) {\n        case \"Slider\":\n          let opt: any = question.multiSelect[0].split(\"-\");\n          let optMin: any = opt[0].split(\";\");\n          let optMax: any = opt[1].split(\";\");\n          //get text question template and compile it.\n          questionTemplate = templates.question_slider;\n          questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter.filterText(this, question));\n          questionTemplate = questionTemplate.replace(/{{min}}/g, optMin[0]);\n          if (optMin[1]) {\n            questionTemplate = questionTemplate.replace(/{{minLabel}}/g, optMin[1] + \"-\");\n          } else {\n            questionTemplate = questionTemplate.replace(/{{minLabel}}/g, \"\");\n          }\n          questionTemplate = questionTemplate.replace(/{{max}}/g, optMax[0]);\n          if (optMax[1]) {\n            questionTemplate = questionTemplate.replace(/{{maxLabel}}/g, optMax[1] + \"-\");\n          } else {\n            questionTemplate = questionTemplate.replace(/{{maxLabel}}/g, \"\");\n          }\n          questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\n          questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\n          questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\n          break;\n        case \"Scale\":\n          //get text question template and compile it.\n          (window as any).ccsdkDebug ? console.log(question.questionTags) : '';\n          if (question.questionTags.includes(\"NPS\")) {\n            questionTemplate = templates.question_nps;\n            questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter.filterText(this, question));\n            questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\n            questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\n            questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\n          } else if (question.questionTags.includes(\"CSAT\")) {\n            if (question.questionTags.includes(\"csat_satisfaction_5\")) {\n              questionTemplate = templates.question_csat_satisfaction_5;\n            } else if (question.questionTags.includes(\"csat_agreement_5\")) {\n              questionTemplate = templates.question_csat_agreement_5;\n            }\n            questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter.filterText(this, question));\n            questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\n            questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\n            questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\n          } else {\n            let tileColor = '';\n            let style = '';\n            if (question.presentationMode != null && question.presentationMode.includes(\"Color\")) {\n              tileColor = question.presentationMode.split(':')[1];\n              let tileColorDark = this.util.shadeBlendConvert(-0.3, tileColor, undefined);\n              style = '\\\n                <style>\\\n                #id'+ question.id + ' .option-number-item.option-scale{\\\n                  background-color : '+ tileColor + ';\\\n                }\\\n                #id'+ question.id + ' .option-number-item.option-scale:hover,\\\n                #id'+ question.id + ' .option-number-item.option-scale.selected{\\\n                  background-color : '+ tileColorDark + ';\\\n                }\\\n                </style>\\\n              ';\n            }\n\n            questionTemplate = templates.question_scale;\n            questionTemplate = questionTemplate.replace(/{{style}}/g, style);\n            questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter.filterText(this, question));\n            questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\n            questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\n            questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\n            //construct NPS scale here....\n            let startRange = 0.0;\n            let endRange = 10.0;\n            let options = \"\";\n            let startRangeLabel = \"\";\n            // let startRangeLabel = \"\";\n            // let endRangeLabel = \"Very likely\";\n            let endRangeLabel = \"\";\n            let displayLegend = LanguageTextFilter.translateDisplayLegend(this, question);\n            if (displayLegend) {\n              if (displayLegend.length > 0) {\n                startRangeLabel = displayLegend[0] ? displayLegend[0] : null;\n                endRangeLabel = displayLegend[1] ? displayLegend[1] : null;\n              }\n            }\n            if (question.multiSelect.length > 0) {\n              startRange = parseFloat(question.multiSelect[0].split(\"-\")[0]);\n              if (startRangeLabel == null) {\n                startRangeLabel = question.multiSelect[0].split(\"-\")[0].split(\";\")[1];\n              }\n              endRange = parseFloat(question.multiSelect[0].split(\"-\")[1]);\n              if (endRangeLabel == null) {\n                endRangeLabel = question.multiSelect[0].split(\"-\")[1].split(\";\")[1];\n              }\n            }\n            startRangeLabel = startRangeLabel == null ? \"\" : startRangeLabel;\n            endRangeLabel = endRangeLabel == null ? \"\" : endRangeLabel;\n            let mobileImageUrl = '';\n            let imageVisibility010 = 'hide';\n            let imageVisibility110 = 'hide';\n            let scaleVisibility = 'show-inline';\n            let scaleImageContainer = '';\n            if(startRange == 0 && endRange == 10){\n              mobileImageUrl = \"https://cx.getcloudcherry.com/microsurvey-assets/scale-0-10-neutral.svg\";\n              imageVisibility010 = 'show';\n              imageVisibility110 = 'hide';\n              scaleVisibility = 'hide';\n              scaleImageContainer = 'scale-image-container';\n            }else if(startRange == 1 && endRange == 10){\n              mobileImageUrl = \"https://cx.getcloudcherry.com/microsurvey-assets/scale-1-10-neutral.svg\";\n              imageVisibility010 = 'hide';\n              imageVisibility110 = 'show';\n              scaleVisibility = 'hide';\n              scaleImageContainer = 'scale-image-container';\n            }\n            console.log('scale', startRange, endRange);\n            let divider: any = 1;\n            if (endRange < 11) {\n            } else {\n              divider = (endRange - startRange) / 10.0;\n            }\n            let initial = 0.0;\n            let optionStyle = '';\n            console.log((window as any).isMobile);\n            if((window as any).isMobile){\n              if(endRange > 6 && endRange < 11){\n                 optionStyle = 'width:' +((100/(endRange - startRange + 1)) -.5)+ '%';\n              }\n            }else{\n              imageVisibility010 = 'hide';\n              imageVisibility110 = 'hide';\n              scaleVisibility = 'show-inline';\n              scaleImageContainer = '';\n\n            }\n            for (let initial = startRange; initial <= endRange; initial += divider) {\n              options += '<span data-rating=\"' + initial + '\" class=\"option-number-item option-scale '+scaleVisibility+'\" style=\"'+optionStyle+'\">' + initial + '</span>';\n            }\n            if ((endRange-startRange+1) < 5) {\n              var oleft = document.querySelectorAll(\".option-left-rating-text\")[0];\n              var oright = document.querySelectorAll(\".option-right-rating-text\")[0];\n              var optionLeftExtraClass = 'option-left-rating-text-small-container';\n              var optionRightExtraClass = 'option-right-rating-text-small-container';\n\n            }\n            questionTemplate = questionTemplate.replace(\"{{optionsRange}}\", options);\n            questionTemplate = questionTemplate.replace(/{{optionLeftExtraClass}}/g, optionLeftExtraClass);\n            questionTemplate = questionTemplate.replace(/{{optionRightExtraClass}}/g, optionRightExtraClass);\n            questionTemplate = questionTemplate.replace(\"{{leftLabel}}\", startRangeLabel);\n            questionTemplate = questionTemplate.replace(\"{{rightLabel}}\", endRangeLabel);\n            questionTemplate = questionTemplate.replace(/{{mobileImageUrl}}/g, mobileImageUrl);\n            questionTemplate = questionTemplate.replace(\"{{imageVisibility010}}\", imageVisibility010);\n            questionTemplate = questionTemplate.replace(\"{{imageVisibility110}}\", imageVisibility110);\n            questionTemplate = questionTemplate.replace(\"{{scaleImageContainer}}\", scaleImageContainer);\n          }\n\n          break;\n        case \"Text\":\n          //get text question template and compile it.\n          questionTemplate = templates.question_text;\n          questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter.filterText(this, question));\n          questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\n          questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\n          questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\n          questionTemplate = questionTemplate.replace(\"{{validationHint}}\", question.validationHint ? question.validationHint : \"\");\n\n          break;\n        case \"Number\":\n          //get text question template and compile it.\n          questionTemplate = templates.question_number;\n          questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter.filterText(this, question));\n          questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\n          questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\n          questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\n          questionTemplate = questionTemplate.replace(\"{{validationHint}}\", question.validationHint ? question.validationHint : \"\");\n\n          break;\n        case \"MultilineText\":\n          //get text question template and compile it.\n          questionTemplate = templates.question_multi_line_text;\n          questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter.filterText(this, question));\n          questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\n          questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\n          questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\n          questionTemplate = questionTemplate.replace(\"{{validationHint}}\", question.validationHint ? question.validationHint : \"\");\n\n          break;\n        case \"MultiSelect\":\n          let acTemplate: string;\n          let multiSelect1;\n          //get text question template and compile it.\n          multiSelect1 = Array.prototype.slice.call(LanguageTextFilter.translateMultiSelect(this, question));\n          if (question.presentationMode == 'Invert') {\n            // console.log('selection option before reverse', multiSelect1);\n            multiSelect1.reverse();\n            // console.log('selection option after reverse', multiSelect1);\n            // console.log('selection api option', question.multiSelect);\n          }\n          //get text question template and compile it.\n          if (((question.displayStyle == 'radiobutton/checkbox') || (question.displayStyle == 'icon')) && (multiSelect1.length < 6)) {\n            // (window as any).ccsdkDebug?console.log(question.displayStyle):'';\n            let checkOptionContainsImage: boolean = self.util.checkOptionContainsImage(multiSelect1);\n            // (window as any).ccsdkDebug?console.log('select radio image',checkOptionContainsImage):'';\n            if (checkOptionContainsImage\n              && (\n                ((multiSelect1.length > 0) && multiSelect1[0].includes(\"Male\"))\n                || ((multiSelect1.length > 0) && multiSelect1[0].includes(\"Yes\"))\n                || ((multiSelect1.length > 1) && multiSelect1[1].includes(\"Yes\")))\n              \n            ) {\n              // (window as any).ccsdkDebug?console.log('select type 2'):'';\n              acTemplate = templates.question_checkbox;\n              let options2 = self.util.generateCheckboxImageOptions(multiSelect1, question.id);\n              // (window as any).ccsdkDebug?console.log(options2):'';\n              questionTemplate = acTemplate;\n              questionTemplate = questionTemplate.replace(/{{options}}/g, options2);\n              acTemplate = questionTemplate;\n            }else if(checkOptionContainsImage){\n              // (window as any).ccsdkDebug?console.log('select type 2'):'';\n              acTemplate = templates.question_checkbox;\n              let options2 = self.util.generateCheckboxIgnoreImageOptions(multiSelect1, question.id);\n              // (window as any).ccsdkDebug?console.log(options2):'';\n              questionTemplate = acTemplate;\n              questionTemplate = questionTemplate.replace(/{{options}}/g, options2);\n              acTemplate = questionTemplate;\n            } else {\n              let options3: string = self.util.generateCheckboxOptions(multiSelect1, question.id);\n              // (window as any).ccsdkDebug?console.log(options2):'';\n              acTemplate = templates.question_checkbox;\n              questionTemplate = acTemplate.replace(/{{options}}/g, options3);\n              acTemplate = questionTemplate;\n            }\n          } else {\n            // (window as any).ccsdkDebug?console.log('select type 3'):'';\n            acTemplate = templates.question_multi_select;\n\n            // acTemplate = templates.question_select;\n            let options3 = self.util.generateSelectOptions(multiSelect1);\n\n            if (!self.ccsdk.config.language.includes('Default')) {\n              if (\n                typeof question.translated !== 'undefined'\n                && question.translated != null\n                && typeof question.translated[self.ccsdk.config.language] !== 'undefined'\n                && question.translated[self.ccsdk.config.language].multiSelect !== 'undefined'\n                && question.translated[self.ccsdk.config.language].multiSelect.length > 0\n              ) {\n                multiSelect1 = Array.prototype.slice.call(question.translated[self.ccsdk.config.language].multiSelect);\n                if (question.presentationMode == 'Invert') {\n                  multiSelect1.reverse();\n                }\n                options3 = self.util.generateSelectOptions(multiSelect1);\n              }\n            }\n            // questionTemplate = acTemplate;\n            self.ccsdk.debug ? console.log(options3) : '';\n            questionTemplate = acTemplate.replace(/{{options}}/g, options3);\n            acTemplate = questionTemplate;\n\n          }\n          questionTemplate = acTemplate;\n          questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter.filterText(this, question));\n          questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\n          questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\n          questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\n\n          break;\n        case \"Select\":\n          let acTemplate1: string;\n          let acTemplate2: string;\n          let options1: string;\n          let options2: string;\n          let multiSelect;\n          //get text question template and compile it.\n          multiSelect = Array.prototype.slice.call(LanguageTextFilter.translateMultiSelect(this, question));\n          if (question.presentationMode == 'Invert') {\n            // console.log('selection option before reverse', multiSelect);\n            multiSelect.reverse();\n            // console.log('selection option after reverse', multiSelect);\n            // console.log('selection api option', question.multiSelect);\n          }\n          if ((question.displayStyle == 'radiobutton/checkbox') && (multiSelect.length < 6)) {\n            // if(question.displayStyle == 'radiobutton/checkbox'){\n            // (window as any).ccsdkDebug?console.log('select type 1'):'';\n            // (window as any).ccsdkDebug?console.log(question.displayStyle):'';\n            // acTemplate1 = templates.question_radio;\n            // questionTemplate = acTemplate1;\n            let checkOptionContainsImage: boolean = self.util.checkOptionContainsImage(multiSelect);\n            // (window as any).ccsdkDebug?console.log('select radio image',checkOptionContainsImage):'';\n            if (checkOptionContainsImage \n              && (\n                  ((multiSelect.length > 0) && multiSelect[0].includes(\"Male\") )\n                || ((multiSelect.length > 0) &&multiSelect[0].includes(\"Yes\") )\n                || ((multiSelect.length > 1) &&multiSelect[1].includes(\"Yes\")))\n            ) {\n              // (window as any).ccsdkDebug?console.log('select type 2'):'';\n              acTemplate2 = templates.question_radio_image;\n              options2 = self.util.generateRadioImageOptions(multiSelect, question.id);\n              // (window as any).ccsdkDebug?console.log(options2):'';\n              questionTemplate = acTemplate2;\n              questionTemplate = questionTemplate.replace(/{{options}}/g, options2);\n            }else if(checkOptionContainsImage){\n              // (window as any).ccsdkDebug?console.log('select type 2'):'';\n              acTemplate2 = templates.question_radio_image;\n              options2 = self.util.generateRadioIgnoreImageOptions(multiSelect, question.id);\n              // (window as any).ccsdkDebug?console.log(options2):'';\n              questionTemplate = acTemplate2;\n              questionTemplate = questionTemplate.replace(/{{options}}/g, options2);\n            } else {\n              acTemplate1 = templates.question_radio;\n              questionTemplate = acTemplate1;\n              options1 = self.util.generateRadioOptions(multiSelect, question.id);\n              questionTemplate = questionTemplate.replace(\"{{options}}\", options1);\n            }\n          } else if ((question.displayStyle == 'icon') && (multiSelect.length < 6)) {\n            acTemplate1 = templates.question_radio;\n            questionTemplate = acTemplate1;\n            options1 = self.util.generateRadioOptions(multiSelect, question.id);\n            questionTemplate = questionTemplate.replace(\"{{options}}\", options1);\n\n          } else {\n\n            // (window as any).ccsdkDebug?console.log('select type 3'):'';\n            acTemplate1 = templates.question_select;\n            options1 = self.util.generateSelectOptions(multiSelect);\n            if (!self.ccsdk.config.language.includes('Default')) {\n              if (typeof question.translated !== 'undefined'\n                && question.translated != null\n                && typeof question.translated[self.ccsdk.config.language] !== 'undefined'\n                && question.translated[self.ccsdk.config.language].multiSelect !== 'undefined'\n                && question.translated[self.ccsdk.config.language].multiSelect.length > 0\n              ) {\n                multiSelect = Array.prototype.slice.call(question.translated[self.ccsdk.config.language].multiSelect);\n                if (question.presentationMode == 'Invert') {\n                  multiSelect.reverse();\n                }\n                options1 = self.util.generateSelectOptions(multiSelect);\n              }\n            }\n            questionTemplate = acTemplate1;\n            questionTemplate = questionTemplate.replace(\"{{options}}\", options1);\n\n\n          }\n          questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter.filterText(this, question));\n          questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\n          questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\n          questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\n          // (window as any).ccsdkDebug?console.log(questionTemplate):'';\n\n          break;\n        case \"Smile-5\":\n          //get text question template and compile it.\n          if (question.presentationMode == \"Invert\") {\n            questionTemplate = templates.question_smile_5_inverted;\n\n          } else {\n\n            questionTemplate = templates.question_smile_5;\n          }\n          // let startRangeLabel = \"Very unlikely\";\n          // let endRangeLabel = \"Very likely\";\n          let startRangeLabel = \"\";\n          let endRangeLabel = \"\";\n          let displayLegend2 = LanguageTextFilter.translateDisplayLegend(this, question);\n          \n          if (displayLegend2) {\n            if (displayLegend2.length > 0) {\n              startRangeLabel = displayLegend2[0] ? displayLegend2[0] : null;\n              endRangeLabel = displayLegend2[1] ? displayLegend2[1] : null;\n            }\n          }\n          startRangeLabel = startRangeLabel == null ? \"\" : startRangeLabel;\n          endRangeLabel = endRangeLabel == null ? \"\" : endRangeLabel;\n          questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter.filterText(this, question));\n          questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\n          questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\n          questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\n          questionTemplate = questionTemplate.replace(\"{{leftLabel}}\", startRangeLabel);\n          questionTemplate = questionTemplate.replace(\"{{rightLabel}}\", endRangeLabel);\n          break;\n        case \"Star-5\":\n          //get text question template and compile it.\n          let startRangeLabel1 = \"\";\n          let endRangeLabel1 = \"\";\n          let displayLegend3 = LanguageTextFilter.translateDisplayLegend(this, question);\n          \n          if (displayLegend3) {\n            if (displayLegend3.length > 0) {\n              startRangeLabel1 = displayLegend3[0] ? displayLegend3[0] : null;\n              endRangeLabel1 = displayLegend3[1] ? displayLegend3[1] : null;\n            }\n          }\n          startRangeLabel1 = startRangeLabel1 == null ? \"\" : startRangeLabel1;\n          endRangeLabel1 = endRangeLabel1 == null ? \"\" : endRangeLabel1;\n          questionTemplate = templates.question_star_5;\n          questionTemplate = questionTemplate.replace(\"{{question}}\", ConditionalTextFilter.filterText(this, question));\n          questionTemplate = questionTemplate.replace(/{{questionId}}/g, \"id\" + question.id);\n          questionTemplate = questionTemplate.replace(\"{{isRequired}}\", question.isRequired ? \"true\" : \"false\");\n          questionTemplate = questionTemplate.replace(\"{{requiredLabel}}\", question.isRequired ? \"*\" : \"\");\n          questionTemplate = questionTemplate.replace(\"{{leftLabel}}\", startRangeLabel1);\n          questionTemplate = questionTemplate.replace(\"{{rightLabel}}\", endRangeLabel1);\n          break;\n      }\n    }\n    return questionTemplate;\n  }\n\n  questionCompare(a: any, b: any) {\n    return a.sequence - b.sequence;\n  }\n  \n  getAnswerTypeFromDisplayType(displayType: string) {\n    // console.log('question type',displayType);\n    let type: string;\n    switch (displayType) {\n      case \"Slider\":\n        type = \"number\";\n        break;\n      case \"Scale\":\n        type = \"number\";\n        break;\n      case \"Text\":\n        type = \"text\";\n        break;\n      case \"Number\":\n        type = \"number\";\n        break;\n      case \"MultilineText\":\n        type = \"text\";\n        break;\n      case \"MultiSelect\":\n        type = \"text\";\n        break;\n      case \"Select\":\n        type = \"text\";\n        break;\n      case \"Smile-5\":\n        type = \"number\";\n        break;\n      case \"Star-5\":\n        type = \"number\";\n        break;\n      default:\n        type = \"text\";\n        break;\n    }\n\n    return type;\n  }\n\n  /**\n   *\n   * filterQuestions - filters questions so that we don't display the one which satisifes any of the following condition\n   *  isRetired = true\n   *  statffFill = true\n   *  apiFill = true\n   *  preFill = true\n   *\n   * @param {any} question\n   * @returns\n   * @memberof Survey\n   */\n  filterQuestions() {\n    let self = this;\n    for (let question of this.questions) {\n      if (!question.isRetired) {\n        //filter out prefill question only if it is filled?.\n        // if(!this.isQuestionFilled(question)){\n        if (this.isPrefillTags(question)) {\n          self.ccsdk.debug ? console.log(this.prefillResponses) : '';\n          continue;\n        }\n        if (!(this.isPrefillQuestion(question))) {\n\n          // if (this.isPrefillTags(question)) {\n          //   self.ccsdk.debug ? console.log(this.prefillResponses) : '';\n          //   continue;\n          // }\n          if (this.isPrefillNote(question)){\n            self.ccsdk.debug ? console.log(this.prefillResponses) : '';\n            continue;\n          }\n          if (this.isPrefillDirect(question)) {\n            self.ccsdk.debug ? console.log(this.prefillResponses) : '';\n            continue;\n          }\n          if (\n            question.conditionalFilter != null &&\n            (question.conditionalFilter.filterquestions == null\n              || question.conditionalFilter.filterquestions.length == 0)\n          ) {\n            //check supported display types\n            let supportedDisplayTypes = \"Slider, Scale, Text, Number, MultilineText, MultiSelect, Smile - 5, Star - 5\";\n            if(supportedDisplayTypes.indexOf(question.displayType) > -1){\n              this.questionsToDisplay.push(question);\n            }\n          } else {\n            //if conditions full filled, fill it in questionsToDisplay\n            if(ConditionalFlowFilter.filterQuestion(this, question)) {\n               //auto does that\n            } else {\n              this.conditionalQuestions.push(question);\n            }\n          }\n        } else {\n          this.fillPrefillWithTags(question);\n          this.fillPrefillWithNote(question);\n          ConditionalFlowFilter.filterQuestion(this, question);\n        }\n        // }\n      }\n    }\n    //re condition questions.\n    for(let question of this.questions) {\n      ConditionalFlowFilter.filterQuestion(this, question);\n    }\n\n    // console.log(this.conditionalQuestions);\n  }\n\n  isPrefillTags(question: any) {\n    if (typeof question.questionTags !== 'undefined' && question.questionTags.length > 0) {\n      for (let tag of question.questionTags) {        \n        switch (tag.toLowerCase()) {\n          case \"screensize\":\n            //add size to prefill array\n            this.fillPrefillQuestion(question.id, \"Width:\" + window.innerWidth + \"px / Height:\" + window.innerHeight + \"px\", \"text\");\n            return true;\n        }\n      }\n    }\n    return false;\n  }\n  isPrefillNote(question:any){\n    if (typeof question.note !== 'undefined' \n    && question.note != null \n    && question.note.length > 0\n    && this.prefillWithNote[question.note.toLowerCase()]\n  ) {\n      let type = this.getAnswerTypeFromDisplayType(question.displayType);\n      this.fillPrefillQuestion(question.id, this.prefillWithNote[question.note.toLowerCase()] ,type);\n      return true;\n    }\n    return false;\n  }\n\n  isPrefillDirect(question: any) {\n    if (typeof question !== 'undefined'\n      && this.prefillDirect[question.id]\n    ) {\n      let type = this.getAnswerTypeFromDisplayType(question.displayType);\n      this.fillPrefillQuestion(question.id, this.prefillDirect[question.id], type);\n      return true;\n    }\n    return false;\n  }\n\n  fillPrefillWithTags(question: any) {\n    // console.log(this.prefillWithTags);\n    if (typeof question.questionTags !== 'undefined' && question.questionTags.length > 0) {\n      for (let tag of question.questionTags) {\n        if (typeof this.prefillWithTags[tag.toLowerCase()] !== 'undefined') {     \n          let type = this.getAnswerTypeFromDisplayType(question.displayType);\n          this.fillPrefillQuestion(question.id, this.prefillWithTags[tag.toLowerCase()], type);\n        }\n      }\n    }\n  }\n\n  fillPrefillWithNote(question: any){\n    if (typeof question.note !== 'undefined' && question.note!= null && question.note.length > 0) {\n        if (typeof this.prefillWithNote[question.note.toLowerCase()] !== 'undefined') {\n          let type = this.getAnswerTypeFromDisplayType(question.displayType);\n          this.fillPrefillQuestion(question.id, this.prefillWithNote[question.note.toLowerCase()], type);\n        }\n    }\n  }\n\n\n\n  getConditionalSurveyQuestions(): any {\n    return this.conditionalQuestions;\n  }\n\n  isPrefillQuestion(question: any) {\n    if (question.apiFill == true) {\n      return true;\n    }\n    if (question.staffFill == true) {\n      return true;\n    }\n    return false;\n  }\n\n  isQuestionFilled(question: any) {\n    for (let response of this.prefillResponses) {\n      if (response.questionId == question.questionId) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  destroySurvey() {\n    let self: SurveyHandler = this;\n    document.addEventListener('ccclose', this.destroySurveyCb);\n  }\n\n  destroy() {\n    let surveyContainer = this.ccsdk.dom.getSurveyContainer(this.surveyToken);\n    let welcomeContainer = this.ccsdk.dom.getWelcomeContainer(this.surveyToken);\n    if (typeof surveyContainer != 'undefined') {\n      this.util.remove(surveyContainer);\n    }\n    if (typeof welcomeContainer != 'undefined') {\n      this.util.remove(welcomeContainer);\n    }\n    document.removeEventListener('ccclose', this.destroySurveyCb);\n    document.removeEventListener('ccdone', this.displayThankYouCb);\n    document.removeEventListener('q-answered', this.acceptAnswersCb);\n    (window as any).globalSurveyRunning = false;\n    let bodyElement = <HTMLElement>document.\n      getElementsByTagName(\"body\")[0];\n    this.util.removeClass(bodyElement, \"blurr\");\n\n  }\n}\n\nexport { SurveyHandler };\n\n\n\n// WEBPACK FOOTER //\n// ./src/SurveyHandler.ts","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/rtl-css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./main.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../node_modules/rtl-css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./main.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../node_modules/rtl-css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./main.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/css/main.scss\n// module id = 13\n// module chunks = 0","exports = module.exports = require(\"../../node_modules/rtl-css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, typeof document !== 'undefined' && document.getElementsByTagName('html')[0].getAttribute('dir') === 'rtl' ? \"body{padding:0;font-family:open sans,sans-serif}body,ul{margin:0}ul{padding-right:0;list-style-type:none}a,a:focus,a:hover{text-decoration:none;color:inherit}*,:after,:before{box-sizing:border-box}p{color:inherit;margin:0}map area{outline:0;cursor:pointer}map area.selected{outline:0;outline-color:#0a2135;outline-width:0;outline-style:solid}map area:hover{outline:1}.cc-popup-container{background:#fff;box-shadow:0 0 4px 5px rgba(0,0,0,.05);font-family:open sans,sans-serif;position:fixed;text-align:center;max-width:500px;max-height:500px;z-index:1111;padding:10px}.cc-popup-container.bottom{margin-bottom:9px}.cc-popup-container.top{margin-top:9px}#cc-thankyou-container .cc-question-container__text,#cc-thankyou-container .cc-question-container__text p{width:400px;max-width:none;font-size:17px;color:#424242}.cc-message-box{position:relative;z-index:11}.cc-message-box__text{color:#424242;font-size:14px;font-weight:600;margin:0;padding:29px 14px 20px;vertical-align:middle}.cc-message-box__btn{background:#fdaf19;border-radius:100px;display:inline-block;font-size:15px;font-weight:700;height:32px;padding:6px 0;width:124px}.cc-popup-container .cc-popup-container__close{cursor:pointer;margin:4px;position:absolute;left:0;top:0;z-index:111}.cc-popup-container-2{height:144px;position:fixed;width:100%;z-index:1111}.cc-popup-container-2__icons{cursor:pointer;padding:8px;position:absolute;top:0;z-index:111}.top.cc-popup-container-2 .cc-popup-container-2__icons{padding-top:15px}.cc-popup-container-2__icons.cc-right-icon{left:0}.cc-popup-container-2__icons.cc-left-icon{right:0}.cc-popup-container__back{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);display:inline-block;width:21px;height:21px}.cc-question-container{margin-left:147px;padding:20px 20px 25px;position:absolute;text-align:center;width:calc(100% - 147px);z-index:11;top:0;right:0}.cc-question-container__text{color:#424242;display:inline-block;font-size:15px;font-weight:600;max-width:230px;padding:8px 0;text-align:center;vertical-align:middle;width:20%;position:relative}.cc-question-container__required,.cc-question-container__validation{position:absolute;top:-14px;font-size:11px;right:0;left:0;font-weight:400;color:#c1272d;display:none}.cc-question-container__required-label{display:inline-block;position:relative;top:-2px;right:-2px}.cc-question-container__content{display:inline-block;max-width:78%;vertical-align:middle;width:auto}.cc-question-container__list li{display:inline-block;padding-right:29px;vertical-align:middle}.cc-question-container__list li span{display:table-cell;font-size:15px;padding-right:15px;text-align:right;vertical-align:middle;width:125px}.cc-question-container__list li input{vertical-align:middle}.cc-question-container:before{content:\\\"\\\";display:inline-block;margin-left:-4px}.cc-question-container,.cc-question-container:before{height:100%;vertical-align:middle}.cc-questions-container{height:100%}p.cc-thankyou-powered{font-size:13px!important;color:#404040!important;font-style:italic;margin-top:4px}.cc-thankyou-powered .cc-thankyou-logo{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/cc-thankyou-logo.svg\\\");background-size:cover;margin-left:8px;display:inline-block;width:16px;height:16px}.multiline-box{background:#fff;border-radius:2px;border:1px solid #6d6d6d;font-family:Open Sans;font-size:15px;height:70px;margin:0 50px 0 0;min-width:600px;padding:2px 5px;resize:none}.multiline-box:focus{outline:0}.detail-box .cc-question-container__text p{font-size:13px;font-weight:700}.detail-box .cc-question-container__text span{display:inline-block;font-size:15px;font-weight:400}.detail-box .cc-question-container__text{height:56px}.detail-box[data-type=singleline] .cc-question-container__text{margin-left:20px}.detail-box .cc-question-container__content .form-control,.single-line .cc-question-container__content .form-control{background:transparent;border:none;border-bottom:1px solid #6d6d6d;font-family:open sans;font-size:15px;line-height:26px;outline:0;width:300px;margin-right:70px}.d-star-box.detail-box .cc-question-container__text{height:92px}.hl.dropdown{background-image:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/arrow-down.black.svg\\\");background-position:3%;background-repeat:no-repeat;border-bottom:1px solid #6d6d6d;display:inline-block;padding:5px;position:relative;text-align:right;width:300px}.drop-cc-question-container .cc-question-container__text{margin-left:20px}.form-control:focus{border-color:#fcaf18}.detail-box .cc-question-container__content{padding-right:0}.cc-big-list-container .cc-question-container__list{display:table;width:100%}.cc-big-list-container .cc-question-container__list li{display:table-cell;vertical-align:middle}.cc-thankyou-container{width:100%!important}.submit-icon{direction:rtl;position:absolute;left:0;top:0;bottom:0;margin:auto 0;z-index:11;margin-left:75px;font-size:16px;cursor:pointer;background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg width='47' height='47' viewBox='0 0 47 47' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Ctitle%3EGroup 16%3C/title%3E%3Cdefs%3E%3Ccircle id='b' cx='19.313' cy='19.313' r='19.313'/%3E%3Cfilter x='-18.1%25' y='-12.9%25' width='136.2%25' height='136.2%25' filterUnits='objectBoundingBox' id='a'%3E%3CfeOffset dy='2' in='SourceAlpha' result='shadowOffsetOuter1'/%3E%3CfeGaussianBlur stdDeviation='2' in='shadowOffsetOuter1' result='shadowBlurOuter1'/%3E%3CfeColorMatrix values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.116423234 0' in='shadowBlurOuter1'/%3E%3C/filter%3E%3C/defs%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg transform='translate(4 2)'%3E%3Cuse fill='%23000' filter='url(%23a)' xlink:href='%23b'/%3E%3Cuse xlink:href='%23b'/%3E%3C/g%3E%3Cg fill-rule='nonzero' fill='%23404041'%3E%3Cpath d='M23.167 13l-.993.993 7.308 7.309-7.308 7.308.993.993 8.302-8.301z'/%3E%3Cpath d='M16.993 13l-.993.993 7.308 7.309L16 28.61l.993.993 8.302-8.301z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\\\");width:47px;height:47px}@media (min-width:1000px){.cc-big-list-container .cc-question-container__list li span label{overflow:hidden;max-height:100px;display:block}.cc-question-container__content{max-height:100px}}@media (min-width:767px) and (max-width:1024px){.cc-popup-container-2{height:200px}.cc-big-list-container .cc-question-container__list,.cc-question-container__list{text-align:right}.cc-big-list-container .cc-question-container__list li,.cc-question-container__list li{display:inline-block;margin-bottom:15px;vertical-align:middle;width:49%}.cc-question-container__content{display:inline-block;width:45%}.multiline-box{min-width:100%;margin:0}.option-smile-box img,.option-star-box img{margin-left:11px!important}.cc-thankyou-container .cc-question-container__text,.cc-thankyou-container .cc-question-container__text p{width:100%!important;text-align:center;margin:0!important;padding:0;line-height:normal;height:auto}.cc-thankyou-container .cc-question-container__text{max-width:98%}}@media (min-width:1000px){.cc-question-container__text{max-height:110px;overflow:hidden}}@media (min-width:767px) and (max-width:992px){.cc-question-container{width:100%;margin:auto}.cc-question-container__text{width:24%;padding-left:20px;max-height:110px;overflow:hidden}.cc-question-container__content.rating-color{margin-right:0}.submit-icon{margin-left:40px!important}.cc-question-container__content.rating-color{margin-right:0!important}.cc-question-container__content{width:50%!important}}@media (max-width:767px){.cc-survey-container,.cc-survey-content{height:100%}.cc-popup-container-2{bottom:auto;height:100%;top:0}.cc-popup-container-2__icons.cc-right-icon{right:auto;left:0;padding:0}.cc-popup-container-2__icons.cc-left-icon{right:0;left:auto;padding:0}.cc-big-list-container .cc-question-container__list li{display:block}.radio-toggle--more-option li span{width:84%!important;padding-right:25px!important}.radio-toggle--more-option li{padding-left:0!important;display:block!important;padding-top:10px}.detail-box .cc-question-container__content{padding-right:0}.cc-question-container{bottom:75px;height:auto;right:0;padding:40px 20px;position:absolute;text-align:right;top:auto;width:100%}.cc-question-container__text{font-size:18px;margin-bottom:20px;max-width:400px;text-align:right;width:100%}.cc-question-container__content{display:block;max-width:100%;width:100%}.cc-question-container__list label{display:block}.cc-question-container__list li span{width:auto;padding-right:15px}.cc-question-container__list li{padding-right:0;margin-bottom:10px;display:block}.cc-popup-container-2__icons{margin:20px}.cc-popup-container-2__icons.left-icon{right:auto;left:0}.cc-popup-container-2__icons.right-icon{left:auto;right:0}.cc-popup-container__close{width:27px}.cc-question-container__content.rating-color{margin-right:0!important}.cc-question-container[data-type=nps] .cc-question-container__content,.cc-question-container[data-type=scale] .cc-question-container__content{width:100%!important}.multiline-box{height:150px;margin:0;min-width:100%;width:100%}.detail-box .cc-question-container__content .form-control,.hl.dropdown{width:100%}.detail-box .cc-question-container__text p{font-size:18px}.mobile-detail-box .cc-question-container__text{height:auto}.welcome-box .cc-question-container__text p{color:#fff}.cc-questions-container{height:100%;position:relative}}@media (max-width:767px){.detail-box .cc-question-container__content .form-control,.single-line .cc-question-container__content .form-control{margin-right:0}.submit-icon{position:absolute;right:20px;top:auto;bottom:30px;padding-left:0}.cc-popup-container{position:fixed;top:0;right:0;left:0;margin:0;width:100%;height:100%;max-width:100%;max-height:100%;text-align:right;background:transparent}.cc-popup-container .cc-message-box{position:absolute;bottom:20%}.cc-popup-container .cc-message-box .cc-message-box__text{font-size:20px}.cc-popup-container .cc-message-box .submit-icon{position:absolute;bottom:-100%;top:auto;right:0;margin:0 14px}.cc-popup-container .cc-popup-container__close{margin:20px;left:0;top:0}.cc-popup-container__back{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);display:inline-block;width:27px;height:27px;background-size:100%}.cc-question-container__required-label{display:block;right:0;top:2px}.cc-thankyou-container .cc-question-container__text,.cc-thankyou-container .cc-question-container__text p{width:100%!important;text-align:center;margin:0!important;padding:0;line-height:normal;height:auto}.cc-thankyou-container .cc-question-container__text{max-width:98%}}html[dir=rtl] ul{padding-left:0}html[dir=rtl] .cc-popup-container .cc-popup-container__close{left:auto;right:0;top:0}html[dir=rtl] .cc-popup-container .cc-message-box .cc-message-box__text{text-align:left}html[dir=rtl] .cc-popup-container__back{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_rtl_.svg)}html[dir=rtl] .cc-popup-container-2__icons.cc-right-icon{left:auto;right:0}html[dir=rtl] .cc-popup-container-2__icons.cc-left-icon{left:0;right:auto}html[dir=rtl] .cc-question-container{margin-right:147px;margin-left:0;left:0;right:auto}html[dir=rtl] .cc-question-container__required,html[dir=rtl] .cc-question-container__validation{left:0;right:auto}html[dir=rtl] .cc-question-container__required-label{top:-2px;left:-2px;right:auto}html[dir=rtl] .cc-question-container__list li{display:inline-block;padding-left:15px!important;padding-right:15px!important;vertical-align:middle}html[dir=rtl] .cc-question-container[data-type=checkbox] .cc-question-container__list li{padding-left:0!important}html[dir=rtl] .cc-question-container__list li span{padding-left:15px;padding-right:0;text-align:left}html[dir=rtl] .cc-question-container:before{margin-right:-4px;margin-left:0}html[dir=rtl] .multiline-box{margin:0 0 0 50px}html[dir=rtl] .hl.dropdown{background-position:3%;text-align:left}html[dir=rtl] .drop-cc-question-container .cc-question-container__text{margin-right:20px;margin-left:0}html[dir=rtl] .detail-box .cc-question-container__content{padding-left:0;padding-right:0}html[dir=rtl] .cc-nps-image{right:31px}html[dir=rtl] .cc-question-container__content{text-align:left}@media (min-width:767px) and (max-width:1024px){html[dir=rtl] .cc-big-list-container .cc-question-container__list,html[dir=rtl] .cc-question-container__list{text-align:left}html[dir=rtl] .multiline-box{margin:0}}@media (min-width:767px) and (max-width:992px){html[dir=rtl] .cc-question-container__text{padding-right:20px;padding-left:0}html[dir=rtl] .cc-question-container__content.rating-color{margin-right:0;margin-left:0}}@media (max-width:767px){html[dir=rtl] .cc-popup-container-2__icons.cc-right-icon{right:auto;left:0}html[dir=rtl] .cc-popup-container-2__icons.cc-left-icon{right:0;left:auto}html[dir=rtl] .radio-toggle--more-option li span{padding-left:25px!important;padding-right:0!important}html[dir=rtl] .radio-toggle--more-option li{padding-left:0!important;padding-right:0!important}html[dir=rtl] .detail-box .cc-question-container__content{padding-right:0;padding-left:0}html[dir=rtl] .cc-question-container{right:auto;left:0}html[dir=rtl] .multiline-box{margin:0}html[dir=rtl] .cc-question-container__text{text-align:left;width:100%;margin-left:5px;max-width:100%}html[dir=rtl] .cc-question-container__list li span{padding-left:15px;padding-right:0}html[dir=rtl] .cc-question-container__list li{padding-right:0;padding-left:0}html[dir=rtl] .cc-popup-container-2__icons.left-icon{right:0;left:auto}html[dir=rtl] .cc-popup-container-2__icons.right-icon{left:0;right:auto}html[dir=rtl] .cc-question-container__content.rating-color{margin-right:0!important;margin-left:0!important}}.option-number-item{color:#fff;float:right;font-size:13px;height:38px;padding-top:10px;text-align:center;width:8.5%;margin:0 .25%;cursor:pointer}.option-number-item.option-zero{background:#853838}.option-number-item.option-zero.selected,.option-number-item.option-zero:hover{background:#572526}.option-number-item.option-one{background:#9e4343}.option-number-item.option-one.selected,.option-number-item.option-one:hover{background:#642728}.option-number-item.option-two{background:#c14d4d}.option-number-item.option-two.selected,.option-number-item.option-two:hover{background:#712827}.option-number-item.option-three{background:#d94d4d}.option-number-item.option-three.selected,.option-number-item.option-three:hover{background:#7c2828}.option-number-item.option-four{background:#ee4d4d}.option-number-item.option-four.selected,.option-number-item.option-four:hover{background:#852828}.option-number-item.option-five{background:#ff4d4d}.option-number-item.option-five.selected,.option-number-item.option-five:hover{background:#844828}.option-number-item.option-six{background:#ff8c4d}.option-number-item.option-six.selected,.option-number-item.option-six:hover{background:#844828}.option-number-item.option-seven{background:#ffc74d}.option-number-item.option-seven.selected,.option-number-item.option-seven:hover{background:#856728}.option-number-item.option-eight{background:#f5eb4d}.option-number-item.option-eight.selected,.option-number-item.option-eight:hover{background:#7f7a28}.option-number-item.option-nine{background:#73ca81}.option-number-item.option-nine.selected,.option-number-item.option-nine:hover{background:#3b6942}.option-number-item.option-ten{background:#4db47c}.option-number-item.option-ten.selected,.option-number-item.option-ten:hover{background:#285e40}.cc-question-container[data-type=nps] .option-number-item{width:8.4%}.cc-question-container[data-type=nps] .option-number-item.option-nine,.cc-question-container[data-type=nps] .option-number-item.option-seven{margin-right:4px}.cc-question-container[data-type=scale].scale-image-container .option-number-item{width:8.4%}.cc-question-container__content.rating-color{margin-right:74px}.option-left-rating-text,.option-right-rating-text{bottom:-25px;color:#424242;font-size:13px;right:0;position:absolute}.option-left-rating-text-small-container{max-width:57px;text-align:right;max-height:37px;overflow:hidden;bottom:-44px}.option-right-rating-text-small-container{max-width:57px;text-align:left;max-height:37px;overflow:hidden;bottom:-44px}.cc-question-container[data-type=smile] .option-left-rating-text,.cc-question-container[data-type=star] .option-left-rating-text{right:7px;bottom:-12px}.option-right-rating-text{right:auto;left:5px}.cc-question-container[data-type=smile] .option-right-rating-text,.cc-question-container[data-type=star] .option-right-rating-text{left:36px;bottom:-12px}.cc-question-container[data-type=scale] .option-number-item{width:38px;margin:0 .5px;cursor:pointer;display:inline-block;float:none}.cc-question-container[data-type=scale] .cc-question-container__list{display:inline-block;width:auto;position:relative}.cc-question-container[data-type=scale].scale-image-container .cc-question-container__list{width:100%}.rating-color{position:relative}.option-smile-box,.option-star-box{height:60px;margin-left:29px;width:60px;cursor:pointer;border:4px solid transparent;border-radius:50%;display:inline-block;background-size:100%}.option-smile-box.one{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1.svg\\\") no-repeat;background-size:100%}.option-smile-box.two{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2.svg\\\") no-repeat;background-size:100%}.option-smile-box.three{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3.svg\\\") no-repeat;background-size:100%}.option-smile-box.four{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4.svg\\\") no-repeat;background-size:100%}.option-smile-box.five{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5.svg\\\") no-repeat;background-size:100%}.option-smile-box.one.selected,.option-smile-box.one:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1_Selected.svg\\\") no-repeat;background-size:100%}.option-smile-box.two.selected,.option-smile-box.two:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2_Selected.svg\\\") no-repeat;background-size:100%}.option-smile-box.three.selected,.option-smile-box.three:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3_Selected.svg\\\") no-repeat;background-size:100%}.option-smile-box.four.selected,.option-smile-box.four:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4_Selected.svg\\\") no-repeat;background-size:100%}.option-smile-box.five.selected,.option-smile-box.five:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5_Selected.svg\\\") no-repeat;background-size:100%}.cc-csat.cc-question-container__content.rating-color{margin-right:45px}.option-csat.option-smile-box,.option-csat.option-smile-box.selected,.option-csat.option-smile-box:hover{background-size:25px;background-position:18px;background:none}.option-csat{height:30px;margin-left:68px;width:30px;padding-right:50px;height:45px;margin-left:0;width:auto;padding-right:0;font-size:14px;vertical-align:middle;display:inline-block;margin-left:13px}.option-csat span{display:inline-block;vertical-align:top;font-size:12px;padding-right:25px;position:relative;top:-10px;text-align:right;width:100%}.option-csat .cc-checkbox{top:8px}.option-csat .cc-checkbox.cc-radio label:before,.option-csat .cc-checkbox input[type=radio]:checked+label:after{height:15px;width:15px}.option-star-box{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star.svg\\\") no-repeat;background-size:100%}.option-star-box.selected,.option-star-box:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star_selected.svg\\\") no-repeat;background-size:100%}.cc-question-container[data-type=slider] .option-left-rating-text{right:4px}.cc-question-container[data-type=smile] .cc-question-container__list,.cc-question-container[data-type=star] .cc-question-container__list{position:relative;width:auto;display:inline-block}@media (min-width:767px) and (max-width:992px){.option-smile-box,.option-star-box{width:50px;height:50px;margin-left:10px}.option-csat.option-smile-box,.option-csat.option-smile-box.selected,.option-csat.option-smile-box:hover{display:inline-block;width:168px}.cc-question-container[data-type=smile] .option-right-rating-text,.cc-question-container[data-type=star] .option-right-rating-text{left:16px}}@media (max-width:767px){.option-smile-box,.option-star-box{display:inline-block;margin-left:3px}.option-csat.option-smile-box,.option-csat.option-smile-box.selected,.option-csat.option-smile-box:hover{display:block;background-size:40px;background-position:29px}.option-csat.option-smile-box{height:65px;width:100%}.option-csat.option-smile-box span{font-size:15px;padding-right:74px;top:0}.option-csat.option-smile-box .cc-checkbox{top:19px}.option-csat.option-smile-box .cc-checkbox.cc-radio label:before,.option-csat.option-smile-box .cc-checkbox input[type=radio]:checked+label:after{width:25px;height:25px}.option-number-item{color:#fff;float:right;font-size:15px;height:35px;margin-left:1px;padding-top:7px;text-align:center;width:38px;cursor:pointer;vertical-align:middle}.cc-question-container[data-type=scale]{bottom:106px}.cc-question-container[data-type=scale] .option-left-rating-text,.cc-question-container[data-type=scale] .option-right-rating-text{bottom:-44px;width:auto}.cc-question-container[data-type=scale] .option-right-rating-text{text-align:left}.option-smile-box img,.option-star-box img{padding-left:5px;margin-left:0}.cc-question-container[data-type=nps] .cc-question-container__content{width:100%!important}.cc-question-container[data-type=smile] .option-right-rating-text,.cc-question-container[data-type=star] .option-right-rating-text{left:10px}.cc-question-container[data-type=scale] .cc-question-container__list{width:100%}}@media (max-width:381px){.option-smile-box,.option-star-box{display:inline-block;margin-left:0;height:50px;width:50px}.option-smile-box img,.option-star-box img{padding-left:5px;margin-left:0}}.option-number-item.option-scale{background:#4db47c}.option-number-item.option-scale.selected,.option-number-item.option-scale:hover{background:#712827}.cc-nps-image{cursor:pointer;position:relative;right:0}.circle-image{margin:auto;width:253px;overflow:hidden;height:240px;position:relative}.circle-image-scale-010-neutral{width:242px;overflow:hidden;height:230px;margin:auto}.cc-nps-selected-rating{font-size:100px;display:inline-block;position:absolute;top:0;right:0;line-height:100px;left:0;margin:auto;bottom:0;width:110px;height:100px;text-align:center;font-weight:100;color:#bbb}html[dir=rtl] .cc-question-container[data-type=csat] .cc-question-container__content.rating-color{margin-left:45px;margin-right:0}html[dir=rtl] .cc-question-container[data-type=csat] .cc-checkbox input[type=radio]{margin-left:0;opacity:0;outline:0}html[dir=rtl] .option-number-item{margin-left:1px;margin-right:0;float:left}html[dir=rtl] .cc-question-container__content.rating-color{margin-left:74px;margin-right:0}html[dir=rtl] .option-right-rating-text{right:calc(100% - 418px);left:auto!important}html[dir=rtl] .option-left-rating-text{left:0;right:auto!important}html[dir=rtl] .cc-question-container[data-type=nps] .option-right-rating-text{right:8px;left:auto!important}html[dir=rtl] .cc-question-container[data-type=scale] .option-right-rating-text{right:13px;width:auto!important}html[dir=rtl] .cc-question-container[data-type=scale] .option-left-rating-text{left:2px}html[dir=rtl] .cc-question-container[data-type=slider] .option-right-rating-text{right:0}html[dir=rtl] .rating-color{position:relative}html[dir=rtl] .option-smile-box img{margin-left:29px;margin-right:0}html[dir=rtl] .option-star-box img{margin-right:19px;margin-left:0}html[dir=rtl] .option-csat.option-smile-box span{padding-left:25px;text-align:left;padding-right:0}html[dir=rtl] .cc-question-container[data-type=smile] .option-right-rating-text,html[dir=rtl] .cc-question-container[data-type=star] .option-right-rating-text{right:7px;left:auto!important}html[dir=rtl] .cc-question-container[data-type=smile] .option-left-rating-text,html[dir=rtl] .cc-question-container[data-type=star] .option-left-rating-text{left:35px;right:auto!important}html[dir=rtl] .option-csat{width:auto;padding-right:0;margin-left:13px}html[dir=rtl] .option-csat.option-smile-box,html[dir=rtl] .option-csat.option-smile-box.selected,html[dir=rtl] .option-csat.option-smile-box:hover{background-position:calc(100% - (100% - 19px)) 50%;text-align:left}@media (min-width:767px) and (max-width:992px){html[dir=rtl] .option-smile-box img,html[dir=rtl] .option-star-box img{margin-right:0;margin-left:10px}html[dir=rtl] .cc-question-container__content.rating-color{margin-left:10px;margin-right:86px!important}html[dir=rtl] .cc-question-container[data-type=nps] .option-right-rating-text{right:17px;left:auto!important}html[dir=rtl] .cc-question-container[data-type=smile] .option-right-rating-text,html[dir=rtl] .cc-question-container[data-type=star] .option-right-rating-text{right:7px;left:auto!important}html[dir=rtl] .cc-question-container[data-type=smile] .option-left-rating-text,html[dir=rtl] .cc-question-container[data-type=star] .option-left-rating-text{left:20px;right:auto!important}html[dir=rtl] .option-csat.option-smile-box,html[dir=rtl] .option-csat.option-smile-box.selected,html[dir=rtl] .option-csat.option-smile-box:hover{width:auto}}@media (max-width:767px){html[dir=rtl] .option-smile-box img,html[dir=rtl] .option-star-box img{padding-left:0;padding-right:5px;margin-left:0;margin-right:0}html[dir=rtl] .cc-question-container[data-type=csat] .cc-checkbox input[type=radio]{margin-left:7px;opacity:0;outline:0}html[dir=rtl] .option-csat.option-smile-box,html[dir=rtl] .option-csat.option-smile-box.selected,html[dir=rtl] .option-csat.option-smile-box:hover{background-position:calc(100% - (100% - 30px)) 50%}html[dir=rtl] .option-csat.option-smile-box span{padding-left:39px;text-align:left;padding-right:0}html[dir=rtl] .cc-question-container[data-type=smile] .option-left-rating-text,html[dir=rtl] .cc-question-container[data-type=star] .option-left-rating-text,html[dir=rtl] .option-left-rating-text{left:10px;right:auto!important}html[dir=rtl] .cc-question-container[data-type=smile] .option-right-rating-text,html[dir=rtl] .cc-question-container[data-type=star] .option-right-rating-text{left:auto!important}html[dir=rtl] .option-right-rating-text{right:calc(100% - 322px);left:auto!important}html[dir=rtl] .cc-question-container[data-type=scale] .option-right-rating-text{right:13px;width:auto!important}}@media (max-width:381px){html[dir=rtl] .option-right-rating-text{right:calc(100% - 258px);left:auto!important}}.cc-select-wrapper{position:relative;display:inline-block;user-select:none;z-index:11}.cc-select-wrapper select{display:none}.cc-select{position:relative;display:inline-block;margin-right:70px}.cc-select-trigger{display:block;width:130px;padding:0 22px 0 84px;font-size:15px;font-style:italic;font-weight:300;color:#222;line-height:20px;background:transparent;border-radius:0;cursor:pointer;width:300px;border-bottom:1px solid #6d6d6d;display:inline-block;text-align:right;padding:5px 5px 5px 20px;position:relative;background-position:3%;background-repeat:no-repeat;max-height:50px;overflow:hidden}.cc-select-trigger:after{position:absolute;display:block;content:\\\"\\\";width:10px;height:10px;top:50%;left:5px;margin-top:-3px;border-bottom:1px solid #222;border-left:1px solid #222;transform:rotate(-45deg) translateY(-50%);transition:all .2s ease-in-out;transform-origin:50% 0}.cc-select.opened .cc-select-trigger:after{margin-top:3px;transform:rotate(135deg) translateY(-50%)}.cc-select-options-container{position:absolute;display:block;top:100%;right:0;left:0;min-width:100%;margin:15px 0;border:1px solid #b5b5b5;border-radius:4px;box-sizing:border-box;box-shadow:0 2px 1px rgba(0,0,0,.07);background:#fff;transition:all .2s ease-in-out;opacity:0;visibility:hidden;pointer-events:none;transform:translateY(calc(-100% - 65px));height:auto;max-height:150px;overflow:hidden;overflow-y:scroll}.cc-select-options{overflow-y:scroll;height:100%;width:110%}.cc-select.opened .cc-select-options-container{opacity:1;visibility:visible;pointer-events:all;transform:translateY(calc(-100% - 65px))}.cc-popup-container-2.top .cc-select-options-container,.cc-popup-container-2.top .cc-select.opened .cc-select-options-container{transform:translateY(calc(-100% + 75px))}.option-hover:before{background:#f9f9f9}.cc-select-option{position:relative;display:block;padding:0 12px;border-bottom:1px solid #e4e4e4;font-size:12px;font-weight:600;color:#222;line-height:34px;cursor:pointer;transition:all .2s ease-in-out;text-align:right;margin:0;width:100%}.cc-select-option:first-of-type{border-radius:4px 4px 0 0}.cc-select-option:last-of-type{border-bottom:0;border-radius:0 0 4px 4px}.cc-select-option.selection,.cc-select-option:hover{background:#eaeaea}.cc-select-wrapper.down .cc-select-options-container,.cc-select-wrapper.down .cc-select.opened .cc-select-options-container{transform:translateY(20px)}.cc-question-container[data-type=nps] .cc-question-container__content,.cc-question-container[data-type=scale] .cc-question-container__content{width:40%}@media (max-width:767px){.cc-select,.cc-select-wrapper{min-width:100%}.cc-select{margin-right:0}.cc-select-trigger{min-width:100%;width:auto}}html[dir=rtl] .cc-select-trigger{padding:0 84px 0 22px;background-position:3%;background-repeat:no-repeat;text-align:left}html[dir=rtl] .cc-select-trigger:after{top:50%;right:2px;left:auto}html[dir=rtl] .cc-select-option{text-align:left}html[dir=rtl] .cc-select-option:first-of-type{border-radius:0 4px 4px 0}html[dir=rtl] .cc-select-option:last-of-type{border-radius:4px 0 0 4px}.cc-checkbox{display:table-cell;position:relative;text-align:right;vertical-align:middle}.cc-checkbox label{cursor:pointer}.cc-checkbox+span label img{width:40px;display:inline-block;vertical-align:middle}.cc-checkbox label:after,.cc-checkbox label:before{bottom:0;content:\\\"\\\";right:0;margin:auto;position:absolute;top:0}.cc-checkbox label:before{background:transparent;border-radius:2px;border:1px solid #424242;cursor:pointer;height:20px;transition:background .3s;width:20px}.cc-checkbox input[type=checkbox]{margin-left:10px;opacity:0;outline:0}.cc-checkbox input[type=checkbox]:checked+label:before{background:#fdaf19;border:none}.cc-checkbox input[type=checkbox]:checked+label:after{border:3px solid #222;border-left-style:none;border-top-style:none;height:7px;right:4px;top:-3px;transform:rotate(45deg);width:12px}.cc-checkbox.cc-radio label:before{background:transparent;border:1px solid #424242;cursor:pointer;height:25px;transition:background .3s;width:25px}.cc-checkbox input[type=radio]{margin-left:10px;opacity:0;outline:0}.cc-checkbox input[type=radio]:checked+label:before{background:transparent;border-color:#fdaf19}.cc-checkbox input[type=radio]:checked+label:after{-moz-transform:scale(.8);-ms-transform:scale(.8);-o-transform:scale(.8);-webkit-transform:scale(.8);background:#fdaf19;border-radius:30px;height:25px;transform:scale(.8);width:25px}.cc-radio label:before{border-radius:30px}.radio-toggle--more-option li span{padding-right:25px!important;width:125px!important}.radio-toggle .cc-question-container__list li{padding-right:15px}.radio-toggle .cc-question-container__list li span{padding:10px}@media (min-width:1000px){.radio-toggle .cc-question-container__list li span label{overflow:hidden;max-height:100px;display:block}}@media (min-width:767px) and (max-width:992px){.radio-toggle .cc-question-container__list li{padding-right:10px}.radio-toggle .cc-question-container__list li span{padding:10px}}@media (max-width:767px){.radio-toggle .cc-question-container__list li{padding-right:0;display:inline-block;padding-left:50px}}.progress-bar{width:100%;position:absolute;background:#a47c2b;z-index:1;height:8px;right:0}.progress-line{background:#fdaf19;height:100%;display:block;width:0;transition:all .4s ease-in}.cc-scrollbar-wrapper{float:right;height:100%;overflow:hidden;position:relative;width:100%;z-index:1}.cc-scrollbar-content{box-sizing:border-box;height:100%;overflow:auto;position:relative;width:107%}.cc-scrollbar-scroll{background:#aaa;border-radius:4px;cursor:pointer;opacity:0;position:relative;top:0;transition:opacity .25s linear;width:9px;z-index:2}.cc-scrollbar-container:hover .cc-scrollbar-scroll{opacity:1}.cc-scrollbar-grabbed{-moz-user-select:none;-o-user-select:none;-webkit-user-select:none;user-select:none}.range{-webkit-appearance:none;-moz-appearance:none;width:500px}input[type=range]::-webkit-slider-runnable-track{-webkit-appearance:none;background:#ff403d;background:linear-gradient(-135deg,#ff403d,#992a28);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=\\\"#ff403d \\\",endColorstr=\\\"#992a28 \\\",GradientType=1);height:1px}input[type=range]:focus{outline:none}input[type=range]::-moz-range-track{-moz-appearance:none;background:#ff403d;background:linear-gradient(-135deg,#ff403d,#992a28);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=\\\"#ff403d \\\",endColorstr=\\\"#992a28 \\\",GradientType=1);height:1px}input[type=range]::-webkit-slider-thumb{-webkit-appearance:none;border:1px solid #ff403d;border-radius:50%;height:32px;width:32px;max-width:80px;position:relative;bottom:16px;background-color:#fff;cursor:-webkit-grab}input[type=range]::-moz-range-thumb{-moz-appearance:none;border:1px solid #ff403d;border-radius:50%;height:32px;width:32px;max-width:80px;position:relative;bottom:16px;background-color:#fff;cursor:-moz-grab}input[type=range]::-moz-range-thumb:before{content:\\\"asd\\\"}input[type=range]::-webkit-slider-thumb:active{cursor:-webkit-grabbing}input[type=range]::-moz-range-thumb:active{cursor:-moz-grabbing}.cc-question-container__content.range-slider{height:50px;padding-top:9px}.slider-tip{background:#eb1c23;padding:8px 9px 9px;position:absolute;top:51px;right:0;left:0;margin:0 auto;color:#fff;background:none;color:#424242;font-size:13px;width:100px;display:inline-block;text-align:center;font-weight:700}.slider-tip:after{border-width:5px 5px 0;border-top-color:#000}@media (max-width:1024px){.range{width:100%}}input.range.blue::-moz-range-track,input.range.blue::-webkit-slider-runnable-track{background:blue}.chart{box-sizing:border-box;display:inline-block;height:21px;padding-top:22px;position:relative;vertical-align:top;width:21px}.chart span{display:block;font-size:2em;font-weight:400}.chart canvas{right:0;position:absolute;top:0}.loader{height:21px;right:28px;position:absolute;top:8px;width:21px}@media (min-width:767px){.chart canvas{margin-right:10px}}@media (max-width:767px){.loader{position:relative;right:auto;top:0;left:auto}}html[dir=rtl] .chart canvas{left:0;right:auto}html[dir=rtl] .loader{left:28px;right:auto}@media (min-width:767px){html[dir=rtl] .chart canvas{margin-left:10px;margin-right:0}}.show{display:block!important}.show-inline{display:inline-block!important}.hide{display:none!important}.bottom{bottom:0}.right{left:0}.left{right:0}.top{top:0}.overlay{background:#fff;bottom:0;height:100%;right:0;position:absolute;top:0;width:100%;z-index:0}.overlay.glass{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/ww.png);background-repeat:no-repeat;background-size:cover}.clearfix{clear:both;display:block}.text-normal{font-weight:400}.form-control::-webkit-input-placeholder{color:#4c4c4c;font-family:Open Sans;font-size:13px;font-style:italic;font-weight:400}.form-control::-moz-placeholder{font-style:italic;font-size:13px;font-weight:400;font-family:Open Sans;color:#4c4c4c}.form-control:-ms-input-placeholder{font-style:italic;font-size:13px;font-weight:400;font-family:Open Sans;color:#4c4c4c}.form-control:-moz-placeholder{font-style:italic;font-size:13px;font-weight:400;font-family:Open Sans;color:#4c4c4c}@media (min-width:767px){.desktop-hide{display:none}}@media (max-width:767px){.mobile-hide{display:none}.loader{position:relative;right:auto;top:0;left:auto}.overlay.welcome-overlay{background:rgba(210,42,53,.87)}body.blurr>:not(.cc-popup-container):not(.cc-survey),iframe{-webkit-filter:blur(15px);-moz-filter:blur(15px);-ms-filter:blur(15px);-o-filter:blur(15px);filter:blur(15px)}}html[dir=rtl] .submit-icon{right:0;left:auto;margin-right:75px;background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg width='47' height='47' viewBox='0 0 47 47' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Ccircle cx='19.313' cy='19.313' r='19.313' fill-rule='nonzero' fill='%23white'/%3E%3Ccircle cx='19.313' cy='19.313' r='19.313' fill='%23FCAF18'/%3E%3Cg fill-rule='nonzero' fill='%23404041'%3E%3Cpath d='M27.18 11l.994.993-7.308 7.309 7.308 7.308-.993.993-8.302-8.301z'/%3E%3Cpath d='M21.007 11l.993.993-7.308 7.309L22 26.61l-.993.993-8.302-8.301z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\\\")}@media (max-width:767px){html[dir=rtl] .submit-icon{position:absolute;left:30px;right:auto;top:auto;bottom:30px;padding-right:0;left:20px;margin:0}}.yellow .progress-bar{background:#a47c2b}.yellow .progress-line{background:#fdaf19}.yellow .submit-icon{background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg width='47' height='47' viewBox='0 0 47 47' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Ctitle%3EGroup 16%3C/title%3E%3Cdefs%3E%3Ccircle id='b' cx='19.313' cy='19.313' r='19.313'/%3E%3Cfilter x='-18.1%25' y='-12.9%25' width='136.2%25' height='136.2%25' filterUnits='objectBoundingBox' id='a'%3E%3CfeOffset dy='2' in='SourceAlpha' result='shadowOffsetOuter1'/%3E%3CfeGaussianBlur stdDeviation='2' in='shadowOffsetOuter1' result='shadowBlurOuter1'/%3E%3CfeColorMatrix values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.116423234 0' in='shadowBlurOuter1'/%3E%3C/filter%3E%3C/defs%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg transform='translate(4 2)'%3E%3Cuse fill='%23000' filter='url(%23a)' xlink:href='%23b'/%3E%3Cuse xlink:href='%23b'/%3E%3C/g%3E%3Cg fill-rule='nonzero' fill='%23404041'%3E%3Cpath d='M23.167 13l-.993.993 7.308 7.309-7.308 7.308.993.993 8.302-8.301z'/%3E%3Cpath d='M16.993 13l-.993.993 7.308 7.309L16 28.61l.993.993 8.302-8.301z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\\\")}.yellow .cc-checkbox input[type=checkbox]:checked+label:before{background:#fdaf19}.yellow .cc-checkbox input[type=checkbox]:checked+label:after{border-color:#222}.yellow .cc-checkbox input[type=radio]:checked+label:before{border-color:#fdaf19}.yellow .cc-checkbox input[type=radio]:checked+label:after{background:#fdaf19}.yellow .form-control:focus{border-color:#fcaf18}.yellow .cc-message-box__btn{background:#fdaf19}.red .progress-bar{background:#d22a35}.red .progress-line{background:#d22a35;filter:brightness(150%)}.red .cc-checkbox input[type=checkbox]:checked+label:before{background:#d22a35}.red .cc-checkbox input[type=checkbox]:checked+label:after{border-color:#fff}.red .cc-checkbox input[type=radio]:checked+label:before{border-color:#d22a35}.red .cc-checkbox input[type=radio]:checked+label:after{background:#d22a35}.red .form-control:focus{border-color:#d22a35}.red .cc-message-box__btn{background:#d22a35;color:#fff}.red .submit-icon{background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg width='47' height='47' viewBox='0 0 47 47' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Ctitle%3EGroup 16%3C/title%3E%3Cdefs%3E%3Ccircle id='b' cx='19.313' cy='19.313' r='19.313'/%3E%3Cfilter x='-18.1%25' y='-12.9%25' width='136.2%25' height='136.2%25' filterUnits='objectBoundingBox' id='a'%3E%3CfeOffset dy='2' in='SourceAlpha' result='shadowOffsetOuter1'/%3E%3CfeGaussianBlur stdDeviation='2' in='shadowOffsetOuter1' result='shadowBlurOuter1'/%3E%3CfeColorMatrix values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.116423234 0' in='shadowBlurOuter1'/%3E%3C/filter%3E%3C/defs%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg transform='translate(4 2)'%3E%3Cuse fill='%23fff' filter='url(%23a)' xlink:href='%23b'/%3E%3Cuse fill='rgba(210, 42, 53, 1)' xlink:href='%23b'/%3E%3C/g%3E%3Cg fill-rule='nonzero' fill='%23FFF'%3E%3Cpath d='M23.167 13l-.993.993 7.308 7.309-7.308 7.308.993.993 8.302-8.301z'/%3E%3Cpath d='M16.993 13l-.993.993 7.308 7.309L16 28.61l.993.993 8.302-8.301z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\\\")}.cc-question-container,.hide-slide{-webkit-transform:translateX(-5px);transform:translateX(-5px)}.cc-question-container,.hide-bottom-up,.hide-slide{transition:transform .3s ease,opacity .3s ease,visibility .3s ease;visibility:hidden;opacity:0}.hide-bottom-up{-webkit-transform:translateY(30px);transform:translateY(30px)}.hide-up-bottom{-webkit-transform:translateY(100%);transform:translateY(100%)}.hide-right-left,.hide-up-bottom{transition:transform .3s ease,opacity .3s ease,visibility .3s ease;visibility:hidden;opacity:0}.hide-right-left{-webkit-transform:translateX(-100%);transform:translateX(-100%)}.hide-left-right{-webkit-transform:translateX(100%);transform:translateX(100%);visibility:hidden;opacity:0}.hide-left-right,.show-slide,.show-thankyou-slide{transition:transform .3s ease,opacity .3s ease,visibility .3s ease}.show-slide,.show-thankyou-slide{visibility:visible;opacity:1;-webkit-transform:translateX(0) translateY(0);transform:translateX(0) translateY(0)}#timer{position:relative}svg.timer{position:absolute;top:0;right:0;width:40px;height:40px;transform:rotateY(-180deg) rotate(90deg)}html[dir=rtl] svg.timer{left:0;right:auto}svg.timer circle{stroke-dasharray:50px;stroke-dashoffset:0px;stroke-linecap:round;stroke-width:2px;stroke:red;fill:none;animation:countdown 10s linear 1 forwards}@keyframes countdown{0%{stroke-dashoffset:0px}to{stroke-dashoffset:50px}}.cc-loaderimg{position:absolute;width:100%;z-index:1000;right:0;left:0;top:0;height:100%;background:hsla(0,0%,100%,.8)}.cc-loaderimg svg{width:100px}\" : \"body{padding:0;font-family:open sans,sans-serif}body,ul{margin:0}ul{padding-left:0;list-style-type:none}a,a:focus,a:hover{text-decoration:none;color:inherit}*,:after,:before{box-sizing:border-box}p{color:inherit;margin:0}map area{outline:0;cursor:pointer}map area.selected{outline:0;outline-color:#0a2135;outline-width:0;outline-style:solid}map area:hover{outline:1}.cc-popup-container{background:#fff;box-shadow:0 0 4px 5px rgba(0,0,0,.05);font-family:open sans,sans-serif;position:fixed;text-align:center;max-width:500px;max-height:500px;z-index:1111;padding:10px}.cc-popup-container.bottom{margin-bottom:9px}.cc-popup-container.top{margin-top:9px}#cc-thankyou-container .cc-question-container__text,#cc-thankyou-container .cc-question-container__text p{width:400px;max-width:none;font-size:17px;color:#424242}.cc-message-box{position:relative;z-index:11}.cc-message-box__text{color:#424242;font-size:14px;font-weight:600;margin:0;padding:29px 14px 20px;vertical-align:middle}.cc-message-box__btn{background:#fdaf19;border-radius:100px;display:inline-block;font-size:15px;font-weight:700;height:32px;padding:6px 0;width:124px}.cc-popup-container .cc-popup-container__close{cursor:pointer;margin:4px;position:absolute;right:0;top:0;z-index:111}.cc-popup-container-2{height:144px;position:fixed;width:100%;z-index:1111}.cc-popup-container-2__icons{cursor:pointer;padding:8px;position:absolute;top:0;z-index:111}.top.cc-popup-container-2 .cc-popup-container-2__icons{padding-top:15px}.cc-popup-container-2__icons.cc-right-icon{right:0}.cc-popup-container-2__icons.cc-left-icon{left:0}.cc-popup-container__back{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);display:inline-block;width:21px;height:21px}.cc-question-container{margin-right:147px;padding:20px 20px 25px;position:absolute;text-align:center;width:calc(100% - 147px);z-index:11;top:0;left:0}.cc-question-container__text{color:#424242;display:inline-block;font-size:15px;font-weight:600;max-width:230px;padding:8px 0;text-align:center;vertical-align:middle;width:20%;position:relative}.cc-question-container__required,.cc-question-container__validation{position:absolute;top:-14px;font-size:11px;left:0;right:0;font-weight:400;color:#c1272d;display:none}.cc-question-container__required-label{display:inline-block;position:relative;top:-2px;left:-2px}.cc-question-container__content{display:inline-block;max-width:78%;vertical-align:middle;width:auto}.cc-question-container__list li{display:inline-block;padding-left:29px;vertical-align:middle}.cc-question-container__list li span{display:table-cell;font-size:15px;padding-left:15px;text-align:left;vertical-align:middle;width:125px}.cc-question-container__list li input{vertical-align:middle}.cc-question-container:before{content:\\\"\\\";display:inline-block;margin-right:-4px}.cc-question-container,.cc-question-container:before{height:100%;vertical-align:middle}.cc-questions-container{height:100%}p.cc-thankyou-powered{font-size:13px!important;color:#404040!important;font-style:italic;margin-top:4px}.cc-thankyou-powered .cc-thankyou-logo{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/cc-thankyou-logo.svg\\\");background-size:cover;margin-right:8px;display:inline-block;width:16px;height:16px}.multiline-box{background:#fff;border-radius:2px;border:1px solid #6d6d6d;font-family:Open Sans;font-size:15px;height:70px;margin:0 0 0 50px;min-width:600px;padding:2px 5px;resize:none}.multiline-box:focus{outline:0}.detail-box .cc-question-container__text p{font-size:13px;font-weight:700}.detail-box .cc-question-container__text span{display:inline-block;font-size:15px;font-weight:400}.detail-box .cc-question-container__text{height:56px}.detail-box[data-type=singleline] .cc-question-container__text{margin-right:20px}.detail-box .cc-question-container__content .form-control,.single-line .cc-question-container__content .form-control{background:transparent;border:none;border-bottom:1px solid #6d6d6d;font-family:open sans;font-size:15px;line-height:26px;outline:0;width:300px;margin-left:70px}.d-star-box.detail-box .cc-question-container__text{height:92px}.hl.dropdown{background-image:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/arrow-down.black.svg\\\");background-position:97%;background-repeat:no-repeat;border-bottom:1px solid #6d6d6d;display:inline-block;padding:5px;position:relative;text-align:left;width:300px}.drop-cc-question-container .cc-question-container__text{margin-right:20px}.form-control:focus{border-color:#fcaf18}.detail-box .cc-question-container__content{padding-left:0}.cc-big-list-container .cc-question-container__list{display:table;width:100%}.cc-big-list-container .cc-question-container__list li{display:table-cell;vertical-align:middle}.cc-thankyou-container{width:100%!important}.submit-icon{direction:ltr;position:absolute;right:0;top:0;bottom:0;margin:auto 0;z-index:11;margin-right:75px;font-size:16px;cursor:pointer;background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg width='47' height='47' viewBox='0 0 47 47' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Ctitle%3EGroup 16%3C/title%3E%3Cdefs%3E%3Ccircle id='b' cx='19.313' cy='19.313' r='19.313'/%3E%3Cfilter x='-18.1%25' y='-12.9%25' width='136.2%25' height='136.2%25' filterUnits='objectBoundingBox' id='a'%3E%3CfeOffset dy='2' in='SourceAlpha' result='shadowOffsetOuter1'/%3E%3CfeGaussianBlur stdDeviation='2' in='shadowOffsetOuter1' result='shadowBlurOuter1'/%3E%3CfeColorMatrix values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.116423234 0' in='shadowBlurOuter1'/%3E%3C/filter%3E%3C/defs%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg transform='translate(4 2)'%3E%3Cuse fill='%23000' filter='url(%23a)' xlink:href='%23b'/%3E%3Cuse xlink:href='%23b'/%3E%3C/g%3E%3Cg fill-rule='nonzero' fill='%23404041'%3E%3Cpath d='M23.167 13l-.993.993 7.308 7.309-7.308 7.308.993.993 8.302-8.301z'/%3E%3Cpath d='M16.993 13l-.993.993 7.308 7.309L16 28.61l.993.993 8.302-8.301z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\\\");width:47px;height:47px}@media (min-width:1000px){.cc-big-list-container .cc-question-container__list li span label{overflow:hidden;max-height:100px;display:block}.cc-question-container__content{max-height:100px}}@media (min-width:767px) and (max-width:1024px){.cc-popup-container-2{height:200px}.cc-big-list-container .cc-question-container__list,.cc-question-container__list{text-align:left}.cc-big-list-container .cc-question-container__list li,.cc-question-container__list li{display:inline-block;margin-bottom:15px;vertical-align:middle;width:49%}.cc-question-container__content{display:inline-block;width:45%}.multiline-box{min-width:100%;margin:0}.option-smile-box img,.option-star-box img{margin-right:11px!important}.cc-thankyou-container .cc-question-container__text,.cc-thankyou-container .cc-question-container__text p{width:100%!important;text-align:center;margin:0!important;padding:0;line-height:normal;height:auto}.cc-thankyou-container .cc-question-container__text{max-width:98%}}@media (min-width:1000px){.cc-question-container__text{max-height:110px;overflow:hidden}}@media (min-width:767px) and (max-width:992px){.cc-question-container{width:100%;margin:auto}.cc-question-container__text{width:24%;padding-right:20px;max-height:110px;overflow:hidden}.cc-question-container__content.rating-color{margin-left:0}.submit-icon{margin-right:40px!important}.cc-question-container__content.rating-color{margin-left:0!important}.cc-question-container__content{width:50%!important}}@media (max-width:767px){.cc-survey-container,.cc-survey-content{height:100%}.cc-popup-container-2{bottom:auto;height:100%;top:0}.cc-popup-container-2__icons.cc-right-icon{left:auto;right:0;padding:0}.cc-popup-container-2__icons.cc-left-icon{left:0;right:auto;padding:0}.cc-big-list-container .cc-question-container__list li{display:block}.radio-toggle--more-option li span{width:84%!important;padding-left:25px!important}.radio-toggle--more-option li{padding-right:0!important;display:block!important;padding-top:10px}.detail-box .cc-question-container__content{padding-left:0}.cc-question-container{bottom:75px;height:auto;left:0;padding:40px 20px;position:absolute;text-align:left;top:auto;width:100%}.cc-question-container__text{font-size:18px;margin-bottom:20px;max-width:400px;text-align:left;width:100%}.cc-question-container__content{display:block;max-width:100%;width:100%}.cc-question-container__list label{display:block}.cc-question-container__list li span{width:auto;padding-left:15px}.cc-question-container__list li{padding-left:0;margin-bottom:10px;display:block}.cc-popup-container-2__icons{margin:20px}.cc-popup-container-2__icons.left-icon{left:auto;right:0}.cc-popup-container-2__icons.right-icon{right:auto;left:0}.cc-popup-container__close{width:27px}.cc-question-container__content.rating-color{margin-left:0!important}.cc-question-container[data-type=nps] .cc-question-container__content,.cc-question-container[data-type=scale] .cc-question-container__content{width:100%!important}.multiline-box{height:150px;margin:0;min-width:100%;width:100%}.detail-box .cc-question-container__content .form-control,.hl.dropdown{width:100%}.detail-box .cc-question-container__text p{font-size:18px}.mobile-detail-box .cc-question-container__text{height:auto}.welcome-box .cc-question-container__text p{color:#fff}.cc-questions-container{height:100%;position:relative}}@media (max-width:767px){.detail-box .cc-question-container__content .form-control,.single-line .cc-question-container__content .form-control{margin-left:0}.submit-icon{position:absolute;left:20px;top:auto;bottom:30px;padding-right:0}.cc-popup-container{position:fixed;top:0;left:0;right:0;margin:0;width:100%;height:100%;max-width:100%;max-height:100%;text-align:left;background:transparent}.cc-popup-container .cc-message-box{position:absolute;bottom:20%}.cc-popup-container .cc-message-box .cc-message-box__text{font-size:20px}.cc-popup-container .cc-message-box .submit-icon{position:absolute;bottom:-100%;top:auto;left:0;margin:0 14px}.cc-popup-container .cc-popup-container__close{margin:20px;right:0;top:0}.cc-popup-container__back{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);display:inline-block;width:27px;height:27px;background-size:100%}.cc-question-container__required-label{display:block;left:0;top:2px}.cc-thankyou-container .cc-question-container__text,.cc-thankyou-container .cc-question-container__text p{width:100%!important;text-align:center;margin:0!important;padding:0;line-height:normal;height:auto}.cc-thankyou-container .cc-question-container__text{max-width:98%}}html[dir=rtl] ul{padding-right:0}html[dir=rtl] .cc-popup-container .cc-popup-container__close{right:auto;left:0;top:0}html[dir=rtl] .cc-popup-container .cc-message-box .cc-message-box__text{text-align:right}html[dir=rtl] .cc-popup-container__back{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_rtl_.svg)}html[dir=rtl] .cc-popup-container-2__icons.cc-right-icon{right:auto;left:0}html[dir=rtl] .cc-popup-container-2__icons.cc-left-icon{right:0;left:auto}html[dir=rtl] .cc-question-container{margin-left:147px;margin-right:0;right:0;left:auto}html[dir=rtl] .cc-question-container__required,html[dir=rtl] .cc-question-container__validation{right:0;left:auto}html[dir=rtl] .cc-question-container__required-label{top:-2px;right:-2px;left:auto}html[dir=rtl] .cc-question-container__list li{display:inline-block;padding-right:15px!important;padding-left:15px!important;vertical-align:middle}html[dir=rtl] .cc-question-container[data-type=checkbox] .cc-question-container__list li{padding-right:0!important}html[dir=rtl] .cc-question-container__list li span{padding-right:15px;padding-left:0;text-align:right}html[dir=rtl] .cc-question-container:before{margin-left:-4px;margin-right:0}html[dir=rtl] .multiline-box{margin:0 50px 0 0}html[dir=rtl] .hl.dropdown{background-position:97%;text-align:right}html[dir=rtl] .drop-cc-question-container .cc-question-container__text{margin-left:20px;margin-right:0}html[dir=rtl] .detail-box .cc-question-container__content{padding-right:0;padding-left:0}html[dir=rtl] .cc-nps-image{left:31px}html[dir=rtl] .cc-question-container__content{text-align:right}@media (min-width:767px) and (max-width:1024px){html[dir=rtl] .cc-big-list-container .cc-question-container__list,html[dir=rtl] .cc-question-container__list{text-align:right}html[dir=rtl] .multiline-box{margin:0}}@media (min-width:767px) and (max-width:992px){html[dir=rtl] .cc-question-container__text{padding-left:20px;padding-right:0}html[dir=rtl] .cc-question-container__content.rating-color{margin-left:0;margin-right:0}}@media (max-width:767px){html[dir=rtl] .cc-popup-container-2__icons.cc-right-icon{left:auto;right:0}html[dir=rtl] .cc-popup-container-2__icons.cc-left-icon{left:0;right:auto}html[dir=rtl] .radio-toggle--more-option li span{padding-right:25px!important;padding-left:0!important}html[dir=rtl] .radio-toggle--more-option li{padding-right:0!important;padding-left:0!important}html[dir=rtl] .detail-box .cc-question-container__content{padding-left:0;padding-right:0}html[dir=rtl] .cc-question-container{left:auto;right:0}html[dir=rtl] .multiline-box{margin:0}html[dir=rtl] .cc-question-container__text{text-align:right;width:100%;margin-right:5px;max-width:100%}html[dir=rtl] .cc-question-container__list li span{padding-right:15px;padding-left:0}html[dir=rtl] .cc-question-container__list li{padding-left:0;padding-right:0}html[dir=rtl] .cc-popup-container-2__icons.left-icon{left:0;right:auto}html[dir=rtl] .cc-popup-container-2__icons.right-icon{right:0;left:auto}html[dir=rtl] .cc-question-container__content.rating-color{margin-left:0!important;margin-right:0!important}}.option-number-item{color:#fff;float:left;font-size:13px;height:38px;padding-top:10px;text-align:center;width:8.5%;margin:0 .25%;cursor:pointer}.option-number-item.option-zero{background:#853838}.option-number-item.option-zero.selected,.option-number-item.option-zero:hover{background:#572526}.option-number-item.option-one{background:#9e4343}.option-number-item.option-one.selected,.option-number-item.option-one:hover{background:#642728}.option-number-item.option-two{background:#c14d4d}.option-number-item.option-two.selected,.option-number-item.option-two:hover{background:#712827}.option-number-item.option-three{background:#d94d4d}.option-number-item.option-three.selected,.option-number-item.option-three:hover{background:#7c2828}.option-number-item.option-four{background:#ee4d4d}.option-number-item.option-four.selected,.option-number-item.option-four:hover{background:#852828}.option-number-item.option-five{background:#ff4d4d}.option-number-item.option-five.selected,.option-number-item.option-five:hover{background:#844828}.option-number-item.option-six{background:#ff8c4d}.option-number-item.option-six.selected,.option-number-item.option-six:hover{background:#844828}.option-number-item.option-seven{background:#ffc74d}.option-number-item.option-seven.selected,.option-number-item.option-seven:hover{background:#856728}.option-number-item.option-eight{background:#f5eb4d}.option-number-item.option-eight.selected,.option-number-item.option-eight:hover{background:#7f7a28}.option-number-item.option-nine{background:#73ca81}.option-number-item.option-nine.selected,.option-number-item.option-nine:hover{background:#3b6942}.option-number-item.option-ten{background:#4db47c}.option-number-item.option-ten.selected,.option-number-item.option-ten:hover{background:#285e40}.cc-question-container[data-type=nps] .option-number-item{width:8.4%}.cc-question-container[data-type=nps] .option-number-item.option-nine,.cc-question-container[data-type=nps] .option-number-item.option-seven{margin-left:4px}.cc-question-container[data-type=scale].scale-image-container .option-number-item{width:8.4%}.cc-question-container__content.rating-color{margin-left:74px}.option-left-rating-text,.option-right-rating-text{bottom:-25px;color:#424242;font-size:13px;left:0;position:absolute}.option-left-rating-text-small-container{max-width:57px;text-align:left;max-height:37px;overflow:hidden;bottom:-44px}.option-right-rating-text-small-container{max-width:57px;text-align:right;max-height:37px;overflow:hidden;bottom:-44px}.cc-question-container[data-type=smile] .option-left-rating-text,.cc-question-container[data-type=star] .option-left-rating-text{left:7px;bottom:-12px}.option-right-rating-text{left:auto;right:5px}.cc-question-container[data-type=smile] .option-right-rating-text,.cc-question-container[data-type=star] .option-right-rating-text{right:36px;bottom:-12px}.cc-question-container[data-type=scale] .option-number-item{width:38px;margin:0 .5px;cursor:pointer;display:inline-block;float:none}.cc-question-container[data-type=scale] .cc-question-container__list{display:inline-block;width:auto;position:relative}.cc-question-container[data-type=scale].scale-image-container .cc-question-container__list{width:100%}.rating-color{position:relative}.option-smile-box,.option-star-box{height:60px;margin-right:29px;width:60px;cursor:pointer;border:4px solid transparent;border-radius:50%;display:inline-block;background-size:100%}.option-smile-box.one{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1.svg\\\") no-repeat;background-size:100%}.option-smile-box.two{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2.svg\\\") no-repeat;background-size:100%}.option-smile-box.three{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3.svg\\\") no-repeat;background-size:100%}.option-smile-box.four{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4.svg\\\") no-repeat;background-size:100%}.option-smile-box.five{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5.svg\\\") no-repeat;background-size:100%}.option-smile-box.one.selected,.option-smile-box.one:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1_Selected.svg\\\") no-repeat;background-size:100%}.option-smile-box.two.selected,.option-smile-box.two:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2_Selected.svg\\\") no-repeat;background-size:100%}.option-smile-box.three.selected,.option-smile-box.three:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3_Selected.svg\\\") no-repeat;background-size:100%}.option-smile-box.four.selected,.option-smile-box.four:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4_Selected.svg\\\") no-repeat;background-size:100%}.option-smile-box.five.selected,.option-smile-box.five:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5_Selected.svg\\\") no-repeat;background-size:100%}.cc-csat.cc-question-container__content.rating-color{margin-left:45px}.option-csat.option-smile-box,.option-csat.option-smile-box.selected,.option-csat.option-smile-box:hover{background-size:25px;background-position:18px;background:none}.option-csat{height:30px;margin-right:68px;width:30px;padding-left:50px;height:45px;margin-right:0;width:auto;padding-left:0;font-size:14px;vertical-align:middle;display:inline-block;margin-right:13px}.option-csat span{display:inline-block;vertical-align:top;font-size:12px;padding-left:25px;position:relative;top:-10px;text-align:left;width:100%}.option-csat .cc-checkbox{top:8px}.option-csat .cc-checkbox.cc-radio label:before,.option-csat .cc-checkbox input[type=radio]:checked+label:after{height:15px;width:15px}.option-star-box{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star.svg\\\") no-repeat;background-size:100%}.option-star-box.selected,.option-star-box:hover{background:url(\\\"https://cx.getcloudcherry.com/microsurvey-assets/Star_selected.svg\\\") no-repeat;background-size:100%}.cc-question-container[data-type=slider] .option-left-rating-text{left:4px}.cc-question-container[data-type=smile] .cc-question-container__list,.cc-question-container[data-type=star] .cc-question-container__list{position:relative;width:auto;display:inline-block}@media (min-width:767px) and (max-width:992px){.option-smile-box,.option-star-box{width:50px;height:50px;margin-right:10px}.option-csat.option-smile-box,.option-csat.option-smile-box.selected,.option-csat.option-smile-box:hover{display:inline-block;width:168px}.cc-question-container[data-type=smile] .option-right-rating-text,.cc-question-container[data-type=star] .option-right-rating-text{right:16px}}@media (max-width:767px){.option-smile-box,.option-star-box{display:inline-block;margin-right:3px}.option-csat.option-smile-box,.option-csat.option-smile-box.selected,.option-csat.option-smile-box:hover{display:block;background-size:40px;background-position:29px}.option-csat.option-smile-box{height:65px;width:100%}.option-csat.option-smile-box span{font-size:15px;padding-left:74px;top:0}.option-csat.option-smile-box .cc-checkbox{top:19px}.option-csat.option-smile-box .cc-checkbox.cc-radio label:before,.option-csat.option-smile-box .cc-checkbox input[type=radio]:checked+label:after{width:25px;height:25px}.option-number-item{color:#fff;float:left;font-size:15px;height:35px;margin-right:1px;padding-top:7px;text-align:center;width:38px;cursor:pointer;vertical-align:middle}.cc-question-container[data-type=scale]{bottom:106px}.cc-question-container[data-type=scale] .option-left-rating-text,.cc-question-container[data-type=scale] .option-right-rating-text{bottom:-44px;width:auto}.cc-question-container[data-type=scale] .option-right-rating-text{text-align:right}.option-smile-box img,.option-star-box img{padding-right:5px;margin-right:0}.cc-question-container[data-type=nps] .cc-question-container__content{width:100%!important}.cc-question-container[data-type=smile] .option-right-rating-text,.cc-question-container[data-type=star] .option-right-rating-text{right:10px}.cc-question-container[data-type=scale] .cc-question-container__list{width:100%}}@media (max-width:381px){.option-smile-box,.option-star-box{display:inline-block;margin-right:0;height:50px;width:50px}.option-smile-box img,.option-star-box img{padding-right:5px;margin-right:0}}.option-number-item.option-scale{background:#4db47c}.option-number-item.option-scale.selected,.option-number-item.option-scale:hover{background:#712827}.cc-nps-image{cursor:pointer;position:relative;left:0}.circle-image{margin:auto;width:253px;overflow:hidden;height:240px;position:relative}.circle-image-scale-010-neutral{width:242px;overflow:hidden;height:230px;margin:auto}.cc-nps-selected-rating{font-size:100px;display:inline-block;position:absolute;top:0;left:0;line-height:100px;right:0;margin:auto;bottom:0;width:110px;height:100px;text-align:center;font-weight:100;color:#bbb}html[dir=rtl] .cc-question-container[data-type=csat] .cc-question-container__content.rating-color{margin-right:45px;margin-left:0}html[dir=rtl] .cc-question-container[data-type=csat] .cc-checkbox input[type=radio]{margin-right:0;opacity:0;outline:0}html[dir=rtl] .option-number-item{margin-right:1px;margin-left:0;float:right}html[dir=rtl] .cc-question-container__content.rating-color{margin-right:74px;margin-left:0}html[dir=rtl] .option-right-rating-text{left:calc(100% - 418px);right:auto!important}html[dir=rtl] .option-left-rating-text{right:0;left:auto!important}html[dir=rtl] .cc-question-container[data-type=nps] .option-right-rating-text{left:8px;right:auto!important}html[dir=rtl] .cc-question-container[data-type=scale] .option-right-rating-text{left:13px;width:auto!important}html[dir=rtl] .cc-question-container[data-type=scale] .option-left-rating-text{right:2px}html[dir=rtl] .cc-question-container[data-type=slider] .option-right-rating-text{left:0}html[dir=rtl] .rating-color{position:relative}html[dir=rtl] .option-smile-box img{margin-right:29px;margin-left:0}html[dir=rtl] .option-star-box img{margin-left:19px;margin-right:0}html[dir=rtl] .option-csat.option-smile-box span{padding-right:25px;text-align:right;padding-left:0}html[dir=rtl] .cc-question-container[data-type=smile] .option-right-rating-text,html[dir=rtl] .cc-question-container[data-type=star] .option-right-rating-text{left:7px;right:auto!important}html[dir=rtl] .cc-question-container[data-type=smile] .option-left-rating-text,html[dir=rtl] .cc-question-container[data-type=star] .option-left-rating-text{right:35px;left:auto!important}html[dir=rtl] .option-csat{width:auto;padding-left:0;margin-right:13px}html[dir=rtl] .option-csat.option-smile-box,html[dir=rtl] .option-csat.option-smile-box.selected,html[dir=rtl] .option-csat.option-smile-box:hover{background-position:calc(100% - 19px) 50%;text-align:right}@media (min-width:767px) and (max-width:992px){html[dir=rtl] .option-smile-box img,html[dir=rtl] .option-star-box img{margin-left:0;margin-right:10px}html[dir=rtl] .cc-question-container__content.rating-color{margin-right:10px;margin-left:86px!important}html[dir=rtl] .cc-question-container[data-type=nps] .option-right-rating-text{left:17px;right:auto!important}html[dir=rtl] .cc-question-container[data-type=smile] .option-right-rating-text,html[dir=rtl] .cc-question-container[data-type=star] .option-right-rating-text{left:7px;right:auto!important}html[dir=rtl] .cc-question-container[data-type=smile] .option-left-rating-text,html[dir=rtl] .cc-question-container[data-type=star] .option-left-rating-text{right:20px;left:auto!important}html[dir=rtl] .option-csat.option-smile-box,html[dir=rtl] .option-csat.option-smile-box.selected,html[dir=rtl] .option-csat.option-smile-box:hover{width:auto}}@media (max-width:767px){html[dir=rtl] .option-smile-box img,html[dir=rtl] .option-star-box img{padding-right:0;padding-left:5px;margin-right:0;margin-left:0}html[dir=rtl] .cc-question-container[data-type=csat] .cc-checkbox input[type=radio]{margin-right:7px;opacity:0;outline:0}html[dir=rtl] .option-csat.option-smile-box,html[dir=rtl] .option-csat.option-smile-box.selected,html[dir=rtl] .option-csat.option-smile-box:hover{background-position:calc(100% - 30px) 50%}html[dir=rtl] .option-csat.option-smile-box span{padding-right:39px;text-align:right;padding-left:0}html[dir=rtl] .cc-question-container[data-type=smile] .option-left-rating-text,html[dir=rtl] .cc-question-container[data-type=star] .option-left-rating-text,html[dir=rtl] .option-left-rating-text{right:10px;left:auto!important}html[dir=rtl] .cc-question-container[data-type=smile] .option-right-rating-text,html[dir=rtl] .cc-question-container[data-type=star] .option-right-rating-text{right:auto!important}html[dir=rtl] .option-right-rating-text{left:calc(100% - 322px);right:auto!important}html[dir=rtl] .cc-question-container[data-type=scale] .option-right-rating-text{left:13px;width:auto!important}}@media (max-width:381px){html[dir=rtl] .option-right-rating-text{left:calc(100% - 258px);right:auto!important}}.cc-select-wrapper{position:relative;display:inline-block;user-select:none;z-index:11}.cc-select-wrapper select{display:none}.cc-select{position:relative;display:inline-block;margin-left:70px}.cc-select-trigger{display:block;width:130px;padding:0 84px 0 22px;font-size:15px;font-style:italic;font-weight:300;color:#222;line-height:20px;background:transparent;border-radius:0;cursor:pointer;width:300px;border-bottom:1px solid #6d6d6d;display:inline-block;text-align:left;padding:5px 20px 5px 5px;position:relative;background-position:97%;background-repeat:no-repeat;max-height:50px;overflow:hidden}.cc-select-trigger:after{position:absolute;display:block;content:\\\"\\\";width:10px;height:10px;top:50%;right:5px;margin-top:-3px;border-bottom:1px solid #222;border-right:1px solid #222;transform:rotate(45deg) translateY(-50%);transition:all .2s ease-in-out;transform-origin:50% 0}.cc-select.opened .cc-select-trigger:after{margin-top:3px;transform:rotate(-135deg) translateY(-50%)}.cc-select-options-container{position:absolute;display:block;top:100%;left:0;right:0;min-width:100%;margin:15px 0;border:1px solid #b5b5b5;border-radius:4px;box-sizing:border-box;box-shadow:0 2px 1px rgba(0,0,0,.07);background:#fff;transition:all .2s ease-in-out;opacity:0;visibility:hidden;pointer-events:none;transform:translateY(calc(-100% - 65px));height:auto;max-height:150px;overflow:hidden;overflow-y:scroll}.cc-select-options{overflow-y:scroll;height:100%;width:110%}.cc-select.opened .cc-select-options-container{opacity:1;visibility:visible;pointer-events:all;transform:translateY(calc(-100% - 65px))}.cc-popup-container-2.top .cc-select-options-container,.cc-popup-container-2.top .cc-select.opened .cc-select-options-container{transform:translateY(calc(-100% + 75px))}.option-hover:before{background:#f9f9f9}.cc-select-option{position:relative;display:block;padding:0 12px;border-bottom:1px solid #e4e4e4;font-size:12px;font-weight:600;color:#222;line-height:34px;cursor:pointer;transition:all .2s ease-in-out;text-align:left;margin:0;width:100%}.cc-select-option:first-of-type{border-radius:4px 4px 0 0}.cc-select-option:last-of-type{border-bottom:0;border-radius:0 0 4px 4px}.cc-select-option.selection,.cc-select-option:hover{background:#eaeaea}.cc-select-wrapper.down .cc-select-options-container,.cc-select-wrapper.down .cc-select.opened .cc-select-options-container{transform:translateY(20px)}.cc-question-container[data-type=nps] .cc-question-container__content,.cc-question-container[data-type=scale] .cc-question-container__content{width:40%}@media (max-width:767px){.cc-select,.cc-select-wrapper{min-width:100%}.cc-select{margin-left:0}.cc-select-trigger{min-width:100%;width:auto}}html[dir=rtl] .cc-select-trigger{padding:0 22px 0 84px;background-position:97%;background-repeat:no-repeat;text-align:right}html[dir=rtl] .cc-select-trigger:after{top:50%;left:2px;right:auto}html[dir=rtl] .cc-select-option{text-align:right}html[dir=rtl] .cc-select-option:first-of-type{border-radius:4px 0 0 4px}html[dir=rtl] .cc-select-option:last-of-type{border-radius:0 4px 4px 0}.cc-checkbox{display:table-cell;position:relative;text-align:left;vertical-align:middle}.cc-checkbox label{cursor:pointer}.cc-checkbox+span label img{width:40px;display:inline-block;vertical-align:middle}.cc-checkbox label:after,.cc-checkbox label:before{bottom:0;content:\\\"\\\";left:0;margin:auto;position:absolute;top:0}.cc-checkbox label:before{background:transparent;border-radius:2px;border:1px solid #424242;cursor:pointer;height:20px;transition:background .3s;width:20px}.cc-checkbox input[type=checkbox]{margin-right:10px;opacity:0;outline:0}.cc-checkbox input[type=checkbox]:checked+label:before{background:#fdaf19;border:none}.cc-checkbox input[type=checkbox]:checked+label:after{border:3px solid #222;border-right-style:none;border-top-style:none;height:7px;left:4px;top:-3px;transform:rotate(-45deg);width:12px}.cc-checkbox.cc-radio label:before{background:transparent;border:1px solid #424242;cursor:pointer;height:25px;transition:background .3s;width:25px}.cc-checkbox input[type=radio]{margin-right:10px;opacity:0;outline:0}.cc-checkbox input[type=radio]:checked+label:before{background:transparent;border-color:#fdaf19}.cc-checkbox input[type=radio]:checked+label:after{-moz-transform:scale(.8);-ms-transform:scale(.8);-o-transform:scale(.8);-webkit-transform:scale(.8);background:#fdaf19;border-radius:30px;height:25px;transform:scale(.8);width:25px}.cc-radio label:before{border-radius:30px}.radio-toggle--more-option li span{padding-left:25px!important;width:125px!important}.radio-toggle .cc-question-container__list li{padding-left:15px}.radio-toggle .cc-question-container__list li span{padding:10px}@media (min-width:1000px){.radio-toggle .cc-question-container__list li span label{overflow:hidden;max-height:100px;display:block}}@media (min-width:767px) and (max-width:992px){.radio-toggle .cc-question-container__list li{padding-left:10px}.radio-toggle .cc-question-container__list li span{padding:10px}}@media (max-width:767px){.radio-toggle .cc-question-container__list li{padding-left:0;display:inline-block;padding-right:50px}}.progress-bar{width:100%;position:absolute;background:#a47c2b;z-index:1;height:8px;left:0}.progress-line{background:#fdaf19;height:100%;display:block;width:0;transition:all .4s ease-in}.cc-scrollbar-wrapper{float:left;height:100%;overflow:hidden;position:relative;width:100%;z-index:1}.cc-scrollbar-content{box-sizing:border-box;height:100%;overflow:auto;position:relative;width:107%}.cc-scrollbar-scroll{background:#aaa;border-radius:4px;cursor:pointer;opacity:0;position:relative;top:0;transition:opacity .25s linear;width:9px;z-index:2}.cc-scrollbar-container:hover .cc-scrollbar-scroll{opacity:1}.cc-scrollbar-grabbed{-moz-user-select:none;-o-user-select:none;-webkit-user-select:none;user-select:none}.range{-webkit-appearance:none;-moz-appearance:none;width:500px}input[type=range]::-webkit-slider-runnable-track{-webkit-appearance:none;background:#ff403d;background:linear-gradient(135deg,#ff403d,#992a28);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=\\\"#ff403d \\\",endColorstr=\\\"#992a28 \\\",GradientType=1);height:1px}input[type=range]:focus{outline:none}input[type=range]::-moz-range-track{-moz-appearance:none;background:#ff403d;background:linear-gradient(135deg,#ff403d,#992a28);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=\\\"#ff403d \\\",endColorstr=\\\"#992a28 \\\",GradientType=1);height:1px}input[type=range]::-webkit-slider-thumb{-webkit-appearance:none;border:1px solid #ff403d;border-radius:50%;height:32px;width:32px;max-width:80px;position:relative;bottom:16px;background-color:#fff;cursor:-webkit-grab}input[type=range]::-moz-range-thumb{-moz-appearance:none;border:1px solid #ff403d;border-radius:50%;height:32px;width:32px;max-width:80px;position:relative;bottom:16px;background-color:#fff;cursor:-moz-grab}input[type=range]::-moz-range-thumb:before{content:\\\"asd\\\"}input[type=range]::-webkit-slider-thumb:active{cursor:-webkit-grabbing}input[type=range]::-moz-range-thumb:active{cursor:-moz-grabbing}.cc-question-container__content.range-slider{height:50px;padding-top:9px}.slider-tip{background:#eb1c23;padding:8px 9px 9px;position:absolute;top:51px;left:0;right:0;margin:0 auto;color:#fff;background:none;color:#424242;font-size:13px;width:100px;display:inline-block;text-align:center;font-weight:700}.slider-tip:after{border-width:5px 5px 0;border-top-color:#000}@media (max-width:1024px){.range{width:100%}}input.range.blue::-moz-range-track,input.range.blue::-webkit-slider-runnable-track{background:blue}.chart{box-sizing:border-box;display:inline-block;height:21px;padding-top:22px;position:relative;vertical-align:top;width:21px}.chart span{display:block;font-size:2em;font-weight:400}.chart canvas{left:0;position:absolute;top:0}.loader{height:21px;left:28px;position:absolute;top:8px;width:21px}@media (min-width:767px){.chart canvas{margin-left:10px}}@media (max-width:767px){.loader{position:relative;left:auto;top:0;right:auto}}html[dir=rtl] .chart canvas{right:0;left:auto}html[dir=rtl] .loader{right:28px;left:auto}@media (min-width:767px){html[dir=rtl] .chart canvas{margin-right:10px;margin-left:0}}.show{display:block!important}.show-inline{display:inline-block!important}.hide{display:none!important}.bottom{bottom:0}.right{right:0}.left{left:0}.top{top:0}.overlay{background:#fff;bottom:0;height:100%;left:0;position:absolute;top:0;width:100%;z-index:0}.overlay.glass{background-image:url(https://cx.getcloudcherry.com/microsurvey-assets/ww.png);background-repeat:no-repeat;background-size:cover}.clearfix{clear:both;display:block}.text-normal{font-weight:400}.form-control::-webkit-input-placeholder{color:#4c4c4c;font-family:Open Sans;font-size:13px;font-style:italic;font-weight:400}.form-control::-moz-placeholder{font-style:italic;font-size:13px;font-weight:400;font-family:Open Sans;color:#4c4c4c}.form-control:-ms-input-placeholder{font-style:italic;font-size:13px;font-weight:400;font-family:Open Sans;color:#4c4c4c}.form-control:-moz-placeholder{font-style:italic;font-size:13px;font-weight:400;font-family:Open Sans;color:#4c4c4c}@media (min-width:767px){.desktop-hide{display:none}}@media (max-width:767px){.mobile-hide{display:none}.loader{position:relative;left:auto;top:0;right:auto}.overlay.welcome-overlay{background:rgba(210,42,53,.87)}body.blurr>:not(.cc-popup-container):not(.cc-survey),iframe{-webkit-filter:blur(15px);-moz-filter:blur(15px);-ms-filter:blur(15px);-o-filter:blur(15px);filter:blur(15px)}}html[dir=rtl] .submit-icon{left:0;right:auto;margin-left:75px;background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg width='47' height='47' viewBox='0 0 47 47' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Ccircle cx='19.313' cy='19.313' r='19.313' fill-rule='nonzero' fill='%23white'/%3E%3Ccircle cx='19.313' cy='19.313' r='19.313' fill='%23FCAF18'/%3E%3Cg fill-rule='nonzero' fill='%23404041'%3E%3Cpath d='M27.18 11l.994.993-7.308 7.309 7.308 7.308-.993.993-8.302-8.301z'/%3E%3Cpath d='M21.007 11l.993.993-7.308 7.309L22 26.61l-.993.993-8.302-8.301z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\\\")}@media (max-width:767px){html[dir=rtl] .submit-icon{position:absolute;right:30px;left:auto;top:auto;bottom:30px;padding-left:0;right:20px;margin:0}}.yellow .progress-bar{background:#a47c2b}.yellow .progress-line{background:#fdaf19}.yellow .submit-icon{background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg width='47' height='47' viewBox='0 0 47 47' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Ctitle%3EGroup 16%3C/title%3E%3Cdefs%3E%3Ccircle id='b' cx='19.313' cy='19.313' r='19.313'/%3E%3Cfilter x='-18.1%25' y='-12.9%25' width='136.2%25' height='136.2%25' filterUnits='objectBoundingBox' id='a'%3E%3CfeOffset dy='2' in='SourceAlpha' result='shadowOffsetOuter1'/%3E%3CfeGaussianBlur stdDeviation='2' in='shadowOffsetOuter1' result='shadowBlurOuter1'/%3E%3CfeColorMatrix values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.116423234 0' in='shadowBlurOuter1'/%3E%3C/filter%3E%3C/defs%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg transform='translate(4 2)'%3E%3Cuse fill='%23000' filter='url(%23a)' xlink:href='%23b'/%3E%3Cuse xlink:href='%23b'/%3E%3C/g%3E%3Cg fill-rule='nonzero' fill='%23404041'%3E%3Cpath d='M23.167 13l-.993.993 7.308 7.309-7.308 7.308.993.993 8.302-8.301z'/%3E%3Cpath d='M16.993 13l-.993.993 7.308 7.309L16 28.61l.993.993 8.302-8.301z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\\\")}.yellow .cc-checkbox input[type=checkbox]:checked+label:before{background:#fdaf19}.yellow .cc-checkbox input[type=checkbox]:checked+label:after{border-color:#222}.yellow .cc-checkbox input[type=radio]:checked+label:before{border-color:#fdaf19}.yellow .cc-checkbox input[type=radio]:checked+label:after{background:#fdaf19}.yellow .form-control:focus{border-color:#fcaf18}.yellow .cc-message-box__btn{background:#fdaf19}.red .progress-bar{background:#d22a35}.red .progress-line{background:#d22a35;filter:brightness(150%)}.red .cc-checkbox input[type=checkbox]:checked+label:before{background:#d22a35}.red .cc-checkbox input[type=checkbox]:checked+label:after{border-color:#fff}.red .cc-checkbox input[type=radio]:checked+label:before{border-color:#d22a35}.red .cc-checkbox input[type=radio]:checked+label:after{background:#d22a35}.red .form-control:focus{border-color:#d22a35}.red .cc-message-box__btn{background:#d22a35;color:#fff}.red .submit-icon{background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg width='47' height='47' viewBox='0 0 47 47' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Ctitle%3EGroup 16%3C/title%3E%3Cdefs%3E%3Ccircle id='b' cx='19.313' cy='19.313' r='19.313'/%3E%3Cfilter x='-18.1%25' y='-12.9%25' width='136.2%25' height='136.2%25' filterUnits='objectBoundingBox' id='a'%3E%3CfeOffset dy='2' in='SourceAlpha' result='shadowOffsetOuter1'/%3E%3CfeGaussianBlur stdDeviation='2' in='shadowOffsetOuter1' result='shadowBlurOuter1'/%3E%3CfeColorMatrix values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.116423234 0' in='shadowBlurOuter1'/%3E%3C/filter%3E%3C/defs%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg transform='translate(4 2)'%3E%3Cuse fill='%23fff' filter='url(%23a)' xlink:href='%23b'/%3E%3Cuse fill='rgba(210, 42, 53, 1)' xlink:href='%23b'/%3E%3C/g%3E%3Cg fill-rule='nonzero' fill='%23FFF'%3E%3Cpath d='M23.167 13l-.993.993 7.308 7.309-7.308 7.308.993.993 8.302-8.301z'/%3E%3Cpath d='M16.993 13l-.993.993 7.308 7.309L16 28.61l.993.993 8.302-8.301z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\\\")}.cc-question-container,.hide-slide{-webkit-transform:translateX(5px);transform:translateX(5px)}.cc-question-container,.hide-bottom-up,.hide-slide{transition:transform .3s ease,opacity .3s ease,visibility .3s ease;visibility:hidden;opacity:0}.hide-bottom-up{-webkit-transform:translateY(30px);transform:translateY(30px)}.hide-up-bottom{-webkit-transform:translateY(100%);transform:translateY(100%)}.hide-right-left,.hide-up-bottom{transition:transform .3s ease,opacity .3s ease,visibility .3s ease;visibility:hidden;opacity:0}.hide-right-left{-webkit-transform:translateX(100%);transform:translateX(100%)}.hide-left-right{-webkit-transform:translateX(-100%);transform:translateX(-100%);visibility:hidden;opacity:0}.hide-left-right,.show-slide,.show-thankyou-slide{transition:transform .3s ease,opacity .3s ease,visibility .3s ease}.show-slide,.show-thankyou-slide{visibility:visible;opacity:1;-webkit-transform:translateX(0) translateY(0);transform:translateX(0) translateY(0)}#timer{position:relative}svg.timer{position:absolute;top:0;left:0;width:40px;height:40px;transform:rotateY(-180deg) rotate(-90deg)}html[dir=rtl] svg.timer{right:0;left:auto}svg.timer circle{stroke-dasharray:50px;stroke-dashoffset:0px;stroke-linecap:round;stroke-width:2px;stroke:red;fill:none;animation:countdown 10s linear 1 forwards}@keyframes countdown{0%{stroke-dashoffset:0px}to{stroke-dashoffset:50px}}.cc-loaderimg{position:absolute;width:100%;z-index:1000;left:0;right:0;top:0;height:100%;background:hsla(0,0%,100%,.8)}.cc-loaderimg svg{width:100px}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rtl-css-loader!./node_modules/sass-loader/lib/loader.js!./src/css/main.scss\n// module id = 14\n// module chunks = 0","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function() {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\tvar result = [];\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar item = this[i];\n\t\t\tif(item[2]) {\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\n\t\t\t} else {\n\t\t\t\tresult.push(item[1]);\n\t\t\t}\n\t\t}\n\t\treturn result.join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rtl-css-loader/lib/css-base.js\n// module id = 15\n// module chunks = 0","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(selector) {\n\t\tif (typeof memo[selector] === \"undefined\") {\n\t\t\tmemo[selector] = fn.call(this, selector);\n\t\t}\n\n\t\treturn memo[selector]\n\t};\n})(function (target) {\n\treturn document.querySelector(target)\n});\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton) options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n\tif (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\toptions.attrs.type = \"text/css\";\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\toptions.attrs.type = \"text/css\";\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/style-loader/lib/addStyles.js\n// module id = 16\n// module chunks = 0","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/style-loader/lib/urls.js\n// module id = 17\n// module chunks = 0","module.exports = \"<div class=cc-survey id={{surveyToken}}-survey> <div class=\\\"cc-popup-container-2 {{animation}} {{location}}\\\"> <div class=\\\"overlay glass\\\"></div> <div class=\\\"cc-popup-container-2__icons cc-left-icon\\\"> <span class=\\\"is-cc-popup-container-back cc-popup-container__back act-cc-button-prev\\\"></span> <ul class=loader> <li class=chart data-percent=75></li> </ul> </div> <div class=\\\"cc-popup-container-2__icons cc-right-icon\\\"> <img src=https://cx.getcloudcherry.com/microsurvey-assets/Collapse_Icon.svg class=\\\"is-cc-popup-container-minimize cc-popup-container__minimize act-cc-button-minimize mobile-hide\\\"> <img src=https://cx.getcloudcherry.com/microsurvey-assets/Close_Icon.svg class=\\\"is-cc-popup-container-close cc-popup-container__close act-cc-button-close mobile-hide\\\"> <img src=https://cx.getcloudcherry.com/microsurvey-assets/Close_Icon2.svg class=\\\"is-cc-popup-container-close cc-popup-container__close cc-popup-container__close2 act-cc-button-close desktop-hide\\\"> </div> <div class=cc-survey-container> <div class=cc-survey-content> <div class=cc-questions-container> </div> </div> <div class=\\\"submit-icon act-cc-button-next\\\"></div> <div class=\\\"{{location}} progress-bar\\\" id=progressBar> <span class=progress-line id=progress-line></span> </div> </div> </div> </div> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/templates/Survey.html\n// module id = 18\n// module chunks = 0","module.exports = \"<div class=\\\"act-cc-welcome-question-box cc-popup-container {{location}} {{animation}}\\\" id={{surveyToken}}-welcome> <div class=\\\"overlay glass\\\"></div> <div class=\\\"cc-loaderimg hide\\\"> <svg version=1.1 id=L9 xmlns=http://www.w3.org/2000/svg xmlns:xlink=http://www.w3.org/1999/xlink x=0px y=0px viewBox=\\\"0 0 100 100\\\" enable-background=\\\"new 0 0 0 0\\\" xml:space=preserve> <path fill=red d=\\\"M73,50c0-12.7-10.3-23-23-23S27,37.3,27,50 M30.9,50c0-10.5,8.5-19.1,19.1-19.1S69.1,39.5,69.1,50\\\"> <animateTransform attributeName=transform attributeType=XML type=rotate dur=1s from=\\\"0 50 50\\\" to=\\\"360 50 50\\\" repeatCount=indefinite /> </path> </svg> </div> <svg class=timer> <circle r=8 cx=20 cy=20 stroke=black stroke-width=0 fill=red></circle> </svg> <img src=https://cx.getcloudcherry.com/microsurvey-assets/Close_Icon.svg class=\\\"is-cc-popup-container-close cc-popup-container__close act-cc-button-close\\\"> <div class=cc-message-box> <h2 class=cc-message-box__text>{{question}}</h2> <a href=javascript:void(0) class=\\\"cc-message-box__btn act-cc-survey-start mobile-hide\\\" id=\\\"\\\">{{button}}</a> <div class=\\\"submit-icon act-cc-survey-start desktop-hide\\\"></div> </div> </div> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/templates/QuestionStart.html\n// module id = 19\n// module chunks = 0","module.exports = \"<div class=\\\"cc-question-container single-line\\\" data-required={{isRequired}} data-type=singleline data-id={{questionId}}> <div class=cc-question-container__text> <p><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> <span class=cc-question-container__validation>{{validationHint}}</span> </div> <div class=cc-question-container__content> <input type=text name=\\\"\\\" id={{questionId}} placeholder=Enter.. class=form-control> </div> </div> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/templates/QuestionSingleline.html\n// module id = 20\n// module chunks = 0","module.exports = \"<div class=\\\"cc-question-container single-line\\\" data-required={{isRequired}} data-type=number data-id={{questionId}}> <div class=cc-question-container__text> <p><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> <span class=cc-question-container__validation>{{validationHint}}</span> </div> <div class=cc-question-container__content> <input type=text name=\\\"\\\" id={{questionId}} placeholder=Enter.. class=form-control> </div> </div> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/templates/QuestionNumber.html\n// module id = 21\n// module chunks = 0","module.exports = \"<div class=cc-question-container data-type=multiline data-id={{questionId}} data-required={{isRequired}}> <div class=cc-question-container__text> <p><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> <span class=cc-question-container__validation>{{validationHint}}</span> </div> <div class=cc-question-container__content> <textarea class=\\\"multiline-box form-control\\\" id={{questionId}} placeholder=\\\"Share your thoughts...\\\"></textarea> </div> </div> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/templates/QuestionMultiline.html\n// module id = 22\n// module chunks = 0","module.exports = \"<div class=cc-question-container data-type=checkbox data-id={{questionId}} data-required={{isRequired}}> <div class=cc-question-container__text> <p><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=\\\"cc-question-container__content cc-big-list-container\\\" id={{questionId}}> <ul class=cc-question-container__list> {{options}} </ul> </div> </div> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/templates/QuestionCheckbox.html\n// module id = 23\n// module chunks = 0","module.exports = \"<div class=\\\"cc-question-container radio-toggle\\\" data-type=radio data-id={{questionId}} data-required={{isRequired}}> <div class=cc-question-container__text> <p><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=cc-question-container__content id={{questionId}}> <ul class=cc-question-container__list> {{options}} </ul> </div> </div> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/templates/QuestionRadio.html\n// module id = 24\n// module chunks = 0","module.exports = \"<div class=\\\"cc-question-container radio-toggle radio-toggle--more-option\\\" data-required={{isRequired}} data-type=radioMore data-id={{questionId}}> <div class=cc-question-container__text> <p><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=cc-question-container__content id={{questionId}}> <ul class=cc-question-container__list> <li> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-one> <label class=\\\"ui checkbox\\\" for=service-one></label> </div> <span><label for=service-one>Learn more about a product</label></span> </li> <li> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-two> <label class=\\\"ui checkbox\\\" for=service-two></label> </div> <span><label for=service-two>Troubleshoot an error</label></span> </li> <li> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-three> <label class=\\\"ui checkbox\\\" for=service-three></label> </div> <span><label for=service-three>Understand a product</label></span> </li> </ul> </div> </div> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/templates/QuestionRadioMore.html\n// module id = 25\n// module chunks = 0","module.exports = \"<div class=\\\"cc-question-container radio-toggle radio-toggle--image-toggle\\\" data-required={{isRequired}} data-type=radioImage data-id={{questionId}}> <div class=cc-question-container__text> <p><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=cc-question-container__content id={{questionId}}> <ul class=cc-question-container__list> {{options}} </ul> </div> </div> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/templates/QuestionRadioImage.html\n// module id = 26\n// module chunks = 0","module.exports = \"<div class=\\\"cc-question-container {{scaleImageContainer}}\\\" data-type=scale data-id={{questionId}} data-required={{isRequired}}> <div class=cc-question-container__text> <p><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=\\\"cc-question-container__content rating-color act-cc-question-nps\\\" id={{questionId}}> <div class=cc-question-container__list> {{optionsRange}} <div class=\\\"circle-image circle-image-scale-010-neutral desktop-hide {{imageVisibility010}}\\\"> <img src={{mobileImageUrl}} class=cc-nps-image alt=\\\"\\\" usemap=#Map /> <map name=Map id=Map> <area target=\\\"\\\" alt=0 title=0 href=# class=option-number-item data-rating=0 coords=83,193,62,228,38,212,23,193,57,167 shape=poly> <area target=\\\"\\\" alt=1 title=1 href=# class=option-number-item data-rating=1 coords=54,165,21,189,11,173,4,154,2,140,43,134 shape=poly> <area target=\\\"\\\" alt=2 title=2 href=# class=option-number-item data-rating=2 coords=43,131,2,135,1,118,5,93,8,83,45,97 shape=poly> <area target=\\\"\\\" alt=3 title=3 href=# class=option-number-item data-rating=3 coords=48,92,10,78,17,61,28,44,39,32,66,66 shape=poly> <area target=\\\"\\\" alt=4 title=4 href=# class=option-number-item data-rating=4 coords=70,61,42,30,55,20,70,14,91,5,101,45 shape=poly> <area target=\\\"\\\" alt=5 title=5 href=# class=option-number-item data-rating=5 coords=105,44,92,5,113,2,134,3,147,5,139,46 shape=poly> <area target=\\\"\\\" alt=6 title=6 href=# class=option-number-item data-rating=6 coords=141,46,150,6,169,11,184,19,200,30,172,63 shape=poly> <area target=\\\"\\\" alt=7 title=7 href=# class=option-number-item data-rating=7 coords=175,63,202,34,218,48,227,66,232,78,194,93 shape=poly> <area target=\\\"\\\" alt=8 title=8 href=# class=option-number-item data-rating=8 coords=196,97,233,81,239,103,240,118,240,135,199,130 shape=poly> <area target=\\\"\\\" alt=9 title=9 href=# class=option-number-item data-rating=9 coords=199,135,240,140,236,159,229,175,221,189,187,167 shape=poly> <area target=\\\"\\\" alt=10 title=10 href=# class=option-number-item data-rating=10 coords=183,169,217,191,204,212,178,229,158,192 shape=poly> </map> <span class=\\\"cc-nps-selected-rating act-cc-nps-selected-rating desktop-hide\\\">0</span> </div> <div class=\\\"circle-image circle-image-scale-010-neutral desktop-hide {{imageVisibility110}}\\\"> <img src={{mobileImageUrl}} class=cc-nps-image alt=\\\"\\\" usemap=#Map2 /> <map name=Map2 id=Map2> <area target=\\\"\\\" alt=1 title=1 href=# class=option-number-item data-rating=1 coords=67,180,40,210,26,195,15,176,11,169,47,152 shape=poly> <area target=\\\"\\\" alt=2 title=2 href=# class=option-number-item data-rating=2 coords=48,149,9,163,2,140,1,124,3,110,45,115 shape=poly> <area target=\\\"\\\" alt=3 title=3 href=# class=option-number-item data-rating=3 coords=44,110,4,105,8,79,17,67,22,57,58,79 shape=poly> <area target=\\\"\\\" alt=4 title=4 href=# class=option-number-item data-rating=4 coords=58,76,24,54,33,39,48,29,65,18,85,54 shape=poly> <area target=\\\"\\\" alt=5 title=5 href=# class=option-number-item data-rating=5 coords=87,51,68,15,85,7,106,3,120,3,122,45 shape=poly> <area target=\\\"\\\" alt=6 title=6 href=# class=option-number-item data-rating=6 coords=123,42,123,0,141,2,163,8,176,14,157,52 shape=poly> <area target=\\\"\\\" alt=7 title=7 href=# class=option-number-item data-rating=7 coords=159,53,180,16,201,30,212,44,220,54,186,77 shape=poly> <area target=\\\"\\\" alt=8 title=8 href=# class=option-number-item data-rating=8 coords=188,80,222,55,229,69,236,83,241,108,199,111 shape=poly> <area target=\\\"\\\" alt=9 title=9 href=# class=option-number-item data-rating=9 coords=200,116,239,112,241,128,240,146,234,165,196,150 shape=poly> <area target=\\\"\\\" alt=10 title=10 href=# class=option-number-item data-rating=10 coords=193,153,233,168,225,187,212,202,202,212,175,181 shape=poly> </map> <span class=\\\"cc-nps-selected-rating act-cc-nps-selected-rating desktop-hide\\\">0</span> </div> <span class=clearfix></span> <span class=\\\"option-left-rating-text {{optionLeftExtraClass}}\\\">{{leftLabel}}</span> <span class=\\\"option-right-rating-text {{optionRightExtraClass}}\\\">{{rightLabel}}</span> <input type=hidden value=\\\"\\\" class=option-number-input> </div> </div> </div> {{style}} \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/templates/QuestionScale.html\n// module id = 27\n// module chunks = 0","module.exports = \"<div class=cc-question-container data-type=csat data-required={{isRequired}} data-id={{questionId}}> <div class=cc-question-container__text> <p><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=\\\"cc-question-container__content rating-color\\\" id={{questionId}}> <div class=cc-question-container__list> <span class=\\\"option-csat option-smile-box one\\\" data-rating=1> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-yes> <label class=\\\"ui checkbox\\\" for=service-yes></label> </div> <span>Completely Agree</span> </span> <span class=\\\"option-csat option-smile-box two\\\" data-rating=2> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-yes> <label class=\\\"ui checkbox\\\" for=service-yes></label> </div> <span>Somewhat Agree</span> </span> <span class=\\\"option-csat option-smile-box three\\\" data-rating=3> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-yes> <label class=\\\"ui checkbox\\\" for=service-yes></label> </div> <span>Agree</span> </span> <span class=\\\"option-csat option-smile-box four\\\" data-rating=4> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-yes> <label class=\\\"ui checkbox\\\" for=service-yes></label> </div> <span>Somewhat Disagree</span> </span> <span class=\\\"option-csat option-smile-box five\\\" data-rating=5> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-yes> <label class=\\\"ui checkbox\\\" for=service-yes></label> </div> <span>Completely Disagree</span> </span> </div> </div> </div> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/templates/QuestionCSATAgreement5.html\n// module id = 28\n// module chunks = 0","module.exports = \"<div class=cc-question-container data-type=csat data-required={{isRequired}} data-id={{questionId}}> <div class=cc-question-container__text> <p><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=\\\"cc-question-container__content cc-csat rating-color\\\" id={{questionId}}> <div class=cc-question-container__list> <span class=\\\"option-csat option-smile-box one\\\" data-rating=1> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-yes> <label class=\\\"ui checkbox\\\" for=service-yes></label> </div> <span>Extremely Satisfied</span> </span> <span class=\\\"option-csat option-smile-box two\\\" data-rating=2> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-yes> <label class=\\\"ui checkbox\\\" for=service-yes></label> </div> <span>Very Satisfied</span> </span> <span class=\\\"option-csat option-smile-box three\\\" data-rating=3> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-yes> <label class=\\\"ui checkbox\\\" for=service-yes></label> </div> <span>Satisfied</span> </span> <span class=\\\"option-csat option-smile-box four\\\" data-rating=4> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-yes> <label class=\\\"ui checkbox\\\" for=service-yes></label> </div> <span>Somewhat Dissatisfied</span> </span> <span class=\\\"option-csat option-smile-box five\\\" data-rating=5> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name=serv id=service-yes> <label class=\\\"ui checkbox\\\" for=service-yes></label> </div> <span>Very Dissatisfied</span> </span> </div> </div> </div> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/templates/QuestionCSATSatisfaction5.html\n// module id = 29\n// module chunks = 0","module.exports = \"<div class=cc-question-container data-type=nps data-id={{questionId}} data-required={{isRequired}}> <div class=cc-question-container__text> <p><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=\\\"cc-question-container__content rating-color act-cc-question-scale\\\" id={{questionId}}> <div class=cc-question-container__list> <div class=cc-options-container> <span data-rating=0 class=\\\"option-number-item mobile-hide option-zero\\\">0</span> <span data-rating=1 class=\\\"option-number-item mobile-hide option-one\\\">1</span> <span data-rating=2 class=\\\"option-number-item mobile-hide option-two\\\">2</span> <span data-rating=3 class=\\\"option-number-item mobile-hide option-three\\\">3</span> <span data-rating=4 class=\\\"option-number-item mobile-hide option-four\\\">4</span> <span data-rating=5 class=\\\"option-number-item mobile-hide option-five\\\">5</span> <span data-rating=6 class=\\\"option-number-item mobile-hide option-six\\\">6</span> <span data-rating=7 class=\\\"option-number-item mobile-hide option-seven\\\">7</span> <span data-rating=8 class=\\\"option-number-item mobile-hide option-eight\\\">8</span> <span data-rating=9 class=\\\"option-number-item mobile-hide option-nine\\\">9</span> <span data-rating=10 class=\\\"option-number-item mobile-hide option-ten\\\">10</span> <div class=\\\"circle-image desktop-hide\\\"> <img src=https://cx.getcloudcherry.com/microsurvey-assets/circle.svg class=cc-nps-image alt=\\\"\\\" usemap=#Map /> <map name=Map id=Map> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=0 coords=86,199,61,177,25,201,38,219,52,230,66,238 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=1 coords=59,173,22,198,12,180,5,160,4,146,44,138 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=2 coords=44,134,49,101,8,84,3,98,0,116,2,141 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=3 coords=49,97,71,68,42,33,25,54,14,71,10,81 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=4 coords=74,65,106,47,94,5,70,14,46,31 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=5 coords=144,47,154,4,135,1,114,1,98,4,108,48 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=6 coords=149,48,157,5,183,15,209,30,180,65 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=7 coords=183,67,211,34,231,56,243,79,204,97 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=8 coords=203,100,245,85,251,106,252,124,251,141,207,135 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=9 coords=208,140,251,146,245,169,231,197,194,172 shape=poly> <area target=\\\"\\\" alt=\\\"\\\" title=\\\"\\\" href=# class=option-number-item data-rating=10 coords=193,179,229,201,218,218,202,230,185,238,166,200 shape=poly> </map> <span class=\\\"cc-nps-selected-rating act-cc-nps-selected-rating desktop-hide\\\">0</span> </div> <span class=clearfix></span> <span class=\\\"option-left-rating-text mobile-hide\\\">Not at all likely</span> <span class=\\\"option-right-rating-text mobile-hide\\\">Very likely</span> <input type=hidden value=\\\"\\\" class=option-number-input> </div> </div> </div> </div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/templates/QuestionNPS.html\n// module id = 30\n// module chunks = 0","module.exports = \"<div class=\\\"cc-question-container drop-cc-question-container\\\" data-required={{isRequired}} data-type=select data-id={{questionId}}> <div class=cc-question-container__text> <p><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=cc-question-container__content id={{questionId}}> <div class=cc-select-wrapper> <select name=sources id=sources class=\\\"cc-select sources\\\" placeholder=Select> {{options}} </select> </div> </div> </div> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/templates/QuestionSelect.html\n// module id = 31\n// module chunks = 0","module.exports = \"<div class=\\\"cc-question-container drop-cc-question-container\\\" data-required={{isRequired}} data-type=select data-id={{questionId}}> <div class=cc-question-container__text> <p><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=cc-question-container__content id={{questionId}}> <div class=cc-select-wrapper> <select name=sources id=sources class=\\\"cc-select sources\\\" placeholder=Select data-type=multiple> {{options}} </select> </div> </div> </div> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/templates/QuestionMultiSelect.html\n// module id = 32\n// module chunks = 0","module.exports = \"<div class=cc-question-container data-type=smile data-required={{isRequired}} data-id={{questionId}}> <div class=cc-question-container__text> <p><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=\\\"cc-question-container__content rating-color\\\" id={{questionId}}> <div class=cc-question-container__list> <span class=\\\"option-smile-box one\\\" data-rating=1></span> <span class=\\\"option-smile-box two\\\" data-rating=2></span> <span class=\\\"option-smile-box three\\\" data-rating=3></span> <span class=\\\"option-smile-box four\\\" data-rating=4></span> <span class=\\\"option-smile-box five\\\" data-rating=5></span> <span class=option-left-rating-text>{{leftLabel}}</span> <span class=option-right-rating-text>{{rightLabel}}</span> </div> </div> </div> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/templates/QuestionSmile.html\n// module id = 33\n// module chunks = 0","module.exports = \"<div class=cc-question-container data-type=smile data-required={{isRequired}} data-id={{questionId}}> <div class=cc-question-container__text> <p><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=\\\"cc-question-container__content rating-color\\\" id={{questionId}}> <div class=cc-question-container__list> <span class=\\\"option-smile-box five\\\" data-rating=5></span> <span class=\\\"option-smile-box four\\\" data-rating=4></span> <span class=\\\"option-smile-box three\\\" data-rating=3></span> <span class=\\\"option-smile-box two\\\" data-rating=2></span> <span class=\\\"option-smile-box one\\\" data-rating=1></span> <span class=option-right-rating-text>{{leftLabel}}</span> <span class=option-left-rating-text>{{rightLabel}}</span> </div> </div> </div> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/templates/QuestionSmileInverted.html\n// module id = 34\n// module chunks = 0","module.exports = \"<div class=cc-question-container data-type=star data-required={{isRequired}} data-id={{questionId}}> <div class=cc-question-container__text> <p><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=\\\"cc-question-container__content rating-color\\\" id={{questionId}}> <div class=cc-question-container__list> <span class=option-star-box data-rating=1></span> <span class=option-star-box data-rating=2></span> <span class=option-star-box data-rating=3></span> <span class=option-star-box data-rating=4></span> <span class=option-star-box data-rating=5></span> <span class=option-left-rating-text>{{leftLabel}}</span> <span class=option-right-rating-text>{{rightLabel}}</span> </div> </div> </div> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/templates/QuestionStar.html\n// module id = 35\n// module chunks = 0","module.exports = \"<div class=cc-question-container data-required={{isRequired}} data-type=slider data-id={{questionId}}> <div class=cc-question-container__text> <p><span class=cc-question-container__required-label>{{requiredLabel}}</span>{{question}}</p> <span class=cc-question-container__required>Mandatory Question</span> </div> <div class=\\\"cc-question-container__content rating-color range-slider\\\" id={{questionId}}> <div class=cc-question-container__slider> <input type=range name=\\\"\\\" value={{min}} min={{min}} max={{max}} class=\\\"range blue\\\"> <span class=option-left-rating-text>{{minLabel}}{{min}}</span> <span class=option-right-rating-text>{{maxLabel}}{{max}}</span> <span class=\\\"slider-tip act-slider-tip\\\"></span> </div> </div> </div> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/templates/QuestionSlider.html\n// module id = 36\n// module chunks = 0","module.exports = \"<li> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name={{qId}} id={{qId}}-img-service-{{labelFor}} value={{value}}> <label class=\\\"ui checkbox\\\" for={{qId}}-img-service-{{labelFor}}></label> </div> <span><label for={{qId}}-img-service-{{labelFor}} class=\\\"option-yes-no {{labelFor}}\\\"><img src={{image}} /> {{label}}</label></span> </li> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/templates/OptionRadioImage.html\n// module id = 37\n// module chunks = 0","module.exports = \"<li> <div class=\\\"cc-checkbox cc-radio\\\"> <input type=radio name={{qId}} id={{qId}}-service-{{labelFor}} value={{value}}> <label class=\\\"ui checkbox\\\" for={{qId}}-service-{{labelFor}}></label> </div> <span><label for={{qId}}-service-{{labelFor}} class=\\\"option-yes-no {{labelFor}}\\\">{{label}}</label></span> </li>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/templates/OptionRadio.html\n// module id = 38\n// module chunks = 0","module.exports = \"<li> <div class=cc-checkbox> <input type=checkbox value={{value}} name=\\\"\\\" id=check-{{labelFor}}> <label class=\\\"ui checkbox\\\" for=check-{{labelFor}}> </label> </div> <span><label for=check-{{labelFor}}>{{label}}</label></span> </li>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/templates/OptionCheckbox.html\n// module id = 39\n// module chunks = 0","module.exports = \"<li> <div class=cc-checkbox> <input type=checkbox value={{value}} name=\\\"\\\" id=check-{{labelFor}}> <label class=\\\"ui checkbox\\\" for=check-{{labelFor}}> </label> </div> <span><label for=check-{{labelFor}}><img src={{image}} /> {{label}}</label></span> </li> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/templates/OptionCheckboxImage.html\n// module id = 40\n// module chunks = 0","module.exports = \"<div class=\\\"cc-question-container detail-box mobile-detail-box cc-thankyou-container\\\" id=cc-thankyou-container> <div class=cc-question-container__text> <p>{{question}}</p> <p class=cc-thankyou-powered><span class=cc-thankyou-logo></span>Delight powered by Cloudcherry</p> </div> <div class=cc-question-container__content> </div> </div> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/templates/ThankYou.html\n// module id = 41\n// module chunks = 0","module.exports = \"<div class=\\\"cc-question-container drop-cc-question-container cc-language-selector\\\" data-required={{isRequired}} data-type=select data-id={{questionId}}> <div class=cc-question-container__text> <p><span class=cc-question-container__required-label></span>Select language</p> <span class=cc-question-container__required>* Mandatory</span> </div> <div class=cc-question-container__content id={{questionId}}> <div class=cc-select-wrapper> <select name=sources id=sources class=\\\"cc-select sources\\\" placeholder=Select> {{options}} </select> </div> </div> </div> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/templates/LanguageSelector.html\n// module id = 42\n// module chunks = 0","\r\nimport { LanguageTextFilter } from './LanguageTextFilter';\r\nclass ConditionalTextFilter {\r\n  public static filterText(surveyHandler : any, question : any) : string {\r\n      let conditionaText = question.text == null ? '' : LanguageTextFilter.translateQuestionText(surveyHandler, question);\r\n      if(question.text != null){\r\n          let conditionaText : string = question.text.split(':');\r\n          if(question.text.includes(\":\")){\r\n              conditionaText = conditionaText[0] + ': <br><span class=\"text-normal\">'+conditionaText[1]+'</span>';\r\n          } else {\r\n              conditionaText = conditionaText[0];\r\n          }\r\n        }\r\n          if (question.leadingDisplayTexts == null) {\r\n            conditionaText = LanguageTextFilter.translateQuestionText(surveyHandler, question);\r\n              return conditionaText;\r\n          } else if (question.leadingDisplayTexts.length == 0) {\r\n              conditionaText = LanguageTextFilter.translateQuestionText(surveyHandler, question);\r\n              return conditionaText;\r\n          } else {\r\n              for (let fOption of question.leadingDisplayTexts) {\r\n                  if (fOption != null && fOption.filter != null && fOption.filter.filterquestions != null) {\r\n                      let iSatisfied : boolean = false;\r\n                      let iFailed : boolean = false;\r\n                      for (let filterByQuestion of fOption.filter.filterquestions) {\r\n                          if (ConditionalTextFilter.isAnd(filterByQuestion)) {\r\n                              if (ConditionalTextFilter.doesSatisfy(surveyHandler, filterByQuestion) && !iFailed) {\r\n                                  iSatisfied = true;\r\n                              } else {\r\n                                  iFailed = true;\r\n                                  break;\r\n                              }\r\n                          } else if (ConditionalTextFilter.isOr(filterByQuestion)) {\r\n                              if (ConditionalTextFilter.doesSatisfy(surveyHandler, filterByQuestion)) {\r\n                                  iSatisfied = true;\r\n                                  break;\r\n                              }\r\n                          }\r\n      \r\n                      }\r\n                      if (iSatisfied && !iFailed) {\r\n                          conditionaText = fOption.text;\r\n                      }\r\n                  }\r\n              }\r\n          }\r\n      \r\n          return conditionaText;\r\n\r\n\r\n  }\r\n\r\n  private static isAnd(filterQuestion : any) : boolean {\r\n    if (filterQuestion.groupBy == null || filterQuestion.groupBy.toUpperCase() == \"AND\") {\r\n        return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private static isOr(filterQuestion : any) : boolean {\r\n      if (filterQuestion.groupBy != null && filterQuestion.groupBy.toUpperCase() == \"OR\") {\r\n          return true;\r\n      }\r\n      return false;\r\n  }\r\n\r\n  private static isNumberCheck(filterQuestion : any) : boolean  {\r\n    if (filterQuestion.answerCheck[0].includes(\"lt\") || filterQuestion.answerCheck[0].includes(\"gt\") || filterQuestion.answerCheck[0].includes(\"eq\")) {\r\n        return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private static doesSatisfy(surveyHandler : any, filterQuestion : any) : boolean {\r\n    if (ConditionalTextFilter.isNumberCheck(filterQuestion)) {\r\n        if (filterQuestion.answerCheck[0].toLowerCase() == \"lt\") {\r\n            if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId) != null)\r\n                if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput != null && surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput < filterQuestion.number) {\r\n                    return true;\r\n                }\r\n        } else if (filterQuestion.answerCheck[0].toLowerCase() == \"gt\") {\r\n            if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId) != null)\r\n                if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput != null && surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput > filterQuestion.number) {\r\n                    return true;\r\n                }\r\n        } else if (filterQuestion.answerCheck[0].toLowerCase() == \"eq\") {\r\n            if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId) != null)\r\n                if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput != null && surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput == filterQuestion.number) {\r\n                    return true;\r\n                }\r\n        }\r\n    } else {\r\n        let iFoundAll : boolean = false;\r\n        for (let aAnswer of filterQuestion.answerCheck) {\r\n            if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId) != null)\r\n                if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).textInput != null && surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).textInput.includes(aAnswer)) {\r\n                    iFoundAll = true;\r\n                    break;\r\n                } else {\r\n                    iFoundAll = false;\r\n                    break;\r\n                }\r\n        }\r\n        if (iFoundAll)\r\n            return true;\r\n    }\r\n    \r\n    return false;\r\n  }\r\n}\r\n\r\nexport { ConditionalTextFilter };\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/filters/ConditionalTextFilter.ts","import { DomUtilities } from './DomUtilities';\n// import { ScrollBar } from './ScrollBar';\nimport { Select } from './Select';\nimport { Theme } from './Theme';\nimport { ConditionalFlowFilter } from \"../filters/ConditionalFlowFilter\";\nimport { Slider } from \"./Slider\";\nimport { Constants } from \"../../Constants\";\nimport { setInterval } from 'timers';\n\nclass DomSurvey{\n\n  util : DomUtilities;\n  // scrollbar : ScrollBar;\n  domListeners: any;\n  select : Select;\n  theme : Theme;\n  qIndex : number;\n  currentQuestionId : string;\n  $questionContainer : any;\n  $innerQuestionContainer : any;\n  $popupContainer : any;\n  $popupContainer2 : any;\n  $body : any;\n  qResponse : any;\n  trackSelects : any = [];\n  trackRadios : any = [];\n  ccsdk : any;\n  currentQuestionListeners : any = [];\n  trackSetupListeners:any;\n  $startBtn : any;\n  bodyElement : any;\n  \n\n  constructor(ccsdk : any){\n    let self : DomSurvey = this;\n    this.domListeners = [];\n    this.ccsdk = ccsdk;\n  \tthis.qIndex = 0;\n    this.qResponse = {};\n    this.domSelectElements();\n    this.util = new DomUtilities()\n    // self.scrollbar = new ScrollBar(\"data-cc-scrollbar\");\n    this.util.ready(function(){\n  \t   // self.util.addClassAll(self.$popupContainer,'show-slide');\n    });\n  }\n\n  setTheme(brandColor, time){\n    let self : DomSurvey = this;\n    this.util.ready(function(){\n      self.theme = new Theme(brandColor, time);\n    });\n  }\n\n  setQIndex( index : number){\n    this.qIndex = index;\n  }\n\n  getQindex(){\n    return this.qIndex;\n  }\n\n  domSelectElements(){\n    this.$questionContainer = document.\n     querySelectorAll(\".cc-questions-container\");\n  \tthis.$popupContainer = document.querySelectorAll(\".cc-popup-container\");\n  \tthis.$popupContainer2 = document.querySelectorAll(\".cc-popup-container-2\");\n  \tthis.$body = document.querySelectorAll(\"body\")[0];\n    // this.select = new Select();\n\n  }\n\n\n\n removePrevListener(id : string) : boolean {\n    for(let listener of this.domListeners) {\n      if(listener.id == id) {\n        let index = this.domListeners.indexOf(listener);\n        (window as any).ccsdkDebug ? console.log(\"removing listener\", id) : '';\n        (window as any).ccsdkDebug?console.log(\"removing listener index\",index ):'';\n        this.util.removeListener(this.$body, listener.type, listener.internalHandler);\n          if (index > -1) {\n            this.domListeners.splice(index, 1);\n          }\n        (window as any).ccsdkDebug?console.log(this.domListeners):'';\n      }\n    }\n    return true;\n  }\n\n  setupListeners(){\n    let self = this;\n    let startSurvey = this.util.initListener(\"click\",\".act-cc-survey-start\", function() {\n      if((!self.util.hasClass(self.$startBtn, 'disabled')) && ( self.ccsdk.surveyStatus != 'minimized')){\n        let onSurveyClickEvent = new CustomEvent(Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\n        document.dispatchEvent(onSurveyClickEvent);\n        self.util.addClass(self.$startBtn, 'disabled');\n        self.showLoader();\n        self.startSurvey();\n      }else{\n        self.initSurveyDom();\n      }\n    });\n    this.domListeners.push(startSurvey);    \n    \n\n    startSurvey.internalHandler = this.util.listener(this.$body, startSurvey.type, startSurvey.id, startSurvey.cb);\n\n    let nextQue = this.util.initListener( \"click\",\".act-cc-button-next\", function(){\n      // alert(\"working\");\n      let onSurveyClickEvent = new CustomEvent(Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\n      document.dispatchEvent(onSurveyClickEvent);\n      self.nextQuestion();\n    });\n    this.domListeners.push(nextQue);    \n    \n    nextQue.internalHandler = this.util.listener(this.$body, nextQue.type, nextQue.id, nextQue.cb);\n\n    let prevQue = this.util.initListener( \"click\",\".act-cc-button-prev\", function(){\n      let onSurveyClickEvent = new CustomEvent(Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\n      document.dispatchEvent(onSurveyClickEvent);\n      self.prevQuestion();\n    });\n    this.domListeners.push(prevQue);    \n    \n    prevQue.internalHandler = this.util.listener(this.$body, prevQue.type, prevQue.id, prevQue.cb);\n\n    let closeSurvey = this.util.initListener( \"click\",\".act-cc-button-close\", function(){\n      let onSurveyCloseEvent = new CustomEvent(Constants.SURVEY_CLOSE_EVENT + \"-\" + self.ccsdk.surveyToken);\n      document.dispatchEvent(onSurveyCloseEvent);\n      self.ccsdk.survey.answers = {};\n      self.trackSelects = [];\n      self.destroyListeners();\n      self.util.trigger(document, 'ccclose', undefined);\n      self.bodyElement = <HTMLElement>document.\n      getElementsByTagName(\"body\")[0];\n        self.util.removeClass( self.bodyElement, \"blurr\" )\n      self.ccsdk.survey.destroy();\n      \n    });\n    this.domListeners.push(closeSurvey);    \n    \n\n    closeSurvey.internalHandler = this.util.listener(this.$body, closeSurvey.type, closeSurvey.id, closeSurvey.cb);\n\n    let minSurvey = this.util.initListener( \"click\",\".act-cc-button-minimize\", function(){\n      self.minimizeSurvey();\n    });\n    this.domListeners.push(minSurvey);    \n    \n\n    minSurvey.internalHandler = this.util.listener(self.$body, minSurvey.type, minSurvey.id, minSurvey.cb);\n  }\n\n\n  minimizeSurvey(){\n    // this.$popupContainer[0].removeClass('');\n    this.util.removeClass(this.$popupContainer2[0], 'hide-right-left');\n    this.util.addClass(this.$popupContainer2[0], 'hide-right-left');\n    setTimeout(()=>{\n      this.util.removeClass(this.$popupContainer2[0], 'show-slide');\n    },200);\n    this.util.removeClass(this.$popupContainer[0], 'hide-right-left');\n    this.util.addClass(this.$popupContainer[0], 'hide-right-left');\n    setTimeout(()=>{\n      this.util.addClass(this.$popupContainer[0], 'show-slide');\n    },200);\n    this.ccsdk.surveyStatus = 'minimized';\n    let resumeText = this.ccsdk.config.resumeButtonText ? this.ccsdk.config.resumeButtonText : 'Resume' ;\n    this.$startBtn.innerHTML = resumeText;\n    this.util.removeClass(this.$startBtn, 'disabled');\n    \n    //update all start btns\n    // Array.prototype.forEach.call($startBtn, (el, i) => {\n    //   el.innerHTML = resumeText;\n    // });\n\n  }\n\n  destroyListeners(){\n    // (window as any).ccsdkDebug?console.log(\"Removing all listeners\"):'';\n    for(let listener of this.domListeners) {\n      this.util.removeListener(this.$body, listener.type, listener.internalHandler);\n    }\n    for (let listener of this.ccsdk.survey.domListeners) {\n      this.util.removeListener(this.$body, listener.type, listener.internalHandler);\n    }\n    if (this.ccsdk.survey.languageSelect) {\n      this.ccsdk.survey.languageSelect.destroyListeners();\n    }\n    if(this.select){\n      this.select.destroyListeners();\n    }\n    \n  }\n\n  startSurvey(){\n    this.ccsdk.survey.cancelKillWelcomeQuestion();\n    this.ccsdk.getSurveyData();\n  }\n\n  initSurveyDom(){\n    this.domSelectElements();\n    // (window as any).ccsdkDebug?console.log(\"click in setup listener survey start\"):'';\n    this.util.addClassAll(this.$popupContainer2, 'show-slide');\n    this.util.removeClass(this.$popupContainer[0], 'show-slide');\n    if (this.ccsdk.surveyStatus == 'minimized') {\n      //resume survey\n    } else {\n      //start survey\n      //check if only one language is configured\n      (window as any).ccsdkDebug ?console.log(this.ccsdk.surveyData):'';\n      if(typeof this.ccsdk.surveyData.translated == undefined || Object.keys(this.ccsdk.surveyData.translated).length < 1){\n        this.loadFirstQuestion(); \n      }else{\n        this.ccsdk.survey.displayLanguageSelector();\n      }\n    }\n  }\n\n  updateProgress(){\n    let el = <HTMLElement>document.querySelectorAll(\"#progress-line\")[0];\n\t\tel.style.width = (this.qIndex/this.ccsdk.survey.questionsToDisplay.length)*100 + '%';\n\t}\n\n\tloadFirstQuestion(){\n\t\t// applyRuleToAllEl(this.$questionContainer, );\n\t\t// this.util.removeClassAll(this.$questionContainer, 'show-slide');\n    // this.util.addClass(this.$questionContainer, 'show-slide');\n    \n    this.loadQuestionSpecifics(this.$questionContainer, 0);\n    this.util.removeClassAll(this.$questionContainer[0].firstChild, 'show-slide');\n    this.util.addClass(this.$questionContainer[0].firstChild, 'show-slide');\n    let leftIcon : any = this.util.get('.act-cc-button-prev');\n    this.util.addClassAll(leftIcon , 'hide-slide');\n    let onSurveyQuestionEvent = new CustomEvent(Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken);\n    document.dispatchEvent(onSurveyQuestionEvent);\n\t}\n\n\tnextQuestion(){\n    (window as any).ccsdkDebug ? console.log('next question q response init', this.qResponse) : '';\n    // console.log('next question q response init',this.qResponse);\n    //empty the domListner\n    // this.util.removeAllListeners(this.domListeners);\n    let onSurveyQuestionEvent = new CustomEvent(Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken);\n    document.dispatchEvent(onSurveyQuestionEvent);\n    //submit the current response\n    // (window as any).ccsdkDebug?console.log('submit ',this.qResponse.type, this.qResponse):'';\n    let isRequired : boolean = false;\n    let q : HTMLElement = this.$questionContainer[0].firstChild;\n    // (window as any).ccsdkDebug?console.log(this.$questionContainer):'';\n    let span: Element = this.$questionContainer[0].firstChild.querySelectorAll(\".cc-question-container__required\")[0]\n    let validationSpan: Element = this.$questionContainer[0].firstChild.querySelectorAll(\".cc-question-container__validation\")[0]\n    if(span)\n      this.util.removeClass(span, \"show\");\n    if(validationSpan)  \n      this.util.removeClass(validationSpan, \"show\");\n\n\n    //check if question is required \n    isRequired = q.getAttribute('data-required').toLowerCase() == 'true' ? true : false;\n    // console.log('required check',Object.keys(this.qResponse).length, isRequired, this.qResponse);\n    // if (isRequired && Object.keys(this.qResponse).length === 0) {\n    if (isRequired && (Object.keys(this.qResponse).length === 0) ){\n      if (span) {\n        this.util.addClass(span, \"show\");\n        this.util.removeClass(span, \"hide\");\n      }\n      return;\n    } else if (isRequired && (!this.qResponse.text) && (!this.qResponse.number) ){\n      if (span) {\n        this.util.addClass(span, \"show\");\n        this.util.removeClass(span, \"hide\");\n      }\n      return;\n    } else {\n      if (span) {\n        this.util.removeClass(span, \"show\");\n        this.util.addClass(span, \"hide\");\n      }\n\n\n\n\n    //check if validationRegex is set and is fulfilled\n    let validationRegex = this.ccsdk.survey.questionsToDisplay[this.qIndex].validationRegex\n    if(validationRegex){\n      (window as any).ccsdkDebug ?console.log('validationRegex', validationRegex):'';\n      (window as any).ccsdkDebug ?console.log('response', this.qResponse):'';\n      let pattern = validationRegex.match(new RegExp('^/(.*?)/([gimy]*)$'));\n      let regex = new RegExp(validationRegex);\n        if (this.qResponse.text){\n          console.log('test regex text', regex.test(this.qResponse.text));\n          if (regex.test(this.qResponse.text)){\n            this.util.removeClass(validationSpan, \"show\");\n            this.util.addClass(validationSpan, \"hide\");\n          }else{\n            if (validationSpan) {\n              this.util.addClass(validationSpan, \"show\");\n              this.util.removeClass(validationSpan, \"hide\");\n            }\n            return;\n          }\n        }\n      else if (this.qResponse.number) {\n          (window as any).ccsdkDebug ?console.log('test regex text', regex.test(this.qResponse.number)):'';\n        \n          if (regex.test(this.qResponse.number)) {\n            this.util.removeClass(validationSpan, \"show\");\n            this.util.addClass(validationSpan, \"hide\");\n          } else {\n            if (validationSpan) {\n              this.util.addClass(validationSpan, \"show\");\n              this.util.removeClass(validationSpan, \"hide\");\n            }\n            return;\n          }\n      }\n      \n    }\n\n    \n\n      if (this.qResponse !== 'undefined'){\n        // (window as any).ccsdkDebug?console.log('qindex ' + this.qIndex):'';\n        if(typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined'\n          && this.qResponse.type == this.ccsdk.survey.answers[this.currentQuestionId].type\n          && this.qResponse.text == this.ccsdk.survey.answers[this.currentQuestionId].text\n          && this.qResponse.number == this.ccsdk.survey.answers[this.currentQuestionId].number\n        ) {\n          console.log('no submit');\n          //don't submit if already submitted.\n        } else if (typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined'\n          &&  !this.qResponse.text\n          &&  !this.qResponse.number\n        ) {\n          // console.log('no submit 2');\n          \n          //previous entry filled\n        }else {\n        // (window as any).ccsdkDebug?console.log('submitting ' + this.currentQuestionId):'';\n        // console.log(this.qResponse);\n          \n        let qId = this.qResponse.questionId?this.qResponse.questionId:this.currentQuestionId;\n        this.submitQuestion(this.qIndex, this.qResponse, this.qResponse.type, qId);\n        //save response\n        this.ccsdk.survey.answers[this.currentQuestionId] = JSON.parse(JSON.stringify(this.qResponse));\n        }\n      }\n    }\n    ConditionalFlowFilter.filterQuestion(this.ccsdk.survey, this.ccsdk.survey.questionsToDisplay[this.qIndex]);\n    // console.log(this.ccsdk.survey.questionsToDisplay);\n    //go to next question\n    this.qIndex++;\n    //reset the post parameters\n    // this.qResponse = typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined' ? JSON.parse(JSON.stringify(this.ccsdk.survey.answers[this.currentQuestionId])) : {};\n    // this.qResponse = {};\n    let nextButtonState : string = 'initial';\n    // (window as any).ccsdkDebug?console.log(this.$questionContainer):'';\n    let nextQ : HTMLElement = this.$questionContainer;\n    // (window as any).ccsdkDebug?console.log(this.qIndex):'';\n\t\tif(this.qIndex == this.ccsdk.survey.questionsToDisplay.length){\n      //Last run to show thank you message\n      let leftIcon : any = this.util.get('.act-cc-button-prev');\n      let rightIcon : any = this.util.get('.cc-icon-right');\n      let nextIcon : any = this.util.get('.act-cc-button-next');\n      this.util.addClassAll(leftIcon , 'hide');\n      this.util.addClassAll(rightIcon , 'hide');\n      this.util.addClassAll(nextIcon , 'hide');\n      this.util.trigger(document,'ccdone', undefined);\n      this.util.removeClass(this.$questionContainer[0].firstChild, 'show-slide');\n      this.updateProgress();\n\t\t}else{\n      if((this.qIndex > this.ccsdk.survey.questionsToDisplay.length)){\n        //reset the counter to show first question\n          this.qIndex = 0;\n        }\n        //repopulate qResponse based on answers.\n        (window as any).ccsdkDebug ?console.log('previous answer', this.ccsdk.survey.answers[this.currentQuestionId]):'';\n        this.qResponse = typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined' ? JSON.parse(JSON.stringify(this.ccsdk.survey.answers[this.currentQuestionId])) : {};\n        // this.util.removeClassAll(this.$questionContainer[0].firstChild, 'show-slide');\n    \t\t// this.util.addClass(nextQ, 'show-slide');\n        this.updateProgress();\n        this.loadQuestionSpecifics(nextQ, this.qIndex);\n        this.util.addClass(this.$questionContainer[0].firstChild, 'show-slide');\n        // if(nextButtonState === 'dirty'){\n          // this.submitQuestion(this.qIndex, 'test', 'multiline');\n        // }\n    }\n    if(this.qIndex == 0) {\n      let leftIcon : any = this.util.get('.act-cc-button-prev');\n      this.util.addClassAll(leftIcon , 'hide-slide');\n    } else {\n      let leftIcon : any = this.util.get('.act-cc-button-prev');\n      this.util.addClass(leftIcon[0] , 'show-slide');\n      this.util.removeClass(leftIcon[0] , 'hide-slide');\n    }\n    (window as any).ccsdkDebug?console.log('next question q response end', this.qResponse):'';\n    // this.qResponse = {};\n    \n\t}\n\n\tprevQuestion(){\n    this.qIndex--;\n\t\tif(!this.ccsdk.survey.questionsToDisplay.length || this.qIndex < 0){\n      this.qIndex = 0;\n      return;\n      // this.qIndex = this.$questionContainer.length - 1;\n    }\n    (window as any).ccsdkDebug?console.log(this.qIndex):'';\n    let onSurveyQuestionEvent = new CustomEvent(Constants.SURVEY_QUESTION_EVENT + \"-\" + this.ccsdk.surveyToken);\n    document.dispatchEvent(onSurveyQuestionEvent);\n    //re populate qResponse based on answers.\n    // this.util.removeClassAll(this.$questionContainer,'show-slide');\n    this.loadQuestionSpecifics(null, this.qIndex);\n    this.qResponse = typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined' ? JSON.parse(JSON.stringify(this.ccsdk.survey.answers[this.currentQuestionId])) : {};\n    (window as any).ccsdkDebug?console.log(\"prevQuestion qResponse\", this.qResponse):'';\n\t\tthis.util.addClass(this.$questionContainer[0].firstChild, 'show-slide');\n    this.updateProgress();\n    if(this.qIndex == 0) {\n      let leftIcon : any = this.util.get('.act-cc-button-prev');\n      this.util.addClassAll(leftIcon , 'hide-slide');\n      this.util.removeClassAll(leftIcon , 'show-slide');\n    }\n  }\n  \n  showLoader(){\n    let $loader = document.querySelectorAll(\".cc-loaderimg\")[0];\n    this.util.addClass($loader, 'show');\n    this.util.removeClass($loader, 'hide');\n  }\n  hideLoader(){\n    let $loader = document.querySelectorAll(\".cc-loaderimg\")[0];\n    this.util.removeClass($loader, 'show');\n    this.util.addClass($loader, 'hide');\n  }\n\n  appendInBody(html){\n    document.querySelectorAll(\"body\")[0].insertAdjacentHTML(\n      'afterbegin', html\n    );\n    //force update domSelect\n    this.domSelectElements();\n  }\n\n  replaceInQuestionsContainer(html) {\n    this.$questionContainer[0].innerHTML = html;\n    this.domSelectElements();\n  }\n\n  appendInQuestionsContainer(html){\n    document.querySelectorAll(\".cc-questions-container\")[0].insertAdjacentHTML(\n      'afterbegin', html\n    );\n    //force update domSelect\n    this.domSelectElements();\n  }\n\n  showWelcomeContainer(){\n    setTimeout(() => {\n      let startContainer = <HTMLElement>document.\n      querySelectorAll(\".act-cc-welcome-question-box\")[0];\n      let bodyElement = <HTMLElement>document.\n      getElementsByTagName(\"body\")[0];\n        this.util.addClass(startContainer, \"show-slide\");\n        this.util.addClass( bodyElement, \"blurr\" );\n    },200);\n    this.$startBtn = document.querySelectorAll(\".act-cc-survey-start\")[0];\n    \n  }\n\n  showLanguageSelector(){\n    setTimeout(() => {\n      let startContainer = <HTMLElement>document.\n      querySelectorAll(\".cc-language-selector\")[0];\n      let bodyElement = <HTMLElement>document.\n      getElementsByTagName(\"body\")[0];\n        this.util.addClass(startContainer, \"show-slide\");\n        this.util.addClass( bodyElement, \"blurr\" );\n    },200);\n    let self = this;\n    let languageSelect = this.util.initListener(\"click\",\".cc-language-select\", function() {\n      // let onSurveyClickEvent = new CustomEvent(Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\n      // document.dispatchEvent(onSurveyClickEvent);\n      //select language show next question.\n      // self.startSurvey();\n      self.ccsdk.config.language = \"default\";\n      self.ccsdk.config.language = \"\"; //language selection from menu then show first question\n    });\n\n    languageSelect.internalHandler = this.util.listener(this.$body, languageSelect.type, languageSelect.id, languageSelect.cb);\n  }\n\n  getSurveyContainer( token : string){\n    return document.querySelectorAll(\"#\"+token+\"-survey\")[0];\n  }\n\n  getWelcomeContainer( token : string){\n    return document.querySelectorAll(\"#\"+token+\"-welcome\")[0];\n  }\n\n  loadQuestionSpecifics( q : HTMLElement, index : number){\n    let self : DomSurvey = this;\n    this.$questionContainer[0].innerHTML = \"\";\n    let compiledTemplate = this.ccsdk.survey.compileTemplate(this.ccsdk.survey.questionsToDisplay[index]);\n    this.$questionContainer[0].innerHTML += compiledTemplate;\n    let qType : string = this.$questionContainer[0].firstChild.getAttribute('data-type');\n    let qId : string = this.$questionContainer[0].firstChild.getAttribute('data-id');\n    this.qResponse = {};\n    // (window as any).ccsdkDebug?console.log(\"QTYIPE AND QID \" , qType, qId):'';\n    this.currentQuestionId = qId.substring(2, qId.length);\n    switch(qType){\n        case 'scale':\n          let allOptions1 : any = document.querySelectorAll('#' + qId + ' .option-number-item');\n          let optionWidth1 = (100/allOptions1.length) - .6;\n          // (window as any).ccsdkDebug?console.log(\"Option width\", allOptions1, optionWidth1.toFixed(2)):'';\n          // self.util.css(allOptions1 , 'width',  optionWidth1.toFixed(1) + '%');\n          this.setupListenersQuestionScale(index, qId);\n        break;\n        case 'nps':\n          this.setupListenersQuestionNPS(index, qId);\n        break;\n        case 'multiline':\n          this.setupListenersQuestionMultiline(index, qId);\n          break;\n        case 'select':\n          if(typeof this.select !== 'undefined' ){\n            this.select.destroyListeners();\n          }\n          this.setupListenersQuestionSelect(index, qId);\n          break;\n        case 'radio':\n        this.setupListenersQuestionRadio(index, qId);\n        break;        \n        case 'radioImage':\n        this.setupListenersQuestionRadioImage(index, qId);\n        break;\n        case 'checkbox':\n          this.setupListenersQuestionCheckbox(index, qId);\n          break;\n        case 'star':\n          this.setupListenersQuestionStar(index, qId);\n          break;\n        case 'smile':\n          this.setupListenersQuestionSmile(index, qId);\n          break;\n        case 'csat':\n          this.setupListenersQuestionCsat(index, qId);\n          break;\n        case 'slider':\n          this.setupListenersQuestionSlider(index, qId);\n          break;\n        case 'singleline':\n          this.setupListenersQuestionSingleline(index, qId);\n          break;\n        case 'number':\n        this.setupListenersQuestionNumber(index, qId);  \n        default:\n        break;\n    }\n  }\n\n  // question specific listeners\n\n  setupListenersQuestionScale( index : number, qId : string ){\n    var self : DomSurvey = this;\n    let selectedRating = <HTMLElement>document.querySelectorAll('#' + qId + ' .cc-nps-selected-rating')[0];\n    let selectedRating1 = <HTMLElement>document.querySelectorAll('#' + qId + ' .cc-nps-selected-rating')[1];\n    //add id too.\n    if(this.util.checkIfListenerExists('#' + qId + ' .option-number-item', this.domListeners)) {\n      // return;\n      (window as any).ccsdkDebug?console.log(\"scale question - previous listeners exists\"):'';\n      this.removePrevListener('#' + qId + ' .option-number-item');\n    }\n\n    //set previous value\n    let questionId : any ;\n    questionId = qId.substring(2, qId.length);\n    (window as any).ccsdkDebug?console.log('scale question',this.ccsdk.survey.answers[questionId]):'';\n    if(typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== ''){\n      let previousValue =  this.ccsdk.survey.answers[questionId].number;\n      let previousSelection = document.querySelectorAll('#' + qId + ' .option-number-item[data-rating=\"' + previousValue + '\"]')[0];\n      (window as any).ccsdkDebug?console.log('scale previous selection', previousSelection):'';\n      if(typeof previousSelection !== 'undefined'){\n        this.util.addClass(previousSelection, \"selected\");\n        self.qResponse.type = 'scale';\n        self.qResponse.text = null;\n        self.qResponse.number = previousValue;\n        self.qResponse.questionId = qId;\n        selectedRating.innerHTML = previousValue;\n        selectedRating1.innerHTML = previousValue;\n        \n      }\n      \n    }\n\n    let ref = this.util.initListener('click', '#' + qId + ' .option-number-item', function(){\n      let allOptions : any = document.querySelectorAll('#' + qId + ' .option-number-item');\n      \n      let rating : number = this.getAttribute('data-rating');\n      self.util.removeClassAll(allOptions, \"selected\");\n      self.util.addClass(this, \"selected\");\n      // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\n      // (window as any).ccsdkDebug?console.log('Scale selected',rating):'';\n      self.qResponse.type = 'scale';\n      self.qResponse.text = null;\n      self.qResponse.number = rating;\n      self.qResponse.questionId = qId;\n      selectedRating.innerHTML = '' + rating;\n      selectedRating1.innerHTML = ''+ rating;\n      \n      //move to next question automagically\n      // alert('calling next questions inside scale');\n      let onSurveyClickEvent = new CustomEvent(Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\n      document.dispatchEvent(onSurveyClickEvent);\n      setTimeout(()=>{\n        self.nextQuestion();\n      },500);\n      // self.util.trigger(document,'q-answered', {\n      //   index : index,\n      //   rating : rating,\n      //   type : 'scale'\n      // });\n    });\n    this.domListeners.push(ref);    \n    \n    ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\n  }\n\n  setupListenersQuestionNPS( index : number, qId : string ){\n    var self : DomSurvey = this;\n    let selectedRating = <HTMLElement> document.querySelectorAll('#' + qId + ' .cc-nps-selected-rating')[0];\n    let allOptions : any = document.querySelectorAll('#' + qId + ' .option-number-item');\n    \n    //add id too.\n    if(this.util.checkIfListenerExists('#' + qId + ' .option-number-item', this.domListeners)) {\n      //remove listeners\n      (window as any).ccsdkDebug?console.log(\"nps question - previous listeners exists\"):'';\n      this.removePrevListener('#' + qId + ' .option-number-item');\n      \n    }\n\n    //set previous value\n    let questionId : any ;\n    questionId = qId.substring(2, qId.length);\n    (window as any).ccsdkDebug?console.log('nps question',this.ccsdk.survey.answers[questionId]):'';\n    if(typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== ''){\n      let previousValue =  this.ccsdk.survey.answers[questionId].number;\n      let previousSelection = document.querySelectorAll('#' + qId + ' .option-number-item[data-rating=\"' + previousValue + '\"]')[0];\n      (window as any).ccsdkDebug?console.log('nps previous selection', previousSelection):'';\n      if(typeof previousSelection !== 'undefined'){\n        this.util.addClass(previousSelection, \"selected\");\n        let $mobileRating = document.querySelectorAll(\".act-cc-nps-selected-rating\")[0];\n        $mobileRating.innerHTML = previousValue;\n        self.qResponse.type = 'nps';\n        self.qResponse.text = null;\n        self.qResponse.number = previousValue;\n        self.qResponse.questionId = qId;\n      }\n      \n    }\n\n    // (window as any).ccsdkDebug?console.log(self.domListeners):'';\n    let ref = this.util.initListener('click', '#' + qId + ' .option-number-item', function(){\n      let rating : number = this.getAttribute('data-rating');\n      self.util.removeClassAll(allOptions, \"selected\");\n      self.util.addClass(this, \"selected\");\n      // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\n      // (window as any).ccsdkDebug?console.log('Scale selected',rating):'';\n      self.qResponse.type = 'nps';\n      self.qResponse.text = null;\n      self.qResponse.number = rating;\n      self.qResponse.questionId = qId;\n       selectedRating.innerHTML = ''+ rating;\n      //move to next question automagically\n\n      let onSurveyClickEvent = new CustomEvent(Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\n      document.dispatchEvent(onSurveyClickEvent);\n      \n      // alert('calling next questions inside scale');\n      setTimeout(() => {\n        self.nextQuestion();\n      }, 500);\n      // self.util.trigger(document,'q-answered', {\n      //   index : index,\n      //   rating : rating,\n      //   type : 'scale'\n      // });\n    });\n    this.domListeners.push(ref);    \n    \n    ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\n  }\n\n  setupListenersQuestionCheckbox( index : number, qId : string ){\n    var self : DomSurvey = this;\n    if(this.util.checkIfListenerExists('#'+qId+' .cc-checkbox', this.domListeners)) {\n      // return;\n      (window as any).ccsdkDebug?console.log(\"checkbox question - previous listeners exists\"):'';\n      this.removePrevListener('#' + qId + ' .cc-checkbox');\n    }\n\n    //set previous value\n    let questionId: any;\n    questionId = qId.substring(2, qId.length);\n    (window as any).ccsdkDebug?console.log('radio question', this.ccsdk.survey.answers[questionId]):'';\n    if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\n      let previousValues = this.ccsdk.survey.answers[questionId].text;\n      if(previousValues){\n        previousValues = previousValues.split(',');\n        for(let previousValue of previousValues){\n          let previousSelection = document.querySelectorAll('#' + qId + ' input[value=\"' + previousValue + '\"]')[0];\n          (window as any).ccsdkDebug?console.log('radio previous selection', previousSelection):'';\n          if (typeof previousSelection !== 'undefined') {\n            this.util.addClass(previousSelection, \"selected\");\n            previousSelection.setAttribute('checked', 'checked');\n            self.qResponse.type = 'checkbox';\n            self.qResponse.text = previousValue;\n            self.qResponse.number = null;\n            self.qResponse.questionId = qId;\n          }\n        }\n      }\n    }\n\n    let ref = this.util.initListener('click', '#'+qId+' .cc-checkbox', function(){\n      // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox input');\n      // let rating : number = this.querySelectorAll('input')[0].value;\n      let rating : string = [].filter.call(document.querySelectorAll('#'+qId+' .cc-checkbox input'), function(c) {\n        return c.checked;\n      }).map(function(c) {\n        return c.value;\n      }).join(',');\n\n      // (window as any).ccsdkDebug?console.log('Checkbox selected',rating):'';\n      self.qResponse.type = 'checkbox';\n      self.qResponse.text = rating;\n      self.qResponse.number = null;\n      self.qResponse.questionId = qId;\n      //move to next question automagically\n      // self.nextQuestion();\n    });\n    this.domListeners.push(ref);        \n    let onSurveyClickEvent = new CustomEvent(Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\n    document.dispatchEvent(onSurveyClickEvent);\n    ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\n  }\n\n  setupListenersQuestionRadio(index : number, qId : string ){\n    var self : DomSurvey = this;\n    if(this.util.checkIfListenerExists('#'+qId+' .cc-checkbox input', this.domListeners)) {\n      // return;\n      //remove listeners\n      (window as any).ccsdkDebug?console.log(\"radio question - previous listeners exists\"):'';\n      this.removePrevListener('#' + qId + ' .cc-checkbox input');\n    }\n\n    //set previous value\n    let questionId: any;\n    questionId = qId.substring(2, qId.length);\n    (window as any).ccsdkDebug?console.log('radio question', this.ccsdk.survey.answers[questionId]):'';\n    if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\n      let previousValue = this.ccsdk.survey.answers[questionId].number;\n      let previousSelection = document.querySelectorAll('#' + qId + ' input[value=\"' + previousValue + '\"]')[0];\n      (window as any).ccsdkDebug?console.log('radio previous selection', previousSelection):'';\n      if (typeof previousSelection !== 'undefined') {\n        this.util.addClass(previousSelection, \"selected\");\n        previousSelection.setAttribute('checked', 'checked');\n        self.qResponse.type = 'radio';\n        self.qResponse.text = null;\n        self.qResponse.number = previousValue;\n        self.qResponse.questionId = qId;\n      }\n\n    }\n\n\n    let ref = this.util.initListener('click', '#'+qId+' .cc-checkbox input', function(){\n      // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox');\n      let rating : number = this.value;\n      // self.util.removeClassAll(allOptions, \"selected\");\n      // self.util.addClass(this, \"selected\");\n      // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\n      // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\n      self.qResponse.type = 'radio';\n      self.qResponse.text = null;\n      self.qResponse.number = rating;\n      self.qResponse.questionId = qId;\n      let onSurveyClickEvent = new CustomEvent(Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\n      document.dispatchEvent(onSurveyClickEvent);\n      //move to next question automagically\n      setTimeout(() => {\n        self.nextQuestion();\n      }, 500);\n    });\n    this.domListeners.push(ref);    \n    \n    ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\n  }\n\n  setupListenersQuestionRadioImage(index : number, qId : string ){\n    var self : DomSurvey = this;\n    if(this.util.checkIfListenerExists('#'+qId+' .cc-checkbox input', this.domListeners)) {\n      (window as any).ccsdkDebug ? console.log(\"radio image question - previous listeners exists\") : '';\n      this.removePrevListener('#' + qId + ' .cc-checkbox input');\n    }\n\n    //set previous value\n    let questionId: any;\n    questionId = qId.substring(2, qId.length);\n    (window as any).ccsdkDebug ? console.log('radio image question', this.ccsdk.survey.answers[questionId]) : '';\n    if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\n      let previousValue = this.ccsdk.survey.answers[questionId].text;\n      let previousSelection = document.querySelectorAll('#' + qId + ' input[value=\"' + previousValue + '\"]')[0];\n      (window as any).ccsdkDebug ? console.log('radio image previous selection', previousSelection) : '';\n      if (typeof previousSelection !== 'undefined') {\n        this.util.addClass(previousSelection, \"selected\");\n        previousSelection.setAttribute('checked', 'checked');\n        self.qResponse.type = 'radioImage';\n        self.qResponse.text = previousValue;\n        self.qResponse.number = null;\n        self.qResponse.questionId = qId;\n      }\n\n    }\n\n    let ref = this.util.initListener('click', '#'+qId+' .cc-checkbox input', function(){\n      // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox');\n      let rating : string = this.value;\n      // self.util.removeClassAll(allOptions, \"selected\");\n      // self.util.addClass(this, \"selected\");\n      // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\n      // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\n      self.qResponse.type = 'radioImage';\n      self.qResponse.text = rating;\n      self.qResponse.number = null;\n      self.qResponse.questionId = qId;\n      let onSurveyClickEvent = new CustomEvent(Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\n      document.dispatchEvent(onSurveyClickEvent);\n      //move to next question automagically\n      setTimeout(() => {\n        self.nextQuestion();\n      }, 500);\n    });\n    this.domListeners.push(ref);    \n    \n    ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\n  }\n\n  setupListenersQuestionStar(index : number, qId : string ){\n    var self : DomSurvey = this;\n    if(this.util.checkIfListenerExists('#'+qId+' .option-star-box', this.domListeners)) {\n      //remove listeners\n      (window as any).ccsdkDebug?console.log(\"smile question - previous listeners exists\"):'';\n      this.removePrevListener('#'+qId+' .option-smile-box');\n         \n    }\n    //set previous value\n    let questionId : any ;\n    questionId = qId.substring(2, qId.length);\n    (window as any).ccsdkDebug?console.log('star question',this.ccsdk.survey.answers[questionId]):'';\n    if(typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== ''){\n      let previousValue =  this.ccsdk.survey.answers[questionId].number;\n      let previousSelection = document.querySelectorAll('#' + qId + ' .option-star-box[data-rating=\"' + previousValue + '\"]')[0];\n      (window as any).ccsdkDebug?console.log('star previous selection', previousSelection):'';\n      if(typeof previousSelection !== 'undefined' && previousSelection != null){      \n        this.util.addClass(previousSelection, \"selected\");\n        self.qResponse.type = 'star';\n        self.qResponse.text = null;\n        self.qResponse.number = previousValue;\n        self.qResponse.questionId = qId;\n      }\n      \n    }\n    let ref = this.util.initListener('click', '#'+qId+' .option-star-box', function(){\n      let allOptions : any = document.querySelectorAll('#'+qId+' .option-star-box');\n      let rating : number = this.getAttribute('data-rating');\n      self.util.removeClassAll(allOptions, \"selected\");\n      self.util.addClass(this, \"selected\");\n\n      //select previous sibling\n      // let child : any = this.previousSibling;\n      // while( ( child = child.previousSibling) != null ){\n      //   self.util.addClass(child, \"selected\");\n      // }\n\n\n      // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\n      // (window as any).ccsdkDebug?console.log('Star selected',rating):'';\n      self.qResponse.type = 'star';\n      self.qResponse.text = null;\n      self.qResponse.number = rating;\n      self.qResponse.questionId = qId;\n\n      let onSurveyClickEvent = new CustomEvent(Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\n      document.dispatchEvent(onSurveyClickEvent);\n      //move to next question automagically\n      setTimeout(() => {\n        self.nextQuestion();\n      }, 500);\n    });\n    this.domListeners.push(ref);    \n    \n    ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\n  }\n\n  setupListenersQuestionSmile(index : number, qId : string ){\n    var self : DomSurvey = this;\n    if(this.util.checkIfListenerExists('#'+qId+' .option-smile-box', this.domListeners)) {\n      //remove listeners\n      (window as any).ccsdkDebug?console.log(\"smile question - previous listeners exists\"):'';\n      this.removePrevListener('#'+qId+' .option-smile-box');\n      \n    }\n    //set previous value\n    let questionId : any ;\n    questionId = qId.substring(2, qId.length);\n    (window as any).ccsdkDebug?console.log('smile question',this.ccsdk.survey.answers[questionId]):'';\n    if(typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== ''){\n      let previousValue =  this.ccsdk.survey.answers[questionId].number;\n      let previousSelection = document.querySelectorAll('#' + qId + ' .option-smile-box[data-rating=\"' + previousValue + '\"]')[0];\n      (window as any).ccsdkDebug?console.log('smile previous selection', previousSelection):'';\n      if(typeof previousSelection !== 'undefined' && previousSelection != null){\n        \n        this.util.addClass(previousSelection, \"selected\");\n        self.qResponse.type = 'smile';\n        self.qResponse.text = null;\n        self.qResponse.number = previousValue;\n        self.qResponse.questionId = qId;\n      }\n      \n    }\n  \n    let ref = this.util.initListener('click', '#'+qId+' .option-smile-box', function(){\n      let allOptions : any = document.querySelectorAll('#'+qId+' .option-smile-box');\n      let rating : number = this.getAttribute('data-rating');\n      self.util.removeClassAll(allOptions, \"selected\");\n      self.util.addClass(this, \"selected\");\n\n      //select previous siblings\n      // let child : any = this.previousSibling;\n      // while( ( child = child.previousSibling) != null ){\n      //   self.util.addClass(child, \"selected\");\n      // }\n      // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\n      // (window as any).ccsdkDebug?console.log('Smile selected',rating):'';\n      self.qResponse.type = 'smile';\n      self.qResponse.text = null;\n      self.qResponse.number = rating;\n      self.qResponse.questionId = qId;\n\n      let onSurveyClickEvent = new CustomEvent(Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\n      document.dispatchEvent(onSurveyClickEvent);\n      //move to next question automagically\n      setTimeout(() => {\n        self.nextQuestion();\n      }, 500);\n    });\n    this.domListeners.push(ref);    \n    \n    ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\n  }\n\n\n  setupListenersQuestionCsat(index: number, qId: string) {\n    var self: DomSurvey = this;\n    if (this.util.checkIfListenerExists('#' + qId + ' .option-smile-box', this.domListeners)) {\n      //remove listeners\n      (window as any).ccsdkDebug?console.log(\"csat question - previous listeners exists\"):'';\n      this.removePrevListener('#' + qId + ' .option-smile-box');\n    }\n    //set previous value\n    let questionId: any;\n    questionId = qId.substring(2, qId.length);\n    (window as any).ccsdkDebug?console.log('csat question', this.ccsdk.survey.answers[questionId]):'';\n    if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\n      let previousValue = this.ccsdk.survey.answers[questionId].number;\n      let previousSelection = document.querySelectorAll('#' + qId + ' .option-smile-box[data-rating=\"' + previousValue + '\"]')[0];\n      (window as any).ccsdkDebug?console.log('csat previous selection', previousSelection):'';\n      if (typeof previousSelection !== 'undefined' && previousSelection != null) {\n\n        this.util.addClass(previousSelection, \"selected\");\n        previousSelection.querySelectorAll(\"input\")[0].setAttribute('checked', 'checked');\n        self.qResponse.type = 'smile';\n        self.qResponse.text = null;\n        self.qResponse.number = previousValue;\n        self.qResponse.questionId = qId;\n        \n      }\n\n    }\n\n    let ref = this.util.initListener('click', '#' + qId + ' .option-smile-box', function () {\n      let allOptions: any = document.querySelectorAll('#' + qId + ' .option-smile-box');\n      let rating: number = this.getAttribute('data-rating');\n      self.util.removeClassAll(allOptions, \"selected\");\n      self.util.addClass(this, \"selected\");\n      this.querySelectorAll(\"input\")[0].setAttribute('checked', 'checked');\n      let child: any = this.previousSibling;\n      while ((child = child.previousSibling) != null) {\n        // (window as any).ccsdkDebug?console.log('questionscale', 'previousSiblings', child):'';\n        self.util.addClass(child, \"selected\");\n      }\n      // this.parentNode.querySelectorAll(\".option-number-input\")[0].value = rating ;\n      // (window as any).ccsdkDebug?console.log('Smile selected',rating):'';\n      self.qResponse.type = 'smile';\n      self.qResponse.text = null;\n      self.qResponse.number = rating;\n      self.qResponse.questionId = qId;\n\n      let onSurveyClickEvent = new CustomEvent(Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\n      document.dispatchEvent(onSurveyClickEvent);\n      //move to next question automagically\n      setTimeout(() => {\n        self.nextQuestion();\n      }, 500);\n    });\n    this.domListeners.push(ref);\n\n    ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\n  }\n\n  setupListenersQuestionMultiline( index : number, qId : string ){\n    let self : DomSurvey = this;\n    let multilineRes : string = '';\n    if(this.util.checkIfListenerExists('#'+qId, this.domListeners)) {\n          //remove listeners\n          (window as any).ccsdkDebug?console.log(\"multiine question - previous listeners exists\"):'';\n          this.removePrevListener('#'+qId);\n             \n        }\n        //set previous value\n        let questionId : any ;\n        questionId = qId.substring(2, qId.length);\n        (window as any).ccsdkDebug?console.log('multiine question',this.ccsdk.survey.answers[questionId]):'';\n        if(typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== ''){\n          let previousValue =  this.ccsdk.survey.answers[questionId].text;\n          (window as any).ccsdkDebug?console.log('multiine input box',document.querySelectorAll('#' + qId)[0]):'';\n          let previousSelection = <HTMLInputElement>document.querySelectorAll('#' + qId)[0];\n          (window as any).ccsdkDebug?console.log('multiine previous selection', previousSelection):'';\n          (window as any).ccsdkDebug?console.log('multiine previous value', previousValue):'';\n          if(typeof previousSelection !== 'undefined' && \n           previousSelection != null &&\n           typeof previousValue !== 'undefined'){\n            previousSelection.value = previousValue ;  \n            self.qResponse.type = 'multiline';\n            self.qResponse.text = previousValue;\n            self.qResponse.number = null;\n            self.qResponse.questionId = qId;    \n          }\n        }\n    let ref = this.util.initListener('change', '#'+qId,function(){\n      multilineRes = this.value;\n      self.qResponse.type = 'multiline';\n      self.qResponse.text = multilineRes;\n      self.qResponse.number = null;\n      self.qResponse.questionId = qId;\n    });\n    this.domListeners.push(ref);    \n    \n    ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\n  }\n\n  setupListenersQuestionSingleline( index : number, qId : string ){\n    let self : DomSurvey = this;\n    let singlelineRes : string = '';\n    if(this.util.checkIfListenerExists('#'+qId, this.domListeners)) {\n      //remove listeners\n      (window as any).ccsdkDebug?console.log(\"singleline question - previous listeners exists\"):'';\n      this.removePrevListener('#'+qId);\n         \n    }\n    //set previous value\n    let questionId : any ;\n    questionId = qId.substring(2, qId.length);\n    (window as any).ccsdkDebug?console.log('singleline question',this.ccsdk.survey.answers[questionId]):'';\n    if(typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== ''){\n      let previousValue =  this.ccsdk.survey.answers[questionId].text;\n      (window as any).ccsdkDebug?console.log('singleline input box',document.querySelectorAll('#' + qId)[0]):'';\n      let previousSelection = <HTMLInputElement>document.querySelectorAll('#' + qId)[0];\n      (window as any).ccsdkDebug?console.log('singleline previous selection', previousSelection):'';\n      (window as any).ccsdkDebug?console.log('singleline previous value', previousValue):'';\n      if(typeof previousSelection !== 'undefined' && \n       previousSelection != null &&\n       typeof previousValue !== 'undefined'){\n        previousSelection.value = previousValue ;     \n        self.qResponse.type = 'singleline';\n        self.qResponse.text = previousValue;\n        self.qResponse.number = null;\n        self.qResponse.questionId = qId; \n      }\n    }\n    let ref = this.util.initListener('change', '#'+qId,function(){\n      singlelineRes = this.value;\n      self.qResponse.type = 'singleline';\n      self.qResponse.text = singlelineRes;\n      self.qResponse.number = null;\n      self.qResponse.questionId = qId;\n    });\n    this.domListeners.push(ref);    \n    \n    ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\n\n    console.log('singleline qResponse',self.qResponse);\n  }\n\n  setupListenersQuestionNumber(index: number, qId: string) {\n    let self: DomSurvey = this;\n    let numberRes: string = '';\n    if (this.util.checkIfListenerExists('#' + qId, this.domListeners)) {\n      //remove listeners\n      (window as any).ccsdkDebug ? console.log(\"number question - previous listeners exists\") : '';\n      this.removePrevListener('#' + qId);\n\n    }\n    //set previous value\n    let questionId: any;\n    questionId = qId.substring(2, qId.length);\n    (window as any).ccsdkDebug ? console.log('number question', this.ccsdk.survey.answers[questionId]) : '';\n    if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {\n      let previousValue = this.ccsdk.survey.answers[questionId].number;\n      (window as any).ccsdkDebug ? console.log('number input box', document.querySelectorAll('#' + qId)[0]) : '';\n      let previousSelection = <HTMLInputElement>document.querySelectorAll('#' + qId)[0];\n      (window as any).ccsdkDebug ? console.log('number previous selection', previousSelection) : '';\n      (window as any).ccsdkDebug ? console.log('number previous value', previousValue) : '';\n      if (typeof previousSelection !== 'undefined' &&\n        previousSelection != null &&\n        typeof previousValue !== 'undefined') {\n        previousSelection.value = previousValue;\n        self.qResponse.type = 'number';\n        self.qResponse.text = null;\n        self.qResponse.number = previousValue;\n        self.qResponse.questionId = qId;\n      }\n    }\n    let ref = this.util.initListener('change', '#' + qId, function () {\n      numberRes = this.value;\n      self.qResponse.type = 'number';\n      self.qResponse.text = null ;\n      self.qResponse.number = numberRes;\n      self.qResponse.questionId = qId;\n    });\n    this.domListeners.push(ref);\n\n    ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\n  }\n\n  setupListenersQuestionSlider( index : number, qId : string ){\n    let self : DomSurvey = this;\n    let sliderRes : string = '';\n    let slider = new Slider();\n    let sliderInput = <HTMLInputElement>document.querySelectorAll('#' + qId + \" input\")[0];    \n    \n    if(this.util.checkIfListenerExists('#' + qId + \" input\", this.domListeners)) {\n      // return;\n      \n    }\n    //set previous value\n    let questionId : any ;\n    questionId = qId.substring(2, qId.length);\n    (window as any).ccsdkDebug?console.log('slider question',this.ccsdk.survey.answers[questionId]):'';\n    if(typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== ''){\n      let previousValue =  this.ccsdk.survey.answers[questionId].number;\n      (window as any).ccsdkDebug?console.log('slider input box',document.querySelectorAll('#' + qId)[0]):'';\n      let previousSelection = <HTMLInputElement>document.querySelectorAll('#' + qId + \" .act-slider-tip\")[0];\n      (window as any).ccsdkDebug?console.log('slider previous selection', previousSelection):'';\n      (window as any).ccsdkDebug?console.log('slider previous value', previousValue):'';\n      if(typeof previousSelection !== 'undefined' && \n       previousSelection != null &&\n       typeof previousValue !== 'undefined'){\n        previousSelection.innerHTML = previousValue ;  \n        sliderInput.value = previousValue;\n        self.qResponse.type = 'slider';\n        self.qResponse.number = previousValue;\n        self.qResponse.text = null;\n        self.qResponse.questionId = qId;\n      }\n    }\n    let ref = this.util.initListener(\"change\", '#' + qId + \" input\", function(){\n      sliderRes = this.value;\n      self.qResponse.type = 'slider';\n      self.qResponse.number = sliderRes;\n      self.qResponse.text = null;\n      self.qResponse.questionId = qId;\n      //move to next question automagically\n      // self.nextQuestion();\n    });\n    this.domListeners.push(ref);    \n    \n    ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\n  }\n\n  setupListenersQuestionSelect( index : number, qId : string ){\n    let self : DomSurvey = this;\n    let questionId : any ;\n    (window as any).ccsdkDebug?console.log('select que', this.domListeners):'';\n    questionId = qId.substring(2, qId.length);\n    // (window as any).ccsdkDebug?console.log(this.ccsdk.survey.answers[questionId]):'';\n    // (window as any).ccsdkDebug?console.log(this.ccsdk.survey.surveyAnswers[questionId]):'';\n    if(this.util.checkIfListenerExists('#'+qId+\" .cc-select-options .cc-select-option\", this.domListeners)) {\n      (window as any).ccsdkDebug?console.log('select que listner exists'):'';\n      this.removePrevListener('#'+qId+\" .cc-select-options .cc-select-option\");\n    \n      // return;\n    }\n    (window as any).ccsdkDebug?console.log('select que'):'';\n    \n    // if(!self.util.arrayContains.call(self.trackSelects, qId)){\n      (window as any).ccsdkDebug?console.log('select que initialize select'):'';\n      \n      self.select = new Select(qId);\n      self.select.destroyListeners();\n      self.select.init(qId);\n      \n      if(typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== ''){\n        if (this.ccsdk.survey.answers[questionId].text){\n          self.select.setValue(this.ccsdk.survey.answers[questionId].text);\n          self.select.selectOptions(this.ccsdk.survey.answers[questionId].text);\n          self.qResponse.type = 'select';\n          self.qResponse.text = this.ccsdk.survey.answers[questionId].text;\n          self.qResponse.number = null;\n          self.qResponse.questionId = qId;\n        }\n      }\n      self.trackSelects.push(qId);\n    // }\n    let selectRes : string = '';\n    let ref = this.util.initListener('click', '#'+qId+\" .cc-select-options .cc-select-option\",function(){\n      // selectRes = this.getAttribute('data-value');\n      selectRes = document.querySelectorAll('#'+qId+\" .cc-select-trigger\")[0].innerHTML;\n      // (window as any).ccsdkDebug?console.log(selectRes):'';\n      self.qResponse.type = 'select';\n      self.qResponse.text = selectRes;\n      self.qResponse.number = null;\n      self.qResponse.questionId = qId;\n      //move to next question automagically\n\n      let onSurveyClickEvent = new CustomEvent(Constants.SURVEY_CLICK_EVENT + \"-\" + self.ccsdk.surveyToken);\n      document.dispatchEvent(onSurveyClickEvent);\n      \n      // self.nextQuestion();\n    });\n    \n    // this.util.removeListener(this.$body, ref.type, listener.internalHandler);    \n    this.domListeners.push(ref);    \n    \n    ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);\n\n  }\n\n\n\n  // addListenersNextButtonSubmit(index : number, data : any, type : string){\n  //   let self : DomSurvey = this;\n  //   let btnNext = self.util.get('.act-cc-button-next')[0];\n  //   self.util.on('click', btnNext, this.submitQuestion(\n  //     index, data, type\n  //   ));\n  //\n  // }\n\n  // removeListenersNextButtonSubmit(index : number, data : any, type : string){\n  //   let self : DomSurvey = this;\n  //   let btnNext = self.util.get('.act-cc-button-next');\n  //   self.util.on('click', btnNext, this.submitQuestion(\n  //     index, data, type\n  //   ));\n  //   self.util.off('click', btnNext, this.submitQuestion(\n  //     index, data, type\n  //   ));\n  // }\n\n  submitQuestion(index : number, data : any, type : string, qId : string){\n      // (window as any).ccsdkDebug?console.log('type', type ,'res',data):'';\n      this.util.trigger(document,'q-answered', {\n        index : index,\n        data : data,\n        type : type,\n        questionId : qId.substring(2, qId.length)\n      });\n  }\n\n  \n\n}\n\nexport { DomSurvey }\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/dom/DomSurvey.ts","import { DomUtilities } from './DomUtilities';\n\nclass Theme{\n   util : DomUtilities;\n   brandColorDark : string;\n   brandColorWhite : string;\n\t constructor(brandColor, time){\n\t this.util = new DomUtilities();\n\t this.brandColorDark = this.util.shadeBlendConvert(-0.3, brandColor, undefined);\n\t this.brandColorWhite= this.util.shadeBlendConvert(0.1, brandColor, undefined);\n\n\t\tlet css : string = '\\\n\t\t#progressBar{ \\\n\t\t\tbackground : '+ this.brandColorDark+';\\\n\t\t}\\\n\t\t#progress-line{ \\\n\t\t\tbackground: '+ brandColor+' \\\n\t\t}\\\n\t\t.cc-checkbox input[type=\"checkbox\"]:checked + label:before {\\\n\t\t\tbackground:'+ brandColor +';\\\n\t\t}\\\n\t\t.overlay.glass{\\\n\t\t\tbackground-color:'+ this.util.hexToRGB(brandColor,.5)+';\\\n\t\t}\\\n\t\t.cc-checkbox input[type=\"checkbox\"]:checked + label:after {\\\n\t\t\tborder-color: #fff;\\\n\t\t}\\\n\t\t.cc-checkbox input[type=\"radio\"]:checked + label:before {\\\n\t\t\tborder-color: '+brandColor+';\\\n\t\t}\\\n\t\t.cc-checkbox input[type=\"radio\"]:checked + label:before {\\\n\t\t\tborder-color: '+brandColor+';\\\n\t\t}\\\n\t\t.cc-checkbox input[type=\"radio\"]:checked + label:after {\\\n\t\t\tbackground: '+brandColor+';\\\n\t\t}\\\n\t\t.form-control:focus {\\\n\t\t\tborder-color: '+brandColor+';\\\n\t\t}\\\n\t\t.cc-message-box__btn{\\\n\t\t\tbackground: '+brandColor+';\\\n\t\t\tcolor:#fff;\\\n\t\t}\\\n\t\t.submit-icon{\\\n\t\t\t background-image: url(\"data:image/svg+xml,%3Csvg width=\\'47px\\' height=\\'47px\\' viewBox=\\'0 0 47 47\\' version=\\'1.1\\' xmlns=\\'http://www.w3.org/2000/svg\\' xmlns:xlink=\\'http://www.w3.org/1999/xlink\\'%3E%3C!-- Generator: Sketch 46 %2844423%29 - http://www.bohemiancoding.com/sketch --%3E%3Ctitle%3EGroup 16%3C/title%3E%3Cdesc%3ECreated with Sketch.%3C/desc%3E%3Cdefs%3E%3Ccircle id=\\'path-1\\' cx=\\'19.3130459\\' cy=\\'19.3130459\\' r=\\'19.3130459\\'%3E%3C/circle%3E%3Cfilter x=\\'-18.1%25\\' y=\\'-12.9%25\\' width=\\'136.2%25\\' height=\\'136.2%25\\' filterUnits=\\'objectBoundingBox\\' id=\\'filter-2\\'%3E%3CfeOffset dx=\\'0\\' dy=\\'2\\' in=\\'SourceAlpha\\' result=\\'shadowOffsetOuter1\\'%3E%3C/feOffset%3E%3CfeGaussianBlur stdDeviation=\\'2\\' in=\\'shadowOffsetOuter1\\' result=\\'shadowBlurOuter1\\'%3E%3C/feGaussianBlur%3E%3CfeColorMatrix values=\\'0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.116423234 0\\' type=\\'matrix\\' in=\\'shadowBlurOuter1\\'%3E%3C/feColorMatrix%3E%3C/filter%3E%3C/defs%3E%3Cg id=\\'Page-1\\' stroke=\\'none\\' stroke-width=\\'1\\' fill=\\'none\\' fill-rule=\\'evenodd\\'%3E%3Cg id=\\'1-copy-20\\' transform=\\'translate%28-1246.000000, -664.000000%29\\'%3E%3Cg id=\\'Group-16\\' transform=\\'translate%281250.000000, 666.000000%29\\'%3E%3Cg id=\\'Oval-4\\'%3E%3Cuse fill=\\'white\\' fill-opacity=\\'1\\' filter=\\'url%28%23filter-2%29\\' xlink:href=\\'%23path-1\\'%3E%3C/use%3E%3Cuse fill=\\''+encodeURI(brandColor)+'\\' fill-rule=\\'evenodd\\' xlink:href=\\'%23path-1\\'%3E%3C/use%3E%3C/g%3E%3Cg id=\\'Group-5\\' transform=\\'translate%2812.000000, 11.000000%29\\' fill-rule=\\'nonzero\\' fill=\\'%23FFFFFF\\'%3E%3Cg id=\\'fast-forward-arrows\\' transform=\\'translate%286.173934, 0.000000%29\\'%3E%3Cpolygon id=\\'Shape\\' points=\\'0.993357559 0 0 0.993357559 7.30823082 8.3015552 0 15.6097197 0.993357559 16.6030772 9.29491276 8.3015552\\'%3E%3C/polygon%3E%3C/g%3E%3Cg id=\\'fast-forward-arrows-copy\\'%3E%3Cpolygon id=\\'Shape\\' points=\\'0.993357559 0 0 0.993357559 7.30823082 8.3015552 0 15.6097197 0.993357559 16.6030772 9.29491276 8.3015552\\'%3E%3C/polygon%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/svg%3E\");\\\n\t\t }\\\n\t\thtml[dir=\"rtl\"] .submit-icon{\\\n\t\t\tbackground-image: url(\"data:image/svg+xml,%3Csvg width=\\'47px\\' height=\\'47px\\' viewBox=\\'0 0 47 47\\' version=\\'1.1\\' xmlns=\\'http://www.w3.org/2000/svg\\' xmlns:xlink=\\'http://www.w3.org/1999/xlink\\'%3E%3C!-- Generator: Sketch 46.2 %2844496%29 - http://www.bohemiancoding.com/sketch --%3E%3Cdesc%3ECreated with Sketch.%3C/desc%3E%3Cdefs%3E%3C/defs%3E%3Cg id=\\'Page-1\\' stroke=\\'none\\' stroke-width=\\'1\\' fill=\\'none\\' fill-rule=\\'evenodd\\'%3E%3Cg id=\\'Submit_Icon\\'%3E%3Cg id=\\'Oval-4\\'%3E%3Cg id=\\'path-1-link\\' fill-rule=\\'nonzero\\' fill=\\'%23white\\'%3E%3Ccircle id=\\'path-1\\' cx=\\'19.3130459\\' cy=\\'19.3130459\\' r=\\'19.3130459\\'%3E%3C/circle%3E%3C/g%3E%3Cg id=\\'path-1-link\\' fill=\\''+encodeURI(brandColor)+'\\'%3E%3Ccircle id=\\'path-1\\' cx=\\'19.3130459\\' cy=\\'19.3130459\\' r=\\'19.3130459\\'%3E%3C/circle%3E%3C/g%3E%3C/g%3E%3Cg id=\\'Group-5\\' transform=\\'translate%2812.000000, 11.000000%29\\' fill-rule=\\'nonzero\\' fill=\\'%23ffffff\\'%3E%3Cg id=\\'fast-forward-arrows\\' transform=\\'translate%2811.173934, 8.500000%29 scale%28-1, 1%29 translate%28-11.173934, -8.500000%29 translate%286.173934, 0.000000%29\\'%3E%3Cpolygon id=\\'Shape\\' points=\\'0.993357559 0 0 0.993357559 7.30823082 8.3015552 0 15.6097197 0.993357559 16.6030772 9.29491276 8.3015552\\'%3E%3C/polygon%3E%3C/g%3E%3Cg id=\\'fast-forward-arrows-copy\\' transform=\\'translate%285.000000, 8.500000%29 scale%28-1, 1%29 translate%28-5.000000, -8.500000%29 \\'%3E%3Cpolygon id=\\'Shape\\' points=\\'0.993357559 0 0 0.993357559 7.30823082 8.3015552 0 15.6097197 0.993357559 16.6030772 9.29491276 8.3015552\\'%3E%3C/polygon%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/svg%3E%0A\");\\\n\t\t}\\\n\t\t.cc-question-container__required-label{\\\n\t\t\tcolor: '+brandColor+';\\\n\t\t}\\\n\t\tinput[type=\"range\"]::-webkit-slider-runnable-track{\\\n\t\t\tbackground: '+brandColor+' !important;\\\n\t\t\t   background: -moz-linear-gradient(-45deg, '+brandColor+' 0%, '+this.brandColorDark+' 100%)!important;\\\n\t\t\t   background: -webkit-linear-gradient(-45deg, '+brandColor+' 0%,'+this.brandColorDark+' 100%)!important;\\\n\t\t\t   background: linear-gradient(135deg, '+brandColor+' 0%,'+this.brandColorDark+' 100%)!important;\\\n\t\t\t   filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='+brandColor+ ', endColorstr='+this.brandColorDark+',GradientType=1 );\\\n\t\t   }\\\n\t\tinput[type=\"range\"]::-moz-range-track {\\\n\t\t\tbackground: '+brandColor+' !important;\\\n\t\t\tbackground: -moz-linear-gradient(-45deg, '+brandColor+' 0%, '+this.brandColorDark+' 100%)!important;\\\n\t\t\tbackground: -webkit-linear-gradient(-45deg, '+brandColor+' 0%,'+this.brandColorDark+' 100%)!important;\\\n\t\t\tbackground: linear-gradient(135deg, '+brandColor+' 0%,'+this.brandColorDark+' 100%)!important;\\\n\t\t\tfilter: progid:DXImageTransform.Microsoft.gradient( startColorstr='+brandColor+ ', endColorstr='+this.brandColorDark+',GradientType=1 );\\\n\t\t}\\\n\t\t   input[type=\"range\"]::-webkit-slider-thumb{\\\n\t\t\tborder: 1px solid '+brandColor+' ;\\\n\t\t\tbackground-color: #fff;\\\n\t\t   }\\\n\t\t   input[type=\"range\"]::-moz-range-thumb {\\\n\t\t\tborder: 1px solid '+brandColor+' ;\\\n\t\t\tbackground-color: #fff;\\\n\t\t   }\\\n\t\t   svg.timer circle {\\\n\t\t\tanimation: countdown '+time+'s linear 1 forwards;\\\n\t\t\tstroke: '+brandColor+';\\\n\t\t   }\\\n\t\t   input[type=range].selected::-webkit-slider-thumb {\\\n\t\t\t\tbackground-color: '+brandColor+';\\\n\t\t\t}\\\n\t\t\tinput[type = range].selected::-moz - range - thumb {\\\n\t\t\t\tbackground-color: '+brandColor+';\\\n\t\t\t}\\\n\t\t\t.cc-checkbox label:hover:before{\\\n\t\t\t\tborder: solid 1px '+ brandColor + ';\\\n\t\t\t}\\\n\t\t @media (max-width: 767px){\\\n\t \t\t\t.overlay.glass{\\\n\t \t\t\tbackground-color:rgba(255,255,255,.85);\\\n\t \t\t\tbackground-image:none;\\\n\t\t\t\t}\\\n\t\t\t\t.cc-popup-container{\\\n\t\t\t\t\tbackground-color : transparent;\\\n\t\t\t\t}\\\n\t\t\t\t.cc-popup-container .overlay.glass{\\\n\t\t\t\t\tbackground-color : ' + this.util.hexToRGB(brandColor,.9)+';\\\n\t\t\t\t}\\\n\t\t\t\t.cc-popup-container .cc-message-box .cc-message-box__text{\\\n\t\t\t\t\tcolor:#fff;\\\n\t\t\t\t}\\\n\t\t';\n\t\tthis.util.appendStyle(css);\n\n\t}\n}\nexport { Theme }\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/dom/Theme.ts","import { DomUtilities } from './DomUtilities';\nclass Slider{\n  inputRange : any;\n  rangeTip : any;\n  maxValue : number;\n  speed : number;\n  currValue : number;\n  rafID : any;\n  timeout : any;\n  util : any\n\n  constructor(){\n   this.inputRange = document.getElementsByClassName('range')[0];\n   this.rangeTip = this.inputRange.parentNode.querySelectorAll(\".act-slider-tip\")[0];\n   this.util = new DomUtilities();\n  //  this.maxValue = 100; // the higher the smoother when dragging\n   this.speed = 5;\n   \n\n  // set min/max value\n  // this.inputRange.min = 0;\n  this.inputRange.min = this.inputRange.getAttribute('min');\n  // this.inputRange.max = this.maxValue;\n  this.inputRange.max = this.inputRange.getAttribute('max');\n  this.setupListeners();\n  }\n\n  setupListeners(){\n    let self : Slider = this;\n   \n    // bind events\n    this.inputRange.addEventListener('mouseup', this.clearTo, false);\n    // this.inputRange.addEventListener('mousedown', this.updateRangeTip, false);\n    // this.inputRange.addEventListener('mousedown', this.unlockStartHandler, false);\n    // this.inputRange.addEventListener('mousestart', this.unlockStartHandler, false);\n    // this.inputRange.addEventListener('mouseup', this.unlockEndHandler, false);\n    // this.inputRange.addEventListener('touchend', this.unlockEndHandler, false);\n    // move gradient\n    this.inputRange.addEventListener('input', function() {\n      self.updateRangeTip();\n      self.util.addClass(this, 'selected');\n      \n    //Change slide thumb color on way up\n    if (this.value > 20) {\n       self.inputRange.classList.add('ltpurple');\n    }\n    if (this.value > 40) {\n       self.inputRange.classList.add('purple');\n    }\n    if (this.value > 60) {\n       self.inputRange.classList.add('pink');\n    }\n\n    //Change slide thumb color on way down\n    if (this.value < 20) {\n       self.inputRange.classList.remove('ltpurple');\n    }\n    if (this.value < 40) {\n       self.inputRange.classList.remove('purple');\n    }\n    if (this.value < 60) {\n       self.inputRange.classList.remove('pink');\n    }\n  });\n}\n\n\n\n  updateRangeTip(){\n    let self : Slider = this;\n    this.rangeTip.style.display = 'block' ;\n    this.rangeTip.innerHTML = this.inputRange.value;\n    // console.log(( parseFloat(this.inputRange.value)/parseFloat(this.inputRange.max) )*100);\n    // console.log(( parseFloat(this.inputRange.value)/parseFloat(this.inputRange.max) ) * parseFloat(this.inputRange.getBoundingClientRect().width) + \"px\");\n    // this.rangeTip.style.left = ( parseFloat(this.inputRange.value)/parseFloat(this.inputRange.max) ) * parseFloat(this.inputRange.getBoundingClientRect().width) + \"px\" ;\n    \n    // if( parseFloat(this.inputRange.value)/parseFloat(this.inputRange.max) * 100 < 50.0 ) {\n    //   // this.rangeTip.style.left = ( parseFloat(this.inputRange.value)/parseFloat(this.inputRange.max) ) * parseFloat(this.inputRange.getBoundingClientRect().width) + this.rangeTip.getBoundingClientRect().width / 2  + \"px\" ;\n      \n    // } else {\n    //   // this.rangeTip.style.left = ( parseFloat(this.inputRange.value)/parseFloat(this.inputRange.max) ) * parseFloat(this.inputRange.getBoundingClientRect().width) - this.rangeTip.getBoundingClientRect().width / 2 + \"px\" ;\n      \n    // }\n    // if(parseInt(this.rangeTip.style.left) <= 50 ){\n    //   // console.log(\"calc( \"+ this.rangeTip.style.left +\" + \"+ this.rangeTip.getBoundingClientRect().width + \"px )\");\n    //   this.rangeTip.style.left = \" calc( \"+ this.rangeTip.style.left +\" + \"+ 12 + \"px )\";\n    // }else{\n    //   console.log(\"calc( \"+ this.rangeTip.style.left +\" - \"+ this.rangeTip.getBoundingClientRect().width + \"px )\");\n    //   this.rangeTip.style.left = \" calc( \"+ this.rangeTip.style.left +\" - \"+ this.rangeTip.getBoundingClientRect().width + \"px )\";\n    // }\n    // console.log(this.rangeTip.style.left);\n    // if(this.timeout){\n    //   clearTimeout(this.timeout);\n    // }\n    // this.timeout = setTimeout(function(){\n    //   self.rangeTip.style.display = 'none' ;\n    // },300)\n    \n  }\n\n  clearTo(){\n    clearTimeout(this.timeout);\n  }\n\n  // listen for unlock\n  // unlockStartHandler() {\n  //   let self : any = this;\n  //   // clear raf if trying again\n  //   window.cancelAnimationFrame(this.rafID);\n  //   // set to desired value\n  //   this.currValue = +self.value;\n  // }\n\n  // unlockEndHandler() {\n  //   // store current value\n  //   this.currValue = + this.value;\n  //   // determine if we have reached success or not\n  //   if(this.currValue >= this.maxValue) {\n  //      this.successHandler();\n  //   }\n  //   else {\n  //      this.rafID = window.requestAnimationFrame(this.animateHandler);\n  //   }\n  // }\n\n  // handle range animation\n  animateHandler() {\n    // calculate gradient transition\n    var transX = this.currValue - this.maxValue;\n\n    // update input range\n    this.inputRange.value = this.currValue;\n\n    //Change slide thumb color on mouse up\n    if (this.currValue < 20) {\n       this.inputRange.classList.remove('ltpurple');\n    }\n    if (this.currValue < 40) {\n       this.inputRange.classList.remove('purple');\n    }\n    if (this.currValue < 60) {\n       this.inputRange.classList.remove('pink');\n    }\n\n    // determine if we need to continue\n    if(this.currValue > -1) {\n     window.requestAnimationFrame(this.animateHandler);\n    }\n\n    // decrement value\n    this.currValue = this.currValue - this.speed;\n  }\n\n  // handle successful unlock\n  successHandler(){\n  }\n\n\n\n}\n\nexport { Slider };\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/dom/Slider.ts","//Manages trigger.\r\nimport { Cookie } from \"./helpers/Cookie\";\r\nimport { Constants } from \"./Constants\";\r\nimport { Triggers } from \"./Triggers\";\r\n//collect initial data\r\n//if on site time is null, add on site time\r\nif(Cookie.get(Constants.CCTriggerSiteStartTime) == null) {\r\n  Cookie.set(Constants.CCTriggerSiteStartTime, new Date(), undefined, undefined);\r\n}\r\n//always add on page Time\r\nCookie.set(Constants.CCTriggerPageStartTime, new Date(), undefined, undefined);\r\n\r\nlet sitePageViewCount = Cookie.get(Constants.CCTriggerSitePageViewCount);\r\nif( sitePageViewCount == null) {\r\n  Cookie.set(Constants.CCTriggerSitePageViewCount, 1, undefined, undefined);\r\n} else {\r\n  sitePageViewCount = (parseInt(sitePageViewCount) + 1).toString();\r\n  Cookie.set(Constants.CCTriggerSitePageViewCount, sitePageViewCount, undefined, undefined);\r\n}\r\n\r\nlet individualPageViewCount = Cookie.get(Constants.CCTriggerIndividualPageViewCount);\r\nif( individualPageViewCount == null) {\r\n  Cookie.set(Constants.CCTriggerIndividualPageViewCount, 1, undefined, window.location.href);\r\n} else {\r\n  individualPageViewCount = (parseInt(individualPageViewCount) + 1).toString();\r\n  Cookie.set(Constants.CCTriggerIndividualPageViewCount, individualPageViewCount, undefined, window.location.href);\r\n}\r\n\r\n(window as any).click = 0;\r\n\r\nwindow.onscroll = function (e) {  \r\n  // called when the window is scrolled.  \r\n    let doc = document.documentElement;\r\n    let left = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);\r\n    let top = (window.pageYOffset || doc.scrollTop)  - (doc.clientTop || 0);\r\n    (window as any).ccsdkTopOffset = top;\r\n    TriggerManager.processScrollTriggers(top);\r\n}\r\n\r\n\r\ndocument.onclick = function(e) {\r\n  (window as any).click++;\r\n}\r\n\r\n\r\n//TriggerManager adds to survey Queue\r\nclass TriggerManager {\r\n\r\n  static triggerInterval : any = null;\r\n  static triggerInstances : any = {};\r\n\r\n  constructor() {\r\n    //initialize triggers\r\n    //add those triggers which aren't completed yet.\r\n  }\r\n\r\n  static addSurvey(surveyId : any, trigger : Triggers) {\r\n    TriggerManager.triggerInstances[surveyId] = trigger;\r\n    if(Object.keys(TriggerManager.triggerInstances).length >= 1) {\r\n      (window as any).ccsdkDebug ?console.log(TriggerManager.triggerInterval):'';\r\n      if(TriggerManager.triggerInterval == null) {\r\n        (window as any).ccsdkDebug ?console.log(\"TriggerHandler : Setting up Interval Trigger Handlers.\"):'';\r\n        TriggerManager.triggerInterval = setInterval(TriggerManager.processIntervalTriggers, 1000);\r\n      }\r\n      //processing sequential triggers if any.\r\n      // console.log(\"TriggerHandler : Processing sequential triggers for  \" + surveyId);\r\n      // TriggerManager.processTriggersBySurveyId(surveyId);\r\n    }\r\n  }\r\n\r\n  static removeSurvey(surveyId : string) {\r\n    delete TriggerManager.triggerInstances[surveyId];\r\n    if(Object.keys(TriggerManager.triggerInstances).length == 0) {\r\n      clearInterval(TriggerManager.triggerInterval);\r\n    }\r\n  }\r\n\r\n  static processIntervalTriggers() {\r\n    //if some survey is already running skip processing surveys for now?or queue it?.\r\n    Cookie.set(Constants.CCTriggerPageElapsedTime, new Date(), undefined, window.location.href);\r\n    Cookie.set(Constants.CCTriggerSiteElapsedTime, new Date(), undefined, undefined);\r\n    //set cookies and call every process Interval Triggers.\r\n    for(let trigger in TriggerManager.triggerInstances) {\r\n      TriggerManager.triggerInstances[trigger].processIntervalTriggers();\r\n      TriggerManager.triggerInstances[trigger].processConditionalTriggers();\r\n    }\r\n  }\r\n\r\n  static processScrollTriggers(scrollNow) {\r\n    for(let trigger in TriggerManager.triggerInstances) {\r\n      //process all scroll triggers.\r\n      TriggerManager.triggerInstances[trigger].processScrollTriggers(scrollNow);\r\n    }\r\n  }\r\n\r\n  static disableTriggers(surveyId : string) {\r\n    TriggerManager.triggerInstances[surveyId].disableTriggers();\r\n  }\r\n\r\n};\r\n\r\n\r\n\r\nexport { TriggerManager };\n\n\n// WEBPACK FOOTER //\n// ./src/TriggerManager.ts","import { Cookie } from \"./helpers/Cookie\";\nimport { Constants } from \"./Constants\";\nimport { SurveyManager } from \"./SurveyManager\";\nimport { TriggerUtils } from \"./helpers/TriggerUtils\";\nimport { CCSDKConfig } from \"./interfaces/CCSDKConfig\";\n\nclass Triggers {\n\n  ccsdk : any;\n  pageCountTrigger : boolean;\n  pageTimeTrigger : boolean;\n  siteCountTrigger : boolean;\n  siteTimeTrigger : boolean;\n  urlParamTrigger : boolean;\n  notUrlParamTrigger : boolean;\n  utmParamTrigger : boolean;\n  scrollPixelsTrigger : boolean;\n  minPageCount : number;\n  minSiteCount : number;\n  minPageTime : number;\n  minSiteTime : number;\n  minScrollPixels : number;\n  utm : string;\n  inUrl : RegExp;\n  notinUrl : RegExp;\n  pageCountTriggerEnabled : boolean;\n  siteCountTriggerEnabled : boolean;\n  pageTimeTriggerEnabled : boolean;\n  siteTimeTriggerEnabled : boolean;\n  urlParamTriggerEnabled : boolean;\n  notUrlParamTriggerEnabled : boolean;\n  utmParamTriggerEnabled : boolean;\n  scrollPixelsTriggerEnabled : boolean;\n\n  conditionalTriggers : any;\n\n  constructor(ccsdk) {\n    this.ccsdk = ccsdk;\n    this.pageCountTrigger = false;\n    this.siteCountTrigger = false;\n    this.pageTimeTrigger = false;\n    this.siteTimeTrigger = false;\n    this.urlParamTrigger = false;\n    this.notUrlParamTrigger = false;\n    this.utmParamTrigger = false;\n    this.scrollPixelsTrigger = false;\n\n    //disable all triggers.\n    this.pageCountTriggerEnabled = false;\n    this.siteCountTriggerEnabled = false;\n    this.pageTimeTriggerEnabled = false;\n    this.siteTimeTriggerEnabled = false;\n    this.urlParamTriggerEnabled = false;\n    this.notUrlParamTriggerEnabled = false;\n    this.utmParamTriggerEnabled = false;\n    this.scrollPixelsTriggerEnabled = false;\n    this.conditionalTriggers = {};\n  }\n\n\n  enableClickTrigger(target : string, cb : any) {\n    let item = document.querySelectorAll(target)[0];\n    if(typeof item !== 'undefined') {\n      item.addEventListener('click',cb);\n    }\n  }\n\n  enablePageCountTrigger(minPageCount : number) {\n    this.minPageCount = minPageCount;\n    this.pageCountTriggerEnabled = true;\n    this.TriggerPopUpByPageCount();\n  }\n\n  enableSiteCountTrigger(minSiteCount : number) {\n    this.minSiteCount = minSiteCount;\n    this.pageCountTriggerEnabled = true;\n    this.TriggerPopUpByPageCount();\n  }\n\n  enablePageTimeTrigger(minPageTime : number) {\n    this.minPageTime = minPageTime;\n    this.pageTimeTriggerEnabled = true;\n    this.TriggerPopUpByTimeSpentOnPage();\n  }\n\n  enableSiteTimeTrigger(minSiteTime : number) {\n    this.minSiteTime = minSiteTime;\n    this.siteTimeTriggerEnabled = true;\n    this.TriggerPopUpByTimeSpentOnSite();\n  }\n\n  enablePopUpByURLPatternTrigger(urlPattern : RegExp) {\n    this.inUrl = urlPattern;\n    this.urlParamTriggerEnabled = true;\n    this.TriggerPopUpByURLPattern();\n  }\n\n  enablePopUpByNotURLPatternTrigger(urlPattern : RegExp) {\n    this.notinUrl = urlPattern;\n    this.notUrlParamTriggerEnabled = true;\n    this.TriggerPopUpByNotURLPattern();\n  }\n\n  enablePopUpByUTMPatternTrigger(urlPattern : string) {\n    this.utm = urlPattern;\n    this.utmParamTriggerEnabled = true;\n    this.TriggerPopUpByUTMParameter();\n  }\n\n  enableScrollPixelsTrigger(minScrollPixels : number) {\n    this.minScrollPixels = minScrollPixels;\n    this.scrollPixelsTriggerEnabled = true;\n\n  }\n\n  processIntervalTriggers() {\n    //if survey already launched\n    //skip processing.\n    if( this.ccsdk.surveyRunning || this.ccsdk.surveyDone ) {\n      return;\n    }\n    this.TriggerPopUpByTimeSpentOnPage();\n    this.TriggerPopUpByTimeSpentOnSite();\n  }\n\n  setConditionalTriggers(config : CCSDKConfig) {\n    (window as any).ccsdkDebug?console.log(config.grepURL):'';\n    //\n    if ((typeof config.click !== 'undefined') && (config.click != 0)) {\n      this.conditionalTriggers.click = config.click;\n    }\n    if ((typeof config.onExitDetect !== 'undefined')) {\n      this.conditionalTriggers.onExitDetect = config.onExitDetect;\n    }\n    // if ((typeof config.cssSelector !== 'undefined')) {\n    //   this.conditionalTriggers.cssSelector = config.cssSelector;\n    // }\n    if ((typeof config.waitSeconds !== 'undefined') && (config.waitSeconds !== 0)) {\n      this.conditionalTriggers.waitSeconds = config.waitSeconds;\n    }\n    if ((typeof config.scrollPercent !== 'undefined') && (config.scrollPercent !== 0)) {\n      this.conditionalTriggers.scrollPercent = config.scrollPercent;\n    }\n    if ((typeof config.grepInvertURL !== 'undefined') && (config.grepInvertURL)){\n      this.conditionalTriggers.grepInvertURL = config.grepInvertURL;\n    }\n    if ((typeof config.grepURL !== 'undefined') && (config.grepURL)) {\n      this.conditionalTriggers.grepURL = config.grepURL;\n    }\n\n  }\n\n  processConditionalTriggers() {\n    //gather all conditional triggers and process them.\n    let self = this;\n    let isEnabled = true;\n    if( this.ccsdk.surveyRunning || this.ccsdk.surveyDone ) {\n      (window as any).ccsdkDebug?console.log('returning'):'';\n      return;\n    }\n    if(typeof this.conditionalTriggers !== 'undefined') {\n      if(Object.keys(this.conditionalTriggers).length == 0) {\n        return false;\n      }\n      for(let conditionalTrigger in this.conditionalTriggers) {\n        if(this.conditionalTriggers[conditionalTrigger] != null) {\n          switch(conditionalTrigger) {\n            case \"onExitDetect\":\n              let onExitDetect = self.ccsdk.util.initListener(\"mouseout\", \"document\", function () {\n                (window as any).ccsdkDebug?console.log(\"Mouse out\"):'';\n\n              });\n\n              onExitDetect.internalHandler = self.ccsdk.util.listener(document, onExitDetect.type, onExitDetect.id, onExitDetect.cb);\n\n            break;\n            case \"click\":\n              //find click count on screen\n              //calculate click count\n              // if((window as any).click > this.conditionalTriggers.click) {\n              //   return SurveyManager.addSurvey(this.ccsdk.surveyToken);\n              // }\n              isEnabled = isEnabled && ((window as any).click >= this.conditionalTriggers.click);\n            break;\n            case \"waitSeconds\":\n              let pageStartTime = new Date(Cookie.get(Constants.CCTriggerPageStartTime)).getTime();\n              let pageTime = new Date(Cookie.get(Constants.CCTriggerPageElapsedTime)).getTime();\n              isEnabled = isEnabled && TriggerUtils.checkTimeCondition(pageTime, pageStartTime, this.conditionalTriggers[conditionalTrigger]);\n              (window as any).ccsdkDebug?console.log('waitSeconds enabled', isEnabled):'';\n            break;\n            case \"scrollPercent\":\n              //fill it with current scroll position\n              isEnabled = isEnabled && TriggerUtils.checkScroll( (window as any).ccsdkTopOffset, this.conditionalTriggers[conditionalTrigger]);\n              (window as any).ccsdkDebug?console.log('scrollPercent enabled', isEnabled):'';\n              \n            break;\n            case \"grepURL\":\n              isEnabled = isEnabled && TriggerUtils.checkInUrl(this.conditionalTriggers[conditionalTrigger]);\n              (window as any).ccsdkDebug?console.log('grepURL enabled', isEnabled):'';\n            break;\n            case \"grepInvertURL\":\n                isEnabled = isEnabled && !TriggerUtils.checkInUrl(this.conditionalTriggers[conditionalTrigger]);\n                (window as any).ccsdkDebug?console.log('grepInvertURL enabled', isEnabled):'';\n            break;\n          }\n        }\n      }\n      if(isEnabled) {\n        SurveyManager.addSurvey(this.ccsdk.surveyToken);\n      }\n    } else {\n      //do nothing.\n    }\n  }\n\n  processNonConditionalTriggers() {\n    //process all non conditional one shot triggers here?\n  }\n\n  processScrollTriggers(scrollNow : number) {\n    this.TriggerPopUpByScrollPixels(scrollNow);\n  }\n\n  TriggerPopUpByPageCount() {\n    let pageCount = parseInt(Cookie.get(Constants.CCTriggerSitePageViewCount));\n    if(pageCount == NaN) {\n      pageCount = 0;\n    }\n    //!(window as any).globalSurveyRunning && \n    if(!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.pageCountTrigger && TriggerUtils.checkPageCount(pageCount, this.minPageCount)) {\n      this.pageCountTrigger = true;\n      //displayQuestion\n      // this.ccsdk.initSurvey();\n      SurveyManager.addSurvey(this.ccsdk.surveyToken);\n    } else {\n      //already executed.\n      //or condition not satisified yet.\n    }\n  }\n\n  \n  //minPageTime in seconds\n  TriggerPopUpByTimeSpentOnPage() {\n    let pageStartTime = new Date(Cookie.get(Constants.CCTriggerPageStartTime)).getTime();\n    let pageTime = new Date(Cookie.get(Constants.CCTriggerPageElapsedTime)).getTime();\n\n    //!(window as any).globalSurveyRunning && \n    if(!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.pageTimeTrigger && TriggerUtils.checkTimeCondition(pageTime, pageStartTime,this.minPageTime) ) {\n      this.pageTimeTrigger = true;\n      //displayQuestion\n      // this.ccsdk.initSurvey();\n      SurveyManager.addSurvey(this.ccsdk.surveyToken);\n    } else {\n      //already executed.\n      //or condition not satisified yet.\n    }\n  }\n\n  TriggerPopUpByTimeSpentOnSite() {\n    let siteStartTime = new Date(Cookie.get(Constants.CCTriggerSiteStartTime)).getTime();\n    let siteTime = new Date(Cookie.get(Constants.CCTriggerSiteElapsedTime)).getTime();\n    //!(window as any).globalSurveyRunning && \n    if(!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.siteTimeTrigger && TriggerUtils.checkTimeCondition(siteTime, siteStartTime, this.minSiteTime) ) {\n      this.siteTimeTrigger = true;\n      //displayQuestion\n      // this.ccsdk.initSurvey();\n      SurveyManager.addSurvey(this.ccsdk.surveyToken);\n    } else {\n      //already executed.\n      //or condition not satisified yet.\n    }\n  }\n\n  TriggerPopUpByInactivity() {\n    \n  }\n\n  TriggerPopUpByScrollPixels(scrollNow : number) {\n    //!(window as any).globalSurveyRunning && \n    if(!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.scrollPixelsTrigger && TriggerUtils.checkScroll(scrollNow, this.minScrollPixels) ) {\n      this.scrollPixelsTrigger = true;\n      // this.ccsdk.initSurvey();\n      SurveyManager.addSurvey(this.ccsdk.surveyToken);\n      // this.ccsdk.initSurvey();\n      // SurveyManager.addSurvey(this.ccsdk.surveyToken);\n    } else {\n      //already executed?\n      //or condition not satisified yet.\n    }\n  }\n\n  //run only once?\n  TriggerPopUpByURLPattern() {\n    //!(window as any).globalSurveyRunning && \n    if(!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.urlParamTrigger && TriggerUtils.checkInUrl(this.inUrl)) {\n      this.urlParamTrigger = true;\n      // this.ccsdk.initSurvey();\n      SurveyManager.addSurvey(this.ccsdk.surveyToken);\n    } else {\n\n    }\n  }\n\n  TriggerPopUpByNotURLPattern() {\n    //!(window as any).globalSurveyRunning && \n    if(!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.notUrlParamTrigger && !TriggerUtils.checkInUrl(this.inUrl)) {\n      this.notUrlParamTrigger = true;\n      // this.ccsdk.initSurvey();\n      SurveyManager.addSurvey(this.ccsdk.surveyToken);\n    } else {\n\n    }\n  }\n\n  TriggerPopUpByUTMParameter() {\n    let utmP = this.utm.split(\"=\");\n    let utmVal = Cookie.getParameterByName(utmP[0], undefined); \n    //!(window as any).globalSurveyRunning && \n    if(!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.utmParamTrigger && utmVal === utmP[1]){\n      this.utmParamTrigger = true;\n      \n      // this.ccsdk.initSurvey();\n      SurveyManager.addSurvey(this.ccsdk.surveyToken);\n    }\n  }\n\n  resetTriggers() {\n    this.pageCountTrigger = false;\n    this.pageTimeTrigger = false;\n    this.siteTimeTrigger = false;\n    this.urlParamTrigger = false;\n    this.scrollPixelsTrigger = false;\n  }\n}\n\nexport { Triggers };\n\n\n// function triggerHandler(surveyHandler) {\n//   //survey specific Trigger Handlers\n//   // self.surveyRunning = self.util.get('#' + self.surveyToken  + \"-survey\").length == 1;\n  // Cookie.set(Constants.CCTriggerPageElapsedTime, new Date(), undefined, window.location.href);\n  // Cookie.set(Constants.CCTriggerSiteElapsedTime, new Date(), undefined, undefined);\n//   surveyHandler.triggers.TriggerPopUpByTimeSpentOnSite(surveyHandler.siteInterval);\n//   // surveyHandler.surveyRunning = surveyHandler.util.get('#' + self.surveyToken  + \"-survey\").length == 1;\n//   surveyHandler.triggers.TriggerPopUpByTimeSpentOnPage(surveyHandler.pageInterval);\n// }\n\n//call below functions when survey is locked and loaded.\n// self.triggers.TriggerPopUpByURLPattern(/xyz=33/);\n// self.triggers.TriggerPopUpByUTMParameter();\n// self.triggerInterval = setInterval(self.triggerHandler, 1000, self);\n\n\n// WEBPACK FOOTER //\n// ./src/Triggers.ts","class TriggerUtils {\r\n\r\n\r\n    public static checkInUrl(inUrl : RegExp) {\r\n        return window.location.href.match(inUrl) != null && window.location.href.match(inUrl).length > 0;\r\n    }\r\n\r\n    public static checkTimeCondition(pageTime : number, pageStartTime : number, minPageTime : number) {\r\n        return Math.round((pageTime - pageStartTime) / 1000) > minPageTime;\r\n    }\r\n\r\n    public static checkScroll(scrollNow : number, minScrollPixels : number) {\r\n        return scrollNow > minScrollPixels;\r\n    }\r\n\r\n    public static checkPageCount(pageCount : number, minPageCount : number) {\r\n        return pageCount >= minPageCount;\r\n    }\r\n}\r\n\r\nexport { TriggerUtils };\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/TriggerUtils.ts"],"sourceRoot":""}